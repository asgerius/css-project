[{"tags": ["rust"], "comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1452740212, "post_id": 34777302, "comment_id": 57306819, "body": "Incidentally, mutually exclusive features should be done with a single feature rather than two independent ones e.g. test <code>feature = &quot;mmap&quot;</code> and <code>not(feature = &quot;mmap&quot;)</code>. Specifically, a user of the crate can enable both <code>no_mmap</code> and <code>mmap_enabled</code>, which seems like it may be problematic."}, {"owner": {"reputation": 1700, "user_id": 1337526, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/GlCBy.jpg?s=128&g=1", "display_name": "Adam Miller", "link": "https://stackoverflow.com/users/1337526/adam-miller"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1452742311, "post_id": 34777302, "comment_id": 57307289, "body": "I had thought about that, and 1) the package is internal and 2) the code is exclusive, in the sense that one is not evaluated if the other is."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1452744415, "post_id": 34777302, "comment_id": 57307809, "body": "Cool! Sounds like you&#39;ve got it all under control. (Was just making sure you knew of the trade-offs.)"}], "answers": [{"comments": [{"owner": {"reputation": 1700, "user_id": 1337526, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/GlCBy.jpg?s=128&g=1", "display_name": "Adam Miller", "link": "https://stackoverflow.com/users/1337526/adam-miller"}, "edited": false, "score": 1, "creation_date": 1452720836, "post_id": 34777406, "comment_id": 57299999, "body": "That&#39;s how you include or disclude an entire module. But I have a small body of code that must be exchanged in the middle of a function. So that syntax and definition won&#39;t work."}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 1700, "user_id": 1337526, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/GlCBy.jpg?s=128&g=1", "display_name": "Adam Miller", "link": "https://stackoverflow.com/users/1337526/adam-miller"}, "edited": false, "score": 0, "creation_date": 1452720888, "post_id": 34777406, "comment_id": 57300021, "body": "I understand. What I&#39;m highlighting here is the syntax of how to test for a <i>feature</i>, i.e. the thing inside the cfg. It should be <code>feature = &quot;name&quot;</code>, not just <code>cfg(name)</code>."}, {"owner": {"reputation": 1700, "user_id": 1337526, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/GlCBy.jpg?s=128&g=1", "display_name": "Adam Miller", "link": "https://stackoverflow.com/users/1337526/adam-miller"}, "edited": false, "score": 0, "creation_date": 1452720983, "post_id": 34777406, "comment_id": 57300069, "body": "I literally was writing an answer to my own question when you wrote that response that included that. You pointed out the correct way to do it."}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 5, "last_activity_date": 1535636194, "last_edit_date": 1535636194, "creation_date": 1452720641, "answer_id": 34777406, "question_id": 34777302, "link": "https://stackoverflow.com/questions/34777302/example-of-how-to-use-conditional-compilation-macros-in-rust/34777406#34777406", "title": "Example of how to use Conditional Compilation Macros in Rust", "body": "<p>The correct way to test for a feature is <code>feature = \"name\"</code>, as you can see in <a href=\"https://doc.rust-lang.org/book/first-edition/conditional-compilation.html\" rel=\"nofollow noreferrer\">the documentation you linked</a> if you scroll a bit:</p>\n\n<blockquote>\n  <p>As for how to enable or disable these switches, if you\u2019re using Cargo,\n  they get set in the <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\" rel=\"nofollow noreferrer\"><code>[features]</code> section</a> of your <code>Cargo.toml</code>:</p>\n  \n  <pre class=\"lang-none prettyprint-override\"><code>[features]\n# no features by default\ndefault = []\n\n# Add feature \"foo\" here, then you can use it. \n# Our \"foo\" feature depends on nothing else.\nfoo = []\n</code></pre>\n  \n  <p>When you do this, Cargo passes along a flag to <code>rustc</code>:</p>\n  \n  <pre class=\"lang-none prettyprint-override\"><code>--cfg feature=\"${feature_name}\"\n</code></pre>\n  \n  <p>The sum of these <code>cfg</code> flags will determine which ones get activated,\n  and therefore, which code gets compiled. Let\u2019s take this code:</p>\n\n<pre><code>#[cfg(feature = \"foo\")]\nmod foo {\n}\n</code></pre>\n</blockquote>\n\n<p>In your case using the <code>cfg!</code> macro, this would map to <code>cfg!(feature = \"foo\")</code>.</p>\n"}], "owner": {"reputation": 1700, "user_id": 1337526, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/GlCBy.jpg?s=128&g=1", "display_name": "Adam Miller", "link": "https://stackoverflow.com/users/1337526/adam-miller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2862, "favorite_count": 1, "accepted_answer_id": 34777406, "answer_count": 1, "score": 3, "last_activity_date": 1535636194, "creation_date": 1452720314, "last_edit_date": 1535635934, "question_id": 34777302, "link": "https://stackoverflow.com/questions/34777302/example-of-how-to-use-conditional-compilation-macros-in-rust", "title": "Example of how to use Conditional Compilation Macros in Rust", "body": "<p>I've followed <a href=\"https://doc.rust-lang.org/reference/attributes.html#conditional-compilation\" rel=\"nofollow noreferrer\">quite a bit</a> of <a href=\"https://doc.rust-lang.org/stable/rust-by-example/attribute/cfg.html\" rel=\"nofollow noreferrer\">the documentation</a> and tried to <a href=\"https://doc.rust-lang.org/book/first-edition/conditional-compilation.html\" rel=\"nofollow noreferrer\">reuse an example</a>, but I can't get my code to work. </p>\n\n<p>My Cargo.toml looks like this:</p>\n\n<pre><code>[package]\nname = \"Blahblah\"\nversion = \"0.3.0\"\nauthors = [\"ergh &lt;derngummit@ahwell.com\"]\n[dependencies]\n\n[[bin]]\nname = \"target\"\npath = \"src/main.rs\"\n\n[features]\ndefault=[\"mmap_enabled\"]\nno_mmap=[]\nmmap_enabled=[]\n</code></pre>\n\n<p>I'd like to test my code locally with a different buffer origin than mmap based on what feature configuration I pass to the <code>cargo build</code> command. I have this in my code:</p>\n\n<pre><code>if cfg!(mmap_enabled) {\n    println!(\"mmap_enabled bro!\");\n    ...\n}\nif cfg!(no_mmap) {\n    println!(\"now it's not\");\n    ...\n}\n</code></pre>\n\n<p>The compiler doesn't see the code in either of the <code>if</code> statement bodies, so   I know that both of the <code>cfg!</code> statements are evaluating to false. Why?</p>\n\n<p>I've read <a href=\"https://stackoverflow.com/questions/24297154/conditional-compilation-in-rust/\">Conditional compilation in Rust 0.10?</a> and I know it's not an exact duplicate because I'm looking for a functioning example.</p>\n"}, {"tags": ["rust", "iterator", "lazy-evaluation"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1452686742, "post_id": 34765967, "comment_id": 57277379, "body": "I&#39;m not really sure what you are trying to achieve. It&#39;s not clear what the <code>obj</code> variable&#39;s type is. Please provide a full MCVE that shows your error. Side-note: you should probably just do a <code>for o in &amp;mut obj.numbers {}</code> and do your work in the loop"}, {"owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1452688318, "post_id": 34765967, "comment_id": 57278480, "body": "Sorry, I looked into the OP and found that I simplified to the point when it made no sense. Proper version is in the update."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1452688612, "post_id": 34765967, "comment_id": 57278637, "body": "You say &quot;works fine&quot; but it fetches the first element of the iterator and sorts it. Is it the desired result? <code>.next()</code> is a much clearer way of feching the first element, instead of using <code>.find()</code>."}, {"owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "edited": false, "score": 0, "creation_date": 1452688897, "post_id": 34765967, "comment_id": 57278829, "body": "No, I missed that part, it&#39;s not an intended behavior."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 5, "last_activity_date": 1565618072, "last_edit_date": 1565618072, "creation_date": 1452687792, "answer_id": 34766646, "question_id": 34765967, "link": "https://stackoverflow.com/questions/34765967/how-do-i-cope-with-lazy-iterators/34766646#34766646", "title": "How do I cope with lazy iterators?", "body": "<blockquote>\n  <p>I don't understand why this variation with <code>iter_mut()</code> works fine:</p>\n\n<pre><code>a.b.iter_mut().find(|b| b == b).map(|b| b.c.sort());\n</code></pre>\n</blockquote>\n\n<p>It works because <code>find</code> is not lazy; it's an iterator consumer. It returns an <code>Option</code> not an <code>Iterator</code>. This might be why it is confusing you, because <code>Option</code> also has a <code>map</code> method, which is what you are using here.</p>\n\n<hr>\n\n<p>As others have said, <code>map</code> is intended for transforming data, without modifying it and without any other side-effects. If you really want to use <code>map</code>, you can map over the collection and assign it back:</p>\n\n<pre><code>fn main() {\n    let mut a = A { b: Vec::new() };\n    let mut b = B { c: vec![5, 2, 3] };\n    a.b.push(b);\n\n    a.b =\n        a.b.into_iter()\n            .map(|mut b| {\n                b.c.sort();\n                b\n            })\n            .collect();\n}\n</code></pre>\n\n<p>Note that vector's <code>sort</code> method returns <code>()</code>, so you have to explicitly return the sorted vector from the mapping function.</p>\n"}, {"comments": [{"owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "edited": false, "score": 1, "creation_date": 1452689107, "post_id": 34766697, "comment_id": 57278962, "body": "So <code>for b in a.b.iter_mut() { b.c.sort(); }</code> is the idiomatic way of doing this in Rust? I was under the impression that iterators should be used instead of for loops whenever possible."}, {"owner": {"reputation": 7519, "user_id": 5747548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/45e0667746a2b2050babf6e83ce467a3?s=128&d=identicon&r=PG&f=1", "display_name": "jkiiski", "link": "https://stackoverflow.com/users/5747548/jkiiski"}, "reply_to_user": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "edited": false, "score": 3, "creation_date": 1452689836, "post_id": 34766697, "comment_id": 57279440, "body": "Map is used when you have a vector and you want its contents in a different format without modifying the original vector. If you want to destructively modify the vector, you should use a loop."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "edited": false, "score": 0, "creation_date": 1452689936, "post_id": 34766697, "comment_id": 57279510, "body": "@andreyg, yes, that would be the idiomatic way, and no, iterators should not be always used instead of for loops - this is not actually possible because iterators are lazy and for loop is not. You should use iterator transformers when appropriate, but if you need to process results in some non-standard way (e.g. when &quot;terminal&quot; operations like <code>fold()</code>, <code>find()</code> or others are not appropriate) you have to use <code>for</code> loop."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1452699819, "post_id": 34766697, "comment_id": 57286660, "body": "The for loop is a language feature that exists solely for use with iterators."}], "tags": [], "owner": {"reputation": 7519, "user_id": 5747548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/45e0667746a2b2050babf6e83ce467a3?s=128&d=identicon&r=PG&f=1", "display_name": "jkiiski", "link": "https://stackoverflow.com/users/5747548/jkiiski"}, "is_accepted": true, "score": 10, "last_activity_date": 1565618000, "last_edit_date": 1565618000, "creation_date": 1452687937, "answer_id": 34766697, "question_id": 34765967, "link": "https://stackoverflow.com/questions/34765967/how-do-i-cope-with-lazy-iterators/34766697#34766697", "title": "How do I cope with lazy iterators?", "body": "<p>As the book you linked to says: </p>\n\n<blockquote>\n  <p>If you are trying to execute a closure on an iterator for its side effects, use <code>for</code> instead.</p>\n</blockquote>\n\n<p>That way it works, and it's much clearer to anyone reading the code. You should use <code>map</code> when you want to transform a vector to a different one.</p>\n"}, {"comments": [{"owner": {"reputation": 4967, "user_id": 13161155, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4SPLU.jpg?s=128&g=1", "display_name": "Yagiz Degirmenci", "link": "https://stackoverflow.com/users/13161155/yagiz-degirmenci"}, "edited": false, "score": 0, "creation_date": 1614977959, "post_id": 57373411, "comment_id": 117559806, "body": "YOU ARE AWESOME"}], "tags": [], "owner": {"reputation": 873, "user_id": 2779495, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7ST72.jpg?s=128&g=1", "display_name": "shyan1", "link": "https://stackoverflow.com/users/2779495/shyan1"}, "is_accepted": false, "score": 3, "last_activity_date": 1565099789, "last_edit_date": 1565099789, "creation_date": 1565085258, "answer_id": 57373411, "question_id": 34765967, "link": "https://stackoverflow.com/questions/34765967/how-do-i-cope-with-lazy-iterators/57373411#57373411", "title": "How do I cope with lazy iterators?", "body": "<p>I use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.for_each\" rel=\"nofollow noreferrer\"><code>for_each</code></a>. \nAccording to the doc:</p>\n\n<blockquote>\n  <p>It is equivalent to using a <code>for</code> loop on the iterator, although <code>break</code> and <code>continue</code> are not possible from a closure. It's generally more idiomatic to use a <code>for</code> loop, but <code>for_each</code> may be more legible when processing items at the end of longer iterator chains. In some cases <code>for_each</code> may also be faster than a loop, because it will use internal iteration on adaptors like <code>Chain</code>.</p>\n</blockquote>\n"}], "owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4173, "favorite_count": 3, "accepted_answer_id": 34766697, "answer_count": 3, "score": 4, "last_activity_date": 1565618072, "creation_date": 1452685814, "last_edit_date": 1565617954, "question_id": 34765967, "link": "https://stackoverflow.com/questions/34765967/how-do-i-cope-with-lazy-iterators", "title": "How do I cope with lazy iterators?", "body": "<p>I'm trying to sort an array with a <code>map()</code> over an iterator.</p>\n\n<pre><code>struct A {\n    b: Vec&lt;B&gt;,\n}\n\n#[derive(PartialEq, Eq, PartialOrd, Ord)]\nstruct B {\n    c: Vec&lt;i32&gt;,\n}\n\nfn main() {\n    let mut a = A { b: Vec::new() };\n\n    let b = B { c: vec![5, 2, 3] };\n    a.b.push(b);\n\n    a.b.iter_mut().map(|b| b.c.sort());\n}\n</code></pre>\n\n<p>Gives the warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused `std::iter::Map` that must be used\n  --&gt; src/main.rs:16:5\n   |\n16 |     a.b.iter_mut().map(|b| b.c.sort());\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: #[warn(unused_must_use)] on by default\n   = note: iterators are lazy and do nothing unless consumed\n</code></pre>\n\n<p>Which is true, <code>sort()</code> isn't actually called here. This warning is described in the <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/iterators.html\" rel=\"nofollow noreferrer\">book</a>, but I don't understand why this variation with <code>iter_mut()</code> works fine:</p>\n\n<pre><code>a.b.iter_mut().find(|b| b == b).map(|b| b.c.sort());\n</code></pre>\n"}, {"tags": ["types", "enums", "rust", "algebraic-data-types"], "answers": [{"comments": [{"owner": {"reputation": 4664, "user_id": 2407870, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a5563b966d383529a65612e6590f957f?s=128&d=identicon&r=PG", "display_name": "Chris Middleton", "link": "https://stackoverflow.com/users/2407870/chris-middleton"}, "edited": false, "score": 1, "creation_date": 1452685099, "post_id": 34765047, "comment_id": 57276325, "body": "Nice, thank you. It seems like though there is not a way to make an existing BlankDoc or UrlDoc be matched as a <code>Doc</code> without wrapping it. Is that correct? Another idea I had which would sort of accomplish that goal was to make an empty <code>Doc</code> trait, but I see that that is not allowed."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 4664, "user_id": 2407870, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a5563b966d383529a65612e6590f957f?s=128&d=identicon&r=PG", "display_name": "Chris Middleton", "link": "https://stackoverflow.com/users/2407870/chris-middleton"}, "edited": false, "score": 0, "creation_date": 1452691306, "post_id": 34765047, "comment_id": 57280417, "body": "I&#39;m not sure what you are trying to do. You can do <a href=\"https://gist.github.com/4dd9264949d02e6103e1\" rel=\"nofollow noreferrer\">this with a trait</a>. But if you want to have a function that decides in his body, like in the first example I gave in the answer, if the Doc is a BlankDoc or a UrlDoc, you have more limited options. There is <a href=\"https://doc.rust-lang.org/stable/std/any/trait.Any.html\" rel=\"nofollow noreferrer\">Any</a> but in general introspection on traits in Rust is not particularly good or idiomatic"}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 4664, "user_id": 2407870, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a5563b966d383529a65612e6590f957f?s=128&d=identicon&r=PG", "display_name": "Chris Middleton", "link": "https://stackoverflow.com/users/2407870/chris-middleton"}, "edited": false, "score": 1, "creation_date": 1452694652, "post_id": 34765047, "comment_id": 57282763, "body": "@ChrisMiddleton here&#39;s an <a href=\"http://is.gd/Xyr4DK\" rel=\"nofollow noreferrer\">example with Any</a>, for learning purposes, but it&#39;s really rare that you would do it this way in Rust. This might be what you had in mind with the mention to the empty Doc trait in your comment?"}, {"owner": {"reputation": 4664, "user_id": 2407870, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a5563b966d383529a65612e6590f957f?s=128&d=identicon&r=PG", "display_name": "Chris Middleton", "link": "https://stackoverflow.com/users/2407870/chris-middleton"}, "edited": false, "score": 0, "creation_date": 1452709861, "post_id": 34765047, "comment_id": 57293720, "body": "Thanks for the detail, the way you specified in your answer is definitely better."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": true, "score": 7, "last_activity_date": 1452683189, "creation_date": 1452683189, "answer_id": 34765047, "question_id": 34764702, "link": "https://stackoverflow.com/questions/34764702/use-existing-types-in-an-enum-in-rust/34765047#34765047", "title": "Use existing types in an enum in Rust", "body": "<p>You can wrap the existing structs in an enum. Eg</p>\n\n<pre><code>enum Doc&lt;'a&gt; {\n    Blank(BlankDoc),\n    Url(UrlDoc&lt;'a&gt;),\n}\n</code></pre>\n\n<p>then you can do for instance:</p>\n\n<pre><code>fn test&lt;'a&gt;(doc: Doc&lt;'a&gt;) {\n    match doc {\n        Doc::Blank( BlankDoc { width: w, height: h }) =&gt;\n            println!(\"BlankDoc with w:{}, h:{}\", w, h),\n        Doc::Url( UrlDoc { url: u }) =&gt;\n            println!(\"UrlDoc with url:{}\", u),\n    }\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/rlIgLx\" rel=\"noreferrer\">full playground example</a></p>\n"}], "owner": {"reputation": 4664, "user_id": 2407870, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a5563b966d383529a65612e6590f957f?s=128&d=identicon&r=PG", "display_name": "Chris Middleton", "link": "https://stackoverflow.com/users/2407870/chris-middleton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1028, "favorite_count": 1, "accepted_answer_id": 34765047, "answer_count": 1, "score": 10, "last_activity_date": 1452683189, "creation_date": 1452682242, "question_id": 34764702, "link": "https://stackoverflow.com/questions/34764702/use-existing-types-in-an-enum-in-rust", "title": "Use existing types in an enum in Rust", "body": "<p>Say I have two structs:</p>\n\n<pre><code>struct BlankDoc {\n    width: u32,\n    height: u32\n}\n\nstruct UrlDoc&lt;'a&gt; {\n    url: &amp;str&lt;'a&gt;\n}\n</code></pre>\n\n<p>Is there some way to use enums to make a <code>Doc</code> type that will be either a <code>BlankDoc</code> or a <code>UrlDoc</code>, without having to reimplement (copy) all of their fields?</p>\n\n<p>I was thinking something like this:</p>\n\n<pre><code>enum Doc {\n    &amp;BlankDoc\n    &amp;UrlDoc\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>type Doc = BlankDoc|UrlDoc;\n</code></pre>\n\n<p>(Obviously neither of these ways exist.)</p>\n\n<p>What's the idiomatic way to model this in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452682071, "post_id": 34764555, "comment_id": 57274233, "body": "Check the type of <code>x</code> with <code>let _: () = x;</code>, most likely its type is <code>&amp;i32</code> and I am sure you can take it from here."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452682303, "post_id": 34764555, "comment_id": 57274398, "body": "Are you sure thats the error? <code>min</code> returns <code>Option&lt;Self::Item&gt;</code>... I assume you&#39;re unwrapping that and didn&#39;t include it in your snippet?"}, {"owner": {"reputation": 6831, "user_id": 501800, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/5fc72638da7598b350733c5a51fce596?s=128&d=identicon&r=PG", "display_name": "Muhammad Lukman Low", "link": "https://stackoverflow.com/users/501800/muhammad-lukman-low"}, "edited": false, "score": 0, "creation_date": 1452682730, "post_id": 34764555, "comment_id": 57274680, "body": "Sorry added the missing sections."}], "answers": [{"comments": [{"owner": {"reputation": 6831, "user_id": 501800, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/5fc72638da7598b350733c5a51fce596?s=128&d=identicon&r=PG", "display_name": "Muhammad Lukman Low", "link": "https://stackoverflow.com/users/501800/muhammad-lukman-low"}, "edited": false, "score": 0, "creation_date": 1452700966, "post_id": 34766991, "comment_id": 57287563, "body": "What does &quot;&amp;1&quot; mean ?"}, {"owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "reply_to_user": {"reputation": 6831, "user_id": 501800, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/5fc72638da7598b350733c5a51fce596?s=128&d=identicon&r=PG", "display_name": "Muhammad Lukman Low", "link": "https://stackoverflow.com/users/501800/muhammad-lukman-low"}, "edited": false, "score": 0, "creation_date": 1452702276, "post_id": 34766991, "comment_id": 57288567, "body": "@LowKianSeong It&#39;a reference to the temporary value 1. Your <code>min</code> returns a reference, so you have to compare that with another reference. <code>&amp;1</code> is a reference and it works, <code>1</code> alone is not a <code>&amp;i32</code> is a <code>i32</code> so it doesn&#39;t compile."}, {"owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "edited": false, "score": 0, "creation_date": 1452852015, "post_id": 34766991, "comment_id": 57359233, "body": "Another possible fix is to not return a reference: change <code>-&gt; &amp;i32</code> to <code>-&gt; i32</code> and the second <code>x</code> to <code>*x</code>."}], "tags": [], "owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "is_accepted": true, "score": 4, "last_activity_date": 1452688758, "creation_date": 1452688758, "answer_id": 34766991, "question_id": 34764555, "link": "https://stackoverflow.com/questions/34764555/what-is-wrong-with-my-min-function/34766991#34766991", "title": "What is wrong with my min function?", "body": "<p>Your <code>min</code> is ok (assuming you want to return a <code>&amp;i32</code>), the error is in the <code>assert</code>.\nThis is correct:</p>\n\n<pre><code>assert_eq!(&amp;1, min(&amp;input_array));\n</code></pre>\n"}], "owner": {"reputation": 6831, "user_id": 501800, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/5fc72638da7598b350733c5a51fce596?s=128&d=identicon&r=PG", "display_name": "Muhammad Lukman Low", "link": "https://stackoverflow.com/users/501800/muhammad-lukman-low"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 1, "accepted_answer_id": 34766991, "answer_count": 1, "score": 0, "last_activity_date": 1452693545, "creation_date": 1452681836, "last_edit_date": 1452693545, "question_id": 34764555, "link": "https://stackoverflow.com/questions/34764555/what-is-wrong-with-my-min-function", "title": "What is wrong with my min function?", "body": "<p>I am trying to write a function that returns the minimum number from an array: </p>\n\n<p>Function definition:</p>\n\n<pre><code>pub fn min(input_array: &amp;[i32]) -&gt; &amp;i32 {\n    let x = input_array.iter().min().unwrap();\n    x\n}\n</code></pre>\n\n<p>Test:</p>\n\n<pre><code>fn test_min() {\n    let input_array = [1, 2, 3, 4];\n    assert_eq!(1, functional::min(&amp;input_array));\n}\n</code></pre>\n\n<p>But when I run it I get the error: </p>\n\n<pre><code>    &lt;std macros&gt;:5:8: 5:33 error: the trait `core::cmp::PartialEq&lt;&amp;i32&gt;` is not implemented for the type `_` [E0277]\n&lt;std macros&gt;:5 if ! ( * left_val == * right_val ) {\n                      ^~~~~~~~~~~~~~~~~~~~~~~~~\nsrc/functional.rs:104:5: 104:50 note: in this expansion of assert_eq! (defined in &lt;std macros&gt;)\n&lt;std macros&gt;:5:8: 5:33 help: run `rustc --explain E0277` to see a detailed explanation\nerror: aborting due to previous error\nCould not compile `gettingrusty`. \n</code></pre>\n"}, {"tags": ["c", "rust", "translate"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 3, "creation_date": 1452679331, "post_id": 34762541, "comment_id": 57272271, "body": "Please provide an <a href=\"http://stackoverflow.com/help/mcve\">MCVE</a> of what you already tried. Also you did neither specify types nor start values, that makes the solution space quite amusing, but not useful to you."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452682219, "post_id": 34762541, "comment_id": 57274341, "body": "As ker noted, please provide a <b>Rust</b> example; even a naive translation is fine as long as it compiles and is functionally correct. Rust supports the <code>break</code> statement and can iterate over integer ranges, so it seems that it has everything you need..."}, {"owner": {"reputation": 2296, "user_id": 911646, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/d9182e8f594a3d77c079eab5210574a3?s=128&d=identicon&r=PG", "display_name": "Markus", "link": "https://stackoverflow.com/users/911646/markus"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452685726, "post_id": 34762541, "comment_id": 57276727, "body": "@MatthieuM. I&#39;ve added my na&#239;ve implementation, but I do have some questions about it. And I was really hoping to see how a more experienced Rust programmer would implement the solution. Thanks"}], "answers": [{"tags": [], "owner": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "is_accepted": false, "score": 0, "last_activity_date": 1452692359, "creation_date": 1452692359, "answer_id": 34768198, "question_id": 34762541, "link": "https://stackoverflow.com/questions/34762541/translate-performance-critical-loop-from-c-to-rust/34768198#34768198", "title": "Translate performance critical loop from C to Rust", "body": "<p>Since it is critical to keep looking from both sides simultaneously, I don\u2019t think there is an easy way to avoid having mutable variables. </p>\n\n<p>One thing that can improve readability is to use <a href=\"https://doc.rust-lang.org/std/option/\" rel=\"nofollow\"><code>option</code></a> instead of negative numbers. Otherwise the code is fine.</p>\n\n<p>(Another thing you probably could do is to break the loop when the indices meet in the middle, if this means that there is no solution for your problem, but that\u2019s not Rust specific.)</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1452709455, "post_id": 34773796, "comment_id": 57293445, "body": "While making the variable an <code>Option</code> is likely to make the value larger, it may or may not have any perceived speed difference. I&#39;d certainly use the <code>Option</code> first and benchmark it without it. Especially as the size of <code>i</code> might already be larger than needed in order to leave room for <code>-1</code> as a sentinel value without taking up real values."}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 2, "last_activity_date": 1452707971, "last_edit_date": 1495541899, "creation_date": 1452707971, "answer_id": 34773796, "question_id": 34762541, "link": "https://stackoverflow.com/questions/34762541/translate-performance-critical-loop-from-c-to-rust/34773796#34773796", "title": "Translate performance critical loop from C to Rust", "body": "<p><code>cond_left</code> and <code>cond_right</code> are important to answer the performance question. For example, will replacing an index with an iterator help? Not going to tell without knowing what <code>cond_left</code> does.</p>\n\n<p>The other concern you have is that <code>first_edge</code> and <code>first_edge_right</code> are mutable. The proposed <a href=\"https://github.com/rust-lang/rfcs/issues/961\" rel=\"nofollow noreferrer\">RFC allowing loops to return a value</a> could be an elegant way to solve this problem. Right now you could emulate the loop return with a closure:</p>\n\n<pre><code>let (_first_edge, _first_edge_right): (i32, i32) = (||{\n    let (mut first_edge, mut first_edge_right) = (None, None);\n    // ...\n    return (first_edge.unwrap(), first_edge_right.unwrap());\n})();\n</code></pre>\n\n<p>(<a href=\"http://is.gd/G3NCjL\" rel=\"nofollow noreferrer\">In Playground</a>).</p>\n\n<p>Replacing <code>-1</code> with <code>None</code> will likely make the variable larger. See <a href=\"https://stackoverflow.com/questions/30414068/can-i-use-the-null-pointer-optimization-for-my-own-non-pointer-types\">Can I use the &quot;null pointer optimization&quot; for my own non-pointer types?</a>.</p>\n\n<p>Splitting this loop into two loops, one getting the <code>first_edge</code> and another examining the remaining range to get the <code>first_edge_right</code> seems like the right thing to do, but the CPU branch prediction will likely minimize the impact.</p>\n"}, {"comments": [{"owner": {"reputation": 2296, "user_id": 911646, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/d9182e8f594a3d77c079eab5210574a3?s=128&d=identicon&r=PG", "display_name": "Markus", "link": "https://stackoverflow.com/users/911646/markus"}, "edited": false, "score": 0, "creation_date": 1452803502, "post_id": 34777002, "comment_id": 57341463, "body": "Thank you a lot! That was very helpful."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1452719180, "creation_date": 1452719180, "answer_id": 34777002, "question_id": 34762541, "link": "https://stackoverflow.com/questions/34762541/translate-performance-critical-loop-from-c-to-rust/34777002#34777002", "title": "Translate performance critical loop from C to Rust", "body": "<p>You need to be prepared to make a choice:</p>\n\n<ol>\n<li><blockquote>\n  <p>How would you translate that into Rust in a performant way?</p>\n</blockquote></li>\n<li><blockquote>\n  <p>while performance is important, readability is of course even more important</p>\n</blockquote></li>\n</ol>\n\n<p>Which is actually more important to you? Here's how I would write the code, assuming that I've understood what you are asking for:</p>\n\n<pre><code>fn left_condition(i: usize) -&gt; bool {\n    i &gt; 1000\n}\n\nfn right_condition(i: usize) -&gt; bool {\n    i % 73 == 0\n}\n\nfn main() {\n    let start_index = 300;\n    let asize = 10000000;\n\n    let left = (start_index..asize).position(left_condition);\n    let right = (start_index..asize).rev().position(right_condition);\n\n    println!(\"{:?}, {:?}\", left, right);\n}\n</code></pre>\n\n<p>We iterate once from left-to-right and once from right-to-left. My <em>gut</em> tells me that this will provide code with simple branch prediction that accesses memory in a linear manner, both of which should be optimizable.</p>\n\n<p>However, the variable name <code>asize</code> gives me pause. It certainly <em>sounds</em> like an abbreviation of \"array size\". If that's the case, then I would 100% recommend using slices instead of array indices. Why? Because array access (<code>foo[0]</code>) usually has overhead of bounds checking. I'd write something with slices:</p>\n\n<pre><code>let data = vec![0; 10_000_000];\nlet start_index = 300;\n\nlet slice = &amp;data[start_index..];\n\nlet left = slice.iter().position(|&amp;i| left_condition(i));\nlet right = slice.iter().rev().position(|&amp;i| right_condition(i));\n</code></pre>\n\n<p>However, there's only one possible true answer to your question:</p>\n\n<p>Use a profiler</p>\n\n<h3>Use a profiler</h3>\n\n<h2>Use a profiler</h2>\n\n<h1>Use a profiler</h1>\n\n<p>Only knowing your actual data, your actual implementations of the conditions, <em>the rest of the code you are running</em>, etc., can you actually know how fast something will be.</p>\n\n<blockquote>\n  <p>Therefore it has been a good thing to only have one loop instead of two - in order to avoid search from the beginning again</p>\n</blockquote>\n\n<p>This is nonintuitive to me, so I'd want to see profiling results that back up the claim.</p>\n"}], "owner": {"reputation": 2296, "user_id": 911646, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/d9182e8f594a3d77c079eab5210574a3?s=128&d=identicon&r=PG", "display_name": "Markus", "link": "https://stackoverflow.com/users/911646/markus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 0, "accepted_answer_id": 34777002, "answer_count": 3, "score": 1, "last_activity_date": 1459882344, "creation_date": 1452676405, "last_edit_date": 1459882344, "question_id": 34762541, "link": "https://stackoverflow.com/questions/34762541/translate-performance-critical-loop-from-c-to-rust", "title": "Translate performance critical loop from C to Rust", "body": "<p>I'm experimenting with rewriting some old C code into Rust - which I'm new to. One recurring issue I have is that the C code has a lot of loops like this:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>for (i = startIndex; i &lt; asize; i++)   \n{\n    if (firstEdge &lt; 0 &amp;&amp; condLeft(i))\n    {\n        firstEdge = i;\n    }\n\n    RightIndex = asize-1-i;\n    if (firstEdgeRight &lt; 0 &amp;&amp; condRight(RightIndex))\n    {\n        firstEdgeRight = RightIndex;\n    }\n\n    // Found both edges\n    if (firstEdge &gt;= 0 &amp;&amp; firstEdgeRight &gt;= 0) {\n        break;  \n    }\n}\n</code></pre>\n\n<p>How would you translate that into Rust in a performant way? My issue is that while I could probably get the functionality I want I'm not sure how to do it obtain (roughly) the same speed.</p>\n\n<p>This part of the code is the main bottleneck in our code (this part of the code at least) and when translating it would like to keep the following properties.</p>\n\n<ol>\n<li>The loop should break ASAP since <code>asize</code> can be very large.</li>\n<li>Both <code>firstEdge</code> and <code>firstEdgeRight</code> are found roughly at the same time. Therefore it has been a good thing to only have one loop instead of two - in order to avoid search from the beginning again (even though I think this solution kills the prefetcher (but I'm not sure, maybe the old machine running the code doesn't even have a prefetcher)).</li>\n</ol>\n\n<p>While performance is important, readability is of course even more important :)</p>\n\n<p><strong>EDIT</strong> Ok, here is a possible Rust implementation by me (<code>cond_right()</code> and <code>cond_left()</code> are left out).\nThe things I think about is:</p>\n\n<ol>\n<li>Is this how other people would write it if they had to implement it from scratch?</li>\n<li>Do I really need to make <code>first_edge</code> and <code>first_edge_right</code> mutable? They are in my implementation, but it feels wrong to me since they are only assigned once.</li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut first_edge = -1;\nlet mut first_edge_right = -1;\n\n// Find first edge\n\nlet start_index = 300; // or something\nlet asize = 10000000;\n\nfor i in start_index..asize {\n    if first_edge &lt; 0 &amp;&amp; cond_left(i) {\n        first_edge = i;\n    }\n\n    let right_index = asize - i -1;\n    if first_edge_right &lt; 0 &amp;&amp; cond_right(right_index) {\n        first_edge_right = right_index;\n    }\n\n    if (first_edge &gt;= 0 &amp;&amp; first_edge_right &gt;= 0) {\n        break;\n    }\n}\n</code></pre>\n"}, {"tags": ["testing", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1452672519, "post_id": 34760337, "comment_id": 57267742, "body": "the <code>test</code> crate is part of Rust. But it depends on more things than just <code>libcore</code>. Have you considered running the tests on your host instead of your target?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1452673567, "post_id": 34760337, "comment_id": 57268362, "body": "@ker: Might be valuable to run the test on the target, to validate the correct integration of the runtime notably."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1452675544, "post_id": 34760337, "comment_id": 57269599, "body": "<code>cargo test</code> like <code>cargo run</code> will always run it locally. You&#39;d need to manually compile it with <code>rustc</code> and then run the test binary on the target."}, {"owner": {"reputation": 4398, "user_id": 1056174, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GJiNL.jpg?s=128&g=1", "display_name": "Carl Patenaude Poulin", "link": "https://stackoverflow.com/users/1056174/carl-patenaude-poulin"}, "edited": false, "score": 0, "creation_date": 1452704955, "post_id": 34760337, "comment_id": 57290652, "body": "I am indeed trying to unit test my integration with the underlying platform. You&#39;re saying I should manually compile <code>test</code> and run a jury-rigged version of <code>cargo test</code>?"}], "owner": {"reputation": 4398, "user_id": 1056174, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GJiNL.jpg?s=128&g=1", "display_name": "Carl Patenaude Poulin", "link": "https://stackoverflow.com/users/1056174/carl-patenaude-poulin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 188, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1452668627, "creation_date": 1452668627, "question_id": 34760337, "link": "https://stackoverflow.com/questions/34760337/porting-test-crate-to-a-custom-target", "title": "Porting `test` crate to a custom target?", "body": "<p>I have a <a href=\"https://github.com/CRust-OS/CRust-OS/blob/043c925d6c670c515babafe87e6d86ac5d399d2d/x86_64-unknown-xen.json\" rel=\"nofollow\">custom target file</a> defined, and I'd like to run tests on it. Obviously, I'll need more than just <code>libcore</code> support, but I'm not sure exactly how much more.</p>\n\n<p>When I run <code>cargo test --target x86_64-unknown-xen</code>, I get the following error message:</p>\n\n<pre><code>src/main.rs:1:1: 1:1 error: can't find crate for `test` [E0463]\n</code></pre>\n\n<p>This suggests that <code>cargo test</code> depends on some crate named <code>test</code>, and that I should port it to my target if I want to run <code>cargo test</code>. Such a crate does not exist on crates.io, nor is it documented on doc.rust-lang.org.</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1452660321, "creation_date": 1452660321, "answer_id": 34758571, "question_id": 34758233, "link": "https://stackoverflow.com/questions/34758233/working-with-trait-objects-requiring-sized/34758571#34758571", "title": "Working with trait objects requiring sized", "body": "<p>Ok, there are a few problems here.  Working down the list of compiler errors:</p>\n\n<pre><code>&lt;anon&gt;:15:53: 15:68 error: the trait `core::marker::Sized` is not implemented for the type `HStream` [E0277]\n&lt;anon&gt;:15     let mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&lt;HStream&gt;&gt;::new()));\n                                                              ^~~~~~~~~~~~~~~\n&lt;anon&gt;:15:53: 15:68 help: see the detailed explanation for E0277\n&lt;anon&gt;:15:53: 15:68 note: `HStream` does not have a constant size known at compile-time\n&lt;anon&gt;:15:53: 15:68 note: required by `Stream`\n</code></pre>\n\n<p>Because <code>HStream</code> does not have a compile-time computable size, it cannot be substituted for the type parameter <code>T</code>.  <em>All</em> type parameters implicitly require the substituted type to be compile-time sized.  If you want to allow dynamically sized types, you need to explicitly opt-out of this implicit bound by saying something like:</p>\n\n<pre><code>&lt;T: ?Sized + HStream&gt;\n\n&lt;anon&gt;:15:53: 15:68 error: the trait `HStream` is not implemented for the type `HStream` [E0277]\n&lt;anon&gt;:15     let mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&lt;HStream&gt;&gt;::new()));\n                                                              ^~~~~~~~~~~~~~~\n&lt;anon&gt;:15:53: 15:68 help: see the detailed explanation for E0277\n&lt;anon&gt;:15:53: 15:68 note: required by `Stream`\n</code></pre>\n\n<p>A trait doesn't implement itself.  You're asking for a type which <em>implements</em> <code>HStream</code>, but <code>HStream</code> doesn't implement itself (how would it?)</p>\n\n<p>You have to provide a type which <em>does</em>.</p>\n\n<pre><code>&lt;anon&gt;:15:53: 15:68 error: the trait `HStream` cannot be made into an object [E0038]\n&lt;anon&gt;:15     let mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&lt;HStream&gt;&gt;::new()));\n                                                              ^~~~~~~~~~~~~~~\n&lt;anon&gt;:15:53: 15:68 help: see the detailed explanation for E0038\n&lt;anon&gt;:15:53: 15:68 note: the trait cannot require that `Self : Sized`\n</code></pre>\n\n<p>And here's the K-O problem: <code>HStream</code> <em>cannot</em> be used with dynamic dispatch, <em>period</em>.  It's not object safe.  This is most likely because of the <code>Clone</code> requirement.</p>\n\n<p>The \"fix\" to all of the above is to redesign your types so that the problem doesn't exist.  What that entails is impossible to know because there isn't enough context here to tell what you're trying to do.</p>\n\n<p>At a blind stab, though, here's what it might look like without generics (which you don't appear to be using, anyway):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\nuse std::collections::LinkedList;\nuse std::os::unix::io::{RawFd, AsRawFd};\n\npub trait HRecv {}\npub trait HSend {}\npub trait HStream: HRecv + HSend + AsRawFd + CloneHStream {}\n\npub trait CloneHStream { fn clone_h_stream(&amp;self) -&gt; Box&lt;HStream&gt;; }\n\nimpl&lt;T&gt; CloneHStream for T where T: 'static + Clone + HStream {\n    fn clone_h_stream(&amp;self) -&gt; Box&lt;HStream&gt; {\n        Box::new(self.clone())\n    }\n}\n\npub struct Stream {\n    pub inner: Box&lt;HStream&gt;\n}\n\npub type StreamList = Arc&lt;Mutex&lt;LinkedList&lt;Stream&gt;&gt;&gt;;\n\nfn main() {\n    let mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&gt;::new()));\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "edited": false, "score": 0, "creation_date": 1452660997, "post_id": 34758573, "comment_id": 57262883, "body": "Thanks for taking the time to answer, both answers came to same conclusion, so I went with the one that got submitted first. Thanks again :)"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 4, "last_activity_date": 1452660341, "creation_date": 1452660341, "answer_id": 34758573, "question_id": 34758233, "link": "https://stackoverflow.com/questions/34758233/working-with-trait-objects-requiring-sized/34758573#34758573", "title": "Working with trait objects requiring sized", "body": "\n\n<p>You cannot use the <code>HStream</code> type directly; it doesn't represent anything. It's only used to construct derived pointer types, such as <code>&amp;HStream</code> and <code>Box&lt;HStream&gt;</code>.</p>\n\n<p>The simplest solution would be to have a <code>LinkedList</code> of <code>Stream&lt;Box&lt;HStream&gt;&gt;</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&lt;Box&lt;HStream&gt;&gt;&gt;::new()));\n}\n</code></pre>\n\n<p>Then, we just have to implement <code>HStream</code> for <code>Box&lt;HStream&gt;</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; HRecv for Box&lt;HStream + 'a&gt; {}\nimpl&lt;'a&gt; HSend for Box&lt;HStream + 'a&gt; {}\nimpl&lt;'a&gt; AsRawFd for Box&lt;HStream + 'a&gt; {\n    fn as_raw_fd(&amp;self) -&gt; RawFd { (&amp;**self).as_raw_fd() }\n}\nimpl&lt;'a&gt; HStream for Box&lt;HStream + 'a&gt; {}\n</code></pre>\n\n<p>Note that this is missing a trait... <code>Clone</code>.</p>\n\n<p><code>Clone</code> is not object-safe, which means that it's not possible to create trait object types for that trait, such as <code>&amp;Clone</code> or <code>Box&lt;Clone&gt;</code>. <code>Clone</code> is not object-safe because its <code>clone</code> method returns <code>Self</code>, which represents the concrete type of the implementor. If you used this method through a trait object, the compiler wouldn't be able to know in advance the type of the result (it could be any of <code>Clone</code>'s implementors!).</p>\n\n<p>Since <code>HStream</code> is a subtrait of <code>Clone</code>, <code>HStream</code> is not object-safe either. The consequence is that we can't implement <code>Clone</code> at all, and types like <code>Box&lt;HStream&gt;</code> are not legal to use.</p>\n\n<p>However, we can work around this by making our own, object-safe trait. We can even automatically implement it on types that implement the standard <code>Clone</code> trait.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait BoxedHStreamClone {\n    fn boxed_clone(&amp;self) -&gt; Box&lt;HStream&gt;;\n}\n\n// Implementation for all types that implement HStream and Clone and don't hold any borrows\nimpl&lt;T: HStream + Clone + 'static&gt; BoxedHStreamClone for T {\n    fn boxed_clone(&amp;self) -&gt; Box&lt;HStream&gt; {\n        Box::new(self.clone()) as Box&lt;HStream&gt;\n    }\n}\n\n// Implementation for Box&lt;HStream + 'a&gt;, which cannot implement Clone\nimpl&lt;'a&gt; BoxedHStreamClone for Box&lt;HStream + 'a&gt; {\n    fn boxed_clone(&amp;self) -&gt; Box&lt;HStream&gt; {\n        Box::new((&amp;**self).boxed_clone()) as Box&lt;HStream&gt;\n    }\n}\n</code></pre>\n\n<p>Replace the <code>Clone</code> trait bound on <code>HStream</code> with <code>BoxedHStreamClone</code> and you're good to go!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait HStream: HRecv + HSend + AsRawFd + BoxedHStreamClone {}\n</code></pre>\n\n<p><a href=\"http://is.gd/T5z6Xv\" rel=\"nofollow\">Here's the final code:</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\nuse std::collections::LinkedList;\nuse std::os::unix::io::{RawFd, AsRawFd};\n\npub trait BoxedHStreamClone {\n    fn boxed_clone(&amp;self) -&gt; Box&lt;HStream&gt;;\n}\n\nimpl&lt;T: HStream + Clone + 'static&gt; BoxedHStreamClone for T {\n    fn boxed_clone(&amp;self) -&gt; Box&lt;HStream&gt; {\n        Box::new(self.clone()) as Box&lt;HStream&gt;\n    }\n}\n\npub trait HRecv {}\npub trait HSend {}\npub trait HStream: HRecv + HSend + AsRawFd + BoxedHStreamClone {}\npub struct Stream&lt;T: HStream&gt; {\n    pub inner: T\n}\n\npub type StreamList = Arc&lt;Mutex&lt;LinkedList&lt;Stream&lt;Box&lt;HStream&gt;&gt;&gt;&gt;&gt;;\n\nimpl&lt;'a&gt; HRecv for Box&lt;HStream + 'a&gt; {}\nimpl&lt;'a&gt; HSend for Box&lt;HStream + 'a&gt; {}\n\nimpl&lt;'a&gt; AsRawFd for Box&lt;HStream + 'a&gt; {\n    fn as_raw_fd(&amp;self) -&gt; RawFd { (&amp;**self).as_raw_fd() }\n}\n\nimpl&lt;'a&gt; BoxedHStreamClone for Box&lt;HStream + 'a&gt; {\n    fn boxed_clone(&amp;self) -&gt; Box&lt;HStream&gt; {\n        Box::new((&amp;**self).boxed_clone()) as Box&lt;HStream&gt;\n    }\n}\n\nimpl&lt;'a&gt; HStream for Box&lt;HStream + 'a&gt; {}\n\nfn main() {\n    let mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&lt;Box&lt;HStream&gt;&gt;&gt;::new()));\n}\n</code></pre>\n"}], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2262, "favorite_count": 2, "accepted_answer_id": 34758571, "answer_count": 2, "score": 5, "last_activity_date": 1452740211, "creation_date": 1452658000, "last_edit_date": 1452740211, "question_id": 34758233, "link": "https://stackoverflow.com/questions/34758233/working-with-trait-objects-requiring-sized", "title": "Working with trait objects requiring sized", "body": "<p>I'd like to have a <code>LinkedList</code> of trait object wrapper structs. The inner would be a stream type for either an Ssl or Non-Ssl stream. My hope was to pass the struct wrapper around, and as long as the inner conformed to the same trait, everything would be OK regardless of inner stream type being used.</p>\n\n<p>Simple example:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\nuse std::collections::LinkedList;\nuse std::os::unix::io::{RawFd, AsRawFd};\n\npub trait HRecv {}\npub trait HSend {}\npub trait HStream: HRecv + HSend + AsRawFd + Clone {}\npub struct Stream&lt;T: HStream&gt; {\n    pub inner: T\n}\n\npub type StreamList = Arc&lt;Mutex&lt;LinkedList&lt;Stream&lt;HStream&gt;&gt;&gt;&gt;;\n\nfn main() {\n    let mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&lt;HStream&gt;&gt;::new()));\n}\n</code></pre>\n\n<p>Produces the following error:</p>\n\n<pre><code>error: the trait 'core::marker::Sized' is not implemented for the type 'HStream' [E0277]\nlet mut list = Arc::new(Mutex::new(LinkedList::&lt;Stream&lt;HStream&gt;&gt;::new()));\n                                                ^~~~~~~~~~~~~~~\n</code></pre>\n\n<p>I've tried adding <code>+ Sized</code> to the definition of <code>HStream</code>, as well as making <code>inner</code> a <code>Box&lt;T&gt;</code>, both produce the same error.</p>\n\n<p>Is it currently possible to do this with Rust? If so, what would the syntax be?</p>\n"}, {"tags": ["rust", "hyper"], "answers": [{"comments": [{"owner": {"reputation": 6980, "user_id": 1544347, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ad87bb0303238ee876a147dacd557a1?s=128&d=identicon&r=PG", "display_name": "Markus Unterwaditzer", "link": "https://stackoverflow.com/users/1544347/markus-unterwaditzer"}, "edited": false, "score": 2, "creation_date": 1452720863, "post_id": 34758372, "comment_id": 57300013, "body": "That&#39;s not the body of the request, they&#39;re query parameters (part of the URL)."}], "tags": [], "owner": {"reputation": 47, "user_id": 5498524, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/29384e7c43b0b8ca779899c353acaf52?s=128&d=identicon&r=PG&f=1", "display_name": "hamersaw", "link": "https://stackoverflow.com/users/5498524/hamersaw"}, "is_accepted": false, "score": 0, "last_activity_date": 1452658998, "creation_date": 1452658998, "answer_id": 34758372, "question_id": 34757075, "link": "https://stackoverflow.com/questions/34757075/pass-data-for-get-request-using-hyper/34758372#34758372", "title": "Pass data for GET request using Hyper", "body": "<p>Figured it out. Turns out in a GET request you have to append the body to the request and it will automatically fill out in the packet. Below is the code to get it working.</p>\n\n<pre><code>let mut res = client.get(\"http://httpbin.org/get?screen_name=twitter\")\n    .header(Authorization(authorization_header))\n    .send().unwrap();\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 36561, "user_id": 36330, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/087bc3a6b2fe0dbbf39ca49f40e2bac1?s=128&d=identicon&r=PG", "display_name": "joeforker", "link": "https://stackoverflow.com/users/36330/joeforker"}, "edited": false, "score": 4, "creation_date": 1483131294, "post_id": 35660884, "comment_id": 70007514, "body": "As of hyper 0.9, it&#39;s <code>url.query_pairs_mut().append_pair(key, value)</code>"}], "tags": [], "owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "is_accepted": false, "score": 2, "last_activity_date": 1456517617, "creation_date": 1456517617, "answer_id": 35660884, "question_id": 34757075, "link": "https://stackoverflow.com/questions/34757075/pass-data-for-get-request-using-hyper/35660884#35660884", "title": "Pass data for GET request using Hyper", "body": "<p>As @hamersaw said, \"GET parameters\" are part of URL, in the query string. If you need to set parameters programatically (if they\u2019re not always the same), the <a href=\"https://servo.github.io/rust-url/url/struct.Url.html#method.set_query_from_pairs\" rel=\"nofollow\"><code>Url::set_query_from_pairs</code></a> method can take care of the escaping/encoding for you:</p>\n\n<pre><code>use hyper::Url;\nlet mut url = Url::parse(\"https://api.twitter.com/1.1/users/show.json\").unwrap();\nurl.set_query_from_pairs([\n    (\"screen_name\", \"twitterdev\"),\n].iter().cloned());\nlet res = client.get(url) // ...\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 5498524, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/29384e7c43b0b8ca779899c353acaf52?s=128&d=identicon&r=PG&f=1", "display_name": "hamersaw", "link": "https://stackoverflow.com/users/5498524/hamersaw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2718, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1456517617, "creation_date": 1452649600, "last_edit_date": 1452693631, "question_id": 34757075, "link": "https://stackoverflow.com/questions/34757075/pass-data-for-get-request-using-hyper", "title": "Pass data for GET request using Hyper", "body": "<p>I am working on a Twitter API for Rust and am running into issues with passing arguments to my GET request. The code I'm using for the request is given below. <code>data_body</code> is something like \"screen_name=a_user\" and the authorization header is the OAuth authorization required by Twitter (this isn't the issue as it's working with all my other requests).</p>\n\n<pre><code>let mut res = client.get(\"http://httpbin.org/get\")\n    .body(&amp;data_body[..])\n    .header(Authorization(authorization_header))\n    .header(ContentType::form_url_encoded())\n    .send().unwrap();\n</code></pre>\n\n<p>I started sending this to httpbin.org so I could see the raw request. What I'm getting back is shown below.</p>\n\n<pre><code>{\n  \"args\": {}, \n  \"headers\": {\n    \"Authorization\": \"OAuth oauth_consumer_key=\\\"\\\", oauth_nonce=\\\"RH9vZYMCbAtfQAuVh44fhlyGQfQqBCPq\\\", oauth_signature=\\\"dTbOyaURct0auVlC%2B8Y7vDFpus0%3D\\\", oauth_signature_method=\\\"HMAC-SHA1\\\", oauth_timestamp=\\\"1452648640\\\", oauth_token=\\\"\\\", oauth_version=\\\"1.0\\\"\", \n    \"Content-Type\": \"application/x-www-form-urlencoded\", \n    \"Host\": \"httpbin.org\"\n  }, \n  \"origin\": \"0.0.0.0\", \n  \"url\": \"http://httpbin.org/get\"\n}\n</code></pre>\n\n<p>The curl request given by the Twitter api docs have a data portion for the GET request below (I've replaced my keys with empty strings). I can confirm this works for the GET.</p>\n\n<pre><code>curl --get 'https://api.twitter.com/1.1/users/show.json' --data 'screen_name=twitterdev' --header 'Authorization: OAuth oauth_consumer_key=\"\", oauth_nonce=\"6a37886cb38b2f5e12dee8fd47aa097c\", oauth_signature=\"zhXDA5JbKRmw2xbJcEqK9sxuu5E%3D\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"1452647580\", oauth_token=\"\", oauth_version=\"1.0\"' --verbose\n</code></pre>\n\n<p>I've tried a bunch of different <code>ContentType</code>s from the Hyper API but can't get the args section of the HTTP request populated. I think that's the issue, but I don't have a lot of experience with HTTP so I could very well be wrong. Ultimately the request is returning a 403 (Unauthorized) which is triggered by the missing args. I know my OAuth header is being generated correctly because it's working on all the POST requests and when I copy over the nonce and timestamp from the curl command I get from the Twitter API the signature matches.</p>\n"}, {"tags": ["rust", "biginteger"], "answers": [{"comments": [{"owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "edited": false, "score": 0, "creation_date": 1452650152, "post_id": 34756973, "comment_id": 57260092, "body": "Thanks! That worked. Curious though... is there a way to figure out this answer solely based on document, instead of asking in a forum?"}, {"owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "reply_to_user": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "edited": false, "score": 1, "creation_date": 1452650407, "post_id": 34756973, "comment_id": 57260169, "body": "The <a href=\"https://doc.rust-lang.org/stable/core/\" rel=\"nofollow noreferrer\">documentation for core</a> says that <code>It is not recommended to use the core library. The stable functionality of libcore is reexported from the standard library.</code>, and provides a link to the <a href=\"https://doc.rust-lang.org/stable/std/\" rel=\"nofollow noreferrer\">std</a> docs."}], "tags": [], "owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "is_accepted": true, "score": 3, "last_activity_date": 1452648925, "creation_date": 1452648925, "answer_id": 34756973, "question_id": 34756799, "link": "https://stackoverflow.com/questions/34756799/what-is-the-workaround-for-unstable-library-feature-core-issue/34756973#34756973", "title": "What is the workaround for unstable library feature &quot;core&quot; issue?", "body": "<p>You should be able to use the <a href=\"http://doc.rust-lang.org/std/ops/trait.Add.html\" rel=\"nofollow\"><code>std::ops::Add</code></a> trait instead of <code>core::ops::Add</code>.</p>\n\n<pre><code>use std::ops::Add;\n</code></pre>\n"}], "owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 1, "accepted_answer_id": 34756973, "answer_count": 1, "score": 1, "last_activity_date": 1452695277, "creation_date": 1452647745, "last_edit_date": 1452695277, "question_id": 34756799, "link": "https://stackoverflow.com/questions/34756799/what-is-the-workaround-for-unstable-library-feature-core-issue", "title": "What is the workaround for unstable library feature &quot;core&quot; issue?", "body": "<p>I am trying to add big integers together in Rust:</p>\n\n<pre><code>extern crate core;\nuse core::ops::Add;\nuse num::bigint::{BigInt};\nuse num::integer::Integer;\n...\nlet mut big = \"8705702225074732811211966512111\".parse::&lt;BigInt&gt;().unwrap();\nlet one = \"1\".parse::&lt;BigInt&gt;().unwrap();\nbig = big.add(&amp;one);\n</code></pre>\n\n<p>I got the following error:</p>\n\n<pre><code>src\\main.rs:3:1: 3:19 error: use of unstable library feature 'core': the libcore library has not yet been scrutinized for stabilization in terms of structure and naming (see issue #27701)\nsrc\\main.rs:3 extern crate core;\n</code></pre>\n\n<p>Is there any workaround at this time? or is this entirely not doable for the time being?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 1492, "user_id": 1299804, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eb046a5fc70918c5f769865d4266c563?s=128&d=identicon&r=PG", "display_name": "Austin B", "link": "https://stackoverflow.com/users/1299804/austin-b"}, "edited": false, "score": 2, "creation_date": 1452639630, "post_id": 34755196, "comment_id": 57256924, "body": "I won&#39;t post this as an answer because I&#39;m not sure if it&#39;s correct, but isn&#39;t it because it doesn&#39;t make sense to build an executable for a <code>none</code> platform? There&#39;s no operating system at that level to load the executable into memory and jump to its entry point."}, {"owner": {"reputation": 4398, "user_id": 1056174, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GJiNL.jpg?s=128&g=1", "display_name": "Carl Patenaude Poulin", "link": "https://stackoverflow.com/users/1056174/carl-patenaude-poulin"}, "reply_to_user": {"reputation": 1492, "user_id": 1299804, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eb046a5fc70918c5f769865d4266c563?s=128&d=identicon&r=PG", "display_name": "Austin B", "link": "https://stackoverflow.com/users/1299804/austin-b"}, "edited": false, "score": 0, "creation_date": 1452640099, "post_id": 34755196, "comment_id": 57257081, "body": "I tried setting the &quot;os&quot; key to &quot;foo&quot;, the &quot;target&quot; key to &quot;x86_64-unknown-foo&quot;, and the target file name to &quot;x86_64-unknown-foo.json&quot;. No change."}, {"owner": {"reputation": 2732, "user_id": 258065, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a5e0ab01b552291118d6ddd8b5332abb?s=128&d=identicon&r=PG", "display_name": "Theo Belaire", "link": "https://stackoverflow.com/users/258065/theo-belaire"}, "edited": false, "score": 1, "creation_date": 1452640163, "post_id": 34755196, "comment_id": 57257104, "body": "What is your overall goal?  Are you trying to launch an OS written in Rust?"}, {"owner": {"reputation": 4398, "user_id": 1056174, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GJiNL.jpg?s=128&g=1", "display_name": "Carl Patenaude Poulin", "link": "https://stackoverflow.com/users/1056174/carl-patenaude-poulin"}, "edited": false, "score": 0, "creation_date": 1452640259, "post_id": 34755196, "comment_id": 57257136, "body": "I&#39;m writing a unikernel for Xen (i.e. using Xen as a microkernel), my target name should actually be &quot;x86_64-unknown-xen&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 2732, "user_id": 258065, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a5e0ab01b552291118d6ddd8b5332abb?s=128&d=identicon&r=PG", "display_name": "Theo Belaire", "link": "https://stackoverflow.com/users/258065/theo-belaire"}, "is_accepted": false, "score": 0, "last_activity_date": 1452640686, "creation_date": 1452640686, "answer_id": 34755622, "question_id": 34755196, "link": "https://stackoverflow.com/questions/34755196/why-does-my-custom-target-not-support-the-bin-crate-type/34755622#34755622", "title": "Why does my custom target not support the `bin` crate type?", "body": "<p>I agree with Austin B, you're going to run into some problems when building for the <code>none</code> target, or any custom target.  You can check out my <a href=\"http://csclub.uwaterloo.ca/~tbelaire/blog/posts/gba-rust-1.html\" rel=\"nofollow\">blog posts</a> where you see me building for the gba.</p>\n\n<p>What I've been doing is </p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn main(_: i32, _: *const *const i8) -&gt; i32 {\n    let mut m = gfx::Mode3::new();\n    m.dot(120, 80, Color::rgb15(31, 0, 0));\n    m.dot(136, 80, Color::rgb15(0, 31, 0));\n    m.dot(120, 96, Color::rgb15(0, 0, 31));\n\n    loop{}\n}\n</code></pre>\n\n<p>where I declare a <code>main</code> function with a C signature, then the platform specific <code>crt.s</code> files will load the binary and call main for me.</p>\n\n<p>Then I continue to build as a static lib.</p>\n"}, {"tags": [], "owner": {"reputation": 4398, "user_id": 1056174, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GJiNL.jpg?s=128&g=1", "display_name": "Carl Patenaude Poulin", "link": "https://stackoverflow.com/users/1056174/carl-patenaude-poulin"}, "is_accepted": true, "score": 1, "last_activity_date": 1466625268, "last_edit_date": 1466625268, "creation_date": 1452648031, "answer_id": 34756846, "question_id": 34755196, "link": "https://stackoverflow.com/questions/34755196/why-does-my-custom-target-not-support-the-bin-crate-type/34756846#34756846", "title": "Why does my custom target not support the `bin` crate type?", "body": "<p>Adding this entry to the <code>$(target).json</code> file fixes it:</p>\n\n<pre><code>\"executables\": true\n</code></pre>\n"}], "owner": {"reputation": 4398, "user_id": 1056174, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GJiNL.jpg?s=128&g=1", "display_name": "Carl Patenaude Poulin", "link": "https://stackoverflow.com/users/1056174/carl-patenaude-poulin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 624, "favorite_count": 1, "accepted_answer_id": 34756846, "answer_count": 2, "score": 4, "last_activity_date": 1466625268, "creation_date": 1452638742, "last_edit_date": 1466625263, "question_id": 34755196, "link": "https://stackoverflow.com/questions/34755196/why-does-my-custom-target-not-support-the-bin-crate-type", "title": "Why does my custom target not support the `bin` crate type?", "body": "<p>I'm using the custom target file defined in <a href=\"http://www.randomhacks.net/2015/11/11/bare-metal-rust-custom-target-kernel-space/\" rel=\"nofollow\">this</a> blog post. It works perfectly fine when building static libraries, however when I try to build a binary instead I get the following warning:</p>\n\n<pre><code>warning: dropping unsupported crate type `bin` for target `x86_64-unknown-none-gnu`\n</code></pre>\n\n<p>No binaries are built.</p>\n\n<p>How do I add support for building executables to my target?</p>\n"}, {"tags": ["rust", "bigint"], "answers": [{"comments": [{"owner": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "edited": false, "score": 0, "creation_date": 1452694100, "post_id": 34755701, "comment_id": 57282370, "body": "Just to make it absolutely clear: all the examples that use <code>from_str</code> are out of date, this function has been removed in favour of <code>.parse</code>."}], "tags": [], "owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "is_accepted": true, "score": 5, "last_activity_date": 1452641120, "creation_date": 1452641120, "answer_id": 34755701, "question_id": 34755100, "link": "https://stackoverflow.com/questions/34755100/how-to-parse-bigint-from-the-num-crate/34755701#34755701", "title": "How to parse BigInt from the num crate?", "body": "<p>Figured out, seem like the current syntax is:</p>\n\n<pre><code>\"8705702225074732811211966512111\".parse::&lt;BigInt&gt;().unwrap();\n</code></pre>\n\n<p>Better yet, do the following:</p>\n\n<pre><code>match \"8705702225074732811211966512111\".parse::&lt;BigInt&gt;() {\n    Ok(big) =&gt; {\n        ...\n</code></pre>\n"}], "owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 517, "favorite_count": 1, "accepted_answer_id": 34755701, "answer_count": 1, "score": 5, "last_activity_date": 1452694231, "creation_date": 1452638283, "last_edit_date": 1495540343, "question_id": 34755100, "link": "https://stackoverflow.com/questions/34755100/how-to-parse-bigint-from-the-num-crate", "title": "How to parse BigInt from the num crate?", "body": "<p>I am trying to use <a href=\"http://rust-num.github.io/num/num/bigint/struct.BigInt.html\" rel=\"nofollow noreferrer\"><code>BigInt</code></a>. My code is like this:</p>\n\n<pre><code>extern crate num;\nuse num::bigint::BigInt;\n...\nprintln!(\"{}\", from_str::&lt;BigInt&gt;(\"1\")); //this is line 91 in the code\n</code></pre>\n\n<p>In my Cargo.toml file I have the following:</p>\n\n<pre><code>[dependencies]\nnum = \"0.1.30\"\n</code></pre>\n\n<p>What I did seem to match what was said in <a href=\"http://rust-num.github.io/num/num/bigint/struct.BigInt.html#method.from_bytes_be\" rel=\"nofollow noreferrer\">this document</a>, <a href=\"http://docs.piston.rs/conrod/num/bigint/struct.BigInt.html\" rel=\"nofollow noreferrer\">also this document</a> and also <a href=\"https://stackoverflow.com/questions/23391440/in-rust-how-do-i-use-implemented-trait-fromstr-on-bigint\">an answer here on Stack Overflow</a>.</p>\n\n<p>However I got the following error:</p>\n\n<pre><code>Compiling example v0.1.0 (file:///C:/src/rust/example)\nsrc\\main.rs:91:20: 91:38 error: unresolved name `from_str` [E0425]\nsrc\\main.rs:91     println!(\"{}\", from_str::&lt;BigInt&gt;(\"1\"));\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 5, "creation_date": 1452634438, "post_id": 34754036, "comment_id": 57254487, "body": "You can leak memory without using <code>unsafe</code>. Memory leaks don&#39;t violate memory safety."}, {"owner": {"reputation": 297, "user_id": 4039738, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100006313548910/picture?type=large", "display_name": "Oleh Devua", "link": "https://stackoverflow.com/users/4039738/oleh-devua"}, "reply_to_user": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1452636025, "post_id": 34754036, "comment_id": 57255308, "body": "@fjh, thanks for reminding, I forgot this"}], "answers": [{"tags": [], "owner": {"reputation": 3711, "user_id": 203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG", "display_name": "Rasmus Kaj", "link": "https://stackoverflow.com/users/203476/rasmus-kaj"}, "is_accepted": false, "score": 6, "last_activity_date": 1452635390, "creation_date": 1452635390, "answer_id": 34754403, "question_id": 34754036, "link": "https://stackoverflow.com/questions/34754036/who-is-responsible-to-free-the-memory-after-consuming-the-box/34754403#34754403", "title": "Who is responsible to free the memory after consuming the box", "body": "<p><a href=\"https://doc.rust-lang.org/stable/std/boxed/struct.Box.html#method.into_raw\" rel=\"noreferrer\">https://doc.rust-lang.org/stable/std/boxed/struct.Box.html#method.into_raw</a> specifies: \"After call to this function, caller is responsible for the memory previously managed by Box, in particular caller should properly destroy T and release memory. The proper way to do it is to convert pointer back to Box with Box::from_raw function, because Box does not specify, how memory is allocated.\"</p>\n\n<p>So if you let your raw pointer go out of scobe without converting it back to a box, you have a memory leak.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1452672904, "creation_date": 1452672904, "answer_id": 34761449, "question_id": 34754036, "link": "https://stackoverflow.com/questions/34754036/who-is-responsible-to-free-the-memory-after-consuming-the-box/34761449#34761449", "title": "Who is responsible to free the memory after consuming the box", "body": "<p><em>Disclaimer: pointed out by @fjh in comments, but worth mentioning.</em></p>\n\n<p>Memory safety is not well-defined in general, thus a specific definition was established for Rust. The gist of it is that memory safety, for Rust, means: only accessing allocated and initialized memory.</p>\n\n<p>A consequence of this definition is that memory leaks are safe because they cannot lead to dangling pointers. It is also considered safe not to run destructors, because they cannot violate memory safety (although this can leak other resources).</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/mem/fn.forget.html\" rel=\"noreferrer\"><code>std::mem::forget</code></a> was made stable by <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1066-safe-mem-forget.md\" rel=\"noreferrer\">this RFC</a></li>\n<li>it has always been possible to leak, using cycles of <code>std::rc::Rc</code> or <code>std::sync::Arc</code></li>\n<li>...</li>\n</ul>\n\n<hr>\n\n<p><code>Box::into_raw</code> is mainly for interaction with FFI, so as to be able to transfer ownership across language boundaries, as is mentioned in its documentation the proper way to release the memory is to use <code>Box::from_raw</code> to recreate a <code>Box</code> from it.</p>\n"}], "owner": {"reputation": 297, "user_id": 4039738, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100006313548910/picture?type=large", "display_name": "Oleh Devua", "link": "https://stackoverflow.com/users/4039738/oleh-devua"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1680, "favorite_count": 1, "accepted_answer_id": 34761449, "answer_count": 2, "score": 2, "last_activity_date": 1452681186, "creation_date": 1452633810, "last_edit_date": 1452681186, "question_id": 34754036, "link": "https://stackoverflow.com/questions/34754036/who-is-responsible-to-free-the-memory-after-consuming-the-box", "title": "Who is responsible to free the memory after consuming the box", "body": "<p>From the Rust docs.</p>\n\n<blockquote>\n  <p>The into_raw function consumes a box and returns the raw pointer. It\n  doesn't destroy T or deallocate any memory.</p>\n</blockquote>\n\n<p>in this code:</p>\n\n<pre><code>fn main() {\n    let b = Box::new(\"hello\".to_owned());\n    let a: *mut String = Box::into_raw(b);\n}\n</code></pre>\n\n<p>I was not using <code>unsafe</code> block and as result we should have no memory leaks. So, if Box object is not responsible to free the memory after it was consumed, but the memory is not freed and available for further using, and raw pointers don't own by resources, who will free the memory?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452635576, "post_id": 34748355, "comment_id": 57255047, "body": "(Potentially noob question) Isn&#39;t this the difference between <code>iter()</code> and <code>into_iter()</code>? You might want to use <code>into_iter()</code> to move ownership to the rest of your chain so that your references live throughout?"}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452636564, "post_id": 34748355, "comment_id": 57255558, "body": "@SimonWhitehead, thanks for the comment! Yes, I think this is exactly the difference between <code>iter</code> and <code>into_iter</code>--but in reverse. I <b>do</b> want to use <code>iter</code> rather than <code>into_iter</code>, and in fact I want an <code>and_then</code> variant that does something like <code>iter</code>, but I can&#39;t figure out the right combo of <code>as_ref</code>, etc., that does this. When I change the first example above to use <code>into_iter</code>, I get the same error messages as my second example."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452637242, "post_id": 34748355, "comment_id": 57255916, "body": "I don&#39;t suppose you could put together a MVCE on the playpen for me/others to tinker with?"}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1452637931, "post_id": 34748355, "comment_id": 57256221, "body": "Sure, here is a simplified example: <a href=\"http://is.gd/ogNom8\" rel=\"nofollow noreferrer\">is.gd/ogNom8</a>."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1452650675, "creation_date": 1452650675, "answer_id": 34757208, "question_id": 34748355, "link": "https://stackoverflow.com/questions/34748355/modifying-iter-chain-to-use-and-then-etc/34757208#34757208", "title": "Modifying `iter` chain to use `and_then`, etc", "body": "<p>OK, the compiler is really messing with me tonight.</p>\n\n<p>I got this incantation to compile:</p>\n\n<pre><code>fn get(store: &amp;Store, key: &amp;str) -&gt; Option&lt;Attributes&gt; {\n    let r = store.read();\n    let x = r.as_ref().ok()\n        .and_then(|g| (*g).get(key) )\n        .and_then(|v| v.read().ok() )\n        .map(|v| (*v).clone() );\n    x\n}\n</code></pre>\n\n<p>If you inline either <code>r</code> or <code>x</code>, you'll get another <code>does not live long enough</code> error again. I'm not sure why, since in principle, the lock guard should remain active as a temporary until the end of the statement.</p>\n"}], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1452650675, "creation_date": 1452614638, "question_id": 34748355, "link": "https://stackoverflow.com/questions/34748355/modifying-iter-chain-to-use-and-then-etc", "title": "Modifying `iter` chain to use `and_then`, etc", "body": "<p>I have a function that looks like:</p>\n\n<pre><code>type Attributes = HashMap&lt;String, json::Json&gt;;\ntype Store = Arc&lt;RwLock&lt;HashMap&lt;String, RwLock&lt;Attributes&gt;&gt;&gt;&gt;;\n\nfn get(store: &amp;Store, key: &amp;str) -&gt; Option&lt;Attributes&gt; {\n    store.read().iter()\n        .filter_map(|g| (*g).get(key) )\n        .filter_map(|v| v.read().ok() )\n        .map(|v| (*v).clone() )\n        .next()\n}\n</code></pre>\n\n<p>This compiles and works just fine. However, for my own edification, I have been trying to modify this to use standard <code>Result</code>/<code>Option</code> methods (without converting the <code>LockResult</code> to an <code>Iter</code>), something like:</p>\n\n<pre><code>store.read().ok()\n    .and_then(|g| (*g).get(key) )\n    .and_then(|v| v.read().ok() )\n    .map(|v| (*v).clone() );\n</code></pre>\n\n<p>But this tells me that <code>g does not live long enough</code>. I've tried adding <code>ref</code> and <code>as_ref</code> at various places, but can't get it to compile. What am I missing?</p>\n\n<p>I know I can get it to work like:</p>\n\n<pre><code>    store.read().ok()\n        .and_then(|g| {\n            (*g).get(key)\n                .and_then(|v| v.read().ok() )\n                .map(|v| (*v).clone() )\n        })\n</code></pre>\n\n<p>But I would like to be able to chain it like in the <code>iter</code> case.</p>\n"}, {"tags": ["data-structures", "rust", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 1983, "user_id": 2224188, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/fbea3284e949fe5cb35a9c3f34bca37d?s=128&d=identicon&r=PG", "display_name": "Lorenz", "link": "https://stackoverflow.com/users/2224188/lorenz"}, "edited": false, "score": 1, "creation_date": 1452619130, "post_id": 34748519, "comment_id": 57245513, "body": "I add and remove many nodes and the application is a server process, so memory leaks are an issue. Do you know another solution? In the meantime I&#39;ll have a look at the other answer."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1983, "user_id": 2224188, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/fbea3284e949fe5cb35a9c3f34bca37d?s=128&d=identicon&r=PG", "display_name": "Lorenz", "link": "https://stackoverflow.com/users/2224188/lorenz"}, "edited": false, "score": 0, "creation_date": 1452619839, "post_id": 34748519, "comment_id": 57246025, "body": "@Aragon0: I added another design idea where decoupling the resource and the references to others (not using a direct pointer), it requires more book-keeping but is safe."}, {"owner": {"reputation": 1983, "user_id": 2224188, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/fbea3284e949fe5cb35a9c3f34bca37d?s=128&d=identicon&r=PG", "display_name": "Lorenz", "link": "https://stackoverflow.com/users/2224188/lorenz"}, "edited": false, "score": 0, "creation_date": 1452620087, "post_id": 34748519, "comment_id": 57246181, "body": "This looks like a good idea! I can deal with more bookkeeping, as long as the whole thing is safe and reasonably fast."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 16, "last_activity_date": 1608325368, "last_edit_date": 1608325368, "creation_date": 1452615116, "answer_id": 34748519, "question_id": 34747464, "link": "https://stackoverflow.com/questions/34747464/implement-graph-like-data-structure-in-rust/34748519#34748519", "title": "Implement graph-like data structure in Rust", "body": "<p>Actually, for a graph like structure, the simplest solution is to use an arena such as <a href=\"https://crates.io/crates/typed-arena\" rel=\"nofollow noreferrer\"><code>TypedArena</code></a>.</p>\n<p>The lifetime of the nodes will then be only dependent on the lifetime of the instance of the typed arena they were created from, which will greatly simplify resource management.</p>\n<p><strong>Warning</strong>: avoid a scenario where you dynamically add/remove nodes to the graph, as the nodes will NOT be removed from the arena until said arena is dropped, so the size of the arena would grow, unbounded.</p>\n<hr />\n<p>If you are in a situation where you will add/remove nodes at runtime, another solution is to:</p>\n<ul>\n<li>have a collection of <code>Resources</code></li>\n<li>have the edges only indirectly refer to the <code>Resources</code> (not owners, and not borrowers either)</li>\n</ul>\n<p>Two examples:</p>\n<ul>\n<li><code>HashMap&lt;ResourceId, (Resource, Vec&lt;ResourceId&gt;)&gt;</code></li>\n<li><code>type R = RefCell&lt;Resource&gt;</code>, <code>Vec&lt;Rc&lt;R&gt;&gt;</code> and <code>Vec&lt;(Weak&lt;R&gt;, Vec&lt;Weak&lt;R&gt;&gt;)&gt;</code></li>\n</ul>\n<p>in either case, you are responsible for cleaning up the edges when removing a resource, and forgetting may lead to a memory leak and panics (when dereferencing) but is otherwise safe.</p>\n<p>There are, probably, infinite variations on the above.</p>\n"}, {"tags": [], "owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "is_accepted": false, "score": 21, "last_activity_date": 1452617421, "creation_date": 1452617421, "answer_id": 34749345, "question_id": 34747464, "link": "https://stackoverflow.com/questions/34747464/implement-graph-like-data-structure-in-rust/34749345#34749345", "title": "Implement graph-like data structure in Rust", "body": "<p>Modeling graph-like structures in Rust is not a simple problem.\nHere there are two valuable discussions from Nick Cameron and Niko Matsakis (two main Rust developers at Mozilla.)</p>\n\n<p><a href=\"https://github.com/nrc/r4cppp/blob/master/graphs/README.md\" rel=\"noreferrer\">Graphs and arena allocation</a></p>\n\n<p><a href=\"http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/\" rel=\"noreferrer\">Modeling Graphs in Rust Using Vector Indices</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1594213365, "last_edit_date": 1594213365, "creation_date": 1508206689, "answer_id": 46781538, "question_id": 34747464, "link": "https://stackoverflow.com/questions/34747464/implement-graph-like-data-structure-in-rust/46781538#46781538", "title": "Implement graph-like data structure in Rust", "body": "<p>The simplest solution for a graph-like structure is to <em>use a library which models graphs</em>. <a href=\"https://crates.io/crates/petgraph\" rel=\"nofollow noreferrer\">petgraph</a> is a good choice:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use petgraph::Graph; // 0.5.1\nuse std::{collections::HashMap, rc::Rc};\n\nstruct Resource;\n\nenum LinkTarget {\n    ResourceList(Vec&lt;Rc&lt;Resource&gt;&gt;),\n    LabelSelector(HashMap&lt;String, String&gt;),\n}\n\nstruct SomeMetadataStruct;\n\nfn main() {\n    let mut graph = Graph::new();\n\n    let n1 = graph.add_node(LinkTarget::LabelSelector(Default::default()));\n    let n2 = graph.add_node(LinkTarget::LabelSelector(Default::default()));\n\n    let _l2 = graph.add_edge(n1, n2, SomeMetadataStruct);\n}\n</code></pre>\n<p>The guarantees that you have to choose here center around the member of <code>ResourceList</code>. I assume that you wish to have single-threaded shared immutable <code>Resource</code>s.</p>\n<ul>\n<li>if you need to share them across threads, use a <code>Vec&lt;Arc&lt;Resource&gt;&gt;</code></li>\n<li>if they aren't shared, you can own them \u2014 <code>Vec&lt;Resource&gt;</code></li>\n<li>if they need to be mutable, use a <code>Vec&lt;Rc&lt;RefCell&lt;Resource&gt;&gt;&gt;</code> (Or a <code>Mutex</code> or <code>RwLock</code> if also multithreaded)</li>\n</ul>\n"}], "owner": {"reputation": 1983, "user_id": 2224188, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/fbea3284e949fe5cb35a9c3f34bca37d?s=128&d=identicon&r=PG", "display_name": "Lorenz", "link": "https://stackoverflow.com/users/2224188/lorenz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8995, "favorite_count": 7, "accepted_answer_id": 34748519, "answer_count": 3, "score": 22, "last_activity_date": 1608325374, "creation_date": 1452612239, "last_edit_date": 1608325374, "question_id": 34747464, "link": "https://stackoverflow.com/questions/34747464/implement-graph-like-data-structure-in-rust", "title": "Implement graph-like data structure in Rust", "body": "<p>I have a data structure which can be represented as a unidirectional graph between some structs linked with link objects because links contain metadata.</p>\n\n<p>It looks something like this:</p>\n\n<pre><code>struct StateMachine {\n    resources: Vec&lt;Resource&gt;,\n    links: Vec&lt;Link&gt;,\n}\nstruct Resource {\n    kind: ResourceType,\n      // ...\n}\n\nenum LinkTarget {\n    ResourceList(Vec&lt;&amp;Resource&gt;),\n    LabelSelector(HashMap&lt;String, String&gt;),\n}\n\nstruct Link {\n    from: LinkTarget,\n    to: LinkTarget,\n    metadata: SomeMetadataStruct,\n}\n</code></pre>\n\n<p>The whole structure needs to be mutable because I need to be able to add and remove links and resources at runtime. Because of this, I cannot use the normal lifetime model and bind the resources to the parent struct's lifetime.</p>\n\n<p>I understand that I need <a href=\"https://doc.rust-lang.org/book/first-edition/choosing-your-guarantees.html\" rel=\"noreferrer\">to \"choose my own guarantee\"</a> by picking the appropriate type, but I'm not sure what's the best way to solve this problem.</p>\n"}, {"tags": ["generics", "rust", "higher-order-functions"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452589479, "post_id": 34739291, "comment_id": 57224467, "body": "It would be great if you could post a MVCE, using <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a> . You are close, just missing a self-contained example."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1452647638, "post_id": 34739291, "comment_id": 57259376, "body": "I would move most of the type parameters from the trait to the trait method. <code>T</code> needs to stay on the trait, otherwise you can&#39;t properly bound <code>I</code> in your <code>impl</code>, but the other type parameters have no relation to the type the trait is implemented on, and are only meaningful during the call to <code>to_hash_map</code>. <a href=\"http://is.gd/vgBwBm\" rel=\"nofollow noreferrer\">Here&#39;s the code, based on Matthieu M.&#39;s answer.</a>"}], "answers": [{"tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 0, "last_activity_date": 1452589824, "creation_date": 1452589824, "answer_id": 34739452, "question_id": 34739291, "link": "https://stackoverflow.com/questions/34739291/generic-higher-order-function-reference-error/34739452#34739452", "title": "Generic higher-order function reference error", "body": "<p>The problem is that <code>a.iter()</code> returns an iterator whose item is <code>&amp;Person</code>. Your trait bounds for the <code>ToHashMap</code> impl require that the key and value functions take a <code>&amp;T</code>, where <code>T = Item</code>, so <code>T = &amp;Person</code>, and thus the function argument is <code>&amp; &amp;Person</code>, which doesn't match your function.</p>\n\n<p>You have to relax the bounds somehow, though I'm afraid my Rust knowledge is not sufficient to say exactly how.</p>\n"}, {"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452598263, "post_id": 34739536, "comment_id": 57230467, "body": "Great answer! I learned a lot from this (I am just starting my Rust journey)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452606639, "post_id": 34739536, "comment_id": 57236337, "body": "@SimonWhitehead: Welcome on the train, beware some say it&#39;s an addictive language ;)"}, {"owner": {"reputation": 1300, "user_id": 474719, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8282ac14fc49ed24575362a2271debbe?s=128&d=identicon&r=PG", "display_name": "Brad Urani", "link": "https://stackoverflow.com/users/474719/brad-urani"}, "edited": false, "score": 0, "creation_date": 1452627280, "post_id": 34739536, "comment_id": 57250542, "body": "Thanks! It seems so obvious when you see the answer :)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1452590071, "creation_date": 1452590071, "answer_id": 34739536, "question_id": 34739291, "link": "https://stackoverflow.com/questions/34739291/generic-higher-order-function-reference-error/34739536#34739536", "title": "Generic higher-order function reference error", "body": "<p>You are indeed very close.</p>\n\n<p>The first issue you face is that <code>iter()</code> produces an <code>Iterator::Item</code> of type <code>&amp;Person</code> and therefore <code>&amp;x</code> which you pass to your closure is of type <code>&amp;&amp;Person</code>.</p>\n\n<p>You can either alter the type of the closure to take a <code>&amp;&amp;Person</code> or alternatively consume the vector <code>a</code> using <code>into_iter</code>.</p>\n\n<p>Another slight issue that I encountered is that you cannot take the iterator by immutable reference: you need to modify the iterator to iterate. Taking the iterator by value is simpler.</p>\n\n<p>All in all, with those two tweaks we can get (consuming the vector):</p>\n\n<pre><code>trait ToHashMap&lt;T, K, V, FK, FV&gt;\n    where K: Hash,\n          K: Eq,\n          FK: Fn(&amp;T)-&gt;K,\n          FV: Fn(&amp;T)-&gt;V {\n\n    fn to_hash_map(self, key_func: FK, value_func: FV) -&gt; HashMap&lt;K, V&gt;;\n}\n\nimpl&lt;T, K, V, FK, FV, I&gt; ToHashMap&lt;T, K, V, FK, FV&gt; for I\n    where K: Hash,\n          K: Eq,\n          FK: Fn(&amp;T) -&gt; K,\n          FV: Fn(&amp;T) -&gt; V,\n          I: Iterator&lt;Item = T&gt;\n{\n    fn to_hash_map(self, key_func: FK, value_func: FV) -&gt; HashMap&lt;K, V&gt; {\n        let mut hm: HashMap&lt;K, V&gt; = HashMap::new();\n        for x in self {\n            hm.insert(key_func(&amp;x), value_func(&amp;x));\n        }\n        hm\n    }\n}\n</code></pre>\n\n<p>And then <a href=\"https://play.rust-lang.org/?gist=672dda60ce98c0482ebe&amp;version=stable\" rel=\"nofollow\">it compiles and runs</a> and produces:</p>\n\n<blockquote>\n<pre><code>{2: \"Barb\", 1: \"brad\"}\n</code></pre>\n</blockquote>\n\n<p>as expected.</p>\n"}], "owner": {"reputation": 1300, "user_id": 474719, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8282ac14fc49ed24575362a2271debbe?s=128&d=identicon&r=PG", "display_name": "Brad Urani", "link": "https://stackoverflow.com/users/474719/brad-urani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 34739536, "answer_count": 2, "score": 1, "last_activity_date": 1452693818, "creation_date": 1452589309, "last_edit_date": 1452693818, "question_id": 34739291, "link": "https://stackoverflow.com/questions/34739291/generic-higher-order-function-reference-error", "title": "Generic higher-order function reference error", "body": "<p>I've been banging my head against this one all night. I'm trying to implement a <code>to_hash_map</code> method so I can do:</p>\n\n<pre><code>struct Person {\n    id: i32,\n    first_name: &amp;'static str,\n}\n\nfn main() {\n    let brad = Person {\n        id: 1,\n        first_name: \"brad\",\n    };\n    let barb = Person {\n        id: 2,\n        first_name: \"Barb\",\n    };\n    let a = vec![brad, barb];\n    let key_func = |i: &amp;Person| -&gt; i32 { i.id };\n    let value_func = |i: &amp;Person| -&gt; &amp;str { i.first_name };\n    let map = a.iter().to_hash_map(key_func, value_func);\n    println!(\"{:?}\", map)\n}\n</code></pre>\n\n<p>and hopefully get the HashMap</p>\n\n<pre><code>{\n 1: \"brad\",\n 2: \"barb\"\n}\n</code></pre>\n\n<p>Here's my best shot at it:</p>\n\n<pre><code>trait ToHashMap&lt;T,K,V, FK, FV&gt;\n    where K:Hash,\n          K:Eq,\n          FK:Fn(&amp;T)-&gt;K,\n          FV:Fn(&amp;T)-&gt;V {\n\n    fn to_hash_map(&amp;self, key_func: FK, value_func: FV) -&gt; HashMap&lt;K, V&gt;;\n}\n\nimpl&lt;T, K, V, FK, FV, I&gt; ToHashMap&lt;T, K, V, FK, FV&gt; for I\n    where K: Hash,\n          K: Eq,\n          FK: Fn(&amp;T) -&gt; K,\n          FV: Fn(&amp;T) -&gt; V,\n          I: Iterator&lt;Item = T&gt;\n{\n    fn to_hash_map(&amp;self, key_func: FK, value_func: FV) -&gt; HashMap&lt;K, V&gt;{\n        let mut hm: HashMap&lt;K, V&gt; = HashMap::new();\n        loop {\n            match self.next() {\n                Some(x) =&gt; {\n                    hm.insert(key_func(&amp;x), value_func(&amp;x));\n                }\n                None =&gt; break,\n            }\n        }\n        hm\n    }\n}\n</code></pre>\n\n<p>But I'm getting the error:</p>\n\n<pre><code>error: type mismatch: the type `[closure@src/main.rs:92:20: 92:48]` implements the trait `for&lt;'r&gt; core::ops::Fn&lt;(&amp;'r Person,)&gt;`, but the trait `for&lt;'r&gt; core::ops::Fn&lt;(&amp;'r &amp;Person,\n)&gt;` is required (expected &amp;-ptr, found struct `Person`) [E0281]\nsrc/main.rs:94     let map = a.iter().to_hash_map(key_func, value_func);\n</code></pre>\n\n<p>I feel like I'm so close. Any help is appreciated :)</p>\n"}, {"tags": ["c#", "memory-management", "memory-leaks", "rust", "ffi"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452584095, "post_id": 34737626, "comment_id": 57221676, "body": "The string you&#39;re returning will be a managed string once it gets into .NET land ... and therefore you can&#39;t just pass a pointer to it back to Rust because the .NET garbage collector may move it. I am wondering whether you&#39;ll need to add the <code>MarshalAs</code> attribute to help with this... unfortunately I can&#39;t test it right now (and I haven&#39;t done any C#-&gt;Rust interop yet!)."}, {"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452585715, "post_id": 34737626, "comment_id": 57222459, "body": "@simon, yes, that&#39;s what i think. So, do you think i should change the interface function in C# to [DllImport(&quot;rustffilib.dll&quot;, EntryPoint = &quot;rustffi_get_version&quot;)]         public static extern const char* rustffi_get_version(); ? Then I do the explicit conversion of char* to string myself"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452587179, "post_id": 34737626, "comment_id": 57223160, "body": "That is certainly an option worth exploring anyway."}, {"owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452594344, "post_id": 34737626, "comment_id": 57227797, "body": "@tried, but get another error. I edit the question to include the new information."}], "answers": [{"tags": [], "owner": {"reputation": 14813, "user_id": 141502, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/zgvfq.png?s=128&g=1", "display_name": "Daniel", "link": "https://stackoverflow.com/users/141502/daniel"}, "is_accepted": true, "score": 8, "last_activity_date": 1452607401, "creation_date": 1452607401, "answer_id": 34745781, "question_id": 34737626, "link": "https://stackoverflow.com/questions/34737626/how-to-free-the-memory-of-a-string-returned-from-rust-in-c/34745781#34745781", "title": "How to free the memory of a string returned from Rust in C#?", "body": "<p><code>extern \"C\" fn</code> in Rust means the function uses the C calling convention.\nC# expects P/Invoke functions to use the stdcall calling convention by default.</p>\n\n<p>You can tell C# to use the C calling convention:</p>\n\n<p><code>[DllImport(\"rustffilib.dll\", CallingConvention = CallingConvention.Cdecl)]\n</code></p>\n\n<p>Alternatively, you could use <code>extern \"stdcall\" fn</code> on the Rust side.</p>\n"}], "owner": {"reputation": 2597, "user_id": 4049331, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/2a4959cceb8c3c98065763a771bb04e8?s=128&d=identicon&r=PG&f=1", "display_name": "palazzo train", "link": "https://stackoverflow.com/users/4049331/palazzo-train"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1468, "favorite_count": 2, "accepted_answer_id": 34745781, "answer_count": 1, "score": 4, "last_activity_date": 1468710017, "creation_date": 1452583149, "last_edit_date": 1468710017, "question_id": 34737626, "link": "https://stackoverflow.com/questions/34737626/how-to-free-the-memory-of-a-string-returned-from-rust-in-c", "title": "How to free the memory of a string returned from Rust in C#?", "body": "<p>I have these two functions exposed from <strong>Rust</strong></p>\n\n<pre><code>extern crate libc;\n\nuse std::mem;\nuse std::ffi::{CString, CStr};\n\nuse libc::c_char;\n\npub static FFI_LIB_VERSION: &amp;'static str = env!(\"CARGO_PKG_VERSION\"); // '\n\n#[no_mangle]\npub extern \"C\" fn rustffi_get_version() -&gt; *const c_char {\n    let s = CString::new(FFI_LIB_VERSION).unwrap();\n    let p = s.as_ptr();\n    mem::forget(s);\n\n    p as *const _\n}\n\n#[no_mangle]\npub extern \"C\" fn rustffi_get_version_free(s: *mut c_char) {\n    unsafe {\n        if s.is_null() {\n            return;\n        }\n\n        let c_str: &amp;CStr = CStr::from_ptr(s);\n        let bytes_len: usize = c_str.to_bytes_with_nul().len();\n        let temp_vec: Vec&lt;c_char&gt; = Vec::from_raw_parts(s, bytes_len, bytes_len);\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>They are imported by <strong>C#</strong> as below </p>\n\n<pre><code>namespace rustFfiLibrary\n{\n    public class RustFfiApi\n    {\n        [DllImport(\"rustffilib.dll\", EntryPoint = \"rustffi_get_version\")]\n        public static extern string rustffi_get_version();\n\n        [DllImport(\"rustffilib.dll\", EntryPoint = \"rustffi_get_version_free\")]\n        public static extern void rustffi_get_version_free(string s);\n\n    }\n}\n</code></pre>\n\n<p>The memory of the string returned from <code>rustffi_get_version</code> is not managed by Rust anymore as <code>mem::forget</code> has been called. In C#, I want to call the get version function, get the string, and then pass it back to Rust for memory deallocation like below.</p>\n\n<pre><code>public class RustService\n{\n    public static string GetVersion()\n    {\n        string temp = RustFfiApi.rustffi_get_version();\n        string ver = (string)temp.Clone();\n\n        RustFfiApi.rustffi_get_version_free(temp);\n\n        return ver ;\n    }\n}\n</code></pre>\n\n<p>But the C# program crashes when it runs <code>rustffi_get_version_free(temp)</code>. How to free the forgotten string memory in C#? What should be passed back to Rust for deallocation?</p>\n\n<p>Instead of defining <code>string</code> as the argument in the C# extern, I changed it to <code>pointer</code>.</p>\n\n<pre><code>[DllImport(\"rustffilib.dll\", EntryPoint = \"rustffi_get_version\")]\npublic static extern System.IntPtr rustffi_get_version();\n\n[DllImport(\"rustffilib.dll\", EntryPoint = \"rustffi_get_version_free\")]\npublic static extern void rustffi_get_version_free(System.IntPtr s);\n</code></pre>\n\n<pre><code>public static string GetVersion()\n{\n    System.IntPtr tempPointer = RustFfiApi.rustffi_get_version();\n    string tempString = Marshal.PtrToStringAnsi(tempPointer);\n\n    string ver = (string)tempString.Clone();\n\n    RustFfiApi.rustffi_get_version_free(tempPointer);\n\n    return ver ;\n}\n</code></pre>\n\n<p>The <code>IntPtr</code> from <code>rustffi_get_version</code> can be successfully converted to a C# managed string type. <code>tempString</code> and <code>ver</code> are good.</p>\n\n<p>When <code>rustffi_get_version_free(tempPointer)</code> runs, it throws an exception saying <strong>stack unbalanced</strong>:</p>\n\n<blockquote>\n  <p>A call to PInvoke function 'rustFfiLibrary!rustFfiLibrary.RustFfiApi::rustffi_get_version_free' has unbalanced the stack. This is likely because the managed PInvoke signature does not match the unmanaged target signature. Check that the calling convention and parameters of the PInvoke signature match the target unmanaged signature.</p>\n</blockquote>\n\n<p><code>sizeof(IntPtr)</code> and <code>sizeof(char *)</code> are both 4 on my system. Plus, <code>IntPtr</code> works for return value; why doesn't it work as an input parameter?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1452587588, "post_id": 34736191, "comment_id": 57223372, "body": "are you sure this code does what you expect? I&#39;d assume that the <code>rightRotate</code> function should modify the <code>TreepNode</code>"}, {"owner": {"reputation": 199, "user_id": 4733529, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8ee8b09c4562cf5ac1fc73ff12b0f744?s=128&d=identicon&r=PG&f=1", "display_name": "living zhang", "link": "https://stackoverflow.com/users/4733529/living-zhang"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1452588335, "post_id": 34736191, "comment_id": 57223798, "body": "Yes, I am sure that this code is correct. The question is how to avoid to use clone() in my code."}], "answers": [{"tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": true, "score": 2, "last_activity_date": 1452588878, "last_edit_date": 1452588878, "creation_date": 1452588494, "answer_id": 34739059, "question_id": 34736191, "link": "https://stackoverflow.com/questions/34736191/what-is-the-best-implementation-of-a-recursive-struct/34739059#34739059", "title": "What is the best implementation of a recursive struct?", "body": "<p>You can avoid <code>clone()</code> if you consume <code>Self</code>:</p>\n\n<pre><code>fn right_rotate(mut self) -&gt; Box&lt;TreepNode&gt; {\n    match self.left.take() {\n        None =&gt; Box::new(self),\n        Some(mut left) =&gt; {\n            self.left = left.right.take();\n            left.right = Some(Box::new(self)); \n            left\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 199, "user_id": 4733529, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8ee8b09c4562cf5ac1fc73ff12b0f744?s=128&d=identicon&r=PG&f=1", "display_name": "living zhang", "link": "https://stackoverflow.com/users/4733529/living-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 1, "accepted_answer_id": 34739059, "answer_count": 1, "score": -2, "last_activity_date": 1452693864, "creation_date": 1452576488, "last_edit_date": 1452693864, "question_id": 34736191, "link": "https://stackoverflow.com/questions/34736191/what-is-the-best-implementation-of-a-recursive-struct", "title": "What is the best implementation of a recursive struct?", "body": "<p>I want to implement a <code>Treep</code> by rust. The node struct of <code>Treep</code> is</p>\n\n<pre><code>#[derive(Clone)]\nstruct TreepNode {\n    data: i32,\n    left: Option&lt;Box&lt;TreepNode&gt;&gt;,\n    right: Option&lt;Box&lt;TreepNode&gt;&gt;,\n}\n</code></pre>\n\n<p>Then I define a function to implement the right rotate operation.</p>\n\n<pre><code>fn rightRotate(&amp;self) -&gt; Box&lt;TreepNode&gt; {\n    match self.clone().left {\n        None =&gt; return Box::new(self.clone()),\n        Some(ref mut leftTree) =&gt; {\n            let mut selfTree = self.clone();\n            selfTree.left = leftTree.right.clone();\n            leftTree.right = Some(Box::new(selfTree));\n            return leftTree.clone()\n        }\n    }\n}\n</code></pre>\n\n<p>This code can be compiled. However, the code is ugly because there are lot of <code>clone()</code> and <code>Some</code> in it. Is there any better way to optimize the code?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 6831, "user_id": 501800, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/5fc72638da7598b350733c5a51fce596?s=128&d=identicon&r=PG", "display_name": "Muhammad Lukman Low", "link": "https://stackoverflow.com/users/501800/muhammad-lukman-low"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452572077, "post_id": 34735316, "comment_id": 57217117, "body": "Sorry missed out on that. I have added"}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1452574481, "last_edit_date": 1452574481, "creation_date": 1452573876, "answer_id": 34735754, "question_id": 34735316, "link": "https://stackoverflow.com/questions/34735316/why-is-this-erroring-out-with-unable-to-infer-enough-type-information-about/34735754#34735754", "title": "Why is this erroring out with &quot;unable to infer enough type information about `_`&quot;", "body": "<p>The <a href=\"http://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.product\" rel=\"nofollow\"><code>product</code></a> method (unstable as of Rust 1.5) produces a single value from an iterator; it doesn't yield another iterator. Therefore, it doesn't make sense to use it in a <code>for</code> loop.</p>\n\n<p>However, even with the following code, we still get the same error:</p>\n\n<pre><code>#![feature(iter_arith)]\n\nfn main() {\n    let d = [2, 3, 4, 6, 8];\n    let v = d.iter().take(5).product();\n    println!(\"{}\", v);\n}\n</code></pre>\n\n<p>The error comes from the compiler being unable to figure out the result type of <code>product</code>. I'm not sure why; it might be a bug in the compiler, or it might just be the case that it's ambiguous. Adding a type suffix on one of the literals in the array (e.g. changing <code>2</code> to <code>2i32</code>) doesn't fix this, and specifying the type of <code>d</code> (to e.g. <code>[i32; 5]</code>) doesn't help either. That means we need to tell the compiler what type we expect to get from <code>product</code>.</p>\n\n<pre><code>let v: i32 = d.iter().take(5).product();\n// or\nlet v = d.iter().take(5).product::&lt;i32&gt;();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 3, "last_activity_date": 1452578539, "last_edit_date": 1452578539, "creation_date": 1452574312, "answer_id": 34735837, "question_id": 34735316, "link": "https://stackoverflow.com/questions/34735316/why-is-this-erroring-out-with-unable-to-infer-enough-type-information-about/34735837#34735837", "title": "Why is this erroring out with &quot;unable to infer enough type information about `_`&quot;", "body": "<p>In addition to Francis' answer, the use of the <code>feature</code> attribute will require a nightly build of Rust (that is, the stable version you probably downloaded won't let you run his solution).</p>\n\n<p>On the other hand... you can roll your own and do something like this:</p>\n\n<pre><code>let d = [2, 3, 4, 6, 8];\nlet x = d.iter()\n        .take(5)\n        .fold(1, |a, b| a * b);\n\nprintln!(\"{} is the product !\", x);\n</code></pre>\n\n<p>Which <a href=\"http://is.gd/INoECn\" rel=\"nofollow\">will run happily on the stable release</a></p>\n"}], "owner": {"reputation": 6831, "user_id": 501800, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/5fc72638da7598b350733c5a51fce596?s=128&d=identicon&r=PG", "display_name": "Muhammad Lukman Low", "link": "https://stackoverflow.com/users/501800/muhammad-lukman-low"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1452578539, "creation_date": 1452570898, "last_edit_date": 1452572411, "question_id": 34735316, "link": "https://stackoverflow.com/questions/34735316/why-is-this-erroring-out-with-unable-to-infer-enough-type-information-about", "title": "Why is this erroring out with &quot;unable to infer enough type information about `_`&quot;", "body": "<p>I have some supposedly easy code in Rust:</p>\n\n<pre><code> let d = [2, 3, 4, 6, 8];\n for x in d.iter()\n            .take(5) \n            .product() {                                                                            \n                println!(\"{} is the product !\", x)                                                                                                                                             \n            } \n</code></pre>\n\n<p>When I run this code however I get the error:</p>\n\n<pre><code>src/functional.rs:63:9: 67:14 error: unable to infer enough type information about `_`; type annotations or generic parameter binding required [E0282]\nsrc/functional.rs:63         for x in d.iter()\nsrc/functional.rs:64             .take(5)\nsrc/functional.rs:65             .product() {\nsrc/functional.rs:66                 println!(\"{} is the product !\", x)\nsrc/functional.rs:67             }\nsrc/functional.rs:63:9: 67:14 help: run `rustc --explain E0282` to see a detailed explanation\nerror: aborting due to previous error\nCould not compile `gettingrusty`.\n</code></pre>\n\n<p>Can someone help me understand what I am doing wrong ?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1452560733, "post_id": 34733930, "comment_id": 57214206, "body": "<code>IntoIterator</code> is also implemented for <code>&amp;&#39;a mut [T]</code>, so it <i>could</i> move the objects out of the array. I think that it is related to the fact that the return struct <code>IntoIter&lt;T&gt;</code> does not have a lifetime argument while <code>Iter&lt;&#39;a, T&gt;</code> does, so the former cannot hold a slice."}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1452560886, "post_id": 34733930, "comment_id": 57214246, "body": "<code>mut</code> means that you can change the values, not that you can move them out."}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1452561215, "post_id": 34733930, "comment_id": 57214327, "body": "@rodrigo <code>let mut a = [&quot;abc&quot;.to_string()]; a.into_iter().map(|x| { *x });</code> =&gt; &quot;error: cannot move out of borrowed content&quot;"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1452561368, "post_id": 34733930, "comment_id": 57214365, "body": "Yeah, I think you are right and values cannot be moved from the array. However, I still think that it should be possible to implement a kind of <code>ArrayIntoIter</code> struct using unsafe Rust, as part of the library... Maybe not worth it, as you should use <code>Vec</code> for those cases anyway."}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1452574840, "post_id": 34733930, "comment_id": 57218021, "body": "so I don&#39;t understand... is that the reason that <code>array.into_iter</code> returns <code>&amp;T</code> - because it is doing magic to automatically convert it to <code>&amp;array.into_iter</code> -- and if so, I don&#39;t understand what that has to do with moving values or not moving values. Or is it as @rodrigo said, that you get the reference simply because (for some reason) you <i>cannot move values out of arrays</i>? Still very confused."}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 0, "creation_date": 1452575599, "post_id": 34733930, "comment_id": 57218317, "body": "related: what does &quot;moving&quot; mean under the covers? I was under the impression that it meant that it literally &quot;moves&quot; the data (for instance from the stack to the heap). Also, is &quot;moving&quot; the same thing as getting something &quot;by value&quot;?"}, {"owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "edited": false, "score": 0, "creation_date": 1452579182, "post_id": 34733930, "comment_id": 57219538, "body": "So one by one: Yes, <code>into_iter</code> returns <code>&amp;T</code>, because you&#39;re really calling <code>&amp;array.into_iter()</code>. This is not really magical - it happens automatically for all methods (needed &amp; will be added automatically). Not being able to move the array was just a side comment that&#39;s slightly related; it may or may not explain the answer. Moving the value means it is not valid in the previous location anymore and is instead present in the new one. This happens for <code>vec2</code> for example. At the end of this code, you can access <code>vec1[0]</code>, but not <code>vec2[0]</code>."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1452582999, "post_id": 34733930, "comment_id": 57221111, "body": "@rodrigo that <code>IntoIterator</code> is implemented for <code>&amp;mut [T]</code> <i>does not</i> imply that it is possible to move objects out of an array. It is not possible: all array items must always be initialized in Rust, and the only way to move something out of a (mutable) slice is to use <code>std:::mem::replace()</code> and similar functions. Also, because Rust does not have type-level integers yet, it is not possible to write an implementation of by-value <code>IntoIterator</code> for arrays - you&#39;d need a separate implementation for every array size, which without type-level integers is absolutely unwieldy."}], "tags": [], "owner": {"reputation": 30697, "user_id": 31667, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/082b069c287878a1bd5731f44c8f10e7?s=128&d=identicon&r=PG", "display_name": "viraptor", "link": "https://stackoverflow.com/users/31667/viraptor"}, "is_accepted": false, "score": 7, "last_activity_date": 1452560759, "last_edit_date": 1452560759, "creation_date": 1452560574, "answer_id": 34733930, "question_id": 34733811, "link": "https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter/34733930#34733930", "title": "What is the difference between iter and into_iter?", "body": "<p><code>.into_iter()</code> is not implemented for a array itself, but only <code>&amp;[]</code>. Compare:</p>\n\n<pre><code>impl&lt;'a, T&gt; IntoIterator for &amp;'a [T]\n    type Item = &amp;'a T\n</code></pre>\n\n<p>with</p>\n\n<pre><code>impl&lt;T&gt; IntoIterator for Vec&lt;T&gt;\n    type Item = T\n</code></pre>\n\n<p>Since <code>IntoIterator</code> is defined only on <code>&amp;[T]</code>, the slice itself cannot be dropped the same way as <code>Vec</code> when you use the values. (values cannot be moved out)</p>\n\n<p>Now, why that's the case is a different issues, and I'd like to learn myself. Speculating: array is the data itself, slice is only a view into it. In practice you cannot move the array as a value into another function, just pass a view of it, so you cannot consume it there either.</p>\n"}, {"comments": [{"owner": {"reputation": 9005, "user_id": 675637, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/8X97W.jpg?s=128&g=1", "display_name": "poy", "link": "https://stackoverflow.com/users/675637/poy"}, "edited": false, "score": 24, "creation_date": 1471318488, "post_id": 34745885, "comment_id": 65286946, "body": "I found this blog post helpful: <a href=\"http://hermanradtke.com/2015/06/22/effectively-using-iterators-in-rust.html\" rel=\"nofollow noreferrer\">hermanradtke.com/2015/06/22/&hellip;</a>"}, {"owner": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 0, "creation_date": 1556836342, "post_id": 34745885, "comment_id": 98573633, "body": "&gt;whether this iterator yields values, immutable references or mutable references is context dependent  What does it mean and how to deal with that? How one would force iter_mut to yield mutable values, for example?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 2, "creation_date": 1556865527, "post_id": 34745885, "comment_id": 98579739, "body": "@DanM.: (1) It means that <code>into_iter</code> picks an implementation based on whether the receiver is a value, reference or mutable reference. (2) There are no mutable values in Rust, or rather, any value is mutable since you have ownership."}, {"owner": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 0, "creation_date": 1556920586, "post_id": 34745885, "comment_id": 98605555, "body": "@MatthieuM.hm, that doesn&#39;t seem to be the case in my tests. I&#39;ve implemented IntoIter for <code>&amp;&#39;a MyStruct</code> and <code>&amp;mut &#39;a MyStruct</code> and the first one was always chosen if present even if I called <code>into_iter().for_each()</code> on <code>mut</code> value with <code>&amp;mut</code> arguments in lambda."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 0, "creation_date": 1556964168, "post_id": 34745885, "comment_id": 98612236, "body": "@DanM.: This seems strange to me; I would suggest posting a question with a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> reproducing this."}, {"owner": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 0, "creation_date": 1557056538, "post_id": 34745885, "comment_id": 98630885, "body": "@MatthieuM. ok, but just to be sure, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0aabde39ac19d98ba157ff9dbe34fad6\" rel=\"nofollow noreferrer\">this</a> is not the expected behavior, is it?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3355, "user_id": 4114447, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/aa93321ad023953eaaae28b490855e7a?s=128&d=identicon&r=PG&f=1", "display_name": "Dan M.", "link": "https://stackoverflow.com/users/4114447/dan-m"}, "edited": false, "score": 0, "creation_date": 1557060743, "post_id": 34745885, "comment_id": 98632030, "body": "@DanM.: It seems like a limitation of the type-inference/trait-selection mechanism to me, I&#39;d still ask the question explicitly on SO with this example to see if there&#39;s a specific language rule for the behavior, or any work on improving things. It&#39;s notable that were you to use a for loop you&#39;d need to write <code>&amp;mut foo</code> too."}, {"owner": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 0, "creation_date": 1589965511, "post_id": 34745885, "comment_id": 109499101, "body": "You didn&#39;t explain the difference (clearly, at least) between <code>iter</code> and <code>into_iter</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 0, "creation_date": 1589971096, "post_id": 34745885, "comment_id": 109502070, "body": "@Ixx The explanation seems clear to me, so unless you let me know which particular bits are unclear, or what you think should be worded better, your comment is unactionable."}, {"owner": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 0, "creation_date": 1590055241, "post_id": 34745885, "comment_id": 109537572, "body": "It&#39;s overall good content, but I don&#39;t see a &quot;to the point&quot; answer to &quot;What is the difference between iter and into_iter?&quot;, which you even cite directly. In the paragraph directly below to it, you just describe <code>into_iter</code> and in the next provide more general details about <code>iter</code> and <code>into_iter</code>."}, {"owner": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 0, "creation_date": 1590055470, "post_id": 34745885, "comment_id": 109537685, "body": "(admittedly I&#39;ve been short of time and read it in &quot;overflowing&quot; mode. But it&#39;s really difficult to locate, after the citation I was expecting something like &quot;<code>into_iter</code>  is (...) whereas <code>iter</code> is (...)&quot; which isn&#39;t there."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 1, "creation_date": 1590056000, "post_id": 34745885, "comment_id": 109537948, "body": "@Ixx: Thanks that&#39;s very useful. I decided to provide a TL;DR at the top of the question to avoid burying the answer in the middle, what do you think?"}, {"owner": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 0, "creation_date": 1590090787, "post_id": 34745885, "comment_id": 109556838, "body": "@MatthieuM. that&#39;s a really nice short summary, thanks!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 29866, "user_id": 930450, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/se3CE.png?s=128&g=1", "display_name": "Ixx", "link": "https://stackoverflow.com/users/930450/ixx"}, "edited": false, "score": 0, "creation_date": 1590136059, "post_id": 34745885, "comment_id": 109570973, "body": "@Ixx: Thank you for bringing it to my attention :)"}, {"owner": {"reputation": 2206, "user_id": 1420237, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f427f4dce4e8cd75b6154bae65629e88?s=128&d=identicon&r=PG", "display_name": "Lucas Werkmeister", "link": "https://stackoverflow.com/users/1420237/lucas-werkmeister"}, "edited": false, "score": 1, "creation_date": 1608808951, "post_id": 34745885, "comment_id": 115690666, "body": "For arrays implementing <code>IntoIter</code>, see also <a href=\"https://github.com/rust-lang/rust/issues/65798\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/65798</a>."}, {"owner": {"reputation": 69, "user_id": 12644421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c92d6154d6b875076a8f87705bd1fcb2?s=128&d=identicon&r=PG&f=1", "display_name": "crazyones110", "link": "https://stackoverflow.com/users/12644421/crazyones110"}, "edited": false, "score": 0, "creation_date": 1612198139, "post_id": 34745885, "comment_id": 116685739, "body": "I found this blog post helpful too, <a href=\"http://xion.io/post/code/rust-for-loop.html\" rel=\"nofollow noreferrer\">xion.io/post/code/rust-for-loop.html</a>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 240, "last_activity_date": 1617028944, "last_edit_date": 1617028944, "creation_date": 1452607721, "answer_id": 34745885, "question_id": 34733811, "link": "https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter/34745885#34745885", "title": "What is the difference between iter and into_iter?", "body": "<p><strong>TL;DR:</strong></p>\n<ul>\n<li>The iterator returned by <code>into_iter</code> may yield any of <code>T</code>, <code>&amp;T</code> or <code>&amp;mut T</code>, depending on the context.</li>\n<li>The iterator returned by <code>iter</code> will yield <code>&amp;T</code>, by convention.</li>\n<li>The iterator returned by <code>iter_mut</code> will yield <code>&amp;mut T</code>, by convention.</li>\n</ul>\n<hr />\n<p>The first question is: &quot;What is <code>into_iter</code>?&quot;</p>\n<p><code>into_iter</code> comes from the <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"noreferrer\"><code>IntoIterator</code> trait</a>:</p>\n<blockquote>\n<pre><code>pub trait IntoIterator \nwhere\n    &lt;Self::IntoIter as Iterator&gt;::Item == Self::Item, \n{\n    type Item;\n    type IntoIter: Iterator;\n    fn into_iter(self) -&gt; Self::IntoIter;\n}\n</code></pre>\n</blockquote>\n<p>You implement this trait when you want to specify how a particular type is to be converted into an iterator. Most notably, if a type implements <code>IntoIterator</code> it can be used in a <code>for</code> loop.</p>\n<p>For example, <code>Vec</code> implements <code>IntoIterator</code>... thrice!</p>\n<blockquote>\n<pre><code>impl&lt;T&gt; IntoIterator for Vec&lt;T&gt;\nimpl&lt;'a, T&gt; IntoIterator for &amp;'a Vec&lt;T&gt;\nimpl&lt;'a, T&gt; IntoIterator for &amp;'a mut Vec&lt;T&gt;\n</code></pre>\n</blockquote>\n<p>Each variant is slightly different.</p>\n<p>This one consumes the <code>Vec</code> and its iterator <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-IntoIterator\" rel=\"noreferrer\">yields <strong>values</strong></a> (<code>T</code> directly):</p>\n<blockquote>\n<pre><code>impl&lt;T&gt; IntoIterator for Vec&lt;T&gt; {\n    type Item = T;\n    type IntoIter = IntoIter&lt;T&gt;;\n\n    fn into_iter(mut self) -&gt; IntoIter&lt;T&gt; { /* ... */ }\n}\n</code></pre>\n</blockquote>\n<p>The other two take the vector by reference (don't be fooled by the signature of <code>into_iter(self)</code> because <code>self</code> is a reference in both cases) and their iterators will produce references to the elements inside <code>Vec</code>.</p>\n<p>This one <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-IntoIterator-1\" rel=\"noreferrer\">yields <strong>immutable references</strong></a>:</p>\n<blockquote>\n<pre><code>impl&lt;'a, T&gt; IntoIterator for &amp;'a Vec&lt;T&gt; {\n    type Item = &amp;'a T;\n    type IntoIter = slice::Iter&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; slice::Iter&lt;'a, T&gt; { /* ... */ }\n}\n</code></pre>\n</blockquote>\n<p>While this one <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-IntoIterator-2\" rel=\"noreferrer\">yields <strong>mutable references</strong></a>:</p>\n<blockquote>\n<pre><code>impl&lt;'a, T&gt; IntoIterator for &amp;'a mut Vec&lt;T&gt; {\n    type Item = &amp;'a mut T;\n    type IntoIter = slice::IterMut&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; slice::IterMut&lt;'a, T&gt; { /* ... */ }\n}\n</code></pre>\n</blockquote>\n<hr />\n<p>So:</p>\n<blockquote>\n<p>What is the difference between <code>iter</code> and <code>into_iter</code>?</p>\n</blockquote>\n<p><code>into_iter</code> is a generic method to obtain an iterator, whether this iterator yields values, immutable references or mutable references <strong>is context dependent</strong> and can sometimes be surprising.</p>\n<p><code>iter</code> and <code>iter_mut</code> are ad-hoc methods. Their return type is therefore independent of the context, and will conventionally be iterators yielding immutable references and mutable references, respectively.</p>\n<p>The author of the Rust by Example post illustrates the surprise coming from the dependence on the context (i.e., the type) on which <code>into_iter</code> is called, and is also compounding the problem by using the fact that:</p>\n<ol>\n<li><code>IntoIterator</code> is not implemented for <code>[T; N]</code>, only for <code>&amp;[T; N]</code> and <code>&amp;mut [T; N]</code></li>\n<li>When a method is not implemented for a value, it is automatically searched for <em>references</em> to that value instead</li>\n</ol>\n<p>which is very surprising for <code>into_iter</code> since all types (except <code>[T; N]</code>) implement it for all 3 variations (value and references).</p>\n<p>Arrays implement <code>IntoIterator</code> (in such a surprising fashion) to make it possible to iterate over references to them in <code>for</code> loops.</p>\n<p>As of Rust 1.51, it's possible for the array to implement an iterator that yields values (via <a href=\"https://doc.rust-lang.org/std/array/struct.IntoIter.html\" rel=\"noreferrer\"><code>array::IntoIter</code></a>), but the existing implementation of <code>IntoIterator</code> that automatically references <a href=\"https://github.com/rust-lang/rust/pull/65819\" rel=\"noreferrer\">makes it hard to implement by-value iteration via <code>IntoIterator</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 563, "user_id": 3536879, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23da00dfb5544decf2c216d68e453a8d?s=128&d=identicon&r=PG&f=1", "display_name": "mmw", "link": "https://stackoverflow.com/users/3536879/mmw"}, "edited": false, "score": 11, "creation_date": 1578332863, "post_id": 57697614, "comment_id": 105396635, "body": "Thank you...  It&#39;s hard to see how the accepted answer articulates a distinction between <code>iter</code> and <code>into_iter</code>."}, {"owner": {"reputation": 697, "user_id": 815327, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/jUSmf.jpg?s=128&g=1", "display_name": "Cyrusmith", "link": "https://stackoverflow.com/users/815327/cyrusmith"}, "edited": false, "score": 0, "creation_date": 1585360620, "post_id": 57697614, "comment_id": 107739935, "body": "That&#39;s exactly what I was looking for!"}, {"owner": {"reputation": 1089, "user_id": 3243497, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3bece7a1639b7122d7b2de6b9f86bdde?s=128&d=identicon&r=PG", "display_name": "betaveros", "link": "https://stackoverflow.com/users/3243497/betaveros"}, "edited": false, "score": 1, "creation_date": 1602007088, "post_id": 57697614, "comment_id": 113581539, "body": "This is the good simple answer for the (common?) case where <code>my_vec</code> or whatever you are calling <code>.into_iter()</code> on is in fact a <code>Vec&lt;T&gt;</code>. The other answers are more complicated to also mention that, if you call <code>.into_iter()</code> on other things such as a <code>&amp;Vec&lt;T&gt;</code> or <code>&amp;[]</code> (or equivalently, try to iterate over them in a <code>for ... in ... </code> loop), you might not actually be moving the items into the new scope. (At least, that&#39;s my understanding so far...)"}, {"owner": {"reputation": 6389, "user_id": 1291990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/698affa0b4beedb2f368e983e39af6a7?s=128&d=identicon&r=PG", "display_name": "Michael Dorst", "link": "https://stackoverflow.com/users/1291990/michael-dorst"}, "edited": false, "score": 0, "creation_date": 1618688580, "post_id": 57697614, "comment_id": 118679985, "body": "Yeah, &quot;<code>into_iter()</code> iterates over the items, moving them into the new scope&quot; is not always accurate - see the accepted answer for more details."}], "tags": [], "owner": {"reputation": 508, "user_id": 11950764, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8213f0ffc9106d7663c4b5f29f4ec9e5?s=128&d=identicon&r=PG", "display_name": "joe", "link": "https://stackoverflow.com/users/11950764/joe"}, "is_accepted": false, "score": 121, "last_activity_date": 1567014301, "creation_date": 1567014301, "answer_id": 57697614, "question_id": 34733811, "link": "https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter/57697614#57697614", "title": "What is the difference between iter and into_iter?", "body": "<p>I (a Rust newbie) came here from Google seeking a simple answer which wasn't provided by the other answers. Here's that simple answer:</p>\n\n<ul>\n<li><code>iter()</code> iterates over the items by reference</li>\n<li><code>into_iter()</code> iterates over the items, moving them into the new scope</li>\n<li><code>iter_mut()</code> iterates over the items, giving a mutable reference to each item</li>\n</ul>\n\n<p>So <code>for x in my_vec { ... }</code> is essentially equivalent to <code>my_vec.into_iter().for_each(|x| ... )</code> - both <code>move</code> the elements of <code>my_vec</code> into the <code>...</code> scope.</p>\n\n<p>If you just need to \"look at\" the data, use <code>iter</code>, if you need to edit/mutate it, use <code>iter_mut</code>, and if you need to give it a new owner, use <code>into_iter</code>.</p>\n\n<p>This was helpful: <a href=\"http://hermanradtke.com/2015/06/22/effectively-using-iterators-in-rust.html\" rel=\"noreferrer\">http://hermanradtke.com/2015/06/22/effectively-using-iterators-in-rust.html</a></p>\n\n<p>Making this a community wiki so that hopefully a Rust pro can edit this answer if I've made any mistakes.</p>\n"}, {"tags": [], "owner": {"reputation": 745, "user_id": 1403530, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bM6iA.png?s=128&g=1", "display_name": "Daniel", "link": "https://stackoverflow.com/users/1403530/daniel"}, "is_accepted": false, "score": 8, "last_activity_date": 1594467553, "creation_date": 1594467553, "answer_id": 62848692, "question_id": 34733811, "link": "https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter/62848692#62848692", "title": "What is the difference between iter and into_iter?", "body": "<p>I think there's something to clarify a bit more. Collection types, such as <code>Vec&lt;T&gt;</code> and <code>VecDeque&lt;T&gt;</code>, have <code>into_iter</code> method that yields <code>T</code> because they implement <code>IntoIterator&lt;Item=T&gt;</code>. There's nothing to stop us to create a type <code>Foo&lt;T&gt;</code> if which is iterated over, it will yield not <code>T</code> but another type <code>U</code>. That is, <code>Foo&lt;T&gt;</code> implements <code>IntoIterator&lt;Item=U&gt;</code>.</p>\n<p>In fact, there are some examples in <code>std</code>: <code>&amp;Path</code> <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#impl-IntoIterator\" rel=\"noreferrer\">implements</a> <code>IntoIterator&lt;Item=&amp;OsStr&gt;</code> and <code>&amp;UnixListener</code> <a href=\"https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html#impl-IntoIterator\" rel=\"noreferrer\">implements</a> <code>IntoIterator&lt;Item=Result&lt;UnixStream&gt;&gt;</code>.</p>\n<hr />\n<h2>The difference between <code>into_iter</code> and <code>iter</code></h2>\n<p>Back to the original question on the difference between <code>into_iter</code> and <code>iter</code>. Similar to that others have pointed out, the difference is that <code>into_iter</code> is a required method of <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"noreferrer\"><code>IntoIterator</code></a> which can yield any type specified in <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html#associatedtype.Item\" rel=\"noreferrer\"><code>IntoIterator::Item</code></a>. Typically, if a type implements <code>IntoIterator&lt;Item=I&gt;</code>, by convention it has also two ad-hoc methods: <code>iter</code> and <code>iter_mut</code> which yield <code>&amp;I</code> and <code>&amp;mut I</code>, respectively.</p>\n<p>What it implies is that we can create a function that receives a type that has <code>into_iter</code> method (i.e. it is an iterable) by using a trait bound:</p>\n<pre><code>fn process_iterable&lt;I: IntoIterator&gt;(iterable: I) {\n    for item in iterable {\n        // ...\n    }\n}\n</code></pre>\n<p>However, we can't<sup>*</sup> use a trait bound to require a type to have <code>iter</code> method or <code>iter_mut</code> method, because they're just conventions. We can say that <code>into_iter</code> is more widely useable than <code>iter</code> or <code>iter_mut</code>.</p>\n<h3>Alternatives to <code>iter</code> and <code>iter_mut</code></h3>\n<p>Another interesting to observe is that <code>iter</code> is not the only way to get an iterator that yields <code>&amp;T</code>. By convention (again), collection types <code>SomeCollection&lt;T&gt;</code> in <code>std</code> which have <code>iter</code> method also have their immutable reference types <code>&amp;SomeCollection&lt;T&gt;</code> implement <code>IntoIterator&lt;Item=&amp;T&gt;</code>. For example, <code>&amp;Vec&lt;T&gt;</code> <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-IntoIterator\" rel=\"noreferrer\">implements</a> <code>IntoIterator&lt;Item=&amp;T&gt;</code>, so it enables us to iterate over <code>&amp;Vec&lt;T&gt;</code>:</p>\n<pre><code>let v = vec![1, 2];\n\n// Below is equivalent to: `for item in v.iter() {`\nfor item in &amp;v {\n    println!(&quot;{}&quot;, item);\n}\n</code></pre>\n<p>If <code>v.iter()</code> is equivalent to <code>&amp;v</code> in that both implement <code>IntoIterator&lt;Item=&amp;T&gt;</code>, why then does Rust provide both? It's for ergonomics. In <code>for</code> loops, it's a bit more concise to use <code>&amp;v</code> than <code>v.iter()</code>; but in other cases, <code>v.iter()</code> is a lot clearer than <code>(&amp;v).into_iter()</code>:</p>\n<pre><code>let v = vec![1, 2];\n\nlet a: Vec&lt;i32&gt; = v.iter().map(|x| x * x).collect();\n// Although above and below are equivalent, above is a lot clearer than below.\nlet b: Vec&lt;i32&gt; = (&amp;v).into_iter().map(|x| x * x).collect();\n</code></pre>\n<p>Similarly, in <code>for</code> loops, <code>v.iter_mut()</code> can be replaced with <code>&amp;mut v</code>:</p>\n<pre><code>let mut v = vec![1, 2];\n\n// Below is equivalent to: `for item in v.iter_mut() {`\nfor item in &amp;mut v {\n    *item *= 2;\n}\n</code></pre>\n<hr />\n<h2>When to provide (implement) <code>into_iter</code> and <code>iter</code> methods for a type</h2>\n<p>If the type has only one \u201cway\u201d to be iterated over, we should implement both. However, if there are two ways or more it can be iterated over, we should instead provide an ad-hoc method for each way.</p>\n<p>For example, <code>String</code> provides neither <code>into_iter</code> nor <code>iter</code> because there are two ways to iterate it: to iterate its representation in bytes or to iterate its representation in characters. Instead, it provides two methods: <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.bytes\" rel=\"noreferrer\"><code>bytes</code></a> for iterating the bytes and <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.chars\" rel=\"noreferrer\"><code>chars</code></a> for iterating the characters, as alternatives to <code>iter</code> method.</p>\n<hr />\n<p><sup>*</sup> Well, technically we can do it by creating a trait. But then we need to <code>impl</code> that trait for each type we want to use. Meanwhile, many types in <code>std</code> already implement <code>IntoIterator</code>.</p>\n"}], "owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49092, "favorite_count": 60, "accepted_answer_id": 34745885, "answer_count": 4, "score": 256, "last_activity_date": 1617028944, "creation_date": 1452559731, "last_edit_date": 1490577236, "question_id": 34733811, "link": "https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter", "title": "What is the difference between iter and into_iter?", "body": "<p>I am doing the <a href=\"http://rustbyexample.com/fn/closures/closure_examples/iter_any.html\" rel=\"noreferrer\">Rust by Example</a> tutorial which has this code snippet:</p>\n\n<pre><code>// Vec example\nlet vec1 = vec![1, 2, 3];\nlet vec2 = vec![4, 5, 6];\n\n// `iter()` for vecs yields `&amp;i32`. Destructure to `i32`.\nprintln!(\"2 in vec1: {}\", vec1.iter()     .any(|&amp;x| x == 2));\n// `into_iter()` for vecs yields `i32`. No destructuring required.\nprintln!(\"2 in vec2: {}\", vec2.into_iter().any(| x| x == 2));\n\n// Array example\nlet array1 = [1, 2, 3];\nlet array2 = [4, 5, 6];\n\n// `iter()` for arrays yields `&amp;i32`.\nprintln!(\"2 in array1: {}\", array1.iter()     .any(|&amp;x| x == 2));\n// `into_iter()` for arrays unusually yields `&amp;i32`.\nprintln!(\"2 in array2: {}\", array2.into_iter().any(|&amp;x| x == 2));\n</code></pre>\n\n<p>I am thoroughly confused \u2014 for a <code>Vec</code> the iterator returned from <code>iter</code> yields references and the iterator returned from <code>into_iter</code> yields values, but for an array these iterators are identical?</p>\n\n<p>What is the use case/API for these two methods?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25596, "user_id": 3140, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/84dbc773c808111cc4ce138bff33f482?s=128&d=identicon&r=PG", "display_name": "Jacob Krall", "link": "https://stackoverflow.com/users/3140/jacob-krall"}, "edited": false, "score": 0, "creation_date": 1452542304, "post_id": 34729930, "comment_id": 57206103, "body": "<a href=\"https://en.wikipedia.org/wiki/Bootstrapping_%28compilers%29#The_chicken_and_egg_problem\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/&hellip;</a>"}, {"owner": {"reputation": 59821, "user_id": 716118, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/7e011094fc15d460c9a7e4e5aa4fd868?s=128&d=identicon&r=PG", "display_name": "voithos", "link": "https://stackoverflow.com/users/716118/voithos"}, "edited": false, "score": 2, "creation_date": 1452542328, "post_id": 34729930, "comment_id": 57206119, "body": "This is explained well in an existing question: <a href=\"http://stackoverflow.com/questions/193560/writing-a-compiler-in-its-own-language\" title=\"writing a compiler in its own language\">stackoverflow.com/questions/193560/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 67160, "user_id": 1078084, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/wApmM.jpg?s=128&g=1", "display_name": "Akavall", "link": "https://stackoverflow.com/users/1078084/akavall"}, "edited": false, "score": 12, "creation_date": 1452553882, "post_id": 34730014, "comment_id": 57212043, "body": "I know you are just making a hypothetical situation but initial <code>Rust</code> compiler was written in <code>OCaml</code> not <code>C++</code>. <a href=\"https://en.wikipedia.org/wiki/Rust_(programming_language)\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Rust_(programming_language)</a>"}], "tags": [], "owner": {"reputation": 41440, "user_id": 3887516, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/62e0310897139a10f3293022b6eb7054?s=128&d=identicon&r=PG&f=1", "display_name": "Amit", "link": "https://stackoverflow.com/users/3887516/amit"}, "is_accepted": false, "score": 8, "last_activity_date": 1452542389, "creation_date": 1452542389, "answer_id": 34730014, "question_id": 34729930, "link": "https://stackoverflow.com/questions/34729930/what-language-was-used-to-write-rust-compiler/34730014#34730014", "title": "What language was used to write Rust compiler?", "body": "<p>Simply put, once you have a compiler that compiles code, you can use that to develop and compile a new compiler. That new compiler can \"understand\" whatever language it's designed to compile.</p>\n\n<p>So, suppose there was some C++ based rust compiler, and rust code was developed that compiles to a rust compiler, once you build that you have a rust based rust compiler.</p>\n"}], "owner": {"reputation": 5778, "user_id": 4790988, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/fvtDA.jpg?s=128&g=1", "display_name": "Dima  Kudosh", "link": "https://stackoverflow.com/users/4790988/dima-kudosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6186, "favorite_count": 0, "closed_date": 1452542517, "answer_count": 1, "score": 6, "last_activity_date": 1452542389, "creation_date": 1452542075, "question_id": 34729930, "link": "https://stackoverflow.com/questions/34729930/what-language-was-used-to-write-rust-compiler", "closed_reason": "Duplicate", "title": "What language was used to write Rust compiler?", "body": "<p>94% of Rust compiler was written in Rust. So I can't understand how is it possible? Because for compiling rustc you already must have some rust compiler. Can someone explain how it works and how rust compiler was created?</p>\n"}, {"tags": ["unit-testing", "rust", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 2, "last_activity_date": 1452522751, "creation_date": 1452522751, "answer_id": 34724005, "question_id": 34723575, "link": "https://stackoverflow.com/questions/34723575/testing-a-custom-crate/34724005#34724005", "title": "Testing a custom crate", "body": "<p>A crate is also automatically a module of its own name. So you do not need to specify a sub-module. Since you imported everything in the <code>mycrate</code> crate, you also imported the <code>mycrate::mycrate</code> module, which caused the naming conflict.</p>\n\n<p>Simply change the contents of your <code>src/lib.rs</code> to</p>\n\n<pre><code>pub struct Struct {\n    field: i32,\n}\n\nimpl Struct {\n    pub fn new(n: i32) -&gt; Struct {\n        Struct { field: n }\n    }\n}\n</code></pre>\n\n<p>There's also no need for the <code>crate_name</code> and <code>crate_type</code> attributes.</p>\n"}], "owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 34724005, "answer_count": 1, "score": 0, "last_activity_date": 1452526773, "creation_date": 1452521520, "last_edit_date": 1452526773, "question_id": 34723575, "link": "https://stackoverflow.com/questions/34723575/testing-a-custom-crate", "title": "Testing a custom crate", "body": "<p>I've got this crate  in<code>/src/lib.rs</code> which I'm trying to run tests on:</p>\n\n<pre><code>#![crate_type = \"lib\"]\n#![crate_name = \"mycrate\"]\n\npub mod mycrate {\n    pub struct Struct {\n        field: i32,\n    }\n\n    impl Struct {\n        pub fn new(n: i32) -&gt; Struct {\n            Struct { field: n }\n        }\n    }\n}\n</code></pre>\n\n<p>The test file at <code>/tests/test.rs</code>:</p>\n\n<pre><code>extern crate mycrate;\n\nuse mycrate::*;\n\n#[test]\nfn test() {\n    ...\n}\n</code></pre>\n\n<p>Running <code>cargo test</code> gives this error:</p>\n\n<pre><code>tests/test.rs:3:5: 3:16 error: import `mycrate` conflicts with imported crate in this module (maybe you meant `use mycrate::*`?) [E0254]\ntests/test.rs:3 use mycrate::*;\n                     ^~~~~~~~~\n</code></pre>\n\n<p>What am I doing wrong here?</p>\n"}, {"tags": ["syntax", "reference", "rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 1, "last_activity_date": 1452501584, "creation_date": 1452501584, "answer_id": 34717149, "question_id": 34717001, "link": "https://stackoverflow.com/questions/34717001/whats-the-difference-between-ref-and-when-assigning-a-variable-from-a-referen/34717149#34717149", "title": "What&#39;s the difference between ref and &amp; when assigning a variable from a reference?", "body": "<p>First of all, you do not need the <code>&amp;</code> in your working example. If you use it, you end up with a <code>&amp;&amp;Vec&lt;_&gt;</code>, which you don't really need.</p>\n\n<pre><code>let vec = vec![1, 2, 3];\nlet ref y = vec;\n</code></pre>\n\n<p>The problem with your first code is that you are doing two things at once. Lets split it up into two:</p>\n\n<p>The first part creates a reference to <code>vec</code></p>\n\n<pre><code>let y1 = &amp;vec;\n</code></pre>\n\n<p>The second part (the <code>&amp;</code> before the variable binding), <a href=\"https://doc.rust-lang.org/stable/book/patterns.html#destructuring\" rel=\"nofollow\">destructures</a>.</p>\n\n<pre><code>let &amp;y2 = y1;\n</code></pre>\n\n<p>This means you are trying to move out of the reference, which only works if the type is <code>Copy</code>, because then any attempt to move will copy the object instead.</p>\n"}, {"comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1452506063, "post_id": 34717322, "comment_id": 57182775, "body": "Is there a legit case where we want to use something like <code>let &amp;y = &amp;vec;</code>?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1452510159, "post_id": 34717322, "comment_id": 57185413, "body": "@WiSaGaN: I cannot think of any."}, {"owner": {"reputation": 63, "user_id": 4972875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec75ead3af0151a16672390458206e4a?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey Bromov", "link": "https://stackoverflow.com/users/4972875/sergey-bromov"}, "reply_to_user": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1452512947, "post_id": 34717322, "comment_id": 57187136, "body": "@WiSaGaN: This construction may be used for example in closures. It&#39;s used in function retain in Vec and so on."}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1452519063, "post_id": 34717322, "comment_id": 57191251, "body": "No-one has said it directly, but it seems worth mentioning for completeness: the <code>let ref y = &amp;vec;</code> example is equivalent to <code>let y = &amp;&amp;vec;</code>."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1452519519, "post_id": 34717322, "comment_id": 57191548, "body": "@huon: Good call, I added a little blurb to that effect after showing off the type of <code>y</code> in the second case."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 63, "user_id": 4972875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec75ead3af0151a16672390458206e4a?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey Bromov", "link": "https://stackoverflow.com/users/4972875/sergey-bromov"}, "edited": false, "score": 0, "creation_date": 1452519741, "post_id": 34717322, "comment_id": 57191699, "body": "@SergeyBromov: I could not find such construct <a href=\"https://github.com/rust-lang/rust/blob/master/src/libcollections/vec.rs#L611\" rel=\"nofollow noreferrer\">here</a>, do you have an up to date example? I&#39;d really like the understand the usecase."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1452520549, "post_id": 34717322, "comment_id": 57192275, "body": "Usually <code>&amp;</code>-pattern is not idiomatic - often it is possible to use dereference operator <code>*</code>. For example, if a method on an enum accepts <code>&amp;self</code>, it is better to write <code>match *self { Variant1(...) =&gt; ... }</code> instead of <code>match self { &amp;Variant1(...) =&gt; ... }</code>. However, sometimes it can be used for much clearer code, for example, when you need to process an iterator of tuples with <code>filter()</code>: <code>vec.enumerate().filter(|&amp;(i, ref v)| ...)</code>. I don&#39;t think I&#39;ve ever seen <code>&amp;</code>-pattern in <code>let</code> bindings."}, {"owner": {"reputation": 63, "user_id": 4972875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec75ead3af0151a16672390458206e4a?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey Bromov", "link": "https://stackoverflow.com/users/4972875/sergey-bromov"}, "edited": false, "score": 0, "creation_date": 1452577553, "post_id": 34717322, "comment_id": 57219013, "body": "@MatthieuM.: in func. &#39;retain&#39; I mean that when we pass argument &amp;v[i] to closure |&amp;x| x%2 == 0 we get the simple i32; |x| *x%2 == 0 is equivalent, thus all is OK; in other side if we passed Vec&lt;String&gt; to closure |&amp;x | we get error &#39;cannot move out of borrowed content&#39;, thus |x| is correct, that&#39;s why I asked my question."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 63, "user_id": 4972875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec75ead3af0151a16672390458206e4a?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey Bromov", "link": "https://stackoverflow.com/users/4972875/sergey-bromov"}, "edited": false, "score": 0, "creation_date": 1452582879, "post_id": 34717322, "comment_id": 57221057, "body": "@SergeyBromov: Ah! I understand now. Yes indeed pattern matching also applies in closure/functions arguments."}, {"owner": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "edited": false, "score": 0, "creation_date": 1548168054, "post_id": 34717322, "comment_id": 95441082, "body": "Note that <code>ref</code> is not needed for destructuring anymore. <code>Some(ref y) = vec</code> can be written as <code>Some(y) = &amp;vec</code> now."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "edited": false, "score": 0, "creation_date": 1548169912, "post_id": 34717322, "comment_id": 95442310, "body": "@Chronial: Hum... match ergonomics, right? I haven&#39;t tested with &quot;deep&quot; scenarios, do you know if it would work then too?"}, {"owner": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "edited": false, "score": 0, "creation_date": 1548197030, "post_id": 34717322, "comment_id": 95454880, "body": "What do you mean with &quot;deep&quot;? This will work also work with arbitrary many levels of nesting."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 54931, "user_id": 758345, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19136cbc4a30ad881e9d95275e9eb5a0?s=128&d=identicon&r=PG", "display_name": "Chronial", "link": "https://stackoverflow.com/users/758345/chronial"}, "edited": false, "score": 0, "creation_date": 1548230331, "post_id": 34717322, "comment_id": 95463549, "body": "@Chronial: Arbitrary many levels is what I was wondering. It would have surprised me if it didn&#39;t, but just in case... thanks for the confirmation."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1548230492, "last_edit_date": 1548230492, "creation_date": 1452502226, "answer_id": 34717322, "question_id": 34717001, "link": "https://stackoverflow.com/questions/34717001/whats-the-difference-between-ref-and-when-assigning-a-variable-from-a-referen/34717322#34717322", "title": "What&#39;s the difference between ref and &amp; when assigning a variable from a reference?", "body": "<p>Pattern binding can get some using to ;)</p>\n\n<p>In order to understand what the compiler does, you can use the <code>let _: () = ...;</code> trick. By assigning to a variable of type <code>()</code>, you force the compiler to print an error message giving you the type it inferred for your variable.</p>\n\n<hr>\n\n<p>In the first example:</p>\n\n<pre><code>let vec = vec![1, 2, 3];\nlet &amp;y = &amp;vec;\nlet _: () = y;\n</code></pre>\n\n<p>we get:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:4:13\n  |\n4 | let _: () = y;\n  |             ^ expected (), found struct `std::vec::Vec`\n  |\n  = note: expected type `()`\n             found type `std::vec::Vec&lt;{integer}&gt;`\n</code></pre>\n</blockquote>\n\n<p>the type of <code>y</code> is <code>Vec&lt;i32&gt;</code>.</p>\n\n<p>What it means is that you are:</p>\n\n<ol>\n<li>Borrowing <code>vec</code> into a temporary</li>\n<li>Attempting to move <code>vec</code> into <code>y</code>, which is forbidden because <code>vec</code> is already borrowed.</li>\n</ol>\n\n<p>The equivalent correct code would be:</p>\n\n<pre><code>let vec = vec![1, 2, 3];\nlet y = vec;\n</code></pre>\n\n<hr>\n\n<p>In the second example:</p>\n\n<pre><code>let vec = vec![1, 2, 3];\nlet ref y = &amp;vec;\nlet _: () = y;\n</code></pre>\n\n<p>we get:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:4:17\n  |\n4 |     let _: () = y;\n  |                 ^ expected (), found reference\n  |\n  = note: expected type `()`\n             found type `&amp;&amp;std::vec::Vec&lt;{integer}&gt;`\n</code></pre>\n</blockquote>\n\n<p>Thus <code>y</code> is <code>&amp;&amp;Vec&lt;i32&gt;</code>.</p>\n\n<p>This let us see that <code>let ref a = b;</code> is generally equivalent to <code>let a = &amp;b;</code>, and therefore in this case: <code>let y = &amp;&amp;vec;</code>.</p>\n\n<p><code>ref</code> is made for destructuring; for example, if you had:</p>\n\n<pre><code>let vec = Some(vec![1, 2, 3]);\nif let Some(ref y) = vec {\n    // use `y` here\n}\n</code></pre>\n\n<p>you can use <code>ref</code> here to be able to bind <code>y</code> to <code>&amp;Vec&lt;i32&gt;</code> <em>without</em> moving even though <code>vec</code> here has type <code>Option&lt;Vec&lt;i32&gt;&gt;</code>. Indeed, the purpose of <code>ref</code> is to take a reference <em>inside</em> an existing object during destructuring.</p>\n\n<p>In general, in a <code>let</code> statement, you will not use <code>ref</code>.</p>\n\n<p>And since Rust 1.26, <code>ref</code> is inferred in pattern matching; see the <a href=\"https://github.com/rust-lang/rust/pull/49394\" rel=\"nofollow noreferrer\">stabilization of match ergonomics</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 3, "last_activity_date": 1452502256, "creation_date": 1452502256, "answer_id": 34717333, "question_id": 34717001, "link": "https://stackoverflow.com/questions/34717001/whats-the-difference-between-ref-and-when-assigning-a-variable-from-a-referen/34717333#34717333", "title": "What&#39;s the difference between ref and &amp; when assigning a variable from a reference?", "body": "<p>The same symbol (<code>&amp;</code>) is doing two different things when used on the right-end and left-end side of a binding. The left-hand side works like a pattern matching, so:</p>\n\n<pre><code>let x = (y, z); // x contains a tuple with value (y, z)\nlet (a, b) = x  // x is destructured into (a, b), so now\n                // a has value y and b has value z\n</code></pre>\n\n<p>In the same way</p>\n\n<pre><code>let x = &amp;y; // x is a reference to y\nlet &amp;z = x; // this is like let &amp;z= &amp;y, so we want z to be y\n            // this is equivalent to let z = *x\n</code></pre>\n\n<p>A <code>ref</code> binding on the left side is saying \"pattern match by reference, not by value\". So these two statements are equivalent:</p>\n\n<pre><code>let ref y = vec;\nlet y = &amp;vec;\n</code></pre>\n\n<p>although in a let, the second one is more idiomatic.</p>\n\n<p>You can see more examples on the <a href=\"http://rustbyexample.com/flow_control/match/destructuring/destructure_pointers.html\" rel=\"nofollow\">pointers/ref chapter on rust by example</a></p>\n"}], "owner": {"reputation": 63, "user_id": 4972875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ec75ead3af0151a16672390458206e4a?s=128&d=identicon&r=PG&f=1", "display_name": "Sergey Bromov", "link": "https://stackoverflow.com/users/4972875/sergey-bromov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 946, "favorite_count": 1, "accepted_answer_id": 34717322, "answer_count": 3, "score": 6, "last_activity_date": 1548230492, "creation_date": 1452501031, "last_edit_date": 1548081111, "question_id": 34717001, "link": "https://stackoverflow.com/questions/34717001/whats-the-difference-between-ref-and-when-assigning-a-variable-from-a-referen", "title": "What&#39;s the difference between ref and &amp; when assigning a variable from a reference?", "body": "<p>What is wrong with this code?</p>\n\n<pre><code>fn example() {\n    let vec = vec![1, 2, 3];\n    let &amp;_y = &amp;vec;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/lib.rs:3:15\n  |\n3 |     let &amp;_y = &amp;vec;\n  |         ---   ^^^^ cannot move out of borrowed content\n  |         ||\n  |         |data moved here\n  |         help: consider removing the `&amp;`: `_y`\n  |\nnote: move occurs because `_y` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n --&gt; src/lib.rs:3:10\n  |\n3 |     let &amp;_y = &amp;vec;\n  |          ^^\n</code></pre>\n\n<p>and why this is correct?</p>\n\n<pre><code>let vec = vec![1, 2, 3];\nlet ref _y = &amp;vec;\n</code></pre>\n"}, {"tags": ["editor", "rust", "sublimetext3", "syntax-highlighting"], "answers": [{"tags": [], "owner": {"reputation": 86, "user_id": 3581706, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5486dafefb96757aa348dcbda9778274?s=128&d=identicon&r=PG", "display_name": "kulinich", "link": "https://stackoverflow.com/users/3581706/kulinich"}, "is_accepted": true, "score": 3, "last_activity_date": 1497422589, "last_edit_date": 1497422589, "creation_date": 1452499234, "answer_id": 34716601, "question_id": 34714352, "link": "https://stackoverflow.com/questions/34714352/sublime-text-3-support-for-rust/34716601#34716601", "title": "Sublime Text 3 support for Rust", "body": "<p>After you installed Package Control, just follow instruction on this page:\n<a href=\"https://packagecontrol.io/packages/Rust%20Enhanced\" rel=\"nofollow noreferrer\">Rust package</a>.</p>\n\n<p>Install the Package Control package if you haven't got it yet. Package Control is the best way to install packages for Sublime Text. See <a href=\"http://wbond.net/sublime_packages/package_control/installation\" rel=\"nofollow noreferrer\">http://wbond.net/sublime_packages/package_control/installation</a> for instructions.</p>\n\n<p>Open the palette (<kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd> or <kbd>Command</kbd>+<kbd>Shift</kbd>+<kbd>P</kbd>) in Sublime Text and select Package Control: Install Package and then select Rust from the list. That's it.</p>\n\n<p>P.S. Also, you can see another packages for sublime text for rust language on this page: <a href=\"http://areweideyet.com/#sublime\" rel=\"nofollow noreferrer\">http://areweideyet.com/#sublime</a></p>\n"}], "owner": {"reputation": 7536, "user_id": 2419183, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/ac151b3eb8086a1f05da6f80ab1b1f50?s=128&d=identicon&r=PG", "display_name": "Peter Pei Guo", "link": "https://stackoverflow.com/users/2419183/peter-pei-guo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3556, "favorite_count": 0, "accepted_answer_id": 34716601, "answer_count": 1, "score": 4, "last_activity_date": 1497422589, "creation_date": 1452487807, "last_edit_date": 1452488476, "question_id": 34714352, "link": "https://stackoverflow.com/questions/34714352/sublime-text-3-support-for-rust", "title": "Sublime Text 3 support for Rust", "body": "<p>I am on Windows 7 and I would like to use Sublime Text 3 for editing Rust files. I am on Rust version 1.5.0. </p>\n\n<p>I searched on the sublime site and found several packages listed on <a href=\"https://packagecontrol.io/search/rust\" rel=\"nofollow\">sublime text rust packages</a>. I downloaded the first package on that page - the one published by rust-lang. I followed the instructions on <a href=\"https://packagecontrol.io/installation\" rel=\"nofollow\">the installation guide page</a>. Afterwards I restarted sublime text.</p>\n\n<p>However when I opened my .rs file, I did not see any syntax highlighting and every character was in white. I clicked on the View>Syntax menu, and I did not see Rust listed among the languages.</p>\n\n<p>In folder AppData\\Roaming\\Sublime Text 3\\Installed Packages, I can see a file called Package Control.sublime-package. I assume that indicates that the package was downloaded at the least. </p>\n\n<p>What could be wrong? Do I have the right expectation for syntax highlighting? Anybody had success with this?</p>\n"}, {"tags": ["rust", "human-readable"], "comments": [{"owner": {"reputation": 1589, "user_id": 2770092, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2321a7b8ee2a179e16b50242ecb21c4f?s=128&d=identicon&r=PG&f=1", "display_name": "Cecilio Pardo", "link": "https://stackoverflow.com/users/2770092/cecilio-pardo"}, "edited": false, "score": 5, "creation_date": 1452467277, "post_id": 34711832, "comment_id": 57170047, "body": "<a href=\"http://stackoverflow.com/questions/26998485/rust-print-format-number-with-thousand-separator\" title=\"rust print format number with thousand separator\">stackoverflow.com/questions/26998485/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2690, "user_id": 3296811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/Lt27n.jpg?s=128&g=1", "display_name": "Quill", "link": "https://stackoverflow.com/users/3296811/quill"}, "is_accepted": false, "score": 4, "last_activity_date": 1452487920, "last_edit_date": 1452487920, "creation_date": 1452484795, "answer_id": 34714007, "question_id": 34711832, "link": "https://stackoverflow.com/questions/34711832/human-readable-numbers/34714007#34714007", "title": "Human readable numbers", "body": "<p>Try this psuedo algorithm:</p>\n\n<ol>\n<li>Divide the string length by 3</li>\n<li>Round that down, and we'll call it <code>x</code></li>\n<li><p>Loop over the string <code>x</code> times, going backwards:</p>\n\n<ol>\n<li>Get the string at <code>x</code> times 3 position, or index [(x times 3) - 1], we'll call it <code>y</code>.</li>\n<li>Replace <code>y</code> with <code>\",\" + y</code></li>\n</ol></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 594, "user_id": 5760823, "user_type": "registered", "profile_image": "https://graph.facebook.com/10154604433423840/picture?type=large", "display_name": "Dylan James McGannon", "link": "https://stackoverflow.com/users/5760823/dylan-james-mcgannon"}, "edited": false, "score": 1, "creation_date": 1452486959, "post_id": 34714201, "comment_id": 57174784, "body": "This wont work for some negative numbers, try &quot;-100000000&quot; for example."}, {"owner": {"reputation": 3467, "user_id": 2958455, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/4bf81a9aa9aa3619f1197c901f079268?s=128&d=identicon&r=PG", "display_name": "Jared Mackey", "link": "https://stackoverflow.com/users/2958455/jared-mackey"}, "reply_to_user": {"reputation": 594, "user_id": 5760823, "user_type": "registered", "profile_image": "https://graph.facebook.com/10154604433423840/picture?type=large", "display_name": "Dylan James McGannon", "link": "https://stackoverflow.com/users/5760823/dylan-james-mcgannon"}, "edited": false, "score": 0, "creation_date": 1452490111, "post_id": 34714201, "comment_id": 57175607, "body": "@DylanJamesMcGannon Thanks for pointing that out. I have resolved that issue."}], "tags": [], "owner": {"reputation": 3467, "user_id": 2958455, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/4bf81a9aa9aa3619f1197c901f079268?s=128&d=identicon&r=PG", "display_name": "Jared Mackey", "link": "https://stackoverflow.com/users/2958455/jared-mackey"}, "is_accepted": true, "score": 2, "last_activity_date": 1452487539, "last_edit_date": 1452487539, "creation_date": 1452486536, "answer_id": 34714201, "question_id": 34711832, "link": "https://stackoverflow.com/questions/34711832/human-readable-numbers/34714201#34714201", "title": "Human readable numbers", "body": "<p>For my locale this seemed to work! Probably isn't the most idiomatic rust, but it is functional.</p>\n\n<pre><code>fn readable(mut o_s: String) -&gt; String {\n    let mut s = String::new();\n    let mut negative = false;\n    let values: Vec&lt;char&gt; = o_s.chars().collect();\n    if values[0] == '-' {\n        o_s.remove(0);\n        negative = true;\n    }\n    for (i ,char) in o_s.chars().rev().enumerate() {\n        if i % 3 == 0 &amp;&amp; i != 0 {\n            s.insert(0, ',');\n        }\n        s.insert(0, char);\n    }\n    if negative {\n        s.insert(0, '-');\n    }\n    return s\n}\n\nfn main() {\n    let value: i64 = -100000000000;\n    let new_value = readable(value.to_string());\n    println!(\"{}\", new_value);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 594, "user_id": 5760823, "user_type": "registered", "profile_image": "https://graph.facebook.com/10154604433423840/picture?type=large", "display_name": "Dylan James McGannon", "link": "https://stackoverflow.com/users/5760823/dylan-james-mcgannon"}, "is_accepted": false, "score": 3, "last_activity_date": 1452487964, "last_edit_date": 1495540322, "creation_date": 1452486819, "answer_id": 34714239, "question_id": 34711832, "link": "https://stackoverflow.com/questions/34711832/human-readable-numbers/34714239#34714239", "title": "Human readable numbers", "body": "<p>I've never used rust in my life but this is what I came up with by translating a solution from <a href=\"https://stackoverflow.com/a/1449859/5760823\">here</a>:</p>\n\n<pre><code>fn main() {\n    let i = -117608854;\n    printcomma(i);\n}\n\nfn printcomma(mut i: i32) {\n    if i &lt; 0 {\n        print!(\"-\");\n        i=-i;\n    }\n    if i &lt; 1000 {\n        print!(\"{}\", i.to_string());\n        return;\n    }\n    printcomma(i/1000);\n    print!(\",{:03}\", i%1000);\n}\n</code></pre>\n\n<p>returns \"-117,608,854\"</p>\n"}], "owner": {"reputation": 3467, "user_id": 2958455, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/4bf81a9aa9aa3619f1197c901f079268?s=128&d=identicon&r=PG", "display_name": "Jared Mackey", "link": "https://stackoverflow.com/users/2958455/jared-mackey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 930, "favorite_count": 0, "closed_date": 1452487206, "accepted_answer_id": 34714201, "answer_count": 3, "score": 6, "last_activity_date": 1452487964, "creation_date": 1452467145, "last_edit_date": 1495542208, "question_id": 34711832, "link": "https://stackoverflow.com/questions/34711832/human-readable-numbers", "closed_reason": "Duplicate", "title": "Human readable numbers", "body": "<p>Is there an easy way and dynamic way to format numbers in a string to be human readable? For example turn <code>10000000000</code> into <code>10,000,000,000</code>. I have seen <a href=\"https://stackoverflow.com/questions/26998485/rust-print-format-number-with-thousand-separator\">this</a> question but the answers are outdated and broken (the one with the example).</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 1, "last_activity_date": 1452461520, "creation_date": 1452461520, "answer_id": 34711032, "question_id": 34710447, "link": "https://stackoverflow.com/questions/34710447/how-do-i-modify-rcrefcell-from-inside-the-closure/34711032#34711032", "title": "How do I modify Rc&lt;RefCell&gt; from inside the closure?", "body": "<p>The main way to modify contents of an enum value (and <code>Option</code> is enum) is pattern matching:</p>\n\n<pre><code>fn do_something(path_two: &amp;mut Option&lt;Vec&lt;PathBuf&gt;&gt;) {\n    if let Some(ref mut paths) = *path_two {\n        paths.push(Path::new(\"abcde\").to_path_buf());\n    }\n}\n</code></pre>\n\n<p>Note that <code>paths</code> pattern variable is bound with <code>ref mut</code> qualifier - it means that it will be of type <code>&amp;mut Vec&lt;PathBuf&gt;</code>, that is, a mutable reference to the internals of the option, exactly what you need to modify the vector, in case it is present.</p>\n"}], "owner": {"reputation": 221, "user_id": 4481876, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/dedc3f9101eaa933cec2ab03a546d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "estw272", "link": "https://stackoverflow.com/users/4481876/estw272"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 556, "favorite_count": 0, "accepted_answer_id": 34711032, "answer_count": 1, "score": 0, "last_activity_date": 1452461520, "creation_date": 1452457816, "question_id": 34710447, "link": "https://stackoverflow.com/questions/34710447/how-do-i-modify-rcrefcell-from-inside-the-closure", "title": "How do I modify Rc&lt;RefCell&gt; from inside the closure?", "body": "<p>I am trying to pass RefCell to a function in a closure and then modify the same variable from inside the closure. Here is my code:</p>\n\n<pre><code>let path: Rc&lt;RefCell&lt;Option&lt;Vec&lt;PathBuf&gt;&gt;&gt;&gt; = Rc::new(RefCell::new(None));\n\n...\n//valid value assigned to path\n...\n\nlet cloned_path = path.clone();\n\nbutton_run.connect_clicked(move |_| {\n    let to_remove: usize = open_dir(&amp;mut cloned_path.borrow_mut().deref_mut());\n    //Here I need to remove \"to_remove\" index from cloned_path\n});\n\n//Choose a random directory from Vec and open it. Returns opened index.\nfn open_dir(path_two: &amp;mut Option&lt;Vec&lt;PathBuf&gt;&gt;) -&gt; usize {\n    let vec = path_two.clone();\n    let vec_length = vec.unwrap().len();\n\n    let mut rng = thread_rng();\n    let rand_number = rng.gen_range(0, vec_length);\n\n    let p: &amp;str = &amp;*path_two.clone().expect(\"8\")[rand_number].to_str().unwrap().to_string();\n\n    Command::new(\"explorer.exe\").arg(p).output();\n\n    rand_number.clone()\n}\n</code></pre>\n\n<p>First I thought that since my <code>open_dir()</code> function accepts <code>&amp;mut</code>, I can modify the vector inside the function. But no matter what I tried I kept getting <code>cannot move out of borrowed content</code> error.\nThen I thought - ok, I can return the index from the function and access <code>cloned_path</code> from the closure itself. But the only code that I could get to compile is</p>\n\n<pre><code>button_run.connect_clicked(move |_| {\n    let to_remove: usize = open_dir(&amp;mut cloned_path.borrow_mut().deref_mut());\n    let x = &amp;*cloned_path.borrow_mut().clone().unwrap().remove(to_remove);\n});\n</code></pre>\n\n<p>It works, but it removes from a cloned version of <code>cloned_path</code>, leaving the original unaffected. Is there a way to access <code>cloned_path</code> directly to modify it's contents and if there is one, how do I approach this task?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1452521084, "post_id": 34708854, "comment_id": 57192649, "body": "if you use just <code>|r|</code> it compiles."}], "answers": [{"comments": [{"owner": {"reputation": 3333, "user_id": 3859566, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a7c4c1c9ad9bd41f49004d32884bc680?s=128&d=identicon&r=PG&f=1", "display_name": "yong", "link": "https://stackoverflow.com/users/3859566/yong"}, "edited": false, "score": 0, "creation_date": 1452451526, "post_id": 34709364, "comment_id": 57164833, "body": "Yes, I do in fact have a nested lambda that I immediately invoke :(. The reason is that I want to pass a code fragment to a inlining macro, which works by calling the lambda."}], "tags": [], "owner": {"reputation": 14813, "user_id": 141502, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/zgvfq.png?s=128&g=1", "display_name": "Daniel", "link": "https://stackoverflow.com/users/141502/daniel"}, "is_accepted": false, "score": 1, "last_activity_date": 1452451405, "creation_date": 1452451405, "answer_id": 34709364, "question_id": 34708854, "link": "https://stackoverflow.com/questions/34708854/how-to-fix-lifetime-error-due-to-rfc-1214/34709364#34709364", "title": "How to fix lifetime error due to RFC 1214", "body": "<p>I'm not sure why the compiler doesn't accept your <code>test2</code> function. It compiles fine if you eliminate the unnecessary nested lambda:</p>\n\n<pre><code>fn test2&lt;R&gt;(r: &amp;mut R) {\n    let a = |r: &amp;mut R| {\n        [use_r(vec![0.].into_iter(), r)]\n    };\n    a(r);\n    a(r);\n}\n</code></pre>\n\n<p>I also found that the compiler accepts the code if you use a shared reference with explicit lifetime:</p>\n\n<pre><code>fn test2&lt;'a, R&gt;(r: &amp;'a mut R) {\n    let a = |r: &amp;'a R| {\n        [(|| use_r(vec![0.].into_iter(), r))()]\n    };\n    a(r);\n    a(r);\n}\n</code></pre>\n\n<p>I'm not sure why it doesn't work with a <code>&amp;mut</code> reference, or why the compiler can't infer the lifetime automatically.</p>\n\n<p>Do you really have an unnecessary (immediately invoked) nested lambda? I suspect you simplified the code too much and are asking a different question than you meant to ask.</p>\n"}], "owner": {"reputation": 3333, "user_id": 3859566, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a7c4c1c9ad9bd41f49004d32884bc680?s=128&d=identicon&r=PG&f=1", "display_name": "yong", "link": "https://stackoverflow.com/users/3859566/yong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1452451405, "creation_date": 1452448691, "question_id": 34708854, "link": "https://stackoverflow.com/questions/34708854/how-to-fix-lifetime-error-due-to-rfc-1214", "title": "How to fix lifetime error due to RFC 1214", "body": "<p>Consider the following code:</p>\n\n<pre><code>pub fn use_r&lt;I, R&gt;(xs: I, r: &amp;R) {\n    unimplemented!()\n}\n\nfn test&lt;'a, R&gt;(r: &amp;'a mut R) {\n    let a = |r: &amp;'a mut R| {\n        [(|| use_r(vec![0.].into_iter(), r))()]\n    };\n    a(r);\n    // a(r);\n}\n\nfn test2&lt;R&gt;(r: &amp;mut R) {\n    let a = |r: &amp;mut R| {\n        [(|| use_r(vec![0.].into_iter(), r))()]\n    };\n    a(r);\n    a(r);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=54602110bdc2fc027dbd&amp;version=stable\" rel=\"nofollow\">Rust Playground</a></p>\n\n<p><code>test</code> compiles with the latest <code>nightly</code>, but I cannot call <code>a(r);</code> twice. <code>test2</code> compiles with <code>stable</code> and does what I want, but it does not compile on <code>nightly</code>.</p>\n\n<p>The motivation is that I have a RNG which I want to pass into an internal closure a few different times. What do I need to do to allow <code>test2</code> to compile?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 669, "user_id": 4948576, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4df8200828907cae1048f81b05ae92f6?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent P", "link": "https://stackoverflow.com/users/4948576/vincent-p"}, "edited": false, "score": 0, "creation_date": 1452450823, "post_id": 34708969, "comment_id": 57164585, "body": "Thanks for the explanation. It seems it&#39;s expecting a trait now though, not a trait object:   expected <code>core::result::Result&lt;Box&lt;drivers::Driver + &#39;static&gt;, errors::MigrateError&gt;</code>,     found <code>core::result::Result&lt;Box&lt;drivers::pg::Postgres&gt;, errors::MigrateError&gt;</code> (expected trait drivers::Driver,     found struct <code>drivers::pg::Postgres</code>) [E0308] src/drivers/mod.rs:17     pg::Postgres::new(url).map(|d| Box::new(d))"}, {"owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "reply_to_user": {"reputation": 669, "user_id": 4948576, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4df8200828907cae1048f81b05ae92f6?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent P", "link": "https://stackoverflow.com/users/4948576/vincent-p"}, "edited": false, "score": 0, "creation_date": 1452451455, "post_id": 34708969, "comment_id": 57164801, "body": "Sometimes the type inference figures it out and this can be implicit, but you may need to coerce explicitly your concrete box to a trait object: <code>Box::new(d) as Box&lt;Driver&gt;</code>."}], "tags": [], "owner": {"reputation": 8764, "user_id": 1162888, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ad1b7cc2be3bf5120b508c56590e6293?s=128&d=identicon&r=PG", "display_name": "Simon Sapin", "link": "https://stackoverflow.com/users/1162888/simon-sapin"}, "is_accepted": true, "score": 3, "last_activity_date": 1452449284, "creation_date": 1452449284, "answer_id": 34708969, "question_id": 34708584, "link": "https://stackoverflow.com/questions/34708584/how-to-return-an-instance-of-a-trait/34708969#34708969", "title": "How to return an instance of a trait?", "body": "<p>In this function:</p>\n\n<pre><code>fn get_driver&lt;T: Driver + Sized&gt;(url: &amp;str) -&gt; MigrateResult&lt;T&gt;\n</code></pre>\n\n<p><code>T</code> is a <em>type parameter</em>. It is chosen by the caller of the function.</p>\n\n<p>It looks like you want to a return a different type based on the value of <code>url</code>. But Rust is statically-typed: the type of any expression at any point in the code needs to be known at compile-time. (Even generics get specialized to concrete types when they\u2019re used.) The way to deal with this is to use trait objects:</p>\n\n<p>For example, in:</p>\n\n<pre><code>fn get_driver(url: &amp;str) -&gt; MigrateResult&lt;Box&lt;Driver&gt;&gt;\n</code></pre>\n\n<p><code>Box&lt;Driver&gt;</code> is a <em>fat pointer</em> made of a pointer to the value and a pointer to the <em>virtual call table</em> for the a concrete type that implements the <code>Driver</code> trait. That vtable contains pointers to the code for each method of the trait.</p>\n\n<p>Read more at <a href=\"http://doc.rust-lang.org/book/trait-objects.html\" rel=\"nofollow\">http://doc.rust-lang.org/book/trait-objects.html</a></p>\n"}], "owner": {"reputation": 669, "user_id": 4948576, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/4df8200828907cae1048f81b05ae92f6?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent P", "link": "https://stackoverflow.com/users/4948576/vincent-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 839, "favorite_count": 0, "accepted_answer_id": 34708969, "answer_count": 1, "score": 0, "last_activity_date": 1495943304, "creation_date": 1452447206, "last_edit_date": 1495943304, "question_id": 34708584, "link": "https://stackoverflow.com/questions/34708584/how-to-return-an-instance-of-a-trait", "title": "How to return an instance of a trait?", "body": "<p>I'm working on <a href=\"https://github.com/Keats/dbmigrate\" rel=\"nofollow noreferrer\">a SQL migration tool</a>.\nRight now I only support Postgresql but i'd like to add Mysql, etc.</p>\n\n<p>I have the following trait that drivers need to implement:</p>\n\n<pre><code>pub trait Driver {\n    fn ensure_migration_table_exists(&amp;self);\n    fn remove_migration_table(&amp;self);\n    fn get_current_number(&amp;self) -&gt; i32;\n    fn set_current_number(&amp;self, number: i32);\n    fn migrate(&amp;self, migration: String, number: i32) -&gt; MigrateResult&lt;()&gt;;\n}\n</code></pre>\n\n<p>I want to make a function <code>get_driver</code> which would have the following conceptual definition <code>fn get_driver(url: &amp;str) -&gt; MigrateResult&lt;Driver&gt;</code>.</p>\n\n<p>Based on a discussion on IRC a month ago, this is apparently impossible to do. My previous best guess fails like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>fn get_driver&lt;T: Driver + Sized&gt;(url: &amp;str) -&gt; MigrateResult&lt;T&gt;\n\nexpected `core::result::Result&lt;T, errors::MigrateError&gt;`,\nfound `core::result::Result&lt;drivers::pg::Postgres, errors::MigrateError&gt;`\n</code></pre>\n\n<p>(expected type parameter,\n    found struct <code>drivers::pg::Postgres</code>) [E0308]</p>\n\n<p>Is there any way to work around that?</p>\n\n<p>The <a href=\"https://github.com/Keats/dbmigrate/tree/master/src/drivers\" rel=\"nofollow noreferrer\">full code is available</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1452444514, "post_id": 34707994, "comment_id": 57162118, "body": "The code you have posted compiles fine. Did you mean to post some slightly different code or is something missing?"}, {"owner": {"reputation": 565, "user_id": 646733, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/ec748bb46aace72908ff78afeb3b87d8?s=128&d=identicon&r=PG", "display_name": "Djvu", "link": "https://stackoverflow.com/users/646733/djvu"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1452444979, "post_id": 34707994, "comment_id": 57162323, "body": "@PeterHall I add a code to use the variable b to demonstrate the usage, Because the memory is reclaimed, so use the variable b after invoke the function borrow_func() is invalid, and this will compile failed."}], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 6, "creation_date": 1452449536, "post_id": 34708223, "comment_id": 57164076, "body": "I&#39;d add that pointers to boxes like <code>&amp;Box&lt;i32&gt;</code> are unidiomatic and completely pointless - they introduce unnecessary double indirection and give nothing useful back. Just plain reference (<code>&amp;i32</code>) is always the way to go."}, {"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1452450777, "post_id": 34708223, "comment_id": 57164573, "body": "Thanks, I&#39;ve included your comment."}, {"owner": {"reputation": 565, "user_id": 646733, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/ec748bb46aace72908ff78afeb3b87d8?s=128&d=identicon&r=PG", "display_name": "Djvu", "link": "https://stackoverflow.com/users/646733/djvu"}, "edited": false, "score": 0, "creation_date": 1452506644, "post_id": 34708223, "comment_id": 57183179, "body": "Thanks very much! Yes, in the actually, we may not use like &amp;Box&lt;i32&gt;, I just try to understand Rust."}], "tags": [], "owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "is_accepted": true, "score": 7, "last_activity_date": 1452450757, "last_edit_date": 1495542210, "creation_date": 1452445146, "answer_id": 34708223, "question_id": 34707994, "link": "https://stackoverflow.com/questions/34707994/how-to-pass-a-box-value-to-a-function/34708223#34708223", "title": "How to pass a Box value to a function", "body": "<p>Your <code>borrow_func</code> actually takes the ownership over the boxed variable. You should change the signature of <code>borrow_func</code> to reflect the borrowing, like this:</p>\n\n<pre><code>fn borrow_func(c: &amp;i32) {\n    // some code\n}\n\nfn borrow_func2(c: &amp;Box&lt;i32&gt;) {\n    // some code\n}\n\nfn main(){\n    let a = Box::new(5i32);\n    let b = a;\n\n    borrow_func(&amp;b);\n    borrow_func2(&amp;b);\n    println!(\"b contains: {}\", b);\n}\n</code></pre>\n\n<p>You can use a simple reference of an &amp;Box as well. For more information about borrowing, check: <a href=\"https://doc.rust-lang.org/book/references-and-borrowing.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/references-and-borrowing.html</a></p>\n\n<p><a href=\"https://stackoverflow.com/users/788207/vladimir-matveev\">Vladimir</a> added a useful information: </p>\n\n<blockquote>\n  <p>pointers to boxes like &amp;Box are unidiomatic and completely pointless - they introduce unnecessary double indirection and give nothing useful back. Just plain reference (&amp;i32) is always the way to go.</p>\n</blockquote>\n"}], "owner": {"reputation": 565, "user_id": 646733, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/ec748bb46aace72908ff78afeb3b87d8?s=128&d=identicon&r=PG", "display_name": "Djvu", "link": "https://stackoverflow.com/users/646733/djvu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1684, "favorite_count": 0, "accepted_answer_id": 34708223, "answer_count": 1, "score": 2, "last_activity_date": 1452450757, "creation_date": 1452443949, "last_edit_date": 1452444878, "question_id": 34707994, "link": "https://stackoverflow.com/questions/34707994/how-to-pass-a-box-value-to-a-function", "title": "How to pass a Box value to a function", "body": "<p>If I have the following method:</p>\n\n<pre><code>fn borrow_func(c: Box&lt;i32&gt;) {\n    // some code\n}\n\nfn main(){\n    let a = Box::new(5i32);\n    let b = a;\n\n    borrow_func(b);\n    println!(\"b contains: {}\", b);\n}\n</code></pre>\n\n<p>because the resource in heap will be released in the <strong>borrow_func</strong>, Is there any way to avoid this?</p>\n\n<p>If I try to use a borrow in the <strong>borrow_func</strong> like following, I will get a </p>\n\n<p>compile error:</p>\n\n<blockquote>\n  <p>expected <code>Box&lt;i32&gt;</code>,<br>\n  found <code>&amp;_</code></p>\n</blockquote>\n\n<pre><code>fn borrow_func(&amp;c: Box&lt;i32&gt;) {\n}\n</code></pre>\n\n<p>It seem that the compiler do not the pointer type for <strong>b</strong>? </p>\n\n<p>How can I make this work ?</p>\n"}, {"tags": ["rust", "lifetime", "compiler-options"], "comments": [{"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "edited": false, "score": 3, "creation_date": 1452429150, "post_id": 34704612, "comment_id": 57156641, "body": "Actually, it is called lifetime elision and you can find the rules here: <a href=\"https://doc.rust-lang.org/stable/nomicon/lifetime-elision.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/nomicon/lifetime-elision.html</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "edited": false, "score": 1, "creation_date": 1452430169, "post_id": 34704612, "comment_id": 57156954, "body": "@TiborBenke Surely &quot;elision&quot; is what the code author does; the compiler can infer the elided values. In any case, I didn&#39;t mean &quot;which lifetimes are elided&quot;  - that should be obvious by their absence, I meant what are the values of those lifetimes? Updated the question to reflect that"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "edited": false, "score": 1, "creation_date": 1452430596, "post_id": 34704612, "comment_id": 57157076, "body": "@TiborBenke I guess what you are really saying is that the elision rules are so simple that the lifetimes can be deduced trivially: there is only one lifetime to consider and it is used in all lifetime positions."}, {"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "edited": false, "score": 1, "creation_date": 1452430834, "post_id": 34704612, "comment_id": 57157134, "body": "Yes, the compiler follows these rules to infer/expand the concrete lifetimes."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1452437231, "post_id": 34705687, "comment_id": 57159233, "body": "<i>If a future version of Rust [...]</i> \u2014 This is very unlikely, as Rust tends to favor explicit code. The reason that lifetime inference was added is because it had a small number of simple rules and those rules cleaned up something like 87% of cases that used lifetimes."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1452432926, "last_edit_date": 1452432926, "creation_date": 1452431011, "answer_id": 34705687, "question_id": 34704612, "link": "https://stackoverflow.com/questions/34704612/is-there-a-way-to-obtain-elided-lifetime-parameters-from-the-rust-compiler/34705687#34705687", "title": "Is there a way to obtain elided lifetime parameters from the Rust compiler?", "body": "<p>The cases where the compiler (currently<sup>1</sup>) can allow elided lifetimes are actually so simple that there isn't much the compiler could tell you about what it inferred:</p>\n\n<blockquote>\n  <p>Given a function, all elided lifetimes have the same value.</p>\n</blockquote>\n\n<p>The compiler doesn't accept elided lifetimes in cases where it would have a choice to make. The exception is in methods, but tying all lifetimes to <code>self</code> is nearly always what is intended, so it makes sense for it to make this assumption.</p>\n\n<p>[1] If a future version of Rust performed more sophisticated inference on elided lifetimes, then this question might have a far less trivial answer. For example the compiler could analyse the entire codebase to deduce a coherent set of lifetimes for all functions (or <code>impl</code>s or <code>struct</code>s if elision was permitted there too). </p>\n"}], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 567, "favorite_count": 0, "accepted_answer_id": 34705687, "answer_count": 1, "score": 5, "last_activity_date": 1452432926, "creation_date": 1452423574, "last_edit_date": 1452429939, "question_id": 34704612, "link": "https://stackoverflow.com/questions/34704612/is-there-a-way-to-obtain-elided-lifetime-parameters-from-the-rust-compiler", "title": "Is there a way to obtain elided lifetime parameters from the Rust compiler?", "body": "<p>Given a Rust program, which compiles correctly, can I get the compiler to tell me what the elided lifetimes were inferred to be?</p>\n"}, {"tags": ["closures", "rust", "type-inference"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452496853, "post_id": 34703611, "comment_id": 57177974, "body": "<i>Can we add a syntax to support similar functionality?</i> that&#39;s not a question for Stack Overflow, it&#39;s something you could ask on reddit (r/rust) or the Rust forums."}], "answers": [{"comments": [{"owner": {"reputation": 433, "user_id": 5241481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-5ZSHpRAwr_c/AAAAAAAAAAI/AAAAAAAAACc/RIf-C-P2OBA/photo.jpg?sz=128", "display_name": "Judah Meek", "link": "https://stackoverflow.com/users/5241481/judah-meek"}, "edited": false, "score": 1, "creation_date": 1452419449, "post_id": 34704037, "comment_id": 57153864, "body": "Being a total Rust newb, I&#39;ve got to say that the tiny bit of indirection in your edit looks a lot cleaner than my solution. I suspect that either boxing or indirection is absolutely required due to Rust&#39;s requirement for known parameter sizes at compile time."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1452435941, "post_id": 34704037, "comment_id": 57158804, "body": "The <code>move</code> is unnecessary, here."}, {"owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "edited": false, "score": 0, "creation_date": 1452476496, "post_id": 34704037, "comment_id": 57172379, "body": "Since this closure isn&#39;t actually being returned, wouldn&#39;t it be better to put this on the stack with a borrow, instead of on the heap with a box?"}, {"owner": {"reputation": 433, "user_id": 5241481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-5ZSHpRAwr_c/AAAAAAAAAAI/AAAAAAAAACc/RIf-C-P2OBA/photo.jpg?sz=128", "display_name": "Judah Meek", "link": "https://stackoverflow.com/users/5241481/judah-meek"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1452484707, "post_id": 34704037, "comment_id": 57174243, "body": "@MatthieuM, you&#39;re absolutely right. Can you explain why <code>move</code> is unnecessary?  @AlexKnauth, isn&#39;t that basically what OP did in his indirection edit?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1452496745, "post_id": 34704037, "comment_id": 57177938, "body": "@JudahMeek: <code>move</code> is only necessary when (1) you capture variables and (2) you cannot borrow one of them long enough. Here, you are not capturing any variable, so it&#39;s not necessary."}, {"owner": {"reputation": 36749, "user_id": 406435, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ffccb5443ae18f853116aabc42804d48?s=128&d=identicon&r=PG", "display_name": "senia", "link": "https://stackoverflow.com/users/406435/senia"}, "edited": false, "score": 0, "creation_date": 1452587499, "post_id": 34704037, "comment_id": 57223333, "body": "You could use <code>|c: &amp;Fn()|</code> instead of <code>|c: Box&lt;Fn()&gt;|</code>. Not that you&#39;ll have to call it as <code>call_twice(&amp;*arg);</code>"}], "tags": [], "owner": {"reputation": 433, "user_id": 5241481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-5ZSHpRAwr_c/AAAAAAAAAAI/AAAAAAAAACc/RIf-C-P2OBA/photo.jpg?sz=128", "display_name": "Judah Meek", "link": "https://stackoverflow.com/users/5241481/judah-meek"}, "is_accepted": false, "score": 3, "last_activity_date": 1452485282, "last_edit_date": 1452485282, "creation_date": 1452419109, "answer_id": 34704037, "question_id": 34703611, "link": "https://stackoverflow.com/questions/34703611/how-to-use-a-closure-as-an-argument-of-another-closure/34704037#34704037", "title": "How to use a closure as an argument of another closure?", "body": "<p>Following <a href=\"https://doc.rust-lang.org/book/closures.html#returning-closures\" rel=\"nofollow\">the guidelines in the Rust book section on returning closures</a> to turn the closure into a <code>move</code> closure and boxing it, this is what I had to do to get your program to run at <a href=\"https://play.rust-lang.org\" rel=\"nofollow\">the Rust Playground</a>:</p>\n\n<pre><code>fn main() {\n    let arg = Box::new(move || println!(\"closure\"));\n    let call_twice = |c: Box&lt;Fn()&gt;| { c(); c(); };\n    call_twice(arg);\n}\n</code></pre>\n\n<p>Edit to address OP's most recent edit: No. The issue you're dealing with is ultimately not a type inference problem. If it was just type inference, then all we would have had to was tell the closure that <code>c</code> was a closure. The actual problem is that \"Closure parameters must be local variables and all local variables must have sizes that are known at compile-time.\" Rust function parameters, on the other hand, apparently don't have this requirement.</p>\n"}], "owner": {"reputation": 682, "user_id": 4719039, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0901a072c48b7ab95f6552fbf3b5bfb4?s=128&d=identicon&r=PG&f=1", "display_name": "F001", "link": "https://stackoverflow.com/users/4719039/f001"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1452485282, "creation_date": 1452415331, "last_edit_date": 1452481630, "question_id": 34703611, "link": "https://stackoverflow.com/questions/34703611/how-to-use-a-closure-as-an-argument-of-another-closure", "title": "How to use a closure as an argument of another closure?", "body": "<p>The code is as follows:</p>\n\n<pre><code>fn main() {\n  let arg = | | println!(\"closure\");\n  let call_twice = | c | { c(); c(); };\n  call_twice(arg);\n}\n</code></pre>\n\n<p>But the compiler can't inference the correct type of the argument <code>c</code>. Error message:</p>\n\n<p><code>error: the type of this value must be known in this context</code></p>\n\n<p>How can I tell the compiler that the type of the argument is a generic type which impls <code>Fn</code>?</p>\n\n<hr>\n\n<p>Edit: If the argument type is trait object, the code can be accepted by compiler. But the indirection isn't necessary, is it?</p>\n\n<pre><code>fn main() {\n  let arg = | | println!(\"closure\");\n  let call_twice = | c :&amp;Fn() | { c(); c(); };\n  call_twice(&amp;arg);\n}\n</code></pre>\n\n<hr>\n\n<p>Thanks for your answer. But it is the type inference problem that confuse me. Using an <code>fn</code> can make the compiler happy.</p>\n\n<pre><code>fn main() {\n let arg = | | println!(\"closure\");\n\n // now compiler knows the argument `c` is a closure\n fn call_twice&lt;F&gt;(c: F) where F:Fn() {c(); c();}\n\n call_twice(arg);\n}\n</code></pre>\n\n<p>Can we add a syntax to support similar functionality? Such as <code>for&lt;F&gt; | c:F | where F:Fn() {c(); c();}</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 70803, "user_id": 28128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/4e974a514f0764fdfe99a8915f192002?s=128&d=identicon&r=PG", "display_name": "David Grayson", "link": "https://stackoverflow.com/users/28128/david-grayson"}, "edited": false, "score": 0, "creation_date": 1452415391, "post_id": 34702850, "comment_id": 57152931, "body": "It would be best if you can provide an <a href=\"http://stackoverflow.com/help/mcve\">MCVE</a>.  Then people trying to answer it just have to edit your code to get it to compile instead of creating totally new code from scratch."}, {"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "reply_to_user": {"reputation": 70803, "user_id": 28128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/4e974a514f0764fdfe99a8915f192002?s=128&d=identicon&r=PG", "display_name": "David Grayson", "link": "https://stackoverflow.com/users/28128/david-grayson"}, "edited": false, "score": 0, "creation_date": 1452438766, "post_id": 34702850, "comment_id": 57159888, "body": "will do in the future, thankyou!"}], "answers": [{"comments": [{"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 0, "creation_date": 1452438785, "post_id": 34703116, "comment_id": 57159893, "body": "That was totally it! Thanks a lot. I&#39;m accepting the other answer because it has a better example (someting I should have done in the first place...)"}], "tags": [], "owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "is_accepted": false, "score": 2, "last_activity_date": 1452410817, "creation_date": 1452410817, "answer_id": 34703116, "question_id": 34702850, "link": "https://stackoverflow.com/questions/34702850/err-doesnt-accept-argument-that-has-been-converted-to-string/34703116#34703116", "title": "Err doesn&#39;t accept argument that has been converted &quot;to_string&quot;", "body": "<p>The return type of your function is <code>Result&lt;T, &amp;str&gt;</code>, that's why the compiler is complaining. You create a <code>String</code> instance, take a reference to it and try to return. When the function returns, the <code>String</code> instance is freed and your returned reference would be invalid (a dangling pointer).</p>\n\n<p>I'd change the signature of the function to return a <code>Result&lt;T, String&gt;</code>. That way, you move the string out of the function without freeing it.</p>\n"}, {"comments": [{"owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "edited": false, "score": 0, "creation_date": 1452438905, "post_id": 34703649, "comment_id": 57159946, "body": "I should have posted the whole code. Of course this was my fault for declaring the return type as <code>Result&lt;i32, &amp;&#39;static str&gt;</code> (I feel pretty dumb typing that now). I&#39;m so new to polymorphism that I don&#39;t think I am reading the right code to find where something goes wrong."}], "tags": [], "owner": {"reputation": 70803, "user_id": 28128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/4e974a514f0764fdfe99a8915f192002?s=128&d=identicon&r=PG", "display_name": "David Grayson", "link": "https://stackoverflow.com/users/28128/david-grayson"}, "is_accepted": true, "score": 1, "last_activity_date": 1452415796, "creation_date": 1452415796, "answer_id": 34703649, "question_id": 34702850, "link": "https://stackoverflow.com/questions/34702850/err-doesnt-accept-argument-that-has-been-converted-to-string/34703649#34703649", "title": "Err doesn&#39;t accept argument that has been converted &quot;to_string&quot;", "body": "<p>Here is a complete Rust program that shows the behavior you wanted:</p>\n\n<pre><code>fn test() -&gt; Result&lt;u32, String&gt; {\n    let msg = format!(\"Error code {}.\", 123).to_string();\n    return Err(msg);\n}\n\nfn main() {\n    match test() {\n        Ok(num) =&gt; println!(\"Okay: {}\", num),\n        Err(msg) =&gt; println!(\"Error: {}\", msg),\n    };\n}\n</code></pre>\n\n<p>This compiles without warnings or errors and prints \"Error: Error code 123.\" when run.</p>\n\n<p>The important thing here is to declare the return type of the function that is returning the error code.  If you don't declare the return type, then the Rust compiler apparently does a bad job of figuring out what the return type should be, and you get errors (but the errors I get from rustc 1.5.0 are different from yours).  This might actually be a bug in the Rust compiler; you could report this to the developers of the language and see what they have to say.</p>\n\n<p>The <code>Err</code> thing that you used is just a type constructor for <a href=\"https://doc.rust-lang.org/std/result/\" rel=\"nofollow\">std::result::Result</a>.  So the return type of the function should be some type of <code>Result</code>.</p>\n"}], "owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 34703649, "answer_count": 2, "score": 0, "last_activity_date": 1452437102, "creation_date": 1452408314, "last_edit_date": 1495542210, "question_id": 34702850, "link": "https://stackoverflow.com/questions/34702850/err-doesnt-accept-argument-that-has-been-converted-to-string", "title": "Err doesn&#39;t accept argument that has been converted &quot;to_string&quot;", "body": "<p>I am trying to return an error with a formatted message.</p>\n\n<pre><code>let msg = format!(\"wrong num of dimensions: {}\", dimensions.len()).to_string();\nreturn Err(msg);\n</code></pre>\n\n<p><code>dimensions</code> is a <code>Vec&lt;i32&gt;</code> that is supposed to have a length of 3. If it doesn't, I want to raise this error. However, I am getting this compiler error:</p>\n\n<pre><code>   Compiling advent02 v0.1.0 (file:///home/garrett/notes/rust/advent/advent02)\nsrc/main.rs:19:24: 19:27 error: mismatched types:\n expected `&amp;str`,\n    found `collections::string::String`\n(expected &amp;-ptr,\n    found struct `collections::string::String`) [E0308]\nsrc/main.rs:19             return Err(msg);\n                                  ^~~\n</code></pre>\n\n<p>It looks to me like it wants an <code>&amp;str</code> type when I am giving it a <code>String</code> type. I have tried to do this from <a href=\"https://stackoverflow.com/questions/23975391/how-to-convert-string-into-static-str\">this example</a> but get borrow errors because the returned string borrow goes out of scope.</p>\n\n<p>I don't understand because <a href=\"https://doc.rust-lang.org/book/error-handling.html\" rel=\"nofollow noreferrer\">this page</a> is littered with examples that do <code>Err(err.to_string())</code>, and <em>they</em> don't seem to have a problem.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 3, "creation_date": 1452407111, "post_id": 34702707, "comment_id": 57151432, "body": "Yes, enums are the Rust way to implement ADTs."}, {"owner": {"reputation": 1905, "user_id": 1819861, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/d6a4df7c88cd6b6049278e30a88d3596?s=128&d=identicon&r=PG", "display_name": "Jonathan Gallagher", "link": "https://stackoverflow.com/users/1819861/jonathan-gallagher"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1452447025, "post_id": 34702707, "comment_id": 57163151, "body": "@Shepmaster: Sorry for the confusion.  My first &quot;question&quot; wasn&#39;t really a question.  It was rhetorical, and my way of explaining that I am trying to mirror a piece of Haskell code.  However, I am a newb at this language, so it seems reasonable that if anyone has a suggestion about my datatype that I would love to hear about that.  I have changed the question to reflect this."}], "answers": [{"tags": [], "owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "is_accepted": false, "score": 1, "last_activity_date": 1452558561, "last_edit_date": 1452558561, "creation_date": 1452558110, "answer_id": 34733564, "question_id": 34702707, "link": "https://stackoverflow.com/questions/34702707/what-is-the-proper-way-to-traverse-an-adt-in-rust/34733564#34733564", "title": "What is the proper way to traverse an &quot;ADT&quot; in Rust?", "body": "<p>(Side note: this would probably better if you used the <a href=\"http://doc.rust-lang.org/std/result/index.html\" rel=\"nofollow\"><code>Result</code></a> type instead of a tuple with a boolean inside it. I'll stick with the way you wrote it for this answer though.)</p>\n\n<p>The error message says that you can't use the moved values <code>t1</code> and <code>t2</code>, because those values were moved when you dereferenced them and did matching on them.</p>\n\n<p>The information that was stored in <code>t1</code> and <code>t2</code> is now owned by the variables <code>a</code>, <code>w</code>, and <code>t</code> in that branch of the match expression, so you have to use those. If I'm wrong please correct me.</p>\n\n<p>So you can go towards getting your example to work if, within the line:</p>\n\n<pre><code>(t, b) =&gt; if b { (Term::Plus(t1, Box::new(t)), true) } else { (Term::Plus(t1, t2), false) }\n</code></pre>\n\n<p>You replace <code>t1</code> with <code>Box::new(Term::Num(a))</code>, and <code>t2</code> with <code>Box::new(w)</code>. That, with some indentation added, is:</p>\n\n<pre><code>(t, b) =&gt; if b {\n  (Term::Plus(Box::new(Term::Num(a)), Box::new(t)), true)\n} else {\n  (Term::Plus(Box::new(Term::Num(a)), Box::new(w)), false)\n}\n</code></pre>\n\n<p>This fails too though, because the call <code>reduceOneStep(w)</code> took ownership of <code>w</code>. That can be fixed by making <code>reduceOneStep</code> borrow its argument instead:</p>\n\n<pre><code>fn reduceOneStep(t: &amp;Term) -&gt; (Term, bool) {\n  match t {\n    &amp;Term::Num(a) =&gt; (*t, false),\n    &amp;Term::Plus(t1, t2) =&gt;\n    match (*t1, *t2) {\n      (Term::Num(a), Term::Num(b)) =&gt; (Term::Num(a + b), true),\n      (Term::Num(a), w) =&gt;\n      match reduceOneStep(&amp;w) {\n        (t, b) =&gt; if b {\n          (Term::Plus(Box::new(Term::Num(a)), Box::new(t)), true)\n        } else {\n          (Term::Plus(Box::new(Term::Num(a)), Box::new(w)), false)\n        }\n      },\n      _ =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n    },\n    x =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n  }\n}\n</code></pre>\n\n<p>But this has more errors, saying <code>cannot move out of borrowed content</code>, pointing to where it returns <code>*t</code>. This is because it can't both give the borrow back to the owner, and return a part of it as a result, because one could be freed and the other would be left hanging. One way to fix this is to <code>#[derive(Clone)]</code> for the <code>Term</code> enum, and use that:</p>\n\n<pre><code>fn reduceOneStep(t: &amp;Term) -&gt; (Term, bool) {\n  match t {\n    &amp;Term::Num(a) =&gt; (t.clone(), false),\n    &amp;Term::Plus(t1, t2) =&gt;\n    match (*t1, *t2) {\n      (Term::Num(a), Term::Num(b)) =&gt; (Term::Num(a + b), true),\n      (Term::Num(a), w) =&gt;\n      match reduceOneStep(&amp;w) {\n        (t, b) =&gt; if b {\n          (Term::Plus(Box::new(Term::Num(a)), Box::new(t)), true)\n        } else {\n          (Term::Plus(Box::new(Term::Num(a)), Box::new(w.clone())), false)\n        }\n      },\n      _ =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n    },\n    x =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n  }\n}\n</code></pre>\n\n<p>But this still has the same error. Huh. The error message has this hint below it: <code>help: to prevent the move, use `ref t1` or `ref mut t1` to capture value by reference</code>. Then after fixing some mismatched types and fiddling with box derefs and borrows, I finally got this to work:</p>\n\n<pre><code>fn reduceOneStep(t: &amp;Term) -&gt; (Term, bool) {\n  match t {\n    &amp;Term::Num(a) =&gt; (t.clone(), false),\n    &amp;Term::Plus(ref t1, ref t2) =&gt;\n    match (&amp;**t1, &amp;**t2) {\n      (&amp;Term::Num(a), &amp;Term::Num(b)) =&gt; (Term::Num(a + b), true),\n      (&amp;Term::Num(a), w) =&gt;\n      match reduceOneStep(&amp;w) {\n        (t, b) =&gt; if b {\n          (Term::Plus(Box::new(Term::Num(a)), Box::new(t)), true)\n        } else {\n          (Term::Plus(Box::new(Term::Num(a)), Box::new(w.clone())), false)\n        }\n      },\n      _ =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n    },\n    x =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n  }\n}\n</code></pre>\n\n<p>I'm a beginner with rust right now, so if someone can help me understand why this works, I'll be very grateful.</p>\n"}], "owner": {"reputation": 1905, "user_id": 1819861, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/d6a4df7c88cd6b6049278e30a88d3596?s=128&d=identicon&r=PG", "display_name": "Jonathan Gallagher", "link": "https://stackoverflow.com/users/1819861/jonathan-gallagher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1000, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1452558561, "creation_date": 1452406784, "last_edit_date": 1452456385, "question_id": 34702707, "link": "https://stackoverflow.com/questions/34702707/what-is-the-proper-way-to-traverse-an-adt-in-rust", "title": "What is the proper way to traverse an &quot;ADT&quot; in Rust?", "body": "<p>I want to implement a very basic lambda reducer. The first question that comes up is what sort of datatype does one use to implement the AST? <a href=\"http://lpaste.net/148755\" rel=\"nofollow\">In Haskell this would be an ADT</a>. In Rust, it seems right is to use an enum and <code>Box</code>es:</p>\n\n<pre><code>enum Term{\n    Num(i64),\n    Plus(Box&lt;Term&gt;, Box&lt;Term&gt;),\n    Var(i64),\n    Lam(i64, Box&lt;Term&gt;),\n    App(Box&lt;Term&gt;, Box&lt;Term&gt;)\n}\n</code></pre>\n\n<p>This seems to be a good choice, but since I am a newb at Rust, it could very well be that the question I have -- that follows -- is simply that I have chosen the wrong datatype, and that, if I had chosen the right datatype representation, my problem would be gone.  If this happens to be the case, please do let me know!</p>\n\n<p>Now on to one step reduction.  Following the Haskell code reference, we end up with something like:</p>\n\n<pre><code>fn reduceOneStep(t: Term) -&gt; (Term, bool) {\n    match t {\n        Term::Num(a) =&gt; (t, false),\n        Term::Plus(t1, t2) =&gt;\n        match (*t1, *t2) {\n            (Term::Num(a), Term::Num(b)) =&gt; (Term::Num(a + b), true),\n            (Term::Num(a), w) =&gt;\n            match reduceOneStep(w) {\n              (t, b) =&gt; if b { (Term::Plus(t1, Box::new(t)), true) } else { (Term::Plus(t1, t2), false) }\n            },\n            _ =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n        },\n        x =&gt; (Term::Num(1), false) //ignore .. this is just to satisfy typing and totality\n    }\n}\n</code></pre>\n\n<p>However, the line</p>\n\n<pre><code>(t, b) =&gt; if b { (Term::Plus(t1, Box::new(t)), true) } else { (Term::Plus(t1, t2), false) }\n</code></pre>\n\n<p>fails compilation.  The reason is that I \"used a moved value t1\"\nI don't really understand this error, nor how to get around it.  I've tried some other variants, but they don't get around the problem.  My question is: what am I doing wrong?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 0, "creation_date": 1452405121, "post_id": 34702494, "comment_id": 57151056, "body": "Ah, awesome! I tried making the trait&#39;s method signature <code>fn take_front_mut&lt;&#39;a&gt;(&amp;&#39;a mut self, n: usize) -&gt; &amp;&#39;a mut [T];</code>, which didn&#39;t work (and I&#39;m not sure why... it seems like it effectively means the same thing as what you wrote, but apparently there must be some difference between the two that I&#39;m unaware of)."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "edited": false, "score": 1, "creation_date": 1452405633, "post_id": 34702494, "comment_id": 57151155, "body": "The lifetime of the output slice must be the lifetime of the input slice, not the lifetime of the <i>pointer</i> to the input slice! The lifetime on mutable references is invariant, and the lifetime of the pointer will generally be shorter than the lifetime of the slice."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1452404841, "creation_date": 1452404841, "answer_id": 34702494, "question_id": 34702465, "link": "https://stackoverflow.com/questions/34702465/why-cant-rust-infer-an-appropriate-lifetime-for-my-trait-method/34702494#34702494", "title": "Why can&#39;t Rust infer an appropriate lifetime for my trait method?", "body": "<p>The signature of <code>take_front_mut</code> doesn't specify the correct lifetime for the return value. It should be <code>&amp;'a mut [T]</code>, because that's the lifetime of the slice you split. This also requires you to make a change on the trait itself.</p>\n\n<pre><code>pub trait TakeFrontMut&lt;'a, T&gt; {\n    fn take_front_mut(&amp;mut self, n: usize) -&gt; &amp;'a mut [T];\n}\n\nimpl&lt;'a, T&gt; TakeFrontMut&lt;'a, T&gt; for &amp;'a mut [T] {\n    fn take_front_mut(&amp;mut self, n: usize) -&gt; &amp;'a mut [T] {\n        let value = std::mem::replace(self, &amp;mut []);\n        let (head, tail) = value.split_at_mut(n);\n        *self = tail;\n        return head;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 34083, "user_id": 1287251, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/IQkBy.png?s=128&g=1", "display_name": "Cornstalks", "link": "https://stackoverflow.com/users/1287251/cornstalks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 34702494, "answer_count": 1, "score": 1, "last_activity_date": 1452404841, "creation_date": 1452404449, "question_id": 34702465, "link": "https://stackoverflow.com/questions/34702465/why-cant-rust-infer-an-appropriate-lifetime-for-my-trait-method", "title": "Why can&#39;t Rust infer an appropriate lifetime for my trait method?", "body": "<p>I've got a function <code>take_head</code> that takes two parameters: a slice, and the number of items in the \"head\" of the slice (the \"head\" being the first <code>n</code> items, and the \"tail\" being everything after the head). It splits the slice into two parts: the <code>head</code>, which it returns, and the <code>tail</code>, which it sets the parameter to. Here's the <code>main</code> function showing how it's used:</p>\n\n<pre><code>fn main() {\n    let mut strings = &amp;mut [\"a\", \"b\", \"c\"][..];\n    println!(\"original: {:?}\", strings);\n\n    // head should [\"a\"], and strings should be set to the tail ([\"b\", \"c\"]).\n    let head = take_head(&amp;mut strings, 1);\n\n    println!(\"head: {:?}\", head);    // Should print [\"a\"].\n    println!(\"tail: {:?}\", strings); // Should print [\"b\", \"c\"].\n}\n</code></pre>\n\n<p>If I implement <code>take_head</code> like so:</p>\n\n<pre><code>fn take_head&lt;'a&gt;(strings: &amp;mut &amp;'a mut [&amp;'a str], n: usize) -&gt; &amp;'a mut [&amp;'a str] {\n    let value = std::mem::replace(strings, &amp;mut []);\n    let (head, tail) = value.split_at_mut(n);\n    *strings = tail;\n\n    println!(\"returning head: {:?}\", head);\n    head\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/fpF0DI\" rel=\"nofollow\">it works correctly</a> and outputs:</p>\n\n<blockquote>\n<pre><code>original: [\"a\", \"b\", \"c\"]\nreturning head: [\"a\"]\nhead: [\"a\"]\ntail: [\"b\", \"c\"]\n</code></pre>\n</blockquote>\n\n<p>However, if I implement <code>take_head</code> like this:</p>\n\n<pre><code>// Make a convenient trait for slices.\npub trait TakeFrontMut&lt;T&gt; {\n    fn take_front_mut(&amp;mut self, n: usize) -&gt; &amp;mut [T];\n}\n\nimpl&lt;'a, T&gt; TakeFrontMut &lt;T&gt; for &amp;'a mut [T] {\n    fn take_front_mut(&amp;mut self, n: usize) -&gt; &amp;mut [T] {\n        // It's the same code as before, just in a trait method.\n        let value = std::mem::replace(self, &amp;mut []);\n        let (head, tail) = value.split_at_mut(n);\n        *self = tail;\n        return head;\n    }\n}\n\nfn take_head&lt;'a&gt;(strings: &amp;mut &amp;'a mut [&amp;'a str], n: usize) -&gt; &amp;'a mut [&amp;'a str] {\n    let head = strings.take_front_mut(n);\n    println!(\"returning head: {:?}\", head);\n    head\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/J5CzfX\" rel=\"nofollow\">It produces an error</a>:</p>\n\n<blockquote>\n<pre><code>&lt;anon&gt;:15:24: 15:41 error: cannot infer an appropriate lifetime for autoref due to conflicting requirements [E0495]\n&lt;anon&gt;:15     let head = strings.take_front_mut(n);\n                                 ^~~~~~~~~~~~~~~~~\n&lt;anon&gt;:14:1: 18:2 help: consider using an explicit lifetime parameter as shown: fn take_head&lt;'a&gt;(strings: &amp;'a mut &amp;'a mut [&amp;'a str], n: usize)\n -&gt; &amp;'a mut [&amp;'a str]\n&lt;anon&gt;:14 fn take_head&lt;'a&gt;(strings: &amp;mut &amp;'a mut [&amp;'a str], n: usize) -&gt; &amp;'a mut [&amp;'a str] {\n&lt;anon&gt;:15     let head = strings.take_front_mut(n);\n&lt;anon&gt;:16     println!(\"returning head: {:?}\", head);\n&lt;anon&gt;:17     head\n&lt;anon&gt;:18 }\n</code></pre>\n</blockquote>\n\n<p><strong>Question</strong>: Why does the second version produce an error? What's so different that the parser can't determine the appropriate lifetime? I don't understand why it's failing, and I'm not sure what these conflicting requirements are.</p>\n\n<p><sub>Yes, the <code>take_head</code> function is dumb, but it's the simplest MVCE I could make that still captures the same issue as my real code.</sub></p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "edited": false, "score": 0, "creation_date": 1452360712, "post_id": 34696554, "comment_id": 57139335, "body": "Your question can be answered, but it&#39;d good to know what you wanted to do."}], "answers": [{"comments": [{"owner": {"reputation": 1204, "user_id": 3241447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/unNbh.jpg?s=128&g=1", "display_name": "Haru Atari", "link": "https://stackoverflow.com/users/3241447/haru-atari"}, "edited": false, "score": 0, "creation_date": 1452360703, "post_id": 34696615, "comment_id": 57139333, "body": "It&#39;s not full code. I tried to make it simple. In original <code>middle_color</code> taking from other function. And in future it will creating in the loop. This is <a href=\"https://gist.github.com/HaruAtari/4a8f7d98f08248835479\" rel=\"nofollow noreferrer\">full code</a>."}, {"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "reply_to_user": {"reputation": 1204, "user_id": 3241447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/unNbh.jpg?s=128&g=1", "display_name": "Haru Atari", "link": "https://stackoverflow.com/users/3241447/haru-atari"}, "edited": false, "score": 1, "creation_date": 1452361039, "post_id": 34696615, "comment_id": 57139451, "body": "In this case I wouldn&#39;t use references in <code>Line</code>,  because you loose a lot of flexibility. <code>Point</code> and <code>Color</code> are <code>Copy</code> types, you just have to derive the implementation. So I&#39;d make <code>Line</code> contain real values."}, {"owner": {"reputation": 1204, "user_id": 3241447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/unNbh.jpg?s=128&g=1", "display_name": "Haru Atari", "link": "https://stackoverflow.com/users/3241447/haru-atari"}, "edited": false, "score": 0, "creation_date": 1452361603, "post_id": 34696615, "comment_id": 57139699, "body": "What do you mean? Created copy of <code>Line</code> and send ref to this copy into struct? Or make fields of <code>Line</code> struct as real-values?"}, {"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "reply_to_user": {"reputation": 1204, "user_id": 3241447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/unNbh.jpg?s=128&g=1", "display_name": "Haru Atari", "link": "https://stackoverflow.com/users/3241447/haru-atari"}, "edited": false, "score": 1, "creation_date": 1452362569, "post_id": 34696615, "comment_id": 57140049, "body": "The latter - use real values in the fields of Line. E.g: <code>struct Line { p1: Point, p2:Point, c: Color}</code>."}], "tags": [], "owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "is_accepted": true, "score": 3, "last_activity_date": 1452360379, "creation_date": 1452360379, "answer_id": 34696615, "question_id": 34696554, "link": "https://stackoverflow.com/questions/34696554/how-can-i-set-the-lifetime-for-a-reference-which-isnt-an-argument-of-the-functi/34696615#34696615", "title": "How can I set the lifetime for a reference which isn&#39;t an argument of the function?", "body": "<p>You get the error, because when <code>get_lines()</code> returns, <code>middle_color</code> goes out of scope and gets freed. You'd get a dangling pointer in the vector if this doesn't happen.</p>\n\n<p>If you really want to use a reference in <code>Line</code> to <code>color</code>, you can instantiate it in the <code>main</code> function and pass a reference to it into <code>get_lines()</code>, e.g:</p>\n\n<pre><code>fn get_lines&lt;'a&gt;(begin_point: &amp;'a Point, end_point: &amp;'a Point, middle_color: &amp;'a Color) -&gt; Vec&lt;Line&lt;'a&gt;&gt;\n{\n...\n}\n</code></pre>\n\n<p>But if you do this, you can even create your <code>Line</code> in <code>main</code> and move that into <code>get_lines()</code>.</p>\n"}], "owner": {"reputation": 1204, "user_id": 3241447, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/unNbh.jpg?s=128&g=1", "display_name": "Haru Atari", "link": "https://stackoverflow.com/users/3241447/haru-atari"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 34696615, "answer_count": 1, "score": 3, "last_activity_date": 1452366442, "creation_date": 1452360023, "last_edit_date": 1452366442, "question_id": 34696554, "link": "https://stackoverflow.com/questions/34696554/how-can-i-set-the-lifetime-for-a-reference-which-isnt-an-argument-of-the-functi", "title": "How can I set the lifetime for a reference which isn&#39;t an argument of the function?", "body": "<p>I'm trying to compile this code. The function <code>get_lines</code> must generate a vector of <code>Line</code>s, push a new line to it and return this vector.</p>\n\n<pre><code>fn main() {\n    let begin_point = Point{x:100, y:100};\n    let end_point = Point{x:300, y:100};\n\n    let lines = get_lines( &amp;begin_point, &amp;end_point);\n}\n\nfn get_lines&lt;'a&gt;(begin_point: &amp;'a Point, end_point: &amp;'a Point) -&gt; Vec&lt;Line&lt;'a&gt;&gt;\n{\n    let mut lines: Vec&lt;Line&gt; = vec![];\n    let middle_color = Color{r:0,g:0,b:0};\n\n    let line = Line {\n        begin_point: begin_point,\n        end_point: end_point,\n        color: &amp;middle_color,\n    };\n\n    lines.push(line);\n    lines\n}\n\nstruct Color&lt;&gt; {r:i32, g:i32, b:i32}\nstruct Point {x:i32, y:i32}\nstruct Line&lt;'a&gt; {\n    begin_point: &amp;'a Point,\n    end_point: &amp;'a Point,\n    color: &amp;'a Color\n}\n</code></pre>\n\n<p>Compilation fails with this error:</p>\n\n<pre><code>src\\main.rs:16:17: 16:29 error: `middle_color` does not live long enough\nsrc\\main.rs:16         color: &amp;middle_color,\n                               ^~~~~~~~~~~~\nsrc\\main.rs:9:1: 21:2 note: reference must be valid for the lifetime 'a as defined on the block at 9:0...\nsrc\\main.rs: 9 {\nsrc\\main.rs:10     let mut lines: Vec&lt;Line&gt; = vec![];\nsrc\\main.rs:11     let middle_color = Color{r:0,g:0,b:0};\nsrc\\main.rs:12\nsrc\\main.rs:13     let line = Line {\nsrc\\main.rs:14         begin_point: begin_point,\n               ...\nsrc\\main.rs:11:43: 21:2 note: ...but borrowed value is only valid for the block suffix following statement 1 at 11:42\nsrc\\main.rs:11     let middle_color = Color{r:0,g:0,b:0};\nsrc\\main.rs:12\nsrc\\main.rs:13     let line = Line {\nsrc\\main.rs:14         begin_point: begin_point,\nsrc\\main.rs:15         end_point: end_point,\nsrc\\main.rs:16         color: &amp;middle_color,\n               ...\nerror: aborting due to previous error\n</code></pre>\n\n<p>How can I set the lifetime for a reference which isn't an argument of the function? Or is the logic of code wrong?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1452349079, "post_id": 34694145, "comment_id": 57135030, "body": "Wow, I wish I knew about <code>-Z trace-macros</code> before. I always think about such things as commas but now forgot them &gt;_&lt; Thank you very much!"}, {"owner": {"reputation": 985, "user_id": 4551793, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/a7759219776f7cf59fd8cb9104b7f037?s=128&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/4551793/john"}, "edited": false, "score": 1, "creation_date": 1548858042, "post_id": 34694145, "comment_id": 95694455, "body": "using rustc version 1.31, I get an error using -Z. Option &#39;Z&#39; is only accepted on the nightly compiler"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 14, "last_activity_date": 1452346758, "creation_date": 1452346758, "answer_id": 34694145, "question_id": 34693847, "link": "https://stackoverflow.com/questions/34693847/fixing-no-rules-expected-the-token-macro-error/34694145#34694145", "title": "Fixing &quot;no rules expected the token&quot; macro error", "body": "<p>Both <code>cargo script</code>, a recursive muncher, <em>and</em> my favourite internal rule syntax; how can I <em>not?</em></p>\n\n<p>First, the exact problem can be identified by running <code>cargo rustc -- -Z trace-macros</code>.  This will output each rule as it gets expanded, giving us a \"backtrace\" which, after some manual reformatting, comes out looking like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>bson_destructure! {\n    get id = from ( bson ) , optional , name ( \"_id\" ) , as ObjectId ;\n    get hash = from ( bson ) , as String ;\n    get name = from ( bson ) , as String ;\n    get path = from ( bson ) , as Bson ;\n    get modification_time = from ( bson ) , as UtcDatetime ;\n    get size = from ( bson ) , as I64 , through ( | n | n as u64 ) ;\n    get metadata = from ( bson ) , as Document ;\n    get commit_data = from ( bson ) , optional , as Document ;\n    ret ( id , hash , name , path , modification_time , size , metadata , commit_data )\n}\n\nbson_destructure! {\n    @ collect opt ,\n    [ id , bson , stringify ! ( id ) , Bson , Ok ] ,\n    [ name ( \"_id\" ) , as ObjectId ] ;\n\n    get hash = from ( bson ) , as String ;\n    get name = from ( bson ) , as String ;\n    get path = from ( bson ) , as Bson ;\n    get modification_time = from ( bson ) , as UtcDatetime ;\n    get size = from ( bson ) , as I64 , through ( | n | n as u64 ) ;\n    get metadata = from ( bson ) , as Document ;\n    get commit_data = from ( bson ) , optional , as Document ;\n    ret ( id , hash , name , path , modification_time , size , metadata , commit_data )\n}\n\nbson_destructure! {\n    @ collect opt ,\n    [ id , bson , \"_id\" , Bson , Ok ] , [ as ObjectId ] ;\n\n    get hash = from ( bson ) , as String ;\n    get name = from ( bson ) , as String ;\n    get path = from ( bson ) , as Bson ;\n    get modification_time = from ( bson ) , as UtcDatetime ;\n    get size = from ( bson ) , as I64 , through ( | n | n as u64 ) ;\n    get metadata = from ( bson ) , as Document ;\n    get commit_data = from ( bson ) , optional , as Document ;\n    ret ( id , hash , name , path , modification_time , size , metadata , commit_data )\n}\n</code></pre>\n\n<p>A careful perusal of the rules in <code>bson_destructure!</code> shows the issue: there is no rule which matches the third expansion.  <code>macro_rules!</code> is, frankly, <em>rubbish</em> at reporting sane error locations when it comes to recursive rules; that it's pointing to the <code>opt</code> token is irrelevant.  The <em>real</em> problem is that it couldn't find a matching rule.</p>\n\n<p>In particular, the offending rule is this one:</p>\n\n<pre><code>// change variant name\n(\n    @collect $k:tt,\n    [$target:ident, $source:expr, $field:expr, $variant:ident, $f:expr],\n    [as $nv:ident, $($word:ident $arg:tt),*];\n    $($rest:tt)*\n) =&gt; {\n    ...\n};\n</code></pre>\n\n<p>Note the presence of a comma <em>immediately after</em> <code>$nv:ident</code>.  Also note that there <em>is no</em> such comma in the input.  This can be solved by moving the comma <em>inside</em> the repetition, like so:</p>\n\n<pre><code>// change field name\n(\n    @collect $k:tt,\n    [$target:ident, $source:expr, $field:expr, $variant:ident, $f:expr],\n    [name ($nn:expr) $(, $word:ident $arg:tt)*];\n    $($rest:tt)*\n) =&gt; {\n    ...\n};\n</code></pre>\n\n<p>Another alternative (and the one I ususally go with), is to simply mutate the input when it is first encountered to make sure there is <em>always</em> a trailing comma in place.</p>\n\n<p>The code won't actually <em>compile</em> on my machine, due to a native dependency, but I did verify that making this change (both here, and to the other rules with a similar issue) allows it to complete macro expansion.  You can check the output looks correct using <code>cargo rustc -- -Z unstable-options --pretty=expanded</code>.</p>\n"}], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8708, "favorite_count": 0, "accepted_answer_id": 34694145, "answer_count": 1, "score": 14, "last_activity_date": 1478161747, "creation_date": 1452344987, "last_edit_date": 1478161747, "question_id": 34693847, "link": "https://stackoverflow.com/questions/34693847/fixing-no-rules-expected-the-token-macro-error", "title": "Fixing &quot;no rules expected the token&quot; macro error", "body": "<p>I'm trying to write a macro for destructuring BSON data which looks like this:</p>\n\n<pre><code>let bson: Document = ...;\nlet (id, hash, name, path, modification_time, size, metadata, commit_data) = bson_destructure! {\n    get id = from (bson), optional, name (\"_id\"), as ObjectId;\n    get hash = from (bson), as String, through (|s| ContentHash::from_str(&amp;s));\n    get name = from (bson), as String;\n    get path = from (bson), as Bson, through (PathBuf::from_bson);\n    get modification_time = from (bson), as UtcDatetime, through (FileTime);\n    get size = from (bson), as I64, through (|n| n as u64);\n    get metadata = from (bson), as Document, through (Metadata::from_bson);\n    get commit_data = from (bson), optional, as Document, through (CommitData::from_bson);\n    ret (id, hash, name, path, modification_time, size, metadata, commit_data)\n};\n</code></pre>\n\n<p>I've written the following macro (pretty large) for it:</p>\n\n<pre><code>macro_rules! bson_destructure {\n    // required field\n    (\n        @collect req,\n        [$target:ident, $source:expr, $field:expr, Bson, $f:expr],\n        [];\n        $($rest:tt)*\n    ) =&gt; {{\n        let $target = try!(match $source.remove($field) {\n            Some(v) =&gt; $f(v),\n            None =&gt; Err(BsonDestructureError::MissingField {\n                field_name: $field,\n                expected: \"Bson\"\n            }),\n        });\n        bson_destructure!($($rest)*)\n    }};\n    (\n        @collect req,\n        [$target:ident, $source:expr, $field:expr, $variant:ident, $f:expr],\n        [];\n        $($rest:tt)*\n    ) =&gt; {{\n        let $target = try!(match $source.remove($field) {\n            Some(v) =&gt; match v {\n                ::ejdb::bson::Bson::$variant(v) =&gt; $f(v),\n                v =&gt; Err(BsonDestructureError::InvalidType {\n                    field_name: $field,\n                    expected: stringify!($variant),\n                    actual: v\n                })\n            },\n            None =&gt; Err(BsonDestructureError::MissingField {\n                field_name: $field,\n                expected: stringify!($variant)\n            }),\n        });\n        bson_destructure!($($rest)*)\n    }};\n\n    // optional field\n    (\n        @collect opt,\n        [$target:ident, $source:expr, $field:expr, Bson, $f:expr],\n        [];\n        $($rest:tt)*\n    ) =&gt; {{\n        let $target = try!(match $source.remove($field) {\n            Some(v) =&gt; $f(v).map(Some),\n            None =&gt; Ok(None),\n        });\n        bson_destructure!($($rest)*)\n    }};\n    (\n        @collect opt,\n        [$target:ident, $source:expr, $field:expr, $variant:ident, $f:expr],\n        [];\n        $($rest:tt)*\n    ) =&gt; {{\n        let $target = try!(match $source.remove($field) {\n            Some(v) =&gt; match v {\n                ::ejdb::bson::Bson::$variant(v) =&gt; $f(v).map(Some),\n                v =&gt; Err(BsonDestructureError::InvalidType {\n                    field_name: $field,\n                    expected: stringify!($variant),\n                    actual: v\n                })\n            },\n            None =&gt; Ok(None),\n        });\n        bson_destructure!($($rest)*)\n    }};\n\n    // change variant name\n    (\n        @collect $k:tt,\n        [$target:ident, $source:expr, $field:expr, $variant:ident, $f:expr],\n        [as $nv:ident, $($word:ident $arg:tt),*];\n        $($rest:tt)*\n    ) =&gt; {\n        bson_destructure!(\n            @collect $k,\n            [$target, $source, $field, $nv, $f],\n            [$($word $arg),*];\n            $($rest)*\n        )\n    };\n\n    // change final mapping function\n    (\n        @collect $k:tt,\n        [$target:ident, $source:expr, $field:expr, $variant:ident, $f:expr],\n        [through ($nf:expr), $($word:ident $arg:tt),*];\n        $($rest:tt)*\n    ) =&gt; {\n        bson_destructure!(\n            @collect $k,\n            [$target, $source, $field, $variant, $nf],\n            [$($word $arg),*];\n            $($rest)*\n        )\n    };\n\n    // change field name\n    (\n        @collect $k:tt,\n        [$target:ident, $source:expr, $field:expr, $variant:ident, $f:expr],\n        [name ($nn:expr), $($word:ident $arg:tt),*];\n        $($rest:tt)*\n    ) =&gt; {\n        bson_destructure!(\n            @collect $k,\n            [$target, $source, $nn, $variant, $f],\n            [$($word $arg),*];\n            $($rest)*\n        )\n    };\n\n    // main forms\n    (get $target:ident = from ($source:expr), $($word:ident $arg:tt),*; $($rest:tt)*) =&gt; {\n        bson_destructure!(\n            @collect req,\n            [$target, $source, stringify!($target), Bson, Ok],\n            [$($word $arg),*];\n            $($rest)*\n        )\n    };\n    (get $target:ident = from ($source:expr), optional, $($word:ident $arg:tt),*; $($rest:tt)*) =&gt; {\n        bson_destructure!(\n            @collect opt,\n            [$target, $source, stringify!($target), Bson, Ok],\n            [$($word $arg),*];\n            $($rest)*\n        )\n    };\n\n    // final form\n    (ret $e:expr) =&gt; { $e }\n}\n</code></pre>\n\n<p>However, the first example above results in the following compilation error:</p>\n\n<pre><code>src/db/data.rs:345:22: 345:25 error: no rules expected the token `opt`\nsrc/db/data.rs:345             @collect opt,\n                                        ^~~\n</code></pre>\n\n<p>I'm somewhat surprised that it doesn't show the error location as usual (that is, there is no indication where expansion happens), however, the error vanishes when I comment the piece of code which uses the macro out.</p>\n\n<p>I can't see why it says that no rules expected this token because there is such a rule, but maybe I don't understand something.</p>\n\n<p>I'm pretty sure that this is possible because that's roughly what quick_error crate does, but it seems that my macro writing skills are still lacking.</p>\n\n<p>How should I fix the macro so it would work as I expect?</p>\n\n<p>For completeness, the following is the definition of <code>BsonDestructureError</code>:</p>\n\n<pre><code>#[derive(Debug, Clone)]\npub enum BsonDestructureError {\n    InvalidType {\n        field_name: &amp;'static str,\n        expected: &amp;'static str,\n        actual: Bson\n    },\n    InvalidArrayItemType {\n        index: usize,\n        expected: &amp;'static str,\n        actual: Bson\n    },\n    MissingField {\n        field_name: &amp;'static str,\n        expected: &amp;'static str\n    }\n}\n</code></pre>\n\n<p>I'm also using <code>bson</code> crate reexported from <code>ejdb</code> crate. <a href=\"https://gist.github.com/netvl/11579e3b385ef2b52b6f\">Here</a> is a minimal example, runnable with <a href=\"https://github.com/DanielKeep/cargo-script\"><code>cargo script</code></a> on stable Rust.</p>\n"}, {"tags": ["pointers", "casting", "rust"], "answers": [{"comments": [{"owner": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "edited": false, "score": 0, "creation_date": 1452328656, "post_id": 34691360, "comment_id": 57128951, "body": "Ah, I get it. Thanks for clarifying! Follow-up question: does rust infer the the second conversion because of the signature of <code>getsockopt</code> or is is just that <i>every</i> pointer gets cast to <code>*mut c_void</code> if I do the conversion often enough? Even for an arbitrary original type, let&#39;s say <code>&amp;mut Vec&lt;i32&gt;</code>?"}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "edited": false, "score": 0, "creation_date": 1452328731, "post_id": 34691360, "comment_id": 57128973, "body": "Nah, thankfully not! That would be scary :S It&#39;s indeed because of the signature of <code>getsockopt</code>, specifically because the expression&#39;s position has that target type. The same would be the case e.g. if you were doing <code>let ptr: *mut c_void = &amp;mut timeout as *mut _ as *mut _;</code>."}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 9, "last_activity_date": 1452328159, "creation_date": 1452328159, "answer_id": 34691360, "question_id": 34691267, "link": "https://stackoverflow.com/questions/34691267/why-would-it-be-necessary-to-perform-two-casts-to-a-mutable-raw-pointer-in-a-row/34691360#34691360", "title": "Why would it be necessary to perform two casts to a mutable raw pointer in a row?", "body": "<p>The <code>timeout</code> for example corresponds to a <a href=\"http://rust-lang-nursery.github.io/libc/x86_64-unknown-linux-gnu/libc/fn.getsockopt.html\" rel=\"noreferrer\"><code>*mut c_void</code></a> parameter:</p>\n\n<pre><code>pub unsafe extern fn getsockopt(sockfd: c_int, level: c_int, optname: c_int,\n                                optval: *mut c_void, optlen: *mut socklen_t) -&gt; c_int\n</code></pre>\n\n<p>The <code>timeout</code> in that file is defined as:</p>\n\n<pre><code>let mut timeout: libc::timeval = mem::zeroed();\n</code></pre>\n\n<p>So it's of type <code>libc::timeval</code>. Now let's consider:</p>\n\n<pre><code>&amp;mut timeout as *mut _ as *mut _\n</code></pre>\n\n<p>First you have <code>&amp;mut timeout</code> so that is of type <code>&amp;mut libc::timeval</code>. Then you do <code>as *mut _</code> to coerce it to a raw mutable pointer of an inferred type, which in this case is the same type of <code>libc::timeval</code>, so the full type so far is: <code>*mut libc::timeval</code>, which doesn't match the parameter type <code>*mut c_void</code>. The final <code>as *mut _</code> again infers the target type, which is now the parameter type <code>*mut c_void</code>, so this finally coerces the <code>*mut libc::timeval</code> to a <code>*mut c_void</code>.</p>\n"}], "owner": {"reputation": 431, "user_id": 3600860, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/b379506ec89829e5384fd392ca5a291e?s=128&d=identicon&r=PG&f=1", "display_name": "DeBe", "link": "https://stackoverflow.com/users/3600860/debe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 332, "favorite_count": 1, "accepted_answer_id": 34691360, "answer_count": 1, "score": 11, "last_activity_date": 1526586044, "creation_date": 1452327473, "last_edit_date": 1526586044, "question_id": 34691267, "link": "https://stackoverflow.com/questions/34691267/why-would-it-be-necessary-to-perform-two-casts-to-a-mutable-raw-pointer-in-a-row", "title": "Why would it be necessary to perform two casts to a mutable raw pointer in a row?", "body": "<p>When looking at <a href=\"https://github.com/rust-lang-nursery/unix-socket/blob/master/src/lib.rs\" rel=\"noreferrer\"><code>unix-socket</code></a>, I came across this code:</p>\n\n<pre><code>let timeout = unsafe {\n    let mut timeout: libc::timeval = mem::zeroed();\n    let mut size = mem::size_of::&lt;libc::timeval&gt;() as libc::socklen_t;\n    try!(cvt(libc::getsockopt(self.0,\n                              libc::SOL_SOCKET,\n                              kind,\n                              &amp;mut timeout as *mut _ as *mut _,\n                              &amp;mut size as *mut _ as *mut _)));\n    timeout\n};\n</code></pre>\n\n<p>I was curious about these lines in particular:</p>\n\n<pre><code>&amp;mut timeout as *mut _ as *mut _,\n&amp;mut size as *mut _ as *mut _\n</code></pre>\n\n<p>Why is it necessary to perform two casts to a mutable raw pointer in a row? Why wouldn't it have been sufficient to only cast once?</p>\n"}, {"tags": ["enums", "rust"], "answers": [{"comments": [{"owner": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "edited": false, "score": 0, "creation_date": 1452329946, "post_id": 34690821, "comment_id": 57129289, "body": "In this case I can simply do nothing or panic, as I am the only user of the function. Thanks for the help."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "edited": false, "score": 0, "creation_date": 1452337608, "post_id": 34690821, "comment_id": 57131363, "body": "@pengowen123 if you are the only user of the function, you can Make Foo and Bar two separate structs and define an enum for when you want to accept either of them, like this <a href=\"http://is.gd/ayeZaS\" rel=\"nofollow noreferrer\">example</a>"}, {"owner": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "edited": false, "score": 0, "creation_date": 1452370156, "post_id": 34690821, "comment_id": 57142834, "body": "I am using an <code>enum</code> to store a vector of slightly different types. Is it possible to do something like in your example but as a method on the <code>enum</code>?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "edited": false, "score": 0, "creation_date": 1452392810, "post_id": 34690821, "comment_id": 57148792, "body": "@pengowen123 If you want to reply to someone you should mention their name at the start, or they might never know.  I&#39;m not sure what exactly you&#39;re asking for here, but I don&#39;t think so.  A <code>Vec</code> can only have <i>one</i> element type, which would presumably be the enum, and the enum cannot assume one variant or the other isn&#39;t being used."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1452323907, "creation_date": 1452323907, "answer_id": 34690821, "question_id": 34690764, "link": "https://stackoverflow.com/questions/34690764/how-to-make-a-compile-time-error-if-an-enum-variant-is-passed-to-a-function/34690821#34690821", "title": "How to make a compile time error if an enum variant is passed to a function", "body": "<p>No.</p>\n\n<p>Even a compiler plugin (by which I assume you mean a \"lint\") can't possibly cover all cases.</p>\n\n<p>If you want to make it statically impossible to pass a particular piece of data to the function, then change the types so that it's <em>actually</em> not valid: define a sibling of <code>Foobar</code> that doesn't have the <code>Bar</code> variant, along with some conversions between the two.</p>\n\n<p>There is no simple or automatic way to do this in Rust; you'll just have to do the hard yakka.  Or wait for refinement types, but I wouldn't recommend doing that.</p>\n"}], "owner": {"reputation": 917, "user_id": 4808573, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/oFwhb.jpg?s=128&g=1", "display_name": "pengowen123", "link": "https://stackoverflow.com/users/4808573/pengowen123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "accepted_answer_id": 34690821, "answer_count": 1, "score": 3, "last_activity_date": 1452323907, "creation_date": 1452323416, "question_id": 34690764, "link": "https://stackoverflow.com/questions/34690764/how-to-make-a-compile-time-error-if-an-enum-variant-is-passed-to-a-function", "title": "How to make a compile time error if an enum variant is passed to a function", "body": "<p>Suppose I have an <code>enum</code>:</p>\n\n<pre><code>enum Foobar {\n    Foo(i32),\n    Bar(f64)\n}\n</code></pre>\n\n<p>I also have a function that takes a <code>Foobar</code> as an argument:</p>\n\n<pre><code>fn foo(x: &amp;mut Foobar) {\n    match x {\n        Foobar::Foo(i32) =&gt; { /* do something */ },\n        Foobar::Bar(f64) =&gt; { /* panic */ }\n    }\n}\n</code></pre>\n\n<p>Is it possible to throw a compile time error if the caller of the function passes the <code>Bar</code> variant to the function, without using a compiler plugin?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "is_accepted": false, "score": 2, "last_activity_date": 1452366181, "last_edit_date": 1452366181, "creation_date": 1452318092, "answer_id": 34690120, "question_id": 34690031, "link": "https://stackoverflow.com/questions/34690031/cannot-open-file-based-on-documentation-example/34690120#34690120", "title": "Cannot open File based on documentation example", "body": "<p>The answer was just to <code>unwrap</code> instead of use <code>try</code>. <code>try</code> is used to bubble up results (which makes sense!)</p>\n"}], "owner": {"reputation": 6045, "user_id": 1036670, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/8d2dr.jpg?s=128&g=1", "display_name": "vitiral", "link": "https://stackoverflow.com/users/1036670/vitiral"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "closed_date": 1452366207, "answer_count": 1, "score": 0, "last_activity_date": 1452366181, "creation_date": 1452317207, "last_edit_date": 1452366164, "question_id": 34690031, "link": "https://stackoverflow.com/questions/34690031/cannot-open-file-based-on-documentation-example", "closed_reason": "Duplicate", "title": "Cannot open File based on documentation example", "body": "<p>I can't seem to get the <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow\">example code from the <code>File</code> documentation</a> to work. I added the main function, etc:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::fs::File;\n\nfn main(){\n    let mut f = try!(File::create(\"foo.txt\"));\n    try!(f.write_all(b\"Hello, world!\"));\n\n    let mut f = try!(File::open(\"foo.txt\"));\n    let mut s = String::new();\n    try!(f.read_to_string(&amp;mut s));\n    assert_eq!(s, \"Hello, world!\");\n}\n</code></pre>\n\n<p>Gives me these errors:</p>\n\n<pre><code> file git:(master) \u2717 rustc main.rs -o /tmp/rrust.out\n&lt;std macros&gt;:5:8: 6:42 error: mismatched types:\n expected `()`,\n    found `core::result::Result&lt;_, _&gt;`\n(expected (),\n    found enum `core::result::Result`) [E0308]\n&lt;std macros&gt;:5 return $ crate:: result:: Result:: Err (\n&lt;std macros&gt;:6 $ crate:: convert:: From:: from ( err ) ) } } )\nmain.rs:5:17: 5:46 note: in this expansion of try! (defined in &lt;std macros&gt;)\n&lt;std macros&gt;:5:8: 6:42 help: run `rustc --explain E0308` to see a detailed explanation\n&lt;std macros&gt;:5:8: 6:42 error: mismatched types:\n expected `()`,\n    found `core::result::Result&lt;_, _&gt;`\n(expected (),\n    found enum `core::result::Result`) [E0308]\n&lt;std macros&gt;:5 return $ crate:: result:: Result:: Err (\n&lt;std macros&gt;:6 $ crate:: convert:: From:: from ( err ) ) } } )\nmain.rs:6:5: 6:41 note: in this expansion of try! (defined in &lt;std macros&gt;)\n&lt;std macros&gt;:5:8: 6:42 help: run `rustc --explain E0308` to see a detailed explanation\n&lt;std macros&gt;:5:8: 6:42 error: mismatched types:\n expected `()`,\n    found `core::result::Result&lt;_, _&gt;`\n(expected (),\n    found enum `core::result::Result`) [E0308]\n&lt;std macros&gt;:5 return $ crate:: result:: Result:: Err (\n&lt;std macros&gt;:6 $ crate:: convert:: From:: from ( err ) ) } } )\nmain.rs:8:17: 8:44 note: in this expansion of try! (defined in &lt;std macros&gt;)\n&lt;std macros&gt;:5:8: 6:42 help: run `rustc --explain E0308` to see a detailed explanation\n&lt;std macros&gt;:5:8: 6:42 error: mismatched types:\n expected `()`,\n    found `core::result::Result&lt;_, _&gt;`\n(expected (),\n    found enum `core::result::Result`) [E0308]\n&lt;std macros&gt;:5 return $ crate:: result:: Result:: Err (\n&lt;std macros&gt;:6 $ crate:: convert:: From:: from ( err ) ) } } )\nmain.rs:10:5: 10:36 note: in this expansion of try! (defined in &lt;std macros&gt;)\n&lt;std macros&gt;:5:8: 6:42 help: run `rustc --explain E0308` to see a detailed explanation\nerror: aborting due to 4 previous errors\n</code></pre>\n\n<p>It looks to me like it <strong>really</strong> doesn't like those <code>try!</code> statements. I am using Rust 1.5.0.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1452309097, "post_id": 34688759, "comment_id": 57125070, "body": "I&#39;m finding it hard to fully understand your question. How literal is <code>[...]</code> supposed to be? Are the <code>[]</code> supposed to be literal and the <code>...</code> is an ellipsis denoting some unspecified code? Or do you want literally three <code>.</code> characters? Are you basically asking &quot;inside this macro invocation, I want to specially handle every case of paired square brackets in a special way&quot; ?"}, {"owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1452375284, "post_id": 34688759, "comment_id": 57144403, "body": "Yes, Apologies, the ellipsis is some unspecified code. Long day yesterday. I posted this just before bed."}], "owner": {"reputation": 1122, "user_id": 892584, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/4403f52eda5458b0ce029c80a379a09d?s=128&d=identicon&r=PG", "display_name": "Chase Walden", "link": "https://stackoverflow.com/users/892584/chase-walden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 173, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1452388001, "creation_date": 1452303367, "last_edit_date": 1452388001, "question_id": 34688759, "link": "https://stackoverflow.com/questions/34688759/can-i-use-a-macro-to-replace-specific-expressions-within-a-block-of-code", "title": "Can I use a macro to replace specific expressions within a block of code?", "body": "<p>I am trying to write a set of Rust macros to execute certain code in a special way. Currently, I am writing it like this.</p>\n\n<pre><code>macro_rules! macro_stmt{\n    ([$e:expr]) =&gt; {\n        // do something ...\n    }\n}\n</code></pre>\n\n<p>and calling it </p>\n\n<pre><code>macro_stmt!([...]);\nlet var = macro_stmt!([...]);\nmacro_stmt!([...]);\n// etc...\n</code></pre>\n\n<p>Which is great! Essentially, I am running an expression (the ellipsis are a placeholder for some unspecified code) inside the square brackets in a special way and the <code>macro_stmt</code> macro already works great. </p>\n\n<p>What I would like to be able to do is write a macro so that I can run it like a block of code:</p>\n\n<pre><code>macro_rules! macro {\n    // some rule to call macro_stmt!\n    // this pattern isn't correct, BTW\n    ($($line:stmt);+;) =&gt; {\n        $(macro_stmt($line);)+\n    }\n}\n</code></pre>\n\n<p>and call it </p>\n\n<pre><code>macro! {\n    [...];\n    let var = [...];\n    [...];\n    // etc...\n}\n</code></pre>\n\n<p>but the compiler yells at me for the <code>stmt</code> fragment not being correct syntax as the contents of the 'array' are not the correct comma-separated format.</p>\n\n<p>Is there a way that I can call <code>macro_stmt</code> line-by-line without it checking syntax? The lines with no <code>let var =</code> would just call <code>macro_stmt()</code> but the lines with a <code>let</code> would prefix it with the same <code>let var = macro_stmt()</code></p>\n\n<p>The intended first expansion of <code>macro</code> would be</p>\n\n<pre><code>macro_stmt!([...]);\nlet var = macro_stmt!([...]);\nmacro_stmt!([...]);\n</code></pre>\n\n<p>Is this even possible?</p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 4, "creation_date": 1452282197, "post_id": 34684261, "comment_id": 57115986, "body": "I don&#39;t think that&#39;s possible. Why do you not want to use a Vec?"}, {"owner": {"reputation": 13359, "user_id": 489590, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e16b3d117fa188c4dbdafb8dc27a4df0?s=128&d=identicon&r=PG&f=1", "display_name": "Brian Cain", "link": "https://stackoverflow.com/users/489590/brian-cain"}, "edited": false, "score": 8, "creation_date": 1452282440, "post_id": 34684261, "comment_id": 57116124, "body": "Maybe you should describe which qualities of a <code>Vec</code> you think are lacking that an array satisfies."}, {"owner": {"reputation": 67160, "user_id": 1078084, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/wApmM.jpg?s=128&g=1", "display_name": "Akavall", "link": "https://stackoverflow.com/users/1078084/akavall"}, "edited": false, "score": 0, "creation_date": 1452286721, "post_id": 34684261, "comment_id": 57118395, "body": "Or maybe use <code>Slice</code>, it is similar to <code>Array</code> but size of a <code>Slice</code> does not have to be known at compile time."}, {"owner": {"reputation": 5778, "user_id": 4790988, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/fvtDA.jpg?s=128&g=1", "display_name": "Dima  Kudosh", "link": "https://stackoverflow.com/users/4790988/dima-kudosh"}, "edited": false, "score": 0, "creation_date": 1452286856, "post_id": 34684261, "comment_id": 57118468, "body": "I have some functions that accepts references to array, so i need array for it."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 7, "creation_date": 1452287423, "post_id": 34684261, "comment_id": 57118774, "body": "@DimaKudosh, are you sure they accept references to an array, not slices (e.g. <code>&amp;[u32]</code>)? If they are in fact slices, then <code>Vec&lt;T&gt;</code> is freely convertible to <code>&amp;[T]</code>, usually with just <code>&amp;</code>: <code>let v: Vec&lt;u32&gt; = ...; let s: &amp;[u32] = &amp;v</code>. And if they do in fact accept references to an array, then how dynamically sized arrays would help you? Rust does not have type-level integers, so the size of the array would be necessarily constant in this case."}, {"owner": {"reputation": 5778, "user_id": 4790988, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/fvtDA.jpg?s=128&g=1", "display_name": "Dima  Kudosh", "link": "https://stackoverflow.com/users/4790988/dima-kudosh"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1452332684, "post_id": 34684261, "comment_id": 57130005, "body": "@Vladimir Matveev,I create trait for reading u16, u32 and etc from stream and try to implement it for File struct. But I don&#39;t want to implement many similar methods, and I try to create one function and call it in this methods with different parameters. Firstly I try to pass length of buffer to it and read this buffer from file and then convert, but it&#39;s impossible to create dynamic array. Then I try to create Vec, I convert to integer using transmute and it&#39;s panic because Vec hasn&#39;t fixed length. Then I pass array but it&#39;s impossible to convert [u8;2] to [u8].Maybe you know better solution?"}, {"owner": {"reputation": 5778, "user_id": 4790988, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/fvtDA.jpg?s=128&g=1", "display_name": "Dima  Kudosh", "link": "https://stackoverflow.com/users/4790988/dima-kudosh"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1452333029, "post_id": 34684261, "comment_id": 57130098, "body": "@Vladimir Matveev,or better to make this function  using adding and shifts instead of transmute?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1452343009, "post_id": 34684261, "comment_id": 57133063, "body": "Of course you should not use transmutes for this. This is not portable. If you need to read binary numbers from a byte stream I suggest you to use <a href=\"https://crates.io/crates/byteorder\" rel=\"nofollow noreferrer\">byteorder</a> crate which does exactly that in a correct way."}, {"owner": {"reputation": 5778, "user_id": 4790988, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/fvtDA.jpg?s=128&g=1", "display_name": "Dima  Kudosh", "link": "https://stackoverflow.com/users/4790988/dima-kudosh"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1452343435, "post_id": 34684261, "comment_id": 57133204, "body": "@Vladimir Matveev, Thank you"}], "answers": [{"comments": [{"owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 0, "creation_date": 1561325505, "post_id": 34684869, "comment_id": 100015534, "body": "Is <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_boxed_slice\" rel=\"nofollow noreferrer\"><code>Vec::into_boxed_slice</code></a> an option then? How does it compare to a plain Vec or an array?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "edited": false, "score": 1, "creation_date": 1561325567, "post_id": 34684869, "comment_id": 100015543, "body": "@iago-lito does <a href=\"https://stackoverflow.com/q/39615666/155423\">What is the use of into_boxed_slice() methods?</a> and <a href=\"https://stackoverflow.com/q/33704592/155423\">Performance comparison of a Vec and a boxed slice</a> answer your question?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 53, "last_activity_date": 1561302824, "last_edit_date": 1561302824, "creation_date": 1452282310, "answer_id": 34684869, "question_id": 34684261, "link": "https://stackoverflow.com/questions/34684261/how-to-set-a-rust-array-length-dynamically/34684869#34684869", "title": "How to set a Rust array length dynamically?", "body": "<blockquote>\n  <p>Is it possible to create array with dynamic length?</p>\n</blockquote>\n\n<p>No. By definition, arrays have a length <em>defined at compile time</em>. A variable (because it can <em>vary</em>) is not known at compile time. The compiler would not know how much space to allocate on the stack to provide storage for the array.</p>\n\n<p>You will need to use a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\"><code>Vec</code></a>:</p>\n\n<pre><code>let arr = vec![0; length];\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28136739/155423\">Is it possible to control the size of an array using the type parameter of a generic?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 663, "user_id": 6709946, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9Fp1W.jpg?s=128&g=1", "display_name": "Aaron Zorel", "link": "https://stackoverflow.com/users/6709946/aaron-zorel"}, "is_accepted": false, "score": 4, "last_activity_date": 1612231652, "last_edit_date": 1612231652, "creation_date": 1599920118, "answer_id": 63861222, "question_id": 34684261, "link": "https://stackoverflow.com/questions/34684261/how-to-set-a-rust-array-length-dynamically/63861222#63861222", "title": "How to set a Rust array length dynamically?", "body": "<p>This should be possible after <a href=\"https://doc.rust-lang.org/beta/unstable-book/language-features/unsized-locals.html\" rel=\"nofollow noreferrer\">variable length arrays (VLA)</a> are implemented.</p>\n"}, {"comments": [{"owner": {"reputation": 4969, "user_id": 654269, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/837b193bb43ef1dd3fb31ddae1b791b0?s=128&d=identicon&r=PG", "display_name": "Majid Azimi", "link": "https://stackoverflow.com/users/654269/majid-azimi"}, "edited": false, "score": 0, "creation_date": 1607443671, "post_id": 64996483, "comment_id": 115271354, "body": "size argument of <code>from_size_align_unchecked</code> is in bytes. So you have to multiply <code>self.len</code> to <code>std::mem::size_of::&lt;T&gt;()</code> to calculate total size."}], "tags": [], "owner": {"reputation": 392, "user_id": 12425329, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SBtVX.jpg?s=128&g=1", "display_name": "Tianyi Shi", "link": "https://stackoverflow.com/users/12425329/tianyi-shi"}, "is_accepted": false, "score": 4, "last_activity_date": 1606262086, "last_edit_date": 1606262086, "creation_date": 1606261399, "answer_id": 64996483, "question_id": 34684261, "link": "https://stackoverflow.com/questions/34684261/how-to-set-a-rust-array-length-dynamically/64996483#64996483", "title": "How to set a Rust array length dynamically?", "body": "<p>You can create your own <code>HeapArray</code>. It's not that complicated if you read <a href=\"https://doc.rust-lang.org/alloc/\" rel=\"nofollow noreferrer\"><code>alloc</code>'s docs</a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::alloc::{alloc, dealloc, Layout};\npub struct HeapArray&lt;T&gt; {\n    ptr: *mut T,\n    len: usize,\n}\n\nimpl&lt;T&gt; HeapArray&lt;T&gt; {\n    pub fn new(len: usize) -&gt; Self {\n        let ptr = unsafe {\n            let layout = Layout::from_size_align_unchecked(len, std::mem::size_of::&lt;T&gt;());\n            alloc(layout) as *mut T\n        };\n        Self { ptr, len }\n    }\n    pub fn get(&amp;self, idx: usize) -&gt; Option&lt;&amp;T&gt; {\n        if idx &lt; self.len {\n            unsafe { Some(&amp;*(self.ptr.add(idx))) }\n        } else {\n            None\n        }\n    }\n    pub fn get_mut(&amp;self, idx: usize) -&gt; Option&lt;&amp;mut T&gt; {\n        if idx &lt; self.len {\n            unsafe { Some(&amp;mut *(self.ptr.add(idx))) }\n        } else {\n            None\n        }\n    }\n    pub fn len(&amp;self) -&gt; usize {\n        self.len\n    }\n}\n\n\nimpl&lt;T&gt; Drop for HeapArray&lt;T&gt; {\n    fn drop(&amp;mut self) {\n        unsafe {\n            dealloc(\n                self.ptr as *mut u8,\n                Layout::from_size_align_unchecked(self.len, std::mem::size_of::&lt;T&gt;()),\n            )\n        };\n    }\n}\n\nimpl&lt;T&gt; std::ops::Index&lt;usize&gt; for HeapArray&lt;T&gt; {\n    type Output = T;\n    fn index(&amp;self, index: usize) -&gt; &amp;Self::Output {\n        self.get(index).unwrap()\n    }\n}\nimpl&lt;T&gt; std::ops::IndexMut&lt;usize&gt; for HeapArray&lt;T&gt; {\n    fn index_mut(&amp;mut self, index: usize) -&gt; &amp;mut Self::Output {\n        self.get_mut(index).unwrap()\n    }\n}\n\n</code></pre>\n<p>You may also add methods like <code>as_slice</code>, <code>get_unchecked</code>, etc.</p>\n"}], "owner": {"reputation": 5778, "user_id": 4790988, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/fvtDA.jpg?s=128&g=1", "display_name": "Dima  Kudosh", "link": "https://stackoverflow.com/users/4790988/dima-kudosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 28673, "favorite_count": 2, "accepted_answer_id": 34684869, "answer_count": 3, "score": 35, "last_activity_date": 1612231652, "creation_date": 1452279903, "last_edit_date": 1500163927, "question_id": 34684261, "link": "https://stackoverflow.com/questions/34684261/how-to-set-a-rust-array-length-dynamically", "title": "How to set a Rust array length dynamically?", "body": "<p>I want to create array like this:</p>\n\n<pre><code>let arr = [0; length];\n</code></pre>\n\n<p>Where length is a <code>usize</code>. But I get this error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>E0307\nThe length of an array is part of its type. For this reason, this length \nmust be a compile-time constant.\n</code></pre>\n\n<p>Is it possible to create array with dynamic length? I want an array, not a <code>Vec</code>.</p>\n"}, {"tags": ["rust", "tail"], "comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1452215978, "post_id": 34667670, "comment_id": 57081828, "body": "Seems to work for me: <a href=\"http://is.gd/h9U1SI\" rel=\"nofollow noreferrer\">is.gd/h9U1SI</a>. Perhaps the syntax have changed? Still worth a full answer."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1452216496, "post_id": 34667670, "comment_id": 57081952, "body": "@ArtemGr Yes, sorry, that seems to work. However I can&#39;t seem to get it working on a string of characters. That was the main point of the question (if that wasn&#39;t clear - should I perhaps rephrase?)."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1452219235, "post_id": 34667670, "comment_id": 57082640, "body": "By the way @ArtemGr, thank you for the playground link - I wasn&#39;t aware Rust had a playground like that (thumbsup)."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1452235678, "post_id": 34667670, "comment_id": 57087419, "body": "How about <a href=\"http://is.gd/WgkdSw\" rel=\"nofollow noreferrer\">is.gd/WgkdSw</a>? There seems to be a temporary problem with playground but on my workstation it prints &quot;matched... 1 matched... 2&quot;."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1452237093, "post_id": 34667670, "comment_id": 57087994, "body": "Geez thats close to what I&#39;m after @ArtemGr. I don&#39;t suppose theres a name for that <code>b</code> prefix I could use to continue investigating?"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 1, "creation_date": 1452238471, "post_id": 34667670, "comment_id": 57088569, "body": "It&#39;s a byte literal: <a href=\"https://doc.rust-lang.org/stable/reference.html#byte-literals\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/reference.html#byte-literals</a>; see <a href=\"https://doc.rust-lang.org/stable/reference.html#literals\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/reference.html#literals</a>"}], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452224553, "post_id": 34669095, "comment_id": 57083963, "body": "Fair enough. This was a feature I enjoyed in F# so I did hope it was possible in Rust. Nonetheless it won&#39;t stop me from investigating Rust ... so thanks :)"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1452224253, "creation_date": 1452224253, "answer_id": 34669095, "question_id": 34667670, "link": "https://stackoverflow.com/questions/34667670/equivalent-of-cons-pattern-from-f-in-rust-for-strings/34669095#34669095", "title": "Equivalent of Cons Pattern from F# in Rust for Strings", "body": "<p>I don't believe so.  Slice patterns aren't likely to be amenable to this, either, since the \"and the rest\" part of the pattern goes <em>inside</em> the array pattern, which would imply some way of putting said pattern <em>inside</em> a string, which implies an escaping mechanism that doesn't exist.</p>\n\n<p>In addition, Rust doesn't have a proper \"concatenation\" operator, and the operators it <em>does</em> have can't participate in destructuring.  So, I wouldn't hold your breath on this one.</p>\n"}, {"comments": [{"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1452246736, "post_id": 34673690, "comment_id": 57093042, "body": "+1 for going there. Unless you&#39;ll only work with ASCII, I think you need to work on a <code>&amp;[char]</code> slice and the only bottleneck then would be efficiently obtaining it from a <code>&amp;str</code>. I would&#39;ve used a stack-allocated array for that (<a href=\"https://crates.io/crates/stack/\" rel=\"nofollow noreferrer\">crates.io/crates/stack</a>) but it&#39;s a different story."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": false, "score": 1, "last_activity_date": 1468781419, "last_edit_date": 1468781419, "creation_date": 1452245835, "answer_id": 34673690, "question_id": 34667670, "link": "https://stackoverflow.com/questions/34667670/equivalent-of-cons-pattern-from-f-in-rust-for-strings/34673690#34673690", "title": "Equivalent of Cons Pattern from F# in Rust for Strings", "body": "<p>Just going to post this here... it seems to do what I want. As a simple test, this will just print every character in a string but print <code>Found a whitespace character</code> when it finds a whitespace character. It does this recursively and destructuring a vector of bytes. I must give a shout out to @ArtemGr who gave me the inspiration to look at working with bytes to see if that fixed the compiler issues I was having with <code>char</code>s.</p>\n\n<p>There are no doubt memory issues I am unaware of as yet here (copying/allocations, etc; especially around the <code>String</code> instances)... but I'll work on those as I dig deeper in to the inner workings of Rust. It's also probably much more verbose than it needs to be.. this is just where I got to after a little tinkering.</p>\n\n<pre><code>#![feature(slice_patterns)]\n\nuse std::iter::FromIterator;\nuse std::vec::Vec;\n\nfn main() {\n    process(\"Hello world!\".to_string());\n}\n\nfn process(input: String) {\n    match input.as_bytes() {\n        &amp;[c, ref _rest..] if (c as char).is_whitespace() =&gt; { println!(\"Found a whitespace character\"); process(string_from_rest(_rest)) },\n        &amp;[c, ref _rest..] =&gt; { println!(\"{}\", c as char); process(string_from_rest(_rest)) },\n        _ =&gt; ()\n    }\n}\n\nfn string_from_rest(rest: &amp;[u8]) -&gt; String {\n    String::from_utf8(Vec::from_iter(rest.iter().cloned())).unwrap()\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>H\ne\nl\nl\no\nFound a whitespace character\nw\no\nr\nl\nd\n!\n</code></pre>\n\n<p>Obviously, as its testing against individual bytes (and only considering possible UTF-8 characters when rebuilding the string), its not going to work with wide characters. My actual use case only requires characters in the ASCII space .. so this is sufficient for now.</p>\n\n<p>I guess, to work on wider characters the Rust pattern matching would require the ability to type coerce (which I don't believe you can do currently?), since a <code>Chars&lt;'T&gt;</code> iterator seems to be inferred as <code>&amp;[_]</code>. That could just be my immaturity with the Rust language though during my other attempts.</p>\n"}, {"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452262152, "post_id": 34673741, "comment_id": 57103085, "body": "This is great! I really appreciate the time you took to put this together. There is literally 100 things in your samples (both the working and non working) that I can learn from. RE contributing.. I certainly would be up to the task in future.. once I am more comfortable with Rust. Thanks again! I really appreciate it!"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1452265484, "post_id": 34673741, "comment_id": 57105395, "body": "You&#39;re welcome!  ) Also, I&#39;ve locally checked all the samples in this answer and all of them should be working. If some of them aren&#39;t working for you then please give me a shout."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1452266741, "post_id": 34673741, "comment_id": 57106395, "body": "<i>due to LLVM-related difficulties</i> \u2014 also because TCO makes stack traces not look the same. IIRC, the keyword <code>become</code> is reserved for opting in to future TCO."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1453200812, "post_id": 34673741, "comment_id": 57487675, "body": "I realised I never accepted your answer @ArtemGr. Apologies for that."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1453214939, "post_id": 34673741, "comment_id": 57497401, "body": "@SimonWhitehead NP!  )"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": true, "score": 6, "last_activity_date": 1468781301, "last_edit_date": 1468781301, "creation_date": 1452245990, "answer_id": 34673741, "question_id": 34667670, "link": "https://stackoverflow.com/questions/34667670/equivalent-of-cons-pattern-from-f-in-rust-for-strings/34673741#34673741", "title": "Equivalent of Cons Pattern from F# in Rust for Strings", "body": "<p>You can use the pattern matching with a <code>byte</code> slice:</p>\n\n<pre><code>#![feature(slice_patterns)]\n\nfn internal_check(acc: &amp;[u8]) -&gt; bool {\n    match acc {\n        &amp;[b'-', ref tail..] =&gt; internal_check(tail),\n        &amp;[ch, ref tail..] if (ch as char).is_whitespace() =&gt; internal_check(tail),\n        &amp;[] =&gt; true,\n        _ =&gt; false,\n    }\n}\n\nfn main() {\n    for s in [\"foo\", \"bar\", \"   \", \" - \"].iter() {\n        println!(\"text '{}', checks? {}\", s, internal_check(s.as_bytes()));\n    }\n}\n</code></pre>\n\n<p>You can use it with a <code>char</code> slice (where <code>char</code> is a Unicode Scalar Value):</p>\n\n<pre><code>#![feature(slice_patterns)]\n\nfn internal_check(acc: &amp;[char]) -&gt; bool {\n    match acc {\n        &amp;['-', ref tail..] =&gt; internal_check(tail),\n        &amp;[ch, ref tail..] if ch.is_whitespace() =&gt; internal_check(tail),\n        &amp;[] =&gt; true,\n        _ =&gt; false,\n    }\n}\n\nfn main() {\n    for s in [\"foo\", \"bar\", \"   \", \" - \"].iter() {\n        println!(\"text '{}', checks? {}\",\n                 s, internal_check(&amp;s.chars().collect::&lt;Vec&lt;char&gt;&gt;()));\n    }\n}\n</code></pre>\n\n<p>But as of now it doesn't work with a <code>&amp;str</code> (producing <a href=\"https://doc.rust-lang.org/error-index.html#E0308\" rel=\"nofollow\">E0308</a>). Which I think is for the best since <code>&amp;str</code> is neither here nor there, it's a <code>byte</code> slice under the hood but Rust tries to guarantee that it's a valid UTF-8 and tries to remind you to work with <code>&amp;str</code> in terms of unicode sequences and characters rather than bytes. So to efficiently match on the <code>&amp;str</code> we have to explicitly use the <code>as_bytes</code> method, essentially telling Rust that \"we know what we're doing\".</p>\n\n<p>That's my reading, anyway. If you want to dig deeper and into the source code of the Rust compiler you might start with <a href=\"https://github.com/rust-lang/rust/issues/1844\" rel=\"nofollow\">issue 1844</a> and browse the commits and issues linked there.</p>\n\n<blockquote>\n  <p>Basically I want to match 1 character with a guard and use \"everything\n  else\" in the expression that follows.</p>\n</blockquote>\n\n<p>If you only want to match on a <em>single</em> character then using the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.chars\" rel=\"nofollow\">chars</a> iterator to get the characters and matching on the character itself might be better than converting the entire UTF-8 <code>&amp;str</code> into a <code>&amp;[char]</code> slice. For instance, with the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.chars\" rel=\"nofollow\">chars</a> iterator you don't have to allocate the memory for the characters array.</p>\n\n<pre><code>fn internal_check(acc: &amp;str) -&gt; bool {\n    for ch in acc.chars() {\n        match ch {\n            '-' =&gt; (),\n            ch if ch.is_whitespace() =&gt; (),\n            _ =&gt; return false,\n        }\n    }\n    return true;\n}\n\nfn main() {\n    for s in [\"foo\", \"bar\", \"   \", \" - \"].iter() {\n        println!(\"text '{}', checks? {}\", s, internal_check(s));\n    }\n}\n</code></pre>\n\n<p>You can also use the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.chars\" rel=\"nofollow\">chars</a> iterator to split the <code>&amp;str</code> on the Unicode Scalar Value boundary:</p>\n\n<pre><code>fn internal_check(acc: &amp;str) -&gt; bool {\n    let mut chars = acc.chars();\n    match chars.next() {\n        Some('-') =&gt; internal_check(chars.as_str()),\n        Some(ch) if ch.is_whitespace() =&gt; internal_check(chars.as_str()),\n        None =&gt; true,\n        _ =&gt; false,\n    }\n}\n\nfn main() {\n    for s in [\"foo\", \"bar\", \"   \", \" - \"].iter() {\n        println!(\"text '{}', checks? {}\", s, internal_check(s));\n    }\n}\n</code></pre>\n\n<p>But keep in mind that as of now Rust provides no guarantees of optimizing this tail-recursive function into a loop. (Tail call optimization would've been a welcome addition to the language but it wasn't implemented so far due to LLVM-related difficulties).</p>\n"}], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 1, "accepted_answer_id": 34673741, "answer_count": 3, "score": 3, "last_activity_date": 1468781637, "creation_date": 1452213205, "last_edit_date": 1468781637, "question_id": 34667670, "link": "https://stackoverflow.com/questions/34667670/equivalent-of-cons-pattern-from-f-in-rust-for-strings", "title": "Equivalent of Cons Pattern from F# in Rust for Strings", "body": "<p>I am experimenting with Rust by implementing a small F# snippet of mine.</p>\n\n<p>I am at the point where I want to destructure a string of characters. Here is the F#:</p>\n\n<pre class=\"lang-ml prettyprint-override\"><code> let rec internalCheck acc = function\n    | w :: tail when Char.IsWhiteSpace(w) -&gt; \n        internalCheck acc tail\n    | other\n    | matches\n    | here\n</code></pre>\n\n<p>..which can be called like this: <code>internalCheck [] \"String here\"</code> where the <code>::</code> operator signifies the right hand side is the \"rest of the list\".</p>\n\n<p>So I checked the Rust documentation and there are examples for destructuring vectors like this:</p>\n\n<pre><code>let v = vec![1,2,3];\n\nmatch v {\n    [] =&gt; ...\n    [first, second, ..rest] =&gt; ...\n}\n</code></pre>\n\n<p>..etc. However this is now behind the <code>slice_patterns</code> feature gate. I tried something similar to this:</p>\n\n<pre><code>match input.chars() {\n    [w, ..] =&gt; ...\n}\n</code></pre>\n\n<p>Which informed me that feature gates require non-stable releases to use.</p>\n\n<p>So I downloaded <code>multirust</code> and installed the latest nightly I could find (<code>2016-01-05</code>) and when I finally got the <code>slice_patterns</code> feature working ... I ran into endless errors regarding syntax and \"rest\" (in the above example) not being allowed.</p>\n\n<p>So, is there an equivalent way to destructure a string of characters, utilizing <code>::</code>-like functionality ... in Rust? Basically I want to match 1 character with a guard and use \"everything else\" in the expression that follows.</p>\n\n<p>It is perfectly acceptable if the answer is \"No, there isn't\". I certainly cannot find many examples of this sort online anywhere and the slice pattern matching doesn't seem to be high on the feature list.</p>\n\n<p>(I will happily delete this question if there is something I missed in the Rust documentation)</p>\n"}, {"tags": ["parallel-processing", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1452226161, "creation_date": 1452226161, "answer_id": 34669342, "question_id": 34665293, "link": "https://stackoverflow.com/questions/34665293/using-crossbeam-scoped-threads-with-vector-chunks/34669342#34669342", "title": "Using crossbeam scoped threads with vector chunks", "body": "<blockquote>\n  <p>which indicates that the map call inside <code>scope.spawn()</code> isn't returning its result into the chunk</p>\n</blockquote>\n\n<p>That's true, because that's not how that method works. The general idea is you establish a new scope and then you can spawn threads that are guaranteed to end before that scope does.</p>\n\n<p><code>crossbeam::scope</code> establishes the scope, and <a href=\"http://aturon.github.io/crossbeam-doc/crossbeam/fn.scope.html\" rel=\"nofollow\">is defined as</a>:</p>\n\n<pre><code>pub fn scope&lt;'a, F, R&gt;(f: F) -&gt; R \n    where F: FnOnce(&amp;Scope&lt;'a&gt;) -&gt; R\n</code></pre>\n\n<p>That is, you give a closure to <code>scope</code>. The closure will be given a reference to a <code>Scope</code>. Whatever the closure returns will be returned from `scope.</p>\n\n<p>Inside that closure, you can spawn threads with <a href=\"http://aturon.github.io/crossbeam-doc/crossbeam/struct.Scope.html#method.spawn\" rel=\"nofollow\"><code>Scope::spawn</code></a>:</p>\n\n<pre><code>fn spawn&lt;F, T&gt;(&amp;self, f: F) -&gt; ScopedJoinHandle&lt;T&gt; \n    where F: FnOnce() -&gt; T + Send + 'a,\n          T: Send + 'a\n</code></pre>\n\n<p><code>spawn</code> takes a closure that takes no arguments and returns some type. That type will be the result of the <code>spawn</code> method (modulo some error handling).</p>\n\n<p>Nothing of crossbeam inherently modifies any data, that's up to your code. So let's look at what you are doing in the thread:</p>\n\n<pre><code>chunk.iter().map(|elem| convert_bng(elem.0, elem.1)).collect()\n</code></pre>\n\n<p>You take your <code>&amp;mut [T]</code> and iterate over it, converting each element by passing it to <code>convert_bng</code>. You don't have the definition of <code>convert_bng</code>, so let's say it returns a <code>bool</code>. You then <code>collect</code> this iterator of <code>bool</code>s. However, there's a multitude of possible collections that you could be targeting, so we need to know what concrete collection is desired. In most cases, this is done by something like <code>let foo: ConcreteCollection = iter.collect()</code>. </p>\n\n<p>Since this <code>collect</code> is the last expression, it is also the return value of the <code>spawn</code>, so we can look to see how that return value is used. Turns out it <em>isn't</em>, which would be equivalent to just saying <code>iterator.collect();</code>, which doesn't have enough information to be compiled.</p>\n\n<p>Beyond that, you need to decide if you are trying to modify a collection in-place or not. The fact that you do <code>chunks_mut</code> seems to indicate that you want each thread to perform work on the vector without any extra allocation. However, you ignore that it's mutable and return newly allocated collections (of an indeterminate type). Since I don't know what <code>convert_bng</code> returns, it's hard to say if it's even possible. Additionally, <code>map</code> is only used when transforming a type to a new type, not to mutate a value in place. You can't mutate a slice in-place to put a different type in there, as it would no longer be a slice!</p>\n"}, {"tags": [], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "is_accepted": false, "score": 0, "last_activity_date": 1452442130, "creation_date": 1452442130, "answer_id": 34707651, "question_id": 34665293, "link": "https://stackoverflow.com/questions/34665293/using-crossbeam-scoped-threads-with-vector-chunks/34707651#34707651", "title": "Using crossbeam scoped threads with vector chunks", "body": "<p>My current approach, which works well, is to re-write convert_bng to the following signature:<br>\n<code>fn convert_bng(longitude: &amp;f32, latitude: &amp;f32) -&gt; (i32, i32) { \u2026 }</code></p>\n\n<p>Which then allows me to use crossbeam as follows:</p>\n\n<pre><code>pub extern \"C\" fn convert_to_bng(longitudes: Array, latitudes: Array) -&gt; Array {\n    let orig: Vec&lt;(&amp;f32, &amp;f32)&gt; = // orig is populated here\n    let mut result = vec![(1, 1); orig.len()];\n    let mut size = orig.len() / NUMTHREADS;\n    if orig.len() % NUMTHREADS &gt; 0 {\n        size += 1;\n    }\n    size = std::cmp::max(1, size);\n    crossbeam::scope(|scope| {\n        for (res_chunk, orig_chunk) in result.chunks_mut(size).zip(orig.chunks(size)) {\n            scope.spawn(move || {\n                for (res_elem, orig_elem) in res_chunk.iter_mut().zip(orig_chunk.iter()) {\n                    *res_elem = convert_bng(orig_elem.0, orig_elem.1);\n                }\n            });\n        }\n    });\n    Array::from_vec(result)\n}\n</code></pre>\n\n<p>This code is considerably more clear and simple, and runs at essentially the same speed (it's &lt; 1% faster, on average) as the original.  </p>\n\n<p>The use of a pre-filled result vector doesn't seem ideal to me, but the approach of trying to mutate <code>orig</code> in-place doesn't seem fruitful: convert_bng's return type is unavoidably different to <code>orig</code>'s, and trying to work around this is beyond me at the moment. </p>\n"}], "owner": {"reputation": 21101, "user_id": 416626, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/ad98b7aa615718b4a2446d12af86be73?s=128&d=identicon&r=PG", "display_name": "urschrei", "link": "https://stackoverflow.com/users/416626/urschrei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 890, "favorite_count": 0, "accepted_answer_id": 34669342, "answer_count": 2, "score": 0, "last_activity_date": 1452442130, "creation_date": 1452201312, "last_edit_date": 1452442086, "question_id": 34665293, "link": "https://stackoverflow.com/questions/34665293/using-crossbeam-scoped-threads-with-vector-chunks", "title": "Using crossbeam scoped threads with vector chunks", "body": "<p>I have a vector of tuples, which I split into chunks, then hand each chunk off to its own thread for processing, and recombine them at the end.\nI've been using the following code which uses <code>std::thread</code>, and it's working well, but requires a lot of cloning and reconstituting which I'd like to eliminate.</p>\n\n<pre><code>// convert_bng is just an expensive function\nlet orig: Vec&lt;(&amp;f32, &amp;f32)&gt;\n// orig gets populated here\nlet mut guards: Vec&lt;JoinHandle&lt;Vec&lt;(i32, i32)&gt;&gt;&gt; = vec![];\n    // split into slices\n    let mut size = orig.len() / NUMTHREADS;\n    if orig.len() % NUMTHREADS &gt; 0 {\n        size += 1;\n    }\n    // if orig.len() == 0, we need another adjustment\n    size = std::cmp::max(1, size);\n    for chunk in orig.chunks(size) {\n        let chunk = chunk.to_owned();\n        let g = thread::spawn(move || {\n            chunk.into_iter()\n                 .map(|elem| convert_bng(elem.0, elem.1))\n                 .collect()\n        });\n        guards.push(g);\n    }\n    let mut result: Vec&lt;IntTuple&gt; = Vec::with_capacity(orig.len());\n    for g in guards {\n        result.extend(g.join()\n                       .unwrap()\n                       .into_iter()\n                       .map(|ints| {\n                           IntTuple {\n                               a: ints.0 as u32,\n                               b: ints.1 as u32,\n                           }\n                       }));\n    }\n</code></pre>\n\n<p>Is is possible to simplify this with crossbeam or scoped_threadpool? Something like:</p>\n\n<pre><code>let mut size = orig.len() / NUMTHREADS;\nif orig.len() % NUMTHREADS &gt; 0 {\n    size += 1;\n}\nsize = std::cmp::max(1, size);\n    crossbeam::scope(|scope| {\n        for chunk in orig.chunks_mut(size) {\n            scope.spawn(move || chunk.iter().map(|elem| convert_bng(elem.0, elem.1)).collect());\n        }\n    });\n    let mut result = orig.into_iter()\n                     .map(|ints| {\n                         IntTuple {\n                             a: ints.0 as u32,\n                             b: ints.1 as u32,\n                         }\n                     })\n                     .collect();\n}\n</code></pre>\n\n<p>(edited with code from the question to which shepmaster linked)</p>\n\n<p>However, this gives me an error in <code>let result \u2026</code>:<br>\n<code>casting &amp;f32 as u32 is invalid</code>, which indicates that the map call inside <code>scope.spawn()</code> isn't returning its result into the chunk, or is being discarded due to a type mismatch (the function returns <code>(i32, i32)</code>, but <code>orig</code> holds <code>(&amp;f32, &amp;f32)</code>). If I substitute a valid dummy vector for <code>result</code>, I get a completely different error related to <code>spawn</code>:</p>\n\n<pre><code>error: unable to infer enough type information about `_`; type annotations or generic parameter binding required [E0282]\nscope.spawn(move || chunk.iter().map(|elem| convert_bng(elem.0, elem.1)).collect());\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "edited": false, "score": 0, "creation_date": 1452197000, "post_id": 34663925, "comment_id": 57073688, "body": "I know that <code>Box::new</code> is a function, and I can&#39;t use that in a <code>const</code> item. But is there another way to create a box that <i>is</i> allowed? That&#39;s what I was trying to ask."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "edited": false, "score": 0, "creation_date": 1452197292, "post_id": 34663925, "comment_id": 57073831, "body": "not that I know of. But there is a way to create a static and initialize it later (with a box, if you so choose). It requires some careful unsafe code or using a macro like the one lazy-static provides."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "edited": false, "score": 1, "creation_date": 1452197447, "post_id": 34663925, "comment_id": 57073925, "body": "@AlexKnauth no. Creating a <code>Box</code> requires allocating memory, which cannot be done at compile time. How would the compiler know which piece of memory would be available to be allocated at some future point in time on some arbitrary computer?"}, {"owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "edited": false, "score": 1, "creation_date": 1452221442, "post_id": 34663925, "comment_id": 57083233, "body": "But according to the docs, const items can contain pointers as long as those are also const items that it has control over. So it seems like this should be possible, unless I&#39;m misunderstanding?"}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 0, "last_activity_date": 1452196231, "creation_date": 1452196231, "answer_id": 34663925, "question_id": 34663372, "link": "https://stackoverflow.com/questions/34663372/is-it-possible-to-create-a-box-within-a-const-item/34663925#34663925", "title": "Is it possible to create a Box within a const item?", "body": "<p>As the <a href=\"https://doc.rust-lang.org/stable/book/const-and-static.html\" rel=\"nofollow\">const and static</a> chapter of the book says:</p>\n\n<blockquote>\n  <p>Both const and static have requirements for giving them a value. They\n  may only be given a value that\u2019s a constant expression. In other\n  words, you cannot use the result of a function call or anything\n  similarly complex or at runtime.</p>\n</blockquote>\n\n<p><code>Box::new()</code> is a function, so it falls in the scope of things you can't do to initialize a const.\nYou can look at <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs\" rel=\"nofollow\">lazy-static</a> for a way to initialize a static variable at runtime.</p>\n"}, {"comments": [{"owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "edited": false, "score": 0, "creation_date": 1452278665, "post_id": 34672942, "comment_id": 57114075, "body": "Does having it initialized on first use prevent it from being immutable?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "edited": false, "score": 0, "creation_date": 1452282921, "post_id": 34672942, "comment_id": 57116374, "body": "@AlexKnauth: It can be immutable, but not <code>const</code>, and as far as I know cannot be stored in read-only memory. I&#39;ve included a link toward the lazy-static crate, and the examples on the first page show immutable data (<code>static ref HASHMAP: HashMap&lt;u32, &amp;&#39;static str&gt;</code> for example)."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1452282835, "last_edit_date": 1452282835, "creation_date": 1452243392, "answer_id": 34672942, "question_id": 34663372, "link": "https://stackoverflow.com/questions/34663372/is-it-possible-to-create-a-box-within-a-const-item/34672942#34672942", "title": "Is it possible to create a Box within a const item?", "body": "<p>Not right now, not in the immediate future.</p>\n\n<p>As @Paolo mentioned, the only way to initialize a <code>const</code> variable is to use a constant expression. Today, in stable, it is limited to a restricted set of operations (some integers manipulation, some casts, ...).</p>\n\n<p>There is a RFC to extend the set of expressions available in constant expressions: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0911-const-fn.md\" rel=\"nofollow\">const fn</a>. It is about allowing functions (both free functions and methods) to be marked <code>const</code>, making them available in constant expressions.</p>\n\n<p>The tracking issue is <a href=\"https://github.com/rust-lang/rust/issues/24111\" rel=\"nofollow\">#24111</a>, and <code>const fn</code> can be used on nightly with the <code>#![feature(const_fn)]</code> crate attribute...</p>\n\n<p>... however, at the moment, <code>const fn</code> are mostly about integral manipulations too. There is no plan that I know of to extend to arbitrary (side-effect-less) expressions, and thus it would not work for <code>Box::new</code>.</p>\n\n<hr>\n\n<p>At the moment, you are advised to use <a href=\"https://github.com/rust-lang-nursery/lazy-static.rs\" rel=\"nofollow\"><code>lazy_static!</code></a>, it will not allow the item to be <code>const</code> (it will be initialized on first use).</p>\n"}], "owner": {"reputation": 7455, "user_id": 5432501, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8MGE3.png?s=128&g=1", "display_name": "Alex Knauth", "link": "https://stackoverflow.com/users/5432501/alex-knauth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 785, "favorite_count": 0, "accepted_answer_id": 34672942, "answer_count": 2, "score": 3, "last_activity_date": 1452282835, "creation_date": 1452194292, "last_edit_date": 1452197066, "question_id": 34663372, "link": "https://stackoverflow.com/questions/34663372/is-it-possible-to-create-a-box-within-a-const-item", "title": "Is it possible to create a Box within a const item?", "body": "<p>I've tried things like this:</p>\n\n<pre><code>const b: Box&lt;i32&gt; = Box::new(5);\n</code></pre>\n\n<p>Which gave me that function calls in constants are limited to struct and enum constructors.</p>\n\n<p>I also tried</p>\n\n<pre><code>const b: Box&lt;i32&gt; = box 5;\n</code></pre>\n\n<p>Which gave me an error saying that I should use <code>Box::new</code> instead. Is there any way to do this? I need a box because it's in a struct and the struct requires a box.</p>\n\n<p>Edit:\nI know that <code>Box::new</code> is a function, and I can't use that in a <code>const</code> item. But is there another way to create a box that <em>is</em> allowed?</p>\n"}, {"tags": ["unit-testing", "testing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3175, "user_id": 596532, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/49e0289e5aeea379feaf3e7640d7f6ad?s=128&d=identicon&r=PG", "display_name": "Peanut", "link": "https://stackoverflow.com/users/596532/peanut"}, "edited": false, "score": 2, "creation_date": 1452288962, "post_id": 34666891, "comment_id": 57119525, "body": "That&#39;s almost what I&#39;m looking for... I&#39;d like to generate my cases based on a list of files in a directory. That probably won&#39;t work with the macros, but I&#39;ll see if I can come up with something."}, {"owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "reply_to_user": {"reputation": 3175, "user_id": 596532, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/49e0289e5aeea379feaf3e7640d7f6ad?s=128&d=identicon&r=PG", "display_name": "Peanut", "link": "https://stackoverflow.com/users/596532/peanut"}, "edited": false, "score": 0, "creation_date": 1590335274, "post_id": 34666891, "comment_id": 109635910, "body": "@Peanut did you end up finding a satisfactory solution for the case where you have a directory of files?"}, {"owner": {"reputation": 3175, "user_id": 596532, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/49e0289e5aeea379feaf3e7640d7f6ad?s=128&d=identicon&r=PG", "display_name": "Peanut", "link": "https://stackoverflow.com/users/596532/peanut"}, "edited": false, "score": 0, "creation_date": 1590559717, "post_id": 34666891, "comment_id": 109720895, "body": "No, but Rust is working on it. See: <a href=\"https://github.com/rust-lang/rfcs/issues/816#issuecomment-258403459\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/issues/816#issuecomment-258403459</a> And: <a href=\"https://internals.rust-lang.org/t/pre-rfc-stabilize-bench-bencher-and-black-box/4565/13\" rel=\"nofollow noreferrer\">internals.rust-lang.org/t/&hellip;</a>"}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": false, "score": 47, "last_activity_date": 1477244348, "last_edit_date": 1477244348, "creation_date": 1452208341, "answer_id": 34666891, "question_id": 34662713, "link": "https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust/34666891#34666891", "title": "How can I create parameterized tests in Rust?", "body": "<p>The built-in test framework does not support this; the most common approach used is to generate a test for each case using macros, like this:</p>\n\n<pre><code>macro_rules! fib_tests {\n    ($($name:ident: $value:expr,)*) =&gt; {\n    $(\n        #[test]\n        fn $name() {\n            let (input, expected) = $value;\n            assert_eq!(expected, fib(input));\n        }\n    )*\n    }\n}\n\nfib_tests! {\n    fib_0: (0, 0),\n    fib_1: (1, 1),\n    fib_2: (2, 1),\n    fib_3: (3, 2),\n    fib_4: (4, 3),\n    fib_5: (5, 5),\n    fib_6: (6, 8),\n}\n</code></pre>\n\n<p>This produces individual tests with names <code>fib_0</code>, <code>fib_1</code>, <em>&amp;c.</em></p>\n"}, {"comments": [{"owner": {"reputation": 147, "user_id": 11547112, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a79fa3897b6f6163eb7517718a21404c?s=128&d=identicon&r=PG&f=1", "display_name": "Apitronix", "link": "https://stackoverflow.com/users/11547112/apitronix"}, "edited": false, "score": 1, "creation_date": 1601369886, "post_id": 34667306, "comment_id": 113379370, "body": "Yep, but the main problem here is that many scenarii (all that are listed after the &quot;in&quot; of the for loop) are related to one test case (&quot;test_fib&quot;). Consequently, if the first scenario fail, any others listed scenarii will not be executed."}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 10, "last_activity_date": 1565061827, "last_edit_date": 1565061827, "creation_date": 1452210807, "answer_id": 34667306, "question_id": 34662713, "link": "https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust/34667306#34667306", "title": "How can I create parameterized tests in Rust?", "body": "<p>Probably not quite what you've asked for, but by using <code>TestResult::discard</code> with <a href=\"https://github.com/BurntSushi/quickcheck\" rel=\"nofollow noreferrer\">quickcheck</a> you can test a function with a subset of a randomly generated input.</p>\n\n<pre><code>extern crate quickcheck;\n\nuse quickcheck::{TestResult, quickcheck};\n\nfn fib(n: u32) -&gt; u32 {\n    match n {\n        0 =&gt; 0,\n        1 =&gt; 1,\n        _ =&gt; fib(n - 1) + fib(n - 2),\n    }\n}\n\nfn main() {\n    fn prop(n: u32) -&gt; TestResult {\n        if n &gt; 6 {\n            TestResult::discard()\n        } else {\n            let x = fib(n);\n            let y = fib(n + 1);\n            let z = fib(n + 2);\n            let ow_is_ow = n != 0 || x == 0;\n            let one_is_one = n != 1 || x == 1;\n            TestResult::from_bool(x + y == z &amp;&amp; ow_is_ow &amp;&amp; one_is_one)\n        }\n    }\n    quickcheck(prop as fn(u32) -&gt; TestResult);\n}\n</code></pre>\n\n<p>I took the Fibonacci test from <a href=\"https://web.archive.org/web/20160417125706/http://www.stuartgunter.org/intro-to-quickcheck/\" rel=\"nofollow noreferrer\">this Quickcheck tutorial</a>.</p>\n\n<hr>\n\n<p>P.S. And of course, even without macros and quickcheck you still can include the parameters in the test. \"Keep it simple\".</p>\n\n<pre><code>#[test]\nfn test_fib() {\n    for &amp;(x, y) in [(0, 0), (1, 1), (2, 1), (3, 2), (4, 3), (5, 5), (6, 8)].iter() {\n        assert_eq!(fib(x), y);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1565080068, "post_id": 42751723, "comment_id": 101228720, "body": "Is there any reason you must create <code>test.rs</code> and then use <code>include!()</code> macro inside <code>generated_test.rs</code>? I am unfamiliar with build scripts, but if they are ran before the project is actually compiled, shouldn&#39;t cargo just pick up <code>generated_script.rs</code> directly?"}, {"owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 2, "creation_date": 1566802673, "post_id": 42751723, "comment_id": 101756209, "body": "It outputs to a separate directory (the one given by &quot;OUT_DIR&quot;), not the source directory."}], "tags": [], "owner": {"reputation": 1417, "user_id": 2977291, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66afbccc6043392125ac0f0de57ccfa7?s=128&d=identicon&r=PG&f=1", "display_name": "paholg", "link": "https://stackoverflow.com/users/2977291/paholg"}, "is_accepted": false, "score": 5, "last_activity_date": 1519931511, "last_edit_date": 1519931511, "creation_date": 1489345047, "answer_id": 42751723, "question_id": 34662713, "link": "https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust/42751723#42751723", "title": "How can I create parameterized tests in Rust?", "body": "<p>It's possible to construct tests based on arbitrarily complex parameters and any information known at build time (including anything you can load from a file) with <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">a build script</a>.</p>\n\n<p>We tell Cargo where the build script is:</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"test\"\nversion = \"0.1.0\"\nbuild = \"build.rs\"\n</code></pre>\n\n<p>In the build script, we generate our test logic and place it in a file using the environment variable <code>OUT_DIR</code>:</p>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>fn main() {\n    let out_dir = std::env::var(\"OUT_DIR\").unwrap();\n    let destination = std::path::Path::new(&amp;out_dir).join(\"test.rs\");\n    let mut f = std::fs::File::create(&amp;destination).unwrap();\n\n    let params = &amp;[\"abc\", \"fooboo\"];\n    for p in params {\n        use std::io::Write;\n        write!(\n            f,\n            \"\n#[test]\nfn {name}() {{\n    assert!(true);\n}}\",\n            name = p\n        ).unwrap();\n    }\n}\n</code></pre>\n\n<p>Finally, we create a file in our tests directory that includes the code of the generated file.</p>\n\n<p><strong>tests/generated_test.rs</strong></p>\n\n<pre><code>include!(concat!(env!(\"OUT_DIR\"), \"/test.rs\"));\n</code></pre>\n\n<p>That's it. Let's verify that the tests are run:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test\n   Compiling test v0.1.0 (...)\n    Finished debug [unoptimized + debuginfo] target(s) in 0.26 secs\n     Running target/debug/deps/generated_test-ce82d068f4ceb10d\n\nrunning 2 tests\ntest abc ... ok\ntest fooboo ... ok\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 21277, "user_id": 12704, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/06c73e2393a863ea468d970038031c29?s=128&d=identicon&r=PG", "display_name": "Michael Easter", "link": "https://stackoverflow.com/users/12704/michael-easter"}, "edited": false, "score": 0, "creation_date": 1612645614, "post_id": 52843365, "comment_id": 116833525, "body": "This worked great! Thank you..."}], "tags": [], "owner": {"reputation": 16853, "user_id": 4101725, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dGwoPMFb_tM/AAAAAAAAAAI/AAAAAAAABks/tMMqc6E9REg/photo.jpg?sz=128", "display_name": "Michele d&#39;Amico", "link": "https://stackoverflow.com/users/4101725/michele-damico"}, "is_accepted": false, "score": 21, "last_activity_date": 1582795014, "last_edit_date": 1582795014, "creation_date": 1539720670, "answer_id": 52843365, "question_id": 34662713, "link": "https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust/52843365#52843365", "title": "How can I create parameterized tests in Rust?", "body": "<p>My <a href=\"https://crates.io/crates/rstest\" rel=\"noreferrer\"><code>rstest</code> crate</a> mimics <code>pytest</code> syntax and provides a lot of flexibility. A Fibonacci example can be very neat:</p>\n\n<pre><code>#[cfg(test)]\nmod test {\n    use super::*;\n\n    use rstest::rstest;\n\n    #[rstest(input, expected,\n    case(0, 0),\n    case(1, 1),\n    case(2, 1),\n    case(3, 2),\n    case(4, 3),\n    case(5, 5),\n    case(6, 8)\n    )]\n    fn fibonacci_test(input: u32, expected: u32) {\n        assert_eq!(expected, fibonacci(input))\n    }\n}\n\npub fn fibonacci(input: u32) -&gt; u32 {\n    match input {\n        0 =&gt; 0,\n        1 =&gt; 1,\n        n =&gt; fibonacci(n - 2) + fibonacci(n - 1)\n    }\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/home/michele/.cargo/bin/cargo test\n   Compiling fib_test v0.1.0 (file:///home/michele/learning/rust/fib_test)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.92s\n     Running target/debug/deps/fib_test-56ca7b46190fda35\n\nrunning 7 tests\ntest test::fibonacci_test::case_1 ... ok\ntest test::fibonacci_test::case_2 ... ok\ntest test::fibonacci_test::case_3 ... ok\ntest test::fibonacci_test::case_5 ... ok\ntest test::fibonacci_test_case_6 ... ok\ntest test::fibonacci_test::case_4 ... ok\ntest test::fibonacci_test::case_7 ... ok\n\ntest result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n</code></pre>\n\n<p>Every case is run as a single test case.</p>\n\n<p>The syntax is simple and neat and, if you need, you can use any Rust expression as the value in the <code>case</code> argument.</p>\n\n<p><code>rstest</code> also supports generics and <code>pytest</code>-like fixtures.</p>\n\n<hr>\n\n<p>Don't forget to add <code>rstest</code> to <code>dev-dependencies</code> in <code>Cargo.toml</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 42073, "user_id": 113632, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/f0aa6977c75f54ca9033d4f4d0244023?s=128&d=identicon&r=PG", "display_name": "dimo414", "link": "https://stackoverflow.com/users/113632/dimo414"}, "is_accepted": false, "score": 1, "last_activity_date": 1607705473, "last_edit_date": 1607705473, "creation_date": 1560934740, "answer_id": 56663823, "question_id": 34662713, "link": "https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust/56663823#56663823", "title": "How can I create parameterized tests in Rust?", "body": "<p><strong>EDIT: This is now on <a href=\"https://crates.io/crates/parameterized_test\" rel=\"nofollow noreferrer\">crates.io</a> as <code>parameterized_test::create!{...}</code> - Add <code>parameterized_test = &quot;0.1.0&quot;</code> to your <code>Cargo.toml</code> file.</strong></p>\n<hr />\n<p>Building off <a href=\"https://stackoverflow.com/a/34666891/113632\">Chris Morgan\u2019s answer</a>, here's a recursive macro to create parameterized tests (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=76ebdc19978a2038837f5be60290c185\" rel=\"nofollow noreferrer\">playground</a>):</p>\n<pre><code>macro_rules! parameterized_test {\n    ($name:ident, $args:pat, $body:tt) =&gt; {\n        with_dollar_sign! {\n            ($d:tt) =&gt; {\n                macro_rules! $name {\n                    ($d($d pname:ident: $d values:expr,)*) =&gt; {\n                        mod $name {\n                            use super::*;\n                            $d(\n                                #[test]\n                                fn $d pname() {\n                                    let $args = $d values;\n                                    $body\n                                }\n                            )*\n                        }}}}}}}\n</code></pre>\n<p>You can use it like so:</p>\n<pre><code>parameterized_test!{ even, n, { assert_eq!(n % 2, 0); } }\neven! {\n    one: 1,\n    two: 2,\n}\n</code></pre>\n<p><code>parameterized_test!</code> defines a new macro (<code>even!</code>) that will create parameterized tests taking one argument (<code>n</code>) and invoking <code>assert_eq!(n % 2, 0);</code>.</p>\n<p><code>even!</code> then works essentially like Chris' <code>fib_tests!</code>, though it groups the tests into a module so they can share a prefix (suggested <a href=\"https://stackoverflow.com/a/48272795/113632\">here</a>). This example results in two tests functions, <code>even::one</code> and <code>even::two</code>.</p>\n<p>This same syntax works for multiple parameters:</p>\n<pre><code>parameterized_test!{equal, (actual, expected), {\n    assert_eq!(actual, expected); \n}}\nequal! {\n    same: (1, 1),\n    different: (2, 3),\n}\n</code></pre>\n<p>The <code>with_dollar_sign!</code> macro used above to essentially escape the dollar-signs in the inner macro comes from <a href=\"https://github.com/rust-lang/rust/issues/35853#issuecomment-415993963\" rel=\"nofollow noreferrer\">@durka</a>:</p>\n<pre><code>macro_rules! with_dollar_sign {\n    ($($body:tt)*) =&gt; {\n        macro_rules! __with_dollar_sign { $($body)* }\n        __with_dollar_sign!($);\n    }\n}\n</code></pre>\n<p>I've not written many Rust macros before, so feedback and suggestions are very welcome.</p>\n"}, {"tags": [], "owner": {"reputation": 79, "user_id": 10335637, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pnstP.jpg?s=128&g=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/10335637/j-doe"}, "is_accepted": false, "score": 2, "last_activity_date": 1570250136, "creation_date": 1570250136, "answer_id": 58245368, "question_id": 34662713, "link": "https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust/58245368#58245368", "title": "How can I create parameterized tests in Rust?", "body": "<p>Use <a href=\"https://github.com/frondeus/test-case\" rel=\"nofollow noreferrer\">https://github.com/frondeus/test-case</a> crate.</p>\n\n<p>Example:</p>\n\n<pre><code>#[test_case(\"some\")]\n#[test_case(\"other\")]\nfn works_correctly(arg: &amp;str) {\n    assert!(arg.len() &gt; 0)\n}\n</code></pre>\n"}], "owner": {"reputation": 3175, "user_id": 596532, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/49e0289e5aeea379feaf3e7640d7f6ad?s=128&d=identicon&r=PG", "display_name": "Peanut", "link": "https://stackoverflow.com/users/596532/peanut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8312, "favorite_count": 5, "answer_count": 6, "score": 44, "last_activity_date": 1607705473, "creation_date": 1452191947, "last_edit_date": 1477443242, "question_id": 34662713, "link": "https://stackoverflow.com/questions/34662713/how-can-i-create-parameterized-tests-in-rust", "title": "How can I create parameterized tests in Rust?", "body": "<p>I want to write test cases that depend on parameters. My test case should be executed for each parameter and I want to see whether it succeeds or fails for each parameter.</p>\n\n<p>I'm used to writing things like that in Java:</p>\n\n<pre><code>@RunWith(Parameterized.class)\npublic class FibonacciTest {\n    @Parameters\n    public static Collection&lt;Object[]&gt; data() {\n        return Arrays.asList(new Object[][] {     \n                 { 0, 0 }, { 1, 1 }, { 2, 1 }, { 3, 2 }, { 4, 3 }, { 5, 5 }, { 6, 8 }  \n           });\n    }\n\n    private int fInput;\n\n    private int fExpected;\n\n    public FibonacciTest(int input, int expected) {\n        fInput= input;\n        fExpected= expected;\n    }\n\n    @Test\n    public void test() {\n        assertEquals(fExpected, Fibonacci.compute(fInput));\n    }\n}\n</code></pre>\n\n<p>How can I achieve something similar with Rust? Simple test cases are working fine, but there are cases where they are not enough.</p>\n\n<pre><code>#[test]\nfn it_works() {\n    assert!(true);\n}\n</code></pre>\n\n<p>Note: I want the parameters as flexible as possible, for example: Read them from a file, or use all files from a certain directory as input, etc. So a hardcoded macro might not be enough.</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"tags": [], "owner": {"reputation": 1462, "user_id": 611707, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2dd5a0a990ac6e72a0fa15f18b7cd7f7?s=128&d=identicon&r=PG", "display_name": "codemaker", "link": "https://stackoverflow.com/users/611707/codemaker"}, "is_accepted": true, "score": 6, "last_activity_date": 1452194742, "last_edit_date": 1452194742, "creation_date": 1452191533, "answer_id": 34662584, "question_id": 34662014, "link": "https://stackoverflow.com/questions/34662014/unraveling-a-match-statement-with-monads/34662584#34662584", "title": "Unraveling a match statement with monads", "body": "<p>Here you should use map instead of unwrap.</p>\n\n<pre><code>fn foo(a: i32) -&gt; Option&lt;i32&gt; {\n    bar().and_then(|s| s.field.map(|f| a * f))\n}\n</code></pre>\n\n<p>As for developing an intuition, that will take time. Keep reading and writing rust code (and code in other functional languages) and this intuition will come.</p>\n"}], "owner": {"reputation": 1091, "user_id": 3745005, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/yvS7i.png?s=128&g=1", "display_name": "andrey", "link": "https://stackoverflow.com/users/3745005/andrey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 34662584, "answer_count": 1, "score": 2, "last_activity_date": 1452196541, "creation_date": 1452189507, "last_edit_date": 1452196541, "question_id": 34662014, "link": "https://stackoverflow.com/questions/34662014/unraveling-a-match-statement-with-monads", "title": "Unraveling a match statement with monads", "body": "<p>I'm trying to simplify the following code:</p>\n\n<pre><code>fn foo(a: i32) -&gt; Option&lt;i32&gt; {\n    match bar() {\n        None =&gt; None,\n        Some(strct) =&gt; match strct.field {\n            None =&gt; None,\n            Some(field) =&gt; Some(a * field),\n        }\n    }\n}\n</code></pre>\n\n<p>This is where I've gotten so far. It works, but I can't figure out how to remove the <code>unwrap()</code> call to make it functionally identical to the original version.</p>\n\n<pre><code>fn foo(a: i32) -&gt; Option&lt;i32&gt; {\n    bar().and_then(|strct| Some(a * strct.field.unwrap()))\n}\n</code></pre>\n\n<p>P.S.: How would you recommend getting an intuition about doing this kind of stuff? I routinely run into these problems with Rust and it's always a struggle.</p>\n"}, {"tags": ["reference", "rust", "lifetime", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 4219782, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TlhdADAGXW8/AAAAAAAAAAI/AAAAAAAAAF8/UUoFKisVU8w/photo.jpg?sz=128", "display_name": "Rafael Dantas", "link": "https://stackoverflow.com/users/4219782/rafael-dantas"}, "edited": false, "score": 0, "creation_date": 1452185376, "post_id": 34660192, "comment_id": 57066758, "body": "Well, I&#39;ll probably end up writing a singleton FontManager or something like that, so removing the Font from the constructor isn&#39;t really a problem.  But I&#39;m still a bit curious about how can I make components, if they start requiring everything to be created outside the struct scope."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 33, "user_id": 4219782, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TlhdADAGXW8/AAAAAAAAAAI/AAAAAAAAAF8/UUoFKisVU8w/photo.jpg?sz=128", "display_name": "Rafael Dantas", "link": "https://stackoverflow.com/users/4219782/rafael-dantas"}, "edited": false, "score": 2, "creation_date": 1452186586, "post_id": 34660192, "comment_id": 57067588, "body": "If your component owns its subcomponents (instead of a reference to them) you can build them all in one place. In this case, Font is created reading from a file (relatively expensive operation), and there would typically be various pieces of Text created with that one font, so it makes sense to load all needed fonts in the beginning and just share references to them."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": true, "score": 2, "last_activity_date": 1452186816, "last_edit_date": 1452186816, "creation_date": 1452183857, "answer_id": 34660192, "question_id": 34658296, "link": "https://stackoverflow.com/questions/34658296/problems-with-lifetimes-when-one-instance-of-a-struct-needs-a-reference-to-anoth/34660192#34660192", "title": "Problems with lifetimes when one instance of a struct needs a reference to another", "body": "<p>I'm not familiar with rust-sfml, so I might be misreading your issue, but it should look like this.\nYou have a <code>Font</code> and <code>Text</code> (that you don't control, they're constructed for you by the library) where <code>Text</code> holds a reference to <code>Font</code>. Simplified:</p>\n\n<pre><code>struct Font;\nstruct Text&lt;'a&gt; { font: &amp;'a Font }\n</code></pre>\n\n<p>Then you have a <code>FpsMeter</code> (that you do control) that has a <code>Text</code> field. Again, simplified:</p>\n\n<pre><code>struct FpsMeter&lt;'a&gt; {\n    text: Text&lt;'a&gt;\n}\n</code></pre>\n\n<p>now, if that's the case, I don't think you can create <code>Text</code> (or at least <code>Font</code>) in the same method where you create your <code>FpsMeter</code>, as the reference to <code>Font</code> can't escape the stack frame of the constructor function. You will need to pass a pre-built <code>Text</code> to your constructor. For instance:</p>\n\n<pre><code>impl&lt;'a&gt; FpsMeter&lt;'a&gt; {\n    fn new(txt: Text&lt;'a&gt;) -&gt; FpsMeter&lt;'a&gt; {\n        FpsMeter { text: txt }\n    } \n}\n</code></pre>\n\n<p>or possibly:</p>\n\n<pre><code>impl&lt;'a&gt; FpsMeter&lt;'a&gt; {\n    fn new(fnt: &amp;'a Font) -&gt; FpsMeter&lt;'a&gt; {\n        FpsMeter { text: Text { font: fnt } }\n    } \n}\n</code></pre>\n\n<p><a href=\"http://is.gd/Lmi17s\" rel=\"nofollow\">toy example on the playground</a></p>\n"}], "owner": {"reputation": 33, "user_id": 4219782, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TlhdADAGXW8/AAAAAAAAAAI/AAAAAAAAAF8/UUoFKisVU8w/photo.jpg?sz=128", "display_name": "Rafael Dantas", "link": "https://stackoverflow.com/users/4219782/rafael-dantas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 34660192, "answer_count": 1, "score": 2, "last_activity_date": 1452198334, "creation_date": 1452178700, "last_edit_date": 1452198334, "question_id": 34658296, "link": "https://stackoverflow.com/questions/34658296/problems-with-lifetimes-when-one-instance-of-a-struct-needs-a-reference-to-anoth", "title": "Problems with lifetimes when one instance of a struct needs a reference to another", "body": "<p>I'm trying to write a simple game with SFML and Rust, but the borrow-checker is proving to be my greatest enemy on this journey.</p>\n\n<p>There are a bunch of cases where SFML needs a reference to another object. In the code below, I need a reference to a Font or else Text doesn't show anything to the user.</p>\n\n<p>Problem is, I've tried a bunch of things and the reference itself never lives long enough. It obviously works if I create the Text object on the draw method, but I would like to avoid creating things inside the main loop of the application.</p>\n\n<p>Is this a case where I should take a look onto the unsafe operations? Is there a combination of Rc, RefCell, Box, etc. that meets my needs?</p>\n\n<p>Please try to explain me what I should be doing and what is wrong in my current mindset, if possible.</p>\n\n<pre><code>extern crate sfml;\n\nuse sfml::system::{ Clock, Vector2f };\nuse sfml::graphics::{ Color, Font, RenderTarget, RenderWindow, Text, Transformable };\n\npub struct FpsMeter&lt;'a&gt; {\n    position: Vector2f,\n    clock:    Clock,\n    value:    f32,\n\n    text:     Text&lt;'a&gt;\n}\n\nimpl&lt;'a&gt; FpsMeter&lt;'a&gt; {\n    pub fn new() -&gt; Self {\n        let font = match Font::new_from_file(\"assets/sansation.ttf\") {\n            Some(fnt) =&gt; fnt,\n            None      =&gt; panic!(\"Cannot open resource: sansation.ttf\"),\n        };\n\n        let mut text = Text::new_init(\n            &amp;format!(\"FPS: {}\", 0),\n            &amp;font,\n            20  \n        ).expect(\"Could not create text\");\n\n        FpsMeter {\n            position: Vector2f::new(0., 0.),\n            clock:    Clock::new(),\n            value:    0.,\n\n            text: text,\n        }\n    }\n\n    pub fn set_position2f(&amp;mut self, x: f32, y: f32) {\n        self.position.x = x;\n        self.position.y = y;\n    }\n\n    pub fn restart(&amp;mut self) {\n        self.value = 1. / self.clock.restart().as_seconds();\n    }\n\n    pub fn draw(&amp;mut self, window: &amp;mut RenderWindow) {\n        self.text.set_position(&amp;self.position);\n        self.text.set_color(&amp;Color::white());\n\n        window.draw(&amp;self.text);\n    }\n}\n</code></pre>\n"}, {"tags": ["emacs", "rust", "melpa"], "comments": [{"owner": {"reputation": 618, "user_id": 3496176, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/TrPop.jpg?s=128&g=1", "display_name": "zhumengzhu", "link": "https://stackoverflow.com/users/3496176/zhumengzhu"}, "edited": false, "score": 0, "creation_date": 1452170268, "post_id": 34655302, "comment_id": 57055779, "body": "The complete config I&#39;m using is this:  <a href=\"https://github.com/redguardtoo/emacs.d\" rel=\"nofollow noreferrer\">github.com/redguardtoo/emacs.d</a>."}, {"owner": {"reputation": 8261, "user_id": 245173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/36c6145047e62b215306e1a3e6d6800f?s=128&d=identicon&r=PG", "display_name": "jpkotta", "link": "https://stackoverflow.com/users/245173/jpkotta"}, "edited": false, "score": 1, "creation_date": 1452184344, "post_id": 34655302, "comment_id": 57065967, "body": "I just installed from melpa, no problem.  I don&#39;t see anything wrong with your config.  Try <code>M-x list-packages</code> and see if it shows up there.  Also try <code>package-refresh-contents</code>, which <code>list-packages</code> does automatically."}, {"owner": {"reputation": 618, "user_id": 3496176, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/TrPop.jpg?s=128&g=1", "display_name": "zhumengzhu", "link": "https://stackoverflow.com/users/3496176/zhumengzhu"}, "reply_to_user": {"reputation": 8261, "user_id": 245173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/36c6145047e62b215306e1a3e6d6800f?s=128&d=identicon&r=PG", "display_name": "jpkotta", "link": "https://stackoverflow.com/users/245173/jpkotta"}, "edited": false, "score": 0, "creation_date": 1452222436, "post_id": 34655302, "comment_id": 57083453, "body": "I have tried it many times and it doesn&#39;t work. I try <code>M-: package-archives</code>, and I got these: <code>(&quot;melpa&quot; . &quot;http:&#47;&#47;melpa.org&#47;packages&#47;&quot;) (&quot;melpa-stable&quot; . &quot;https:&#47;&#47;stable.melpa.org&#47;packages&#47;&quot;)</code>. There is no rust-mode in the stable site; and the race version there is 1.0.1, which is the exactly where my emacs shows. But I didn&#39;t add <code>(&quot;melpa-stable&quot; . &quot;https:&#47;&#47;stable.melpa.org&#47;packages&#47;&quot;)</code> in my <code>init.el</code> file."}], "answers": [{"tags": [], "owner": {"reputation": 618, "user_id": 3496176, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/TrPop.jpg?s=128&g=1", "display_name": "zhumengzhu", "link": "https://stackoverflow.com/users/3496176/zhumengzhu"}, "is_accepted": true, "score": 0, "last_activity_date": 1452245651, "creation_date": 1452245651, "answer_id": 34673637, "question_id": 34655302, "link": "https://stackoverflow.com/questions/34655302/rust-mode-listed-in-melpa-but-not-found-in-package-install/34673637#34673637", "title": "Rust-mode listed in MELPA, but not found in package install", "body": "<p>This is my stupid mistake.</p>\n\n<p>The author of <a href=\"https://github.com/redguardtoo/emacs.d\" rel=\"nofollow\">the configuration which I use</a> says in <strong>Checklist</strong>: </p>\n\n<blockquote>\n  <p>It\u2019s my intentional design that you can NOT install packages from    melpa-unstable by default. Experienced users can modify variable melpa-include-packages in \u201c~/.emacs.d/lisp/init-elpa.el\u201d to install packages from melpa-unstable.</p>\n</blockquote>\n\n<p>I add <code>rust-mode</code> to <strong>\u201c~/.emacs.d/lisp/init-elpa.el\u201d</strong> and the problem sovled.</p>\n\n<p>@jpkotta Thanks for your help, sorry for wasting your time.</p>\n"}, {"tags": [], "owner": {"reputation": 196, "user_id": 2796418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e2796af3481534ff9578c7c77cb8c78f?s=128&d=identicon&r=PG&f=1", "display_name": "Jim Reesman", "link": "https://stackoverflow.com/users/2796418/jim-reesman"}, "is_accepted": false, "score": 0, "last_activity_date": 1595970744, "creation_date": 1595970744, "answer_id": 63142838, "question_id": 34655302, "link": "https://stackoverflow.com/questions/34655302/rust-mode-listed-in-melpa-but-not-found-in-package-install/63142838#63142838", "title": "Rust-mode listed in MELPA, but not found in package install", "body": "<p>I just had this same experience. M-x package-install, type 'rust-mode' and emacs announces 'No match'. M-x package-list-packages <em>does</em> show rust-mode. Using the package list UI, C-s 'rust-mode', press 'i' (install) =&gt; a capital 'I' appears in the first column. 'x' terminates the package list mode, and downloads and installs rust-mode. Now, M-x package-list-packages shows rust-mode installed. I do not know why the one path works when the other &quot;normal&quot; path failed.</p>\n"}], "owner": {"reputation": 618, "user_id": 3496176, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/TrPop.jpg?s=128&g=1", "display_name": "zhumengzhu", "link": "https://stackoverflow.com/users/3496176/zhumengzhu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1339, "favorite_count": 0, "accepted_answer_id": 34673637, "answer_count": 2, "score": 2, "last_activity_date": 1595970744, "creation_date": 1452170202, "last_edit_date": 1495542812, "question_id": 34655302, "link": "https://stackoverflow.com/questions/34655302/rust-mode-listed-in-melpa-but-not-found-in-package-install", "title": "Rust-mode listed in MELPA, but not found in package install", "body": "<h2><a href=\"https://stackoverflow.com/questions/24833964/package-listed-in-melpa-but-not-found-in-package-install\">Very Similar Question</a></h2>\n\n<p>And I am currently trying to install rust-mode for emacs 24.5.1 following the instructions at <a href=\"https://github.com/rust-lang/rust-mode\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust-mode</a>. Firstly I installed manually, it worked fun. But when I wanted to install it by MELPA, I got a problem. I'v added</p>\n\n<pre><code>(when (&gt;= emacs-major-version 24)\n  (require 'package)\n  (package-initialize)\n  (add-to-list 'package-archives '(\"melpa\" . \"http://melpa.org/packages/\") t)\n  )\n\n(when (&lt; emacs-major-version 24)\n  ;; For important compatibility libraries like cl-lib\n  (add-to-list 'package-archives '(\"gnu\" . \"http://elpa.gnu.org/packages/\")))\n(package-initialize)\n</code></pre>\n\n<p>to my ~.emacs.d/init.el.  However, when I restart and do M-x package install [RETURN]rust-mode[RETURN], it returns [No Match] and I can't find it when I list the packages. However, I can find it at <a href=\"http://melpa.org/packages/rust-mode-20160106.642.el\" rel=\"nofollow noreferrer\">http://melpa.org/packages/rust-mode-20160106.642.el</a>.</p>\n\n<hr>\n\n<p>I changed my configuration to <strong>prelude</strong>'s, then the problem is solved, so there must be something wrong with my old configuration, I'll try to find why.</p>\n\n<hr>\n\n<p>I'm not a good English speaker, sorry for my poor English. Any help is much appreciated; Thank you!</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1452216084, "post_id": 34653590, "comment_id": 57081854, "body": "\u2026 and so if you pass a <code>fn(&amp;i16)</code> to a function taking <code>T: Copy</code> which proceeds to try to clone it, you get an \u201c<code>error: internal compiler error: Encountered error `Unimplemented` selecting `Binder(&lt;fn(&amp;i16) as core::clone::Clone&gt;)` during trans</code>\u201d Fun!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1588098106, "last_edit_date": 1588098106, "creation_date": 1452164830, "answer_id": 34653590, "question_id": 34653193, "link": "https://stackoverflow.com/questions/34653193/why-is-the-clone-trait-not-implemented-for-fnt/34653590#34653590", "title": "Why is the `Clone` trait not implemented for `fn(&amp;T)`?", "body": "<p>The \"why\" is pretty simple: <a href=\"https://github.com/rust-lang/rust/issues/28229\" rel=\"nofollow noreferrer\">issue 28229</a> wasn't fixed until <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1210-2017-10-12\" rel=\"nofollow noreferrer\">Rust 1.21.0</a>. Since that version, your code compiles.</p>\n\n<p>Before that, due to a quirk of history, <code>fn</code> pointers <em>do</em> implement <code>Copy</code>, even though they don't implement <code>Clone</code> (and despite this being <em>blatantly impossible</em>).  As a result, you <em>can</em> do this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Clone for FStruct {\n    fn clone(&amp;self) -&gt; Self {\n        FStruct(self.0)\n    }\n}\n</code></pre>\n\n<p>Which is safe and easier to understand.</p>\n"}], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 425, "favorite_count": 0, "accepted_answer_id": 34653590, "answer_count": 1, "score": 3, "last_activity_date": 1588098106, "creation_date": 1452163658, "last_edit_date": 1452186628, "question_id": 34653193, "link": "https://stackoverflow.com/questions/34653193/why-is-the-clone-trait-not-implemented-for-fnt", "title": "Why is the `Clone` trait not implemented for `fn(&amp;T)`?", "body": "<p>The following code does not work because the <code>Clone</code> trait is not implemented for the type <code>fn(&amp;u16)</code>:</p>\n\n<pre><code>#[derive(Clone)]\nstruct FStruct(fn(&amp;u16));\n\nfn fn1(x:&amp;u16){\n    println!(\"fn1 called! {:?}\", x);\n}\n\nfn fn2(x:&amp;u16){\n    println!(\"fn2 called! {:?}\", x);\n}\n\nfn main() {\n\n    let d1 = 32u16;\n    let d2 = 42u16;\n\n    let x1 = FStruct(fn1);\n    let mut x2 = FStruct(fn2);\n\n    x1.0(&amp;d1); x2.0(&amp;d2);\n\n    x2 = x1.clone();//error: the trait `core::clone::Clone` is not implemented for the type `fn(&amp;u16)`\n\n    x1.0(&amp;d1); x2.0(&amp;d2);\n}\n</code></pre>\n\n<p>I can implement it by myself of course:</p>\n\n<pre><code>impl Clone for FStruct{\n    fn clone(&amp;self) -&gt; Self{\n        unsafe{\n            let mut t: FStruct = std::mem::uninitialized();\n            std::ptr::copy_nonoverlapping(self, &amp;mut t, 1);\n            t      \n        }\n    }\n}\n</code></pre>\n\n<p>But it is a bit annoying. Rust allows implementing <code>Clone</code> only for user types, so I need a struct or enum around <code>fn(&amp;T)</code>.</p>\n\n<p>Is this implementation really safe to use? Why is <code>Clone</code> not implemented for <code>fn(&amp;T)</code> by default?</p>\n"}, {"tags": ["for-loop", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1009, "user_id": 540128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/62054833895a3df695f9854d8dee6a9f?s=128&d=identicon&r=PG", "display_name": "vim", "link": "https://stackoverflow.com/users/540128/vim"}, "edited": false, "score": 0, "creation_date": 1452164837, "post_id": 34652939, "comment_id": 57052186, "body": "It would be ideal if I can solve this using arrays. But seems there is no way to create an array of Strings in Rust. Isn&#39;t it? First method works fine with the Vectors. Thanks for the answer.. (including your last remarks on IRC)  &quot;value is a &amp;str, a substring from outputs. so .to_string() allocates space for a String and copies the substring into that. so value was a &amp;str (a reference) but is turned into a String. since it&#39;s not a reference it&#39;s not restricted by the borrow checker or the life of <code>outputs</code>.&quot;"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 1009, "user_id": 540128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/62054833895a3df695f9854d8dee6a9f?s=128&d=identicon&r=PG", "display_name": "vim", "link": "https://stackoverflow.com/users/540128/vim"}, "edited": false, "score": 0, "creation_date": 1452165109, "post_id": 34652939, "comment_id": 57052377, "body": "There&#39;s no <i>nice</i> way to create an array of strings. <code>[[String::new(), String::new(), String::new(), String::new(), String::new(), String::new()], [String::new(), String::new(), String::new(), String::new(), String::new(), String::new()], ...]</code> certainly isn&#39;t nice."}], "tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 6, "last_activity_date": 1452181061, "last_edit_date": 1452181061, "creation_date": 1452162879, "answer_id": 34652939, "question_id": 34652021, "link": "https://stackoverflow.com/questions/34652021/how-to-iterate-and-extract-values-out-of-a-for-loop-in-rust/34652939#34652939", "title": "How to iterate and extract values out of a for loop in Rust", "body": "<p><code>split()</code> gives you substrings (string slices) borrowed from the original string, and the original string is <code>outputs</code> from line 6.</p>\n\n<ol>\n<li>The string slices can't outlive the scope of <code>outputs</code>: when a loop iteration ends, <code>outputs</code> is deallocated.\nSince <code>values</code> is longer lived, the slices can't be stored there.</li>\n<li>We can't borrow slices of <code>outputs</code> across a modification of <code>outputs</code>. So even if the <code>String</code> <code>outputs</code> itself was defined before <code>values</code>, we couldn't easily put the string slices from <code>.split()</code> into <code>values</code>; modifying the string (reading into it) invalidates the slices.</li>\n</ol>\n\n<p>A solution needs to either</p>\n\n<ul>\n<li>Use a nested array of <code>String</code>, and when you assign an element from the split iterator, make a <code>String</code> from the <code>&amp;str</code> using <code>.to_string()</code>. I would recommend this solution. (However an array of <code>String</code> is not at as easy to work with, maybe already this requires using <code>Vec</code> instead.) <sup>1</sup></li>\n<li>Read all input before constructing a nested array of <code>&amp;str</code> that borrows from the input <code>String</code>. This is good if the nested array is something that you only need temporarily.</li>\n</ul>\n\n<p><sup>1</sup>: You can use something like <code>vec![vec![String::new(); 6]; 6]</code> instead</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1452437381, "creation_date": 1452437381, "answer_id": 34706754, "question_id": 34652021, "link": "https://stackoverflow.com/questions/34652021/how-to-iterate-and-extract-values-out-of-a-for-loop-in-rust/34706754#34706754", "title": "How to iterate and extract values out of a for loop in Rust", "body": "<p>This answer was moved from the question, where it solved the OPs needs.</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut values = vec![vec![String::new(); 6]; 6];\n    for i in 0..6 {\n        let mut outputs = String::new();\n        io::stdin().read_line(&amp;mut outputs)\n                .expect(\"failed to read line\");\n\n        let values_itr = outputs.trim().split(' ');\n        let mut j = 0;\n        for (_, value) in values_itr.enumerate() {\n            values[i][j] = value.to_string();\n            j += 1;\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1009, "user_id": 540128, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/62054833895a3df695f9854d8dee6a9f?s=128&d=identicon&r=PG", "display_name": "vim", "link": "https://stackoverflow.com/users/540128/vim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 732, "favorite_count": 0, "accepted_answer_id": 34652939, "answer_count": 2, "score": 5, "last_activity_date": 1502479743, "creation_date": 1452160294, "last_edit_date": 1502479743, "question_id": 34652021, "link": "https://stackoverflow.com/questions/34652021/how-to-iterate-and-extract-values-out-of-a-for-loop-in-rust", "title": "How to iterate and extract values out of a for loop in Rust", "body": "<p>I'm new to Rust and looking to understand concepts like borrowing. I'm trying to create a simple two dimensional array using standard input. The code:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    let mut values = [[\"0\"; 6]; 6]; // 6 * 6 array\n\n    // iterate 6 times for user input\n    for i in 0..6 {\n        let mut outputs = String::new();\n        io::stdin().read_line(&amp;mut outputs).expect(\n            \"failed to read line\",\n        );\n\n        // read space separated list 6 numbers. Eg: 5 7 8 4 3 9\n        let values_itr = outputs.trim().split(' ');\n        let mut j = 0;\n        for (_, value) in values_itr.enumerate() {\n            values[i][j] = value;\n            j += 1;\n        }\n    }\n}\n</code></pre>\n\n<p>This won't compile because the <code>outputs</code> variable lifetime is not long enough:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `outputs` does not live long enough\n  --&gt; src/main.rs:20:5\n   |\n14 |         let values_itr = outputs.trim().split(' ');\n   |                          ------- borrow occurs here\n...\n20 |     }\n   |     ^ `outputs` dropped here while still borrowed\n21 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p>How can I get the iterated values out of the block into values array?</p>\n"}, {"tags": ["javascript", "node.js", "rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 6, "creation_date": 1452156476, "post_id": 34650676, "comment_id": 57046548, "body": "Standard question: are you compiling with <code>cargo build --release</code> or <code>rustc -O</code> to turn on optimisations?"}, {"owner": {"reputation": 812, "user_id": 951270, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/9cda15f256b15307e331307bf89ec2c3?s=128&d=identicon&r=PG", "display_name": "shane", "link": "https://stackoverflow.com/users/951270/shane"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1452156975, "post_id": 34650676, "comment_id": 57046845, "body": "@DK - ahh! you spotted the n00b mistake :) yeah, now the rust program is approx 7x faster than the node program - Thank you :)"}], "answers": [{"tags": [], "owner": {"reputation": 812, "user_id": 951270, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/9cda15f256b15307e331307bf89ec2c3?s=128&d=identicon&r=PG", "display_name": "shane", "link": "https://stackoverflow.com/users/951270/shane"}, "is_accepted": true, "score": 5, "last_activity_date": 1452157264, "creation_date": 1452157264, "answer_id": 34650964, "question_id": 34650676, "link": "https://stackoverflow.com/questions/34650676/how-is-node-so-much-faster-in-this-benchmark/34650964#34650964", "title": "How is Node so much faster in this benchmark?", "body": "<p>Simple answer, when benchmarking, don't use <code>target/debug/program</code> but run <code>cargo build --release</code> first. This will give you <code>target/release/program</code> for your benchmarks :)</p>\n"}], "owner": {"reputation": 812, "user_id": 951270, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/9cda15f256b15307e331307bf89ec2c3?s=128&d=identicon&r=PG", "display_name": "shane", "link": "https://stackoverflow.com/users/951270/shane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 2, "accepted_answer_id": 34650964, "answer_count": 1, "score": 4, "last_activity_date": 1452157264, "creation_date": 1452156267, "question_id": 34650676, "link": "https://stackoverflow.com/questions/34650676/how-is-node-so-much-faster-in-this-benchmark", "title": "How is Node so much faster in this benchmark?", "body": "<p>In an attempt to learn some systems programming, I was going to attempt to write a tokeniser in rust. Immediately though I found it to be extremely slow at iterating over a string's chars. I put together a simple benchmark to show what I mean.</p>\n\n<p><code>src/bench.html</code> is a html doc with approx 3000 chars</p>\n\n<p>node: \n<div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var input = require('fs').readFileSync('src/bench.html', 'utf8');\r\nvar len   = input.length;\r\n\r\nfor(var i = 0; i &lt; 100; i+=1) run();\r\n\r\nfunction run () {\r\n    var index = 0;\r\n    while (index &lt; len) {\r\n        var c = input.charAt(index);\r\n        // noop\r\n        index++;\r\n    }\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>rust: </p>\n\n<pre><code>use std::error::Error;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::path::Path;\n\nfn main() {\n    // Create a path to the desired file\n    let path = Path::new(\"src/bench.html\");\n    let display = path.display();\n\n    // Open the path in read-only mode, returns `io::Result&lt;File&gt;`\n    let mut file = match File::open(&amp;path) {\n        // The `description` method of `io::Error` returns a string that\n        // describes the error\n        Err(why) =&gt; panic!(\"couldn't open {}: {}\", display,\n                                                   Error::description(&amp;why)),\n        Ok(file) =&gt; file,\n    };\n\n    // Read the file contents into a string, returns `io::Result&lt;usize&gt;`\n    let mut s     = String::new();\n\n    match file.read_to_string(&amp;mut s) {\n        Err(why) =&gt; panic!(\"couldn't read {}: {}\", display,\n                                                   Error::description(&amp;why)),\n        Ok(_) =&gt; {\n            for x in 1..100 {\n                for token in s.chars() {\n                    match token {\n                        _ =&gt; {\n                            // noop\n                        }\n                    }\n                }\n            }\n            println!(\"done!\");\n        }\n    }\n}\n</code></pre>\n\n<p>Can someone explain what I'm doing incorrectly in the rust example to make it 10x slower than the same thing in node?</p>\n\n<p>All code can be found here <a href=\"https://github.com/shakyShane/rust-vs-node\" rel=\"nofollow\">https://github.com/shakyShane/rust-vs-node</a></p>\n"}]