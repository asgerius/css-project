[{"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 2, "creation_date": 1437628668, "post_id": 31575733, "comment_id": 51111299, "body": "@tez: Because you go up <i>three</i> directories, when there are only <i>two</i> in the repository.  You&#39;re effectively requiring that your repository <i>always</i> be checked out with the name <code>rust-mosquitto</code> and <i>nothing else</i>."}, {"owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 0, "creation_date": 1437629462, "post_id": 31575733, "comment_id": 51111591, "body": "Ok. The folder structure is different while downloading from git where Cargo.toml resides inside branch name. &#39;master&#39; in this case."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1437607755, "creation_date": 1437607755, "answer_id": 31575733, "question_id": 31571091, "link": "https://stackoverflow.com/questions/31571091/could-not-find-cargo-toml-when-building-a-dependent-crate-from-github/31575733#31575733", "title": "Could not find `Cargo.toml` when building a dependent crate from GitHub", "body": "<p>The problem comes from your <a href=\"https://github.com/kteza1/rust-mosquitto/blob/master/examples/ticktock/Cargo.toml\"><code>Cargo.toml</code> in examples/ticktock</a>:</p>\n\n<pre><code>[dependencies.mosquitto]\nversion = \"*\"\npath = \"../../../rust-mosquitto\" \n</code></pre>\n\n<p>When downloading your project from git, all the subdirectories are scanned for more <code>Cargo.toml</code> files. If you run <code>RUST_LOG=trace cargo build -v</code>, you see what's happening:</p>\n\n<pre><code>TRACE:cargo::ops::cargo_read_manifest: looking for root package: /Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master, source_id=https://github.com/kteza1/rust-mosquitto#7e08a291\nTRACE:cargo::ops::cargo_read_manifest: looking for child package: /Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master\nTRACE:cargo::ops::cargo_read_manifest: read_package; path=/Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master/Cargo.toml; source-id=https://github.com/kteza1/rust-mosquitto#7e08a291\nTRACE:cargo::ops::cargo_read_manifest: looking for child package: /Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master/.git\nTRACE:cargo::ops::cargo_read_manifest: not processing /Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master/.git\nTRACE:cargo::ops::cargo_read_manifest: looking for child package: /Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master/examples\nTRACE:cargo::ops::cargo_read_manifest: looking for child package: /Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master/examples/c-mosquitto\nTRACE:cargo::ops::cargo_read_manifest: looking for child package: /Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master/examples/ticktock\nTRACE:cargo::ops::cargo_read_manifest: read_package; path=/Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/master/examples/ticktock/Cargo.toml; source-id=https://github.com/kteza1/rust-mosquitto#7e08a291\nDEBUG:cargo: handle_error; err=CliError { error: ChainedError { error: Unable to update https://github.com/kteza1/rust-mosquitto, cause: Could not find `Cargo.toml` in `/Users/shep/.cargo/git/checkouts/rust-mosquitto-77eb7033f32b19c9/rust-mosquitto` }, unknown: false, exit_code: 101 }\n</code></pre>\n\n<p>Cargo then tries to ensure that the nested <code>Cargo.toml</code> can have all of the dependencies satisfied.</p>\n"}, {"comments": [{"owner": {"reputation": 3393, "user_id": 214143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61025b3df4700620a5d9099293f23a5d?s=128&d=identicon&r=PG", "display_name": "Jason Aller", "link": "https://stackoverflow.com/users/214143/jason-aller"}, "edited": false, "score": 0, "creation_date": 1592083092, "post_id": 62361064, "comment_id": 110299196, "body": "If this contains a separate question and answer you can post it as a separate question and then self answer it. If very relevant when you have enough reputation to post comments you could even leave a comment on this question referencing the related question."}], "tags": [], "owner": {"reputation": 51, "user_id": 13142881, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-c5oaqHGv8y8/AAAAAAAAAAI/AAAAAAAAAAA/AAKWJJMkZjzqDs9RztWWx2T8v9xOhC8Okw/photo.jpg?sz=128", "display_name": "Yvon Manzi", "link": "https://stackoverflow.com/users/13142881/yvon-manzi"}, "is_accepted": false, "score": 4, "last_activity_date": 1605350099, "last_edit_date": 1605350099, "creation_date": 1592058125, "answer_id": 62361064, "question_id": 31571091, "link": "https://stackoverflow.com/questions/31571091/could-not-find-cargo-toml-when-building-a-dependent-crate-from-github/62361064#62361064", "title": "Could not find `Cargo.toml` when building a dependent crate from GitHub", "body": "<p>This does not specifically answer the question that @tez asked, but I encountered the same error with a slightly different root culprit. I was writing some simple code in vim, so I created a simple main.rs file. When I <code>cargo run</code> it, it was spitting out the same error:</p>\n<blockquote>\n<p>error: could not find <code>Cargo.toml</code> in <code>/Users/yvonmanzi/Documents/Rust</code> or any parent directory</p>\n</blockquote>\n<p>The surprising thing, without the hindsight, of course, was that <code>rustc main.rs</code> was creating a binary executable as expected while <code>cargo run</code> wasn't. It turns out I had created all my rust packages(aka projects) up to that point using <code>cargo new project-name --bin</code> as shown <a href=\"https://doc.rust-lang.org/cargo/guide/creating-a-new-project.html\" rel=\"nofollow noreferrer\">here</a>, thus by default including <code>Cargo.lock</code>, <code>Cargo.toml</code>, and <code>src</code> folder. Hopefully, it is clear by now that mine was just a simple rookie mistake; I simply, quite literally, didn't have <code>Cargo.toml</code> in my project folder. So, dear fellow rooky league Rustacean, if you get the same error, create your project with <code>cargo new project-name --bin</code> command.</p>\n"}], "owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7425, "favorite_count": 0, "accepted_answer_id": 31575733, "answer_count": 2, "score": 5, "last_activity_date": 1605350099, "creation_date": 1437589402, "last_edit_date": 1437591737, "question_id": 31571091, "link": "https://stackoverflow.com/questions/31571091/could-not-find-cargo-toml-when-building-a-dependent-crate-from-github", "title": "Could not find `Cargo.toml` when building a dependent crate from GitHub", "body": "<p>I'm trying to use the <a href=\"https://github.com/kteza1/rust-mosquitto\" rel=\"nofollow\">rust-mosquitto library</a>. My current <code>Cargo.toml</code> is:</p>\n\n<pre><code>[package]\nname = \"HomeDaemon\"\nversion = \"0.1.0\"\nauthors = [\"RTR &lt;k.teza1@gmail.com&gt;\"]\n\n[dependencies.mosquitto]\ngit = \"https://github.com/kteza1/rust-mosquitto\"\n</code></pre>\n\n<p>When I run <code>cargo build</code>, following error is reported: </p>\n\n<pre><code>Could not find `Cargo.toml` in `/Users/ravitejareddy/.cargo/git/checkouts/rust-mosquitto-8203e77dcf072bf7/rust-mosquitto`\n</code></pre>\n\n<p>The actual download in <code>~/.cargo/git/checkouts/rust-mosquitto-8203e77dcf072bf7/master</code> shows that <code>Cargo.toml</code> is present.</p>\n\n<p>There is an extra <code>rust-mosquitto</code> in the path above, is that a problem?</p>\n"}, {"tags": ["pointers", "heap", "rust", "ownership"], "comments": [{"owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 0, "creation_date": 1437580864, "post_id": 31568177, "comment_id": 51091794, "body": "I&#39;m not sure I understand your question, but when you put a value into a vector, the value is then owned by the vector. I think it would be helpful if you provided a code example of what you are asking."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 2, "creation_date": 1437580981, "post_id": 31568177, "comment_id": 51091883, "body": "I don&#39;t have the time to write a full answer now, I just want to mention that <code>Box</code> is not special or hardcoded. (Well, currently some aspects are, but none of those have anything to do with this question, and they&#39;re only hardcoded because the language features to express these things in pure library code aren&#39;t finished yet.) Ownership for Box works exactly as ownership for Vec."}, {"owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "reply_to_user": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 0, "creation_date": 1437581020, "post_id": 31568177, "comment_id": 51091906, "body": "@Adrian <i>&quot;but when you put a value into a vector, the value is then owned by the vector.&quot;</i> AFAIK values aren&#39;t owned, <i>resources</i> are. I&#39;m not asking about the data in the vector, I&#39;m asking about the fact that the vector variable <i>owns memory</i>, just like a box does -- but it is not a box. I&#39;m basically just asking about Rust internals, i.e. to which constructs does ownership apply, and how is that determined."}, {"owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437581070, "post_id": 31568177, "comment_id": 51091943, "body": "@delnan I thought ownership had to be &#39;baked in&#39; the language? If you don&#39;t have time to explain that, do you maybe have a link that does?"}, {"owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 0, "creation_date": 1437581432, "post_id": 31568177, "comment_id": 51092175, "body": "When you create a new vector (<code>Vec::new</code>) or push to one, memory is allocated by the vector, for example on <a href=\"https://doc.rust-lang.org/src/collections/vec.rs.html#222\" rel=\"nofollow noreferrer\">this line</a>. <code>Vec</code> implements <code>Drop</code>, which enables the memory to be freed when the vector is destroyed, which happens on <a href=\"https://doc.rust-lang.org/src/collections/vec.rs.html#1637\" rel=\"nofollow noreferrer\">this line</a>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1437581435, "post_id": 31568177, "comment_id": 51092179, "body": "@jco In a sense, the concept of ownership is baked in the language, but as a general mechanism which knows nothing about specific types and is leveraged in various ways by various library types. Sadly I don&#39;t have a good and short explanation at hand either."}, {"owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437581839, "post_id": 31568177, "comment_id": 51092441, "body": "@delnan Aha, OK, it&#39;s a bit clearer now. However it still has to depend on the type, i.e. why are boxed ints owned and regular ints just copied around? Clearly it only applies to types which are <i>somehow</i> connected to resources -- either directly pointing to them (as box), or indirectly contain a pointer (as vector I presume, because it also has a POD part for length and capacity)."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 4, "creation_date": 1437582172, "post_id": 31568698, "comment_id": 51092667, "body": "Note that the set of primitive types also includes raw pointers <code>* mut T</code> and <code>* const T</code>, which are used in the implementation of <code>Box</code> and <code>Vec</code> and other container types. If not for the <code>Drop</code> impl, <code>Box</code> and <code>Vec</code> could totally be <code>Copy</code> - it would just be <code>unsafe</code> and semantically wrong."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 3, "creation_date": 1437584792, "post_id": 31568698, "comment_id": 51094209, "body": "Since it often trips people up, note that moves and copies are identical at runtime - only the type-checker knows the difference. Both end up as a shallow <code>memcpy</code>."}, {"owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437683382, "post_id": 31568698, "comment_id": 51146616, "body": "@VladimirMatveev I&#39;ve got a <a href=\"http://stackoverflow.com/q/31597416/924313\">new question</a> about borrowing and <code>drop</code>, if you&#39;d be interested :)"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 13, "last_activity_date": 1437584028, "last_edit_date": 1437584028, "creation_date": 1437581990, "answer_id": 31568698, "question_id": 31568177, "link": "https://stackoverflow.com/questions/31568177/how-does-rust-know-which-types-own-resources/31568698#31568698", "title": "How does Rust know which types own resources?", "body": "<p>tl;dr: \"owning\" types in Rust are not some magic and they are most certainly not hardcoded into the compiler or language. They are just types which written in a certain way (do not implement <code>Copy</code> and likely have a destructor) and have certain semantics which is enforced through non-copyability and the destructor.</p>\n\n<p>In its core Rust's ownership mechanism is very simple and has very simple rules.</p>\n\n<p>First of all, let's define what <em>move</em> is. It is simple - a value is said to be <em>moved</em> when it becomes available under a new name and stops being available under the old name:</p>\n\n<pre><code>struct X(u32);\nlet x1 = X(12);\nlet x2 = x1;\n// x1 is no longer accessible here, trying to use it will cause a compiler error\n</code></pre>\n\n<p>Same thing happens when you pass a value into a function:</p>\n\n<pre><code>fn do_something(x: X) {}\n\nlet x1 = X(12);\ndo_something(x1);\n// x1 is no longer accessible here\n</code></pre>\n\n<p>Note that there is <em>absolutely no magic</em> here - it is just that by default <em>every</em> value of <em>every</em> type behaves like in the above examples. Values of each struct or enum you or someone else creates by default will be moved.</p>\n\n<p>Another important thing is that you can give every type a <em>destructor</em>, that is, a piece of code which is invoked when the value of this type goes out of scope and destroyed. For example, destructors associated with <code>Vec</code> or <code>Box</code> will free the corresponding piece of memory. Destructors can be declared by implementing <code>Drop</code> trait:</p>\n\n<pre><code>struct X(u32);\n\nimpl Drop for X {\n    fn drop(&amp;mut self) {\n        println!(\"Dropping {}\", x.0);\n    }\n}\n\n{\n    let x1 = X(12);\n}  // x1 is dropped here, and \"Dropping 12\" will be printed\n</code></pre>\n\n<p>There is a way to opt-out of non-copyability by implementing <code>Copy</code> trait which marks the type as automatically copyable - its values will no longer be moved but copied:</p>\n\n<pre><code>#[derive(Copy, Clone)] struct X(u32);\nlet x1 = X(12);\nlet x2 = x1;\n// x1 is still available here\n</code></pre>\n\n<p>The copy is done bytewise - <code>x2</code> will contain a byte-identical copy of <code>x1</code>.</p>\n\n<p>Not every type can be made <code>Copy</code> - only those which have <code>Copy</code> interior and <em>do not implement</em> <code>Drop</code>. All primitive types (except <code>&amp;mut</code> references but including <code>*const</code> and <code>*mut</code> raw pointers) are <code>Copy</code> in Rust, so each struct which contains only primitives can be made <code>Copy</code>. On the other hand, structs like <code>Vec</code> or <code>Box</code> are not <code>Copy</code> - they deliberately do not implement it because bytewise copy of them will lead to double frees because their destructors can be run twice over the same pointer.</p>\n\n<p>The <code>Copy</code> bit above is a slight digression on my side, just to give a clearer picture. Ownership in Rust is based on move semantics. When we say that some value own something, like in \"<code>Box&lt;T&gt;</code> owns the given <code>T</code>\", we mean <em>semantic</em> connection between them, not something magical or something which is built into the language. It is just most such values like <code>Vec</code> or <code>Box</code> do not implement <code>Copy</code> and thus moved instead of copied, and they also (optionally) have a destructor which cleans up anything these types may have allocated for them (memory, sockets, files, etc.).</p>\n\n<p>Given the above, <em>of course</em> you can write your own \"owning\" types. This is one of the cornerstones of idiomatic Rust, and a lot of code in the standard library and external libraries is written in such way. For example, some C APIs provide functions for creating and destroying objects. Writing an \"owning\" wrapper around them is very easy in Rust and it is probably very close to what you're asking for:</p>\n\n<pre><code>extern {\n    fn create_widget() -&gt; *mut WidgetStruct;\n    fn destroy_widget(w: *mut WidgetStruct);\n    fn use_widget(w: *mut WidgetStruct) -&gt; u32;\n}\n\nstruct Widget(*mut WidgetStruct);\n\nimpl Drop for Widget {\n    fn drop(&amp;mut self) {\n        unsafe { destroy_widget(self.0); }\n    }\n}\n\nimpl Widget {\n    fn new() -&gt; Widget { Widget(unsafe { create_widget() }) }\n\n    fn use_it(&amp;mut self) -&gt; u32 {\n        unsafe { use_widget(self.0) }\n    }\n}\n</code></pre>\n\n<p>Now you can say that <code>Widget</code> <em>owns</em> some foreign resource represented by <code>*mut WidgetStruct</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1437582386, "post_id": 31568784, "comment_id": 51092795, "body": "it is probably more idiomatic to <code>use</code> functions directly from <code>libc</code> crate: <code>use libc::{malloc, free, c_void}</code>."}, {"owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1437582457, "post_id": 31568784, "comment_id": 51092840, "body": "@VladimirMatveev Thanks, I&#39;ve edited my answer. I didn&#39;t know that was possible to do."}], "tags": [], "owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "is_accepted": false, "score": 2, "last_activity_date": 1437582426, "last_edit_date": 1437582426, "creation_date": 1437582259, "answer_id": 31568784, "question_id": 31568177, "link": "https://stackoverflow.com/questions/31568177/how-does-rust-know-which-types-own-resources/31568784#31568784", "title": "How does Rust know which types own resources?", "body": "<p>Here is another example of how a value might own memory and free it when the value is destroyed:</p>\n\n<pre><code>extern crate libc;\n\nuse libc::{malloc, free, c_void};\n\n\nstruct OwnerOfMemory {\n    ptr: *mut c_void\n}\n\nimpl OwnerOfMemory {\n    fn new() -&gt; OwnerOfMemory {\n        OwnerOfMemory {\n            ptr: unsafe { malloc(128) }\n        }\n    }\n}\n\nimpl Drop for OwnerOfMemory {\n    fn drop(&amp;mut self) {\n        unsafe { free(self.ptr); }\n    }\n}\n\nfn main() {\n    let value = OwnerOfMemory::new();\n}\n</code></pre>\n"}], "owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 0, "accepted_answer_id": 31568698, "answer_count": 2, "score": 4, "last_activity_date": 1437584028, "creation_date": 1437580542, "question_id": 31568177, "link": "https://stackoverflow.com/questions/31568177/how-does-rust-know-which-types-own-resources", "title": "How does Rust know which types own resources?", "body": "<p>When one has a box pointer to some heap-allocated memory, I assume that Rust has 'hardcoded' knowledge of ownership, so that when ownership is transferred by calling some function, the resources are <em>moved</em> and the argument in the function is the new owner.</p>\n\n<p>However, how does this happen for vectors for example? They too 'own' their resources, and ownership mechanics apply like for box pointers -- yet they are regular values stored in variables <em>themselves</em>, and not pointers. How does Rust (know to) apply ownership mechanics in this situation?</p>\n\n<p><strong>Can I make my own type which owns resources?</strong></p>\n"}, {"tags": ["pointers", "reference", "rust", "immutability"], "answers": [{"comments": [{"owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437580665, "post_id": 31568079, "comment_id": 51091659, "body": "Thank you for the answer, I&#39;m still going through it, but I&#39;ve just asked another similar question which you could probably answer: <a href=\"http://stackoverflow.com/questions/31568177/how-does-rust-know-which-types-own-resources\" title=\"how does rust know which types own resources\">stackoverflow.com/questions/31568177/&hellip;</a>."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 1, "creation_date": 1437637980, "post_id": 31568079, "comment_id": 51115744, "body": "@jco, regarding your edit. <code>&amp;mut</code> references do not <i>own</i> the data. There is a reason why references, both <code>&amp;</code> and <code>&amp;mut</code>, are often called <i>borrowed</i>. <code>&amp;mut</code> borrows the data uniquely but it does not own it."}, {"owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437638193, "post_id": 31568079, "comment_id": 51115867, "body": "OK thank you. Is borrowing just syntactic sugar for returning ownership to the previous/calling owner?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437651304, "post_id": 31568079, "comment_id": 51124338, "body": "No. Borrowing is exactly what it means as a regular word - it is a way to provide access to the value you own to someone else without giving up ownership of it. Borrowing is achieved through references. You can find a great explanation in the official Rust book - corresponding links are present in the answer."}, {"owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437660842, "post_id": 31568079, "comment_id": 51131679, "body": "OK, could we then say that borrowing is &#39;hardcoded&#39; in the compiler through references, distinct from ownership, then?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "edited": false, "score": 0, "creation_date": 1437672747, "post_id": 31568079, "comment_id": 51140414, "body": "Well, yes, rules of borrow checking are built into the compiler, that&#39;s one of the main strengths and selling points of Rust. There is nothing like it, say, in C++. I wouldn&#39;t say that borrowing is entirely distinct from ownership - they are closely linked via the concept of lifetimes."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 3, "last_activity_date": 1437637922, "last_edit_date": 1437637922, "creation_date": 1437580312, "answer_id": 31568079, "question_id": 31567708, "link": "https://stackoverflow.com/questions/31567708/difference-in-mutability-between-reference-and-box/31568079#31568079", "title": "Difference in mutability between reference and box", "body": "<p>First, you do understand how references behave correctly. <code>mut a</code> is a mutable variable (or, more correctly, a mutable binding), while <code>&amp;mut 5</code> is a mutable reference pointing to a mutable piece of data (which is implicitly allocated on the stack for you).</p>\n\n<p>Second, <code>Box</code> behaves differently from references because it is <em>fundamentally different</em> from references. Another name for <code>Box</code> is <em>owning/owned pointer</em>. Each <code>Box</code> <em>owns</em> the data it holds, and it does so <em>uniquely</em>, therefore mutability of this data is inherited from mutability of the box itself. So yes, this is exactly how <code>Box</code> should work.</p>\n\n<p>Another, probably more practical, way to understand it is to consider <code>Box&lt;T&gt;</code> exactly equivalent to just <code>T</code>, except of fixed size and allocation method. In other words, <code>Box</code> provides value semantics: it is moved around just like any value and its mutability depends on the binding it is stored in.</p>\n\n<p>There are several ways to create a pointer to a mutable piece of data on the heap while keeping the pointer immutable. The most generic one is <code>RefCell</code>:</p>\n\n<pre><code>use std::cell::RefCell;\n\nstruct X { id: u32 }\nlet x: Box&lt;RefCell&lt;X&gt;&gt; = Box::new(RefCell::new(X { id: 0 }));\nx.borrow_mut().id = 1;\n</code></pre>\n\n<p>Alternatively, you can use <code>Cell</code> (for <code>Copy</code> types):</p>\n\n<pre><code>let x: Box&lt;Cell&lt;u32&gt;&gt; = Box::new(Cell::new(0));\nx.set(1);\n</code></pre>\n\n<p>Note that the above examples are using so-called \"internal mutability\" which should better be avoided unless you <em>do</em> need it for something. If you want to create a <code>Box</code> with mutable interior only to keep mutability properties, you really shouldn't. It isn't idiomatic and will only result in a syntactic and semantic burden.</p>\n\n<p>You can find a lot of useful information here:</p>\n\n<ul>\n<li><a href=\"http://doc.rust-lang.org/book/ownership.html\" rel=\"nofollow\">Ownership</a></li>\n<li><a href=\"http://doc.rust-lang.org/book/references-and-borrowing.html\" rel=\"nofollow\">References and borrowing</a></li>\n<li><a href=\"http://doc.rust-lang.org/book/mutability.html\" rel=\"nofollow\">Mutability</a></li>\n<li><a href=\"http://doc.rust-lang.org/std/cell/\" rel=\"nofollow\">std::cell</a> - internal mutability types </li>\n</ul>\n\n<p>In fact, if you have a question about such fundamental things as mutability, it is probably already explained in the book :)</p>\n"}], "owner": {"reputation": 27525, "user_id": 924313, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/14d86d9d0a97d8464d59eb42935838ae?s=128&d=identicon&r=PG", "display_name": "corazza", "link": "https://stackoverflow.com/users/924313/corazza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 818, "favorite_count": 0, "accepted_answer_id": 31568079, "answer_count": 1, "score": 2, "last_activity_date": 1437637922, "creation_date": 1437579272, "question_id": 31567708, "link": "https://stackoverflow.com/questions/31567708/difference-in-mutability-between-reference-and-box", "title": "Difference in mutability between reference and box", "body": "<p>I'm trying to understand Rust pointer types and their relation to mutability. Specifically, the ways of declaring a variable which holds the pointer and is itself mutable -- i.e. can be pointed to some other memory, and declaring that the <em>data itself</em> is mutable -- i.e. can be changed <em>through</em> the value of the pointer variable.</p>\n\n<p>This is how I understand plain references work:</p>\n\n<pre><code>let mut a = &amp;5; // a is a mutable pointer to immutable data\nlet b = &amp;mut 5; // b is an immutable pointer to mutable data\n</code></pre>\n\n<p>So <code>a</code> can be changed to point to something else, while <code>b</code> can't. However, the data to which <code>b</code> points to can be changed through <code>b</code>, while it can't through <code>a</code>. <strong>Do I understand this correctly?</strong></p>\n\n<p>For the second part of the question -- why does <code>Box::new</code> seem to behave differently? This is my current understanding:</p>\n\n<pre><code>let mut a = Box::new(5); // a is a mutable pointer to mutable data\nlet c = Box::new(7); // c is an immutable pointer to immutable data\n</code></pre>\n\n<p><code>new</code> should return a pointer to some heap-allocated data, but the data it points to seems to inherit mutability from the variable which holds the pointer, unlike in the example with references where these two states of mutability are independent! <strong>Is that how <code>Box::new</code> is supposed to work?</strong> If so, how can I create a pointer value to mutable data on the heap that is stored in an immutable variable?</p>\n"}, {"tags": ["rust", "dispatch"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 3, "last_activity_date": 1437571853, "creation_date": 1437571853, "answer_id": 31564634, "question_id": 31564324, "link": "https://stackoverflow.com/questions/31564324/how-to-implement-iter-method-using-static-dynamic-dispatch/31564634#31564634", "title": "How to implement iter method using static/dynamic dispatch?", "body": "<p>It is not possible to do it using static dispatch. There is a <a href=\"https://github.com/rust-lang/rfcs/issues/518\" rel=\"nofollow\">tracking RFC issue</a> on unboxed abstract return types, but Rust is not there yet (and I'm not sure if it could cover the use case of returning different types). Therefore, dynamic dispatch is the way to go.</p>\n\n<p>You're pretty close, actually. Just make the return type <code>Box&lt;Iterator&lt;Item=char&gt;&gt;</code> and add more boxing:</p>\n\n<pre><code>pub fn iter(&amp;self) -&gt; Box&lt;Iterator&lt;Item=char&gt;&gt; {\n    match *self {\n        Class::SingleChar(c) =&gt; Box::new(Some(c).into_iter()),\n        Class::Range(ref range) =&gt; Box::new(range.iter()),\n        Class::And(ref classes) =&gt; {\n            let iter: Option&lt;_&gt; = classes.iter().fold(None, |iter, &amp;class| {\n                match iter {\n                    None =&gt; Some(Box::new(class.iter())),\n                    Some(iter) =&gt; Some(Box::new(iter.merge(class.iter()))),\n                }\n            });\n            iter.unwrap()\n        },\n        Class::Or(ref classes) =&gt; {\n            let iter: Option&lt;_&gt; = classes.iter().fold(None, |iter, &amp;class| {\n                match iter {\n                    None =&gt; Some(Box::new(class.iter())),\n                    Some(iter) =&gt; Some(Box::new(iter.interleave(class.iter()))),\n                }\n            });\n            iter.unwrap()\n        },\n    }\n}\n</code></pre>\n\n<p>This should work.</p>\n"}], "owner": {"reputation": 883, "user_id": 1509255, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/1bdbc7273bc265e4e92f2fcacbb6c419?s=128&d=identicon&r=PG", "display_name": "Aleksandr", "link": "https://stackoverflow.com/users/1509255/aleksandr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 0, "accepted_answer_id": 31564634, "answer_count": 1, "score": 4, "last_activity_date": 1437572879, "creation_date": 1437571083, "last_edit_date": 1437572879, "question_id": 31564324, "link": "https://stackoverflow.com/questions/31564324/how-to-implement-iter-method-using-static-dynamic-dispatch", "title": "How to implement iter method using static/dynamic dispatch?", "body": "<p>I need to implement the method <code>iter</code>, which returns something which implements the trait <code>Iterator&lt;Item = char&gt;</code>. But the return value will be different implementations, depending on the enum variant.</p>\n\n<p>Something like this:</p>\n\n<pre><code>pub enum Class {\n    SingleChar(char),\n    Range(Range),\n    And(Vec&lt;Class&gt;),\n    Or(Vec&lt;Class&gt;),\n}\n\nimpl Class {\n    pub fn iter(&amp;self) -&gt; Iterator&lt;Item = char&gt; {\n        match *self {\n            Class::SingleChar(c) =&gt; vec![c],\n            Class::Range(ref range) =&gt; range.iter(),\n            Class::And(ref classes) =&gt; {\n                let iter: Option&lt;_&gt; = classes.iter().fold(None, |iter, &amp;class| {\n                    match iter {\n                        None =&gt; Some(class.iter()),\n                        Some(iter) =&gt; Some(iter.merge(class.iter())),\n                    }\n                });\n                Box::new(iter.unwrap())\n            },\n            Class::Or(ref classes) =&gt; {\n                let iter: Option&lt;_&gt; = classes.iter().fold(None, |iter, &amp;class| {\n                    match iter {\n                        None =&gt; Some(class.iter()),\n                        Some(iter) =&gt; Some(iter.interleave(class.iter())),\n                    }\n                });\n                Box::new(iter.unwrap())\n            },\n        }\n    }\n}\n</code></pre>\n\n<p><code>range.iter()</code> returns a struct that implements <code>Iterator&lt;Item=char&gt;</code>.</p>\n\n<p><code>merge</code> and <code>interleave</code> are <a href=\"http://bluss.github.io/rust-itertools/doc/itertools/trait.Itertools.html\" rel=\"nofollow\"><code>itertools</code></a> methods, which return <code>MergeAscend</code> and <code>Interleave</code> respectively (both of them implement <code>Iterator&lt;Item=char&gt;</code>)</p>\n\n<ol>\n<li>How to implement such a scheme using static dispatch?</li>\n<li>If static dispatch is not possible, how to implement such a scheme using dynamic dispatch?</li>\n</ol>\n"}, {"tags": ["json", "rust", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": true, "score": 3, "last_activity_date": 1437550032, "creation_date": 1437550032, "answer_id": 31556521, "question_id": 31555996, "link": "https://stackoverflow.com/questions/31555996/reading-then-modifying-json-with-rustc-serialize/31556521#31556521", "title": "Reading then modifying JSON with rustc_serialize", "body": "<p><a href=\"http://doc.rust-lang.org/rustc-serialize/rustc_serialize/json/enum.Json.html#method.as_object\" rel=\"nofollow\"><code>as_object</code></a> returns <code>Option&lt;&amp;Object&gt;</code>\u2014an immutable reference.</p>\n\n<p>To get a mutable reference (<code>Option&lt;&amp;mut Object&gt;</code>), you must use <a href=\"http://doc.rust-lang.org/rustc-serialize/rustc_serialize/json/enum.Json.html#method.as_object_mut\" rel=\"nofollow\"><code>as_object_mut</code></a>.</p>\n"}], "owner": {"reputation": 10360, "user_id": 587021, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/390ae6c8c1e917c0ac3a562680fed3b7?s=128&d=identicon&r=PG", "display_name": "A T", "link": "https://stackoverflow.com/users/587021/a-t"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "accepted_answer_id": 31556521, "answer_count": 1, "score": 2, "last_activity_date": 1437567176, "creation_date": 1437548328, "last_edit_date": 1437567176, "question_id": 31555996, "link": "https://stackoverflow.com/questions/31555996/reading-then-modifying-json-with-rustc-serialize", "title": "Reading then modifying JSON with rustc_serialize", "body": "<p>So let's say I want to replace <code>{\"foo\": 13}</code> with <code>{\"foo\": 14}</code>. Attempt:</p>\n\n<pre><code>extern crate rustc_serialize;\nuse rustc_serialize::json::Json;\n\nfn main() {\n    let data = Json::from_str(\"{\\\"foo\\\": 13, \\\"bar\\\": \\\"baz\\\"}\").unwrap();\n    let mut obj = data.as_object().unwrap();\n    let somenum: u64 = 14;\n    obj.insert(String::from_str(\"foo\"), Json::U64(somenum));\n\n    for (key, value) in obj.iter() {\n        println!(\"{}: {}\", key, match *value {\n            Json::U64(v) =&gt; format!(\"{} (u64)\", v),\n            Json::String(ref v) =&gt; format!(\"{} (string)\", v),\n            _ =&gt; format!(\"other\")\n        });\n    }\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>src/main.rs:8:5: 8:8 error: cannot borrow immutable borrowed content `*obj` \\\n                            as mutable\nsrc/main.rs:8     obj.insert(String::from_str(\"foo\"), Json::U64(somenum));\n                  ^~~\n</code></pre>\n"}, {"tags": ["generics", "macros", "rust", "type-inference"], "comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1437539960, "post_id": 31553856, "comment_id": 51065572, "body": "That looks to me remarkably like a bug. <a href=\"https://doc.rust-lang.org/nightly/error-index.html#E0109\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/error-index.html#E0109</a> shows what it\u2019s supposed to be doing."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1437545696, "post_id": 31553856, "comment_id": 51067672, "body": "as a workaround to your actual problem I suggest to change your macro to <code>$reader.$read_func().map_err(LocalReadError::from)</code>"}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "edited": false, "score": 2, "creation_date": 1437553034, "post_id": 31553856, "comment_id": 51071619, "body": "not sure if it&#39;s a bug or if this is actually expected, but the syntax that works seems to be: <code>Result::Ok::&lt;i32, u32&gt;(3)</code>. <a href=\"http://is.gd/xNUV9B\" rel=\"nofollow noreferrer\">Playpen</a>"}], "answers": [{"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": true, "score": 9, "last_activity_date": 1437554174, "last_edit_date": 1437554174, "creation_date": 1437553815, "answer_id": 31557872, "question_id": 31553856, "link": "https://stackoverflow.com/questions/31553856/why-are-type-parameters-are-not-allowed-on-this-type/31557872#31557872", "title": "Why are type parameters are not allowed on this type?", "body": "<p>this is actually an inconsistency with enums that <a href=\"https://github.com/rust-lang/rust/issues/22486\" rel=\"noreferrer\">was discussed</a> but not considered important enough to block 1.0.</p>\n\n<p>The working syntax to specify types is <code>Result::Ok::&lt;i32, u32&gt;(3)</code>.</p>\n\n<p>An enum works like something between a type (that would go with the syntax you were trying to write) and a namespace (and namespaces don't accept type parameters).</p>\n\n<p>To demonstrate how enums are like namespaces, you can write:</p>\n\n<pre><code>use std::result::Result::*;\n\nfn main() {\n    println!(\"{:?}\", Ok::&lt;i32, u32&gt;(3));\n}\n</code></pre>\n\n<p>This namespacing aspect is a desirable property of enums, but moving type parameters where one would intuitively think they should be would make this type of code very awkward to write.</p>\n"}], "owner": {"reputation": 37636, "user_id": 101999, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ab9e16b1296c16bc63f02f6dff5e3dc6?s=128&d=identicon&r=PG", "display_name": "Thanatos", "link": "https://stackoverflow.com/users/101999/thanatos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 992, "favorite_count": 1, "accepted_answer_id": 31557872, "answer_count": 1, "score": 7, "last_activity_date": 1437628801, "creation_date": 1437539183, "last_edit_date": 1437628801, "question_id": 31553856, "link": "https://stackoverflow.com/questions/31553856/why-are-type-parameters-are-not-allowed-on-this-type", "title": "Why are type parameters are not allowed on this type?", "body": "<p>Attempting to compile the following,</p>\n\n<pre><code>fn do_it() -&gt; Result&lt;i32, u32&gt; {\n    Result::&lt;i32, u32&gt;::Ok(3)\n}\n\n\nfn main() {\n    println!(\"{}\", do_it());\n}\n</code></pre>\n\n<p>results in:</p>\n\n<pre><code>./result_test.rs:2:14: 2:17 error: type parameters are not allowed on this type [E0109]\n./result_test.rs:2     Result::&lt;i32, u32&gt;::Ok(3)\n                                ^~~\n</code></pre>\n\n<p><strong>Why are type parameters not allowed on this type?</strong></p>\n\n<p>This is a minimal example, my real-world example is a macro trying to return the following:</p>\n\n<pre><code>match $reader.$read_func() {\n    Ok(n) =&gt; Result::&lt;$read_type, LocalReadError&gt;::Ok(n),\n    Err(err) =&gt; Result::&lt;$read_type, LocalReadError&gt;::Err(\n        LocalReadError::from(err)\n    ),\n}\n</code></pre>\n\n<p><code>$read_func</code> is a function, <code>$read_type</code> is the return type of that function. (If I had a programmatic way to get that, I'd do so; I don't know how, so it's an arg\u2026); as-is, I get the above error. If I remove the specification of the generic's parameters, type inteference complains that it can't figure out the type. (Because it ends up with <code>Result&lt;_, LocalReadError&gt;</code> in one branch of the <code>match</code>, and <code>Result&lt;$read_type, _&gt;</code> in the other? I'm not really sure. It says:</p>\n\n<pre><code>error: unable to infer enough type information about `_`; type annotations or generic parameter binding required [E0282]\n    match $reader.$read_func() {\n                  ^~~~~~~~~~~~\n</code></pre>\n\n<p>)</p>\n\n<p><em>Note:</em> The question about why type parameters are not allowed is answered below. Turns out this is not the cause of the \"unable to infer enough type information\". (<code>read_func</code> is a function, in my case, I'm passing a templated function, but forgetting the template arg, which can't be inferred.)</p>\n"}, {"tags": ["rust", "type-systems"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437521664, "post_id": 31551370, "comment_id": 51061190, "body": "Please ask <a href=\"http://meta.stackexchange.com/q/39223/281829\">only one question per question</a>."}, {"owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437548840, "post_id": 31551370, "comment_id": 51069235, "body": "@Shepmaster the two questions are directly related. I do know how to convert types, but in the context of the two match arms it doesn&#39;t work. So no reason for a downvote."}], "answers": [{"comments": [{"owner": {"reputation": 15683, "user_id": 46571, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/79eede5b02caa81db17f34026b24a734?s=128&d=identicon&r=PG", "display_name": "pyon", "link": "https://stackoverflow.com/users/46571/pyon"}, "edited": false, "score": 0, "creation_date": 1437522459, "post_id": 31551478, "comment_id": 51061397, "body": "@Shepmaster: Um, well, what do you want? A full rant about what algebraic data types are for?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437522592, "post_id": 31551478, "comment_id": 51061440, "body": "No, but showing <i>how to use the enum</i> would be a good start. Your example doesn&#39;t show how the enum fixes the &quot;match arm has incompatible types&quot; error."}, {"owner": {"reputation": 3711, "user_id": 203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG", "display_name": "Rasmus Kaj", "link": "https://stackoverflow.com/users/203476/rasmus-kaj"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437572638, "post_id": 31551478, "comment_id": 51085263, "body": "The question you need to think about, @Shepmaster, is &quot;what is the type of s&quot; in your code.  It can&#39;t be both SensorA and SensorB, but in Eduardo Le&#243;ns code, it can be Sensor.  Or in other words: The error message you get is not about the match itself, but about what should be returned from it, since the arms return different types."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3711, "user_id": 203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/838b591b09fc19aae77b84c63ddbe633?s=128&d=identicon&r=PG", "display_name": "Rasmus Kaj", "link": "https://stackoverflow.com/users/203476/rasmus-kaj"}, "edited": false, "score": 0, "creation_date": 1437575919, "post_id": 31551478, "comment_id": 51088034, "body": "@RasmusKaj thanks, but <i>I</i> understand how the enum would help ^_^. I&#39;m more suggesting that the answer as currently provided doesn&#39;t provide the full amount of help that the OP might need."}], "tags": [], "owner": {"reputation": 15683, "user_id": 46571, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/79eede5b02caa81db17f34026b24a734?s=128&d=identicon&r=PG", "display_name": "pyon", "link": "https://stackoverflow.com/users/46571/pyon"}, "is_accepted": false, "score": 1, "last_activity_date": 1437522626, "last_edit_date": 1437522626, "creation_date": 1437521938, "answer_id": 31551478, "question_id": 31551370, "link": "https://stackoverflow.com/questions/31551370/parse-a-string-to-different-types/31551478#31551478", "title": "Parse a string to different types", "body": "<p>I'd replace your <code>SensorType</code> enum with the following one:</p>\n\n<pre><code>enum Sensor {\n    A(SensorA),\n    B(SensorB)\n}\n</code></pre>\n\n<p>This has the advantage that you can put both classes of <code>Sensor</code> in the same container:</p>\n\n<pre><code>let sensorA = ...;\nlet sensorB = ...;\nlet mut vec = vec!( Sensor::A( sensorA ), Sensor::B( sensorB ) );\n</code></pre>\n\n<p>Or write your own functions that expect either class of <code>Sensor</code>:</p>\n\n<pre><code>fn use_sensor( sensor: &amp;Sensor ) {\n    match sensor {\n        Sensor::A( sensorA ) =&gt; sensorA.foo(),\n        Sensor::B( sensorB ) =&gt; sensorB.bar()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 15722, "user_id": 284318, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/1e0588e345236881aff23040eb1d5dc3?s=128&d=identicon&r=PG", "display_name": "Danilo Bargen", "link": "https://stackoverflow.com/users/284318/danilo-bargen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1437522626, "creation_date": 1437521246, "last_edit_date": 1437521685, "question_id": 31551370, "link": "https://stackoverflow.com/questions/31551370/parse-a-string-to-different-types", "title": "Parse a string to different types", "body": "<p>I have a list of sensor specifications. Each sensor type has an accompanying struct. A sensor spec has a sensor type and a key with which the data can be fetched from the database as a string.</p>\n\n<p>Depending on the sensor type, the data should be converted into a numeric value, could be something like u8 or f64.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct SensorSpec {\n    sensor_type: SensorType,\n    data_key: String,\n}\n\nenum SensorType {\n    A,\n    B,\n}\n\n#[derive(Debug)]\nstruct SensorA {\n    value: u8,\n}\n\n#[derive(Debug)]\nstruct SensorB {\n    value: f64,\n}\n\nfn main() {\n\n    // This simulates the database\n    let mut db: HashMap&lt;String, String&gt; = HashMap::new();\n    db.insert(\"a\".to_string(), \"42\".to_string());\n    db.insert(\"b\".to_string(), \"13.37\".to_string());\n\n    // List of sensors\n    let mut sensor_specs: Vec&lt;SensorSpec&gt; = vec![\n        SensorSpec { sensor_type: SensorType::A, data_key: \"a\".to_string() },\n        SensorSpec { sensor_type: SensorType::B, data_key: \"b\".to_string() },\n    ];\n\n    for sensor in sensor_specs {\n        // 1. Fetch data as string from db\n        // 2. Convert it according to the sensor type\n        // 3. Print sensor object to terminal\n\n        let val = db.get(&amp;sensor.data_key);\n\n        let s = match sensor.sensor_type {\n            SensorType::A =&gt; {\n                SensorA { value: val }\n            },\n            SensorType::B =&gt; {\n                SensorB { value: val }\n            },\n        };\n\n        println!(\"{:?}\", s);\n    }\n\n}\n</code></pre>\n\n<p>There are two problems with this:</p>\n\n<ol>\n<li>I need to convert the string to a numeric type depending on the sensor type. How do I do that?</li>\n<li>Match arm have incompatible types.</li>\n</ol>\n\n<p>Here's the compile message for #2:</p>\n\n<pre><code>example.rs:43:17: 50:10 error: match arms have incompatible types: \nexpected `SensorA`,\n    found `SensorB`\n</code></pre>\n\n<p>How can I solve this issue?</p>\n"}, {"tags": ["linked-list", "rust"], "comments": [{"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 0, "creation_date": 1437506525, "post_id": 31547754, "comment_id": 51054293, "body": "This could get crazy if you have a circular list, right?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1437506660, "post_id": 31547754, "comment_id": 51054345, "body": "Why should this question not be marked as a duplicate of <a href=\"http://stackoverflow.com/q/21152429/155423\">this one</a>, <a href=\"http://stackoverflow.com/q/30441456/155423\">this one</a>, <a href=\"http://stackoverflow.com/q/22268861/155423\">this one</a>, <a href=\"http://stackoverflow.com/q/27750985/155423\">this one</a>, <a href=\"http://stackoverflow.com/q/26434364/155423\">this one</a> or <a href=\"http://stackoverflow.com/q/31423174/155423\">this one</a>?"}, {"owner": {"reputation": 861, "user_id": 1681590, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42686c3aa6908ce6a7b320d2ba1f2dd2?s=128&d=identicon&r=PG", "display_name": "bge0", "link": "https://stackoverflow.com/users/1681590/bge0"}, "edited": false, "score": 1, "creation_date": 1437511469, "post_id": 31547754, "comment_id": 51057035, "body": "- #1: ~ is not a valid rust operator anymore, They use a List backend inside the Node. I want to implement node walking   - #2: Is copying the node, not setting a reference   - #3: ~ is not a valid rust operator anymore. <a href=\"https://doc.rust-lang.org/collections/linked_list/struct.Rawlink.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/collections/linked_list/struct.Rawlink.htm&zwnj;&#8203;l</a> is not valid. Is implementing this the best way?#4: Again, value is constructed in the call.     #5: Has nothing about adding. It only references going to the next operator. #6: Is about extending a generic trait, has nothing to do with multiple lifetimes"}, {"owner": {"reputation": 861, "user_id": 1681590, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42686c3aa6908ce6a7b320d2ba1f2dd2?s=128&d=identicon&r=PG", "display_name": "bge0", "link": "https://stackoverflow.com/users/1681590/bge0"}, "edited": false, "score": 0, "creation_date": 1437511492, "post_id": 31547754, "comment_id": 51057046, "body": "My question is different in that: the  added object(s) are NOT constructed in the connect/add call. They have their own lifetime."}, {"owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "edited": false, "score": 1, "creation_date": 1437514273, "post_id": 31547754, "comment_id": 51058451, "body": "Your code intent is unclear. <code>Layer</code> is not defined and you have numerous typos. Could you please make a reproducible example? Personally, I have several design ideas about this, but I believe what you want to create is not possible in the end, even though I can&#39;t prove it. Basically you&#39;re messing around with lifetimes in non-compatible ways. Here is an example design: <a href=\"http://is.gd/EjfABd\" rel=\"nofollow noreferrer\">is.gd/EjfABd</a>"}, {"owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "edited": false, "score": 0, "creation_date": 1437514409, "post_id": 31547754, "comment_id": 51058517, "body": "I also fail to see how a linked list of references is useful at all (but usefulness is not my call to make, it&#39;s up to you!) :) I would be strongly surprised if you couldn&#39;t get away with a standard <a href=\"https://doc.rust-lang.org/collections/linked_list/struct.LinkedList.html\" rel=\"nofollow noreferrer\"><code>LinkedList</code></a>, whose code is tested and whose intent is clearer."}, {"owner": {"reputation": 861, "user_id": 1681590, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42686c3aa6908ce6a7b320d2ba1f2dd2?s=128&d=identicon&r=PG", "display_name": "bge0", "link": "https://stackoverflow.com/users/1681590/bge0"}, "edited": false, "score": 0, "creation_date": 1437514445, "post_id": 31547754, "comment_id": 51058527, "body": "Yes, sorry Layer = Base. Fixed that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437522199, "post_id": 31547754, "comment_id": 51061330, "body": "Thank you for reviewing those other questions, most people just ignore them, wanting their special question answered! Please <a href=\"https://stackoverflow.com/posts/31547754/edit\">edit</a> your question to include those details as well as highlighting why your question is different from the normal &quot;I want to make a linked list&quot; question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437522423, "post_id": 31547754, "comment_id": 51061388, "body": "You continue to have numerous typos (<code>&lt;&#39;b&#39;&gt;</code> and <code>a&#39;</code>). Please try to produce something that compiles (or produces the expected error) on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playpen</a>."}], "answers": [{"comments": [{"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1437535284, "post_id": 31551794, "comment_id": 51064429, "body": "Can you explain the difference between a pointer and a reference?  I come from managed languages, where in my head I always thought of references as pointers."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1437546007, "post_id": 31551794, "comment_id": 51067844, "body": "a pointer is just an integer that contains the address of a memory location. a reference additionally has the guarantees about validity and types of the object at the memory location."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 2, "creation_date": 1437571142, "post_id": 31551794, "comment_id": 51084131, "body": "@w.brian: When you say &quot;pointer&quot; it&#39;s not clear what you mean. In Rust, we simply call <code>&amp;T</code> references and <code>*T</code> raw pointers. At the machine level, they are very much the same. But the language treats them differently. For example, a reference is always valid an represents &quot;borrowing&quot;. A raw pointer can be null and does not say anything about ownership/borrowing. They are primarily used to implement higher level and safe abstractions."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 2, "creation_date": 1437578049, "post_id": 31551794, "comment_id": 51089720, "body": "@w.brian: In Rust, references and boxes are both variations on pointers. The difference is ownership. A reference refers (points) to data owned by someone else. A box, on the other hand, &quot;owns&quot; its referent: when a Box&lt;T&gt; is moved (changes ownership), the T it points to moves along with it. There are other kinds of pointers, too. Rc points to memory that is not singularly owned, but shared among all the Rc-pointers to it. Raw pointers are like references, but they aren&#39;t checked for validity, like ker said. (But they do have types, even in C.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 1, "creation_date": 1437666350, "post_id": 31551794, "comment_id": 51136258, "body": "@w.brian adding to the wonderful clarifications above, the fact that Rust differentiates between these meanings is a <b>good thing</b>. In C, for example, having a <code>char *</code> tells you nothing about if you now own the pointer or it&#39;s being borrowed. Rust splits the concepts apart, encoding them into types to make things way easier to understand."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1437524180, "last_edit_date": 1495535061, "creation_date": 1437524180, "answer_id": 31551794, "question_id": 31547754, "link": "https://stackoverflow.com/questions/31547754/what-is-the-idiomatic-lifetime-for-the-next-pointer-in-a-linked-list/31551794#31551794", "title": "What is the idiomatic lifetime for the &quot;next&quot; pointer in a linked list?", "body": "<p>You say </p>\n\n<blockquote>\n  <p>I have a pointer to the next node</p>\n</blockquote>\n\n<p>your code shows a reference, not a pointer, so I take it you mean a reference. But you also say</p>\n\n<blockquote>\n  <p>when I deallocate a list it should do so entirely</p>\n</blockquote>\n\n<p>These two concepts are <em>incompatible</em>. The only thing that can drop an item is the thing that <strong>owns</strong> the item. This is done by giving up ownership and nothing else taking the ownership. With a reference, you <strong>do not own</strong> anything, you are simply borrowing it.</p>\n\n<p>Now, you could have an <em>owned pointer</em> to the next item. That's a <code>Box</code>, which represents a heap-allocated item. Then no lifetimes need to come into play, and is covered in <a href=\"https://stackoverflow.com/a/27751076/155423\">this answer</a>.</p>\n\n<p>This type of list would be generic, so you could store an owned item like a <code>String</code>, or a reference to something like a <code>&amp;u32</code>. When the list or list node is dropped, then the <code>String</code> would be dropped too. The references are technically dropped, but dropping a reference does <em>not</em> drop the referred-to item.</p>\n\n<p>Creating a linked list with only references to the next node is... tricky to say the least, and probably not useful.</p>\n\n<p>Your <code>Node</code> would look something like this:</p>\n\n<pre><code>struct Node&lt;'a&gt; {\n    next: Option&lt;&amp;'a mut Node&lt;'a&gt;&gt;,\n}\n</code></pre>\n\n<p>You'd have to declare and allocate each and every <code>Node</code> yourself, since there'd be nowhere you could store the <code>Node</code> on the stack from inside a hypothetical \"add\" method.</p>\n\n<p>You are always going to run into an issue with overlapping lifetimes for the reference to the next node and the lifetime that the next node has (apply induction for a list and it gets really complicated.)</p>\n\n<p><strong>TL;DR</strong> It's not clear <em>why</em> want to do this, but basically it's not easy to do (or worth it, in my opinion).</p>\n"}], "owner": {"reputation": 861, "user_id": 1681590, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/42686c3aa6908ce6a7b320d2ba1f2dd2?s=128&d=identicon&r=PG", "display_name": "bge0", "link": "https://stackoverflow.com/users/1681590/bge0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 430, "favorite_count": 0, "accepted_answer_id": 31551794, "answer_count": 1, "score": 0, "last_activity_date": 1437524954, "creation_date": 1437506295, "last_edit_date": 1437524954, "question_id": 31547754, "link": "https://stackoverflow.com/questions/31547754/what-is-the-idiomatic-lifetime-for-the-next-pointer-in-a-linked-list", "title": "What is the idiomatic lifetime for the &quot;next&quot; pointer in a linked list?", "body": "<p>I'm trying to make a simple simple linked list <em>type</em> class where I have a pointer to the next node, but am running into some issues. What would be the proper way to do this? </p>\n\n<p>What I currently have is this: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Base {\n    fn connect&lt;'a, 'b&gt;(&amp;'a self, next: &amp;'b Base);\n}\n\nstruct MyStruct&lt;'b&gt; {\n    next: Option&lt;&amp;'b Base&gt;, // This should be swapped out with a reference to Base for the next node\n}\n\nimpl&lt;a', b'&gt; Base for MyStruct&lt;'b&gt; {\n    pub fn new() -&gt; MyStruct&lt;'b'&gt; {\n        MyStruct { next: None, }\n    }\n\n    pub fn connect&lt;'a, 'b&gt;(&amp;'a self, layer: &amp;'b Base) {\n        self.next = Some(layer);\n    }\n}\n</code></pre>\n\n<p>The way I picture this the lifetime for the struct/node that is connected should be the should be the same as the initial node (i.e. when I deallocate a list it should do so entirely) so it should have one lifetime. However, I believe this causes issues when there is a self pointer as in the connect function. </p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437500032, "post_id": 31545209, "comment_id": 51050669, "body": "Did you read up on the <a href=\"https://github.com/rust-lang/cargo/issues/595\" rel=\"nofollow noreferrer\">related issue #595</a>, which adds <code>cargo rustc</code>?"}, {"owner": {"reputation": 183, "user_id": 3809734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/124c0a4186833272328cbd1c904bb0c9?s=128&d=identicon&r=PG&f=1", "display_name": "user3809734", "link": "https://stackoverflow.com/users/3809734/user3809734"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437502175, "post_id": 31545209, "comment_id": 51051919, "body": "@Shepmaster it took me a lot of time to figure it out... the <code>cargo rustc --help</code> is hard to understand. Maybe I am not that smart kind of guy. I stiil do not understand why do we need a separate <code>cargo rustc</code> command."}, {"owner": {"reputation": 183, "user_id": 3809734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/124c0a4186833272328cbd1c904bb0c9?s=128&d=identicon&r=PG&f=1", "display_name": "user3809734", "link": "https://stackoverflow.com/users/3809734/user3809734"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1437502227, "post_id": 31545209, "comment_id": 51051952, "body": "<code>[--]</code> really got me."}], "answers": [{"comments": [{"owner": {"reputation": 1213, "user_id": 831850, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/dcb0ac17de6539bbb91303eec3247944?s=128&d=identicon&r=PG", "display_name": "Jacob", "link": "https://stackoverflow.com/users/831850/jacob"}, "edited": false, "score": 0, "creation_date": 1456345450, "post_id": 31546471, "comment_id": 58908592, "body": "haw can we get &quot;--release&quot; and &quot;-mwindows&quot;?"}, {"owner": {"reputation": 1213, "user_id": 831850, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/dcb0ac17de6539bbb91303eec3247944?s=128&d=identicon&r=PG", "display_name": "Jacob", "link": "https://stackoverflow.com/users/831850/jacob"}, "edited": false, "score": 0, "creation_date": 1456346958, "post_id": 31546471, "comment_id": 58909426, "body": "<code>cargo rustc --release -- -C link-args=-mwindows</code> thanks to <a href=\"https://users.rust-lang.org/t/cargo-rustc-how-do-you-fetch-the-dependencies/1557/6\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}], "tags": [], "owner": {"reputation": 183, "user_id": 3809734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/124c0a4186833272328cbd1c904bb0c9?s=128&d=identicon&r=PG&f=1", "display_name": "user3809734", "link": "https://stackoverflow.com/users/3809734/user3809734"}, "is_accepted": false, "score": 4, "last_activity_date": 1437501913, "creation_date": 1437501913, "answer_id": 31546471, "question_id": 31545209, "link": "https://stackoverflow.com/questions/31545209/how-to-pass-mwindows-to-cargo-build/31546471#31546471", "title": "How to pass -mwindows to cargo build", "body": "<p>use <code>cargo rustc [options] [--] [&lt;opts&gt;...]</code>.</p>\n\n<pre><code>  cargo rustc -- -C link-args=-mwindows\n</code></pre>\n\n<p>You can type <code>rustc -C help</code> to see more options.</p>\n"}, {"tags": [], "owner": {"reputation": 2041, "user_id": 2350164, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/09f5acee097053942e78ce20af6e75dd?s=128&d=identicon&r=PG", "display_name": "Yet Another User", "link": "https://stackoverflow.com/users/2350164/yet-another-user"}, "is_accepted": false, "score": 1, "last_activity_date": 1580723612, "creation_date": 1580723612, "answer_id": 60036770, "question_id": 31545209, "link": "https://stackoverflow.com/questions/31545209/how-to-pass-mwindows-to-cargo-build/60036770#60036770", "title": "How to pass -mwindows to cargo build", "body": "<p>As of <a href=\"https://blog.rust-lang.org/2017/06/08/Rust-1.18.html\" rel=\"nofollow noreferrer\">Rust 1.18</a> you can use the crate attribute <code>#![windows_subsystem]</code> to pass this flag to the linker.</p>\n\n<p>The two values accepted are <code>#![windows_subsystem = \"console\"]</code> and <code>#![windows_subsystem = \"windows\"]</code>.</p>\n\n<p>See <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1665-windows-subsystem.md\" rel=\"nofollow noreferrer\">Rust RFC 1665</a> for details.</p>\n"}], "owner": {"reputation": 183, "user_id": 3809734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/124c0a4186833272328cbd1c904bb0c9?s=128&d=identicon&r=PG&f=1", "display_name": "user3809734", "link": "https://stackoverflow.com/users/3809734/user3809734"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 344, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1580723612, "creation_date": 1437497919, "last_edit_date": 1437498929, "question_id": 31545209, "link": "https://stackoverflow.com/questions/31545209/how-to-pass-mwindows-to-cargo-build", "title": "How to pass -mwindows to cargo build", "body": "<p>I want to build a Windows Desktop app, and pass <code>-mwindows</code> to rustc during <code>cargo build</code>. I followed this <a href=\"https://github.com/rust-lang/cargo/issues/544\" rel=\"nofollow\">link</a>, but did not find out how to do it. Do I need to create a <code>./cargo</code> config file or pass some command via <code>cargo rustc</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "edited": false, "score": 2, "creation_date": 1437488056, "post_id": 31541442, "comment_id": 51042359, "body": "Try <code>match name.trim() { ... }</code>. I can&#39;t test it at the moment but I bet there&#39;s a newline character in the input."}, {"owner": {"reputation": 25272, "user_id": 1695163, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/85ffb58dc3ed0067128804ef843245a6?s=128&d=identicon&r=PG", "display_name": "ddavison", "link": "https://stackoverflow.com/users/1695163/ddavison"}, "reply_to_user": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "edited": false, "score": 0, "creation_date": 1437488138, "post_id": 31541442, "comment_id": 51042430, "body": "that was it...  i always forget about that, thanks!  If you post an answer, i&#39;ll upvote and accept."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1437526913, "post_id": 31541442, "comment_id": 51062476, "body": "If there had been type mismatch it would not have compiled. You can see precisely what\u2019s in a string by formatting it with Debug (<code>{:?}</code>) instead of Display (<code>{}</code>), too."}], "answers": [{"comments": [{"owner": {"reputation": 25272, "user_id": 1695163, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/85ffb58dc3ed0067128804ef843245a6?s=128&d=identicon&r=PG", "display_name": "ddavison", "link": "https://stackoverflow.com/users/1695163/ddavison"}, "edited": false, "score": 0, "creation_date": 1437492751, "post_id": 31541675, "comment_id": 51046126, "body": "A.B. hasn&#39;t submitted an answer yet, so i&#39;ll just accept yours."}], "tags": [], "owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "is_accepted": true, "score": 8, "last_activity_date": 1437488238, "creation_date": 1437488238, "answer_id": 31541675, "question_id": 31541442, "link": "https://stackoverflow.com/questions/31541442/how-do-i-match-on-a-string-read-from-standard-input/31541675#31541675", "title": "How do I match on a string read from standard input?", "body": "<p>I bet that it isn't caused by type mismatch. I place my bet on that there are some invisible characters (new line in this case). To achieve your goal you should trim your input string:</p>\n\n<pre><code>match name.trim() {\n    \"Alice\" =&gt; println!(\"Your name is Alice\"),\n    \"Bob\"   =&gt; println!(\"Your name is Bob\"),\n    _ =&gt; println!(\"Invalid name: {}\", name),\n}\n</code></pre>\n"}], "owner": {"reputation": 25272, "user_id": 1695163, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/85ffb58dc3ed0067128804ef843245a6?s=128&d=identicon&r=PG", "display_name": "ddavison", "link": "https://stackoverflow.com/users/1695163/ddavison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1238, "favorite_count": 1, "closed_date": 1522360817, "accepted_answer_id": 31541675, "answer_count": 1, "score": 5, "last_activity_date": 1437488238, "creation_date": 1437487657, "last_edit_date": 1437488165, "question_id": 31541442, "link": "https://stackoverflow.com/questions/31541442/how-do-i-match-on-a-string-read-from-standard-input", "closed_reason": "Duplicate", "title": "How do I match on a string read from standard input?", "body": "<p>In an exercise to learn Rust, I'm trying a simple program that will accept your name, then print your name if it's Valid. </p>\n\n<p><strong>Only \"Alice\" and \"Bob\" are valid names.</strong></p>\n\n<pre><code>use std::io;\n\nfn main() {\n    println!(\"What's your name?\");\n    let mut name = String::new();\n\n    io::stdin().read_line(&amp;mut name)\n    .ok()\n    .expect(\"Failed to read line\");\n\n    greet(&amp;name);\n}\n\nfn greet(name: &amp;str) {\n    match name {\n        \"Alice\" =&gt; println!(\"Your name is Alice\"),\n        \"Bob\"   =&gt; println!(\"Your name is Bob\"),\n        _ =&gt; println!(\"Invalid name: {}\", name),\n    }\n}\n</code></pre>\n\n<p>When I <code>cargo run</code> this <code>main.rs</code> file, I get:</p>\n\n<pre><code>What's your name?\nAlice\nInvalid name: Alice\n</code></pre>\n\n<p>Now, my guess is, because \"Alice\" is of type <code>&amp;'static str</code> and <code>name</code> is of type <code>&amp;str</code>, maybe it's not matching correctly...</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1437571563, "post_id": 31537018, "comment_id": 51084453, "body": "What is the purpose of this trait?"}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1437735097, "post_id": 31537018, "comment_id": 51166979, "body": "It is just for example, nothing more."}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "reply_to_user": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1437736112, "post_id": 31537018, "comment_id": 51167635, "body": "Can&#39;t add code here, so i am edit question to answer to @sellibitze comment"}], "answers": [{"comments": [{"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "edited": false, "score": 0, "creation_date": 1437571530, "post_id": 31537694, "comment_id": 51084425, "body": "Can you add an example of a generic function that makes use of this trait?"}], "tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": true, "score": 0, "last_activity_date": 1437477840, "creation_date": 1437477840, "answer_id": 31537694, "question_id": 31537018, "link": "https://stackoverflow.com/questions/31537018/how-to-specify-reference-lifetime-for-trait-implementation/31537694#31537694", "title": "How to specify reference lifetime for trait implementation?", "body": "<p>You need to specify the lifetime on the trait, too.</p>\n\n<pre><code>trait TraitFoo&lt;'a&gt; {\n    fn foo(x: &amp;'a str) -&gt; Self;\n}\n\nimpl&lt;'a&gt; TraitFoo&lt;'a&gt; for Foo&lt;'a&gt; {\n    fn foo(x:&amp;'a str) -&gt; Foo&lt;'a&gt; {\n        Foo{\n            os:Some(x)\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 31537694, "answer_count": 1, "score": 2, "last_activity_date": 1437736331, "creation_date": 1437475850, "last_edit_date": 1437736331, "question_id": 31537018, "link": "https://stackoverflow.com/questions/31537018/how-to-specify-reference-lifetime-for-trait-implementation", "title": "How to specify reference lifetime for trait implementation?", "body": "<p>How to implement <strong>TraitFoo</strong> for <strong>struct Foo</strong>?</p>\n\n<pre><code>#[derive(Debug)]\nstruct Foo&lt;'f&gt; {\n    os: Option&lt;&amp;'f str&gt;\n}\n\nimpl&lt;'f&gt; Foo&lt;'f&gt; {\n    fn new(x: &amp;'f str) -&gt; Foo&lt;'f&gt; {\n        Foo {\n            os:Some(x)\n        }       \n    }\n}\n\ntrait TraitFoo {\n    fn foo(x:&amp;str) -&gt; Self;\n}\n\nimpl&lt;'f&gt; TraitFoo for Foo&lt;'f&gt; {\n    fn foo(x: &amp;str) -&gt; Foo&lt;'f&gt; {\n        Foo {\n            os:Some(x)\n        }\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", Foo::new(\"one\"));\n    println!(\"{:?}\", Foo::foo(\"two\"));\n}\n</code></pre>\n\n<p>The code above fails with error:</p>\n\n<pre><code>lf_trait.rs:21:12: 21:13 error: cannot infer an appropriate lifetime for automatic coercion due to conflicting requirements\nlf_trait.rs:21          os:Some(x)\n\nlf_trait.rs:19:2: 23:3 help: consider using an explicit lifetime parameter as shown: fn foo(x: &amp;'f str) -&gt; Foo&lt;'f&gt;\nlf_trait.rs:19  fn foo(x:&amp;str) -&gt; Foo&lt;'f&gt; {\nlf_trait.rs:20      Foo{\nlf_trait.rs:21          os:Some(x)\nlf_trait.rs:22      }\nlf_trait.rs:23  }\n</code></pre>\n\n<p>Using lifetime <code>'f</code> in the function <code>fn foo(x:&amp;'f str) -&gt; Foo&lt;'f&gt;</code> gives other error:</p>\n\n<pre><code>lf_trait.rs:19:2: 23:3 error: method `foo` has an incompatible type for trait: expected bound lifetime parameter , found concrete lifetime [E0053]\nlf_trait.rs:19  fn foo(x:&amp;'f str) -&gt; Foo&lt;'f&gt; {\nlf_trait.rs:20      Foo{\nlf_trait.rs:21          os:Some(x)\nlf_trait.rs:22      }\nlf_trait.rs:23  }\n</code></pre>\n\n<p>Is there any way to implement <code>TraitFoo</code> for <code>Foo</code>?</p>\n\n<hr>\n\n<p>About purposes:</p>\n\n<p>I tried to create my own error class with specified position where error appear. I need similar trait to convert standard errors to my error:</p>\n\n<pre><code>pub trait FromWhere&lt;'a,T&gt;:std::convert::From&lt;T&gt; {\n    fn from_where(T, &amp;'a str) -&gt; Self;\n}\n\nimpl&lt;'e,T:ApplyWrpErrorTrait+std::convert::From&lt;T&gt;+'static&gt; FromWhere&lt;'e,T&gt; for WrpError&lt;'e&gt; {\n  fn from_where(err: T, whr:&amp;'e str) -&gt; WrpError&lt;'e&gt; {\n      if whr!=\"\" {\n          WrpError{\n              kind: ErrorKind::Wrapped,\n              descr: None,\n              pos: Some(whr),\n              cause: Some(Box::new(err))\n          }\n      }else{\n          std::convert::From::from(err)\n      }\n  }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1437438163, "post_id": 31528225, "comment_id": 51018062, "body": "Welcome to Stack Overflow! Please read about creating a <a href=\"/help/mcve\">MCVE</a>, which serves to highlight the problem to both yourself and to potential answerers. In this case, you have quite a lot of code that is ancillary to your problem."}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 5136919, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea26db579c5fa3b61e8a62452d7972f0?s=128&d=identicon&r=PG&f=1", "display_name": "Stygian", "link": "https://stackoverflow.com/users/5136919/stygian"}, "edited": false, "score": 0, "creation_date": 1437470246, "post_id": 31528387, "comment_id": 51029615, "body": "Thank you for explaining !"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1437439492, "last_edit_date": 1437439492, "creation_date": 1437437836, "answer_id": 31528387, "question_id": 31528225, "link": "https://stackoverflow.com/questions/31528225/return-value-is-a-unresolved-name/31528387#31528387", "title": "Return value is a &quot;unresolved name&quot;", "body": "<p>Variables have a <em>lexical scope</em>, that is, where a variable is available is tied to the curly braces in the source code. Here's a small example:</p>\n\n<pre><code>fn main() {\n    {\n        let value = 42;\n    }\n    println!(\"{}\", value);\n}\n</code></pre>\n\n<p><code>value</code> is not accessible outside of the curly braces in which it is defined.</p>\n\n<p>You have the same problem in your case:</p>\n\n<pre><code>for row in result {\n   let coord = Coord {...};\n}\nresponse.send(format!(\"{:?}\", coord.lat))\n</code></pre>\n\n<p>Each iteration of the loop, <code>coord</code> is created and then is dropped. There is nothing that corresponds to the name <code>coord</code> outside of the loop.</p>\n\n<p>It's difficult to tell you how to fix your problem. The <a href=\"http://ogeon.github.io/docs/rustful/master/rustful/response/struct.Response.html#method.send\" rel=\"nofollow\">docs for <code>Response::send</code></a> say (emphasis mine):</p>\n\n<blockquote>\n  <p>Send data to the client and <strong>finish</strong> the response</p>\n</blockquote>\n\n<p>Which means you can only send a single response. You are going to have to figure out how to combine all of your results and then send them back together. Probably a JSON array would fit the bill.</p>\n"}], "owner": {"reputation": 3, "user_id": 5136919, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea26db579c5fa3b61e8a62452d7972f0?s=128&d=identicon&r=PG&f=1", "display_name": "Stygian", "link": "https://stackoverflow.com/users/5136919/stygian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 31528387, "answer_count": 1, "score": -1, "last_activity_date": 1437439492, "creation_date": 1437436623, "last_edit_date": 1437437939, "question_id": 31528225, "link": "https://stackoverflow.com/questions/31528225/return-value-is-a-unresolved-name", "title": "Return value is a &quot;unresolved name&quot;", "body": "<p>I been trying to implement a restful server that returns some JSONed data from a database in a HTTP get response. I'm using <a href=\"https://github.com/Ogeon/rustful\" rel=\"nofollow\">rustful</a> crate. So far, I'm able to retrieve the data but I couldn't figure out how to return them in the response body.</p>\n\n<pre><code>#[macro_use]\nextern crate rustful;\nextern crate rustc_serialize;\nextern crate postgres;\n\nuse std::error::Error;\n\nuse rustful::{Server, Context, Response, TreeRouter, Log, Handler};\nuse rustful::context::ExtJsonBody;\nuse postgres::{Connection, SslMode};\n\n#[derive(RustcEncodable,RustcDecodable)]\nstruct Coord {\n    lat: f64,\n    long: f64,\n    expr: String\n}\n\nfn get(context: Context, response: Response) {\n    let conn = Connection::connect(\"postgresql://postgres:password@localhost\", &amp;SslMode::None).unwrap();\n    let stmt = conn.prepare(\"SELECT latitude,longitude,expiry FROM coord LIMIT 1\").unwrap();\n    let result = stmt.query(&amp;[]).unwrap();\n    for row in result {\n       let coord = Coord {\n            lat: row.get(0),\n            long: row.get(1),\n            expr: row.get(2)\n        };\n       println!(\"Latitude: {}\\nLongitude: {}\\nExpiry: {}\", coord.lat, coord.long, coord.expr);\n    }\n    response.send(format!(\"{:?}\", coord.lat))\n}\n\nstruct HandlerFn(fn(Context, Response));\n\nimpl Handler for HandlerFn {\n    fn handle_request(&amp;self, context: Context, response: Response) {\n        self.0(context, response);\n    }\n}\n\nfn main() {\n    let server = Server {\n        host: 8080.into(),\n        handlers: insert_routes! {\n            TreeRouter::new() =&gt; {\n                Get: HandlerFn(get)\n            }\n        },\n        ..Server::default()\n    }.run();\n\n    match server {\n        Ok(_server) =&gt; {},\n        Err(e) =&gt; println!(\"Cannot start server: {}\", e.description())\n    }\n}\n</code></pre>\n\n<p>The code currently fails with this error:</p>\n\n<pre><code>src/main.rs:40:35: 40:40 error: unresolved name `coord`\nsrc/main.rs:40     response.send(format!(\"{:?}\", coord.lat))\n                                                 ^~~~~\nnote: in expansion of format_args!\n&lt;std macros&gt;:2:26: 2:57 note: expansion site\n&lt;std macros&gt;:1:1: 2:61 note: in expansion of format!\nsrc/main.rs:40:19: 40:45 note: expansion site\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "is_accepted": true, "score": 13, "last_activity_date": 1523128947, "last_edit_date": 1523128947, "creation_date": 1437394877, "answer_id": 31516384, "question_id": 31515921, "link": "https://stackoverflow.com/questions/31515921/trait-implementing-sized/31516384#31516384", "title": "Trait implementing Sized", "body": "<h1>Why doesn't it work?</h1>\n\n<p>When you say that every <code>Foo</code> is <code>Sized</code>, you're kind of hiding the truth to yourself. Yes, every <code>Foo</code> is <code>Sized</code> but actually every type has a given size at some point. The real important information is that you're not saying how much this size is. Imagine if <code>Bar(i64)</code> is <code>Foo</code>, but <code>Baz(i8)</code> is <code>Foo</code> as well (they're both <code>Sized</code>, right?) which size do you determine <code>Foo</code> to be? Is it 8- or 1-byte long? This question is asked by the compiler when it tries to generate the code for your function <code>from(foo: Foo)</code>. Usually, <code>Sized</code> is rather used in a \"maybe\"-style with the syntax <code>?Sized</code>, indicating that the type size might be unknown at compile time.</p>\n\n<h1>How to solve it?</h1>\n\n<p>Typically you ditch the <code>: Sized</code> part, and use the following syntax, which is actually kind of a C++ template; it gives the compiler a sketch to write the actual code when given a concrete type with a given size.</p>\n\n<pre><code>trait Foo {}\n\nstruct Bar(i64);\n\nimpl Foo for Bar {}\n\nimpl&lt;F: Foo&gt; From&lt;F&gt; for Bar {\n    fn from(foo: F) -&gt; Bar {\n        Bar(64)\n    }\n}\n</code></pre>\n\n<p>(This will <a href=\"https://play.rust-lang.org/?gist=a9cf828810457167da111d14695c26d5&amp;version=stable\" rel=\"nofollow noreferrer\">still error</a> based on <a href=\"https://stackoverflow.com/q/37347311/155423\">the fact that you cannot reimplement <code>From</code> because of the <code>std</code> crate</a>, but it's not related to your original question.)</p>\n\n<p>You could also use the reference trait object <code>&amp;Foo</code> syntax in the argument to your function. This would transform your call from static dispatch to dynamic dispatch (<a href=\"http://doc.rust-lang.org/1.0.0-beta/book/static-and-dynamic-dispatch.html\" rel=\"nofollow noreferrer\">read more here</a>) but you can't do this here because the signature is imposed by the trait.</p>\n"}, {"tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": false, "score": 0, "last_activity_date": 1523128968, "last_edit_date": 1523128968, "creation_date": 1437396851, "answer_id": 31517093, "question_id": 31515921, "link": "https://stackoverflow.com/questions/31515921/trait-implementing-sized/31517093#31517093", "title": "Trait implementing Sized", "body": "<p>The <code>Foo</code> trait requires implementors to be <code>Sized</code>. It doesn't mean that <code>Foo</code> itself will have a size. You're misunderstanding the syntax the second code example and I'm therefore not sure what you're actually trying to do. Are you looking for this?</p>\n\n<pre><code>impl From&lt;i64&gt; for Bar {\n    fn from(val: i64) -&gt; Bar {\n        Bar(val)\n    }\n}\n</code></pre>\n\n<p>Or do you want a way to construct a <code>Bar</code> from any signed integer?</p>\n\n<p>We've got a <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY problem</a> here.</p>\n"}], "owner": {"reputation": 229, "user_id": 4255309, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/5wow8.jpg?s=128&g=1", "display_name": "jojo", "link": "https://stackoverflow.com/users/4255309/jojo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3405, "favorite_count": 2, "accepted_answer_id": 31516384, "answer_count": 2, "score": 14, "last_activity_date": 1523128968, "creation_date": 1437393487, "last_edit_date": 1523128758, "question_id": 31515921, "link": "https://stackoverflow.com/questions/31515921/trait-implementing-sized", "title": "Trait implementing Sized", "body": "<p>I know that traits and slices are unsized, i.e. it's not possible to know their size at compile time, e.g. any type may implement a trait, but that type may not be sized.</p>\n\n<p>Nevertheless, doesn't this example code mean that every type which implements trait <code>Foo</code> needs to implement <code>Sized</code> too?</p>\n\n<pre><code>trait Foo: Sized {}\n\nstruct Bar(i64);\n\nimpl Foo for Bar {}\n</code></pre>\n\n<p>If that's so, why doesn't this work?</p>\n\n<pre><code>impl From&lt;Foo&gt; for Bar {\n    fn from(foo: Foo) -&gt; Bar {\n        Bar(64)\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Foo + 'static: std::marker::Sized` is not satisfied\n --&gt; src/main.rs:7:6\n  |\n7 | impl From&lt;Foo&gt; for Bar {\n  |      ^^^^^^^^^ `Foo + 'static` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `Foo + 'static`\n</code></pre>\n\n<p>I want to provide to the consumer of the library a type (let's name it <code>Bar</code>) and make it possible to convert to <code>Bar</code> from any other type which implements a particular trait (let's name it <code>Foo</code>).</p>\n\n<p>I solved it by passing <code>Foo</code> by the reference instead of the value, but I'm not sure why the compiler complains if it's required for implementors to be <code>Sized</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 483, "user_id": 10489834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae6ed1c791725afc74bd02750367c43e?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan Pfeifer", "link": "https://stackoverflow.com/users/10489834/stefan-pfeifer"}, "edited": false, "score": 0, "creation_date": 1437392215, "post_id": 31514774, "comment_id": 50992180, "body": "Thanks for your answer. Unfortunately I need exactly one A-object to be referenced by several B-objects in my application."}], "tags": [], "owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "is_accepted": false, "score": 0, "last_activity_date": 1437390035, "creation_date": 1437390035, "answer_id": 31514774, "question_id": 31514542, "link": "https://stackoverflow.com/questions/31514542/struct-with-immutable-reference-to-other-struct/31514774#31514774", "title": "Struct with immutable reference to other struct", "body": "<p>The borrow is not finished because you are keeping that reference alive in <code>b1</code>. So the borrow is still alive when you try to do the same for <code>b2</code>.</p>\n\n<p>Maybe you just want this:</p>\n\n<pre><code>fn main() {\n    let mut a1 = A{data: 0};\n    let mut a2 = A{data: 0};\n    let b1 = B::new(&amp;mut a1);\n    let b2 = B::new(&amp;mut a2);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1437635884, "post_id": 31515656, "comment_id": 51114611, "body": "Thanks! You&#39;re totally right and I&#39;ve modified the code accordingly."}], "tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": true, "score": 3, "last_activity_date": 1437635852, "last_edit_date": 1437635852, "creation_date": 1437392688, "answer_id": 31515656, "question_id": 31514542, "link": "https://stackoverflow.com/questions/31514542/struct-with-immutable-reference-to-other-struct/31515656#31515656", "title": "Struct with immutable reference to other struct", "body": "<p>As @AndreaP said, the issue is because of your reference with the same lifetime. </p>\n\n<p>Usually you can work around these issues by simply splitting your functions (one <code>&amp;</code> and one <code>&amp;mut</code>).</p>\n\n<p>If you really need this kind on pattern, then I think what you are looking for is <code>Cell</code>/<code>RefCell</code>: <a href=\"http://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow\">http://doc.rust-lang.org/std/cell/index.html</a></p>\n\n<p>EDIT: Thanks to @Ker comment, I updated the code so <code>B</code> indeed holds a reference to <code>A</code> instead of its copy. Old code was just totally wrong.</p>\n\n<pre><code>use std::cell::{Cell};\n\n#[derive(Debug)]\nstruct A {\n    data: Cell&lt;i32&gt;\n}\n\n#[derive(Debug)]\nstruct B&lt;'a&gt; {\n    a: &amp;'a A\n}\n\nimpl&lt;'a&gt; B&lt;'a&gt; {\n    fn new(reference: &amp;'a A) -&gt; B&lt;'a&gt; {\n        // Modify data\n        reference.data.set(reference.data.get() + 1);\n        B {\n            a: reference\n        }\n    }\n}\n\nfn main() {\n    let a1 = A{data: Cell::new(0)};\n    let b1 = B::new(&amp;a1);\n    let b2 = B::new(&amp;a1);\n    println!(\"{}\", a1.data.get());\n    println!(\"{:?}\", b1);\n    println!(\"{:?}\", b2);\n}\n</code></pre>\n"}], "owner": {"reputation": 483, "user_id": 10489834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae6ed1c791725afc74bd02750367c43e?s=128&d=identicon&r=PG&f=1", "display_name": "Stefan Pfeifer", "link": "https://stackoverflow.com/users/10489834/stefan-pfeifer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 391, "favorite_count": 0, "accepted_answer_id": 31515656, "answer_count": 2, "score": 2, "last_activity_date": 1437635852, "creation_date": 1437389217, "question_id": 31514542, "link": "https://stackoverflow.com/questions/31514542/struct-with-immutable-reference-to-other-struct", "title": "Struct with immutable reference to other struct", "body": "<p>First of all I want to apologise for this noob question with an unspecific title, I'm quite new to Rust.</p>\n\n<p>Anyway, here is some (working) code:</p>\n\n<pre><code>struct A {\n    data: i32\n}\n\nstruct B&lt;'s&gt; {\n    a: &amp;'s A\n}\n\nimpl&lt;'s&gt; B&lt;'s&gt; {\n    fn new(reference: &amp;'s A) -&gt; B&lt;'s&gt; {\n        B {\n            a: reference\n        }\n    }\n}\n\nfn main() {\n    let a1 = A{data: 0};\n    let b1 = B::new(&amp;a1);\n    let b2 = B::new(&amp;a1);\n}\n</code></pre>\n\n<p>There is a struct A with some data and a struct B that contains an immutable reference to A. In the main method several B-objects are created with references to a single A-object.</p>\n\n<p>Now I only want to change one thing: In the B::new() method I want to modify the data of 'reference' before using it as the immutable member of B. I tried it like this:</p>\n\n<pre><code>struct A {\n    data: i32\n}\n\nstruct B&lt;'s&gt; {\n    a: &amp;'s A\n}\n\nimpl&lt;'s&gt; B&lt;'s&gt; {\n    fn new(reference: &amp;'s mut A) -&gt; B&lt;'s&gt; {\n\n        // Modify data\n        reference.data += 1;\n\n        B {\n            a: reference\n        }\n    }\n}\n\nfn main() {\n    let mut a1 = A{data: 0};\n    let b1 = B::new(&amp;mut a1);\n    let b2 = B::new(&amp;mut a1);\n}\n</code></pre>\n\n<p>But the compiler won't let me, error: cannot borrow <code>a1</code> as mutable more than once at a time. Why isn't the mutable borrow over once new() has finished? What would be the proper way to achieve what I'm trying?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1000, "user_id": 2976057, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f806a0bb679720c8c0844bbffef18b06?s=128&d=identicon&r=PG&f=1", "display_name": "degs", "link": "https://stackoverflow.com/users/2976057/degs"}, "edited": false, "score": 0, "creation_date": 1437378033, "post_id": 31510799, "comment_id": 50984155, "body": "Ah, this makes sense. MAX_X and MAX_Y are constants, yes. Is it the Rustic way in general to prefer allocating default structures, then filling them with proper values later?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 1000, "user_id": 2976057, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f806a0bb679720c8c0844bbffef18b06?s=128&d=identicon&r=PG&f=1", "display_name": "degs", "link": "https://stackoverflow.com/users/2976057/degs"}, "edited": false, "score": 0, "creation_date": 1437379983, "post_id": 31510799, "comment_id": 50985092, "body": "@descent: That&#39;s hugely subjective and depends on the specific case.  Personally, I avoid having &quot;dummy&quot; values lying around, purely so I don&#39;t have to keep track of whether I&#39;ve replaced them or not."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1437376945, "creation_date": 1437376945, "answer_id": 31510799, "question_id": 31510684, "link": "https://stackoverflow.com/questions/31510684/cannot-give-struct-as-a-type-to-create-a-2d-array-of-structs/31510799#31510799", "title": "Cannot give struct as a type to create a 2D array of structs", "body": "<p>This is vaguely akin to saying <code>let mut i = i32;</code>; it doesn't make any sense because you're trying to assign a type to a variable.  You need to actually provide a <em>value</em>, not a type.</p>\n\n<p>However, even that won't work because, given the definition above, <code>Node</code> isn't <code>Copy</code>, so the compiler can't construct the array anyway.</p>\n\n<p>Here's something that will work, but first, a few notes:</p>\n\n<ul>\n<li><p>Note that this is constructing the array on the stack.  If you make it too big, you run the risk of overflowing the stack and crashing.</p></li>\n<li><p><code>MAX_X</code> and <code>MAX_Y</code> <em>must</em> be constants; they cannot be variables.  Your casting of them (and lack of a complete example) makes me worry that you might be using variables..</p></li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    #[derive(Copy, Clone)]\n    struct Node {\n        x: i32,\n        y: i32,\n    }\n\n    const MAX_X: usize = 8;\n    const MAX_Y: usize = 16;\n\n    let mut map = [[Node { x: 0, y: 0 }; MAX_X]; MAX_Y];\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "is_accepted": false, "score": 1, "last_activity_date": 1437377277, "creation_date": 1437377277, "answer_id": 31510892, "question_id": 31510684, "link": "https://stackoverflow.com/questions/31510684/cannot-give-struct-as-a-type-to-create-a-2d-array-of-structs/31510892#31510892", "title": "Cannot give struct as a type to create a 2D array of structs", "body": "<blockquote>\n  <p><code>let mut map = [[Node; MAX_X as usize]; MAX_Y as usize];</code></p>\n</blockquote>\n\n<p>There are 2 issues</p>\n\n<ul>\n<li><p>In rust <code>:</code> is used to define the variable type and <code>=</code> to define its value. In your case you used <code>=</code> to define a type</p></li>\n<li><p>All variables need to be initialized (memory should be allocated). </p>\n\n<ul>\n<li><p>If <code>MAX_X</code> and <code>MAX_Y</code> values are dynamic then you don't have a choice but use <code>Vec&lt;_&gt;</code> instead of fixed-sized array</p></li>\n<li><p>If <code>MAX_X</code> and <code>MAX_Y</code> are constants then you can statically initialize <code>map</code> like this (note that data type is inferred): <code>let mut map = [[Node {x:0, y:0}, Node {x:0, y:0}, Node {x:0, y:0}], [Node {x:0, y:0}, Node {x:0, y:0}, Node {x:0, y:0}], [Node {x:0, y:0}, Node {x:0, y:0}, Node {x:0, y:0}]]</code></p></li>\n</ul></li>\n</ul>\n"}], "owner": {"reputation": 1000, "user_id": 2976057, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f806a0bb679720c8c0844bbffef18b06?s=128&d=identicon&r=PG&f=1", "display_name": "degs", "link": "https://stackoverflow.com/users/2976057/degs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 599, "favorite_count": 0, "accepted_answer_id": 31510799, "answer_count": 2, "score": 1, "last_activity_date": 1437400136, "creation_date": 1437376533, "last_edit_date": 1437400136, "question_id": 31510684, "link": "https://stackoverflow.com/questions/31510684/cannot-give-struct-as-a-type-to-create-a-2d-array-of-structs", "title": "Cannot give struct as a type to create a 2D array of structs", "body": "<p>I'm attempting to create a simple, fixed-size 2D array of Node structs with size [MAX_X, MAX_Y]. This:</p>\n\n<pre><code>let mut map = [[Node; MAX_X as usize]; MAX_Y as usize];\n\nstruct Node {\n    x: i32,\n    y: i32,\n}\n</code></pre>\n\n<p>gives the error message:</p>\n\n<pre><code>main.rs:12:21: 12:25 error: `Node` is a struct variant name, but this expression uses it like a function name [E0423]\nmain.rs:12     let mut map = [[Node; MAX_X as usize]; MAX_Y as usize];\n                               ^~~~\nmain.rs:12:21: 12:25 help: did you mean to write: `Node { /* fields */ }`?\n</code></pre>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1437365419, "post_id": 31508521, "comment_id": 50979884, "body": "Great answer, and much appreciated.  Just to reiterate you answer -- A const array is inlined (substituted in-place) like any other const, but rust will naturally optimize an indexed array literal by substituting it with the indexed value?  And although the latter optimization occurs, it&#39;s not formally defined as part of the spec?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 2, "creation_date": 1437375066, "post_id": 31508521, "comment_id": 50982725, "body": "@w.brian: I think the safest thing to say is that it <i>can</i> optimise it.  Like most optimisations, they might not happen for any number of reasons.  It&#39;s possible that it&#39;s just <i>so trivial</i> to do that LLVM does it even at very low optimisation levels.  But it might not; as far as I know, it&#39;s <i>not</i> guaranteed by the language."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1437363619, "creation_date": 1437363619, "answer_id": 31508521, "question_id": 31508450, "link": "https://stackoverflow.com/questions/31508450/how-is-a-const-array-inlined/31508521#31508521", "title": "How is a const array inlined?", "body": "<p>That depends.  The answer is \"all of the above, probably.\"  Let's modify your example a little:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const ARR: [i32; 4] = [10, 20, 30, 40];\n\n#[inline(never)] fn show(v: i32) { println!(\"{}\", v); }\n\nfn main() {\n    // is this \n    show(ARR[1]);\n\n    // the same as this?\n    show([10, 20, 30, 40][1]);\n\n    // or this?\n    show(20);\n}\n</code></pre>\n\n<p>Now, let's compile this down to LLVM IR and see what the <code>main</code> function looks like:</p>\n\n<pre class=\"lang-llvm prettyprint-override\"><code>define internal void @_ZN4main20hf87c9a461739c547ZaaE() unnamed_addr #4 {\nentry-block:\n  call void @_ZN4show20h659b6b1f4f7103c4naaE(i32 20)\n  call void @_ZN4show20h659b6b1f4f7103c4naaE(i32 20)\n  call void @_ZN4show20h659b6b1f4f7103c4naaE(i32 20)\n  ret void\n}\n</code></pre>\n\n<p>Three identical calls to the <code>show</code> function, each passing a constant <code>20</code>.  This isn't even with optimisations enabled!</p>\n\n<p>In terms of what the language guarantees, the first two calls to <code>show</code> are semantically identical.  Saying that a constant is \"inlined\" doesn't mean it automatically causes everything <em>around it</em> to be inlined, too; it just causes the value to be substituted in place.  However, due to Rust's aggressive constant folding and inlining, all three are equivalent <em>in practice</em>, <strong>in this specific case</strong>.</p>\n"}], "owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 714, "favorite_count": 0, "accepted_answer_id": 31508521, "answer_count": 1, "score": 4, "last_activity_date": 1437400251, "creation_date": 1437362994, "last_edit_date": 1437400251, "question_id": 31508450, "link": "https://stackoverflow.com/questions/31508450/how-is-a-const-array-inlined", "title": "How is a const array inlined?", "body": "<p>With regards to <code>const</code>, the <a href=\"https://doc.rust-lang.org/book/const-and-static.html\" rel=\"nofollow\">rust docs state</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>Constants live for the entire lifetime of a program. More specifically, constants in Rust have no fixed address in memory. <strong>This is because they\u2019re effectively inlined to each place that they\u2019re used</strong>. References to the same constant are not necessarily guaranteed to refer to the same memory address for this reason.</p>\n</blockquote>\n\n<p>So, I'm wondering how a const array is \"effectively inlined.\"  See my comments in the following snippet: </p>\n\n<pre><code>const ARR: [i32; 4] = [10, 20, 30, 40];\n\nfn main() {\n    // is this \n    println!(\"{}\", ARR[1]);\n\n    // the same as this?\n    println!(\"{}\", [10, 20, 30, 40][1]);\n\n    // or this?\n    println!(\"{}\", 20);\n}\n</code></pre>\n\n<p>I appreciate any clarification!</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437349644, "post_id": 31507090, "comment_id": 50976943, "body": "Did you try <code>return Err(..whatever..)</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1437400048, "last_edit_date": 1437400048, "creation_date": 1437350113, "answer_id": 31507194, "question_id": 31507090, "link": "https://stackoverflow.com/questions/31507090/return-from-function-upon-condition-met-in-map/31507194#31507194", "title": "Return from function upon condition met in map", "body": "<p>Two key pieces of information will be useful here:</p>\n\n<ol>\n<li>Iterators operate one item at a time, so iterator adaptors will only be executed while something is consuming the iterator.</li>\n<li><a href=\"http://doc.rust-lang.org/std/iter/trait.FromIterator.html\" rel=\"noreferrer\"><code>FromIterator</code></a> (which powers <code>Iterator::collect</code>) is implemented for <code>Result</code> as well.</li>\n</ol>\n\n<p>Since you didn't provide a <a href=\"/help/mcve\">MCVE</a>, I made up sample code that can actually compile:</p>\n\n<pre><code>fn foo(input: &amp;[u8]) -&gt; Result&lt;Vec&lt;u8&gt;, ()&gt; {\n    input.iter().map(|&amp;i| {\n        if i &gt; 127 {\n            Err(())\n        } else {\n            Ok(i + 1)\n        }\n    }).collect()\n}\n\nfn main() {\n    let a = foo(&amp;[1,2,3,4]);\n    let b = foo(&amp;[200,1,2,3]);\n    println!(\"{:?}\", a);\n    println!(\"{:?}\", b);\n}\n</code></pre>\n\n<p>If you stick a <code>println!</code> in the <code>map</code> body, you can see that no numbers are processed after the 200.</p>\n"}], "owner": {"reputation": 15257, "user_id": 1409312, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/4TCzB.jpg?s=128&g=1", "display_name": "Syntactic Fructose", "link": "https://stackoverflow.com/users/1409312/syntactic-fructose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1445, "favorite_count": 0, "accepted_answer_id": 31507194, "answer_count": 1, "score": 3, "last_activity_date": 1437400048, "creation_date": 1437349252, "last_edit_date": 1437356890, "question_id": 31507090, "link": "https://stackoverflow.com/questions/31507090/return-from-function-upon-condition-met-in-map", "title": "Return from function upon condition met in map", "body": "<p>Is there a way I can use map such that if a certain condition is met I can return an error? The reason is that i'm trying to implement the trait <code>FromStr</code> for my struct <code>BigNum</code>:</p>\n\n<pre><code>impl FromStr for BigNum {\n    fn from_str(s: &amp;str) -&gt; Result&lt;BigNum, BigNum::Err&gt; {\n        let filter_vec = t_num.chars().\n            map(|a| match a.to_digit(10) {\n                Some(x) =&gt; { x },\n                None    =&gt; { /* return from function with Err */ }\n            });                                                                                     \n    }\n}\n</code></pre>\n\n<p>Is this possible to do? Or should I simply iterate over the <code>chars()</code> myself and return an error upon reaching a <code>None</code>? Just wondering if there's an easy way to break out of <code>map</code> and return from the function </p>\n"}, {"tags": ["rust", "immutability"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1437324374, "post_id": 31503488, "comment_id": 50969882, "body": "Does the answer to <a href=\"http://stackoverflow.com/q/31503429/395760\">Why can I call File.take() on a reference?</a> resolve this or are you asking <i>why</i> <code>Read</code> is implemented on <code>&amp;File</code>?"}, {"owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "edited": false, "score": 1, "creation_date": 1437324815, "post_id": 31503488, "comment_id": 50970017, "body": "@delnan The question here is: why is <code>&amp;file</code> enough? One should expect <code>&amp;mut file</code> be required."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 1, "creation_date": 1437324884, "post_id": 31503488, "comment_id": 50970046, "body": "@delnan (I didn&#39;t ask the question, but) I don&#39;t think that answers this question. There must be something else going on. <code>read_to_end</code> should work on either <code>&amp;mut File</code> or <code>&amp;mut &amp;File</code>, but <code>(&amp;file)</code> is neither of those."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "reply_to_user": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 2, "creation_date": 1437325003, "post_id": 31503488, "comment_id": 50970078, "body": "@fjh: I believe <code>a.read_to_end(vec)</code> will call <code>Read::read_to_end(&amp;mut a, vec)</code>, i.e. the method already sees <code>&amp;mut &amp;file</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437325224, "post_id": 31503488, "comment_id": 50970141, "body": "@delnan the two questions sprang from the same source, but to have something useful to add, I&#39;m curious both &quot;why&quot; and &quot;how&quot; <code>Read</code> can be implemented on an immutable reference and I&#39;ve tweaked the question accordingly."}, {"owner": {"reputation": 286, "user_id": 2568597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3b01bc92654b164ac89aa8fb3537087b?s=128&d=identicon&r=PG&f=1", "display_name": "xophos", "link": "https://stackoverflow.com/users/2568597/xophos"}, "edited": false, "score": 0, "creation_date": 1437375533, "post_id": 31503488, "comment_id": 50982917, "body": "there is no such thing as immutable in Rust. &amp;mut just means, that you have exclusive access to a reference."}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "edited": false, "score": 4, "creation_date": 1437328964, "post_id": 31503946, "comment_id": 50971290, "body": "+1 for &quot;mutation [...]  is done by the operating system on its own data structures and not in your user-land rust code.&quot; I believed having an (immut) <code>&amp;File</code> meant that nothing could happen to your file; this answer show it&#39;s not the case, which is IMO counter-intuitive. Maybe this deserves a clarification in the docs."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "edited": false, "score": 1, "creation_date": 1437350453, "post_id": 31503946, "comment_id": 50977081, "body": "@mdup perhaps it&#39;s just best for us to think of <code>File</code> as having a <a href=\"http://doc.rust-lang.org/std/cell/index.html\" rel=\"nofollow noreferrer\">cell</a> of some kind."}, {"owner": {"reputation": 25688, "user_id": 172531, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/16b8a9971551c67422fea478a6e73bae?s=128&d=identicon&r=PG", "display_name": "sellibitze", "link": "https://stackoverflow.com/users/172531/sellibitze"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1437572547, "post_id": 31503946, "comment_id": 51085190, "body": "@Shepmaster: Yeah, it&#39;s like a file has its own built-in mutex. The OS takes care of its synchronization."}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 11, "last_activity_date": 1437327400, "last_edit_date": 1437327400, "creation_date": 1437327035, "answer_id": 31503946, "question_id": 31503488, "link": "https://stackoverflow.com/questions/31503488/why-is-it-possible-to-implement-read-on-an-immutable-reference-to-file/31503946#31503946", "title": "Why is it possible to implement Read on an immutable reference to File?", "body": "<p>As @kennytm pointed out, <code>a.read_to_end(vec)</code> is equivalent to <code>Read::read_to_end(&amp;mut a, vec)</code>, so <code>(&amp;file).read_to_end(vec)</code> expands to <code>Read::read_to_end(&amp;mut &amp;file, vec)</code>. In the latter expression, <code>&amp;file</code> is a new temporary value of type <code>&amp;File</code>. There is no problem with taking mutable references to an expression (e.g. <code>&amp;mut 42</code>). This is exactly what happens here. The fact that the expression is a reference to an immutable value doesn't matter because we cannot actually mutate the value through a <code>&amp;mut &amp;T</code>.</p>\n\n<p>Regarding the question why we don't need the <code>File</code> to be mutable: <code>File</code> is basically just a newtyped file descriptor, i.e. an index into an open-file table that is managed by the OS. <code>read</code> and friends will not change this descriptor at all, which is why the <code>File</code> does not need to be mutated. There is of course mutation going on, but that is done by the operating system on its own data structures and not in your user-land rust code.</p>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 861, "favorite_count": 1, "accepted_answer_id": 31503946, "answer_count": 1, "score": 10, "last_activity_date": 1437327400, "creation_date": 1437324156, "last_edit_date": 1495540817, "question_id": 31503488, "link": "https://stackoverflow.com/questions/31503488/why-is-it-possible-to-implement-read-on-an-immutable-reference-to-file", "title": "Why is it possible to implement Read on an immutable reference to File?", "body": "<p>If you check out the <a href=\"http://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\">docs for <code>Read</code></a>, most of the methods accept a <code>&amp;mut self</code>. This makes sense, as reading from something usually updates an internal offset so the next read returns different data. However, this compiles:</p>\n\n<pre><code>use std::io::Read;\nuse std::fs::File;\n\nfn main() {\n    let file = File::open(\"/etc/hosts\").unwrap();\n    let vec = &amp;mut Vec::new();\n    (&amp;file).read_to_end(vec).unwrap();\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<p>The file isn't mutable, but the data is certainly being read in. This seems incorrect to me. <a href=\"https://stackoverflow.com/q/31503429/155423\">It was pointed out that there is an <code>impl&lt;'a&gt; Read for &amp;'a File</code></a>, but the fact that an immutable instance is seemingly being mutated still seems odd.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437324503, "post_id": 31503501, "comment_id": 50969922, "body": "This also answers my other question: &quot;What is the point of those two <code>impl</code>s?&quot; I had no idea it worked that way. Thanks!"}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 5, "last_activity_date": 1437324260, "creation_date": 1437324260, "answer_id": 31503501, "question_id": 31503429, "link": "https://stackoverflow.com/questions/31503429/why-can-i-call-file-take-on-a-reference/31503501#31503501", "title": "Why can I call File.take() on a reference?", "body": "<p>The <code>take</code> method comes from the <code>Read</code> trait. That trait is implemented on <code>File</code>, so there is a method <code>File::take(self, u64) -&gt; Take&lt;Self&gt;</code>, but the trait is also implemented on <code>&amp;File</code> (the impl is even listed on the very page you link to). For that impl, the <code>Self</code> type is <code>&amp;File</code>, so <em>its</em> <code>take</code> method takes a reference.</p>\n"}], "owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "accepted_answer_id": 31503501, "answer_count": 1, "score": 4, "last_activity_date": 1437324260, "creation_date": 1437323798, "question_id": 31503429, "link": "https://stackoverflow.com/questions/31503429/why-can-i-call-file-take-on-a-reference", "title": "Why can I call File.take() on a reference?", "body": "<p>When I look at <a href=\"https://doc.rust-lang.org/nightly/std/fs/struct.File.html\" rel=\"nofollow\"><code>File</code>'s docs</a>, I see that the <code>take</code> method takes a <code>self</code>, not a <code>&amp;self</code>. But I'm still able to call the method on a borrowed reference:</p>\n\n<pre><code>fn foo(file: &amp;File) {\n    let _ = file.take(1); // why does this work?\n    println!(\"can still use the file: {:?}\", file);\n}\n</code></pre>\n\n<p>I thought a <code>self</code> passes ownership but I'm even able to use <code>file</code> after calling <code>take</code> so ownership clearly stays inside <code>foo</code>.</p>\n\n<p>If I do it myself on a custom struct with a method, it doesn't work:</p>\n\n<pre><code>struct Foo;\n\nimpl Foo {\n    fn foo(self: Foo) { }\n}\n\nfn main() {\n    let foo = &amp;Foo;\n    foo.foo(); // error: cannot move out of borrowed content\n}\n</code></pre>\n\n<p>which is fully expected.</p>\n\n<p>Likewise according to the docs, <code>File</code> does not implement any special traits as far as I can tell. What did get my attention is that <code>Read</code> has a <code>by_ref()</code> method but I don't call it yet everything still works.</p>\n\n<p>What's going on here? (using rustc 1.3.0-dev)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1437320114, "post_id": 31502793, "comment_id": 50968468, "body": "Does this answer your question: <a href=\"https://stackoverflow.com/questions/30418966/why-do-i-not-need-to-explicitly-lend-a-borrowed-mutable-variable\">Why do I not need to explicitly lend a borrowed, mutable variable?</a>"}, {"owner": {"reputation": 12441, "user_id": 645132, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3ce3855f059c1eea934e5316d5c22181?s=128&d=identicon&r=PG", "display_name": "agmcleod", "link": "https://stackoverflow.com/users/645132/agmcleod"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1437320410, "post_id": 31502793, "comment_id": 50968554, "body": "@DK it does actually :). Since one cannot pass a mutable variable as immutable, makes sense to omit the &amp;mut bit after the fact. Just didn&#39;t think about it as such."}], "owner": {"reputation": 12441, "user_id": 645132, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3ce3855f059c1eea934e5316d5c22181?s=128&d=identicon&r=PG", "display_name": "agmcleod", "link": "https://stackoverflow.com/users/645132/agmcleod"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 534, "favorite_count": 0, "closed_date": 1437322276, "answer_count": 0, "score": 0, "last_activity_date": 1437319538, "creation_date": 1437319538, "question_id": 31502793, "link": "https://stackoverflow.com/questions/31502793/rust-cannot-borrow-immutable-local-variable-as-mutable-however-it-is-defined-a", "closed_reason": "Duplicate", "title": "Rust cannot borrow immutable local variable as mutable. However, it is defined as mutable", "body": "<p>I'm using xml-rs to read an xml output from <a href=\"http://mapeditor.org\" rel=\"nofollow\">tiled</a> which is a 2d level/tile map editor for games.</p>\n\n<p>I have my parse method, where it all starts:</p>\n\n<pre><code>pub fn parse(path: String) {\n    let file = File::open(path).unwrap();\n    let file = BufReader::new(file);\n    let mut parser = EventReader::new(file);\n    let mut tilesets: Vec&lt;TileSet&gt; = vec![];\n\n    let mut tag_attributes: Vec&lt;OwnedAttribute&gt; = make_attributes();\n    let mut tag_name = String::from_str(\"\");\n\n    {\n        let event = parser.next();\n        match event {\n            XmlEvent::StartElement { name, attributes, .. } =&gt; {\n                tag_name = name.local_name;\n                tag_attributes = attributes;\n            }\n            XmlEvent::EndElement {name, .. } =&gt; {\n            }\n            XmlEvent::Error(e) =&gt; {\n                println!(\"Error: {}\", e);\n            }\n            _ =&gt; {}\n        }\n    }\n\n    if tag_name == \"tileset\" {\n        let tileset = next_tileset(&amp;mut parser, &amp;tag_attributes);\n        tilesets.push(tileset);\n    }\n\n    for tileset in tilesets {\n        println!(\"{}\", tileset);\n    }\n}\n</code></pre>\n\n<p>The parser variable is created as mutable, and passes to next_tileset. No complaints yet. Where it falls apart is in the next_tileset method:</p>\n\n<pre><code>fn next_tileset(parser: &amp;mut EventReader&lt;BufReader&lt;File&gt;&gt;, attributes: &amp;Vec&lt;OwnedAttribute&gt;) -&gt; TileSet {\n    let mut tileset = TileSet{ name: \"\".to_string(), imagesource: \"\".to_string(), imageheight: 0, imagewidth: 0, margin: 0, spacing: 0, tilewidth: 0, tileheight: 0, tiles: vec![] };\n    for attribute in attributes {\n        match attribute.name.local_name.as_ref() {\n            \"name\" =&gt; { tileset.name = attribute.value; },\n            \"margin\" =&gt; { tileset.margin = attribute_as_usize(&amp;attribute.value); },\n            \"spacing\" =&gt; { tileset.spacing = attribute_as_usize(&amp;attribute.value); },\n            \"tilewidth\" =&gt; { tileset.tilewidth = attribute_as_usize(&amp;attribute.value); },\n            \"tileheight\" =&gt; { tileset.tileheight = attribute_as_usize(&amp;attribute.value); },\n            _ =&gt; {}\n        }\n    }\n\n    loop {\n\n        let mut tag_name = String::from_str(\"\");\n        let mut tag_type: Tag;\n        let mut tag_attributes: Vec&lt;OwnedAttribute&gt; = Vec::&lt;OwnedAttribute&gt;::new();\n\n        {\n            let event = parser.next();\n            match event {\n                XmlEvent::StartElement { name, attributes, .. } =&gt; {\n                    tag_type = Tag::Open;\n                    tag_name = name.local_name;\n                    tag_attributes = attributes;\n                },\n                XmlEvent::EndElement { name, .. } =&gt; {\n                    tag_type = Tag::Close;\n                    tag_name = name.local_name;\n                },\n                _ =&gt; {\n                    tag_type = Tag::Neither;\n                }\n            }\n        }\n        match tag_type {\n            Tag::Open =&gt; {\n                if tag_name == \"image\" {\n                    parse_image(&amp;mut tileset, &amp;tag_attributes);\n                }\n                else if tag_name == \"tile\" {\n                    let tile = next_tile(&amp;mut parser, &amp;tag_attributes);\n                    tileset.tiles.push(tile);\n                }\n            },\n            Tag::Close =&gt; {\n                if tag_name == \"tileset\" {\n                    break;\n                }\n                else {\n                    continue;\n                }\n            },\n            Tag::Neither =&gt; {\n                continue;\n            }\n        }\n    }\n\n\n    return tileset;\n}\n</code></pre>\n\n<p>You'll see the match inside the loop, it passes a mutable reference of the parser to <code>next_tile</code>. So this is where it gives the error. Wondering if it has to do with the fact it's using a BufReader.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1739, "user_id": 903878, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/76e2W.jpg?s=128&g=1", "display_name": "Rich Henry", "link": "https://stackoverflow.com/users/903878/rich-henry"}, "edited": false, "score": 0, "creation_date": 1437346798, "post_id": 31506225, "comment_id": 50976365, "body": "There is no magic, copy ellision is common, it already happens in many C and C++ compilers. This is why i attached a Drop handler to my object, as I would expect to see it fire 2 times for each call if a copy was occurring. Unless I&#39;m mistaken, copy elision always happens in the example in my post."}, {"owner": {"reputation": 1492, "user_id": 1299804, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/eb046a5fc70918c5f769865d4266c563?s=128&d=identicon&r=PG", "display_name": "Austin B", "link": "https://stackoverflow.com/users/1299804/austin-b"}, "edited": false, "score": 0, "creation_date": 1437372735, "post_id": 31506225, "comment_id": 50981860, "body": "Just want to clarify: <code>Box::new()</code> isn&#39;t the &quot;old&quot; syntax. It&#39;s actually a function added to make it possible to construct a  <code>Box</code> on stable while the <code>box</code> syntax is feature-gated. If/when <code>box</code> gets stabilized, <code>Box::new()</code> will probably go away, or just remain as another way to get a <code>Box</code>."}, {"owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "reply_to_user": {"reputation": 1739, "user_id": 903878, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/76e2W.jpg?s=128&g=1", "display_name": "Rich Henry", "link": "https://stackoverflow.com/users/903878/rich-henry"}, "edited": false, "score": 0, "creation_date": 1437379693, "post_id": 31506225, "comment_id": 50984954, "body": "@RichHenry If a copy was occurring the compiler would have complained about the fact that <code>Dummy</code> doesn&#39;t implement the <code>Copy</code> trait. In case of <code>Box::new(make_dummy(3))</code> the value is moved (in the sense of transfer of ownership) into the box not copied, so you don&#39;t see extra drop logs. More, <code>Box::new</code> is simply a function the compiler cannot optimize the way I described above so there&#39;s still all the stuff moving around from the stack to the heap."}, {"owner": {"reputation": 1739, "user_id": 903878, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/76e2W.jpg?s=128&g=1", "display_name": "Rich Henry", "link": "https://stackoverflow.com/users/903878/rich-henry"}, "edited": false, "score": 0, "creation_date": 1437396701, "post_id": 31506225, "comment_id": 50995080, "body": "That does explain why I don&#39;t see the drops, as those are a function of compiler bookkeeping. But go back to the not-boxed versions -- I would expect that the compiler is doing return-val optimization and is allocating those values on the caller&#39;s stack -- not the callee&#39;s, because it sees that no one else could have a handle to the object because it&#39;s in return position. Perhaps the <code>box</code> syntax can further optimize that to place the object directly on the heap without touching the stack."}, {"owner": {"reputation": 1739, "user_id": 903878, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/76e2W.jpg?s=128&g=1", "display_name": "Rich Henry", "link": "https://stackoverflow.com/users/903878/rich-henry"}, "edited": false, "score": 0, "creation_date": 1437396805, "post_id": 31506225, "comment_id": 50995145, "body": "It would be awesome if someone wrote up some tips or a guide as to when real copy ellision should be expected to occur. C/C++ basically says &quot;it depends&quot; and you have to look at the generated code to be sure. It would be a shame if rust could do no better."}, {"owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "reply_to_user": {"reputation": 1739, "user_id": 903878, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/76e2W.jpg?s=128&g=1", "display_name": "Rich Henry", "link": "https://stackoverflow.com/users/903878/rich-henry"}, "edited": false, "score": 0, "creation_date": 1437397219, "post_id": 31506225, "comment_id": 50995469, "body": "@RichHenry Yes, the new box syntax does exactly that optimization, as I said above (the second &quot;2.&quot;) That was the &quot;compiler magic&quot; I was talking about."}], "tags": [], "owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "is_accepted": true, "score": 2, "last_activity_date": 1437342817, "last_edit_date": 1437342817, "creation_date": 1437342140, "answer_id": 31506225, "question_id": 31502597, "link": "https://stackoverflow.com/questions/31502597/do-values-in-return-position-always-get-allocated-in-the-parents-stack-frame-or/31506225#31506225", "title": "Do values in return position always get allocated in the parents stack frame or receiving Box?", "body": "<p>Maybe it's not clear to me what you don't understand. I think you understand, but maybe you don't know yet :D</p>\n\n<p>Normally, the return value of a function (<code>make_dummy</code> for example) is pushed on the stack. Now suppose you want the object on the heap instead. With the new box syntax the compiler can do some optimization if you want the object on the heap.</p>\n\n<p>Now let's take the example from the book.</p>\n\n<pre><code>let y: Box&lt;Dummy&gt; = box make_dummy(some_dummy);\n</code></pre>\n\n<p>You may think that in the above example the following happens:</p>\n\n<ol>\n<li>the return value from <code>make_dummy</code> is written into the stack (as normally)</li>\n<li>a box is allocated to contain a <code>Dummy</code> object</li>\n<li>the <code>Dummy</code> value on the stack is copied in the memory pointer by the box object.</li>\n</ol>\n\n<p>With the old <code>Box::new</code> mechanism this is exactly what would happen.\nInstead, thanks to the experimental box syntax, this happened:</p>\n\n<ol>\n<li>A box is allocated</li>\n<li>The pointer to that box is passed in some way to the <code>make_dummy</code> function (with some compiler magic), so the return value is written <strong>directly</strong> to the boxed memory [there's no extra copies involving the stack]</li>\n</ol>\n\n<p>I hope it's more clear now.</p>\n"}], "owner": {"reputation": 1739, "user_id": 903878, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/76e2W.jpg?s=128&g=1", "display_name": "Rich Henry", "link": "https://stackoverflow.com/users/903878/rich-henry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 207, "favorite_count": 1, "accepted_answer_id": 31506225, "answer_count": 1, "score": 7, "last_activity_date": 1437419894, "creation_date": 1437318270, "last_edit_date": 1495540686, "question_id": 31502597, "link": "https://stackoverflow.com/questions/31502597/do-values-in-return-position-always-get-allocated-in-the-parents-stack-frame-or", "title": "Do values in return position always get allocated in the parents stack frame or receiving Box?", "body": "<p>I was trying to understand how structs behave when returned from methods. There is a section in the nightlies section of the \"Rust Book\" that said if you used the syntax...</p>\n\n<pre><code>let x = box i_return_a_struct();\n</code></pre>\n\n<p>.. that there wouldn't be a copy, therefore there is no need to return a pointer. But when I started playing with it, it appears that the <code>box</code> is not needed, unless you need the value to exist on the heap.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Dummy {\n    data: i64,\n}\n\nimpl Drop for Dummy {\n    fn drop(&amp;mut self) {\n        println!(\"{:?} is going out of scope\", self as *const Dummy);\n    }\n}\n\nfn make_dummy(i: i64) -&gt; Dummy {\n    Dummy { data: i }\n}\n\nfn main() {\n    {\n        let i = 15i32;\n        println!(\"{:?} is a variable on the stack frame\", &amp;i as *const i32);\n\n        let dummy1 = make_dummy(1);\n        println!(\"{:?} was returned and is being used\", &amp;dummy1 as *const Dummy);\n        let dummy2 = make_dummy(2);\n        println!(\"{:?} was returned and is being used\", &amp;dummy2 as *const Dummy);\n\n        let dummy3 = Box::new(make_dummy(3));\n        println!(\"{:?} box was returned and is being used\", &amp;(*dummy3) as *const Dummy);\n        let dummy4 = Box::new(make_dummy(4));\n        println!(\"{:?} box was returned and is being used\", &amp;(*dummy4) as *const Dummy);\n    }\n    println!(\"Leaving main\");\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>0x23fb94 is a variable on the stack frame\n0x23faf8 was returned and is being used\n0x23fa50 was returned and is being used\n0x2825030 box was returned and is being used\n0x2825040 box was returned and is being used\n0x2825040 is going out of scope\n0x2825030 is going out of scope\n0x23fa50 is going out of scope\n0x23faf8 is going out of scope\nLeaving main\n</code></pre>\n\n<p>Do values/structs in return position always get allocated in the parents stack frame or receiving box?</p>\n\n<p>EDIT: PS - is there any guidance in the docs for as to when copy elision will occur in general?</p>\n\n<p>EDIT: Beyond the accepted solution, the following Q+A was enlightening: <a href=\"https://stackoverflow.com/questions/30288782/what-are-move-semantics-exactly\">What are move semantics exactly?</a> Clarified many points for me.</p>\n"}, {"tags": ["io", "rust"], "answers": [{"comments": [{"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437315860, "post_id": 31502157, "comment_id": 50967158, "body": "I have thought about something like that but isn&#39;t that rather inefficient? It looks like allocation of the <code>Vec</code> changes from O(1)ish to O(n)."}, {"owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "reply_to_user": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437316358, "post_id": 31502157, "comment_id": 50967311, "body": "Sure, but you&#39;re going O(n) anyway when filling the vector, so it&#39;s a matter of <code>2n</code> vs. <code>n</code>, which is not <i>that</i> bad. I would be more worried about the check <code>count == length</code> which is avoided in the 2nd version (see edit)."}, {"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437316607, "post_id": 31502157, "comment_id": 50967386, "body": "I guess the question boiled down to &quot;how do I create a <code>Vec</code> with a particular length`. When I think about it, higher-level languages that shield the developer from this probably do this behind the scenes, too. Otherwise I&#39;m aware of error handling and checking the number of bytes actually read. I just left it out for brevity. Thanks. :)"}, {"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437316785, "post_id": 31502157, "comment_id": 50967437, "body": "Your solution with <code>bytes()</code> actually has the same problem as my <code>take()</code>: It consumes the <code>file</code> but I only have a borrowed mutable reference to the file so this doesn&#39;t work. - Ok, I have no idea what&#39;s going on. It does work with a reference to the file but not if I have a reference to a struct that contains the file."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437322970, "post_id": 31502157, "comment_id": 50969432, "body": "@musiKk <i>&quot;It looks like allocation of the Vec&quot;</i> looks can be deceiving, and Rust / LLVM do an amazing job of optimizing iterators. You need to look at assembly to actually know how much is allocated. I&#39;ll point to <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.size_hint\" rel=\"nofollow noreferrer\"><code>Iterator::size_hint</code></a> as a concrete example of how it can be more efficient as well."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1439588103, "post_id": 31502157, "comment_id": 51940460, "body": "Please use <code>vec![0u8; length]</code> to build the vector, it&#39;s shorter, performs better, and should be the idiom."}], "tags": [], "owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "is_accepted": true, "score": 2, "last_activity_date": 1439590244, "last_edit_date": 1439590244, "creation_date": 1437315540, "answer_id": 31502157, "question_id": 31501921, "link": "https://stackoverflow.com/questions/31501921/read-an-arbitrary-number-of-bytes-from-type-implementing-read/31502157#31502157", "title": "Read an arbitrary number of bytes from type implementing Read", "body": "<h3>1. Fill-this-vector version</h3>\n\n<p>Your first solution is close to work. You identified the problem but did not try to solve it! The problem is that whatever the capacity of the vector, it is still empty (<code>vec.len() == 0</code>). Instead, you could actually fill it with empty elements, such as:</p>\n\n<pre><code>let mut vec = vec![0u8; length];\n</code></pre>\n\n<p>The following full code works:</p>\n\n<pre><code>#![feature(convert)] // needed for `as_mut_slice()` as of 2015-07-19\n\nuse std::fs::File;\nuse std::io::Read;\n\nfn main() {\n    let mut file = File::open(\"/usr/share/dict/words\").unwrap();\n    let length: usize = 100;\n    let mut vec = vec![0u8; length];\n    let count = file.read(vec.as_mut_slice()).unwrap();\n    println!(\"read {} bytes.\", count);\n    println!(\"vec = {:?}\", vec);\n}\n</code></pre>\n\n<p>Of course, you still have to check whether <code>count == length</code>, and read more data into the buffer if that's not the case.</p>\n\n<hr>\n\n<h3>2. Iterator version</h3>\n\n<p>Your second solution is better because you won't have to check how many bytes have been read, and you won't have to re-read in case <code>count != length</code>. You need to use the <code>bytes()</code> function on the <code>Read</code> trait (implemented by <code>File</code>). This transform the file into a stream (i.e an iterator). Because errors can still happen, you don't get an <code>Iterator&lt;Item=u8&gt;</code> but an <code>Iterator&lt;Item=Result&lt;u8, R::Err&gt;&gt;</code>. Hence you need to deal with failures explicitly within the iterator. We're going to use <code>unwrap()</code> here for simplicity:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::Read;\n\nfn main() {\n    let file = File::open(\"/usr/share/dict/words\").unwrap();\n    let length: usize = 100;\n    let vec: Vec&lt;u8&gt; = file\n        .bytes()\n        .take(length)\n        .map(|r: Result&lt;u8, _&gt;| r.unwrap()) // or deal explicitly with failure!\n        .collect();\n    println!(\"vec = {:?}\", vec);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437320908, "post_id": 31502653, "comment_id": 50968708, "body": "This is very interesting. For now I went with <code>file.take(length).read_to_end(vec)</code>. I had a problem with a move out of a borrowed struct that I now managed to fix. That&#39;s why I dismissed this solution in my question."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 1, "last_activity_date": 1437320590, "last_edit_date": 1437320590, "creation_date": 1437318605, "answer_id": 31502653, "question_id": 31501921, "link": "https://stackoverflow.com/questions/31501921/read-an-arbitrary-number-of-bytes-from-type-implementing-read/31502653#31502653", "title": "Read an arbitrary number of bytes from type implementing Read", "body": "<p>You can always use a bit of <code>unsafe</code> to create a vector of uninitialized memory. It is perfectly safe to do with primitive types:</p>\n\n<pre><code>let mut v: Vec&lt;u8&gt; = Vec::with_capacity(length);\nunsafe { v.set_len(length); }\nlet count = file.read(vec.as_mut_slice()).unwrap();\n</code></pre>\n\n<p>This way, <code>vec.len()</code> will be set to its capacity, and all bytes in it will be uninitialized (likely zeros, but possibly some garbage). This way you can avoid zeroing the memory, which is pretty safe for primitive types.</p>\n\n<p>Note that <code>read()</code> method on <code>Read</code> is not guaranteed to fill the whole slice. It is possible for it to return with number of bytes less than the slice length. There are several RFCs on adding methods to fill this gap, for example, <a href=\"https://github.com/rust-lang/rfcs/pull/980\" rel=\"nofollow\">this</a> one.</p>\n"}, {"comments": [{"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437323059, "post_id": 31503269, "comment_id": 50969472, "body": "I found out I don&#39;t even have to call <code>by_ref()</code>. Rust seems to do it automatically on a <code>&amp;File</code>, it also doesn&#39;t seem to be necessary to be mutable. This confuses me greatly! Is <code>by_ref()</code> some sort of magic method?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437323651, "post_id": 31503269, "comment_id": 50969651, "body": "@musiKk No, it is not magic, it&#39;s actually extremely simple, <a href=\"https://github.com/rust-lang/rust/blob/cb87ea80a6f3411c889f9a48b65724b32659c171/src/libstd/io/mod.rs#L352-L353\" rel=\"nofollow noreferrer\">its implementation</a> is one line and the body is one keyword. The fact that a reference works seems... incorrect to me. I might have to ask my own question!"}, {"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437323680, "post_id": 31503269, "comment_id": 50969661, "body": "Don&#39;t sweat it, <a href=\"http://stackoverflow.com/questions/31503429/why-can-i-call-file-take-on-a-reference\">I&#39;m done with one of my own</a>. ;)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1437322728, "creation_date": 1437322728, "answer_id": 31503269, "question_id": 31501921, "link": "https://stackoverflow.com/questions/31501921/read-an-arbitrary-number-of-bytes-from-type-implementing-read/31503269#31503269", "title": "Read an arbitrary number of bytes from type implementing Read", "body": "<p>Like the Iterator adaptors, the IO adaptors take <code>self</code> by value to be as efficient as possible. Also like the Iterator adaptors, a mutable reference to a <code>Read</code> is also a <code>Read</code>. </p>\n\n<p>To solve your problem, you just need <a href=\"http://doc.rust-lang.org/std/io/trait.Read.html#method.by_ref\" rel=\"noreferrer\"><code>Read::by_ref</code></a>:</p>\n\n<pre><code>use std::io::Read;\nuse std::fs::File;\n\nfn main() {\n    let mut file = File::open(\"/etc/hosts\").unwrap();\n    let length = 5;\n\n    let mut vec = Vec::with_capacity(length);\n    file.by_ref().take(length as u64).read_to_end(&amp;mut vec).unwrap();\n\n    let mut the_rest = Vec::new();\n    file.read_to_end(&amp;mut the_rest).unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1976, "favorite_count": 1, "accepted_answer_id": 31502157, "answer_count": 3, "score": 5, "last_activity_date": 1439590244, "creation_date": 1437313777, "last_edit_date": 1437322769, "question_id": 31501921, "link": "https://stackoverflow.com/questions/31501921/read-an-arbitrary-number-of-bytes-from-type-implementing-read", "title": "Read an arbitrary number of bytes from type implementing Read", "body": "<p>I have something that is <code>Read</code>; currently it's a <code>File</code>. I want to read a number of bytes from it that is only known at runtime (length prefix in a binary data structure).</p>\n\n<p>So I tried this:</p>\n\n<pre><code>let mut vec = Vec::with_capacity(length);\nlet count = file.read(vec.as_mut_slice()).unwrap();\n</code></pre>\n\n<p>but <code>count</code> is zero because <code>vec.as_mut_slice().len()</code> is zero as well.</p>\n\n<p><code>[0u8;length]</code> of course doesn't work because the size must be known at compile time.</p>\n\n<p>I wanted to do</p>\n\n<pre><code>let mut vec = Vec::with_capacity(length);\nlet count = file.take(length).read_to_end(vec).unwrap();\n</code></pre>\n\n<p>but <code>take</code>'s receiver parameter is a <code>T</code> and I only have <code>&amp;mut T</code> (and I'm not really sure why it's needed anyway).</p>\n\n<p>I guess I can replace <code>File</code> with <code>BufReader</code> and dance around with <code>fill_buf</code> and <code>consume</code> which sounds complicated enough but I still wonder: Have I overlooked something?</p>\n"}, {"tags": ["ruby", "rust", "ffi"], "comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 1, "creation_date": 1437308789, "post_id": 31498994, "comment_id": 50965233, "body": "You&#39;ll need <code>repr(C)</code> on that <code>struct</code> if it&#39;s used across the boundary at all"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1437323016, "post_id": 31498994, "comment_id": 50969456, "body": "You may want to read <a href=\"http://jakegoulding.com/rust-ffi-omnibus/\" rel=\"nofollow noreferrer\"><i>The Rust FFI Omnibus</i></a> and suggest improvements if they are missing."}], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 3, "last_activity_date": 1437298763, "creation_date": 1437298763, "answer_id": 31499856, "question_id": 31498994, "link": "https://stackoverflow.com/questions/31498994/return-mutable-rust-struct-from-ruby-ffi-struct/31499856#31499856", "title": "Return Mutable Rust struct from Ruby FFI struct", "body": "<p>Your code does not work because you're trying to return a reference to a <em>local variable</em>. When your function returns, the local variable will be destroyed, so the reference would became dangling if Rust didn't forbid it.</p>\n\n<p>I don't know exact details of your FFI interface, but it's very likely that returning the struct by value will work for you:</p>\n\n<pre><code>#[no_mangle]\npub extern fn add_one_to_vals(numbers: TwoNumbers) -&gt; TwoNumbers {\n    numbers.plus_one_to_each();\n    numbers\n}\n</code></pre>\n"}], "owner": {"reputation": 642, "user_id": 2626490, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/7c9fda048420a5139f7ed90cc03e708a?s=128&d=identicon&r=PG", "display_name": "mpiccolo", "link": "https://stackoverflow.com/users/2626490/mpiccolo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1437298763, "creation_date": 1437291379, "question_id": 31498994, "link": "https://stackoverflow.com/questions/31498994/return-mutable-rust-struct-from-ruby-ffi-struct", "title": "Return Mutable Rust struct from Ruby FFI struct", "body": "<p>I am trying to passing in a FFI struct into rust from a Ruby module, mutating the struct and passing back the struct to the ruby module.</p>\n\n<p>What is the proper way to handle the lifetime in this scenario?</p>\n\n<p>I am running into an lifetime error:</p>\n\n<pre><code>src/lib.rs:20:55: 20:70 error: missing lifetime specifier [E0106]\nsrc/lib.rs:20 pub extern fn add_one_to_vals(numbers: TwoNumbers) -&gt; &amp;mut TwoNumbers {\n                                                                    ^~~~~~~~~~~~~~~\nsrc/lib.rs:20:55: 20:70 help: run `rustc --explain E0106` to see a detailed explanation\nsrc/lib.rs:20:55: 20:70 help: this function's return type contains a borrowed value, but the signature does not say which one of `numbers`'s 0 elided lifetimes it is borrowed from\n</code></pre>\n\n<p>Rust code:</p>\n\n<pre><code>pub struct TwoNumbers {\n    first: i32,\n    second: i32,\n}\n\nimpl TwoNumbers {\n    fn plus_one_to_each(&amp;mut self) -&gt; &amp;mut TwoNumbers {\n        self.first = self.first + 1;\n        self.first = self.second + 1;\n        self\n    }\n}\n\n#[no_mangle]\npub extern fn add_one_to_vals(numbers: TwoNumbers) -&gt; &amp;mut TwoNumbers {\n   numbers.plus_one_to_each()\n}\n</code></pre>\n"}, {"tags": ["vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1071, "user_id": 241993, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/zfpeC.jpg?s=128&g=1", "display_name": "Mohamed Bana", "link": "https://stackoverflow.com/users/241993/mohamed-bana"}, "edited": false, "score": 0, "creation_date": 1559565871, "post_id": 31497621, "comment_id": 99449757, "body": "Superb. Thank you."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 7, "last_activity_date": 1437275154, "creation_date": 1437275154, "answer_id": 31497621, "question_id": 31497584, "link": "https://stackoverflow.com/questions/31497584/how-can-i-wrap-another-type-and-add-fields-and-methods-to-it/31497621#31497621", "title": "How can I wrap another type and add fields and methods to it?", "body": "<p>You can use <a href=\"http://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code></a> and <a href=\"http://doc.rust-lang.org/std/ops/trait.DerefMut.html\" rel=\"noreferrer\"><code>DerefMut</code></a>, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::{Deref, DerefMut};\n\nstruct Glyph;\n\nstruct Glyphs(Vec&lt;Glyph&gt;);\n\nimpl Glyphs {\n    fn new() -&gt; Self {\n        Glyphs(vec![])\n    }\n}\n\nimpl Deref for Glyphs {\n    type Target = Vec&lt;Glyph&gt;;\n    fn deref(&amp;self) -&gt; &amp;Vec&lt;Glyph&gt; { &amp;self.0 }\n}\n\nimpl DerefMut for Glyphs {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut Vec&lt;Glyph&gt; { &amp;mut self.0 }\n}\n\nfn main() {\n    let mut gs = Glyphs::new();\n    gs.push(Glyph);\n    gs.push(Glyph);\n    println!(\"gs.len: {}\", gs.len());\n}\n</code></pre>\n\n<p>Note that this <em>is not</em> inheritance.  A big limitation is that you absolutely cannot prevent someone from calling any of <code>Vec</code>'s methods, since they can just manually deref a <code>Glyphs</code> into a <code>Vec&lt;Glyph&gt;</code>.  You can \"override\" methods by defining them on <code>Glyphs</code>, but again, someone can just go behind your back by manually dereferencing a <code>Glyphs</code>.</p>\n\n<p>You may also wish to read the <a href=\"http://doc.rust-lang.org/book/deref-coercions.html\" rel=\"noreferrer\"><code>Deref</code> coercions chapter of the Rust Book</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1437323123, "post_id": 31497642, "comment_id": 50969489, "body": "This doesn&#39;t actually answer the question as posed, unfortunately: <i>as well as <b>fields</b> and methods proper to itself</i>."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 6, "last_activity_date": 1437337981, "last_edit_date": 1437337981, "creation_date": 1437275488, "answer_id": 31497642, "question_id": 31497584, "link": "https://stackoverflow.com/questions/31497584/how-can-i-wrap-another-type-and-add-fields-and-methods-to-it/31497642#31497642", "title": "How can I wrap another type and add fields and methods to it?", "body": "<p>You can define a type alias (i.e. a synonym):</p>\n\n<pre><code>type Glyphs = Vec&lt;Glyph&gt;;\n</code></pre>\n\n<p>It is not a distinct type, so you can pass a <code>Glyphs</code> to any function that expects a compatible <code>Vec</code>, including generic functions.</p>\n\n<p>You will not be able to add fields or inherent methods to this type directly. What you can do, though, is define an extension trait (i.e. a trait that exists for the sole purpose of adding methods to a type you didn't define; there's no special syntax for this) and have <code>Glyphs</code> implement it. If you use modules, you'll have to import the trait with <code>use</code> to bring the methods into scope.</p>\n\n<pre><code>trait GlyphsExt {\n    fn x(&amp;self); // define extension method\n}\n\nimpl GlyphsExt for Glyphs {\n    fn x(&amp;self) {\n        // implement method here\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": false, "score": 2, "last_activity_date": 1437288234, "creation_date": 1437288234, "answer_id": 31498668, "question_id": 31497584, "link": "https://stackoverflow.com/questions/31497584/how-can-i-wrap-another-type-and-add-fields-and-methods-to-it/31498668#31498668", "title": "How can I wrap another type and add fields and methods to it?", "body": "<p>In my opinion, you shouldn't use Deref and DerefMut to emulate some aspects of inheritance. They exist for writing custom pointer types.</p>\n\n<p>When you're writing a wrapper struct like this, you typically only need some of <code>Vec</code>s functionality. There may also be some invariants that need to hold. By implementing <code>Deref</code> and <code>DerefMut</code> you're making your <code>Glyphs</code> harder to reason about and easier to misuse. Avoiding to expose implementation details is generally also preferable. </p>\n\n<p>So the solution would be to implement the functions you need on <code>Glyphs</code>. These are probably only a few. And if you really need all or most of <code>Vec</code>s functions and trait implementations, then a wrapper struct wasn't the right choice to begin with.</p>\n"}], "owner": {"reputation": 702, "user_id": 152244, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/633a7db9061befd7f459e36b46db90ea?s=128&d=identicon&r=PG", "display_name": "Literal", "link": "https://stackoverflow.com/users/152244/literal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1701, "favorite_count": 0, "accepted_answer_id": 31497642, "answer_count": 3, "score": 2, "last_activity_date": 1437337981, "creation_date": 1437274674, "last_edit_date": 1437323065, "question_id": 31497584, "link": "https://stackoverflow.com/questions/31497584/how-can-i-wrap-another-type-and-add-fields-and-methods-to-it", "title": "How can I wrap another type and add fields and methods to it?", "body": "<p>I know inheritance is a bad word in the Rust world, however there must be some way, given the following struct</p>\n\n<pre><code>struct Glyph {\n    // Fields\n}\n</code></pre>\n\n<p>to have a new <code>Glyphs</code> struct that is a wrapper for <code>Vec&lt;Glyph&gt;</code> methods (<code>push</code>, etc.) as well as fields and methods proper to itself?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 6, "last_activity_date": 1604011689, "last_edit_date": 1604011689, "creation_date": 1437273499, "answer_id": 31497485, "question_id": 31497422, "link": "https://stackoverflow.com/questions/31497422/filter-all-non-integers-from-string-and-yield-vector/31497485#31497485", "title": "Filter all non-integers from string and yield vector", "body": "<p><code>char</code> has a <a href=\"http://doc.rust-lang.org/stable/std/primitive.char.html#method.to_digit\" rel=\"nofollow noreferrer\"><code>to_digit</code></a> method that converts a character to the corresponding digit.</p>\n<pre><code>fn parse_digits(t_num: &amp;str) -&gt; Vec&lt;u32&gt; {\n    t_num\n        .chars()\n        .filter_map(|a| a.to_digit(10))\n        .collect()\n}\n\nfn main() {\n    println!(&quot;{:?}&quot;, parse_digits(&quot;123asd456&quot;)); // prints [1, 2, 3, 4, 5, 6]\n}\n</code></pre>\n"}], "owner": {"reputation": 15257, "user_id": 1409312, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/4TCzB.jpg?s=128&g=1", "display_name": "Syntactic Fructose", "link": "https://stackoverflow.com/users/1409312/syntactic-fructose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1643, "favorite_count": 0, "accepted_answer_id": 31497485, "answer_count": 1, "score": 3, "last_activity_date": 1604011689, "creation_date": 1437272757, "question_id": 31497422, "link": "https://stackoverflow.com/questions/31497422/filter-all-non-integers-from-string-and-yield-vector", "title": "Filter all non-integers from string and yield vector", "body": "<p>I have an <code>Into&lt;String&gt;</code> variable called <code>t_num</code>. I'm attempting to filter all non-integers from the string and return a <code>Vec&lt;usize&gt;</code> containing a vector of all integers in the string. Here's my attempt: </p>\n\n<pre><code>     let filter_vec = t_num.into().chars().\n         filter(|a| a.parse::&lt;usize&gt;()).                                                                                      \n         collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>The problem is i'm getting the error </p>\n\n<pre><code>error: no method named `parse` found for type `&amp;char` in the current scope\n       filter(|a| a.parse::&lt;usize&gt;()).\n</code></pre>\n\n<p>so the problem is that char doesn't implement <code>parse</code>, is there a method similar to <code>parse</code> implemented for <code>char</code>?</p>\n"}, {"tags": ["c", "gcc", "rust", "libc", "eabi"], "comments": [{"owner": {"reputation": 11381, "user_id": 4774918, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kQQAl.jpg?s=128&g=1", "display_name": "too honest for this site", "link": "https://stackoverflow.com/users/4774918/too-honest-for-this-site"}, "edited": false, "score": 1, "creation_date": 1437244553, "post_id": 31494087, "comment_id": 50952086, "body": "Looks like a missmatch in the ABIs. I&#39;d check if they are compatible or need wrappers. The symbols sems to be some libgcc special versions of <code>memclr</code> (which is a special variant of <code>memset</code>) and <code>memcpy</code>"}, {"owner": {"reputation": 703, "user_id": 768314, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/230551a8d85da9de1b841826da1fd065?s=128&d=identicon&r=PG", "display_name": "Jambaman", "link": "https://stackoverflow.com/users/768314/jambaman"}, "reply_to_user": {"reputation": 11381, "user_id": 4774918, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kQQAl.jpg?s=128&g=1", "display_name": "too honest for this site", "link": "https://stackoverflow.com/users/4774918/too-honest-for-this-site"}, "edited": false, "score": 0, "creation_date": 1437371083, "post_id": 31494087, "comment_id": 50981381, "body": "As a newbie to this, could you point me in the direction to look for checking this?"}, {"owner": {"reputation": 11381, "user_id": 4774918, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/kQQAl.jpg?s=128&g=1", "display_name": "too honest for this site", "link": "https://stackoverflow.com/users/4774918/too-honest-for-this-site"}, "edited": false, "score": 1, "creation_date": 1437394783, "post_id": 31494087, "comment_id": 50993653, "body": "That depends on the OS and CPU and compiler settings. For ARM, current PCS is AAPCS and the ABI specs (free download), but gcc allows for some others, too. That is valid for C and some other languages, but no idea about Rust."}, {"owner": {"reputation": 1931, "user_id": 1798856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/929787e84f3b059ff4e1c067488bbfb3?s=128&d=identicon&r=PG", "display_name": "Alister Lee", "link": "https://stackoverflow.com/users/1798856/alister-lee"}, "edited": false, "score": 0, "creation_date": 1448366696, "post_id": 31494087, "comment_id": 55549253, "body": "I&#39;m working on this issue now. Did you solve it? I think we need to see a bit more of your code - cargo.toml, makefile, etc. My theory is that the arm-none-eabi tools work slightly differently than thumbv7. There are asm versions of these routines (builtins for llvm) out there."}, {"owner": {"reputation": 703, "user_id": 768314, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/230551a8d85da9de1b841826da1fd065?s=128&d=identicon&r=PG", "display_name": "Jambaman", "link": "https://stackoverflow.com/users/768314/jambaman"}, "edited": false, "score": 0, "creation_date": 1448455289, "post_id": 31494087, "comment_id": 55594575, "body": "No, didn&#39;t solve it. The code is here: <a href=\"https://github.com/halseth/embedded_rust\" rel=\"nofollow noreferrer\">github.com/halseth/embedded_rust</a> The architecture I use is ARM Cortex-M0, which is thumbv6m I believe."}, {"owner": {"reputation": 703, "user_id": 768314, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/230551a8d85da9de1b841826da1fd065?s=128&d=identicon&r=PG", "display_name": "Jambaman", "link": "https://stackoverflow.com/users/768314/jambaman"}, "edited": false, "score": 0, "creation_date": 1448456285, "post_id": 31494087, "comment_id": 55595288, "body": "To add to that. That code repo is just used to build the Rust code, into object files. I end up with sha256.o, but the problem arises when I try to link this into my C-project. Cannot provide the whole Makefile for that link process unfortunately, as it has some proprietary code, but can provide snippets if I know what to look for."}], "answers": [{"comments": [{"owner": {"reputation": 703, "user_id": 768314, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/230551a8d85da9de1b841826da1fd065?s=128&d=identicon&r=PG", "display_name": "Jambaman", "link": "https://stackoverflow.com/users/768314/jambaman"}, "edited": false, "score": 0, "creation_date": 1450217623, "post_id": 34288242, "comment_id": 56342814, "body": "I&#39;m gonna mark this as the accepted answer since it explains why I ran into problems. Definitely let me know if you come up with a complete solution! Thanks."}, {"owner": {"reputation": 1931, "user_id": 1798856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/929787e84f3b059ff4e1c067488bbfb3?s=128&d=identicon&r=PG", "display_name": "Alister Lee", "link": "https://stackoverflow.com/users/1798856/alister-lee"}, "reply_to_user": {"reputation": 703, "user_id": 768314, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/230551a8d85da9de1b841826da1fd065?s=128&d=identicon&r=PG", "display_name": "Jambaman", "link": "https://stackoverflow.com/users/768314/jambaman"}, "edited": false, "score": 0, "creation_date": 1450255492, "post_id": 34288242, "comment_id": 56356371, "body": "It&#39;s not going well, but I am a rust/llvm/os novice."}, {"owner": {"reputation": 1931, "user_id": 1798856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/929787e84f3b059ff4e1c067488bbfb3?s=128&d=identicon&r=PG", "display_name": "Alister Lee", "link": "https://stackoverflow.com/users/1798856/alister-lee"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1450256338, "post_id": 34288242, "comment_id": 56356891, "body": "Thanks to @Shepmaster for some quality edits, and raising the bar."}], "tags": [], "owner": {"reputation": 1931, "user_id": 1798856, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/929787e84f3b059ff4e1c067488bbfb3?s=128&d=identicon&r=PG", "display_name": "Alister Lee", "link": "https://stackoverflow.com/users/1798856/alister-lee"}, "is_accepted": true, "score": 6, "last_activity_date": 1450354083, "last_edit_date": 1450354083, "creation_date": 1450179487, "answer_id": 34288242, "question_id": 31494087, "link": "https://stackoverflow.com/questions/31494087/linking-rust-with-c-undefined-reference-to-aeabi-functions/34288242#34288242", "title": "Linking Rust with C: undefined reference to &#39;__aeabi&#39; functions", "body": "<p>The problem is that LLVM, which your <code>rustc</code> (and possibly your <code>cc</code>) is built on, references compiler <em>builtins</em> or sometimes <em>intrinsics</em>, which are small helper routines that the compiler assumes will have been optimised for the target platform.</p>\n\n<p>Usually they come with the compiler, so you'll see a lot of <a href=\"http://wiki.osdev.org/ARM_Overview#Missing_Division_Functions_.28_aeabi_uidivmod.2C_aeabi_idiv.29_.2F_No_Division_Support\" rel=\"nofollow\">commentary</a> out on the 'Net saying \"why don't you link with <code>libgcc.a</code>\". This seems unhelpful for bare-metal projects, and in fact won't work, because LLVM calls slightly different builtins than gcc.</p>\n\n<p>You can provide implementations for these routines, and a true bare metal OS should probably spend about five minutes contemplating it. You can write them in assembly or Rust: </p>\n\n<pre><code>// Use this at your peril\n#[no_mangle]\npub unsafe extern fn __aeabi_memclr4(s: *mut u8, n: usize) -&gt; *mut u8 {\n    let mut i = 0;\n    while i &lt; n {\n        *s.offset(i as isize) = 0u8;\n        i += 1;\n    }\n    return s;\n} \n</code></pre>\n\n<p>After you've finished dreaming, you set about compiling <a href=\"http://compiler-rt.llvm.org/\" rel=\"nofollow\">llvm's <code>compiler-rt</code></a> (equivalent to libgcc.a) for your target and you link that.</p>\n\n<p>Until <code>rustc</code> and <code>multirust</code> increase their support for <a href=\"https://github.com/brson/multirust/issues/20\" rel=\"nofollow\">installing extra targets for cross-compilation</a>, you have to download the Rust source and try to build the cross-compiler and libs (including <code>compiler-rt</code>) yourself.</p>\n\n<p>Currently <code>arm-none-eabi</code> is not a supported target, and building is rough for a list of reasons, including that <code>arm-none-eabi-gcc</code> won't link an executable, which Rust's jemalloc insists on. My workaround is to harvest the source files from <code>compiler-rt</code> and build and link them individually.</p>\n"}], "owner": {"reputation": 703, "user_id": 768314, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/230551a8d85da9de1b841826da1fd065?s=128&d=identicon&r=PG", "display_name": "Jambaman", "link": "https://stackoverflow.com/users/768314/jambaman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3389, "favorite_count": 1, "accepted_answer_id": 34288242, "answer_count": 1, "score": 5, "last_activity_date": 1450354083, "creation_date": 1437243214, "question_id": 31494087, "link": "https://stackoverflow.com/questions/31494087/linking-rust-with-c-undefined-reference-to-aeabi-functions", "title": "Linking Rust with C: undefined reference to &#39;__aeabi&#39; functions", "body": "<p>I'm working on a project using Rust on an embedded device, where I'm trying to write functions in Rust that can be called from C. I compile the project without the standard library, more or less following this tutorial: <a href=\"http://spin.atomicobject.com/2015/02/20/rust-language-c-embedded/\" rel=\"noreferrer\">Embedded Rust Right Now!</a></p>\n\n<p>My Rust code compiles just fine to .o files, but I'm having troubles when trying to link the C and Rust object files together using arm-none-eabi-ld. I get several errors similar to these:</p>\n\n<pre><code>rustfunc.o: In function `func':\nrustfunc.0.rs:(.text.hash+0x18): undefined reference to `__aeabi_memclr8'\n...\n/rust/src/libcore/slice.rs:1446: undefined reference to `__aeabi_memcpy'\n/rust/src/libcore/fmt/num.rs:196: undefined reference to `__aeabi_memclr4'\n</code></pre>\n\n<p>What puzzles me the most is that even though I'm just linking object files together, the errors reference both my Rust code, and code from libcore.</p>\n\n<p>Does anybody have an idea what these errors mean and why the linker cannot resolve these issues? Thanks!</p>\n"}, {"tags": ["linux", "windows", "rust", "cross-compiling"], "comments": [{"owner": {"reputation": 28979, "user_id": 266720, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/7c9333e1816aefc7fc97f64b09afe05c?s=128&d=identicon&r=PG", "display_name": "Vi.", "link": "https://stackoverflow.com/users/266720/vi"}, "edited": false, "score": 1, "creation_date": 1440971901, "post_id": 31492799, "comment_id": 52479412, "body": "See also my text: <a href=\"https://gist.github.com/vi/883cacf09b57a8efe5bf\" rel=\"nofollow noreferrer\">gist.github.com/vi/883cacf09b57a8efe5bf</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1527, "user_id": 656669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/646b709a8c1dd04c4ed44693fa8839a2?s=128&d=identicon&r=PG", "display_name": "Fedcomp", "link": "https://stackoverflow.com/users/656669/fedcomp"}, "edited": false, "score": 0, "creation_date": 1437237495, "post_id": 31492975, "comment_id": 50950058, "body": "That&#39;s very useful post, however: debian package mingw-w64 does not have ar utility in specified path, where i can find it? is it necessary to use that utility and what it does in compiling case? and is there a way to specify <code>&#47;usr&#47;local&#47;lib&#47;rustlib</code> as some other custom path?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1527, "user_id": 656669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/646b709a8c1dd04c4ed44693fa8839a2?s=128&d=identicon&r=PG", "display_name": "Fedcomp", "link": "https://stackoverflow.com/users/656669/fedcomp"}, "edited": false, "score": 0, "creation_date": 1437238670, "post_id": 31492975, "comment_id": 50950412, "body": "You can run the rustup script (<a href=\"http://www.rust-lang.org/install.html\" rel=\"nofollow noreferrer\">instructions</a>) to install Rust in another directory (with <code>--prefix=path</code>). Also, <code>ar</code> is in the <code>binutils-mingw-w64</code> package, installed at <code>&#47;usr&#47;bin&#47;$ARCH-w64-mingw32-ar</code>."}, {"owner": {"reputation": 1527, "user_id": 656669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/646b709a8c1dd04c4ed44693fa8839a2?s=128&d=identicon&r=PG", "display_name": "Fedcomp", "link": "https://stackoverflow.com/users/656669/fedcomp"}, "edited": false, "score": 0, "creation_date": 1437239891, "post_id": 31492975, "comment_id": 50950737, "body": "Huge thank you for your useful responses! i feel like i&#39;m a lot closer now. All i have to beat is undefined reference to `_Unwind_Resume&#39;, but it&#39;s another issue. Thank you again."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1527, "user_id": 656669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/646b709a8c1dd04c4ed44693fa8839a2?s=128&d=identicon&r=PG", "display_name": "Fedcomp", "link": "https://stackoverflow.com/users/656669/fedcomp"}, "edited": false, "score": 2, "creation_date": 1437243853, "post_id": 31492975, "comment_id": 50951912, "body": "Try linking with <code>libgcc_s.a</code> explicitly (the one for Windows, of course)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 35, "last_activity_date": 1437238806, "last_edit_date": 1437238806, "creation_date": 1437235319, "answer_id": 31492975, "question_id": 31492799, "link": "https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows/31492975#31492975", "title": "Cross-compile a Rust application from Linux to Windows", "body": "<p>The Rust distribution only provides compiled libraries for the host system. However, according to <a href=\"https://wiki.archlinux.org/index.php/Rust\">Arch Linux's wiki page on Rust</a>, you could copy the compiled libraries from the Windows packages in the <a href=\"http://static.rust-lang.org/dist/index.html\">download directory</a> (note that there are i686 and x86-64 packages) in the appropriate place on your system (in <code>/usr/lib/rustlib</code> or <code>/usr/local/lib/rustlib</code>, depending on where Rust is installed), install mingw-w64-gcc and Wine and you should be able to cross-compile.</p>\n\n<p>If you're using Cargo, you can tell Cargo where to look for <code>ar</code> and the linker by adding this to <code>~/.cargo/config</code> (where <code>$ARCH</code> is the architecture you use):</p>\n\n<pre><code>[target.$ARCH-pc-windows-gnu]\nlinker = \"/usr/bin/$ARCH-w64-mingw32-gcc\"\nar = \"/usr/$ARCH-w64-mingw32/bin/ar\"\n</code></pre>\n\n<p>Note: the exact paths can vary based on your distribution. Check the list of files for the mingw-w64 package(s) (GCC and binutils) in your distribution.</p>\n\n<p>Then you can use Cargo like this:</p>\n\n<pre><code>$ # Build\n$ cargo build --release --target \"$ARCH-pc-windows-gnu\"\n$ # Run unit tests under wine\n$ cargo test --target \"$ARCH-pc-windows-gnu\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1873, "user_id": 1725553, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh3.googleusercontent.com/-CsRuoQmwqLo/AAAAAAAAAAI/AAAAAAAAAFM/hESpKGJTWZo/photo.jpg?sz=128", "display_name": "paddyg", "link": "https://stackoverflow.com/users/1725553/paddyg"}, "edited": false, "score": 0, "creation_date": 1532214122, "post_id": 39184296, "comment_id": 89890763, "body": "Agree, these are good clear instructions. Check <a href=\"https://www.libsdl.org/release/\" rel=\"nofollow noreferrer\">libsdl.org/release</a> for the latest version (now up to 2.0.8) and change accordingly"}, {"owner": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "edited": false, "score": 1, "creation_date": 1547201584, "post_id": 39184296, "comment_id": 95119919, "body": "This doesn&#39;t actually quite work as-is, because (a) there are some mistakes in the paths (eg ~/projects/rust-sdl2 vs ~/rust-sdl2 vs ~/rust-sdl), (b) it uses the tip of the master branch of rust-sdl2, which no longer works with SDL2 2.0.4, and (c) sine.wav has moved. But after some minor fixes it does indeed work!"}, {"owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "reply_to_user": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "edited": false, "score": 0, "creation_date": 1547559342, "post_id": 39184296, "comment_id": 95226459, "body": "@TomAnderson Can you modify my answer so that it works now?"}, {"owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "reply_to_user": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "edited": false, "score": 0, "creation_date": 1560245570, "post_id": 39184296, "comment_id": 99662956, "body": "@TomAnderson Fixed paths, but now it does not build :("}], "tags": [], "owner": {"reputation": 11878, "user_id": 588759, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/216ea4da5cae7be4030b6242ab90631c?s=128&d=identicon&r=PG", "display_name": "rofrol", "link": "https://stackoverflow.com/users/588759/rofrol"}, "is_accepted": false, "score": 19, "last_activity_date": 1560247401, "last_edit_date": 1560247401, "creation_date": 1472321722, "answer_id": 39184296, "question_id": 31492799, "link": "https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows/39184296#39184296", "title": "Cross-compile a Rust application from Linux to Windows", "body": "<p><strong>UPDATE</strong> 2019-06-11</p>\n\n<p>This fails for me with:</p>\n\n<pre><code>     Running `rustc --crate-name animation examples/animation.rs --color always --crate-type bin --emit=dep-info,link -C debuginfo=2 --cfg 'feature=\"default\"' -C metadata=006e668c6384c29b -C extra-filename=-006e668c6384c29b --out-dir /home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/examples --target x86_64-pc-windows-gnu -C ar=x86_64-w64-mingw32-gcc-ar -C linker=x86_64-w64-mingw32-gcc -C incremental=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/incremental -L dependency=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps -L dependency=/home/roman/projects/rust-sdl2/target/debug/deps --extern bitflags=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps/libbitflags-2c7b3e3d10e1e0dd.rlib --extern lazy_static=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps/liblazy_static-a80335916d5ac241.rlib --extern libc=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps/liblibc-387157ce7a56c1ec.rlib --extern num=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps/libnum-18ac2d75a7462b42.rlib --extern rand=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps/librand-7cf254de4aeeab70.rlib --extern sdl2=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps/libsdl2-3f37ebe30a087396.rlib --extern sdl2_sys=/home/roman/projects/rust-sdl2/target/x86_64-pc-windows-gnu/debug/deps/libsdl2_sys-3edefe52781ad7ef.rlib -L native=/home/roman/.cargo/registry/src/github.com-1ecc6299db9ec823/winapi-x86_64-pc-windows-gnu-0.4.0/lib`\nerror: linking with `x86_64-w64-mingw32-gcc` failed: exit code: 1\n</code></pre>\n\n<p>Maybe this will help <a href=\"https://github.com/rust-lang/rust/issues/44787\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/44787</a></p>\n\n<h2>Static compile sdl2</h2>\n\n<p>There is option to static-compile sdl but it <a href=\"https://github.com/Rust-SDL2/rust-sdl2/issues/899\" rel=\"nofollow noreferrer\">didn't work for me</a>.</p>\n\n<p>Also <a href=\"https://github.com/Rust-SDL2/rust-sdl2/issues/778\" rel=\"nofollow noreferrer\">mixer is not included when used with bundled</a>.</p>\n\n<h2>Let's cross-compile examples from rust-sdl2 project from Ubuntu to Windows x86_64</h2>\n\n<p>In <code>~/.cargo/config</code></p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>[target.x86_64-pc-windows-gnu]\nlinker = \"x86_64-w64-mingw32-gcc\"\nar = \"x86_64-w64-mingw32-gcc-ar\"\n</code></pre>\n\n<p>Then run this:</p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>sudo apt-get install gcc-mingw-w64-x86-64 -y\n# use rustup to add target https://github.com/rust-lang/rustup.rs#cross-compilation\nrustup target add x86_64-pc-windows-gnu\n\n# Based on instructions from https://github.com/AngryLawyer/rust-sdl2/\n\n# First we need sdl2 libs\n# links to packages https://www.libsdl.org/download-2.0.php\n\nsudo apt-get install libsdl2-dev -y\ncurl -s https://www.libsdl.org/release/SDL2-devel-2.0.9-mingw.tar.gz | tar xvz -C /tmp\n\n# Prepare files for building\n\nmkdir -p ~/projects\ncd ~/projects\ngit clone https://github.com/Rust-SDL2/rust-sdl2\ncd rust-sdl2\ncp -r /tmp/SDL2-2.0.9/x86_64-w64-mingw32/lib/* ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/\ncp /tmp/SDL2-2.0.9/x86_64-w64-mingw32/bin/SDL2.dll .\n</code></pre>\n\n<p>Build examples at once</p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>cargo build --target=x86_64-pc-windows-gnu --verbose --examples\n</code></pre>\n\n<p>Or stop after first fail:</p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>echo; for i in examples/*; do [ $? -eq 0 ] &amp;&amp; cargo build --target=x86_64-pc-windows-gnu --verbose --example $(basename $i .rs); done\n</code></pre>\n\n<h3>Run</h3>\n\n<p><code>cargo build</code> will put binaries in <code>target/x86_64-pc-windows-gnu/debug/examples/</code></p>\n\n<p>Copy needed files:</p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>cp /tmp/SDL2-2.0.4/x86_64-w64-mingw32/bin/SDL2.dll target/x86_64-pc-windows-gnu/debug/examples/\ncp assets/sine.wav target/x86_64-pc-windows-gnu/debug/examples/\n</code></pre>\n\n<p>Then copy directory <code>target/x86_64-pc-windows-gnu/debug/examples/</code> to your Windows machine and run exe files.</p>\n\n<h3>Run in cmd.exe</h3>\n\n<p>If you want to see the console output when running exe files, you may run them from <code>cmd.exe</code>.</p>\n\n<p>To open <code>cmd.exe</code> in current directory in file explorer, right click with shift on empty place in window and choose <code>Open command window here</code>.</p>\n\n<p>Backtraces with mingw should work now - if not use msvc <a href=\"https://github.com/rust-lang/rust/pull/39234\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/pull/39234</a></p>\n"}, {"tags": [], "owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "is_accepted": false, "score": 2, "last_activity_date": 1584991801, "last_edit_date": 1584991801, "creation_date": 1548952397, "answer_id": 54465158, "question_id": 31492799, "link": "https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows/54465158#54465158", "title": "Cross-compile a Rust application from Linux to Windows", "body": "<p>I've had success on Debian (testing) <em>without using Mingw and Wine</em> just following the <a href=\"https://forge.rust-lang.org/compiler/cross-compilation/windows.html\" rel=\"nofollow noreferrer\">official instructions</a>. They look scary, but in the end it didn't hurt that much.</p>\n\n<p>The official instructions also contain info on how to cross-compile C/C++ code. I haven't needed that, so it's something I haven't actually tested. </p>\n\n<p>A couple of remarks for individual points in the official instructions. The numbers match the numbers in the <a href=\"https://forge.rust-lang.org/compiler/cross-compilation/windows.html\" rel=\"nofollow noreferrer\">official instructions</a>.</p>\n\n<ol>\n<li>Debian: <code>sudo apt-get install lld</code></li>\n<li>Make a symlink named <code>lld-link</code> to <code>lld</code> <em>somewhere in your $PATH</em>. Example: <code>ln -s /usr/bin/lld local_bin/lld-link</code></li>\n<li>I don't cross-compile C/C++, haven't used this point personally.</li>\n<li><p>This is probably the most annoying part. I installed Rust on a Windows box via rustup, and copied the libraries from the directories named in the official docs to the Linux box. Beware, there were sometimes uppercase library filenames, but lld wants them all lowercase (Windows isn't case-sensitive, Linux is). I've used the following to rename all files in current directory to lowercase:</p>\n\n<pre><code>for f in `find`; do mv -v \"$f\" \"`echo $f | tr '[A-Z]' '[a-z]'`\"; done\n</code></pre>\n\n<p>Personally, I've needed both <em>Kit</em> directories and just one of the <em>VC</em> dirs.</p></li>\n<li>I don't cross-compile C/C++, haven't used this point personally.</li>\n<li>Just make <code>$LIB_ROOT</code> in the script at the end of this post point to the lib directory from point 3.</li>\n<li>Mandatory</li>\n<li>I don't cross-compile C/C++, haven't used this point personally.</li>\n<li>Depending the target architecture, either of the following:\n\n<ul>\n<li><code>rustup target add i686-pc-windows-msvc</code></li>\n<li><code>rustup target add x86_64-pc-windows-msvc</code></li>\n</ul></li>\n</ol>\n\n<p>For cross-building itself, I'm using the following simple script (32-bit version):</p>\n\n<pre><code>#!/bin/sh\n# \"cargo build\" for the 32-bit Windows MSVC architecture.\n\n# Set this to proper directory\nLIB_ROOT=~/opt/rust-msvc\n\n# The rest shouldn't need modifications\nVS_LIBS=\"$LIB_ROOT/Microsoft Visual Studio 14.0/VC/lib/\"\nKIT_8_1_LIBS=\"$LIB_ROOT/Windows Kits/8.1/Lib/winv6.3/um/x86/\"\nKIT_10_LIBS=\"$LIB_ROOT/Windows Kits/10/Lib/10.0.10240.0/ucrt/x86/\"\nexport LIB=\"$VS_LIBS;$KIT_8_1_LIBS;$KIT_10_LIBS\"\ncargo build --target=i686-pc-windows-msvc \"$@\"\n</code></pre>\n\n<p>I'm using the script the same way I would use <code>cargo build</code></p>\n\n<p>Hope that helps somebody!</p>\n"}, {"comments": [{"owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "edited": false, "score": 1, "creation_date": 1595706321, "post_id": 62853319, "comment_id": 111569583, "body": "I was missing the <code>target add</code>, but this is the answer of today; \ud83d\udcaf!"}, {"owner": {"reputation": 103, "user_id": 5950176, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c117f6e817e0dca6a117445a12385e72?s=128&d=identicon&r=PG&f=1", "display_name": "Prologas", "link": "https://stackoverflow.com/users/5950176/prologas"}, "edited": false, "score": 1, "creation_date": 1596404867, "post_id": 62853319, "comment_id": 111794309, "body": "Works like a charm!"}, {"owner": {"reputation": 365, "user_id": 12648982, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/U96mE.png?s=128&g=1", "display_name": "Cobalt", "link": "https://stackoverflow.com/users/12648982/cobalt"}, "edited": false, "score": 0, "creation_date": 1600952772, "post_id": 62853319, "comment_id": 113256208, "body": "This is by far the best solution for keeping everything conform with cargo. That was very helpful for me"}, {"owner": {"reputation": 51, "user_id": 4021748, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/51fd8ee7ccd2411c0f92f3ec5523f64e?s=128&d=identicon&r=PG&f=1", "display_name": "veto", "link": "https://stackoverflow.com/users/4021748/veto"}, "edited": false, "score": 0, "creation_date": 1602995284, "post_id": 62853319, "comment_id": 113893428, "body": "Yes, I could get more far, but now stuck with: pkg-config has not been configured to support cross-compilation.                    Install a sysroot for the target platform and configure it via                   PKG_CONFIG_SYSROOT_DIR and PKG_CONFIG_PATH, or install a                   cross-compiling wrapper for pkg-config and set it via                   PKG_CONFIG environment variable."}, {"owner": {"reputation": 1102, "user_id": 5660197, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/97df5665e51bcf688208167c32a7bb4e?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/5660197/tony"}, "edited": false, "score": 0, "creation_date": 1611588491, "post_id": 62853319, "comment_id": 116493691, "body": "Could you point to or add a list of (common) targets?"}, {"owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "edited": false, "score": 2, "creation_date": 1611958710, "post_id": 62853319, "comment_id": 116626690, "body": "Cargo fails with <code>error: linker x86_64-w64-mingw32-gcc not found</code> though. I guess some steps are missing from your instructions?"}, {"owner": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "edited": false, "score": 2, "creation_date": 1611960573, "post_id": 62853319, "comment_id": 116627200, "body": "On Debian, <code>sudo apt-get install mingw-w64</code> is also needed. Otherwise, works perfectly fine."}, {"owner": {"reputation": 1602, "user_id": 6023771, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/67e7bfd227dd05ce79a8e4a4f18f37c2?s=128&d=identicon&r=PG&f=1", "display_name": "zee", "link": "https://stackoverflow.com/users/6023771/zee"}, "reply_to_user": {"reputation": 15580, "user_id": 318558, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/8f961340d115c2b75968f226f1d2dc24?s=128&d=identicon&r=PG", "display_name": "Yuri Geinish", "link": "https://stackoverflow.com/users/318558/yuri-geinish"}, "edited": false, "score": 0, "creation_date": 1612051647, "post_id": 62853319, "comment_id": 116646934, "body": "@YuriGeinish I&#39;ll add that to the list of instructions thank you :D"}, {"owner": {"reputation": 1602, "user_id": 6023771, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/67e7bfd227dd05ce79a8e4a4f18f37c2?s=128&d=identicon&r=PG&f=1", "display_name": "zee", "link": "https://stackoverflow.com/users/6023771/zee"}, "reply_to_user": {"reputation": 1102, "user_id": 5660197, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/97df5665e51bcf688208167c32a7bb4e?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/5660197/tony"}, "edited": false, "score": 0, "creation_date": 1612051723, "post_id": 62853319, "comment_id": 116646946, "body": "@Tony this is build into rust, you can just do <code>rustc --print target-list</code>. Also after trying both I&#39;d highly recommend using cross."}, {"owner": {"reputation": 1527, "user_id": 656669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/646b709a8c1dd04c4ed44693fa8839a2?s=128&d=identicon&r=PG", "display_name": "Fedcomp", "link": "https://stackoverflow.com/users/656669/fedcomp"}, "edited": false, "score": 0, "creation_date": 1614672272, "post_id": 62853319, "comment_id": 117449262, "body": "when i first asked a question there was no such simple way to do it, i marked your answer as accepted, thank you."}, {"owner": {"reputation": 27685, "user_id": 610979, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ku5ga.png?s=128&g=1", "display_name": "Frank Schmitt", "link": "https://stackoverflow.com/users/610979/frank-schmitt"}, "edited": false, "score": 0, "creation_date": 1616014154, "post_id": 62853319, "comment_id": 117874228, "body": "cross works like a charm (for cross-compiling a DLL for Windows on Ubuntu)"}], "tags": [], "owner": {"reputation": 1602, "user_id": 6023771, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/67e7bfd227dd05ce79a8e4a4f18f37c2?s=128&d=identicon&r=PG&f=1", "display_name": "zee", "link": "https://stackoverflow.com/users/6023771/zee"}, "is_accepted": true, "score": 67, "last_activity_date": 1612051572, "last_edit_date": 1612051572, "creation_date": 1594493761, "answer_id": 62853319, "question_id": 31492799, "link": "https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows/62853319#62853319", "title": "Cross-compile a Rust application from Linux to Windows", "body": "<p>Other answers, while technically correct, are more difficult than they need to be. There's no need to use <code>rustc</code> (in fact it's discouraged, just use <code>cargo</code>), you only need <code>rustup</code>, <code>cargo</code> and your distribution's mingw-w64.</p>\n<p>Add the target (you can also change this for whatever target you're cross compiling for):</p>\n<pre class=\"lang-none prettyprint-override\"><code>rustup target add x86_64-pc-windows-gnu\nrustup toolchain install stable-x86_64-pc-windows-gnu\n</code></pre>\n<p>You can build your crate easily with:</p>\n<pre class=\"lang-none prettyprint-override\"><code>cargo build --target x86_64-pc-windows-gnu\n</code></pre>\n<p>No need for messing around with <code>~/.cargo/config</code> or anything else.</p>\n<p>EDIT: Just wanted to add that while you can use the above it can also sometimes be a headache. I wanted to add that the rust tools team also maintains a project called cross: <a href=\"https://github.com/rust-embedded/cross\" rel=\"noreferrer\">https://github.com/rust-embedded/cross</a>\nThis might be another solution that you want to look into</p>\n"}, {"comments": [{"owner": {"reputation": 502, "user_id": 7292122, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/772c081621d14f7661f444e0ab003694?s=128&d=identicon&r=PG&f=1", "display_name": "ostrumvulpes", "link": "https://stackoverflow.com/users/7292122/ostrumvulpes"}, "edited": false, "score": 0, "creation_date": 1600987217, "post_id": 63258481, "comment_id": 113271192, "body": "Thanks so much for this solution! I had issues cross-compiling from Windows to Raspberry Pi with <code>can&#39;t find crate &#39;std&#39; ... the &#39;arm-unknown-linux-gnueabihf&#39; target may not be installed</code>, even after confirming I had the target installed with <code>rustup</code>. This was the only solution that has worked for me so far."}], "tags": [], "owner": {"reputation": 5444, "user_id": 71964, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/1f00d9aa3c469deb0e21156954f2be2b?s=128&d=identicon&r=PG", "display_name": "raspi", "link": "https://stackoverflow.com/users/71964/raspi"}, "is_accepted": false, "score": 10, "last_activity_date": 1596602041, "creation_date": 1596602041, "answer_id": 63258481, "question_id": 31492799, "link": "https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows/63258481#63258481", "title": "Cross-compile a Rust application from Linux to Windows", "body": "<p>There is <a href=\"https://www.docker.com/\" rel=\"noreferrer\">Docker</a> based solution called <a href=\"https://github.com/rust-embedded/cross\" rel=\"noreferrer\">cross</a>. All the required tools are in virtualized environment so you don't need to install additional packages for your machine. See <a href=\"https://github.com/rust-embedded/cross#supported-targets\" rel=\"noreferrer\">Supported targets list</a>.</p>\n<p>From project's README:</p>\n<h1>Features</h1>\n<ul>\n<li><code>cross</code> will provide all the ingredients needed for cross compilation without touching your system installation.</li>\n<li><code>cross</code> provides an environment, cross toolchain and cross compiled libraries, that produces the most portable binaries.</li>\n<li>\u201ccross testing\u201d, <code>cross</code> can test crates for architectures other than i686 and x86_64.</li>\n<li>The stable, beta and nightly channels are supported.</li>\n</ul>\n<h1>Dependencies</h1>\n<ul>\n<li><code>rustup</code></li>\n<li>A Linux kernel with <code>binfmt_misc</code> support is required for cross testing.</li>\n</ul>\n<p>One of these container engines is required. If both are installed, <code>cross</code> will default to docker.</p>\n<ul>\n<li>Docker. Note that on Linux non-sudo users need to be in the <code>docker</code> group. Read the official post-installation steps. Requires version 1.24 or later.</li>\n<li>Podman. Requires version 1.6.3 or later.</li>\n</ul>\n<h1>Installation</h1>\n<pre><code>$ cargo install cross\n</code></pre>\n<h1>Usage</h1>\n<p><code>cross</code> has the exact same CLI as Cargo but as it relies on Docker you'll have to start the daemon before you can use it.</p>\n<pre><code># (ONCE PER BOOT)\n# Start the Docker daemon, if it's not already running\n$ sudo systemctl start docker\n\n# MAGIC! This Just Works\n$ cross build --target aarch64-unknown-linux-gnu\n\n# EVEN MORE MAGICAL! This also Just Works\n$ cross test --target mips64-unknown-linux-gnuabi64\n\n# Obviously, this also Just Works\n$ cross rustc --target powerpc-unknown-linux-gnu --release -- -C lto\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 587, "user_id": 2737008, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ad6f47b0d87276d629d40bf05f406f0f?s=128&d=identicon&r=PG&f=1", "display_name": "rbansal", "link": "https://stackoverflow.com/users/2737008/rbansal"}, "is_accepted": false, "score": 2, "last_activity_date": 1616092900, "creation_date": 1616092900, "answer_id": 66697207, "question_id": 31492799, "link": "https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows/66697207#66697207", "title": "Cross-compile a Rust application from Linux to Windows", "body": "<p>The solution that worked for me was. It is similar to one of the accepted answers but I did not require to add the toolchain.</p>\n<pre><code>rustup target add x86_64-pc-windows-gnu\ncargo build --target x86_64-pc-windows-gnu\n</code></pre>\n<p>Refer to the <a href=\"https://rust-lang.github.io/rustup/cross-compilation.html\" rel=\"nofollow noreferrer\">documentation</a> for more details.</p>\n"}], "owner": {"reputation": 1527, "user_id": 656669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/646b709a8c1dd04c4ed44693fa8839a2?s=128&d=identicon&r=PG", "display_name": "Fedcomp", "link": "https://stackoverflow.com/users/656669/fedcomp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 32851, "favorite_count": 28, "accepted_answer_id": 62853319, "answer_count": 6, "score": 59, "last_activity_date": 1616092900, "creation_date": 1437234043, "last_edit_date": 1437323284, "question_id": 31492799, "link": "https://stackoverflow.com/questions/31492799/cross-compile-a-rust-application-from-linux-to-windows", "title": "Cross-compile a Rust application from Linux to Windows", "body": "<p>Basically I'm trying to compile the simplest code to Windows while I am developing on Linux.</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, and bye.\")\n}\n</code></pre>\n\n<p>I found these commands by searching the internet:</p>\n\n<pre><code>rustc --target=i686-w64-mingw32-gcc  main.rs\nrustc --target=i686_pc_windows_gnu -C linker=i686-w64-mingw32-gcc  main.rs\n</code></pre>\n\n<p>Sadly, none of them work. It gives me an error about the std crate missing</p>\n\n<pre><code>$ rustc --target=i686_pc_windows_gnu -C linker=i686-w64-mingw32-gcc  main.rs \n\nmain.rs:1:1: 1:1 error: can't find crate for `std`\nmain.rs:1 fn main() {\n          ^\nerror: aborting due to previous error\n</code></pre>\n\n<p>Is there a way to compile code on Linux that will run on Windows?</p>\n"}, {"tags": ["string", "rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1437231848, "creation_date": 1437231848, "answer_id": 31492488, "question_id": 31492344, "link": "https://stackoverflow.com/questions/31492344/the-fromstring-trait-is-not-implemented-for-the-type-string/31492488#31492488", "title": "the From&lt;&amp;String&gt; trait is not implemented for the type String", "body": "<p>You're conflating two different processes.</p>\n\n<p>First, there's coercion; in particular, <a href=\"http://doc.rust-lang.org/book/deref-coercions.html\" rel=\"noreferrer\"><code>Deref</code> coercion</a>.  This happens when the compiler sees that you have a <code>&amp;U</code>, but you <em>want</em> a <code>&amp;T</code>.  Provided there is an <code>impl Deref&lt;Target=T&gt; for U</code>, it will do the coercion for you.  This is why a <code>&amp;String</code> will coerce to a <code>&amp;str</code>.</p>\n\n<p><em>However</em>, this <em>does not</em> come into play when the compiler is substituting generic type parameters.  When you say <code>BigNum::new(&amp;line)</code>, what the compiler sees is that you're trying to pass a <code>&amp;String</code> where it expects an <code>S</code>; thus, <code>S</code> must be <code>&amp;String</code>, thus <code>S</code> must implement <code>Into&lt;String&gt;</code> and... oh no!  It doesn't!  <strong>BOOM!</strong>  Coercion is never triggered because the compiler never <em>needs</em> to coerce anything; unfulfilled type constraints are a different problem.</p>\n\n<p>In this <em>particular</em> case, what you should do depends on your circumstances:</p>\n\n<ul>\n<li><p>You can just pass a <code>String</code>; use <code>line</code> or <code>line.clone()</code>.  This is the most efficient in that you can always pass in an owned <code>String</code> you no longer need and avoid an extra allocation.</p></li>\n<li><p>You can instead take an <code>&amp;S</code> with <code>S: ?Sized + AsRef&lt;str&gt;</code>, which doesn't allow you to pass an owned string, but if you're always going to allocate anyway, this may be more ergonomic.</p></li>\n</ul>\n\n<p>Here's an example of both in action:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::convert::AsRef;\n\nfn main() {\n    take_a_string(String::from(\"abc\"));\n    // take_a_string(&amp;String::from(\"abc\")); // Boom!\n    take_a_string(\"def\");\n\n    // take_a_string_ref(String::from(\"abc\")); // Boom!\n    take_a_string_ref(&amp;String::from(\"abc\"));\n    take_a_string_ref(\"def\");\n}\n\nfn take_a_string&lt;S&gt;(s: S)\nwhere S: Into&lt;String&gt; {\n    let s: String = s.into();\n    println!(\"{:?}\", s);\n}\n\nfn take_a_string_ref&lt;S: ?Sized&gt;(s: &amp;S)\nwhere S: AsRef&lt;str&gt; {\n    let s: String = s.as_ref().into();\n    println!(\"{:?}\", s);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 10797, "user_id": 505248, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/a4c11bcd46268e709dd8638de9c4a2af?s=128&d=identicon&r=PG&f=1", "display_name": "Pascalius", "link": "https://stackoverflow.com/users/505248/pascalius"}, "is_accepted": false, "score": 0, "last_activity_date": 1544713608, "creation_date": 1544713608, "answer_id": 53764742, "question_id": 31492344, "link": "https://stackoverflow.com/questions/31492344/the-fromstring-trait-is-not-implemented-for-the-type-string/53764742#53764742", "title": "the From&lt;&amp;String&gt; trait is not implemented for the type String", "body": "<p>As mentioned by DK., this is not possible with the Rust <code>Into</code> trait, because of the missing implementation of <code>Into&lt;String&gt; for &amp;String</code>. I couldn't find the reasons behind this, but you can create your own Trait to solve this:</p>\n\n<pre><code>pub trait IntoString {\n    fn into(self) -&gt; String;\n}\n\nimpl IntoString for &amp;String {\n    fn into(self) -&gt; String {\n        self.to_string()\n    }\n}\nimpl IntoString for &amp;str {\n    fn into(self) -&gt; String {\n        self.to_string()\n    }\n}\n\nimpl IntoString for String {\n    fn into(self) -&gt; String {\n        self\n    }\n}\n\npub fn new&lt;S&gt;(t_num: S) -&gt; BigNum where S: IntoString {\n    let t_value = t_num.into();\n    let t_digits = t_value.len();\n    BigNum { value: t_value, digits: t_digits }\n}\n</code></pre>\n"}], "owner": {"reputation": 15257, "user_id": 1409312, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/4TCzB.jpg?s=128&g=1", "display_name": "Syntactic Fructose", "link": "https://stackoverflow.com/users/1409312/syntactic-fructose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3014, "favorite_count": 2, "accepted_answer_id": 31492488, "answer_count": 2, "score": 9, "last_activity_date": 1544713608, "creation_date": 1437230883, "question_id": 31492344, "link": "https://stackoverflow.com/questions/31492344/the-fromstring-trait-is-not-implemented-for-the-type-string", "title": "the From&lt;&amp;String&gt; trait is not implemented for the type String", "body": "<p>I'm going off of <a href=\"http://hermanradtke.com/2015/05/06/creating-a-rust-function-that-accepts-string-or-str.html\" rel=\"noreferrer\">this</a> article in an attempt to write a function that accepts both a String and a &amp;str, but I'm running into a problem. I have the following function:</p>\n\n<pre><code>pub fn new&lt;S&gt;(t_num: S) -&gt; BigNum where S: Into&lt;String&gt; {\n    let t_value = t_num.into();\n    let t_digits = t_value.len();\n    BigNum { value: t_value, digits: t_digits }\n}\n</code></pre>\n\n<p><code>BigNum</code> is a simple struct, the problem however is when I attempted to call this with a <code>&amp;collections::string::String</code> I get an error:</p>\n\n<pre><code>let line = \"123456\".to_string()\nlet big = bignum::BigNum::new(&amp;line)\n</code></pre>\n\n<hr>\n\n<pre><code>main.rs:23:15: 23:34 error: the trait `core::convert::From&lt;&amp;collections::string::String&gt;` is not implemented for the type `collections::string::String` [E0277]\nmain.rs:23     let big = bignum::BigNum::new(&amp;line);\n</code></pre>\n\n<p>I was under the impression that a <code>&amp;String</code> will be implicitly broken down into a <code>&amp;str</code> no? And in that case the <code>Into</code> trait would convert the <code>&amp;str</code> into a String I could then use. What am I doing wrong?</p>\n"}, {"tags": ["compiler-errors", "rust"], "comments": [{"owner": {"reputation": 837, "user_id": 721095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7257a97fd45d3e0d42fbaad0ad454f03?s=128&d=identicon&r=PG", "display_name": "Jonny Dee", "link": "https://stackoverflow.com/users/721095/jonny-dee"}, "edited": false, "score": 3, "creation_date": 1437305667, "post_id": 31492071, "comment_id": 50964508, "body": "Why a downvote without comment? I don&#39;t think my question was silly, so what should I have done in order to avoid it? Not asking a question on Stackoverflow?"}], "answers": [{"comments": [{"owner": {"reputation": 837, "user_id": 721095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7257a97fd45d3e0d42fbaad0ad454f03?s=128&d=identicon&r=PG", "display_name": "Jonny Dee", "link": "https://stackoverflow.com/users/721095/jonny-dee"}, "edited": false, "score": 0, "creation_date": 1437231381, "post_id": 31492378, "comment_id": 50948212, "body": "Thanks for your fast answer. I also thought about this approach. But what if copying was not possible? I really would like to see a solution using references (or avoiding copies), if there is any."}], "tags": [], "owner": {"reputation": 11927, "user_id": 2301531, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/0e05b25685a72ab6268dce396da1b76f?s=128&d=identicon&r=PG", "display_name": "A.B.", "link": "https://stackoverflow.com/users/2301531/a-b"}, "is_accepted": false, "score": 2, "last_activity_date": 1437231056, "creation_date": 1437231056, "answer_id": 31492378, "question_id": 31492071, "link": "https://stackoverflow.com/questions/31492071/how-do-i-make-the-following-rust-code-compile/31492378#31492378", "title": "How do I make the following Rust code compile?", "body": "<p>How to make it right depends on what you need and how Pixel actually looks like in real code.</p>\n\n<p>As Pixel is probably a lightweight object that can be trivially copied, you can pass it by-value.</p>\n\n<pre><code>#[derive(Copy, Clone)]\nstruct Pixel;\n\nstruct Canvas {\n    pixel : Pixel,\n}\n\nimpl Canvas {\n    fn drawPixel(&amp;mut self, y : usize, x : usize, pixel : Pixel) {\n        // Modify internal pixmap using given Pixel description.\n    }\n\n    fn setPixel(&amp;mut self, y : usize, x : usize) {\n        // Draw a pixel to internal pixmap using own pixel description.\n        self.drawPixel(y, x, self.pixel);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 837, "user_id": 721095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7257a97fd45d3e0d42fbaad0ad454f03?s=128&d=identicon&r=PG", "display_name": "Jonny Dee", "link": "https://stackoverflow.com/users/721095/jonny-dee"}, "edited": false, "score": 0, "creation_date": 1437238772, "post_id": 31492448, "comment_id": 50950441, "body": "Thanks, Francis, for your perfect explanation and also for the solution :-)"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1437231538, "last_edit_date": 1495535415, "creation_date": 1437231538, "answer_id": 31492448, "question_id": 31492071, "link": "https://stackoverflow.com/questions/31492071/how-do-i-make-the-following-rust-code-compile/31492448#31492448", "title": "How do I make the following Rust code compile?", "body": "<p>The fundamental problem is that the call to <code>drawPixel</code> in <code>setPixel</code> gives <code>drawPixel</code> two aliases to the <code>pixel</code> field: a mutable one through <code>self</code> (as <code>self.pixel</code>), and an immutable one through the <code>pixel</code> parameter. In Rust, a non-<code>mut</code> pointer is <em>really</em> a pointer to an <strong>immutable</strong> value. However, with these two aliases, <code>drawPixel</code> would be able to mutate the pixel value that the <code>pixel</code> parameter refers to, and its value would change unexpectedly.</p>\n\n<p>If <code>Pixel</code> is a small type (say, an RGBA quad) and doesn't implement <code>Drop</code>, you can make it <code>Copy</code>, and then just pass the <code>Pixel</code> by value (see <a href=\"https://stackoverflow.com/a/31492378/234590\">A.B.'s answer</a>).</p>\n\n<p>If that's not possible, then consider what <code>drawPixel</code> actually needs to mutate. Does it need to mutate the <code>pixel</code> field? If yes, you need to copy the pixel somehow, otherwise the value of the <code>pixel</code> parameter will change when you mutate the field, as I explained above. In that case, you might be able to implement only <code>Clone</code> and use the <code>clone()</code> method to get a copy of the pixel.</p>\n\n<p>If you don't need to mutate the <code>pixel</code> field in <code>drawPixel</code>, then you can move the fields that you mutate in a separate struct, and move the <code>drawPixel</code> method to that struct instead. This way, the <code>&amp;mut self</code> will apply to the inner struct, which will be sure to not alias with the <code>pixel</code> field.</p>\n\n<pre><code>struct Pixel;\n\nstruct Canvas2;\n\nstruct Canvas {\n    canvas2 : Canvas2,\n    pixel : Pixel,\n}\n\nimpl Canvas2 {\n    fn drawPixel(&amp;mut self, y : usize, x : usize, pixel : &amp;Pixel) {\n        // Modify internal pixmap using given Pixel description.\n    }\n}\n\nimpl Canvas {\n    fn setPixel(&amp;mut self, y : usize, x : usize) {\n        // Draw a pixel to internal pixmap using own pixel description.\n        self.canvas2.drawPixel(y, x, &amp;self.pixel);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 837, "user_id": 721095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7257a97fd45d3e0d42fbaad0ad454f03?s=128&d=identicon&r=PG", "display_name": "Jonny Dee", "link": "https://stackoverflow.com/users/721095/jonny-dee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 1, "accepted_answer_id": 31492448, "answer_count": 2, "score": 0, "last_activity_date": 1437231538, "creation_date": 1437229090, "last_edit_date": 1437230027, "question_id": 31492071, "link": "https://stackoverflow.com/questions/31492071/how-do-i-make-the-following-rust-code-compile", "title": "How do I make the following Rust code compile?", "body": "<p>I am new to Rust programming language and I am just playing around with it. I read about Rust's borrow things and I think I understand why the compiler does not accept the following code, but I don't know how to make it right:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Pixel;\n\nstruct Canvas {\n    pixel : Pixel,\n}\n\nimpl Canvas {\n    fn drawPixel(&amp;mut self, y : usize, x : usize, pixel : &amp;Pixel) {\n        // Modify internal pixmap using given Pixel description.\n    }\n\n    fn setPixel(&amp;mut self, y : usize, x : usize) {\n        // Draw a pixel to internal pixmap using own pixel description.\n        self.drawPixel(y, x, &amp;self.pixel);\n    }\n}\n</code></pre>\n\n<p>This is the error reported by the compiler:</p>\n\n<pre><code>src/main.rs:14:35: 14:45 error: cannot borrow `self.pixel` as immutable because `*self` is also borrowed as mutable\nsrc/main.rs:14             self.drawPixel(y, x, &amp;self.pixel);\n                                                 ^~~~~~~~~~\nsrc/main.rs:14:13: 14:17 note: previous borrow of `*self` occurs here; the mutable borrow prevents subsequent moves, borrows, or modification of `*self` until the borrow ends\nsrc/main.rs:14             self.drawPixel(y, x, &amp;self.pixel);\n                           ^~~~\nsrc/main.rs:14:46: 14:46 note: previous borrow ends here\nsrc/main.rs:14             self.drawPixel(y, x, &amp;self.pixel);\n</code></pre>\n\n<p>The idea in this example is to have a method 'drawPixel' which can draw a pixel according to the specified 'Pixel'. A second method 'setPixel' just forwards to the former method passing it a reference to the 'Pixel' instance associated with the 'Canvas' object.</p>\n\n<p>Please don't ask me why I want to do it like this. It is a simplified version of my real use case. And I really would like to know what I could do to make this code compile.</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1437221146, "post_id": 31490913, "comment_id": 50945582, "body": "By the way, <code>&amp;PathBuf</code> is as useless as <code>&amp;String</code> is. You want <code>&amp;Path</code> (the moral equivalent of <code>&amp;str</code>)."}, {"owner": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 0, "creation_date": 1437221434, "post_id": 31490913, "comment_id": 50945625, "body": "Ok thanks! I didn&#39;t know that :)"}], "answers": [{"comments": [{"owner": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 0, "creation_date": 1437221596, "post_id": 31490980, "comment_id": 50945659, "body": "I want <code>new</code> to always return <code>MDBook&lt;HtmlHandlebars&gt;</code> because it&#39;s the default renderer. Should I change the return value from <code>Self</code> to <code>MDBook&lt;HtmlHandlebars&gt;</code> then?"}, {"owner": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 0, "creation_date": 1437221814, "post_id": 31490980, "comment_id": 50945703, "body": "Actually what I want to achieve is being able to swap out the Renderer for another. And traits seemed to be the best way to do it... Was that a good idea or is there a better way?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 1, "creation_date": 1437221823, "post_id": 31490980, "comment_id": 50945704, "body": "@MathieuDavid You can have a method that returns <code>MDBook&lt;HtmlHandlebars&gt;</code>, though it would be more appropriate to put that into an <code>impl MDBook&lt;HtmlHandlebars&gt; {}</code> block. However, if you don&#39;t have some other methods that do work with <code>MDBook&lt;R&gt;</code> for all <code>R</code>, then the generic is pointless. Also the name would have to be different, since there is no overloading here. Perhaps ask yourself why you want to make a special case for this default."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 0, "creation_date": 1437221870, "post_id": 31490980, "comment_id": 50945716, "body": "@MathieuDavid If you want to be able to have a <code>MDBook</code> object and change dynamically what renderer it uses, then generics are the wrong tool (though <i>traits</i> are good for that too). I&#39;ve edited the answer to cover that as well."}, {"owner": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "edited": false, "score": 0, "creation_date": 1437222693, "post_id": 31490980, "comment_id": 50945945, "body": "Thank you so much, using <code>Box&lt;Renderer&gt;</code> works great."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 6, "last_activity_date": 1437222025, "last_edit_date": 1437222025, "creation_date": 1437221207, "answer_id": 31490980, "question_id": 31490913, "link": "https://stackoverflow.com/questions/31490913/rust-generics-expected-t-found-foo/31490980#31490980", "title": "Rust generics: Expected &lt;T&gt; found &lt;Foo&gt;", "body": "<pre><code>impl&lt;R&gt; MDBook&lt;R&gt; where R: Renderer {\n\n    pub fn new(path: &amp;PathBuf) -&gt; Self {\n</code></pre>\n\n<p>These lines claim that <em>for all</em> types <code>R</code> that implement <code>Renderer</code>, there is a method <code>new(path)</code> that returns <code>MDBook&lt;R&gt;</code>. However, your implementation of the method always returns <code>MDBook&lt;HtmlHandlebars&gt;</code> regardless of what <code>R</code> is.</p>\n\n<p>You could add a trait bound to <code>R</code> (or a method to <code>Renderer</code>) that allows constructing a value of type <code>R</code> in <code>new</code>. Alternatively, the method could accept the renderer as parameter, i.e. <code>fn new(path: &amp;Path, renderer: R) -&gt; Self</code>. Either way, you need a way to get your hands on a renderer (i.e., a value of type <code>R</code>) inside <code>new</code>.</p>\n\n<p>If on the other hand you want to support something like this:</p>\n\n<pre><code>let book = MDBook::new(path);\nif some_condition {\n    book.set_renderer(SomeOtherThing::new());\n}\n</code></pre>\n\n<p>then generics are the wrong tool for the job, since they make the choice of renderer part of the static type of <code>book</code>. You can remove the <code>R</code> type parameter completely, keep your trait and simply store a <a href=\"http://doc.rust-lang.org/book/trait-objects.html\" rel=\"nofollow\">trait object</a> (likely <code>Box&lt;Renderer&gt;</code>) in <code>MDBook</code>.</p>\n"}], "owner": {"reputation": 3306, "user_id": 3980369, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/sZ3vt.jpg?s=128&g=1", "display_name": "Mathieu David", "link": "https://stackoverflow.com/users/3980369/mathieu-david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 455, "favorite_count": 0, "accepted_answer_id": 31490980, "answer_count": 1, "score": 0, "last_activity_date": 1437222025, "creation_date": 1437220639, "question_id": 31490913, "link": "https://stackoverflow.com/questions/31490913/rust-generics-expected-t-found-foo", "title": "Rust generics: Expected &lt;T&gt; found &lt;Foo&gt;", "body": "<p>I'm trying to use generics but I don't master that topic well enough and I get this error:</p>\n\n<pre><code>error: mismatched types:\nexpected `book::mdbook::MDBook&lt;R&gt;`,\nfound `book::mdbook::MDBook&lt;renderer::html_handlebars::HtmlHandlebars&gt;`\n(expected type parameter,\nfound struct `renderer::html_handlebars::HtmlHandlebars`) [E0308]\n</code></pre>\n\n<p>This is the relevant code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct MDBook&lt;R&gt; where R: Renderer {\n    title: String,\n    author: String,\n    config: BookConfig,\n    pub content: Vec&lt;BookItem&gt;,\n    renderer: R,\n}\n\nimpl&lt;R&gt; MDBook&lt;R&gt; where R: Renderer {\n\n    pub fn new(path: &amp;PathBuf) -&gt; Self {\n\n        MDBook {\n            title: String::from(\"\"),\n            author: String::from(\"\"),\n            content: vec![],\n            config: BookConfig::new()\n                        .set_src(path.join(\"src\"))\n                        .set_dest(path.join(\"book\")),\n            renderer: HtmlHandlebars::new(), // &lt;---- ERROR HERE\n        }\n    }\n}\n</code></pre>\n\n<p>The <code>Renderer</code> trait is empty at the moment and the implementation for <code>HtmlHandlebars</code> is</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct HtmlHandlebars;\n\nimpl Renderer for HtmlHandlebars {\n\n}\n\nimpl HtmlHandlebars {\n    pub fn new() -&gt; Self {\n        HtmlHandlebars\n    }\n}\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437216201, "post_id": 31490277, "comment_id": 50944510, "body": "So the expression basically &quot;removed&quot; any ownership something might have had on that value?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437216306, "post_id": 31490277, "comment_id": 50944545, "body": "It&#39;s more like it moved ownership like it <i>normally</i> does... except without anyone there to hold it, it moved it right off the side of the desk on to the floor where the office roomba sucked it up.  (Do not take this facetious analogy as an implication that Rust has tracing garbage collection; it doesn&#39;t have tiny software roombas going about eating up loose allocations.)"}, {"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437216384, "post_id": 31490277, "comment_id": 50944561, "body": "Ok. Is it correct that <code>foo.not_copyable</code> moves two values: <code>foo</code> and foo&#39;s <code>not_copyable</code>?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437216513, "post_id": 31490277, "comment_id": 50944587, "body": "No; it only moves <code>foo.not_copyable</code>.  If you had two fields in the structure, you could move one, <i>then</i> the other.  That said, having moved <code>non_copyable</code>, the <code>foo</code> struct as a <i>whole</i> is effectively moved."}, {"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437217523, "post_id": 31490277, "comment_id": 50944786, "body": "Phew. My misunderstanding stems from another issue I have but that should be the subject of another question. Thanks!"}, {"owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "edited": false, "score": 0, "creation_date": 1437230101, "post_id": 31490277, "comment_id": 50947868, "body": "Ok, I probably meant that <code>foo</code> is moved partially. Because that&#39;s what the error message says if you try to evaluate <code>foo</code> after <code>foo.not_copyable</code>."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 2, "last_activity_date": 1437215778, "creation_date": 1437215778, "answer_id": 31490277, "question_id": 31490126, "link": "https://stackoverflow.com/questions/31490126/who-owns-a-value-without-a-let-binding/31490277#31490277", "title": "Who owns a value without a let binding?", "body": "<blockquote>\n  <p>So who owns `not_copyable here; where did it move?</p>\n</blockquote>\n\n<p>No one.  The expression <code>foo.not_copyable</code> has to pull the value out of the structure, because that value is the result of the expression.  That you don't <em>do</em> anything with the value is beside the point; you asked for the value, it gave you the value.</p>\n\n<p>It's possible the compiler <em>might</em> be able to optimise this out under certain circumstances, but without that, it's going to move the value like you asked it to.</p>\n\n<p>And yes, <code>foo;foo;</code> will do the same thing: just as <code>NotCopyable</code> is not copyable, neither is <code>MyString</code>.</p>\n"}], "owner": {"reputation": 13408, "user_id": 188107, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/9844056bd910559e1fb27e8279616102?s=128&d=identicon&r=PG", "display_name": "musiKk", "link": "https://stackoverflow.com/users/188107/musikk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 31490277, "answer_count": 1, "score": 3, "last_activity_date": 1437215778, "creation_date": 1437214827, "question_id": 31490126, "link": "https://stackoverflow.com/questions/31490126/who-owns-a-value-without-a-let-binding", "title": "Who owns a value without a let binding?", "body": "<p>Consider the following code:</p>\n\n<pre><code>struct MyStruct {\n    not_copyable: NotCopyable\n}\n\nstruct NotCopyable;\n\nfn main() {\n    let foo = MyStruct { not_copyable: NotCopyable };\n    foo.not_copyable;\n    foo.not_copyable;\n\n    // just found out the simpler \"foo; foo;\" will create the same problem\n}\n</code></pre>\n\n<p>This fails to compile with</p>\n\n<pre><code>src/main.rs:17:5: 17:21 error: use of moved value: `foo.not_copyable` [E0382]\nsrc/main.rs:17     foo.not_copyable;\n                   ^~~~~~~~~~~~~~~~\nsrc/main.rs:16:5: 16:21 note: `foo.not_copyable` moved here because it has type `NotCopyable`, which is non-copyable\nsrc/main.rs:16     foo.not_copyable;\n                   ^~~~~~~~~~~~~~~~\nerror: aborting due to previous error\n</code></pre>\n\n<p>While I'm still not very versed in the ownership system, I think I get why you couldn't create two <code>let</code> bindings to <code>foo.not_copyable</code>. But in this case there is no binding. So who owns <code>not_copyable</code> here; where did it move?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1437192056, "post_id": 31487534, "comment_id": 50939654, "body": "Rust does not have a stable ABI. Having a different version of Rust installed is completely meaningless; they use different versions of all their libraries. You haven\u2019t gone and specified <i>what</i> DLLs are missing, nor what efforts you made to <i>provide</i> those DLLs."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1437197749, "post_id": 31487534, "comment_id": 50940618, "body": "Did you compile with the same version of Rust on both machines? You should <a href=\"https://stackoverflow.com/posts/31487534/edit\">edit</a> your question to include the version of Rust on both machines - &quot;stable&quot; could mean either the 1.0 or 1.1 release by now. In the future, it will include even more!"}], "answers": [{"tags": [], "owner": {"reputation": 183, "user_id": 3809734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/124c0a4186833272328cbd1c904bb0c9?s=128&d=identicon&r=PG&f=1", "display_name": "user3809734", "link": "https://stackoverflow.com/users/3809734/user3809734"}, "is_accepted": false, "score": 1, "last_activity_date": 1437535080, "creation_date": 1437535080, "answer_id": 31553259, "question_id": 31487534, "link": "https://stackoverflow.com/questions/31487534/the-nightly-build-of-rustfmt-does-not-run-on-another-windows-pc/31553259#31553259", "title": "The nightly build of rustfmt does not run on another Windows PC", "body": "<p>You need to copy all the dlls from where Rust is installed on the first PC. For example, <code>C:\\Rust</code>, And copy all the required dlls for rustfmt.exe in <code>C:\\Rust\\bin</code> to the second PC on the same folder as rustfmt.exe.</p>\n"}], "owner": {"reputation": 183, "user_id": 3809734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/124c0a4186833272328cbd1c904bb0c9?s=128&d=identicon&r=PG&f=1", "display_name": "user3809734", "link": "https://stackoverflow.com/users/3809734/user3809734"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1437535080, "creation_date": 1437190579, "last_edit_date": 1437205476, "question_id": 31487534, "link": "https://stackoverflow.com/questions/31487534/the-nightly-build-of-rustfmt-does-not-run-on-another-windows-pc", "title": "The nightly build of rustfmt does not run on another Windows PC", "body": "<p>I built the latest master branch of rustfmt on a x64 Windows 8.1 PC using Rust nightly 2015/07/18. </p>\n\n<pre><code>cargo build --release\n</code></pre>\n\n<p><a href=\"https://github.com/nrc/rustfmt\" rel=\"nofollow\">rustfmt</a> needs a nightly version of Rust.</p>\n\n<p>And I copied the rustfmt.exe to another x64 PC, but it can not run and showed some dlls are missing. </p>\n\n<p>They are std-74fa456f.dll, log-74fa456f.dll, rustc-74fa456f.dll, and syntax-74fa456f.dll.</p>\n\n<p>Rust stable 1.1.0 is installed on the second PC.</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1437178791, "post_id": 31486519, "comment_id": 50937489, "body": "Have a C function free it, and call that C function?"}], "answers": [{"comments": [{"owner": {"reputation": 25907, "user_id": 509706, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yedDa.png?s=128&g=1", "display_name": "Wilfred Hughes", "link": "https://stackoverflow.com/users/509706/wilfred-hughes"}, "edited": false, "score": 0, "creation_date": 1437250747, "post_id": 31486571, "comment_id": 50953892, "body": "Thanks, that&#39;s really illuminating."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 14, "last_activity_date": 1437185980, "last_edit_date": 1437185980, "creation_date": 1437179158, "answer_id": 31486571, "question_id": 31486519, "link": "https://stackoverflow.com/questions/31486519/how-do-i-free-a-char-allocated-via-ffi-in-rust/31486571#31486571", "title": "How do I free a *char allocated via FFI in Rust?", "body": "<p>According to <a href=\"http://llvm.org/docs/doxygen/html/group__LLVMCCoreModule.html#gad150d942dc9f49238f57cb89464c01df\">the function's documentation</a>:</p>\n\n<blockquote>\n  <p>Use LLVMDisposeMessage to free the string.</p>\n</blockquote>\n\n<p>In the general case, if you call a function in a library that allocates memory, you should call another function in that library that frees the memory; this should generally be documented as part of the function's contract.</p>\n\n<p>If the documentation for a function tells you to use <code>free</code>, then you'll have a problem if your application is not linking with the <code>free</code> corresponding to the library's <code>malloc</code> (e.g. your application links with msvcr120, but the library links with msvcr100). This is the reason why good libraries provide a method to deallocate resources that it allocates for you.</p>\n\n<p>The default memory allocator in Rust is not C's <code>malloc</code>, but another allocator called <a href=\"http://www.canonware.com/jemalloc/\">jemalloc</a>. <code>CString</code> assumes the string was allocated with Rust's memory allocator, so when <code>CString</code>'s destructor runs, it runs jemalloc's <code>free</code> (you can tell from the <code>je_</code>-prefixed functions in your call stack), but it fails because the string wasn't allocated with jemalloc's <code>malloc</code>.</p>\n"}], "owner": {"reputation": 25907, "user_id": 509706, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yedDa.png?s=128&g=1", "display_name": "Wilfred Hughes", "link": "https://stackoverflow.com/users/509706/wilfred-hughes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1259, "favorite_count": 0, "accepted_answer_id": 31486571, "answer_count": 1, "score": 9, "last_activity_date": 1437210305, "creation_date": 1437178670, "last_edit_date": 1437210305, "question_id": 31486519, "link": "https://stackoverflow.com/questions/31486519/how-do-i-free-a-char-allocated-via-ffi-in-rust", "title": "How do I free a *char allocated via FFI in Rust?", "body": "<p>I'm calling the LLVM API via Rust's FFI. <code>LLVMPrintModuleToString</code> <a href=\"http://llvm.org/docs/doxygen/html/Core_8cpp_source.html#l00205\" rel=\"noreferrer\">uses strdup to create a string</a>. However, when I wrap the pointer in a <code>CString</code>, I get an error when Rust drops it.</p>\n\n<pre><code>#![feature(cstr_memory)]\nuse std::ffi::CString;\n\nextern crate llvm_sys as llvm;\n\nfn main() {\n    let llvm_ir_cstring;\n    unsafe {\n        let module = llvm::core::LLVMModuleCreateWithName(b\"nop\\0\".as_ptr() as *const _);\n        let llvm_ir_char_ptr = llvm::core::LLVMPrintModuleToString(module);\n        llvm::core::LLVMDisposeModule(module);\n        llvm_ir_cstring = CString::from_ptr(llvm_ir_char_ptr);\n    }\n\n    println!(\"llvm_ir_cstring: {:?}\", llvm_ir_cstring);\n}\n</code></pre>\n\n<p>Valgrind error:</p>\n\n<pre><code>==10413== Invalid read of size 4\n==10413==    at 0x4870586: pthread_mutex_lock (in /usr/lib/libpthread-2.21.so)\n==10413==    by 0x17F89B: je_arena_dalloc_small (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==    by 0x178C30: je_sdallocx (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==    by 0x10FA57: heap::imp::deallocate::h1fb92d59333c497bkja (heap.rs:268)\n==10413==    by 0x10F999: heap::deallocate::h5680e3fedc9e96320da (heap.rs:89)\n==10413==    by 0x10F929: heap::exchange_free::h452463f962f7ec23kfa (heap.rs:131)\n==10413==    by 0x10F8C5: Box$LT$$u5b$u8$u5d$$GT$::drop.1769::haf7017472635c7cf (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==    by 0x10F836: std..ffi..c_str..CString::drop.1766::h04d2b3db8d468f0c (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==    by 0x10F5FF: main::h04b7feb343e229ccgaa (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==    by 0x16DBCA: rt::unwind::try::try_fn::h2403085009213705177 (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==    by 0x16FF5A: rust_try_inner (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==    by 0x16FF33: rust_try (in /home/wilfred/projects/bfc/target/debug/bfc)\n==10413==  Address 0x1d684 is not stack'd, malloc'd or (recently) free'd\n</code></pre>\n\n<p>Why is this? What's the correct way to handle a <code>*char</code> from a C API?</p>\n"}, {"tags": ["rust", "quickcheck"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1437178113, "post_id": 31485725, "comment_id": 50937332, "body": "Duplicate of <a href=\"http://stackoverflow.com/questions/30203277/cannot-implement-quickchecks-arbitrary-for-my-own-type-source-trait-is-privat\" title=\"cannot implement quickchecks arbitrary for my own type source trait is privat\">stackoverflow.com/questions/30203277/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 650, "user_id": 1092644, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a446220154cd626be17c000557b791aa?s=128&d=identicon&r=PG", "display_name": "Rym", "link": "https://stackoverflow.com/users/1092644/rym"}, "is_accepted": true, "score": 3, "last_activity_date": 1437174153, "creation_date": 1437174153, "answer_id": 31485937, "question_id": 31485725, "link": "https://stackoverflow.com/questions/31485725/how-do-i-avoid-source-trait-is-private-when-using-subtraits/31485937#31485937", "title": "How do I avoid &#39;source trait is private&#39; when using subtraits?", "body": "<p>It looks like <code>Gen</code> has <code>rand::Rng</code> as a parent trait, the above works if you add <code>extern crate rand</code> after adding <code>rand = \"*\"</code> to your Cargo.toml.</p>\n\n<p>[I also had to remove the <code>#[cfg(test)]</code> above the <code>quickcheck</code> import]</p>\n"}], "owner": {"reputation": 25907, "user_id": 509706, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yedDa.png?s=128&g=1", "display_name": "Wilfred Hughes", "link": "https://stackoverflow.com/users/509706/wilfred-hughes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 31485937, "answer_count": 1, "score": 4, "last_activity_date": 1437174153, "creation_date": 1437172905, "question_id": 31485725, "link": "https://stackoverflow.com/questions/31485725/how-do-i-avoid-source-trait-is-private-when-using-subtraits", "title": "How do I avoid &#39;source trait is private&#39; when using subtraits?", "body": "<p>I'm trying to use <a href=\"https://github.com/BurntSushi/quickcheck\" rel=\"nofollow\">quickcheck</a> in Rust. I want to define my enum as an instance of <code>Arbitrary</code>, so I can use it in tests.</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(quickcheck_macros)]\n\n#[cfg(test)]\nextern crate quickcheck;\n\nuse quickcheck::{Arbitrary,Gen};\n\n#[derive(Clone)]\nenum Animal {\n    Cat,\n    Dog,\n    Mouse\n}\n\nimpl Arbitrary for Animal {\n    fn arbitrary&lt;G: Gen&gt;(g: &amp;mut G) -&gt; Animal {\n        let i = g.next_u32();\n        match i % 3 {\n            0 =&gt; Animal::Cat,\n            1 =&gt; Animal::Dog,\n            2 =&gt; Animal::Mouse,\n        }\n    }\n}\n</code></pre>\n\n<p>However, this gives me a compilation error:</p>\n\n<pre><code>src/main.rs:18:17: 18:29 error: source trait is private\nsrc/main.rs:18         let i = g.next_u32();\n                               ^~~~~~~~~~~~\n</code></pre>\n\n<p>What causes this error? I know there's <a href=\"https://github.com/rust-lang/rust/issues/22050\" rel=\"nofollow\">this rust issue</a> but since <code>Gen</code> is imported I would think I could call <code>.next_u32</code>.</p>\n"}, {"tags": ["c", "rust", "ffi"], "comments": [{"owner": {"reputation": 1809, "user_id": 951784, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9858b1ffedc039e48a0ed219198d538c?s=128&d=identicon&r=PG", "display_name": "rost0031", "link": "https://stackoverflow.com/users/951784/rost0031"}, "edited": false, "score": 1, "creation_date": 1437152933, "post_id": 31481102, "comment_id": 50927475, "body": "Yes, just check if fun == NULL.  Or zero, if NULL is not a thing in rust.  Mind you, I don&#39;t know rust very well, but that&#39;s how you would do it in C."}, {"owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 2, "creation_date": 1437153501, "post_id": 31481102, "comment_id": 50927750, "body": "See here: <a href=\"http://doc.rust-lang.org/book/ffi.html#the-%22nullable-pointer-optimization%22\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>"}, {"owner": {"reputation": 487, "user_id": 451149, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f90c9f613b91baa64d1210b674867914?s=128&d=identicon&r=PG", "display_name": "ldanko", "link": "https://stackoverflow.com/users/451149/ldanko"}, "reply_to_user": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 0, "creation_date": 1437163145, "post_id": 31481102, "comment_id": 50932670, "body": "@Adrian Thx, that&#39;s what I was looking for!"}], "answers": [{"tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": true, "score": 15, "last_activity_date": 1578327555, "last_edit_date": 1578327555, "creation_date": 1437153466, "answer_id": 31481305, "question_id": 31481102, "link": "https://stackoverflow.com/questions/31481102/how-to-check-if-function-pointer-passed-from-c-is-non-null/31481305#31481305", "title": "How to check if function pointer passed from C is non-NULL", "body": "<p>You can use <code>Option&lt;...&gt;</code> to represent nullable function pointers. It is incorrect to have a NULL value for a value of type <code>fn(...)</code> so the <code>Option</code> wrapper is required for cases like this.</p>\n\n<p>For example,</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn call_c_function(value: i32, fun: Option&lt;fn(i32) -&gt; i32&gt;) -&gt; i32 {\n    if let Some(f) = fun {\n        f(value)\n    }\n}\n</code></pre>\n\n<p>However, there's one extra point: <code>fun</code> is a C function, but the type <code>fn(...)</code> is a Rust function. They're not directly compatible (e.g. their calling conventions differ). One needs to use the <code>extern \"C\" fn(...)</code> (a.k.a. <code>extern fn(...)</code>) type when interacting with C function pointers:</p>\n\n<pre><code>#[no_mangle]\npub extern \"C\" fn call_c_function(value: i32, fun: Option&lt;extern \"C\" fn(i32) -&gt; i32&gt;) -&gt; i32 {\n    if let Some(f) = fun {\n        f(value)\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1578318744, "post_id": 59613274, "comment_id": 105389689, "body": "This does not work with <i>function</i> pointers, which are non-nullable, as huon&#39;s answer explains."}], "tags": [], "owner": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "is_accepted": false, "score": -1, "last_activity_date": 1578318498, "creation_date": 1578318498, "answer_id": 59613274, "question_id": 31481102, "link": "https://stackoverflow.com/questions/31481102/how-to-check-if-function-pointer-passed-from-c-is-non-null/59613274#59613274", "title": "How to check if function pointer passed from C is non-NULL", "body": "<p>You can compare a pointer that has been generated by unsafe code against <code>std::ptr::null()</code></p>\n\n<p>e.g. </p>\n\n<pre><code>let pw = libc::getpwnam(username.as_ptr() as *const i8);\nif std::ptr::null() != pw ...\n</code></pre>\n\n<p><code>null()</code> on Linux is <code>0 as *const T</code> I'm not sure if that is universal.</p>\n"}], "owner": {"reputation": 487, "user_id": 451149, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f90c9f613b91baa64d1210b674867914?s=128&d=identicon&r=PG", "display_name": "ldanko", "link": "https://stackoverflow.com/users/451149/ldanko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3261, "favorite_count": 1, "accepted_answer_id": 31481305, "answer_count": 2, "score": 8, "last_activity_date": 1578327555, "creation_date": 1437152705, "last_edit_date": 1437152835, "question_id": 31481102, "link": "https://stackoverflow.com/questions/31481102/how-to-check-if-function-pointer-passed-from-c-is-non-null", "title": "How to check if function pointer passed from C is non-NULL", "body": "<p>Example code below</p>\n\n<p>The Rust part:</p>\n\n<pre><code>#[no_mangle]\npub extern fn call_c_function(value: i32, fun: fn(i32) -&gt; i32) -&gt; i32 {\n    fun(value)\n}\n</code></pre>\n\n<p>And the C part:</p>\n\n<pre><code>int32_t call_c_function(int32_t value, int32_t (*fun)(int32_t));\n\nint32_t triple(int32_t x)\n{\n    return x*3;\n}\n\nint main(int argc, char *argv[])\n{\n    int32_t value = 3;\n    int32_t result = call_c_function(value, triple);\n\n    printf(\"%d tripled is %d\\n\", value, result);\n\n    call_c_function(0, NULL);  // Crash here\n\n    return EXIT_SUCCESS;\n}\n</code></pre>\n\n<p>Of course second call of <code>call_c_function</code> will crash.\nRust compiler will not complain about unsafe code inside <code>call_c_function</code>, because from rust point of view this code is safe. Also it's not allowed to simply write:</p>\n\n<pre><code>if !fun.is_null() {\n    fun(value)\n}\n</code></pre>\n\n<p>because <code>fun</code> type is <code>fn(i32) -&gt; i32</code> (it's not a pointer).</p>\n\n<p>So my question is, how I can protect <code>call_c_function</code> against NULL pointer dereference? Is there any way to check if callback passed from C is not valid?</p>\n\n<p>Maybe I have to change <code>call_c_function</code> definition?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "edited": false, "score": 0, "creation_date": 1437279868, "post_id": 31470250, "comment_id": 50959439, "body": "Fully corrected <a href=\"https://play.rust-lang.org/?gist=c778e02b61a617a3c498&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a> (needs an external crate to run, so it can&#39;t be run in the playground directly)"}], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "edited": false, "score": 0, "creation_date": 1437121202, "post_id": 31470435, "comment_id": 50908146, "body": "Thanks. Is there any way to allow V to be any integer type (besides writing a CastFromUsize trait and implementing it manually for all the integer types)?"}, {"owner": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "edited": false, "score": 0, "creation_date": 1437126627, "post_id": 31470435, "comment_id": 50911291, "body": "shouldn&#39;t we have <code>fn assign_id(&amp;mut self, key: K) -&gt; (usize, bool);</code> else it may not do anything ...."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "edited": false, "score": 0, "creation_date": 1437128158, "post_id": 31470435, "comment_id": 50912189, "body": "@tafia: Either that, or implement the trait on <code>&amp;mut HashMap&lt;K, usize&gt;</code> instead."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "edited": false, "score": 0, "creation_date": 1437135255, "post_id": 31470435, "comment_id": 50916186, "body": "@EM: you can use the <code>num</code> crate, it has several conversion traits like <a href=\"http://doc.rust-lang.org/num/num/traits/trait.NumCast.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/num/num/traits/trait.NumCast.html</a> and <a href=\"http://doc.rust-lang.org/num/num/traits/trait.FromPrimitive.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/num/num/traits/trait.FromPrimitive.html</a> and <a href=\"http://doc.rust-lang.org/num/num/traits/trait.ToPrimitive.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/num/num/traits/trait.ToPrimitive.html</a>"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 1343, "user_id": 4365239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88acc4986ddaf51e21c254fb8c0f11b8?s=128&d=identicon&r=PG&f=1", "display_name": "tafia", "link": "https://stackoverflow.com/users/4365239/tafia"}, "edited": false, "score": 0, "creation_date": 1437135292, "post_id": 31470435, "comment_id": 50916202, "body": "@tafia: correct, in real code this would be an issue :)"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 1, "last_activity_date": 1437117816, "creation_date": 1437117816, "answer_id": 31470435, "question_id": 31470250, "link": "https://stackoverflow.com/questions/31470250/implementing-a-trait-on-hashmap-that-uses-methods-with-bounds/31470435#31470435", "title": "Implementing a trait on HashMap that uses methods with bounds", "body": "<blockquote>\n  <p>error: no method named <code>contains_key</code> found for type </p>\n</blockquote>\n\n<p>As you can see in the documentation of <a href=\"https://doc.rust-lang.org/nightly/std/collections/struct.HashMap.html#method.contains_key\" rel=\"nofollow\"><code>contains_key</code></a>, the <code>impl</code> block in which <code>contains_key</code> is defined, has the bounds <code>where K: Eq + Hash, S: HashState</code>. Adding the bound for K to your where clause will also fix the other <code>no method</code> errors and the <code>cannot index a value of type</code>std::collections::hash::map::HashMap` error.</p>\n\n<p>After that you get</p>\n\n<blockquote>\n  <p>error: non-scalar cast: <code>usize</code> as <code>V</code></p>\n</blockquote>\n\n<p>which corresponds to this line:</p>\n\n<pre><code>let id = self.len() as V;\n</code></pre>\n\n<p>What you are trying to do here is to cast a <code>usize</code> to whatever type <code>V</code> is instanciated to. This can't work in general, as <code>V</code> might actually be something that is not compatible with a <code>usize</code> (e.g. a <code>Vec</code> or any other struct). Since what you actually want is a <code>HashMap</code> from some key to an id, you can simply remove all the <code>V</code> generics and directly set the Value parameter of <code>HashMap</code>:</p>\n\n<pre><code>trait IdAssigner&lt;K&gt; {\n    fn assign_id(mut self, key: K) -&gt; (usize, bool);\n}\n\nimpl&lt;K&gt; IdAssigner&lt;K&gt; for HashMap&lt;K, usize&gt;\n    where K: Eq + Hash,\n</code></pre>\n"}], "owner": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 694, "favorite_count": 0, "accepted_answer_id": 31470435, "answer_count": 1, "score": 0, "last_activity_date": 1437117816, "creation_date": 1437117115, "question_id": 31470250, "link": "https://stackoverflow.com/questions/31470250/implementing-a-trait-on-hashmap-that-uses-methods-with-bounds", "title": "Implementing a trait on HashMap that uses methods with bounds", "body": "<p>I have the following trait that I want to implement on HashMaps:</p>\n\n<pre><code>trait IdAssigner&lt;K, V&gt; {\n    // If key has already been seen, returns (id_for_key, false). Otherwise\n    // assigns a new id_for_key (starting with 0 and increasing) and returns\n    // (id_for_key, true).\n    fn assign_id(mut self, key: K) -&gt; (V, bool);\n}\n\nimpl&lt;K, V&gt; IdAssigner&lt;K, V&gt; for HashMap&lt;K, V&gt; where V: Add&lt;V&gt; {\n    fn assign_id(mut self, key: K) -&gt; (V, bool) {\n        if self.contains_key(&amp;key) {\n            (self[&amp;key], false)\n        } else {\n            let id = self.len() as V;\n            self[&amp;key] = id;\n            (id, true)\n        }\n    }\n}\n</code></pre>\n\n<p>The compiler gives various errors about the methods I want to call in the implementation on the HashMap don't exist. I suspect that I need to add the same bounds to my impl statement that exist on those methods. How do I fix this code?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=53b2a0c12a5834da6fb4&amp;version=stable\" rel=\"nofollow\">Playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1437118049, "post_id": 31470146, "comment_id": 50906592, "body": "These answers to different questions might also answer your question: <a href=\"http://stackoverflow.com/questions/24847331/rust-lifetime-error-expected-concrete-lifetime-but-found-bound-lifetime\" title=\"rust lifetime error expected concrete lifetime but found bound lifetime\">stackoverflow.com/questions/24847331/&hellip;</a> and <a href=\"http://stackoverflow.com/questions/30273850/linking-the-lifetimes-of-self-and-a-reference-in-method/30274925#30274925\" title=\"linking the lifetimes of self and a reference in method\">stackoverflow.com/questions/30273850/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "edited": false, "score": 0, "creation_date": 1437138980, "post_id": 31471347, "comment_id": 50918530, "body": "Very detailed and explained it very well. Thank you."}, {"owner": {"reputation": 2621, "user_id": 7884305, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f582791bc217379415cc2bc54abc718?s=128&d=identicon&r=PG&f=1", "display_name": "Chayim Friedman", "link": "https://stackoverflow.com/users/7884305/chayim-friedman"}, "edited": false, "score": 0, "creation_date": 1598736631, "post_id": 31471347, "comment_id": 112558001, "body": "I still don&#39;t understand: if I constraint the lifetime to <code>self</code>, why is it different from a lifetime that appears in the <code>impl</code> clause?"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 13, "last_activity_date": 1518226702, "last_edit_date": 1518226702, "creation_date": 1437121409, "answer_id": 31471347, "question_id": 31470146, "link": "https://stackoverflow.com/questions/31470146/what-are-the-differences-between-specifying-lifetime-parameters-on-an-impl-or-on/31471347#31471347", "title": "What are the differences between specifying lifetime parameters on an impl or on a method?", "body": "<p>Yes, there is a difference.</p>\n\n<blockquote>\n  <p>The method's signature is no different than the one from the docs.</p>\n</blockquote>\n\n<p>The fact that it looks like this in docs is a fault of rustdoc, and has since been resolved.</p>\n\n<p>If you press <code>[src]</code> link in the upper right corner of the documentation, you will be redirected to the actual source of <code>Deref</code>, which looks as follows (I've removed extra attributes and comments):</p>\n\n<pre><code>pub trait Deref {\n    type Target: ?Sized;\n    fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a Self::Target;\n}\n</code></pre>\n\n<p>You can see that <code>deref()</code> is declared to have a lifetime parameter.</p>\n\n<blockquote>\n  <p>I thought that the difference between specifying the lifetime\n  parameter on the impl or on the method directly is in the scope of the\n  parameter only.</p>\n</blockquote>\n\n<p>And this is wrong. The difference is not in scope only. I don't think I will be able to provide convincing side-by-side examples where a semantic difference is visible, but consider the following reasoning.</p>\n\n<p>First, lifetime parameters are no different from generic type parameters. It is no coincidence that they use similar declaration syntax. Like generic parameters, lifetime parameters participate in the method/function signature, so if you want to implement a trait which has a method with lifetime parameters, your implementation <em>must</em> have the same lifetime parameters as well (modulo possible renaming).</p>\n\n<p>Second, lifetime parameters in <code>impl</code> signature are used to express different kinds of lifetime relationship than those on functions. For methods, it is <em>always</em> the caller who determines the actual lifetime parameter they want to use. It is, again, similar to how generic methods work - the caller may instantiate its type parameters with any type they need. It is very important, for <code>Deref</code> in particular - you would want that anything which implements <code>Deref</code> may be dereferenced with the lifetime of the reference the method is called on, not something else.</p>\n\n<p>With <code>impl</code>, however, lifetime parameters are chosen not when the method which uses this parameter is called, but when the appropriate <code>impl</code> is chosen by the compiler. It may do so (and usually does so) based on the type of the value, which precludes the user from specifying arbitrary lifetimes when the method is called. For example:</p>\n\n<pre><code>struct Bytes&lt;'a&gt;(&amp;'a [u8]);\n\nimpl&lt;'a&gt; Bytes&lt;'a&gt; {\n    fn first_two(&amp;self) -&gt; &amp;'a [u8] {\n        &amp;self.0[..2]\n    }\n}\n</code></pre>\n\n<p>Here, the <code>first_two()</code> method returns a slice with a lifetime of the value which is stored inside the <code>Bytes</code> structure. The caller of the method can't decide which lifetime they want - it is always fixed to the lifetime of the slice inside the structure this method is called on. It is also impossible to bring the lifetime parameter down to the method while keeping the same semantics, I guess you can see why.</p>\n\n<p>In your case the lifetime parameter you specified does not participate either in the signature of the <code>impl</code> nor in any associated types, so it theoretically <em>could</em> be used as if it was declared on each function separately (because it can be arbitrary when the method is called), but then the reasoning about method signatures (provided above) kicks in.</p>\n"}], "owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2811, "favorite_count": 2, "accepted_answer_id": 31471347, "answer_count": 1, "score": 14, "last_activity_date": 1518226768, "creation_date": 1437116663, "last_edit_date": 1518226768, "question_id": 31470146, "link": "https://stackoverflow.com/questions/31470146/what-are-the-differences-between-specifying-lifetime-parameters-on-an-impl-or-on", "title": "What are the differences between specifying lifetime parameters on an impl or on a method?", "body": "<p>In Rust 1.3.0, the <a href=\"https://doc.rust-lang.org/1.3.0/std/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code></a> trait has the following signature in the documentation:</p>\n\n<pre><code>pub trait Deref {\n    type Target: ?Sized;\n    fn deref(&amp;'a self) -&gt; &amp;'a Self::Target;\n}\n</code></pre>\n\n<p>I would implement it without naming the lifetimes, since they get elided anyway. However, in the <a href=\"https://doc.rust-lang.org/1.3.0/std/ops/trait.Deref.html#examples\" rel=\"noreferrer\">docs example</a> it looks like this:</p>\n\n<pre><code>use std::ops::Deref;\n\nstruct DerefExample&lt;T&gt; {\n    value: T\n}\n\nimpl&lt;T&gt; Deref for DerefExample&lt;T&gt; {\n    type Target = T;\n\n    fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a T {\n        &amp;self.value\n    }\n}\n\nfn main() {\n    let x = DerefExample { value: 'a' };\n    assert_eq!('a', *x);\n}\n</code></pre>\n\n<p>This works all well and good, but if I specify the lifetime parameter <code>'a</code> on the impl instead of the method:</p>\n\n<pre><code>struct DerefExample&lt;T&gt; {\n    value: T\n}\n\nimpl&lt;'a, T&gt; Deref for DerefExample&lt;T&gt; {\n    type Target = T;\n\n    fn deref(&amp;'a self) -&gt; &amp;'a T {\n        &amp;self.value\n    }\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: method not compatible with trait\n  --&gt; src/main.rs:10:5\n   |\n10 | /     fn deref(&amp;'a self) -&gt; &amp;'a T {\n11 | |         &amp;self.value\n12 | |     }\n   | |_____^ lifetime mismatch\n   |\n   = note: expected type `fn(&amp;DerefExample&lt;T&gt;) -&gt; &amp;T`\n              found type `fn(&amp;'a DerefExample&lt;T&gt;) -&gt; &amp;'a T`\nnote: the anonymous lifetime #1 defined on the method body at 10:5...\n  --&gt; src/main.rs:10:5\n   |\n10 | /     fn deref(&amp;'a self) -&gt; &amp;'a T {\n11 | |         &amp;self.value\n12 | |     }\n   | |_____^\nnote: ...does not necessarily outlive the lifetime 'a as defined on the impl at 7:1\n  --&gt; src/main.rs:7:1\n   |\n7  | / impl&lt;'a, T&gt; Deref for DerefExample&lt;T&gt; {\n8  | |     type Target = T;\n9  | |\n10 | |     fn deref(&amp;'a self) -&gt; &amp;'a T {\n11 | |         &amp;self.value\n12 | |     }\n13 | | }\n   | |_^\n</code></pre>\n\n<p>This confuses me. The method's signature is no different than the one from the docs. In addition, I thought that the difference between specifying the lifetime parameter on the impl or on the method directly is in the scope of the parameter only, so it can be used in the entire impl block instead of just the method. What am I missing here?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": false, "score": 15, "last_activity_date": 1437084765, "creation_date": 1437084765, "answer_id": 31465434, "question_id": 31465194, "link": "https://stackoverflow.com/questions/31465194/how-can-i-return-something-from-hashmap-get-s-none-case/31465434#31465434", "title": "How can I return something from HashMap.get\u2019s None case?", "body": "<p>For starters, <code>&amp;String</code> is a type that should never exist in a signature; you should take the more general <code>&amp;str</code>. <code>String</code> is specifically an owned string, while <code>&amp;str</code> is a string slice. Because <code>String</code> implements <code>Deref&lt;Target = str&gt;</code>, <code>&amp;String</code> coerces to <code>&amp;str</code>.</p>\n\n<p>When dealing with hash map keys, you should also take <code>&amp;str</code> rather than <code>&amp;String</code>, and you should avoid taking <code>String</code> if all you need is <code>&amp;str</code>; you don\u2019t need to consume the string. You can index a <code>HashMap&lt;String, _&gt;</code> with <code>&amp;str</code> just fine.</p>\n\n<p>The type of a string literal is <code>&amp;'static str</code>; <code>&amp;'static str</code> will quite happily coerce to <code>&amp;'a str</code> for any <code>'a</code>, so you can quite happily use an empty string literal on the <code>None</code> branch. Here\u2019s the result:</p>\n\n<pre><code>pub fn get_value(&amp;self, value: &amp;str) -&gt; &amp;str {\n    match self.os_config.get(value) {\n        Some(val) =&gt; val,\n        None =&gt; \"\",\n    }\n}\n</code></pre>\n\n<p>This can also be written using the handy <a href=\"http://doc.rust-lang.org/core/option/enum.Option.html#method.unwrap_or\"><code>unwrap_or</code></a> method:</p>\n\n<pre><code>pub fn get_value(&amp;self, value: &amp;str) -&gt; &amp;str {\n    self.os_config.get(value).unwrap_or(\"\")\n}\n</code></pre>\n\n<p>For this reason, returning an <code>Option&lt;&amp;str&gt;</code> is perhaps not so tedious; other places can add <code>.unwrap_or(\"\")</code> if they want to. Of course, it all depends on the desired semantics.</p>\n"}, {"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1437114187, "post_id": 31465627, "comment_id": 50904784, "body": "Holy Cow, I&#39;ve been quoted here. ;-) Feel free to copy the example here. I&#39;ll try to make sure the link won&#39;t go stale, but one never knows."}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": false, "score": 2, "last_activity_date": 1437085659, "creation_date": 1437085659, "answer_id": 31465627, "question_id": 31465194, "link": "https://stackoverflow.com/questions/31465194/how-can-i-return-something-from-hashmap-get-s-none-case/31465627#31465627", "title": "How can I return something from HashMap.get\u2019s None case?", "body": "<p>If you need to return an arbitrary type or result, such that you can't use a <code>'static</code> reference, you can return a <code>Cow</code> type from the function.</p>\n\n<p>A simple demo is at <a href=\"https://llogiq.github.io/2015/07/09/cow.html\" rel=\"nofollow\">Holy std::borrow::Cow!</a>, but you basically just have to wrap it in a <code>Cow::Borrowed</code> normally and a <code>Cow::Owned</code> for the error case.</p>\n"}], "owner": {"reputation": 435, "user_id": 811937, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/ddImI.jpg?s=128&g=1", "display_name": "Richard Donovan", "link": "https://stackoverflow.com/users/811937/richard-donovan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1221, "favorite_count": 0, "answer_count": 2, "score": 8, "last_activity_date": 1437085659, "creation_date": 1437083719, "last_edit_date": 1437084968, "question_id": 31465194, "link": "https://stackoverflow.com/questions/31465194/how-can-i-return-something-from-hashmap-get-s-none-case", "title": "How can I return something from HashMap.get\u2019s None case?", "body": "<p>I'm wondering with the best practice to handle the <code>None</code> result in getting values from a <code>HashMap</code>. Given I have a simple function:</p>\n\n<pre><code>pub fn get_value(&amp;self, value: String) -&gt; &amp;String {\n</code></pre>\n\n<p>One could get the value from the <code>HashMap</code> with <code>unwrap</code>:</p>\n\n<pre><code>my_map.get(&amp;\"hello\".to_string()).unwrap()\n</code></pre>\n\n<p>But I don\u2019t want it to panic if it gets <code>None</code>. What else can I do?</p>\n\n<pre><code>match self.os_config.get(&amp;value) {\n    Some(val) =&gt; return &amp;val,\n    None =&gt;  //?? cannot return a String::new().. as it is temporal?\n}\n</code></pre>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 0, "creation_date": 1437078499, "post_id": 31463792, "comment_id": 50894143, "body": "I&#39;m not going to call rust function from C. In my rust code, I want to pass an argument to <code>on_connect</code> argument."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 0, "creation_date": 1437078685, "post_id": 31463792, "comment_id": 50894242, "body": "@tez <i>&quot;I&#39;m not going to call rust function from C call&quot;</i> \u2014 but you specifically asked <i>&quot;How do I create a rust callback function?&quot;</i>. That&#39;s what a callback is. Maybe you are just asking how to use the <code>mosquitto</code> API, not anything specific to Rust?"}, {"owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 0, "creation_date": 1437079068, "post_id": 31463792, "comment_id": 50894420, "body": "Ok. That might have created some confusion. But, by callback function, I mean &#39;a function which is passed to other function as an argument&#39;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 0, "creation_date": 1437079538, "post_id": 31463792, "comment_id": 50894685, "body": "@tez that&#39;s <i>exactly</i> what both examples in the answer show. See the calls  to <code>register_callback</code> and <code>mosquitto_connect_callback_set</code>."}, {"owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 0, "creation_date": 1437080042, "post_id": 31463792, "comment_id": 50894940, "body": "Sorry. My bad. I thought you were referring to &#39;how to call rust functions from C&#39;."}, {"owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "edited": false, "score": 0, "creation_date": 1535825373, "post_id": 31463792, "comment_id": 91212184, "body": "Hello @Shepmaster, a follow-up question: for <code>arg2</code> with type <code>*mut ::libc::c_void</code>, if I need to pass in a Rust struct as the argument here, how can I do this? Rust will raise the type mismatch error. Thanks!"}, {"owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "edited": false, "score": 0, "creation_date": 1536286464, "post_id": 31463792, "comment_id": 91378054, "body": "I&#39;m wondering what if I don&#39;t have a callback function to pass in. In C, I can pass in <code>NULL</code> but in Rust, do I need to create some fake function that does nothing?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "edited": false, "score": 0, "creation_date": 1536623568, "post_id": 31463792, "comment_id": 91481640, "body": "@zack that would be <code>Option&lt;fn(...) -&gt; ...&gt;</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1563920378, "last_edit_date": 1563920378, "creation_date": 1437077989, "answer_id": 31463792, "question_id": 31463426, "link": "https://stackoverflow.com/questions/31463426/how-do-i-create-a-rust-callback-function-to-pass-to-a-ffi-function/31463792#31463792", "title": "How do I create a Rust callback function to pass to a FFI function?", "body": "<p><a href=\"http://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, <strong>first edition</strong>, has a section about FFI titled <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/ffi.html#callbacks-from-c-code-to-rust-functions\" rel=\"nofollow noreferrer\">Callbacks from C code to Rust functions</a>.</p>\n\n<p>The example from there is</p>\n\n<pre><code>extern \"C\" fn callback(a: i32) {\n    println!(\"I'm called from C with value {0}\", a);\n}\n\n#[link(name = \"extlib\")]\nextern \"C\" {\n    fn register_callback(cb: extern \"C\" fn(i32)) -&gt; i32;\n    fn trigger_callback();\n}\n\nfn main() {\n    unsafe {\n        register_callback(callback);\n        trigger_callback(); // Triggers the callback\n    }\n}\n</code></pre>\n\n<p>For your specific case, you already know the specific type of function you need:</p>\n\n<pre><code>extern \"C\" fn mycallback(\n    arg1: *mut Struct_mosquitto,\n    arg2: *mut ::libc::c_void,\n    arg3: ::libc::c_int,\n) -&gt; () {\n    println!(\"I'm in Rust!\");\n}\n</code></pre>\n\n<p>And then use it like</p>\n\n<pre><code>mosquitto_connect_callback_set(mosq, Some(mycallback));\n</code></pre>\n"}], "owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4067, "favorite_count": 3, "accepted_answer_id": 31463792, "answer_count": 1, "score": 11, "last_activity_date": 1563920493, "creation_date": 1437076709, "last_edit_date": 1563920493, "question_id": 31463426, "link": "https://stackoverflow.com/questions/31463426/how-do-i-create-a-rust-callback-function-to-pass-to-a-ffi-function", "title": "How do I create a Rust callback function to pass to a FFI function?", "body": "<p>This is how the C API looks</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>void mosquitto_connect_callback_set(struct mosquitto *mosq, void (*on_connect)(struct mosquitto *, void *, int));\n</code></pre>\n\n<p><code>rust-bindgen</code> has generated this for me</p>\n\n<pre><code>pub fn mosquitto_connect_callback_set(\n    mosq: *mut Struct_mosquitto,\n    on_connect: ::std::option::Option&lt;\n        extern \"C\" fn(\n            arg1: *mut Struct_mosquitto,\n            arg2: *mut ::libc::c_void,\n            arg3: ::libc::c_int,\n        ) -&gt; (),\n    &gt;,\n)\n</code></pre>\n\n<p>How do I create a Rust callback function to pass to the <code>on_connect</code> parameter in the above Rust binding?</p>\n"}, {"tags": ["oop", "inheritance", "rust", "default", "traits"], "answers": [{"comments": [{"owner": {"reputation": 317, "user_id": 4491989, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-Njq06U36KfI/AAAAAAAAAAI/AAAAAAAAACI/LDsRnAz9u_c/photo.jpg?sz=128", "display_name": "faiface", "link": "https://stackoverflow.com/users/4491989/faiface"}, "edited": false, "score": 0, "creation_date": 1437073075, "post_id": 31462151, "comment_id": 50891242, "body": "Thanks for the answer. I&#39;m asking this because this paradigm of extending functionality of existing classes is often and quite effectively used in rapid application development. Sometimes it results in a pretty ugly code, but it&#39;s often very effective, so I was wondering if I can get an equivalent in Rust. Extracting the functionality to a separate function doesn&#39;t seem all that good to me, because you have to think in advance when doing it. Once the API is already settled, you can&#39;t extract anything and what then? But of course, I&#39;ll mark your answer correct if nothing better appears."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 317, "user_id": 4491989, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-Njq06U36KfI/AAAAAAAAAAI/AAAAAAAAACI/LDsRnAz9u_c/photo.jpg?sz=128", "display_name": "faiface", "link": "https://stackoverflow.com/users/4491989/faiface"}, "edited": false, "score": 0, "creation_date": 1437073186, "post_id": 31462151, "comment_id": 50891306, "body": "@faiface <i>because you have to think in advance</i> \u2014 I think I&#39;ll continue to tout that as a benefit of Rust, not a downside ^_^"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1437085509, "post_id": 31462151, "comment_id": 50897368, "body": "@Shepmaster: \u201cRust is not an object-oriented language.\u201d This is completely false. Rust doesn\u2019t go for full <i>class-based</i> OOP, but it\u2019s <i>definitely</i> an object-oriented language. (Why, even the Wikipedia article says so! \ud83d\ude1b)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1437086460, "post_id": 31462151, "comment_id": 50897666, "body": "@ChrisMorgan fair point, and I&#39;ve updated. However, I fear that people hear &quot;OO&quot; and translate that as &quot;what Java/C# can do&quot;."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1437086417, "last_edit_date": 1437086417, "creation_date": 1437072318, "answer_id": 31462151, "question_id": 31461902, "link": "https://stackoverflow.com/questions/31461902/is-it-possible-to-extend-a-default-method-implementation-of-a-trait-in-a-struct/31462151#31462151", "title": "Is it possible to extend a default method implementation of a trait in a struct?", "body": "<blockquote>\n  <p>Is this a problem within Rust?</p>\n</blockquote>\n\n<p>No, this is working as intended</p>\n\n<blockquote>\n  <p>Is there a way around it?</p>\n</blockquote>\n\n<p>You can move the method to a free function and then call it directly, once from the default method and once from the \"overridden\" method.</p>\n\n<pre><code>fn the_default() {\n    println!(\"default implementation\");\n}\n\ntrait Foo {\n    fn method(&amp;self) {\n        the_default()    \n    }\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn method(&amp;self) {\n        the_default();\n        println!(\"Hey, I'm doing something entirely different!\");\n    }\n}\n\nfn main() {\n    let b = Bar;\n    b.method();\n}\n</code></pre>\n\n<blockquote>\n  <p>Or am I just missing something?</p>\n</blockquote>\n\n<p><s>Rust is not an object-oriented language,</s> Rust may be an object-oriented language, but not all OO languages are created the same. Rust may not quite fit into the traditional paradigms that you expect.</p>\n\n<p>Namely, traits don't exist at run time. Only when they are applied to and used with a struct is code generated that is callable. When you create your own implementation of a method, that supersedes the default implementation; there's nowhere for the default method implementation to exist.</p>\n\n<p>Often times, your code can be written in a different way. Perhaps the truly shared code should be extracted as a method on a new struct, or maybe you provide a closure to a method to customize the behavior.</p>\n"}, {"comments": [{"owner": {"reputation": 317, "user_id": 4491989, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-Njq06U36KfI/AAAAAAAAAAI/AAAAAAAAACI/LDsRnAz9u_c/photo.jpg?sz=128", "display_name": "faiface", "link": "https://stackoverflow.com/users/4491989/faiface"}, "edited": false, "score": 0, "creation_date": 1437073977, "post_id": 31462293, "comment_id": 50891705, "body": "Ok, I think I understand, what still bugs me is why does it work for inherited traits? The same syntax <code>Foo::method(self)</code> that calls the method on the specific type when called within the trait implementation for a struct calls the original implementation when called inside an inherited trait. Why is this?"}, {"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "reply_to_user": {"reputation": 317, "user_id": 4491989, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-Njq06U36KfI/AAAAAAAAAAI/AAAAAAAAACI/LDsRnAz9u_c/photo.jpg?sz=128", "display_name": "faiface", "link": "https://stackoverflow.com/users/4491989/faiface"}, "edited": false, "score": 3, "creation_date": 1437081941, "post_id": 31462293, "comment_id": 50895861, "body": "It&#39;s not doing what you expect. You&#39;re defining a new method <code>Boo::method</code> that&#39;s different to the <code>Foo::method</code> one. It is still calling the specific method on the type; I guess your test code didn&#39;t override <code>method</code> on <code>Foo</code>, only on <code>Bar</code>."}, {"owner": {"reputation": 317, "user_id": 4491989, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-Njq06U36KfI/AAAAAAAAAAI/AAAAAAAAACI/LDsRnAz9u_c/photo.jpg?sz=128", "display_name": "faiface", "link": "https://stackoverflow.com/users/4491989/faiface"}, "edited": false, "score": 0, "creation_date": 1437084336, "post_id": 31462293, "comment_id": 50896957, "body": "Yeah, thanks, you&#39;re correct, now I understand it a lot better."}], "tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": true, "score": 12, "last_activity_date": 1437072831, "creation_date": 1437072831, "answer_id": 31462293, "question_id": 31461902, "link": "https://stackoverflow.com/questions/31461902/is-it-possible-to-extend-a-default-method-implementation-of-a-trait-in-a-struct/31462293#31462293", "title": "Is it possible to extend a default method implementation of a trait in a struct?", "body": "<p>This isn't possible directly now. </p>\n\n<p>However, <a href=\"https://github.com/rust-lang/rfcs/pull/1210\">RFC 1210: <code>impl</code> specialization</a> contains various aspects that will make this sort of behaviour work, for example, something like this should work:</p>\n\n<pre><code>trait Foo {\n    fn method(&amp;self) { println!(\"default implementation\"); }\n}\ntrait Bar: Foo { ... }\n\npartial impl&lt;T: Bar&gt; Foo for T {\n    default fn method(&amp;self) { println!(\"Bar default\"); }\n}\n</code></pre>\n\n<p>Doing a <code>super</code> call is explicitly mentioned as <a href=\"https://github.com/aturon/rfcs/blob/impl-specialization/text/0000-impl-specialization.md#super\">an extension</a> to it and so won't necessarily appear immediately, but may appear in future.</p>\n\n<p>In the mean time, the approach generally used is to define a separate function for the default behaviour and call that in the default method, and then users can emulate the <code>super::...</code> call by just calling that function directly:</p>\n\n<pre><code>trait Foo {\n    fn method(&amp;self) { do_method(self) }\n}\n\nfn do_method&lt;T: Foo&gt;(_x: &amp;T) {\n    println!(\"default implementation\");\n}\n\nimpl Foo for Bar {\n    fn method(&amp;self) {\n        do_method(self);\n        println!(\"more\");\n    }\n}\n</code></pre>\n\n<p>That said, Rust favours composition over inheritance: designs that work well in Java can't and shouldn't be forced 1-to-1 into Rust.</p>\n\n<blockquote>\n<pre><code>    Foo::method(self);  // this apparently calls this overridden\n                        // version, because it overflows the stack\n</code></pre>\n</blockquote>\n\n<p>The qualified path syntax, <code>Trait::method(value)</code> is sugar for <code>&lt;Type as Trait&gt;::method(value)</code> where <code>Type</code> is the type of <code>value</code> (or, possibly, the type after dereferencing some number of times). That is, it's calling the method on the specific type as you found out.</p>\n"}, {"comments": [{"owner": {"reputation": 772, "user_id": 2177445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70a2a5ad356c78484d79a3ad4b99209f?s=128&d=identicon&r=PG", "display_name": "likebike", "link": "https://stackoverflow.com/users/2177445/likebike"}, "edited": false, "score": 1, "creation_date": 1573064984, "post_id": 56311216, "comment_id": 103763031, "body": "Wow, I really did not expect this behavior.  Thanks for showing this."}], "tags": [], "owner": {"reputation": 1053, "user_id": 4247851, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/W4hFQ.png?s=128&g=1", "display_name": "Shanavas M", "link": "https://stackoverflow.com/users/4247851/shanavas-m"}, "is_accepted": false, "score": 6, "last_activity_date": 1558852295, "creation_date": 1558852295, "answer_id": 56311216, "question_id": 31461902, "link": "https://stackoverflow.com/questions/31461902/is-it-possible-to-extend-a-default-method-implementation-of-a-trait-in-a-struct/56311216#56311216", "title": "Is it possible to extend a default method implementation of a trait in a struct?", "body": "<p>Another way of accomplishing this would be to place the overriding method in <code>impl</code> block of struct</p>\n\n<pre><code>trait A {\n    fn a(&amp;self) {\n        println!(\"trait default method\");\n    }\n}\n\nstruct B;\n\nimpl B {\n    fn a(&amp;self) {\n        println!(\"overridden method\");\n        // call default method here\n        A::a(self);\n    }\n}\n\nimpl A for B {}\n\nfn main() {\n    let a = B;\n    a.a();\n} \n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6c3fb49886ced25d3442d8ce9e959665\" rel=\"noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 317, "user_id": 4491989, "user_type": "registered", "accept_rate": 75, "profile_image": "https://lh6.googleusercontent.com/-Njq06U36KfI/AAAAAAAAAAI/AAAAAAAAACI/LDsRnAz9u_c/photo.jpg?sz=128", "display_name": "faiface", "link": "https://stackoverflow.com/users/4491989/faiface"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7094, "favorite_count": 5, "accepted_answer_id": 31462293, "answer_count": 3, "score": 18, "last_activity_date": 1567780975, "creation_date": 1437071466, "last_edit_date": 1567780975, "question_id": 31461902, "link": "https://stackoverflow.com/questions/31461902/is-it-possible-to-extend-a-default-method-implementation-of-a-trait-in-a-struct", "title": "Is it possible to extend a default method implementation of a trait in a struct?", "body": "<p>In traditional object-oriented languages (e.g. Java), it is possible to \"extend\" the functionality of a method in an inherited class by calling the original method from the super class in the overridden version, for example:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>class A {\n    public void method() {\n        System.out.println(\"I am doing some serious stuff!\");\n    }\n}\n\nclass B extends A {\n    @Override\n    public void method() {\n        super.method(); // here we call the original version\n        System.out.println(\"And I'm doing something more!\");\n    }\n}\n</code></pre>\n\n<p>As you can see, in Java, I am able to call the original version from the super class using the <code>super</code> keyword. I was able to get the equivalent behavior for inherited traits, but not when implementing traits for structs.</p>\n\n<pre><code>trait Foo {\n    fn method(&amp;self) {\n        println!(\"default implementation\");\n    }\n}\n\ntrait Boo: Foo {\n    fn method(&amp;self) {\n        // this is overriding the default implementation\n        Foo::method(self);  // here, we successfully call the original\n                            // this is tested to work properly\n        println!(\"I am doing something more.\");\n    }\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn method(&amp;self) {\n        // this is overriding the default implementation as well\n        Foo::method(self);  // this apparently calls this overridden\n                            // version, because it overflows the stack\n        println!(\"Hey, I'm doing something entirely different!\");\n        println!(\"Actually, I never get to this point, 'cause I crash.\");\n    }\n}\n\nfn main() {\n    let b = Bar;\n    b.method();     // results in \"thread '&lt;main&gt;' has overflowed its stack\"\n}\n</code></pre>\n\n<p>So, in case of inherited traits, calling the original default implementation is no problem, however, using the same syntax when implementing structs exhibits different behavior. Is this a problem within Rust? Is there a way around it? Or am I just missing something?</p>\n"}, {"tags": ["dictionary", "rust"], "answers": [{"comments": [{"owner": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "edited": false, "score": 0, "creation_date": 1437036142, "post_id": 31448546, "comment_id": 50866617, "body": "Thanks! You changed the item type to (String, u32), though. Could you show what it would look like if the u32 is replaced with an Iterator&lt;Item=String&gt;? The iterator nested in a tuple, nested in another iterator was part of what I couldn&#39;t figure out how to do."}, {"owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "reply_to_user": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "edited": false, "score": 0, "creation_date": 1437038473, "post_id": 31448546, "comment_id": 50868158, "body": "@EM I edited my answer changing the value type. I hope it suits for you now."}], "tags": [], "owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "is_accepted": false, "score": 1, "last_activity_date": 1437040490, "last_edit_date": 1437040490, "creation_date": 1437033725, "answer_id": 31448546, "question_id": 31447432, "link": "https://stackoverflow.com/questions/31447432/generic-map-as-function-argument/31448546#31448546", "title": "Generic map as function argument", "body": "<p>There are not traits that define a common interface for containers. The only trait that maybe is suited for your is the <code>Index</code> trait.\nSee below for a working example of the correct syntax for <code>IntoIterator</code> and the <code>Index</code> traits. You need to use references if you don't want consume the input, so be careful with lifetime parameters.</p>\n\n<pre><code>use std::ops::Index;\nuse std::iter::IntoIterator;\nuse std::collections::HashMap;\n\n// this consume the input\nfn foo&lt;I: IntoIterator&lt;Item = (String, String)&gt;&gt;(input: I) {\n    let mut c = 0;\n    for _ in input {\n        c += 1;\n    }\n    println!(\"{}\", c);\n}\n\n// maybe you want this\nfn foo_ref&lt;'a, I: IntoIterator&lt;Item = (&amp;'a String, &amp;'a String)&gt;&gt;(input: I) {\n    let mut c = 0;\n    for _ in input {\n        c += 1;\n    }\n    println!(\"{}\", c);\n}\n\nfn get&lt;'a, I: Index&lt;&amp;'a String, Output = String&gt;&gt;(table: &amp;I, k: &amp;'a String) {\n    println!(\"{}\", table[k]);\n}\n\nfn main() {\n    let mut h = HashMap::&lt;String, String&gt;::new();\n    h.insert(\"one\".to_owned(), \"1\".to_owned());\n    h.insert(\"two\".to_owned(), \"2\".to_owned());\n    h.insert(\"three\".to_owned(), \"3\".to_owned());\n\n    foo_ref(&amp;h);\n    get(&amp;h, &amp;\"two\".to_owned());\n}\n</code></pre>\n\n<p><strong>Edit</strong></p>\n\n<p>I changed the value type to everything implements the <code>IntoIterator</code> trait :</p>\n\n<pre><code>use std::ops::Index;\nuse std::iter::IntoIterator;\nuse std::collections::HashMap;\nuse std::collections::LinkedList;\n\nfn foo_ref&lt;'a, B, I, &gt;(input: I)\n    where B : IntoIterator&lt;Item = String&gt;, I: IntoIterator&lt;Item = (&amp;'a String, &amp;'a B)&gt; {\n    //\n}\n\nfn get&lt;'a, B, I&gt;(table: &amp;I, k: &amp;'a String)\n    where B : IntoIterator&lt;Item = String&gt;, I: Index&lt;&amp;'a String, Output = B&gt;\n{\n    // do something with table[k];\n}\n\nfn main() {\n    let mut h1 = HashMap::&lt;String, Vec&lt;String&gt;&gt;::new();\n    let mut h2 = HashMap::&lt;String, LinkedList&lt;String&gt;&gt;::new();\n\n    foo_ref(&amp;h1);\n    get(&amp;h1, &amp;\"two\".to_owned());\n\n    foo_ref(&amp;h2);\n    get(&amp;h2, &amp;\"two\".to_owned());\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "edited": false, "score": 0, "creation_date": 1437036311, "post_id": 31449075, "comment_id": 50866718, "body": "Thanks. Can you expand it to use a nested IntoIterator instead of Vec? I struggled with properly specifying the nested part."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1437049143, "post_id": 31449075, "comment_id": 50874969, "body": "<i>it implies a transfer of ownership</i> \u2014 while true, it could be the transfer of ownership of a reference as well. For example, <code>IntoIterator</code> is implemented for both <code>Vec</code> and <code>&amp;Vec</code>."}, {"owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "reply_to_user": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "edited": false, "score": 0, "creation_date": 1437049601, "post_id": 31449075, "comment_id": 50875327, "body": "@EM see edit for nested <code>IntoIterators</code> version. However verbosity starts to creep in and I&#39;m not sure whether it&#39;s really worth it. I, personally, would rather try exploring the lighter <code>Iterator&lt;Item=(&amp;&#39;a String, &amp;&#39;a Vec&lt;String&gt;)&gt;</code> version."}], "tags": [], "owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "is_accepted": true, "score": 1, "last_activity_date": 1437049390, "last_edit_date": 1437049390, "creation_date": 1437035369, "answer_id": 31449075, "question_id": 31447432, "link": "https://stackoverflow.com/questions/31447432/generic-map-as-function-argument/31449075#31449075", "title": "Generic map as function argument", "body": "<p>There's no such trait to describe an abstract HashMap. I believe there's no plan to make one. The best answer so far is your #2 suggestion: for a read-only HashMap you probably just want something to iterate on.</p>\n\n<p>To answer at the syntax level, you tried to write:</p>\n\n<pre><code>fn foo(input: IntoIterator&lt;(String, IntoIterator&lt;String&gt;)&gt;)\n</code></pre>\n\n<p>But this is not valid because <code>IntoIterator</code> takes no template argument:</p>\n\n<pre><code>pub trait IntoIterator where Self::IntoIter::Item == Self::Item {\n    type Item;\n    type IntoIter: Iterator;\n    fn into_iter(self) -&gt; Self::IntoIter;\n}\n</code></pre>\n\n<p>It takes two <em>associated types</em>, however, so what you really wanted to express is probably the following (internally I changed the nested <code>IntoIterator</code> to a concrete type like <code>Vec</code> for simplicity):</p>\n\n<pre><code>fn foo&lt;I&gt;(input: I)\nwhere I: IntoIterator&lt;\n             Item=(String, Vec&lt;String&gt;), \n             IntoIter=IntoIter&lt;String, Vec&lt;String&gt;&gt;&gt;\n</code></pre>\n\n<p>However the choice if <code>IntoIterator</code> is not always suitable because it implies a transfer of ownership. If you just wanted to borrow the HashMap for read-only purposes, you'd be probably better with the standard iterator trait of a HashMap, <code>Iterator&lt;Item=(&amp;'a String, &amp;'a Vec&lt;String&gt;)&gt;</code>.</p>\n\n<pre><code>fn foo_iter&lt;'a, I&gt;(input: I)\nwhere I: Iterator&lt;Item=(&amp;'a String, &amp;'a Vec&lt;String&gt;)&gt;\n</code></pre>\n\n<p>Which you can use several times by asking for a new iterator, unlike the first version.</p>\n\n<pre><code>let mut h = HashMap::new();\nh.insert(\"The Beatles\".to_string(), \n    vec![\"Come Together\".to_string(),\n         \"Twist And Shout\".to_string()]);\nh.insert(\"The Rolling Stones\".to_string(), \n    vec![\"Paint It Black\".to_string(), \n         \"Satisfaction\".to_string()]);\nfoo_iter(h.iter());\nfoo_iter(h.iter());\nfoo(h);\n//foo(h); &lt;-- error: use of moved value: `h`\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b938e196adafbbc34e1b&amp;version=stable\" rel=\"nofollow\">Full gist</a></p>\n\n<h3>EDIT</h3>\n\n<p>As asked in comments, here is the version of <code>foo</code> for nested <code>IntoIterators</code> instead of the simpler <code>Vec</code>:</p>\n\n<pre><code>fn foo&lt;I, IVecString&gt;(input: I)\nwhere \nI: IntoIterator&lt;\n    Item=(String, IVecString), \n    IntoIter=std::collections::hash_map::IntoIter&lt;String, IVecString&gt;&gt;,\nIVecString: IntoIterator&lt;\n    Item=String,\n    IntoIter=std::vec::IntoIter&lt;String&gt;&gt;\n</code></pre>\n"}], "owner": {"reputation": 57, "user_id": 3478109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/37a66081501bc3cd5e5eb88e5bf818c2?s=128&d=identicon&r=PG&f=1", "display_name": "E M", "link": "https://stackoverflow.com/users/3478109/e-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 31449075, "answer_count": 2, "score": 4, "last_activity_date": 1437049390, "creation_date": 1437030269, "last_edit_date": 1437049018, "question_id": 31447432, "link": "https://stackoverflow.com/questions/31447432/generic-map-as-function-argument", "title": "Generic map as function argument", "body": "<p>I wrote a method:</p>\n\n<pre><code>fn foo(input: HashMap&lt;String, Vec&lt;String&gt;&gt;) {...}\n</code></pre>\n\n<p>I then realized that for the purpose of writing tests, I'd like to have control of the iteration order (maybe a <code>BTreeMap</code> or <code>LinkedHashMap</code>). This led to two questions:</p>\n\n<ol>\n<li>Is there some trait or combination of traits I could use that would essentially express \"a map of string to string-vector\"? I didn't see anything promising in the docs for <code>HashMap</code>.</li>\n<li><p>It turns out that in this method, I just want to iterate over the map entries, and then the items in each string vector, but couldn't figure out the right syntax for specifying this. What's the correct way to write this?</p>\n\n<pre><code>fn foo(input: IntoIterator&lt;(String, IntoIterator&lt;String&gt;)&gt;) {...}\n</code></pre></li>\n</ol>\n"}]