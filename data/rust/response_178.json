[{"tags": ["rust", "operating-system", "sdl", "osdev", "glium"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1528314157, "post_id": 50726479, "comment_id": 88464665, "body": "It&#39;s not very clear from your question what you want to know. What does &quot;control my display&quot; mean? Are you trying to print text on the screen, draw shapes, change the resolution or refresh rate, turn the monitor on or off, etc."}, {"owner": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "edited": false, "score": 1, "creation_date": 1528317894, "post_id": 50726479, "comment_id": 88466393, "body": "It may be better to contact the author of that blog directly. See <a href=\"https://os.phil-opp.com/contact/\" rel=\"nofollow noreferrer\">https://os.phil-opp.com/contact/</a>."}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1528349655, "post_id": 50726479, "comment_id": 88474920, "body": "@WesleyWiser draw shapes, other-than-VGA text, etc."}, {"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "reply_to_user": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "edited": false, "score": 0, "creation_date": 1528349730, "post_id": 50726479, "comment_id": 88474955, "body": "@nbro that&#39;s a good idea. I&#39;ll try it, but he doesn&#39;t have anything about drawing on the screen on the tutorials."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1528383702, "post_id": 50726479, "comment_id": 88496612, "body": "@BenGubler Perhaps start here? <a href=\"https://wiki.osdev.org/GUI\" rel=\"nofollow noreferrer\">wiki.osdev.org/GUI</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "edited": false, "score": 0, "creation_date": 1552785523, "post_id": 50752686, "comment_id": 97143021, "body": "How do you set the VGA graphics mode? Thanks!"}], "tags": [], "owner": {"reputation": 428, "user_id": 7724590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4667269735ad586ae65b2d8277b238dc?s=128&d=identicon&r=PG&f=1", "display_name": "Alex Boxall", "link": "https://stackoverflow.com/users/7724590/alex-boxall"}, "is_accepted": false, "score": 2, "last_activity_date": 1528426613, "creation_date": 1528426613, "answer_id": 50752686, "question_id": 50726479, "link": "https://stackoverflow.com/questions/50726479/output-to-display-with-rust-bare-metal/50752686#50752686", "title": "Output to display with Rust bare metal", "body": "<p>Assuming you are in a 8bpp VGA graphics mode (such as Mode 0x13), you can write pixels directly to the screen by writing to memory addresses <code>0xA0000</code> to <code>0xB8000</code>.</p>\n"}], "owner": {"reputation": 1051, "user_id": 7983596, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1d5148aeced685c36901188ede736d85?s=128&d=identicon&r=PG&f=1", "display_name": "Ben Gubler", "link": "https://stackoverflow.com/users/7983596/ben-gubler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 367, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1528426613, "creation_date": 1528306970, "last_edit_date": 1528311626, "question_id": 50726479, "link": "https://stackoverflow.com/questions/50726479/output-to-display-with-rust-bare-metal", "title": "Output to display with Rust bare metal", "body": "<p>I'm following along with the <a href=\"https://os.phil-opp.com/\" rel=\"nofollow noreferrer\">Phil-Opp tutorials on creating an OS</a>, and I'm trying to figure out how to control my display/screen, after having successfully gotten VGA output to work. How does one control the display? I'm assuming you have to write a driver... or do you write to specific memory locations like VGA? Would a crate like SDL2, Glium, or something else work on 'bare-metal'?</p>\n"}, {"tags": ["rust", "source-maps", "webassembly"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1528292367, "post_id": 50721411, "comment_id": 88452171, "body": "Not sure if this kind of tool exists for now..."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1528293544, "post_id": 50721411, "comment_id": 88452960, "body": "<a href=\"https://www.reddit.com/r/rust/comments/7jvoj3/firefox_nightlys_javascript_debugger_now_supports/\" rel=\"nofollow noreferrer\">Firefox Nightly&#39;s Javascript debugger now supports debugging and source maps for Rust compiled to WASM</a> from last year Mozilla All Hands Austin, but I couldn&#39;t find any information about it."}, {"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1528299769, "post_id": 50721411, "comment_id": 88457229, "body": "<a href=\"https://twitter.com/slsoftworks/status/941400137921949696\" rel=\"nofollow noreferrer\">OMG <code>@FirefoxNightly&#39;s</code> JavaScript Debugger supports debugging &amp; source maps for <code>@rustlang</code> in <code>#WebAssemby-compiled</code> web code!</a>\u200f <code>@slsoftworks</code> 14 Dec 2017 afaict you just just emscripten (not the direct rustc wasm backend) and it just works. /cc <code>@yurydelendik</code> <code>@jasonlaster11 </code>@kripken`"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528307878, "post_id": 50721411, "comment_id": 88461664, "body": "This question was <a href=\"https://users.rust-lang.org/t/how-to-see-rust-source-code-when-debugging-webassembly-in-a-browser/17933?u=shepmaster\" rel=\"nofollow noreferrer\">cross-posted to the Rust user&#39;s forum</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528307923, "post_id": 50725772, "comment_id": 88461690, "body": "In OPs <a href=\"https://users.rust-lang.org/t/how-to-see-rust-source-code-when-debugging-webassembly-in-a-browser/17933?u=shepmaster\" rel=\"nofollow noreferrer\">cross-posted question</a>, they claim that it&#39;s already possible."}, {"owner": {"reputation": 508, "user_id": 11950764, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8213f0ffc9106d7663c4b5f29f4ec9e5?s=128&d=identicon&r=PG", "display_name": "joe", "link": "https://stackoverflow.com/users/11950764/joe"}, "edited": false, "score": 0, "creation_date": 1566295489, "post_id": 50725772, "comment_id": 101602949, "body": "Seems that the issue you linked has been closed. Relevant/related links: <a href=\"https://github.com/WebAssembly/debugging\" rel=\"nofollow noreferrer\">github.com/WebAssembly/debugging</a> | <a href=\"https://medium.com/oasislabs/webassembly-debugging-bec0aa93f8c6\" rel=\"nofollow noreferrer\">medium.com/oasislabs/webassembly-debugging-bec0aa93f8c6</a> | <a href=\"https://github.com/rustwasm/team/issues/26\" rel=\"nofollow noreferrer\">github.com/rustwasm/team/issues/26</a>"}], "tags": [], "owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "is_accepted": false, "score": 4, "last_activity_date": 1528305643, "last_edit_date": 1528305643, "creation_date": 1528304337, "answer_id": 50725772, "question_id": 50721411, "link": "https://stackoverflow.com/questions/50721411/how-to-see-rust-source-code-when-debugging-webassembly-in-a-browser/50725772#50725772", "title": "How to see Rust source code when debugging WebAssembly in a browser?", "body": "<p>To achieve this you\u2019d need WebAssembly to support sourcemaps. This is something that is being considered for <a href=\"https://github.com/WebAssembly/design/blob/master/FAQ.md#will-webassembly-support-view-source-on-the-web\" rel=\"nofollow noreferrer\">future tooling</a>, but I don\u2019t think much progress has been made yet.</p>\n\n<p>There is also an <a href=\"https://github.com/rust-lang/rust/issues/46765\" rel=\"nofollow noreferrer\">open issue for Rust sourcemap support</a></p>\n"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1276, "favorite_count": 2, "answer_count": 1, "score": 9, "last_activity_date": 1528305643, "creation_date": 1528290884, "last_edit_date": 1528302819, "question_id": 50721411, "link": "https://stackoverflow.com/questions/50721411/how-to-see-rust-source-code-when-debugging-webassembly-in-a-browser", "title": "How to see Rust source code when debugging WebAssembly in a browser?", "body": "<p>I am testing a simple todo app in Rust using the <a href=\"https://github.com/DenisKolodin/yew\" rel=\"noreferrer\">YEW framework</a>. When I get an error, the browser console (Devmode) shows JavaScript or assembler (I tried both Chrome and Firefox). How can I get the Rust code? Do I have to setup source maps somewhere?</p>\n"}, {"tags": ["iterator", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1528291046, "post_id": 50720654, "comment_id": 88451194, "body": "Your <code>MyTypeIter</code> doesn&#39;t ever yield the value <code>MyType(0)</code>."}, {"owner": {"reputation": 437, "user_id": 6534153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/65594d05af54fa0c3797bee8aa4a811a?s=128&d=identicon&r=PG&f=1", "display_name": "lanskey", "link": "https://stackoverflow.com/users/6534153/lanskey"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1528291397, "post_id": 50720654, "comment_id": 88451447, "body": "Note that I am subtracting 1. Anyway this is not real code, just an oversimpliefied example."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1528291495, "post_id": 50720654, "comment_id": 88451510, "body": "Ok, so it never yields <code>MyType(u32::max_value())</code>. Simplified examples are fine, I just don&#39;t want you to be unaware of the bug."}, {"owner": {"reputation": 437, "user_id": 6534153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/65594d05af54fa0c3797bee8aa4a811a?s=128&d=identicon&r=PG&f=1", "display_name": "lanskey", "link": "https://stackoverflow.com/users/6534153/lanskey"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1528291688, "post_id": 50720654, "comment_id": 88451670, "body": "Oh yeah, I see it now. Thank you!"}], "answers": [{"tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 8, "last_activity_date": 1528290842, "creation_date": 1528290842, "answer_id": 50721393, "question_id": 50720654, "link": "https://stackoverflow.com/questions/50720654/is-this-the-canonical-way-to-iterate-over-a-set-of-values/50721393#50721393", "title": "Is this the canonical way to iterate over a set of values?", "body": "<blockquote>\n  <p>What if we have several natural orders (like iterating over permutations or combinations in lex/colex order)?</p>\n</blockquote>\n\n<p>Implement different iterator types for different iteration orders. Instead of a <code>MyTypeIter</code> you can have multiple iterator types such as <code>MyTypePermutationIter</code> and <code>MyTypeCombinationIter</code>.</p>\n\n<p>The standard library takes this approach in many places. Take for example the string slice type <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"noreferrer\"><code>str</code></a>. You can naturally iterate over the bytes of a string, over UTF-8 characters, or over lines (to name a few examples). For this purpose <code>str</code> exposes different methods: </p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.bytes\" rel=\"noreferrer\"><code>bytes()</code></a> returns the <a href=\"https://doc.rust-lang.org/std/str/struct.Bytes.html\" rel=\"noreferrer\"><code>Bytes</code></a> iterator</li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.chars\" rel=\"noreferrer\"><code>chars()</code></a> returns the <a href=\"https://doc.rust-lang.org/std/str/struct.Chars.html\" rel=\"noreferrer\"><code>Chars</code></a> iterator.</li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.lines\" rel=\"noreferrer\"><code>lines()</code></a> returns the <a href=\"https://doc.rust-lang.org/std/str/struct.Lines.html\" rel=\"noreferrer\"><code>Lines</code></a> iterator.</li>\n</ul>\n"}], "owner": {"reputation": 437, "user_id": 6534153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/65594d05af54fa0c3797bee8aa4a811a?s=128&d=identicon&r=PG&f=1", "display_name": "lanskey", "link": "https://stackoverflow.com/users/6534153/lanskey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 50721393, "answer_count": 1, "score": 0, "last_activity_date": 1528300646, "creation_date": 1528288796, "last_edit_date": 1528300646, "question_id": 50720654, "link": "https://stackoverflow.com/questions/50720654/is-this-the-canonical-way-to-iterate-over-a-set-of-values", "title": "Is this the canonical way to iterate over a set of values?", "body": "<p>I have a type with an enumerable set of values:</p>\n\n<pre><code>struct MyType(u32);\n</code></pre>\n\n<p>I can define an iterator over the set of values:</p>\n\n<pre><code>struct MyTypeIter {\n    m: MyType,\n}\nimpl Iterator for MyTypeIter {\n    type Item = MyType;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if (self.m).0 &lt; 0xffffffff {\n            (self.m).0 += 1;\n            Some(MyType((self.m).0 - 1))\n        } else {\n            None\n        }\n    }\n}\nimpl MyTypeIter {\n    fn new() -&gt; MyTypeIter {\n        MyTypeIter { m: MyType(0) }\n    }\n}\n</code></pre>\n\n<p>Is this really the canonical way to do it? What if we have several natural orders (like iterating over permutations or combinations in lex/colex order)? </p>\n"}, {"tags": ["parsing", "macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 0, "creation_date": 1528287210, "post_id": 50719490, "comment_id": 88448640, "body": "With that change I get <code>error[E0658]: Using the </code>?` <code>macro Kleene operator for &quot;at most one&quot; repetition is unstable (see issue #48075)</code>. Also the generation part changes to a nested loop to <code>$(|$v)*</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "edited": false, "score": 1, "creation_date": 1528287763, "post_id": 50719490, "comment_id": 88449043, "body": "@Ronnie Yes, this is a nightly feature. About the second part, that&#39;s another issue: that&#39;s up to you to generate a code valid with and without the optional part."}, {"owner": {"reputation": 6783, "user_id": 3064538, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b644a108ae9ae0ec2f7402dd235d155c?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/3064538/boris"}, "edited": false, "score": 0, "creation_date": 1611303538, "post_id": 50719490, "comment_id": 116412472, "body": "I have a macro that&#39;s used to generate a struct with methods. For one of the times I want to use the macro I want to add an additional method to the struct. So I was thinking I can add an optional expression, but I don&#39;t want to reference the expression that&#39;s passed into my macro, I just want to use it as a flag to include an expression (the definition of my method), how do I do that? Or is there a better way to do this in Rust?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 6783, "user_id": 3064538, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/b644a108ae9ae0ec2f7402dd235d155c?s=128&d=identicon&r=PG&f=1", "display_name": "Boris", "link": "https://stackoverflow.com/users/3064538/boris"}, "edited": false, "score": 0, "creation_date": 1611738170, "post_id": 50719490, "comment_id": 116544198, "body": "@Boris I think that you should ask a separate question. I&#39;m unsure of that you want."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1528285099, "creation_date": 1528285099, "answer_id": 50719490, "question_id": 50718877, "link": "https://stackoverflow.com/questions/50718877/is-there-a-way-to-achieve-an-optional-expression-in-a-macro/50719490#50719490", "title": "Is there a way to achieve an optional expression in a macro?", "body": "<p>The syntax for the <code>?</code> is the same as one for <code>*</code> or <code>+</code>: you must surround the optional pattern like this <code>$( &lt;pattern&gt; )?</code>.</p>\n\n<p>Example:</p>\n\n<pre><code>#![feature(macro_at_most_once_rep)]\n\nmacro_rules! foo {\n    ( $( $e:expr )? ) =&gt; {\n        $( $e )?\n    }\n}\n</code></pre>\n\n<p>In your example, you must write:</p>\n\n<pre><code>($name:ident {\n    $(\n        $enumeration:ident $(\n            [$( $v:expr ),*]\n        )? // optional parameter\n    );* // possible multiple parameters\n}) =&gt; {\n</code></pre>\n\n<p>(I split the line to be clearer)</p>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 473, "favorite_count": 0, "accepted_answer_id": 50719490, "answer_count": 1, "score": 4, "last_activity_date": 1528302710, "creation_date": 1528283201, "last_edit_date": 1528302710, "question_id": 50718877, "link": "https://stackoverflow.com/questions/50718877/is-there-a-way-to-achieve-an-optional-expression-in-a-macro", "title": "Is there a way to achieve an optional expression in a macro?", "body": "<p>I have a macro that simplifies the parsing of enums from strings in the form:</p>\n\n<pre><code>enum_printer!(Bar { fun1[\"AB\",\"CD\"]; fun2[] });\n</code></pre>\n\n<p>To make it slightly easier to use, I would like to make the <code>[]</code> optional i.e. be able to specify</p>\n\n<pre><code>enum_printer!(Bar { fun1[\"AB\",\"CD\"]; fun2; fun3 });\n</code></pre>\n\n<p>Here's the code as it stands</p>\n\n<pre><code>use failure::Error;\nuse std::convert::TryFrom;\n\nmacro_rules! enum_printer {\n    ($name:ident { $($enumeration:ident [$($v:expr),*]);* }) =&gt; {\n        #[derive(Debug)]\n        enum $name {\n            $(\n                $enumeration,\n            )*\n        }\n        impl&lt;'a&gt; TryFrom&lt;&amp;'a str&gt; for $name {\n            type Error = Error;\n            fn try_from(value : &amp;'a str) -&gt; Result&lt;$name,Error&gt; {\n            match value {\n                $(\n                    stringify!($enumeration) \n                    $(\n                        | $v\n                    )*                        \n                    =&gt; Ok($name::$enumeration),\n                )*\n                _ =&gt; Err(err_msg(\"Could not convert from string to\"))\n            }                \n            }\n        }\n    };\n}\n</code></pre>\n\n<p>I've attempted to modify the first line:</p>\n\n<pre><code>($name:ident { $($enumeration:ident [$($v:expr),*]?);* }) =&gt; {\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `;`\n  --&gt; src/main.rs:30:36\n   |\n30 | enum_printer!(Bar { fun1[\"AB\",\"CD\"]; fun2; fun3 });\n   |                                    ^\n</code></pre>\n\n<p>Is there a way to achieve this?</p>\n"}, {"tags": ["rust", "deobfuscation"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1528281783, "post_id": 50717243, "comment_id": 88445125, "body": "It&#39;s worth reading <a href=\"https://github.com/rust-lang/rust/blob/5ad84cf3fa988e47d5b6b058c2888de076881d5c/src/test/run-pass/weird-exprs.rs\" rel=\"nofollow noreferrer\">the whole <code>weird-exprs.rs</code> file</a> with function names like <code>zombiejesus</code> and <code>evil_lincoln</code>."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 23, "last_activity_date": 1528292997, "last_edit_date": 1528292997, "creation_date": 1528280956, "answer_id": 50718144, "question_id": 50717243, "link": "https://stackoverflow.com/questions/50717243/what-does-this-strange-line-do/50718144#50718144", "title": "What does this strange line do?", "body": "<p>Let's break it down! First, I reformatted the line to somewhat increase \"readability\".</p>\n\n<pre><code>let val = !(\n    (\n        |(..): (_, _), __@_| __\n    )(\n        (\n            &amp;*\"\\\\\", \n            '@'\n        ) /**/, \n        {}\n    )\n    ==\n    {\n        &amp;[..=..][..];\n    }\n)//\n;\n</code></pre>\n\n<p>It starts with <code>let val =</code> and ends with <code>//&lt;newline&gt;;</code>. So it's a simple let-binding of the form <code>let val = \u27e8v\u27e9;</code>. Let's discuss what <code>\u27e8v\u27e9</code> does:</p>\n\n<ul>\n<li>A negation via the <em>not</em> operator: <code>!( \u27e8_\u27e9 )</code>\n\n<ul>\n<li>A comparison via <code>==</code>:  <code>\u27e8lhs\u27e9 == \u27e8rhs\u27e9</code>\n\n<ul>\n<li><strong><em>\u27e8lhs\u27e9</em></strong>: a function call of a closure <code>( \u27e8closure\u27e9 )( \u27e8args\u27e9 )</code>\n\n<ul>\n<li><strong><em>\u27e8closure\u27e9</em></strong>: a closure definition <code>|\u27e8first_param\u27e9, \u27e8second_param\u27e9| \u27e8body\u27e9</code>\n\n<ul>\n<li><strong><em>\u27e8first_param\u27e9</em></strong>: <code>(..): (_, _)</code>. This parameter has a type annotation <code>(_, _)</code> meaning that it is a 2-tuple. The pattern (where normally, you would find a single name) is <code>(..)</code> which means: a tuple, but ignore all elements of it.</li>\n<li><strong><em>\u27e8second_param\u27e9</em></strong>: <code>__@_</code>. This is a pattern usually known from match bindings: <code>name @ pattern</code>. So the actual pattern is <code>_</code> (which doesn't bind anything) and the value is bound via <code>@</code> to the name <code>__</code> (two underscores, which is a kind of valid identifier).</li>\n<li><strong><em>\u27e8body\u27e9</em></strong>: <code>__</code>. This is just the identifier which we bound the second parameter to. So the closure is basically equivalent to <code>|_, x| x</code>.</li>\n</ul></li>\n<li><strong><em>\u27e8args\u27e9</em></strong>: a list of two arguments with an inline comment <code>/**/</code> in between: <code>\u27e8first_arg\u27e9/**/, \u27e8second_arg\u27e9</code>\n\n<ul>\n<li><strong><em>\u27e8first_arg\u27e9</em></strong>: <code>(&amp;*\"\\\\\", '@')</code>. This is simply a 2-tuple where the first element is a string containing a backslash and the second is the char <code>'@'</code>. The <code>&amp;*</code> for the first element cancels out.</li>\n<li><strong><em>\u27e8second_arg\u27e9</em></strong>: <code>{}</code>. This is an empty block which has the type <code>()</code>. So as second argument, a unit is passed.</li>\n</ul></li>\n</ul></li>\n<li><strong><em>\u27e8rhs\u27e9</em></strong>: a braced block with one statement inside: <code>{ \u27e8stmt\u27e9; }</code>. Note that this is a statement, with a semicolon. This means the result is not returned from the block. Instead the block returns <code>()</code> just as the empty block <code>{}</code>.\n\n<ul>\n<li><strong><em>\u27e8stmt\u27e9</em></strong>: an indexing expression <code>{ &amp;\u27e8collection\u27e9[\u27e8index\u27e9] }</code>.\n\n<ul>\n<li><strong><em>\u27e8collection\u27e9</em></strong>: <code>[..=..]</code>. This is an array with one element. The element is <code>..= ..</code> which is a <a href=\"https://doc.rust-lang.org/stable/std/ops/struct.RangeToInclusive.html\" rel=\"noreferrer\"><code>RangeToInclusive</code></a> where <code>end</code> of the range is the <a href=\"https://doc.rust-lang.org/stable/std/ops/struct.RangeFull.html\" rel=\"noreferrer\"><code>RangeFull</code></a> written <code>..</code>. </li>\n<li><strong><em>\u27e8index\u27e9</em></strong>: <code>..</code>. This is just the <code>RangeFull</code> again. </li>\n</ul></li>\n</ul></li>\n</ul></li>\n</ul></li>\n</ul>\n\n<hr>\n\n<p><strong>So in summary</strong>: we compare the result of calling a closure to a braced block which evaluates to <code>()</code>. The closure is basically <code>|_, x| x</code> and the second argument we pass to it is <code>{}</code> (which evaluates to <code>()</code>), so the whole closure calling expression evaluates to <code>()</code>. </p>\n\n<p>This means the whole thing is equivalent to: </p>\n\n<ul>\n<li><code>let val = !( () == () );</code>, which is equivalent to:</li>\n<li><code>let val = !( true );</code>, which is equivalent to:</li>\n<li><strong><code>let val = false;</code></strong></li>\n</ul>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 863, "favorite_count": 3, "accepted_answer_id": 50718144, "answer_count": 1, "score": 13, "last_activity_date": 1528292997, "creation_date": 1528278450, "last_edit_date": 1528291327, "question_id": 50717243, "link": "https://stackoverflow.com/questions/50717243/what-does-this-strange-line-do", "title": "What does this strange line do?", "body": "<p>A <a href=\"https://github.com/rust-lang/rust/pull/51059/commits\" rel=\"noreferrer\">pull request</a> has been done with a new test for the Rust compiler. It verifies that a strange line can compile:</p>\n\n<pre><code>fn main() {\n    let val = !((|(..):(_,_),__@_|__)((&amp;*\"\\\\\",'@')/**/,{})=={&amp;[..=..][..];})//\n    ;\n    assert!(!val);\n}\n</code></pre>\n\n<p>What does this line do exactly?</p>\n"}, {"tags": ["enums", "rust", "polymorphism", "traits", "subtype"], "answers": [{"comments": [{"owner": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "edited": false, "score": 0, "creation_date": 1528412081, "post_id": 50711346, "comment_id": 88510182, "body": "From the defensive tone of your answer it feels like you interpreted my question as an attack of Rust, which it is not; I know even less C++ than Rust so perhaps the comparison wasn&#39;t the best. Thanks for the pointer on unbounded/bounded polymorphism, I will look into that."}, {"owner": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "edited": false, "score": 0, "creation_date": 1528413148, "post_id": 50711346, "comment_id": 88510469, "body": "As a concrete example, I am building a raytracer which supports shapes that can be positionned in space &amp; rendered. I will have a &#39;Transform&#39; datatype for positionning properties and a &#39;Material&#39; datatype for rendering properties. Then, I could implement Shapes either as a struct containing these datatypes and type enum (Sphere, Cube, Mesh, etc.). Or, I could have a &#39;Shape&#39; trait (or maybe &#39;Intersectable&#39;) and have different shape types implement this trait. What would be the tradeoffs of both choices in this case?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "edited": false, "score": 0, "creation_date": 1528426101, "post_id": 50711346, "comment_id": 88513279, "body": "@yawn I didn&#39;t intend to be defensive <i>per se</i>, but I did mean to convey a small amount of annoyance / frustration (in a lighthearted manner). It&#39;s annoying when a question presupposes some state of the world because then an answer has to spend time tearing down that belief to get back to the basics and then build back up from there. In this case, there were two I saw: &quot;enums and traits are functionally interchangable&quot; and &quot;choosing between enums and traits can affect my users&quot;. However, it is better to know this initial worldview so it doesn&#39;t accidentally get in the way of understanding."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1528300521, "last_edit_date": 1528300521, "creation_date": 1528251307, "answer_id": 50711346, "question_id": 50710339, "link": "https://stackoverflow.com/questions/50710339/what-is-the-favored-alternative-to-subtyping-that-library-writers-choose-and-wh/50711346#50711346", "title": "What is the favored alternative to subtyping that library writers choose, and why?", "body": "<blockquote>\n  <p>Do library writers favor using enums or traits?</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>Do builders favor using nails or screws?</p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>Do doctors favor using glue, stitches, or staples?</p>\n</blockquote>\n\n<p>This is a nonsensical dichotomy. Both capabilities exist and both are used. People use the right tool for the specific job at hand.</p>\n\n<p>Start by going back and re-reading <a href=\"https://doc.rust-lang.org/book/second-edition\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a> chapter <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-00-oop.html\" rel=\"nofollow noreferrer\">Is Rust an Object-Oriented Programming Language?</a>.</p>\n\n<p>In short, traits allow for unbounded polymorphism, while enums are strictly bounded. Really, that's the main difference. Review what your problem domain needs and use the right thing.</p>\n\n<blockquote>\n  <p>the implementation is exposed: the signature of <code>f</code> is different in both examples</p>\n</blockquote>\n\n<p>Yes, designing software sometimes requires some amount of upfront thought, care and design. </p>\n\n<p>If you expose an enum to your users and then add, remove or modify a variant, every usage of that enum needs to be updated. </p>\n\n<p>If you expose a trait to your users and then add, remove or modify a method, every usage of that trait needs to be updated.</p>\n\n<p>There's nothing special about the fact that you are choosing between an enum or a trait that causes this problem. You could also rename the method, add, remove or reorder your parameters. There are <em>a lot</em> of ways to cause trouble for your users.</p>\n\n<p><strong>If you change your API, your users will be affected</strong>.</p>\n\n<blockquote>\n  <p>I need to write a generic function</p>\n</blockquote>\n\n<p>You don't <em>need</em> to, but you likely should default to it for performance reasons. You could use a trait object like <code>fn f(t: &amp;T)</code> or <code>fn f(t: Box&lt;T&gt;)</code> if the <code>&lt;T&gt;</code> is causing consternation. </p>\n\n<blockquote>\n  <p>write a library with enums, but eventually decide what I really wanted was traits</p>\n</blockquote>\n\n<p>Now that you know you don't have to always pick one or the other, also realize you can use them together:</p>\n\n<pre><code>enum Pet {\n    Cat,\n    Dog,\n    Other(Box&lt;Animal&gt;),\n}\n\ntrait Animal {}\n</code></pre>\n\n\n\n<pre><code>trait TimeSource {\n    fn now() -&gt; u64;\n}\n\nenum Builtin {\n    Ntp,\n    Sundial,\n}\n\nimpl TimeSource for Builtin {\n    // ...\n}\n</code></pre>\n\n<hr>\n\n<p>Personal opinion-wise, if I'm still prototyping my code and it's not clear which choice is better, I'll probably default to using a trait. The unbounded polymorphism fits better with my preferences of dependency injection and testing style.</p>\n"}], "owner": {"reputation": 264, "user_id": 1473169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d364e18a224d81ee0bfbd7461f47180?s=128&d=identicon&r=PG", "display_name": "yawn", "link": "https://stackoverflow.com/users/1473169/yawn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 307, "favorite_count": 0, "accepted_answer_id": 50711346, "answer_count": 1, "score": 2, "last_activity_date": 1528300521, "creation_date": 1528241732, "last_edit_date": 1528249394, "question_id": 50710339, "link": "https://stackoverflow.com/questions/50710339/what-is-the-favored-alternative-to-subtyping-that-library-writers-choose-and-wh", "title": "What is the favored alternative to subtyping that library writers choose, and why?", "body": "<p>I have two types, <code>A</code> and <code>B</code>, which share a common interface <code>T</code>. I want to write functions which work with both <code>A</code> and <code>B</code> through the interface <code>T</code>.</p>\n\n<p>In C++, I would have <code>T</code> be an abstract superclass of both <code>A</code> and <code>B</code>, and write functions accepting a parameter of type <code>T</code>.</p>\n\n<p>In Rust, it seems like I have a good two good solutions.</p>\n\n<h3>Enums</h3>\n\n<pre><code>enum T { \n    A { /* ... */ },\n    B { /* ... */ },\n}\n\nimpl T {\n   fn method(&amp;self) {\n       match *self {\n           // ... \n       }\n   } \n}\n</code></pre>\n\n<p>In the methods of <code>T</code>, I can match on the variant to specialize the type, and then write whatever I want while accesses variant members.\nI can then write functions which accept parameters of type <code>T</code> directly:</p>\n\n<pre><code>fn f(t: T) {\n    // I can use t.method here\n}\n</code></pre>\n\n<h3>Traits</h3>\n\n<pre><code>trait T {\n    // ...\n}\n\nstruct A { /* ... */ }\nstruct B { /* ... */ }\n\nimpl T for A {\n   fn method(&amp;self) {\n      // ...  \n   } \n}\n\nimpl T for B {\n   fn method(&amp;self) {\n      // ...    \n   }\n}\n</code></pre>\n\n<p>With traits, the type is already specialized in the method definitions. However, to use <code>T.method</code>, I need to write a generic function:</p>\n\n<pre><code>fn f&lt;X: T&gt;(t: X) {\n    // I can use t.method here\n}\n</code></pre>\n\n<p>What bothers me here is that while both of these solutions work perfectly, the implementation is exposed: the signature of <code>f</code> is different in both examples. If I write a library with enums, but eventually decide what I really wanted was traits, every user-level type signature needs to be changed! </p>\n\n<p>Given this fact, what choice do library writers choose, and why?</p>\n\n<p>Note that I don't care about inheritance in particular, I'm not looking to import C++ idioms into Rust, I'm trying to understand what the better alternative is.</p>\n"}, {"tags": ["rust", "wayland"], "answers": [{"tags": [], "owner": {"reputation": 695, "user_id": 1938851, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/85c1f53b0b86df32dda6f8d4fa2b1513?s=128&d=identicon&r=PG", "display_name": "Jason Smith", "link": "https://stackoverflow.com/users/1938851/jason-smith"}, "is_accepted": true, "score": 5, "last_activity_date": 1528298332, "last_edit_date": 1528298332, "creation_date": 1528266494, "answer_id": 50713536, "question_id": 50708059, "link": "https://stackoverflow.com/questions/50708059/why-is-rust-unable-to-find-wl-display-get-registry/50713536#50713536", "title": "Why is Rust unable to find wl_display_get_registry?", "body": "<p>The <code>wl_display_get_registry</code> function, and several others, are marked as <code>static inline</code> in the header file <code>wayland-client-protocols.h</code>. <a href=\"https://stackoverflow.com/questions/25000497/whats-the-difference-between-static-inline-extern-inline-and-a-normal-inline-f\">Functions marked <code>static inline</code> will not have their symbols exported</a>. This explains how C was able to see and use the function but Rust could not.</p>\n\n<p>We must re-implement C macros and static inline functions as Rust functions:</p>\n\n<pre><code>pub enum WLDisplay {}\npub enum WLProxy {}\npub enum WLRegistry {}\n\nconst WL_DISPLAY_GET_REGISTRY: ::std::os::raw::c_uint = 1;\n\n#[link(name = \"wayland-client\")]\nextern \"C\" {\n    #[no_mangle]\n    static wl_registry_interface: WLInterface;\n\n    pub fn wl_display_connect(name: *const ::std::os::raw::c_char) -&gt; *mut WLDisplay;\n    pub fn wl_display_disconnect(display: *mut WLDisplay) -&gt; ();\n\n    pub fn wl_proxy_marshal_constructor(\n        proxy: *mut WLProxy,\n        opcode: ::std::os::raw::c_uint,\n        interface: *const WLInterface,\n    ) -&gt; *mut WLProxy;\n}\n\n#[repr(C)]\npub struct WLMessage {\n    pub name: *const ::std::os::raw::c_char,\n    pub signature: *const ::std::os::raw::c_char,\n    pub types: *const *const WLInterface,\n}\n\n#[repr(C)]\npub struct WLInterface {\n    pub name: *const ::std::os::raw::c_char,\n    pub version: ::std::os::raw::c_int,\n    pub request_count: ::std::os::raw::c_int,\n    pub requests: *const WLMessage,\n    pub event_count: ::std::os::raw::c_int,\n    pub events: *const WLMessage,\n}\n\nfn wl_display_get_registry(display: *mut WLDisplay) -&gt; *mut WLRegistry {\n    let proxy: *mut WLProxy;\n\n    unsafe {\n        proxy = wl_proxy_marshal_constructor(\n            display as *mut _ as *mut WLProxy,\n            WL_DISPLAY_GET_REGISTRY,\n            &amp;wl_registry_interface,\n        );\n        proxy as *mut _ as *mut WLRegistry\n    }\n}\n\nfn main() {\n    let display: *mut WLDisplay;\n    let registry: *mut WLRegistry;\n\n    unsafe {\n        display = wl_display_connect(::std::ptr::null());\n        if display.is_null() == true {\n            eprintln!(\"Unable to connect to the Wayland display server.\");\n            return;\n        }\n        println!(\"Connected to Wayland display server.\");\n\n        println!(\"Retrieving the registry from the Wayland display.\");\n        registry = wl_display_get_registry(display);\n        if registry.is_null() == true {\n            eprintln!(\"Unable to retrieve registry.\");\n        } else {\n            println!(\"Registry retrieved.\");\n        }\n\n        wl_display_disconnect(display);\n        println!(\"Disconnected from Wayland display server.\");\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 695, "user_id": 1938851, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/85c1f53b0b86df32dda6f8d4fa2b1513?s=128&d=identicon&r=PG", "display_name": "Jason Smith", "link": "https://stackoverflow.com/users/1938851/jason-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 359, "favorite_count": 0, "accepted_answer_id": 50713536, "answer_count": 1, "score": 3, "last_activity_date": 1528298332, "creation_date": 1528228898, "last_edit_date": 1528229149, "question_id": 50708059, "link": "https://stackoverflow.com/questions/50708059/why-is-rust-unable-to-find-wl-display-get-registry", "title": "Why is Rust unable to find wl_display_get_registry?", "body": "<p>When writing code to use the Wayland Client API, Rust seems unable to find the <code>wl_display_get_registry</code> symbol. An objdump of the file also is unable to find the symbol. However, a C program compiled with GCC is able to find the symbol.</p>\n\n<p>Why can the C program find the symbol, but Rust cannot? How can I fix the Rust program to find the symbol?</p>\n\n<p><strong>OS</strong>: Ubuntu 18.04 LTS</p>\n\n<h1>Rust</h1>\n\n<h3>Build</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc -o wayland main.rs\n</code></pre>\n\n<h3>Output</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-m64\" \"-L\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"wayland.main0.rcgu.o\" \"wayland.main1.rcgu.o\" \"wayland.main2.rcgu.o\" \"wayland.main3.rcgu.o\" \"wayland.main4.rcgu.o\" \"-o\" \"wayland\" \"wayland.crate.allocator.rcgu.o\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\" \"-L\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-l\" \"wayland-client\" \"-Wl,--start-group\" \"-Wl,-Bstatic\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd-2da986ecbb2c5327.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libpanic_unwind-57f46841c9a9f4ee.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_jemalloc-23263fe5893322f6.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libunwind-6ed5262c9a0a3e5a.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc_system-99c162b689d43349.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liblibc-cd415b85dd267875.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/liballoc-3876ac10aa96a1e3.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libstd_unicode-598b0e9aca382e9a.rlib\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcore-4eabb2b1c31071b8.rlib\" \"-Wl,--end-group\" \"/home/myrddin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-d7a656735ceeae9e.rlib\" \"-Wl,-Bdynamic\" \"-l\" \"dl\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"pthread\" \"-l\" \"gcc_s\" \"-l\" \"c\" \"-l\" \"m\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"util\" \"-l\" \"util\"\n  = note: wayland.main3.rcgu.o: In function `main::main':\n          main3-317d481089b8c8fe83113de504472633.rs:(.text._ZN4main4main17h52709beaa06fe157E+0x109): undefined reference to `wl_display_get_registry'\n          collect2: error: ld returned 1 exit status\n</code></pre>\n\n<h3>Code</h3>\n\n<pre><code>pub enum WLDisplay {}\npub enum WLRegistry {}\n\n#[link(name = \"wayland-client\")]\nextern \"C\" {\n    pub fn wl_display_connect(name: *const ::std::os::raw::c_char) -&gt; *mut WLDisplay;\n    pub fn wl_display_disconnect(display: *mut WLDisplay) -&gt; ();\n\n    pub fn wl_display_get_registry(display: *mut WLDisplay) -&gt; *mut WLRegistry;\n}\n\nfn main() {\n    let display: *mut WLDisplay;\n    let registry: *mut WLRegistry;\n\n    unsafe {\n        display = wl_display_connect(::std::ptr::null());\n        if display.is_null() == true {\n            eprintln!(\"Unable to connect to the Wayland display server.\");\n            return;\n        }\n        println!(\"Connected to Wayland display server.\");\n\n        println!(\"Retrieving the registry from the Wayland display.\");\n        registry = wl_display_get_registry(display);\n        if registry.is_null() == true {\n            eprintln!(\"Unable to retrieve registry.\");\n        } else {\n            println!(\"Registry retrieved.\");\n        }\n\n        wl_display_disconnect(display);\n        println!(\"Disconnected from Wayland display server.\");\n    }\n}\n</code></pre>\n\n<h1>C</h1>\n\n<h3>Build</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>gcc -o wayland -lwayland-client main.c\n</code></pre>\n\n<h3>Output</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>Connected to Wayland display server.\nRetrieving the registry from the Wayland display.\nRegistry retrieved.\nDisconnected from Wayland display server.\n</code></pre>\n\n<h3>Code</h3>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;wayland-client.h&gt;\n\n\nint main()\n{\n   struct wl_display *display;\n   struct wl_registry *registry;\n\n   display = wl_display_connect(NULL);\n   if (display == NULL)\n   {\n      fprintf(stderr, \"Unable to connect to the Wayland display server.\\n\");\n      return 1;\n   }\n   fprintf(stdout, \"Connected to Wayland display server.\\n\");\n\n   fprintf(stdout, \"Retrieving the registry from the Wayland display.\\n\");\n   registry = wl_display_get_registry(display);\n   if (registry == NULL)\n   {\n      fprintf(stderr, \"Unable to retrieve registry.\\n\");\n   }\n   else\n   {\n      fprintf(stdout, \"Registry retrieved.\\n\");\n   }\n\n   wl_display_disconnect(display);\n   fprintf(stdout, \"Disconnected from Wayland display server.\\n\");\n\n   return 0;\n}\n</code></pre>\n\n<h1><code>objdump</code></h1>\n\n<h3>Command</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>objdump -TC /usr/lib/x86_64-linux-gnu/libwayland-client.so | grep \"wl_display*\"\n</code></pre>\n\n<h3>Output</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>0000000000005f60 g DF .text 0000000000000275  Base wl_display_connect\n0000000000006960 g DF .text 0000000000000078  Base wl_display_flush\n0000000000006a90 g DF .text 000000000000000c  Base wl_display_dispatch\n00000000000067b0 g DF .text 0000000000000042  Base wl_display_cancel_read\n00000000000068c0 g DF .text 000000000000000c  Base wl_display_dispatch_pending\n0000000000006800 g DF .text 00000000000000bf  Base wl_display_dispatch_queue_pending\n00000000000061e0 g DF .text 0000000000000057  Base wl_display_disconnect\n0000000000006be0 g DF .text 00000000000000fc  Base wl_display_roundtrip_queue\n00000000000068d0 g DF .text 000000000000002c  Base wl_display_get_error\n0000000000005610 g DF .text 0000000000000031  Base wl_display_create_queue\n0000000000006740 g DF .text 0000000000000052  Base wl_display_prepare_read_queue\n0000000000006900 g DF .text 0000000000000051  Base wl_display_get_protocol_error\n0000000000005dc0 g DF .text 0000000000000194  Base wl_display_connect_to_fd\n00000000000069e0 g DF .text 00000000000000ac  Base wl_display_dispatch_queue\n0000000000006ce0 g DF .text 000000000000000c  Base wl_display_roundtrip\n0000000000006250 g DF .text 00000000000004f0  Base wl_display_read_events\n0000000000006240 g DF .text 0000000000000004  Base wl_display_get_fd\n000000000020dce0 g DO .data.rel.ro 0000000000000028 Base wl_display_interface\n00000000000067a0 g DF .text 000000000000000c  Base wl_display_prepare_read\n</code></pre>\n"}, {"tags": ["memory", "vector", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528227925, "post_id": 50707434, "comment_id": 88424705, "body": "<i>it should not use an iterator because a memcopy should be good enough do the job</i> \u2014 this presupposes that an iterator precludes a memcpy which is not the case."}, {"owner": {"reputation": 1265, "user_id": 720302, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hSURW.png?s=128&g=1", "display_name": "Jocelyn", "link": "https://stackoverflow.com/users/720302/jocelyn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528260107, "post_id": 50707434, "comment_id": 88433558, "body": "@Shepmaster yes, I had the preconceived idea that an iterator (because of the name) would copy each element independently inside a loop instead of doing one big memcpy. Today I learnt."}], "answers": [{"comments": [{"owner": {"reputation": 1265, "user_id": 720302, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hSURW.png?s=128&g=1", "display_name": "Jocelyn", "link": "https://stackoverflow.com/users/720302/jocelyn"}, "edited": false, "score": 0, "creation_date": 1528259521, "post_id": 50707657, "comment_id": 88433403, "body": "Thanks! Yes, address is different when destination is smaller because of the realloc, I don&#39;t know why I missed that. Your solution works, I ended up accepting @Shipmaster &#39;s answer because it doesn&#39;t need to fill destination with dummy values in case of realloc (which here <code>resize()</code> does) and it still uses <code>copy_from_slice()</code> internally."}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 1265, "user_id": 720302, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hSURW.png?s=128&g=1", "display_name": "Jocelyn", "link": "https://stackoverflow.com/users/720302/jocelyn"}, "edited": false, "score": 1, "creation_date": 1528259565, "post_id": 50707657, "comment_id": 88433416, "body": "Sure no worries, I understand and agree. Glad to help!"}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": false, "score": 2, "last_activity_date": 1528227161, "creation_date": 1528227161, "answer_id": 50707657, "question_id": 50707434, "link": "https://stackoverflow.com/questions/50707434/trying-to-copy-content-of-a-vec-into-an-other-how-to-use-copy-from-slice/50707657#50707657", "title": "Trying to copy content of a Vec into an other, how to use copy_from_slice()?", "body": "<p>You can use the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.resize\" rel=\"nofollow noreferrer\"><code>Vec.resize()</code></a> function:</p>\n\n<pre><code>fn vec_copy(src: &amp;Vec&lt;i32&gt;, dst: &amp;mut Vec&lt;i32&gt;) {\n    dst.resize(src.len(), 0);\n    dst.copy_from_slice(src.as_slice());\n}\n\nfn main() {\n    // Copy from a shorter Vec\n    let mut container = vec![1, 2];\n    let test1 = vec![3]; // shorter vec\n    println!(\"{:p} = {:?}\", &amp;container[0], container); // output: 0x7f00bda20008 = [1, 2]\n    vec_copy(&amp;test1, &amp;mut container); // panics inside function \n    println!(\"{:p} = {:?}\", &amp;container[0], container); // expected: 0x7f00bda20008 = [3]\n\n    // Copy from a longer Vec\n    container = vec![1, 2];    \n    let test2 = vec![4, 5, 6]; // longer Vec\n    println!(\"{:p} = {:?}\", &amp;container[0], container); // output: 0x7fef5b820018 = [1, 2]\n    vec_copy(&amp;test2, &amp;mut container); // panics inside function\n    println!(\"{:p} = {:?}\", &amp;container[0], container); // expected: 0x7fef5b820018 = [4, 5, 6]    \n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>0x7f2e36020008 = [1, 2]\n0x7f2e36020008 = [3]\n0x7f2e36020028 = [1, 2]\n0x7f2e3602a010 = [4, 5, 6]\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=fba34eecb3afa9c8afa14bc15f4a8a94&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>The final one has a different address presumably because the destination had a smaller capacity than the source, so it had to be grown which means reallocation. This can be shown by printing out the destination's capacity, and observing that it grew from 2 -> 4:</p>\n\n<pre><code>println!(\"{:p} = {:?} (capacity: {:?})\", &amp;container[0], container, container.capacity());\nvec_copy(&amp;test2, &amp;mut container); // panics inside function\nprintln!(\"{:p} = {:?} (capacity: {:?})\", &amp;container[0], container, container.capacity());\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>0x7f16a1820008 = [1, 2]\n0x7f16a1820008 = [3]\n0x7f16a1820028 = [1, 2] (capacity: 2)\n0x7f16a182a010 = [4, 5, 6] (capacity: 4)\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9dfb2ab06fad0803180130b4d56049b2&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>You could prevent that by ensuring that the destination is large enough at the time of creation with <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.with_capacity\" rel=\"nofollow noreferrer\"><code>Vec::with_capacity</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 1265, "user_id": 720302, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hSURW.png?s=128&g=1", "display_name": "Jocelyn", "link": "https://stackoverflow.com/users/720302/jocelyn"}, "edited": false, "score": 0, "creation_date": 1528262473, "post_id": 50707947, "comment_id": 88434283, "body": "Thanks for the various tips! I was worried that <code>extend_from_slice()</code> would be copying each element independently inside a loop. I was confused by the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.extend_from_slice\" rel=\"nofollow noreferrer\">documentation</a> which states <i>&quot;Iterates over the slice other, clones each element, and then appends it to this Vec&quot;</i>. But it ends up calling <code>copy_from_slice()</code> internally and doing a unique memcpy which is exactly what I was looking for. Before copying it does a <code>reserve()</code> and <code>set_len()</code>, which is why we can use <code>truncate()</code> before."}, {"owner": {"reputation": 1265, "user_id": 720302, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hSURW.png?s=128&g=1", "display_name": "Jocelyn", "link": "https://stackoverflow.com/users/720302/jocelyn"}, "edited": false, "score": 1, "creation_date": 1528363460, "post_id": 50707947, "comment_id": 88482647, "body": "Note that <code>vec.truncate(0)</code> can be abbreviated as <code>vec.clear()</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1528380765, "last_edit_date": 1528380765, "creation_date": 1528228432, "answer_id": 50707947, "question_id": 50707434, "link": "https://stackoverflow.com/questions/50707434/trying-to-copy-content-of-a-vec-into-an-other-how-to-use-copy-from-slice/50707947#50707947", "title": "Trying to copy content of a Vec into an other, how to use copy_from_slice()?", "body": "<p>You want <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.extend_from_slice\" rel=\"nofollow noreferrer\"><code>Vec::extend_from_slice</code></a>:</p>\n\n<pre><code>fn vec_copy(src: &amp;[i32], dst: &amp;mut Vec&lt;i32&gt;) {\n    // Optionally truncate to zero if there might be existing data\n    // dst.clear();\n    dst.extend_from_slice(src);\n}\n</code></pre>\n\n<p>This avoids needing to fill the vector with \"dummy values\" when adding more elements than were previously allocated .</p>\n\n<p>If you look at the assembly in release mode, it calls <code>memcpy</code> after establishing that there is enough allocated space:</p>\n\n<p></p>\n\n<pre><code>playground::vec_copy:\n    pushq   %r15\n    pushq   %r14\n    pushq   %r12\n    pushq   %rbx\n    subq    $88, %rsp\n    movq    %rdx, %rbx\n    movq    %rsi, %r15\n    movq    %rdi, %r14\n    movq    8(%rbx), %rsi\n    movq    16(%rbx), %r12\n    movq    %rsi, %rax\n    subq    %r12, %rax\n    cmpq    %r15, %rax\n    jae .LBB1_14\n    addq    %r15, %r12\n    jb  .LBB1_8\n    leaq    (%rsi,%rsi), %rax\n    cmpq    %rax, %r12\n    cmovbq  %rax, %r12\n    movl    $4, %ecx\n    movq    %r12, %rax\n    mulq    %rcx\n    jo  .LBB1_8\n    testq   %rsi, %rsi\n    je  .LBB1_9\n    shlq    $2, %rsi\n    movq    (%rbx), %rdi\n    movq    %rsp, %r9\n    movl    $4, %edx\n    movl    $4, %r8d\n    movq    %rax, %rcx\n    callq   __rust_realloc@PLT\n    testq   %rax, %rax\n    jne .LBB1_5\n    movq    (%rsp), %rax\n    jmp .LBB1_12\n\n.LBB1_9:\n    movq    %rsp, %rdx\n    movl    $4, %esi\n    movq    %rax, %rdi\n    callq   __rust_alloc@PLT\n    testq   %rax, %rax\n    je  .LBB1_12\n\n.LBB1_5:\n    xorl    %ecx, %ecx\n    movdqa  32(%rsp), %xmm0\n    movdqa  %xmm0, 48(%rsp)\n    testq   %rcx, %rcx\n    je  .LBB1_13\n\n.LBB1_6:\n    movq    %rax, (%rsp)\n    movaps  48(%rsp), %xmm0\n    movups  %xmm0, 8(%rsp)\n    leaq    64(%rsp), %rdi\n    movq    %rsp, %rsi\n    callq   &lt;core::heap::CollectionAllocErr as core::convert::From&lt;core::heap::AllocErr&gt;&gt;::from@PLT\n    movdqa  64(%rsp), %xmm0\n    movq    %xmm0, %rax\n    cmpq    $3, %rax\n    je  .LBB1_14\n    cmpq    $2, %rax\n    jne .LBB1_15\n\n.LBB1_8:\n    leaq    .Lbyte_str.5(%rip), %rdi\n    callq   core::panicking::panic@PLT\n    ud2\n\n.LBB1_12:\n    movups  8(%rsp), %xmm0\n    movaps  %xmm0, 32(%rsp)\n    movl    $1, %ecx\n    movdqa  32(%rsp), %xmm0\n    movdqa  %xmm0, 48(%rsp)\n    testq   %rcx, %rcx\n    jne .LBB1_6\n\n.LBB1_13:\n    movq    %rax, (%rbx)\n    movq    %r12, 8(%rbx)\n\n.LBB1_14:\n    movq    16(%rbx), %rdi\n    leaq    (%rdi,%r15), %rax\n    movq    %rax, 16(%rbx)\n    shlq    $2, %r15\n    shlq    $2, %rdi\n    addq    (%rbx), %rdi\n    movq    %r14, %rsi\n    movq    %r15, %rdx\n    callq   memcpy@PLT\n    addq    $88, %rsp\n    popq    %rbx\n    popq    %r12\n    popq    %r14\n    popq    %r15\n    retq\n\n.LBB1_15:\n    movq    80(%rsp), %rax\n    movdqa  %xmm0, (%rsp)\n    movq    %rax, 16(%rsp)\n    movq    %rsp, %rdi\n    callq   &lt;alloc::heap::Heap as core::heap::Alloc&gt;::oom\n    ud2\n</code></pre>\n\n<hr>\n\n<blockquote>\n<pre><code>println!(\"{:p} = {:?}\", &amp;container[0], container);\n</code></pre>\n</blockquote>\n\n<p><code>container.as_ptr()</code> is more obvious than <code>&amp;container[0]</code> and will not fail when the vector is empty.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}], "owner": {"reputation": 1265, "user_id": 720302, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hSURW.png?s=128&g=1", "display_name": "Jocelyn", "link": "https://stackoverflow.com/users/720302/jocelyn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 701, "favorite_count": 0, "accepted_answer_id": 50707947, "answer_count": 2, "score": 3, "last_activity_date": 1528380765, "creation_date": 1528226198, "last_edit_date": 1528228139, "question_id": 50707434, "link": "https://stackoverflow.com/questions/50707434/trying-to-copy-content-of-a-vec-into-an-other-how-to-use-copy-from-slice", "title": "Trying to copy content of a Vec into an other, how to use copy_from_slice()?", "body": "<p>I'm  trying to <strong>copy</strong> the content of a <code>Vec</code> into an existing <code>Vec</code>, replacing the content of the target <code>Vec</code>.</p>\n\n<p>Here is what I'm looking for:</p>\n\n<ul>\n<li>allocation of new memory shouldn't be needed (unless the target <code>Vec</code> is too short) because the target <code>Vec</code> is already allocated</li>\n<li>it should not use an iterator because a memcopy should be good enough do the job</li>\n<li>the source <code>Vec</code> shouldn't be changed</li>\n<li>ideally it should use safe methods</li>\n</ul>\n\n<p>Here is what I tried:</p>\n\n<ul>\n<li><code>vec.clone()</code> : gives correct content but allocates new memory, which should not be needed for a copy into an already existing big enough <code>Vec</code></li>\n<li><code>vec.clear(); vec.extend();</code> : copies in place, but seems to use an iterator on each element, which should not be needed, I just want a memcopy</li>\n<li><code>vec.copy_from_slice()</code> : is what I'm looking for, but needs exactly the same size buffers, which for some reason I can't seem to get</li>\n</ul>\n\n<h2>What doesn't work</h2>\n\n<pre><code>#![feature(shrink_to)]\nfn vec_copy(src: &amp;Vec&lt;i32&gt;, dst: &amp;mut Vec&lt;i32&gt;) {\n    // Try to adjust dst buffer size... there should be a better way\n    if src.len() &gt; dst.len() {\n        let addon = src.len() - dst.len();\n        dst.reserve_exact(addon);\n    } else {\n        dst.shrink_to(src.len());\n    }\n    // Do the copy        \n    // panics! :\n    // thread 'main' panicked at libcore/slice/mod.rs:1645:9\n    // 'destination and source slices have different lengths'\n    // \n    dst.copy_from_slice(src.as_slice()); // &lt;--- panics here\n}\n\nfn main() {\n    // Copy from a shorter Vec\n    let mut container = vec![1, 2];\n    let test1 = vec![3]; // shorter vec\n    println!(\"{:p} = {:?}\", &amp;container[0], container); // output: 0x7f00bda20008 = [1, 2]\n    vec_copy(&amp;test1, &amp;mut container); // panics inside function \n    println!(\"{:p} = {:?}\", &amp;container[0], container); // expected: 0x7f00bda20008 = [3]\n\n    // Copy from a longer Vec\n    container = vec![1, 2];    \n    let test2 = vec![4, 5, 6]; // longer Vec\n    println!(\"{:p} = {:?}\", &amp;container[0], container); // output: 0x7fef5b820018 = [1, 2]\n    vec_copy(&amp;test2, &amp;mut container); // panics inside function\n    println!(\"{:p} = {:?}\", &amp;container[0], container); // expected: 0x7fef5b820018 = [4, 5, 6]    \n}\n</code></pre>\n\n<p><strong>Panics with error:</strong> </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at libcore/slice/mod.rs:1645:9,\n'destination and source slices have different lengths'\n</code></pre>\n\n<h2>The question</h2>\n\n<p>Using <code>vec.copy_from_slice()</code> seems to be the way to memcopy in place the content of a <code>Vec</code> into an other, without unneeded memory allocation and without using an iterator.</p>\n\n<p>How can I set the size of the target <code>Vec</code> so that <code>vec.copy_from_slice()</code> doesn't panic?</p>\n"}, {"tags": ["windows", "debugging", "testing", "rust", "visual-studio-code"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1528266279, "post_id": 50707118, "comment_id": 88435661, "body": "What do you mean by &quot;debug&quot; <code>println!</code> debug? Attaching a debugger debug?"}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1528282999, "post_id": 50707118, "comment_id": 88445933, "body": "@hellow I&#39;m talking about attaching a debugger, because <code>println!</code> is simple tracing."}], "answers": [{"comments": [{"owner": {"reputation": 329, "user_id": 1995676, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/311ece173edc8e74ff1f1b8905b7147e?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/1995676/david"}, "edited": false, "score": 2, "creation_date": 1538303168, "post_id": 50708037, "comment_id": 92089246, "body": "If anyone is having trouble getting this to work then make sure you click on the debug tab on the left (the icon with the little bug on it) and change the dropdown (to the right of the DEBUG play sign) to Run Test Debugger. You then execute the test by pressing F5 instead of running your test build task directly. Thanks Shepmaster for the instructions above!!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1528300190, "last_edit_date": 1528300190, "creation_date": 1528228806, "answer_id": 50708037, "question_id": 50707118, "link": "https://stackoverflow.com/questions/50707118/how-to-debug-rust-unit-tests-on-windows/50708037#50708037", "title": "How to debug Rust unit tests on Windows?", "body": "<p>Rust unit tests are compiled as separate binaries, which means you debug them <em>exactly the same as any other binary</em>. Once compiled, they are located at <code>./target/debug/$name-$hash</code>.</p>\n\n<h2>Visual Studio Code</h2>\n\n<p>Here's modified versions of the VS Code configuration files that allow me to debug a unit test.</p>\n\n<h3>tasks.json</h3>\n\n<pre><code>{\n    \"type\": \"shell\",\n    \"label\": \"cargo test build\",\n    \"command\": \"cargo\",\n    \"args\": [\n        \"test\", \"--no-run\"\n    ],\n    \"problemMatcher\": [\n        \"$rustc\"\n    ]\n}\n</code></pre>\n\n<h3>launch.json</h3>\n\n<pre><code>{\n    \"name\": \"Run Test Debugger\",\n    \"type\": \"cppvsdbg\",\n    \"request\": \"launch\",\n    \"program\": \"${workspaceFolder}/target/debug/buggin-70708b3916187eeb.exe\",\n    \"args\": [],\n    \"stopAtEntry\": false,\n    \"cwd\": \"${workspaceFolder}\",\n    \"environment\": [],\n    \"externalConsole\": true,\n    \"preLaunchTask\": \"cargo test build\",\n}\n</code></pre>\n\n<h3>Working</h3>\n\n<p><a href=\"https://i.stack.imgur.com/NOLc0.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/NOLc0.png\" alt=\"VS Code debugger running on a test\"></a></p>\n\n<h2>Windbg</h2>\n\n<p>Build your tests:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo test --no-run\n</code></pre>\n\n<p>Open the built executable in Windbg and open the source file.</p>\n\n<p><a href=\"https://i.stack.imgur.com/xC7Pf.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/xC7Pf.png\" alt=\"Windbg on Rust test\"></a></p>\n\n<hr>\n\n<p>Finding the hash is the most annoying aspect. The best solution I know of is to write a small script that builds the tests and then finds the test executable based on which is newest. My Powershell skills are not adequate to the task, nor do I know how to directly integrate this with VS Code or Windbg.</p>\n\n<p>There are open issues for Cargo to help with identifying the file:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/cargo/issues/1924\" rel=\"noreferrer\">produce deterministic filenames for <code>build --test</code> and <code>test --no-run</code> (#1924)</a></li>\n<li><a href=\"https://github.com/rust-lang/cargo/issues/3670\" rel=\"noreferrer\">Make it possible to run binaries produced by cargo directly (#3670)</a></li>\n</ul>\n"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4619, "favorite_count": 3, "accepted_answer_id": 50708037, "answer_count": 1, "score": 15, "last_activity_date": 1528300271, "creation_date": 1528224872, "last_edit_date": 1528300271, "question_id": 50707118, "link": "https://stackoverflow.com/questions/50707118/how-to-debug-rust-unit-tests-on-windows", "title": "How to debug Rust unit tests on Windows?", "body": "<p>I'm developing code for the Codingame problems using VS Code on Windows with Rust and the Visual Studio toolchain.</p>\n\n<p>I have found multiple guides explaining how to debug the executable generated by <code>cargo build</code>, the best being <a href=\"https://www.brycevandyk.com/debug-rust-on-windows-with-visual-studio-code-and-the-msvc-debugger/\" rel=\"noreferrer\">Debug Rust on Windows with Visual Studio Code and the MSVC Debugger</a>. </p>\n\n<p>However, when I face problems, I tend to write unit tests (I've done that in Java, JavaScript, Ruby, ...), which I then debug. Unfortunately, I can't find any way to do that in Rust. How do I configure my environment to debug my tests?</p>\n\n<p>I'm not talking about adding <code>println!</code> statements in my tests, as I already know how to do that. I'm also not talking about adding new assertions, because those reside in the test, not in the tested code.</p>\n\n<p>What I want is to use the VS Code Debugger on the code <em>called</em> by my test.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528221185, "post_id": 50706086, "comment_id": 88421451, "body": "Welcome to Stack Overflow! Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/50706086/edit\">edit</a> your question to include it. If you remove all of the fields until you have the bare minimum to reproduce the problem, you are likely to answer your own question or have a more targeted question to ask."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528221342, "post_id": 50706086, "comment_id": 88421541, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/33286213/155423\">Why does my variable not live long enough?</a> and <a href=\"https://stackoverflow.com/q/44641830/155423\">Cannot split a string into string slices with explicit lifetimes because the string does not live long enough</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50706086/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 9898771, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Matthew Kane", "link": "https://stackoverflow.com/users/9898771/matthew-kane"}, "edited": false, "score": 0, "creation_date": 1528221770, "post_id": 50706140, "comment_id": 88421765, "body": "Ohh I never would have thought of that. Thanks!"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 5, "last_activity_date": 1528221033, "creation_date": 1528221033, "answer_id": 50706140, "question_id": 50706086, "link": "https://stackoverflow.com/questions/50706086/mutable-string-not-living-long-enough-to-perform-a-for-loop/50706140#50706140", "title": "Mutable string not living long enough to perform a for loop", "body": "<pre><code>c_num: &amp;'static str,\n</code></pre>\n\n<p>This line says that <code>Student</code> has a member <code>c_num</code>, which is a reference to a string that lives forever.</p>\n\n<p>The string you read out of the file does not live forever. It lives until the end of a loop iteration.</p>\n\n<p>You probably want <code>c_num</code> to be of type <code>String</code>, so that the struct owns the value.</p>\n"}], "owner": {"reputation": 21, "user_id": 9898771, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Matthew Kane", "link": "https://stackoverflow.com/users/9898771/matthew-kane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "closed_date": 1528251495, "answer_count": 1, "score": 1, "last_activity_date": 1528251632, "creation_date": 1528220771, "last_edit_date": 1528251632, "question_id": 50706086, "link": "https://stackoverflow.com/questions/50706086/mutable-string-not-living-long-enough-to-perform-a-for-loop", "closed_reason": "Duplicate", "title": "Mutable string not living long enough to perform a for loop", "body": "<p>I am trying to take a string from an input file and parse the information into a <code>HashMap</code> of structures:</p>\n\n<pre><code>use std::{fs::File, io::prelude::*};\n\npub struct Student {\n    c_num: &amp;'static str,\n    cla: i32,\n    ola: i32,\n    quiz: i32,\n    exam: i32,\n    final_exam: i32,\n}\n\nimpl Student {\n    pub fn new(\n        c_num: &amp;'static str,\n        cla: i32,\n        ola: i32,\n        quiz: i32,\n        exam: i32,\n        final_exam: i32,\n    ) -&gt; Student {\n        Student {\n            c_num: c_num,\n            cla: cla,\n            ola: ola,\n            quiz: quiz,\n            exam: exam,\n            final_exam: final_exam,\n        }\n    }\n\n    pub fn from_file(filename: String) -&gt; Vec&lt;Student&gt; {\n        let mut f = File::open(filename).expect(\"File not found\");\n        let mut contents = String::new();\n\n        f.read_to_string(&amp;mut contents);\n\n        let mut students: Vec&lt;Student&gt; = Vec::new();\n\n        for i in contents.lines().skip(1) {\n            let mut bws = i.split_whitespace();\n            let stdnt: Student = Student::new(\n                bws.next().unwrap(),\n                bws.next().unwrap().parse().unwrap(),\n                bws.next().unwrap().parse().unwrap(),\n                bws.next().unwrap().parse().unwrap(),\n                bws.next().unwrap().parse().unwrap(),\n                bws.next().unwrap().parse().unwrap(),\n            );\n\n            students.insert(0, stdnt);\n        }\n\n        students\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>When I try to compile, the compiler gives me this.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `contents` does not live long enough\n  --&gt; src/main.rs:39:18\n   |\n39 |         for i in contents.lines().skip(1) {\n   |                  ^^^^^^^^ borrowed value does not live long enough\n...\n54 |     }\n   |     - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>Why does the <code>contents</code> variable need to live after the function returns?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528218147, "post_id": 50705380, "comment_id": 88420036, "body": "You can&#39;t have an immutable reference to something and then mutate it. This is <a href=\"https://doc.rust-lang.org/book/second-edition/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">described in the book under the rules of references</a>. This code <b>is not safe</b> because the second <code>push</code> can invalidate the reference in <code>a</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528218345, "post_id": 50705380, "comment_id": 88420141, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/47618823/155423\">Cannot borrow as mutable because it is also borrowed as immutable</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50705380/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528219235, "post_id": 50705380, "comment_id": 88420565, "body": "Thanks, you\u2019re right, you helped me refine my question. What I want is a \u201cread-only\u201d reference I guess. I don\u2019t need the frozen guarantee of immutable references. Is there a way to achieve this in Rust? My previous design for this code was to return the array index from <code>create_data</code>, but I\u2019d like for Rust to guarantee the memory exists if possible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528219609, "post_id": 50705380, "comment_id": 88420726, "body": "<i>I\u2019d like for Rust to guarantee the memory exists if possible</i> \u2014 That&#39;s my point; when you call <code>Vec::push</code>, the referenced memory may no longer be valid. Rust is already telling you that the code can lead to undefined behavior and cause crashes (if it compiled). Looking at it a different way, there&#39;s no way it can tell that <code>push</code> isn&#39;t the same as <code>clear</code>."}, {"owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528247195, "post_id": 50705380, "comment_id": 88430807, "body": "I see. This answers my question."}], "owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "closed_date": 1528266281, "answer_count": 0, "score": 0, "last_activity_date": 1528219079, "creation_date": 1528217971, "last_edit_date": 1528219079, "question_id": 50705380, "link": "https://stackoverflow.com/questions/50705380/immutable-references-from-a-mutable-reference-extend-the-lifetime-of-mutable-ref", "closed_reason": "Duplicate", "title": "Immutable references from a mutable reference extend the lifetime of mutable reference", "body": "<p>I have a mutable reference to an <code>Environment</code> struct which holds some data. My mutable functions on that struct (like <code>create_data</code>) returns a read only reference to the newly created memory. I would like to add multiple pieces of data to my <code>Environment</code> and return read only references to that data. However, when I try to do this with Rust immutable references I run into Rust\u2019s \u201cmultiple mutable borrows\u201d error.</p>\n\n<p>Rust\u2019s immutable references guarantee that the underlying data does not change. I\u2019m not sure I need that guarantee. Is there a way I could get a \u201cread-only\u201d reference which does not guarantee the memory it points to is frozen?</p>\n\n<p>Here\u2019s a program that reproduces my issue with immutable references.</p>\n\n<pre><code>struct Environment {\n    data: Vec&lt;Data&gt;,\n}\n\n#[derive(Debug)]\nstruct Data(u8);\n\n#[derive(Debug)]\nstruct DataRef&lt;'a&gt;(&amp;'a Data);\n\nimpl Environment {\n    fn new() -&gt; Environment {\n        Environment { data: Vec::new() }\n    }\n\n    fn create_data(&amp;mut self, i: u8) -&gt; &amp;Data {\n        self.data.push(Data(i));\n        &amp;self.data[self.data.len() - 1]\n    }\n}\n\nfn f&lt;'a&gt;(environment: &amp;'a mut Environment) -&gt; (DataRef&lt;'a&gt;, DataRef&lt;'a&gt;) {\n    let a = DataRef(environment.create_data(1));\n    let b = DataRef(environment.create_data(2));\n    (a, b)\n}\n\nfn main() {\n    println!(\"{:?}\", f(&amp;mut Environment::new()));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=dae2224d61d34c2d9c3e6e8f0a8dd488&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">(Rust Playground)</a></p>\n\n<p>Compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*environment` as mutable more than once at a time\n  --&gt; src/main.rs:24:21\n   |\n23 |     let a = DataRef(environment.create_data(1));\n   |                     ----------- first mutable borrow occurs here\n24 |     let b = DataRef(environment.create_data(2));\n   |                     ^^^^^^^^^^^ second mutable borrow occurs here\n25 |     (a, b)\n26 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>I\u2019m not entirely sure how to title this question or how to search for answers.</p>\n"}, {"tags": ["multithreading", "rust", "mutex", "readwritelock"], "answers": [{"comments": [{"owner": {"reputation": 19267, "user_id": 801894, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/67f2ccd17aa6fd622152ad88fc2ae784?s=128&d=identicon&r=PG", "display_name": "Solomon Slow", "link": "https://stackoverflow.com/users/801894/solomon-slow"}, "edited": false, "score": 1, "creation_date": 1528229643, "post_id": 50704283, "comment_id": 88425519, "body": "Only a naive implementation of a reader/writer lock would allow writers to starve. If I was responsible for an application that would benefit from a reader/writer lock, and if I had to deploy it on some platform where the &quot;standard&quot; reader/writer lock was crap, then I would write my own---tailored to the needs of my application---rather than fall back to a simple mutex."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1528266228, "post_id": 50704283, "comment_id": 88435640, "body": "I would touch on <i>performance</i> and <i>intent</i> here. That is (1) RW Lock implementations are generally more complex, and thus slower and (2) if your algorithm only needs a Mutex, using a RW Lock is just confusing your readers for no benefits. Could even add correctness: if you paper around locking issues by just upgrading Mutex to RW Lock at random, you&#39;re toast. Multi-threading and Distributed programming require clear models of the data-flow; just throwing locks around randomly does not correct the flows magically."}, {"owner": {"reputation": 199, "user_id": 1792188, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/425632da3fcfb0df5268a6d94fcadad9?s=128&d=identicon&r=PG", "display_name": "Dmitry Timofeev", "link": "https://stackoverflow.com/users/1792188/dmitry-timofeev"}, "edited": false, "score": 4, "creation_date": 1558546330, "post_id": 50704283, "comment_id": 99140791, "body": "Although the question is under &#39;rust&#39; tag, I found the documentation on <a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/locks/ReadWriteLock.html\" rel=\"nofollow noreferrer\">ReadWriteLock</a> interface in Java to have quite a comprehensive discussion on various things the <i>user</i> must consider when choosing between a mutex and a read-write lock, and the possible implementation trade-offs."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 199, "user_id": 1792188, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/425632da3fcfb0df5268a6d94fcadad9?s=128&d=identicon&r=PG", "display_name": "Dmitry Timofeev", "link": "https://stackoverflow.com/users/1792188/dmitry-timofeev"}, "edited": false, "score": 1, "creation_date": 1558598099, "post_id": 50704283, "comment_id": 99155871, "body": "@DmitryTimofeev Thanks for your link! I must definitely take the time to enhance this answer."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 32, "last_activity_date": 1528271151, "last_edit_date": 1528271151, "creation_date": 1528213938, "answer_id": 50704283, "question_id": 50704279, "link": "https://stackoverflow.com/questions/50704279/when-or-why-should-i-use-a-mutex-over-an-rwlock/50704283#50704283", "title": "When or why should I use a Mutex over an RwLock?", "body": "<p>Sometimes it is better to use a <code>Mutex</code> over an <code>RwLock</code> in Rust:</p>\n\n<h1><code>RwLock&lt;T&gt;</code> needs more bounds for <code>T</code> to be thread-safe:</h1>\n\n<ul>\n<li><code>Mutex</code> <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#implementations\" rel=\"noreferrer\">requires <code>T: Send</code></a> to be <code>Sync</code>,</li>\n<li><code>RwLock</code> <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html#implementations\" rel=\"noreferrer\">requires <code>T</code> to be <code>Send</code> <strong>and</strong> <code>Sync</code></a> to be itself <code>Sync</code>.</li>\n</ul>\n\n<p>In other words, <code>Mutex</code> is the only wrapper that can make a <code>T</code> syncable. I found a <a href=\"https://www.reddit.com/r/rust/comments/5bx34b/mutex_vs_rwlock/d9t67cg/\" rel=\"noreferrer\">good and intuitive explanation</a> in reddit:</p>\n\n<blockquote>\n  <p>Because of those bounds, RwLock requires its contents to be Sync, i.e. it's safe for two threads to have a &amp;ptr to that type at the same time. Mutex only requires the data to be Send, because conceptually you can think of it like when you lock the Mutex it sends the data to your thread, and when you unlock it the data gets sent to another thread.</p>\n</blockquote>\n\n<p>Use <code>Mutex</code> when your <code>T</code> is only <code>Send</code> and not <code>Sync</code>.</p>\n\n<h1>Preventing writer starvation</h1>\n\n<p><code>RwLock</code> does not have a specified implementation because it uses the implementation of the system. Some read-write locks can be subject to <a href=\"https://stackoverflow.com/questions/2190090/how-to-prevent-writer-starvation-in-a-read-write-lock-in-pthreads\">writer starvation</a> while <code>Mutex</code> cannot have this kind of issue.</p>\n\n<p><code>Mutex</code> should be used when you have possibly too many readers to let the writers have the lock.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7036, "favorite_count": 8, "answer_count": 1, "score": 39, "last_activity_date": 1528271151, "creation_date": 1528213924, "question_id": 50704279, "link": "https://stackoverflow.com/questions/50704279/when-or-why-should-i-use-a-mutex-over-an-rwlock", "title": "When or why should I use a Mutex over an RwLock?", "body": "<p>When I read the documentations of <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex</code></a> and <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"noreferrer\"><code>RwLock</code></a>, the difference I see is the following:</p>\n\n<ul>\n<li><code>Mutex</code> can have only one reader or writer at a time,</li>\n<li><code>RwLock</code> can have one writer or multiple reader at a time.</li>\n</ul>\n\n<p>When you put it that way, <code>RwLock</code> seems always better (less limited) than <code>Mutex</code>, why would I use it, then?</p>\n"}, {"tags": ["macos", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528211783, "post_id": 50703177, "comment_id": 88416444, "body": "&quot;8.0&quot; does not look like a macOS version, it looks like an <i>iOS version</i>. Are you attempting to cross-compile?"}, {"owner": {"reputation": 935, "user_id": 1861645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/16c8a0333a5676fc6a5c40e32a22af4c?s=128&d=identicon&r=PG", "display_name": "sinewave440hz", "link": "https://stackoverflow.com/users/1861645/sinewave440hz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528212364, "post_id": 50703177, "comment_id": 88416786, "body": "I&#39;m just following the getting started docs, basic stuff."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528212436, "post_id": 50703177, "comment_id": 88416831, "body": "How did you install the command line dev tools? Have you attempted to compile for iOS before? Would you have ever created a <code>.cargo&#47;config</code> file anywhere?"}, {"owner": {"reputation": 935, "user_id": 1861645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/16c8a0333a5676fc6a5c40e32a22af4c?s=128&d=identicon&r=PG", "display_name": "sinewave440hz", "link": "https://stackoverflow.com/users/1861645/sinewave440hz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528213079, "post_id": 50703177, "comment_id": 88417240, "body": "As far as I recall, I installed with the usual <code>xcode-select --install</code>. I have certainly used the c compiler previously for various purposes, but have never created a <code>.cargo&#47;config</code> file. I think I will try a re-install of the dev tools."}, {"owner": {"reputation": 935, "user_id": 1861645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/16c8a0333a5676fc6a5c40e32a22af4c?s=128&d=identicon&r=PG", "display_name": "sinewave440hz", "link": "https://stackoverflow.com/users/1861645/sinewave440hz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528213651, "post_id": 50703177, "comment_id": 88417568, "body": "No change after reinstalling dev tools, unfortunately."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1528220520, "post_id": 50703177, "comment_id": 88421153, "body": "Do you have any environment variables set, such as <code>MACOSX_DEPLOYMENT_TARGET</code>? Anything like <code>CFLAGS</code>?"}, {"owner": {"reputation": 935, "user_id": 1861645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/16c8a0333a5676fc6a5c40e32a22af4c?s=128&d=identicon&r=PG", "display_name": "sinewave440hz", "link": "https://stackoverflow.com/users/1861645/sinewave440hz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528279881, "post_id": 50703177, "comment_id": 88443945, "body": "Thanks for your suggestions. Unfortunately I&#39;m away from my work machine until Monday. Last night I successfully ran on another machine running High Sierra, after reinstalling dev tools and (this made the difference) restarting! I will do that and check the env vars on monday."}], "answers": [{"tags": [], "owner": {"reputation": 935, "user_id": 1861645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/16c8a0333a5676fc6a5c40e32a22af4c?s=128&d=identicon&r=PG", "display_name": "sinewave440hz", "link": "https://stackoverflow.com/users/1861645/sinewave440hz"}, "is_accepted": true, "score": 0, "last_activity_date": 1528790061, "creation_date": 1528790061, "answer_id": 50812002, "question_id": 50703177, "link": "https://stackoverflow.com/questions/50703177/cannot-compile-rust-code-on-macos-10-12-object-file-was-built-for-newer-osx-ver/50812002#50812002", "title": "Cannot compile Rust code on macOS 10.12: object file was built for newer OSX version (10.7) than being linked (8.0)", "body": "<p>As you can see in the comments I had the opportunity to duplicate the process on another machine, which led me to believe that restarting macOS after installing the dev tools would make a difference. Sure enough, the app compiled and ran without issue after restarting, so there must have been some environment variables that needed resetting/updating (I don't suppose it's that relevant which ones, when it's so easily solved...).</p>\n"}], "owner": {"reputation": 935, "user_id": 1861645, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/16c8a0333a5676fc6a5c40e32a22af4c?s=128&d=identicon&r=PG", "display_name": "sinewave440hz", "link": "https://stackoverflow.com/users/1861645/sinewave440hz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 599, "favorite_count": 0, "accepted_answer_id": 50812002, "answer_count": 1, "score": 2, "last_activity_date": 1528790061, "creation_date": 1528210694, "last_edit_date": 1528211983, "question_id": 50703177, "link": "https://stackoverflow.com/questions/50703177/cannot-compile-rust-code-on-macos-10-12-object-file-was-built-for-newer-osx-ver", "title": "Cannot compile Rust code on macOS 10.12: object file was built for newer OSX version (10.7) than being linked (8.0)", "body": "<p>Experimenting with Rust, I didn't get that far as there is a configuration issue with my C compiler. On attempting to compile the Hello World example (using <code>rustc main.rs</code> according to the getting started docs), I am seeing an enormous amount of warnings like this: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ld: warning: object file (/Users/sinewave440hz/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/x86_64-apple-darwin/lib/liballoc_jemalloc-66cfa4df0876a39d.rlib(jemalloc.pic.o)) was built for newer OSX version (10.7) than being linked (8.0)\n</code></pre>\n\n<p>I'm using macOS Sierra 10.12.6</p>\n\n<p><code>cc -v</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Apple LLVM version 9.0.0 (clang-900.0.39.2)\nTarget: x86_64-apple-darwin16.7.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\n</code></pre>\n\n<p><code>rustc --version</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.26.1 (827013a31 2018-05-25)\n</code></pre>\n"}, {"tags": ["rust", "integer"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528208085, "post_id": 50695780, "comment_id": 88413986, "body": "Simplify by not using the last <code>?</code>: <code>a.checked_add(b_half)?.checked_add(b_half)?.checked_add(b_re&zwnj;&#8203;m)</code>"}, {"owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528215467, "post_id": 50695780, "comment_id": 88418659, "body": "@Shepmaster: I will, thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1528199984, "post_id": 50697061, "comment_id": 88408296, "body": "For information, I use this strategy <a href=\"https://gitlab.com/Boiethios/radix_fmt_rs/blob/master/src/lib.rs#L66\" rel=\"nofollow noreferrer\">in my crates</a> and it works well."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1528192030, "creation_date": 1528192030, "answer_id": 50697061, "question_id": 50695780, "link": "https://stackoverflow.com/questions/50695780/generalizing-over-adding-unsigned-and-signed-integer-types/50697061#50697061", "title": "Generalizing over adding unsigned and signed integer types", "body": "<p>You can use a macro:</p>\n\n<pre><code>trait CustomAdd: Copy {\n    type Unsigned;\n\n    fn my_checked_add(self, b: Self::Unsigned) -&gt; Option&lt;Self&gt;;\n}\n\nmacro_rules! impl_custom_add {\n    ( $i:ty, $u:ty ) =&gt; {\n        impl CustomAdd for $i {\n            type Unsigned = $u;\n\n            fn my_checked_add(self, b: $u) -&gt; Option&lt;$i&gt; {\n                let b_half = (b / 2) as $i;\n                let b_rem = (b % 2) as $i;\n\n                Some(self.checked_add(b_half)?.checked_add(b_half)?\n                    .checked_add(b_rem)?)\n            }\n        }\n    }\n}\n\nimpl_custom_add!(i32, u32);\nimpl_custom_add!(i64, u64);\n// etc.\n\n#[test]\nfn tests() {\n    assert_eq!(123.my_checked_add(10_u32), Some(133));\n}\n</code></pre>\n"}], "owner": {"reputation": 549, "user_id": 4275937, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/49b88e050dd8cc0e4dbbe301ccecd40d?s=128&d=identicon&r=PG&f=1", "display_name": "real", "link": "https://stackoverflow.com/users/4275937/real"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 419, "favorite_count": 0, "accepted_answer_id": 50697061, "answer_count": 1, "score": 4, "last_activity_date": 1528207974, "creation_date": 1528188005, "last_edit_date": 1528207974, "question_id": 50695780, "link": "https://stackoverflow.com/questions/50695780/generalizing-over-adding-unsigned-and-signed-integer-types", "title": "Generalizing over adding unsigned and signed integer types", "body": "<p>I want to have a Rust function that allows adding an <code>u32</code> (<code>u64</code>, <code>u128</code>) type to an <code>i32</code> (<code>i64</code>, <code>i128</code>) type while checking for overflow.</p>\n\n<p>My implementation:</p>\n\n<pre><code>/// Add u32 to i32. In case of an overflow, return None.\nfn checked_add_i32_u32(a: i32, b: u32) -&gt; Option&lt;i32&gt; {\n    let b_half = (b / 2) as i32;\n    let b_rem = (b % 2) as i32;\n\n    Some(a.checked_add(b_half)?.checked_add(b_half)?\n        .checked_add(b_rem)?)\n}\n\n/// Add u64 to i64. In case of an overflow, return None.\nfn checked_add_i64_u64(a: i64, b: u64) -&gt; Option&lt;i64&gt; {\n    let b_half = (b / 2) as i64;\n    let b_rem = (b % 2) as i64;\n\n    Some(a.checked_add(b_half)?.checked_add(b_half)?\n        .checked_add(b_rem)?)\n}\n</code></pre>\n\n<p>I have another similar one that does the same for <code>u128</code> and <code>i128</code>. I feel like I am repeating myself. My tests for those functions also look very similar.</p>\n\n<p>Is there a way I could refactor my code and have just one function instead? I am not sure how to generalize over the relationship between <code>u32</code> and <code>i32</code> (or <code>u64</code> and <code>i64</code>, <code>u128</code> and <code>i128</code>).</p>\n"}, {"tags": ["rust", "rust-cargo", "rustup"], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 1393609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/605c8274fe4e3395259204fcf05ab674?s=128&d=identicon&r=PG", "display_name": "KT8", "link": "https://stackoverflow.com/users/1393609/kt8"}, "edited": false, "score": 1, "creation_date": 1556084731, "post_id": 50694685, "comment_id": 98311673, "body": "Is it still not supported in 2019?"}, {"owner": {"reputation": 587, "user_id": 2737008, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ad6f47b0d87276d629d40bf05f406f0f?s=128&d=identicon&r=PG&f=1", "display_name": "rbansal", "link": "https://stackoverflow.com/users/2737008/rbansal"}, "edited": false, "score": 0, "creation_date": 1605949259, "post_id": 50694685, "comment_id": 114813858, "body": "It is still open in 2020 November"}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 3, "last_activity_date": 1606013198, "last_edit_date": 1606013198, "creation_date": 1528184450, "answer_id": 50694685, "question_id": 50694263, "link": "https://stackoverflow.com/questions/50694263/how-to-install-rustup-and-cargo-with-a-toolchain-for-all-users-on-linux/50694685#50694685", "title": "How to install rustup and cargo with a toolchain for all users on Linux?", "body": "<p>As of <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/313#issuecomment-210712034\" rel=\"nofollow noreferrer\">Apr 16, 2016</a>:</p>\n<blockquote>\n<p>It does not support it now</p>\n</blockquote>\n<p>Even in Sept 10, 2017 <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/313\" rel=\"nofollow noreferrer\">the issue</a> is still open, so I'd not wait for it, since installing Rust with clippy is straight forward.</p>\n"}], "owner": {"reputation": 167, "user_id": 1393609, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/605c8274fe4e3395259204fcf05ab674?s=128&d=identicon&r=PG", "display_name": "KT8", "link": "https://stackoverflow.com/users/1393609/kt8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1662, "favorite_count": 1, "accepted_answer_id": 50694685, "answer_count": 1, "score": 6, "last_activity_date": 1606013198, "creation_date": 1528183065, "last_edit_date": 1529329290, "question_id": 50694263, "link": "https://stackoverflow.com/questions/50694263/how-to-install-rustup-and-cargo-with-a-toolchain-for-all-users-on-linux", "title": "How to install rustup and cargo with a toolchain for all users on Linux?", "body": "<p>I am trying to install rustup with clippy, but I am looking way of installing for all users. </p>\n\n<p>I installed rustup in /opt/setup. Whenever I switch users, I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no default toolchain configured\n</code></pre>\n\n<p>If I try to install a toolchain it does not take <code>/opt/setup</code> but <code>/home/user</code>. I specified <code>RUSTUP_HOME</code> and <code>CARGO_HOME</code> in my <code>.bashrc</code> file but still it chooses <code>/home/user</code>. Is there a way to achieve this? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1528153372, "post_id": 50689785, "comment_id": 88389472, "body": "Are you specifically trying to avoid reading the whole file contents, modifying it, and then writing it all back again?"}, {"owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1528156259, "post_id": 50689785, "comment_id": 88390208, "body": "@loganfsmyth Yes, I am. The file is a database so it could be very large."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1528157787, "post_id": 50689785, "comment_id": 88390566, "body": "If you&#39;re looking to write randomly into a large file, you might be interested in reading about memory mapped files?"}, {"owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1528159056, "post_id": 50689785, "comment_id": 88390816, "body": "@loganfsmyth This is why I am confused, I had the same initial expectation. I seem to be doing something wrong."}, {"owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1528159606, "post_id": 50689785, "comment_id": 88390933, "body": "@SimonWhitehead Reliability is very important to me. I read about MMap a little on Wikipedia and the part that worries me is &quot;The data is saved to the source file on the disk once the last process is finished.&quot; Does this mean that I will lose all changes if the system loses power?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1528160958, "post_id": 50689785, "comment_id": 88391172, "body": "@Fallen Based on the code sample you&#39;ve provided, I have to assume you understand the principles behind database design as you appear to be writing your own custom one? Transactional consistency can be wrapped around flushing a memory mapped file to disk. That is, the concept of a transaction can be implemented and a transaction is &quot;finalised&quot; once you flush the memory mapped file. &quot;Data is saved to the source file on the disk once the last process is finished&quot; is just default behaviour for most operating systems ... but you can actually ask the OS to flush the mmap to disk before that happens"}, {"owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "edited": false, "score": 0, "creation_date": 1528161621, "post_id": 50689785, "comment_id": 88391301, "body": "You are correct, I am writing a custom database. I want to store financial transactions so I want the reliability of the data to be as high as possible. Thank you for pointing me in the right direction, I found the flush behavior you were talking about at <a href=\"https://docs.rs/memmap/0.6.2/memmap/struct.MmapMut.html#method.flush\" rel=\"nofollow noreferrer\">docs.rs/memmap/0.6.2/memmap/struct.MmapMut.html#method.flush</a>&zwnj;&#8203;. Looks like I&#39;ll be moving on to using Mmaps."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1528161920, "post_id": 50689785, "comment_id": 88391363, "body": "While you&#39;re at it, I would advise you revise <a href=\"https://en.wikipedia.org/wiki/ACID\" rel=\"nofollow noreferrer\">what ACID means</a> and specifically <a href=\"https://en.wikipedia.org/wiki/Database_transaction\" rel=\"nofollow noreferrer\">what a transaction is and how it works</a>. Taking note of the part which says &quot;a successful transaction must get written to durable storage&quot; i.e. flush the change to disk. Good luck on your journey ... although I&#39;ll say this: I hope your custom database is not expected to hold important financial transactions... writing a proper/reliable database is no easy task."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1528161985, "post_id": 50689785, "comment_id": 88391376, "body": "Just as another thing - RE performance: you might want to review how memory paging works and specifically how you might be able to get the most out of your database via paging your database reads/writes."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1528164119, "post_id": 50689785, "comment_id": 88391797, "body": "And I applaud you for turning a nigh-unanswerable question into an answered one, by responding to feedback! That is really too rare on this site."}, {"owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1528168608, "post_id": 50689785, "comment_id": 88392605, "body": "@SimonWhitehead Thank you for your input on how to write a better database. I will definitely ensure all transactions are fully ACID and look into memory paging."}, {"owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1528168649, "post_id": 50689785, "comment_id": 88392612, "body": "@trentcl Didn&#39;t want to make it too easy for you guys."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528165203, "post_id": 50691004, "comment_id": 88392012, "body": "So append mode ignores the seek call? Seems odd but matches with <a href=\"https://stackoverflow.com/a/10631901/155423\">stackoverflow.com/a/10631901/155423</a>"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528165406, "post_id": 50691004, "comment_id": 88392042, "body": "I believe this is also how it works in .NET land - you&#39;re either overwriting or appending and all write operations move the cursor."}, {"owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "edited": false, "score": 2, "creation_date": 1528168348, "post_id": 50691004, "comment_id": 88392554, "body": ":( I had <code>.write(true)</code> in the very beginning but saw the very same line in the documentation about <code>.append()</code> implies <code>.write()</code>, and of course I want to extend the file as well, so I swapped <code>.write()</code> for <code>.append()</code>. Seems unintuitive that append should ignore seeks and yet imply write. But fine, take your points you god among men! :P"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1528185219, "post_id": 50691004, "comment_id": 88399104, "body": "It seems unintuitive but it&#39;s consistent with a long tradition of such functions inherited from C. If you&#39;d like to open an issue to ask for clarification on the documentation, I&#39;m sure someone will be glad to do it."}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 9, "last_activity_date": 1528163970, "creation_date": 1528163970, "answer_id": 50691004, "question_id": 50689785, "link": "https://stackoverflow.com/questions/50689785/how-do-you-modify-a-files-contents-instead-of-prepending-to-the-file-in-rust/50691004#50691004", "title": "How do you modify a file&#39;s contents instead of prepending to the file in Rust?", "body": "<p>Its because you're using <code>append(true)</code>. From the documentation:</p>\n\n<blockquote>\n  <p>This option, when true, means that writes will append to a file instead of overwriting previous contents. Note that setting <code>.write(true).append(true)</code> has the same effect as setting only <code>.append(true)</code>.</p>\n</blockquote>\n\n<p>Using <code>write(true)</code> instead, adds write permissions:</p>\n\n<pre><code>let mut file = OpenOptions::new()\n    .read(true)\n    .write(true) // &lt;--------- this\n    .create(true)\n    .open(\"/tmp/file.db\")\n    .unwrap();\n</code></pre>\n\n<p>..and your code will work as expected.</p>\n"}], "owner": {"reputation": 147, "user_id": 2423550, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9da9c5082e7d7c4de2dfc5aaa10af08e?s=128&d=identicon&r=PG", "display_name": "Fallen", "link": "https://stackoverflow.com/users/2423550/fallen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2909, "favorite_count": 0, "accepted_answer_id": 50691004, "answer_count": 1, "score": 6, "last_activity_date": 1528203510, "creation_date": 1528152502, "last_edit_date": 1528203510, "question_id": 50689785, "link": "https://stackoverflow.com/questions/50689785/how-do-you-modify-a-files-contents-instead-of-prepending-to-the-file-in-rust", "title": "How do you modify a file&#39;s contents instead of prepending to the file in Rust?", "body": "<p>I thought you just open a file and seek to the position you want to overwrite and start writing, but it seems that it only adds bytes at that position. How to I remove bytes from a file or overwrite bytes?</p>\n\n<p>An example:</p>\n\n<pre><code>use std::fs::OpenOptions;\nuse std::io::{prelude::*, Seek, SeekFrom};\n\nfn main() {\n    let mut file = OpenOptions::new()\n        .read(true)\n        .append(true)\n        .create(true)\n        .open(\"/tmp/file.db\")\n        .unwrap();\n\n    let bytes: [u8; 4] = [1, 2, 3, 4];\n\n    file.seek(SeekFrom::Start(0)).unwrap();\n    file.write_all(&amp;bytes).unwrap();\n}\n</code></pre>\n\n<p>Output file before:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>00000000: 0102 0304 0a                             .....\n</code></pre>\n\n<p>Output file after:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>00000000: 0102 0304 0102 0304 0a                   .........\n</code></pre>\n\n<p>As you can see, seeking to 0 does not overwrite the 4 bytes already in the file. Instead it prepends them to the file.</p>\n"}, {"tags": ["arrays", "rust", "time-complexity"], "answers": [{"comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1528155109, "post_id": 50690053, "comment_id": 88389928, "body": "Removed my comment where the calculation was based purely on bytes ... I was thinking at a compiler level there and it really made no sense in context with the question."}, {"owner": {"reputation": 118, "user_id": 2327498, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c864209aa3465b68aa64506bc91739ac?s=128&d=identicon&r=PG", "display_name": "A0A", "link": "https://stackoverflow.com/users/2327498/a0a"}, "edited": false, "score": 0, "creation_date": 1528157533, "post_id": 50690053, "comment_id": 88390492, "body": "Thanks! And so I assume that primitive arrays don&#39;t carry a constant associated with their size?"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "reply_to_user": {"reputation": 118, "user_id": 2327498, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c864209aa3465b68aa64506bc91739ac?s=128&d=identicon&r=PG", "display_name": "A0A", "link": "https://stackoverflow.com/users/2327498/a0a"}, "edited": false, "score": 1, "creation_date": 1528157639, "post_id": 50690053, "comment_id": 88390521, "body": "No they don&#39;t. The length is known at compile time and this value is baked directly into the generated assembly (for Release builds)."}, {"owner": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "edited": false, "score": 0, "creation_date": 1528203756, "post_id": 50690053, "comment_id": 88410779, "body": "The <a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">documentation</a> says: <i>A fixed-size array, denoted <code>[T; N]</code>, for the element type, <code>T</code>, and the non-negative <b>compile-time constant</b> size, <code>N</code>.</i>"}], "tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 6, "last_activity_date": 1528203201, "last_edit_date": 1528203201, "creation_date": 1528154745, "answer_id": 50690053, "question_id": 50689671, "link": "https://stackoverflow.com/questions/50689671/whats-the-runtime-complexity-of-arraylen-in-rust/50690053#50690053", "title": "What&#39;s the runtime complexity of array::len in Rust?", "body": "<p>Primitive arrays have a constant length so it is safe to assume that the size of an array can be calculated during compilation (a compile-time constant)</p>\n\n<p>Given:</p>\n\n<pre><code>let array = [1, 2, 3, 4, 5];\nprintln!(\"Length: {}\", array.len());\n</code></pre>\n\n<p>Debug builds give:</p>\n\n<pre><code>callq   alloc::slice::&lt;impl [T]&gt;::len\nmovq    %rax, -16(%rbp)\nmovq    core::fmt::num::&lt;impl core::fmt::Display for usize&gt;::fmt@GOTPCREL(%rip), %rsi\n</code></pre>\n\n<p>Debug builds appear to delegate the responsibility to the <code>len</code> method of a slice.</p>\n\n<p>However, release builds, as expected, calculate a constant during compilation, push it directly into the stack and use that instead:</p>\n\n<pre><code>movq    $5, (%rsp)\nmovq    core::fmt::num::&lt;impl core::fmt::Display for usize&gt;::fmt@GOTPCREL(%rip), %rax\n</code></pre>\n"}], "owner": {"reputation": 118, "user_id": 2327498, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c864209aa3465b68aa64506bc91739ac?s=128&d=identicon&r=PG", "display_name": "A0A", "link": "https://stackoverflow.com/users/2327498/a0a"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 286, "favorite_count": 0, "accepted_answer_id": 50690053, "answer_count": 1, "score": 3, "last_activity_date": 1528203201, "creation_date": 1528151674, "last_edit_date": 1528203145, "question_id": 50689671, "link": "https://stackoverflow.com/questions/50689671/whats-the-runtime-complexity-of-arraylen-in-rust", "title": "What&#39;s the runtime complexity of array::len in Rust?", "body": "<p>What's the runtime complexity of the <code>len</code> method for primitive arrays in Rust? I understand that it's constant for <code>Vector</code> and <code>String</code>, however each of those types keep track of their length and I can't find any documentation on whether that's the case for arrays.</p>\n"}, {"tags": ["windows", "rust"], "answers": [{"tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": false, "score": 3, "last_activity_date": 1528143119, "last_edit_date": 1528143119, "creation_date": 1528142348, "answer_id": 50687947, "question_id": 50687861, "link": "https://stackoverflow.com/questions/50687861/how-do-i-tell-which-windows-toolchain-my-rust-compiler-is-using/50687947#50687947", "title": "How do I tell which Windows toolchain my Rust compiler is using?", "body": "<p>Use <code>rustup show</code> to see your active toolchain which contains the name of the platform you're using. For example, on my Windows PC, I see this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup show\n\nDefault host: x86_64-pc-windows-msvc\n\ninstalled toolchains\n--------------------\n\nstable-x86_64-pc-windows-msvc (default)\nnightly-x86_64-pc-windows-msvc\n\nactive toolchain\n----------------\n\nstable-x86_64-pc-windows-msvc (default)\nrustc 1.26.1 (827013a31 2018-05-25)\n</code></pre>\n\n<p>Which says that my active toolchain is <code>msvc</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1528143037, "creation_date": 1528143037, "answer_id": 50688073, "question_id": 50687861, "link": "https://stackoverflow.com/questions/50687861/how-do-i-tell-which-windows-toolchain-my-rust-compiler-is-using/50688073#50688073", "title": "How do I tell which Windows toolchain my Rust compiler is using?", "body": "<p>The platform toolchain is known by the compiler. Use <code>rustc --version --verbose</code> to see it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>PS C:\\Users\\IEUser&gt; rustc --version --verbose\nrustc 1.26.0 (a77568041 2018-05-07)\nbinary: rustc\ncommit-hash: a7756804103447ea4e68a71ccf071e7ad8f7a03e\ncommit-date: 2018-05-07\nhost: x86_64-pc-windows-msvc\nrelease: 1.26.0\nLLVM version: 6.0\n</code></pre>\n\n<p>From here, we can see that I have installed the MSVC flavor (<code>host: x86_64-pc-windows-msvc</code>).</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/46931981/155423\">What are the differences between the GNU and MSVC Rust toolchain?</a></li>\n</ul>\n"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 669, "favorite_count": 2, "accepted_answer_id": 50688073, "answer_count": 2, "score": 2, "last_activity_date": 1528143119, "creation_date": 1528141947, "last_edit_date": 1528143086, "question_id": 50687861, "link": "https://stackoverflow.com/questions/50687861/how-do-i-tell-which-windows-toolchain-my-rust-compiler-is-using", "title": "How do I tell which Windows toolchain my Rust compiler is using?", "body": "<p>I'm trying to install Rust debugging tools on my Windows machine. I know I have to find if I'm using the GNU or MSVC toolchain my Rust compiler is using, but I don't know how to find this information.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 2, "last_activity_date": 1528136156, "creation_date": 1528136156, "answer_id": 50686527, "question_id": 50686411, "link": "https://stackoverflow.com/questions/50686411/whats-the-usual-way-to-create-a-vector-of-different-structs/50686527#50686527", "title": "What&#39;s the usual way to create a vector of different structs?", "body": "<p>The usual way would be to create an <code>enum</code> with a variant for each kind of struct. When you process them, you'll need to <code>match</code> on their enum variant to determine what their type is.</p>\n\n<pre><code>struct Santa {\n    color: String,\n    phrase: String,\n}\nstruct Rudolph {\n    speed: u32,\n    lumens: u32,\n}\n\nfn newSanta() -&gt; Santa {\n    Santa {\n        color: String::from(\"Red\"),\n        phrase: String::from(\"Ho ho ho!\"),\n    }\n}\nfn newRudolph() -&gt; Rudolph {\n    Rudolph {\n        speed: 100,\n        lumens: 500,\n    }\n}\n\nenum Common {\n  Santa(Santa),\n  Rudolph(Rudolph),\n}\n\nfn main() {\n    let santa = newSanta();\n    let rudolph = newRudolph();\n\n    let northerners = vec![Common::Santa(santa), Common::Rudolph(rudolph)];\n\n    match &amp;northerners[0] {\n        Common::Santa(santa) =&gt; println!(\"santa color: {}\", santa.color),\n        Common::Rudolph(rudolph) =&gt; println!(\"rudolph speed: {}\", rudolph.speed),\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=910f8f462f2b2b99850b64261b96fe76&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Alternatively, if they each implement a common trait, you can store <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait objects</a> of them.</p>\n"}], "owner": {"reputation": 270, "user_id": 7351717, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GEvRh.png?s=128&g=1", "display_name": "Hydraxan14", "link": "https://stackoverflow.com/users/7351717/hydraxan14"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 583, "favorite_count": 0, "closed_date": 1528136341, "accepted_answer_id": 50686527, "answer_count": 1, "score": 1, "last_activity_date": 1528136304, "creation_date": 1528135695, "last_edit_date": 1528136304, "question_id": 50686411, "link": "https://stackoverflow.com/questions/50686411/whats-the-usual-way-to-create-a-vector-of-different-structs", "closed_reason": "Duplicate", "title": "What&#39;s the usual way to create a vector of different structs?", "body": "<p>I want a collection of different types of structs.  </p>\n\n<p>A <code>Vec</code> doesn't work, I think because different structs are different types, and <code>Vec</code> can only contain one type.</p>\n\n<pre><code>struct Santa {\n    color: String,\n    phrase: String,\n}\nstruct Rudolph {\n    speed: u32,\n    lumens: u32,\n}\n\nfn newSanta() -&gt; Santa {\n    Santa {\n        color: String::from(\"Red\"),\n        phrase: String::from(\"Ho ho ho!\"),\n    }\n}\nfn newRudolph() -&gt; Rudolph {\n    Rudolph {\n        speed: 100,\n        lumens: 500,\n    }\n}\n\nfn main() {\n    let santa = newSanta();\n    let rudolph = newRudolph();\n\n    let northerners = vec![santa, rudolph]; //fails\n}\n</code></pre>\n\n<hr>\n\n<pre><code>PS C:\\Users\\anon&gt; rustc xmas.rs\nerror[E0308]: mismatched types\n  --&gt; xmas.rs:27:32\n   |\n27 |     let northerners = vec![santa, rudolph]; //fails\n   |                                   ^^^^^^^ expected struct `Santa`, found struct `Rudolph`\n   |\n   = note: expected type `Santa`\n              found type `Rudolph`\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 248, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1528120748, "creation_date": 1528118507, "last_edit_date": 1528120748, "question_id": 50681661, "link": "https://stackoverflow.com/questions/50681661/how-do-i-specify-generic-lifetime-for-function-pointer-parameters", "title": "How do I specify generic lifetime for function pointer parameters?", "body": "<p><strong>Background</strong></p>\n\n<p>Closures in Rust have anonymous type and cannot be referred to as a known concrete type. However <a href=\"https://github.com/rust-lang/rust/issues/39817\" rel=\"nofollow noreferrer\">from Feb 2017</a>, all non-capturing closures can be converted to anonymous functions and have the same type as a function pointer.</p>\n\n<p>I wanted to create a type that standardizes curried closures. If we have a function <code>fn(T1, T2, ...) -&gt; R</code> we can have a special type that is <code>FnXXX(T2, ...) -&gt; R</code> (replace <code>XXX</code> with <code></code> or <code>Mut</code> or <code>Once</code>, or <code>Box</code>). They can then be used inside containers without involving dynamic dispatch.</p>\n\n<p><strong>Attempt for <code>FnOnce</code></strong></p>\n\n<p>The following works:</p>\n\n<pre><code>#![feature(unboxed_closures)]\n#![feature(fn_traits)]\n\nstruct Curry0&lt;T, R&gt; {\n    f: fn(T) -&gt; R,\n    v: T,\n}\nimpl&lt;T, R&gt; FnOnce&lt;()&gt; for Curry0&lt;T, R&gt; {\n    type Output = R;\n    extern \"rust-call\" fn call_once(self, _: ()) -&gt; R {\n        (self.f)(self.v)\n    }\n}\n\nfn curry&lt;T, R&gt;(f: fn(T) -&gt; R, v: T) -&gt; impl FnOnce() -&gt; R {\n    Curry0 { f: f, v: v }\n}\n\nfn main() {\n    curry(|s| println!(\"{}\", s), \"Hello, World!\")()\n}\n</code></pre>\n\n<p>However, I am not able to add the following:</p>\n\n<pre><code>impl&lt;'a, T, R&gt; FnMut&lt;()&gt; for Curry0&lt;&amp;'a mut T, R&gt; {\n    extern \"rust-call\" fn call_mut(&amp;mut self, _: ()) -&gt; R {\n        (self.f)(self.v)\n    }\n}\n</code></pre>\n\n<p>The error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0312]: lifetime of reference outlives lifetime of borrowed content...\n  --&gt; src/main.rs:16:18\n   |\n16 |         (self.f)(self.v)\n   |                  ^^^^^^\n   |\nnote: ...the reference is valid for the lifetime 'a as defined on the impl at 14:1...\n  --&gt; src/main.rs:14:1\n   |\n14 | impl&lt;'a, T, R&gt; FnMut&lt;()&gt; for Curry0&lt;&amp;'a mut T, R&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...but the borrowed content is only valid for the anonymous lifetime #1 defined on the method body at 15:5\n  --&gt; src/main.rs:15:5\n   |\n15 | /     extern \"rust-call\" fn call_mut(&amp;mut self, _: ()) -&gt; R {\n16 | |         (self.f)(self.v)\n17 | |     }\n   | |_____^\n</code></pre>\n\n<p>My understanding is that for this to work, <code>call_mut</code> must take care that <code>&amp;mut self</code> only lives for the function itself, and so if <code>f</code> returns something that refers to <code>v</code>'s inside, it will be invalid.</p>\n\n<p><strong>Attempt for <code>FnMut</code></strong></p>\n\n<p>To work with <code>FnMut</code> rather than <code>FnOnce</code> above I wrote:</p>\n\n<pre><code>#![feature(unboxed_closures)]\n#![feature(fn_traits)]\n\nstruct Curry0Mut&lt;'a, 'b, T, R&gt;\nwhere\n    T: 'a,\n    R: 'b,\n{\n    f: fn(&amp;mut T) -&gt; R,\n    v: &amp;'a mut T,\n    _l: std::marker::PhantomData&lt;&amp;'b ()&gt;,\n}\nimpl&lt;'a, 'b, T, R&gt; FnOnce&lt;()&gt; for Curry0Mut&lt;'a, 'b, T, R&gt; {\n    type Output = R;\n    extern \"rust-call\" fn call_once(self, _: ()) -&gt; R {\n        (self.f)(self.v)\n    }\n}\nimpl&lt;'a, 'b, T, R&gt; FnMut&lt;()&gt; for Curry0Mut&lt;'a, 'b, T, R&gt;\nwhere\n    T: 'a,\n    R: 'b,\n{\n    extern \"rust-call\" fn call_mut(&amp;mut self, _: ()) -&gt; R {\n        (self.f)(self.v)\n    }\n}\n\nfn curry&lt;'a, T, R&gt;(f: fn(&amp;mut T) -&gt; R, v: &amp;'a mut T) -&gt; impl FnMut() -&gt; R + 'a {\n    Curry0Mut {\n        f: f,\n        v: v,\n        _l: std::marker::PhantomData,\n    }\n}\n\nfn main() {\n    let mut v = \"Hello, World\".to_owned();\n    curry(|s| println!(\"{}\", s), &amp;mut v)();\n}\n</code></pre>\n\n<p>This is more complicated and sadly we have two structs for just slightly different usage. When I looked closer at the change I have to make here, I figured out that <code>f</code> is actually a generic function on its parameter's lifetime, and <code>T</code>'s lifetime is independent to this. We also have to make sure <code>R</code> does not live longer than the closure itself, so its lifetime has to be encoded inside the closure.</p>\n\n<p>I will not go into detail for <code>Fn</code> as it is similar. Only to note that this makes it worse as we need another variation of <code>Curry0</code>, because <code>&amp;mut T</code> is not <code>&amp;T</code>.</p>\n\n<p><strong>The Question</strong></p>\n\n<p>Is it possible to express the fact that <code>v</code> has a different lifetime expectation than <code>f</code>s parameter?</p>\n\n<p>For example, how to write something like:</p>\n\n<pre><code>struct Curry0&lt;'a, 'b, T, R&gt;\nwhere\n    R: 'b,\n{\n    f: fn(T) -&gt; R, //T have generic lifetime\n    v: T,          //T: 'a\n    _a: std::marker::PhantomData&lt;&amp;'a ()&gt;,\n    _b: std::marker::PhantomData&lt;&amp;'b ()&gt;,\n}\n</code></pre>\n"}, {"tags": ["rust", "weak-references"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528118247, "post_id": 50677344, "comment_id": 88372516, "body": "<a href=\"https://play.rust-lang.org/?gist=dc7f783815af9888bc7ded39c22f044e&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">The code you have provided doesn&#39;t produce the errors you say it does</a>. Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and <a href=\"https://stackoverflow.com/posts/50677344/edit\">edit</a> your post to contain one."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1528116676, "last_edit_date": 1528116676, "creation_date": 1528107440, "answer_id": 50678276, "question_id": 50677344, "link": "https://stackoverflow.com/questions/50677344/store-references-to-self/50678276#50678276", "title": "Store references to self", "body": "<p>You should separate your node and your network, because your network <em>must</em> take the ownership of your node to create an <code>Rc</code> (or at least, it must take an already created <code>Rc</code>). Here is a better design that achieves what you want:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::rc::Weak;\nuse std::cell::RefCell;\n\n#[derive(Debug)]\nstruct Node {\n    name: String,\n}\n\n#[derive(Default, Debug)]\nstruct Network {\n    nodes: Rc&lt;RefCell&lt;Vec&lt;Weak&lt;Node&gt;&gt;&gt;&gt;,\n}\n\nimpl Network {\n    fn add_node(&amp;mut self, node: Node) -&gt; Rc&lt;Node&gt; {\n        let node = Rc::new(node);\n        self.nodes.borrow_mut().push(Rc::downgrade(&amp;node));\n\n        node\n    }\n}\n\nfn main() {\n    let mut network = Network::default();\n    let node_1 = Node { name: \"node_1\".into() };\n    let node_2 = Node { name: \"node_2\".into() };\n\n    let _node_1 = network.add_node(node_1);\n    let _node_2 = network.add_node(node_2);\n}\n</code></pre>\n\n<p>If you want to store a reference to <code>self</code>, you can do this:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse std::rc::Weak;\n\ntype MutableNode = Rc&lt;RefCell&lt;Node&gt;&gt;;\ntype Network = Rc&lt;RefCell&lt;Vec&lt;Weak&lt;RefCell&lt;Node&gt;&gt;&gt;&gt;&gt;;\n\nstruct Node {\n    name: String,\n    others: Network,\n}\n\nimpl Node {\n    fn new(name: String) -&gt; MutableNode {\n        let node = Rc::new(RefCell::new(Node {\n            name,\n            others: Rc::new(RefCell::new(Vec::new())),\n        }));\n        {\n            let tmp = node.borrow();\n            tmp.others.borrow_mut().push(Rc::downgrade(&amp;node));\n        }\n\n        node\n    }\n\n    fn add_node(&amp;mut self, name: String) -&gt; MutableNode {\n        let others = self.others.clone();\n        let node = Rc::new(RefCell::new(Node { name, others }));\n        self.others\n            .borrow_mut()\n            .push(Rc::downgrade(&amp;node));\n\n        node\n    }\n\n    fn len(&amp;self) -&gt; usize {\n        self.others.borrow().len()\n    }\n}\n\nfn main() {\n    let node_0 = Node::new(\"node_0\".into());\n    let node_1 = node_0.borrow_mut().add_node(\"node_1\".into());\n    let node_2 = node_0.borrow_mut().add_node(\"node_2\".into());\n\n    assert_eq!(node_0.borrow().len(), 3);\n    assert_eq!(node_1.borrow().len(), 3);\n    assert_eq!(node_2.borrow().len(), 3);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 25, "user_id": 2568161, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f3aa92d66724ac129e10cdcf71f0eea?s=128&d=identicon&r=PG", "display_name": "user2568161", "link": "https://stackoverflow.com/users/2568161/user2568161"}, "is_accepted": false, "score": 0, "last_activity_date": 1528123252, "last_edit_date": 1528123252, "creation_date": 1528122220, "answer_id": 50682796, "question_id": 50677344, "link": "https://stackoverflow.com/questions/50677344/store-references-to-self/50682796#50682796", "title": "Store references to self", "body": "<p><code>Rc::new(value:T)</code> consume the <code>value</code>.Your function only borrow it, so you can't call <code>Rc::new(*self)</code></p>\n\n<p>I would recommend you to create a Network struct like the above answer. Or you can wrap your node in <code>Rc&lt;RefCell&lt;Node&gt;&gt;</code> like this:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\nuse std::rc::Weak;\n\n#[derive(Debug)]\nstruct Node {\n    name: String,\n    known_nodes: Rc&lt;RefCell&lt;Vec&lt;Weak&lt;RefCell&lt;Node&gt;&gt;&gt;&gt;&gt;,\n}\n\nimpl Node {\n    fn connect_to_network(&amp;mut self,ref_to_self: Weak&lt;RefCell&lt;Node&gt;&gt;) {\n        self.known_nodes\n            .borrow_mut()\n            .push(ref_to_self);\n    }\n}\n\nfn main() {\n    let known_nodes = Rc::new(RefCell::new(Vec::new()));\n    let node_one = Rc::new(RefCell::new(Node {\n        name: \"node1\".into(),\n        known_nodes: known_nodes.clone(),\n    }));\n    node_one.borrow_mut().connect_to_network(Rc::downgrade(&amp;node_one));\n    let node_two = Rc::new(RefCell::new(Node {\n        name: \"node2\".into(),\n        known_nodes: known_nodes.clone(),\n    }));\n    node_two.borrow_mut().connect_to_network(Rc::downgrade(&amp;node_two));\n    println!(\"{:?}\",known_nodes.borrow()[0].upgrade());\n    println!(\"{:?}\",known_nodes.borrow()[1].upgrade());\n    drop(node_one);\n    drop(node_two);\n    println!(\"{:?}\",known_nodes.borrow()[0].upgrade());\n    println!(\"{:?}\",known_nodes.borrow()[1].upgrade());\n}\n</code></pre>\n\n<p>Which in this case you don't really need <code>connect_to_network</code> function, you can just add each <code>Weak&lt;RefCell&lt;Node&gt;&gt;</code> to <code>known_nodes</code> directly</p>\n\n<p>If you want the code to look cleaner, you can introduce a new type alias to <code>Rc&lt;RefCell&lt;Node&gt;&gt;</code> like this</p>\n\n<pre><code>struct Node {\n    name: String,\n    known_nodes: Rc&lt;RefCell&lt;Vec&lt;Weak&lt;RefCell&lt;Node&gt;&gt;&gt;&gt;&gt;,\n}\n\ntype RcNode = Rc&lt;RefCell&lt;Node&gt;&gt;;\n\ntrait Connectable {\n    fn connect_to_network(&amp;self);\n}\n\nimpl Connectable for RcNode {\n    fn connect_to_network(&amp;self){\n        let node = self.borrow_mut();\n        node.known_nodes.borrow_mut().push(Rc::downgrade(self));\n    }\n}\n</code></pre>\n\n<p>so then you can call</p>\n\n<pre><code>let node_one:RcNode = Rc::new(RefCell::new(Node {\n    name: \"node1\".into(),\n    known_nodes: known_nodes.clone(),\n}));\nnode_one.connect_to_network();\n</code></pre>\n"}], "owner": {"reputation": 67, "user_id": 8966670, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/284198b4317957d2a615211653324968?s=128&d=identicon&r=PG&f=1", "display_name": "Rasmus", "link": "https://stackoverflow.com/users/8966670/rasmus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 583, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1528123252, "creation_date": 1528104418, "last_edit_date": 1528118214, "question_id": 50677344, "link": "https://stackoverflow.com/questions/50677344/store-references-to-self", "title": "Store references to self", "body": "<p>I am trying to create a network of nodes in Rust, where I want every node in the network to be aware of every other connected node. I thought that this could be done with weak <code>Rc</code>'s, like this:</p>\n\n<pre><code>use std::cell::Cell;\nuse std::cell::RefCell;\nuse std::rc::Rc;\nuse std::rc::Weak;\n\nstruct Node {\n    name: String,\n    known_nodes: Rc&lt;RefCell&lt;Vec&lt;Weak&lt;Node&gt;&gt;&gt;&gt;,\n}\n\nimpl Node {\n    fn connect_to_network(&amp;mut self) {\n        self.known_nodes\n            .borrow_mut()\n            .push(Rc::downgrade(&amp;Rc::new(*self)));\n    }\n}\n\nfn main() {\n    let known_nodes = Rc::new(RefCell::new(Vec::new()));\n    let node_one = Node {\n        name: \"node1\",\n        known_nodes: known_nodes.copy(),\n    };\n    node_one.connect_to_network();\n    let node_two = Node {\n        name: \"node2\",\n        known_nodes: known_nodes.copy(),\n    };\n    node_two.connect_to_network();\n}\n</code></pre>\n\n<p>This however yields </p>\n\n<blockquote>\n  <p>cannot move out of borrowed content</p>\n</blockquote>\n\n<p>at:</p>\n\n<pre><code>self.known_senders.borrow_mut().push(Rc::downgrade(&amp;Rc::new(*self)));\n</code></pre>\n\n<p>Because <code>*self</code> is moved out of borrowed content in the <code>&amp;Rc::new(*self)</code>.\nAny ideas, on how each node can keep track of all the other nodes in the network? </p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1528104299, "post_id": 50677205, "comment_id": 88364051, "body": "It&#39;d help if you included the definitions of <code>OpBStruct</code> and <code>OpCStruct</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1528104304, "post_id": 50677205, "comment_id": 88364057, "body": "There seem to be missing pieces in the code, which make the question hard to understand. Please seek to make a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Where are the definitions for <code>OpBStruct</code> and <code>OpCStruct</code>? What is preventing you from implementing the trait <code>OpTrait</code> for these two, and then for <code>Op</code>?"}, {"owner": {"reputation": 137, "user_id": 1928741, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DBmuK.png?s=128&g=1", "display_name": "Oliver Funk", "link": "https://stackoverflow.com/users/1928741/oliver-funk"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1528116793, "post_id": 50677205, "comment_id": 88371504, "body": "@E_net4, I have added an example of the how the structs could look."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1528117156, "post_id": 50677205, "comment_id": 88371747, "body": "Are you sure that the trait is declared the way you want? Implementing it for the given struct types should be trivial. Perhaps you would like to extend it to also include a generic constructor?"}, {"owner": {"reputation": 137, "user_id": 1928741, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DBmuK.png?s=128&g=1", "display_name": "Oliver Funk", "link": "https://stackoverflow.com/users/1928741/oliver-funk"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1528119329, "post_id": 50677205, "comment_id": 88373292, "body": "@E_net4, yeah sure it would be, but I wanted something like an interface from Java, where you have to implement the methods specified in the interface. So any new Op would have implement the OpTrait trait"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1528119762, "post_id": 50677205, "comment_id": 88373616, "body": "You can already do that with traits. In fact, Java interfaces are even less flexible than Rust&#39;s traits. Can you show a concrete use case in code? I have a hunch of what you might be looking for, but I cannot provide an answer until the question is clear enough."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1528128748, "post_id": 50677205, "comment_id": 88379174, "body": "It sounds to me like, in Java terms, you&#39;re asking for <code>class Foo { String m; }</code> how to guarantee that <code>String</code> implements <code>IEnumerable</code>. Well... you don&#39;t. It either does, or it doesn&#39;t, but at the point you write <code>String</code> you&#39;re stuck with that"}], "answers": [{"tags": [], "owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "is_accepted": false, "score": 0, "last_activity_date": 1528406105, "last_edit_date": 1528406105, "creation_date": 1528399838, "answer_id": 50748895, "question_id": 50677205, "link": "https://stackoverflow.com/questions/50677205/how-do-i-force-structs-to-implement-the-same-traits/50748895#50748895", "title": "How do I &#39;force&#39; structs to implement the same traits?", "body": "<p>Using a unit test would be a fairly straightforward way to enforce that you want a given trait on a struct. You can do it via implicit test code, but a small utility function to do so can express the intent a little more clearly. </p>\n\n<p>If you have indicated trait inputs on functions in the rest of the code, it might come out fairly naturally without the unit test. The test has the advantage of letting you have an opportunity to explicitly check some invariant of the trait implementation too.</p>\n\n<pre><code>struct A {\n    val: u8,\n}\n\n\nstruct B {\n    val: u32,\n}\n\ntrait ExpandToU64 {\n    fn to_u64(&amp;self) -&gt; u64;\n}\n\nimpl ExpandToU64 for A {\n    fn to_u64(&amp;self) -&gt; u64\n    {\n        self.val as u64\n    }\n}\n\nfn trait_tester&lt;E&gt;(a: E)\n    where E: ExpandToU64\n{\n    // the utility function doesn't have to even use the trait...\n    // but you probably want to exercise the logic a bit\n    //let v = a.to_u64();\n    let v = 24u64;\n    println!(\"{:?}\", v);\n}\n\n#[test]\nfn test_needs_trait_ExpandToU64() {\n    let a = A { val:1 };\n    trait_tester(a);\n\n    let b = B { val:2 };\n    trait_tester(b);\n    // This fails with a compile error\n    //  \"the trait `ExpandToU64` is not implemented for `B`\"\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 445, "user_id": 1147211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c133f3fd48e1fd4d0e60d96bffc8b3c?s=128&d=identicon&r=PG", "display_name": "rokob", "link": "https://stackoverflow.com/users/1147211/rokob"}, "is_accepted": true, "score": 1, "last_activity_date": 1528404538, "creation_date": 1528404538, "answer_id": 50749956, "question_id": 50677205, "link": "https://stackoverflow.com/questions/50677205/how-do-i-force-structs-to-implement-the-same-traits/50749956#50749956", "title": "How do I &#39;force&#39; structs to implement the same traits?", "body": "<p>I would also recommend writing a test, however you can write a function which is generic over a type but takes no arguments:</p>\n\n<pre><code>struct X {}\n\ntrait Y {\n    fn yo();\n}\n\nfn is_y&lt;T: Y&gt;(){}\n</code></pre>\n\n<p>Then you can add the following line to do the check</p>\n\n<pre><code>is_y::&lt;X&gt;();\n</code></pre>\n\n<p>which will compile only if <code>X</code> implements <code>Y</code>.</p>\n"}], "owner": {"reputation": 137, "user_id": 1928741, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/DBmuK.png?s=128&g=1", "display_name": "Oliver Funk", "link": "https://stackoverflow.com/users/1928741/oliver-funk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 482, "favorite_count": 0, "accepted_answer_id": 50749956, "answer_count": 2, "score": -1, "last_activity_date": 1528406105, "creation_date": 1528103947, "last_edit_date": 1528118685, "question_id": 50677205, "link": "https://stackoverflow.com/questions/50677205/how-do-i-force-structs-to-implement-the-same-traits", "title": "How do I &#39;force&#39; structs to implement the same traits?", "body": "<p>I have the following:</p>\n\n<pre><code>pub struct OpBStruct {\n    title: String,\n    output_vale: i32,\n}\n\nimpl OpBStruct {\n    pub fn new_OpB(in_title: String, in_output_vale: i32) -&gt; OpBStruct {\n        OpBStruct {\n            title: in_title,\n            output_vale: in_output_vale,\n        }\n    }\n}\n\npub struct OpCStruct {\n    title: String,\n    another_value: String,\n    output_vale: i32,\n}\n\nimpl OpCStruct {\n    pub fn new_OpC(in_title: String, in_another_value: String, in_output_vale: i32) -&gt; OpCStruct {\n        OpCStruct {\n            title: in_title,\n            another_value: in_another_value,\n            output_vale: in_output_vale,\n        }\n    }\n}\n\nimpl A {\n    pub fn new_A(in_name: String, in_operator: Op) -&gt; A {\n        A {\n            name: in_name,\n            operator: in_operator,\n        }\n    }\n}\n\npub enum Op {\n    OpB(OpBStruct),\n    OpC(OpCStruct),\n}\n\npub struct A {\n    name: String,\n    operator: Op,\n}\n\nimpl A {\n    pub fn new_A(in_name: String, in_operator: Op) -&gt; A {\n        A {\n            name: in_name,\n            operator: in_operator,\n        }\n    }\n}\n</code></pre>\n\n<p>The exact structure of <code>OpBStruct</code> and <code>OpCStruct</code> are arbitrary and could be anything.</p>\n\n<p>How do I make sure <code>OpBStruct</code> and <code>OpCStruct</code> implement a certain trait?</p>\n\n<pre><code>trait OpTrait {    \n    pub fn get_op_output(&amp;self) -&gt; i32;\n}\n</code></pre>\n\n<p>I thought about making a sort of constructor function that checked for an <code>OpTrait</code> trait requirement and it would be the only way one could create an <code>Op</code> instance, but each operator requires different initialization parameters and there's no way to specify a variable number of inputs for a function in Rust.</p>\n\n<p>Something like this doesn't work because there's no way to input the initialization parameters:</p>\n\n<pre><code>pub fn new_op&lt;T: OpTrait&gt;(operator: T) {\n    //  --snip--\n}\n</code></pre>\n\n<p>I thought about somehow using the <code>new_A</code> method implemented on <code>A</code> to check if the <code>in_operator</code> has implemented the trait, but I'm not sure how to do that either.</p>\n\n<p>What is the correct pattern for this? If there is none, I can just implement the trait for each <code>Op</code> with no sort of interface around it.</p>\n"}, {"tags": ["rust", "traits", "type-bounds"], "answers": [{"comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1528103193, "post_id": 50675676, "comment_id": 88363445, "body": "To put it in simple words, because operator <code>+=</code> takes the second operator by value, and by-value arguments must be sized."}, {"owner": {"reputation": 37636, "user_id": 101999, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ab9e16b1296c16bc63f02f6dff5e3dc6?s=128&d=identicon&r=PG", "display_name": "Thanatos", "link": "https://stackoverflow.com/users/101999/thanatos"}, "edited": false, "score": 0, "creation_date": 1528122444, "post_id": 50675676, "comment_id": 88375372, "body": "Sure, that part I think I get; but why does <code>Sized</code> not otherwise also need to be mentioned on <code>AddAssign</code> / why is <code>AddAssign</code> not required to say <code>trait AddAssign&lt;\u2026&gt; : Sized</code>?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1528133127, "post_id": 50675676, "comment_id": 88381266, "body": "The <code>Sized</code> requirements only comes from the fact that <code>Rhs</code> is used as a method parameter, and there it&#39;s implied because parameters always need to be sized."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 37636, "user_id": 101999, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ab9e16b1296c16bc63f02f6dff5e3dc6?s=128&d=identicon&r=PG", "display_name": "Thanatos", "link": "https://stackoverflow.com/users/101999/thanatos"}, "edited": false, "score": 0, "creation_date": 1528136801, "post_id": 50675676, "comment_id": 88383049, "body": "@Thanatos: You could try implementing <code>::std::ops::AddAssign&lt;&amp;Foo&gt;</code>, but I&#39;m not sure if it will work."}, {"owner": {"reputation": 37636, "user_id": 101999, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ab9e16b1296c16bc63f02f6dff5e3dc6?s=128&d=identicon&r=PG", "display_name": "Thanatos", "link": "https://stackoverflow.com/users/101999/thanatos"}, "edited": false, "score": 1, "creation_date": 1528357620, "post_id": 50675676, "comment_id": 88478946, "body": "I understand that method parameters have to be <code>Sized</code>; but the <code>AddAssign</code> trait doesn&#39;t need to specify this. (As you say, &quot;there it is implied&quot;) Why, when I use it as a supertrait, is <code>Sized</code> no longer implied?"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 5, "last_activity_date": 1528117470, "last_edit_date": 1528117470, "creation_date": 1528098410, "answer_id": 50675676, "question_id": 50674693, "link": "https://stackoverflow.com/questions/50674693/why-does-a-trait-requiring-addassign-as-a-supertrait-also-require-it-to-be-sized/50675676#50675676", "title": "Why does a trait requiring AddAssign as a supertrait also require it to be Sized?", "body": "<p>Let's look at the definition of the trait:</p>\n\n<pre><code>pub trait AddAssign&lt;Rhs = Self&gt; {\n    fn add_assign(&amp;mut self, rhs: Rhs);\n}\n</code></pre>\n\n<p>That is, <code>trait Foo: ::std::ops::AddAssign</code> is equivalent to <code>trait Foo: ::std::ops::AddAssign&lt;Foo&gt;</code> and <code>add_assign</code> takes a <code>Rhs</code> as its second parameter, hence <code>Rhs</code> needs to be sized.</p>\n\n<p>Note that <code>trait Foo: ::std::ops::AddAssign&lt;u32&gt;</code> does not require <code>Foo</code> to be sized.</p>\n"}], "owner": {"reputation": 37636, "user_id": 101999, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ab9e16b1296c16bc63f02f6dff5e3dc6?s=128&d=identicon&r=PG", "display_name": "Thanatos", "link": "https://stackoverflow.com/users/101999/thanatos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1528117470, "creation_date": 1528094508, "last_edit_date": 1528117424, "question_id": 50674693, "link": "https://stackoverflow.com/questions/50674693/why-does-a-trait-requiring-addassign-as-a-supertrait-also-require-it-to-be-sized", "title": "Why does a trait requiring AddAssign as a supertrait also require it to be Sized?", "body": "<p>I have a trait, and to implement that trait, I would like to require the implementor to implement <code>AddAssign</code>; however, doing that results in <em>my</em> trait seemingly needing to require <code>Sized</code>:</p>\n\n<pre><code>trait Foo: ::std::ops::AddAssign {}\n\ntrait Bar: Iterator {}\n</code></pre>\n\n<p><sup><a href=\"https://play.rust-lang.org/?gist=b73ac30bd92ef6dfe226df309c1a1846&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">(playground)</a></sup></p>\n\n<p><code>Bar</code> compiles fine; <code>Foo</code>, however:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Self: std::marker::Sized` is not satisfied\n --&gt; src/main.rs:1:1\n  |\n1 | trait Foo: ::std::ops::AddAssign {}\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `Self` does not have a constant size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `Self`\n  = help: consider adding a `where Self: std::marker::Sized` bound\n  = note: required by `std::ops::AddAssign`\n</code></pre>\n\n<p>If I add <code>+ Sized</code> to the trait bounds, all is fine, but\u2026 why do <em>I</em> need to do this? Why doesn't <code>AddAssign</code> need this?</p>\n"}, {"tags": ["enums", "rust", "arguments"], "answers": [{"comments": [{"owner": {"reputation": 533, "user_id": 446250, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c4a87cf40b91268e475e92a169015440?s=128&d=identicon&r=PG", "display_name": "kellpossible", "link": "https://stackoverflow.com/users/446250/kellpossible"}, "edited": false, "score": 0, "creation_date": 1585722927, "post_id": 50673709, "comment_id": 107858303, "body": "seems like this pattern of using enums for subcommands would be annoying for code maintainability. Anywhere where you want to use an argument in the subcommand will have a maintenance burden for new arguments. Trying to figure out if there&#39;s some way to use a struct instead..."}, {"owner": {"reputation": 533, "user_id": 446250, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c4a87cf40b91268e475e92a169015440?s=128&d=identicon&r=PG", "display_name": "kellpossible", "link": "https://stackoverflow.com/users/446250/kellpossible"}, "edited": false, "score": 0, "creation_date": 1585723556, "post_id": 50673709, "comment_id": 107858564, "body": "nevermind, I think I found a pattern that works by having a single argument for the enum subcommand which is another StructOpt struct."}], "tags": [], "owner": {"reputation": 567, "user_id": 1111660, "user_type": "registered", "profile_image": "https://graph.facebook.com/824556066/picture?type=large", "display_name": "Dante", "link": "https://stackoverflow.com/users/1111660/dante"}, "is_accepted": false, "score": 19, "last_activity_date": 1528117099, "last_edit_date": 1528117099, "creation_date": 1528088886, "answer_id": 50673709, "question_id": 50673567, "link": "https://stackoverflow.com/questions/50673567/how-to-use-an-enum-that-represents-subcommands-with-structopt/50673709#50673709", "title": "How to use an enum that represents subcommands with StructOpt?", "body": "<p>Thanks to <a href=\"https://github.com/TeXitoi/structopt/issues/1\" rel=\"noreferrer\">issue #1 in the structopt repository</a>, I finally understood how it is supposed to work :)</p>\n\n<pre><code>fn main () {\n    match Git::from_args() {\n        Git::Add { interactive, patch, files } =&gt; {\n            println!(\"{:?}\", interactive)\n        },\n        Git::Commit { message, all } =&gt; {\n            //...\n        }\n        _ =&gt; (),\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1988, "user_id": 10446, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6baf8275b8eb95f464d38c73398e6f14?s=128&d=identicon&r=PG", "display_name": "sbeskur", "link": "https://stackoverflow.com/users/10446/sbeskur"}, "is_accepted": false, "score": 3, "last_activity_date": 1587497597, "creation_date": 1587497597, "answer_id": 61351721, "question_id": 50673567, "link": "https://stackoverflow.com/questions/50673567/how-to-use-an-enum-that-represents-subcommands-with-structopt/61351721#61351721", "title": "How to use an enum that represents subcommands with StructOpt?", "body": "<p>I encountered the same issue and thought I would flush out @kellpossible 's example further:</p>\n\n<pre><code>#[macro_use]\nextern crate structopt;\n\npub use structopt::StructOpt;\nuse std::path::PathBuf;\n\n\n\n#[derive(Debug, StructOpt)]\n#[structopt(name = \"example\", about=\"how to use struct-opt crate\")]\npub struct Opts{\n\n    #[structopt(short = \"v\",  parse(from_occurrences))]\n    verbosity: u8,\n\n    // SUBCOMMANDS\n    #[structopt(subcommand)]\n    commands: Option&lt;Git&gt;\n\n}\n\n\n#[derive(StructOpt, Debug)]\n#[structopt(name = \"git\", about = \"the stupid content tracker\")]\nenum Git {\n    #[structopt(name = \"add\")]\n    Add (AddOpts),\n\n    #[structopt(name = \"fetch\")]\n    Fetch(FetchOpts),\n\n    #[structopt(name = \"commit\")]\n    Commit(CommitOpts)\n}\n\n#[derive(StructOpt, Debug)]\nstruct AddOpts {\n    #[structopt(short = \"i\")]    \n    interactive: bool,\n\n    #[structopt(short = \"p\")]\n    patch: bool,\n\n    #[structopt(parse(from_os_str))]\n    files: Vec&lt;PathBuf&gt;\n}\n\n#[derive(Debug, StructOpt)]\npub struct FetchOpts {\n    #[structopt(long = \"dry-run\")]\n    dry_run: bool,\n    #[structopt(long = \"all\")]\n    all: bool,\n    repository: Option&lt;String&gt;\n}\n\n#[derive(Debug, StructOpt)]\npub struct CommitOpts {\n    #[structopt(short = \"m\")]\n    message: Option&lt;String&gt;,\n    #[structopt(short = \"a\")]\n    all: bool\n}\n\n\nfn main() {\n    println!(\"Hello subcommands!\");    \n\n    let opt = Opts::from_args();\n    handle_subcommand(opt);\n\n}\n\nfn handle_subcommand(opt: Opts){\n    // handle subcommands\n    if let Some(subcommand) = opt.commands{\n        match subcommand {\n            Git::Add(cfg) =&gt; {\n                println!(\"handle Add:  {:?}\", cfg);\n            },\n            Git::Commit(cfg) =&gt; {\n                println!(\"handle Commit: {:?}\", cfg);\n            },\n            Git::Fetch(cfg) =&gt; {\n                println!(\"handle Fetch: {:?}\", cfg);\n            },\n\n        }\n    }\n}\n</code></pre>\n\n<p>Hopefully this will help but would be interested if someone knows a better way to do this.</p>\n"}], "owner": {"reputation": 567, "user_id": 1111660, "user_type": "registered", "profile_image": "https://graph.facebook.com/824556066/picture?type=large", "display_name": "Dante", "link": "https://stackoverflow.com/users/1111660/dante"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2494, "favorite_count": 5, "answer_count": 2, "score": 12, "last_activity_date": 1587497597, "creation_date": 1528087892, "last_edit_date": 1528117061, "question_id": 50673567, "link": "https://stackoverflow.com/questions/50673567/how-to-use-an-enum-that-represents-subcommands-with-structopt", "title": "How to use an enum that represents subcommands with StructOpt?", "body": "<p>Referring to the <a href=\"https://docs.rs/structopt/0.2.8/structopt/#subcommands\" rel=\"noreferrer\">\"Git\" example of StructOpt</a>, I do not understand how I am then supposed to use the data from the arguments.</p>\n\n<p>I am fairly new to Rust so I am guessing it is obvious. Unfortunately, all examples I can find with an enum only do a <code>println!</code> on the object so I am stuck. I thought I'd do a <code>match</code> but it does not work.</p>\n\n<p>How would you then find which commands was passed by the user to run your program?</p>\n\n<pre><code>#[macro_use]\nextern crate structopt;\n\nuse std::path::PathBuf;\nuse structopt::StructOpt;\n\n#[derive(StructOpt, Debug)]\n#[structopt(name = \"git\", about = \"the stupid content tracker\")]\nenum Git {\n    #[structopt(name = \"add\")]\n    Add {\n        #[structopt(short = \"i\")]\n        interactive: bool,\n        #[structopt(short = \"p\")]\n        patch: bool,\n        #[structopt(parse(from_os_str))]\n        files: Vec&lt;PathBuf&gt;\n    },\n    #[structopt(name = \"fetch\")]\n    Fetch {\n        #[structopt(long = \"dry-run\")]\n        dry_run: bool,\n        #[structopt(long = \"all\")]\n        all: bool,\n        repository: Option&lt;String&gt;\n    },\n    #[structopt(name = \"commit\")]\n    Commit {\n        #[structopt(short = \"m\")]\n        message: Option&lt;String&gt;,\n        #[structopt(short = \"a\")]\n        all: bool\n    }\n}\n\nfn main() {\n    let opt = Git::from_args();\n    println!(\"{:?}\", opt);\n\n    match opt() {\n        Git::Add(cmd) =&gt; println!(\"{:?}\", cmd.interactive),\n        _ =&gt; (),\n    }\n}\n</code></pre>\n\n<p>Compilation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>05:42 $ cargo run -- add -i\n   Compiling example v0.1.0 (file:///Users/froyer/src/example)\nerror[E0532]: expected tuple struct/variant, found struct variant `Git::Add`\n  --&gt; src/main.rs:41:9\n   |\n41 |         Git::Add(cmd) =&gt; println!(\"{:?}\", cmd.interactive),\n   |         ^^^^^^^^ did you mean `Git::Add { /* fields */ }`?\n\nerror[E0618]: expected function, found enum variant `opt`\n  --&gt; src/main.rs:40:11\n   |\n37 |     let opt = Git::from_args();\n   |         --- `opt` defined here\n...\n40 |     match opt() {\n   |           ^^^^^ not a function\nhelp: `opt` is a unit variant, you need to write it without the parenthesis\n   |\n40 |     match opt {\n   |           ^^^\n</code></pre>\n"}, {"tags": ["rust", "self", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1528080653, "post_id": 50672838, "comment_id": 88355460, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/36379242/155423\">Mutably borrow one struct field while borrowing another in a closure</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/50672838/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528080687, "post_id": 50672838, "comment_id": 88355466, "body": "TL;DR the duplicate: yes, the entire <code>self</code> is borrowed by the closure. You need to split out the borrow of the field before the closure."}], "owner": {"reputation": 6960, "user_id": 1611307, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/aac7f9a85388beb45df5ee4366240473?s=128&d=identicon&r=PG", "display_name": "ssb", "link": "https://stackoverflow.com/users/1611307/ssb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 24, "favorite_count": 0, "closed_date": 1528083976, "answer_count": 0, "score": 0, "last_activity_date": 1528080572, "creation_date": 1528080269, "last_edit_date": 1528080572, "question_id": 50672838, "link": "https://stackoverflow.com/questions/50672838/why-does-it-look-like-a-closure-borrows-self-instead-of-a-field-of-self", "closed_reason": "Duplicate", "title": "Why does it look like a closure borrows self instead of a field of self?", "body": "<p>Why does the following code fail in the borrow checker?</p>\n\n<pre><code>struct X(pub i32);\nimpl X {\n    fn run&lt;F&gt;(&amp;mut self, f: F) -&gt; i32\n    where\n        F: FnOnce() -&gt; i32,\n    {\n        f() * self.0\n    }\n}\n\nstruct Y {\n    a: i32,\n    b: X,\n}\nimpl Y {\n    fn testme(&amp;mut self) -&gt; i32 {\n        let x = || self.a;\n        self.b.run(x)\n    }\n}\n\nfn main() {\n    let mut x = Y { a: 100, b: X(100) };\n    println!(\"Result: {}\", x.testme());\n}\n</code></pre>\n\n<p>With the error (<a href=\"http://play.rust-lang.org/?gist=39b15f1a078bb32c885c1804e6750c09&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `self.b` as mutable because `self` is also borrowed as immutable\n  --&gt; src/main.rs:18:9\n   |\n17 |         let x = || self.a;\n   |                 -- ---- previous borrow occurs due to use of `self` in closure\n   |                 |\n   |                 immutable borrow occurs here\n18 |         self.b.run(x)\n   |         ^^^^^^ mutable borrow occurs here\n19 |     }\n   |     - immutable borrow ends here\n</code></pre>\n\n<p>It looks like the closure <code>x</code> borrowed <code>self</code> in <code>testme()</code>; shouldn't it have only borrowed <code>self.a</code>? Maybe I am missing something.</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1528062611, "post_id": 50671177, "comment_id": 88352301, "body": "&quot;I already don&#39;t like that solution, because the parameter doesn&#39;t inherently belong to the struct.&quot; Where did you get that <code>struct Foo&lt;F, P&gt;</code> means that <code>Foo</code> owns a <code>P</code>? As <code>Foo&lt;SomeF, u32&gt;</code> would be a different type from <code>Foo&lt;SomeF, u64&gt;</code> for example, this seems to be the appropriate syntax."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1528062911, "post_id": 50671177, "comment_id": 88352362, "body": "@mcarton <a href=\"https://doc.rust-lang.org/stable/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\">The <code>PhantomData</code> docs</a> and the linked Nomicon section seem to imply that a type logically owns its type parameters. But yes, maybe that&#39;s not a good reason. Another reason why this just feels wrong to me: the <code>T</code> type parameter is already contained in the <code>F</code> type parameter. So the parameter <code>T</code> can&#39;t be chosen but is completely determined by <code>F</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1528068338, "post_id": 50671177, "comment_id": 88353424, "body": "<i>&quot;If the trait bounds would only be specified on impl blocks, the compiler has difficulties.&quot;</i> \u2014 what difficulties?"}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 5, "last_activity_date": 1551797544, "last_edit_date": 1551797544, "creation_date": 1528066331, "answer_id": 50671690, "question_id": 50671177, "link": "https://stackoverflow.com/questions/50671177/specify-fn-trait-bound-on-struct-definition-without-fixing-one-of-the-fn-par/50671690#50671690", "title": "Specify `Fn` trait bound on struct definition without fixing one of the `Fn` parameters", "body": "<p>Solution #2 is the only way I know of to make this work with bounds on the struct. In my opinion making it work <em>without</em> bounds on the struct, as <a href=\"https://stackoverflow.com/a/50671920/3650362\">Peter Hall suggests</a>, is usually preferable because it puts the bounds only where they are truly meaningful, but if you find that onerous, an extra type parameter is your only option.</p>\n\n<blockquote>\n  <ol start=\"2\">\n  <li>The other possibility is to add a type parameter to the struct. I already don't like that solution, because the parameter doesn't inherently belong to the struct.</li>\n  </ol>\n</blockquote>\n\n<p>The second parameter is necessary. The types of the arguments of a <code>Fn</code>-implementing type are <em>parameters of the <code>Fn</code> trait</em>, so in principle you could have both <code>impl Fn(i32, i32) for X</code> and <code>impl Fn(i32, String) for X</code>, just as you can have both <code>impl AsRef&lt;i32&gt; for X</code> and <code>impl AsRef&lt;String&gt; for X</code>.</p>\n\n<p>In fact, if you don't look at it too hard, this is kind of how HRTBs already work: a function can implement <code>Fn(&amp;'x i32)</code> for some <em>particular</em> lifetime <code>'x</code>, or it can implement <code>for&lt;'a&gt; Fn(&amp;'a i32)</code>, which means there are an infinite number of possible <code>Fn</code> traits that it implements.</p>\n\n<p>But you found the problem of adding a parameter for <code>P</code>: the parameter is unused.</p>\n\n<blockquote>\n  <p>This problem can be solved by adding a <code>PhantomData&lt;P&gt;</code> field, but this shouldn't be necessary</p>\n</blockquote>\n\n<p><a href=\"https://stackoverflow.com/a/40487993/3650362\">The compiler peers inside structs to determine the variance of their parameters.</a> In this case, suppose <code>P</code> is a reference type. Is it safe to pass a <code>Foo&lt;_, &amp;'static T&gt;</code> to a function expecting a <code>Foo&lt;_, &amp;'a T&gt;</code>? What about the other way around?</p>\n\n<p>(As the linked answer states, constraints -- <code>where</code> clauses -- don't count for determining variance, which is why <code>PhantomData</code> is necessary here.)</p>\n\n<p>But the <code>PhantomData</code> member <em>shouldn't</em> be <code>PhantomData&lt;P&gt;</code>, because <code>Foo&lt;_, P&gt;</code> doesn't contain a <code>P</code>. It contains a <em>function that takes a <code>P</code> as an argument</em>. Instead, you should use <code>PhantomData&lt;fn(P)&gt;</code>, which signals to the compiler that the variance of <code>Foo&lt;F, P&gt;</code> in <code>P</code> is the same as the variance of <code>fn(P)</code> -- a function (pointer) taking <code>P</code>. In other words, <code>Foo</code> is contravariant in <code>P</code>. To the human reader, this might seem redundant -- after all, we already have an <code>F</code> member, and <code>F</code> must be contravariant in <code>P</code>. But, well, the compiler isn't really smart enough to draw that conclusion, so you have to spell it out.</p>\n\n<p>(See <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html\" rel=\"nofollow noreferrer\">the section of the Nomicon on subtyping</a> for a more rigorous explanation of variance.)</p>\n\n<p>Which brings me to your final objection:</p>\n\n<blockquote>\n  <p>and more importantly, users cannot use the struct constructor syntax easily anymore.</p>\n</blockquote>\n\n<p>Unfortunately, I can't think of a solution to this besides \"write a nice constructor function\". Perhaps a smarter compiler will one day lift this burden, but for now, <code>PhantomData</code> is what we have.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1528069235, "last_edit_date": 1528069235, "creation_date": 1528068918, "answer_id": 50671920, "question_id": 50671177, "link": "https://stackoverflow.com/questions/50671177/specify-fn-trait-bound-on-struct-definition-without-fixing-one-of-the-fn-par/50671920#50671920", "title": "Specify `Fn` trait bound on struct definition without fixing one of the `Fn` parameters", "body": "<p>Rather than put constraints on the struct, the simplest and best approach is to put the constraints on the implementation of all methods that will need to use the function:</p>\n\n<pre><code>struct Foo&lt;F, T&gt; {\n    data: T,\n    f: F,\n}\n\nimpl&lt;F, T&gt; Foo&lt;F, T&gt; {\n    fn call_f&lt;P&gt;(&amp;self, arg: P)\n    where\n        T: Copy,\n        F: Fn(T, P)\n    {\n        (self.f)(self.data, arg);\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>First, once the \"implied trait bounds\" RFC is implemented, this allows me to omit the duplicate trait bounds from all the impl blocks.</p>\n</blockquote>\n\n<p>So it sounds like your main concern is about removing duplicate bounds. If that's the problem, you can try to group all the methods with the same bounds into a common <code>impl</code>, so you're still only ever write them once:</p>\n\n<pre><code>impl&lt;F, T, P&gt; Foo&lt;F, T&gt; \nwhere\n    T: Copy,\n    F: Fn(T, P),\n{\n    fn call_f(&amp;self, arg: P) {\n        (self.f)(self.data, arg);\n    }\n}\n</code></pre>\n\n<p>There's a little problem here, similar to the one you found yourself: <code>unconstrained type parameter: P</code>. However, now that we've got to here, you can solve it very simply by introducing a trait (you can name it better for your specific use case):</p>\n\n<pre><code>trait FIsAFunction&lt;F, T, P&gt; {\n    fn call_f(&amp;self, arg: P);\n}\n\nimpl&lt;F, T, P&gt; FIsAFunction&lt;F, T, P&gt; for Foo&lt;F, T&gt; \nwhere\n    T: Copy,\n    F: Fn(T, P),\n{\n    fn call_f(&amp;self, arg: P){\n        (self.f)(self.data, arg);\n    }\n}\n</code></pre>\n\n<p>And users don't have to do anything weird<sup>[1]</sup>:</p>\n\n<pre><code>fn main() {\n    fn callback(x: u32, y: &amp;str) {\n        println!(\"I was given {:?} and {:?}\", x, y)\n    }\n    let foo = Foo { data: 1u32, f: callback };\n    foo.call_f(\"hello!\");\n}\n</code></pre>\n\n<hr>\n\n<p><sub>[1] They may have to <code>use</code> the trait. Which isn't <em>so</em> weird: you already have to do that with a lot of <code>std</code> stuff, like <code>std::io::Read</code> etc.</sub></p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 400, "favorite_count": 0, "accepted_answer_id": 50671690, "answer_count": 2, "score": 10, "last_activity_date": 1551797544, "creation_date": 1528061613, "last_edit_date": 1545155153, "question_id": 50671177, "link": "https://stackoverflow.com/questions/50671177/specify-fn-trait-bound-on-struct-definition-without-fixing-one-of-the-fn-par", "title": "Specify `Fn` trait bound on struct definition without fixing one of the `Fn` parameters", "body": "<p>I have a struct that contains a function object:</p>\n\n<pre><code>struct Foo&lt;F&gt; {\n    func: F,\n}\n</code></pre>\n\n<p>I want to add an <code>Fn</code> trait bound to the struct definition. The problem is: I do care about the first parameter (it has to be <code>i32</code>), but not the second one. What I actually want to write is something like this:</p>\n\n<pre><code>struct Foo&lt;F&gt; \nwhere\n    \u2203 P so that F: Fn(i32, P),\n{\n    func: F,\n}\n</code></pre>\n\n<p>So in English: the type <code>F</code> has to be a function that takes two parameters, the first of which is an <code>i32</code> (and the second one can be anything). The syntax above is obviously not valid. I thought about three potential solutions:</p>\n\n<ol>\n<li><p>The <code>for&lt;&gt;</code> syntax won't help here. Apart from the fact that it doesn't work for non-lifetime parameter yet, it is universal (\"for all\") and not existential (\"there exists\"). So that's out.</p></li>\n<li><p>The other possibility is to add a type parameter to the struct. I already don't like that solution, because the parameter doesn't inherently belong to the struct.</p>\n\n<pre><code>struct Foo&lt;F, P&gt; \nwhere\n    F: Fn(i32, P),\n{\n    func: F,\n}\n</code></pre>\n\n<p>But this doesn't work: the parameter <code>P</code> is not used, except in the <code>where</code> bound, so the compiler complains. </p>\n\n<p>This problem can be solved by adding a <code>PhantomData&lt;P&gt;</code> field, but this shouldn't be necessary and more importantly, users cannot use the struct constructor syntax easily anymore.</p></li>\n<li><p>Lastly I tried this:</p>\n\n<pre><code>struct Foo&lt;F&gt; \nwhere\n    F: Fn(i32, _),\n{\n    func: F,\n}\n</code></pre>\n\n<p>But this also doesn't work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0121]: the type placeholder `_` is not allowed within types on item signatures\n --&gt; src/main.rs:3:20\n  |\n3 |         F: Fn(i32, _),\n  |                    ^ not allowed in type signatures\n</code></pre></li>\n</ol>\n\n<p><strong>Is there a way to achieve what I want?</strong></p>\n\n<hr>\n\n<p><em>Side note</em>: Why do I want to have the trait bound on the struct already instead of just the <code>impl</code> blocks where it's important?</p>\n\n<p>First, once the \"implied trait bounds\" RFC is implemented, this allows me to omit the duplicate trait bounds from all the <code>impl</code> blocks. Second, with this bound, it helps the compiler with its type inference. Consider this:</p>\n\n<pre><code>struct Foo&lt;F, T&gt; \nwhere\n    F: Fn(T, _),\n{\n    data: T,\n    F: F,\n}\n</code></pre>\n\n<p>If the bound were possible (I tried it with the <code>PhantomData</code> \"solution\" above), the compiler can more easily infer the type of the closure's first argument. If the trait bounds would only be specified on impl blocks, the compiler has difficulties. </p>\n"}, {"tags": ["file", "docker", "rust"], "comments": [{"owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1528060953, "post_id": 50670951, "comment_id": 88351893, "body": "@shepmaster Thanks for the comments. I edited and added the details"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1528062945, "post_id": 50670951, "comment_id": 88352371, "body": "When I attempt to run this, I get <code>COPY failed: stat &#47;mnt&#47;sda1&#47;var&#47;lib&#47;docker&#47;aufs&#47;mnt&#47;79...5&#47;home&#47;rust&#47;src&#47;confi&zwnj;&#8203;g: no such file or directory</code>. Following your exact steps doesn&#39;t create anything named <code>config</code>, so that seems like your problem."}, {"owner": {"reputation": 191222, "user_id": 147356, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/b9506717d24256a090524dd5505d3207?s=128&d=identicon&r=PG", "display_name": "larsks", "link": "https://stackoverflow.com/users/147356/larsks"}, "edited": false, "score": 1, "creation_date": 1528063025, "post_id": 50670951, "comment_id": 88352396, "body": "Also: you seem to be using relative paths in your code. Are you certain those relative paths are going to be correct in your container? You don&#39;t have any <code>WORKDIR</code> directives, so you working directory is <code>&#47;</code>."}, {"owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "reply_to_user": {"reputation": 191222, "user_id": 147356, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/b9506717d24256a090524dd5505d3207?s=128&d=identicon&r=PG", "display_name": "larsks", "link": "https://stackoverflow.com/users/147356/larsks"}, "edited": false, "score": 0, "creation_date": 1528063711, "post_id": 50670951, "comment_id": 88352538, "body": "@larsks Thanks a ton. The issues was with the working directory not being set. Adding a <code>WORKDIR</code> solved it"}, {"owner": {"reputation": 15126, "user_id": 1953800, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4173076e5187c82e74379de9aeb00aa4?s=128&d=identicon&r=PG", "display_name": "Alex", "link": "https://stackoverflow.com/users/1953800/alex"}, "edited": false, "score": 0, "creation_date": 1528085683, "post_id": 50670951, "comment_id": 88356313, "body": "@AdityaSingh please post an answer or close question!"}], "answers": [{"tags": [], "owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "is_accepted": false, "score": 0, "last_activity_date": 1528117292, "last_edit_date": 1528117292, "creation_date": 1528099650, "answer_id": 50675994, "question_id": 50670951, "link": "https://stackoverflow.com/questions/50670951/unable-to-read-file-inside-docker-image-using-stdfs-methods/50675994#50675994", "title": "Unable to read file inside Docker image using std::fs methods", "body": "<p>I found the solution to this problem based on <a href=\"https://stackoverflow.com/questions/50670951/unable-to-read-file-inside-docker-image-using-stdfs-methods#comment88352396_50670951\"><em>larsks</em> comment above</a>:</p>\n\n<blockquote>\n  <p>Also: you seem to be using relative paths in your code. Are you certain those relative paths are going to be correct in your container? You don't have any <code>WORKDIR</code> directives, so you working directory is <code>/</code>.</p>\n</blockquote>\n\n<p>The problem was that there was no <code>WORKDIR</code> defined and so the file read was happening from path <code>/</code>. Changing the Dockerfile like below (notice the <code>WORKDIR /usr/local/bin</code>) solved the issue:</p>\n\n<pre><code>FROM alpine:latest\n\nRUN apk --no-cache add ca-certificates\n\nEXPOSE 3001\n\nWORKDIR /usr/local/bin\n\nCOPY --from=builder \\\n    /home/rust/src/config/ \\\n    /usr/local/bin/config/\n\nCOPY --from=builder \\\n    /home/rust/src/target/x86_64-unknown-linux-musl/release/app \\\n    /usr/local/bin/\n\nRUN chmod a+x /usr/local/bin/app\n\nENV RUST_BACKTRACE=1\n\nCMD /usr/local/bin/app\n</code></pre>\n"}], "owner": {"reputation": 13358, "user_id": 3878940, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/v1J2L.jpg?s=128&g=1", "display_name": "Aditya Singh", "link": "https://stackoverflow.com/users/3878940/aditya-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 305, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1528117292, "creation_date": 1528059780, "last_edit_date": 1592644375, "question_id": 50670951, "link": "https://stackoverflow.com/questions/50670951/unable-to-read-file-inside-docker-image-using-stdfs-methods", "title": "Unable to read file inside Docker image using std::fs methods", "body": "<p>I have a simple Rust application which reads JSON files like below:</p>\n<pre><code>fn main() {\n    let config_dir = std::path::PathBuf::from(&quot;config/endpoints.json&quot;);\n    println!(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Canonicalized path {:?}&quot;, std::fs::canonicalize(&amp;config_dir));\n\n    println!(&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;read endpoint file&quot;);\n    println!(&quot;Does file exist? {}&quot;, std::path::Path::new(&quot;config/endpoints.json&quot;).exists());\n}\n</code></pre>\n<p>The application, when run with <code>cargo run</code> returns the correct file path, but when I add the files inside a Docker image similar to <a href=\"https://github.com/emk/rust-musl-builder/blob/master/examples/using-diesel/Dockerfile\" rel=\"nofollow noreferrer\">the rust-musl-builder</a>, I get errors:</p>\n<blockquote>\n<p>Canonicalized pathErr(Os { code: 2, kind: NotFound, message: &quot;No such file or directory&quot; })</p>\n<p>Does path exist false</p>\n</blockquote>\n<p>My <code>Dockerfile</code> looks like this</p>\n<pre><code>FROM ekidd/rust-musl-builder AS builder\n\n# Add our source code.\nADD . ./\n\nRUN sudo chown -R rust:rust /home/rust\n\nRUN cargo build --release\n\nFROM alpine:latest\n\nRUN apk --no-cache add ca-certificates\n\nEXPOSE 3001\n\nCOPY --from=builder \\\n    /home/rust/src/config/ \\\n    /usr/local/bin/config/\n\nCOPY --from=builder \\\n    /home/rust/src/target/x86_64-unknown-linux-musl/release/app \\\n    /usr/local/bin/\n\nRUN chmod a+x /usr/local/bin/app\n\nENV RUST_BACKTRACE=1\n\nCMD /usr/local/bin/app \n</code></pre>\n<p>How can I read a file inside a Docker image?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1528054861, "post_id": 50670249, "comment_id": 88350364, "body": "@Tim I&#39;m not sure that&#39;s the exact same issue, but has the same keywords (&quot;target&quot; and &quot;feature&quot;)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1528054363, "creation_date": 1528054363, "answer_id": 50670249, "question_id": 50669828, "link": "https://stackoverflow.com/questions/50669828/how-can-i-optionally-pass-rustc-flags-depending-on-a-cargo-feature/50670249#50670249", "title": "How can I optionally pass rustc flags depending on a Cargo feature?", "body": "<p>I don't think this is supported (yet?). I enhanced Cargo to print out what config flags are checked against when resolving:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[\n    Name(\"debug_assertions\"),\n    Name(\"proc_macro\"),\n    KeyPair(\"target_arch\", \"x86_64\"),\n    KeyPair(\"target_endian\", \"little\"),\n    KeyPair(\"target_env\", \"\"),\n    KeyPair(\"target_family\", \"unix\"),\n    KeyPair(\"target_os\", \"macos\"),\n    KeyPair(\"target_pointer_width\", \"64\"),\n    Name(\"unix\"),\n]\n</code></pre>\n\n<blockquote>\n  <p><code>[target.'cfg(cpu_native)']</code></p>\n</blockquote>\n\n<p>This is the incorrect syntax for a Cargo feature; it would normally be <code>cfg(feature = \"cpu_native\")</code>.</p>\n"}], "owner": {"reputation": 194, "user_id": 7732825, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/42efe0f0ead85ed3e4ac7685e982be7b?s=128&d=identicon&r=PG&f=1", "display_name": "Morten Lohne", "link": "https://stackoverflow.com/users/7732825/morten-lohne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 985, "favorite_count": 1, "accepted_answer_id": 50670249, "answer_count": 1, "score": 2, "last_activity_date": 1528054363, "creation_date": 1528051715, "last_edit_date": 1528053659, "question_id": 50669828, "link": "https://stackoverflow.com/questions/50669828/how-can-i-optionally-pass-rustc-flags-depending-on-a-cargo-feature", "title": "How can I optionally pass rustc flags depending on a Cargo feature?", "body": "<p>The program I'm writing runs much faster when the <code>-C target-cpu=native</code>  flag is passed to <code>rustc</code>. I want to give users a simple, platform-independent way to enable this when compiling, so I added a Cargo feature <code>cpu_native = []</code> in Cargo.toml and created this Cargo config in my project: </p>\n\n<pre><code>[target.'cfg(cpu_native)']\nrustflags = [\"-C\", \"target-cpu=native\"]\n</code></pre>\n\n<p>However, this has no effect on my program, and passing <code>--features cpu_native</code> to Cargo does not even trigger a recompile. Changing to the following Cargo config <em>does</em> force re-compilation with faster instructions:</p>\n\n<pre><code>[build]\nrustflags = [\"-C\", \"target-cpu=native\"]\n</code></pre>\n\n<p>However, this will compile with <code>target-cpu=native</code> with the default Cargo features, which was not what I wanted. From the Cargo book, what I want seems to be possible, but I don't see what I'm doing wrong.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1528046440, "post_id": 50669013, "comment_id": 88347827, "body": "<code>let array_of_vec: [Vec&lt;i32&gt;; 10] = Default::default();</code>"}], "owner": {"reputation": 2967, "user_id": 279973, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c96a203d99d04b22c2c70e136ec0588b?s=128&d=identicon&r=PG", "display_name": "kunigami", "link": "https://stackoverflow.com/users/279973/kunigami"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1528047196, "answer_count": 0, "score": 2, "last_activity_date": 1528046987, "creation_date": 1528046191, "last_edit_date": 1528046987, "question_id": 50669013, "link": "https://stackoverflow.com/questions/50669013/how-to-initialize-an-array-of-vec", "closed_reason": "Duplicate", "title": "How to initialize an array of Vec?", "body": "<p>I want to initialize a (fixed length) array of (variable length) vectors, like:</p>\n\n<pre><code>let array_of_vec: [Vec&lt;i32&gt;; 10] = [Vec::new(); 10];\n</code></pre>\n\n<p>But I'm getting: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::vec::Vec&lt;i32&gt;: std::marker::Copy` is not satisfied\n  |\n2 |     let array_of_vec: [Vec&lt;i32&gt;; 10] = [Vec::new(); 10];\n  |                                        ^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `std::vec::Vec&lt;i32&gt;`\n  |\n  = note: the `Copy` trait is required because the repeated element will be copied\n</code></pre>\n\n<p>Is there any workaround for this restriction like initializing the array with an invalid value and then filling it using a loop?</p>\n"}, {"tags": ["vector", "rust", "move-semantics", "borrowing"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1528026521, "post_id": 50665372, "comment_id": 88341979, "body": "Rather than <code>String</code>, you might be better of using <code>&amp;[u8]</code>, since you don&#39;t need unicode for this."}, {"owner": {"reputation": 432, "user_id": 3381781, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/b43561da313b4da4bde48ceb6d26b75f?s=128&d=identicon&r=PG&f=1", "display_name": "Masked Man", "link": "https://stackoverflow.com/users/3381781/masked-man"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1528029717, "post_id": 50665372, "comment_id": 88342967, "body": "@PeterHall Thanks for the advice."}], "answers": [{"comments": [{"owner": {"reputation": 432, "user_id": 3381781, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/b43561da313b4da4bde48ceb6d26b75f?s=128&d=identicon&r=PG&f=1", "display_name": "Masked Man", "link": "https://stackoverflow.com/users/3381781/masked-man"}, "edited": false, "score": 0, "creation_date": 1528029629, "post_id": 50665926, "comment_id": 88342929, "body": "I haven&#39;t thought of that!! Thank you very much. I think I will use String instead."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1528025573, "creation_date": 1528025573, "answer_id": 50665926, "question_id": 50665372, "link": "https://stackoverflow.com/questions/50665372/cant-use-vec-two-times-and-i-cant-borrow-it-instead/50665926#50665926", "title": "Can&#39;t use Vec two times and I can&#39;t borrow it instead", "body": "<p>You've declared a type to be <code>Vec&lt;Vec&lt;String&gt;&gt;</code>, but you're trying to store a reference inside it.</p>\n\n<p>When you remove the reference, you're getting a different error because <code>push</code> takes ownership of the value, so the original variable can no longer be used. But you then try to use it in the subsequent loop. The easy fix is to declare the variable <em>inside</em> the loop, so it is a new variable each time:</p>\n\n<pre><code>let mut password_list = Vec::new();\nfor num in 1..number {\n    let mut password = Vec::new();\n    for l in 1..length {\n        password.push(String::from(thread_rng().choose(&amp;all).unwrap().to_string()));\n    }\n    password_list.push(password);\n}\n</code></pre>\n\n<p>Note that you don't need a lot of the type annotations, especially on local function variables. The compiler can infer them, which makes the code a lot cleaner.</p>\n"}], "owner": {"reputation": 432, "user_id": 3381781, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/b43561da313b4da4bde48ceb6d26b75f?s=128&d=identicon&r=PG&f=1", "display_name": "Masked Man", "link": "https://stackoverflow.com/users/3381781/masked-man"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 50665926, "answer_count": 1, "score": 2, "last_activity_date": 1547054421, "creation_date": 1528021669, "last_edit_date": 1547054421, "question_id": 50665372, "link": "https://stackoverflow.com/questions/50665372/cant-use-vec-two-times-and-i-cant-borrow-it-instead", "title": "Can&#39;t use Vec two times and I can&#39;t borrow it instead", "body": "<p>I attempted to implement the Rosetta Code password generator:</p>\n\n<pre><code>extern crate rand;\n\nuse rand::prelude::*;\n\nfn main() {\n    println!(\"Hello, world!\");\n    let p = generate_password(12, 5);\n    for i in p.iter() {\n        println!(\"{:?}\", i);\n    }\n}\n\nfn generate_password(length: i32, number: i32) -&gt; Vec&lt;Vec&lt;String&gt;&gt; {\n    let lowercase = \"abcdefghijklmnopqrstuvwxyz\";\n    let uppercase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let listnumber = \"0123456789\";\n    let other = \"!\\\\\\\"#$%&amp;'()*+,-./:;&lt;=&gt;?@[]^_{|}~\";\n    let all: Vec&lt;char&gt; = String::from(format!(\"{}{}{}{}\", lowercase, uppercase, listnumber, other))\n        .chars()\n        .collect();\n    let mut password: Vec&lt;String&gt; = Vec::new();\n    let mut password_list: Vec&lt;Vec&lt;String&gt;&gt; = Vec::new();\n    for num in 1..number {\n        for l in 1..length {\n            password.push(String::from(thread_rng().choose(&amp;all).unwrap().to_string()));\n        }\n        password_list.push(&amp;password);\n    }\n    return password_list;\n}\n</code></pre>\n\n<p>Rust won't allow me to use either borrowed value or direct value:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:26:28\n   |\n26 |         password_list.push(&amp;password);\n   |                            ^^^^^^^^^\n   |                            |\n   |                            expected struct `std::vec::Vec`, found reference\n   |                            help: consider removing the borrow: `password`\n   |\n   = note: expected type `std::vec::Vec&lt;std::string::String&gt;`\n              found type `&amp;std::vec::Vec&lt;std::string::String&gt;`\n</code></pre>\n\n<p>The help message says I should remove the borrow because of type mismatch but it's still got an error after removing it because the value has been moved.</p>\n"}, {"tags": ["string", "rust", "contains"], "comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1528014538, "post_id": 50664501, "comment_id": 88339171, "body": "<a href=\"https://play.rust-lang.org/?gist=7a96f7f0703386550d3724c896b26f3f&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Here</a> is a minimal recreation of your issue. And in case you weren&#39;t aware, a reference to a string (<code>&amp;foo</code>) can be used anywhere an <code>&amp;str</code> can, so the solution is a trivial <code>s_i.contains(&amp;s_i_minus_1)</code>. I&#39;m almost certain this is a duplicate of something, although <code>string contains [rust]</code> search doesn&#39;t come up with anything immediately applicable."}, {"owner": {"reputation": 41, "user_id": 8064494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cd9f057e367fd620a7b8edb0e9aa998?s=128&d=identicon&r=PG&f=1", "display_name": "vamsikal", "link": "https://stackoverflow.com/users/8064494/vamsikal"}, "edited": false, "score": 0, "creation_date": 1528014660, "post_id": 50664501, "comment_id": 88339208, "body": "The example given above is complete and can actually be copied/compiler and run. I do not know what I can remove from the example without making it less than complete."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1528014801, "post_id": 50664501, "comment_id": 88339233, "body": "@vamsikal Please take a look at <a href=\"https://play.rust-lang.org/?gist=7a96f7f0703386550d3724c896b26f3f&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">the code BHustus just posted</a>. This is what we would consider a MCVE: it produces the error you are talking about. &quot;Complete&quot; just means that your example contains all the necessary information for the error you are asking about. You can just take BHustus&#39; code and copy it into your question. With a MCVE you&#39;ll get those nice upvotes ;-)"}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 1, "creation_date": 1528014833, "post_id": 50664501, "comment_id": 88339239, "body": "&quot;Complete&quot; does not mean your complete project, it means that the code you provide has to be functional (complete) enough to reach the error, without extraneous details that need to be sifted through. That&#39;s why &quot;minimal&quot; is the first part of MCVE; your example should be large enough to express the error you&#39;re having issue with, <i>and no larger.</i>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1528015902, "post_id": 50664501, "comment_id": 88339478, "body": "@vamsikal Thanks for editing your question :)"}], "answers": [{"comments": [{"owner": {"reputation": 41, "user_id": 8064494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cd9f057e367fd620a7b8edb0e9aa998?s=128&d=identicon&r=PG&f=1", "display_name": "vamsikal", "link": "https://stackoverflow.com/users/8064494/vamsikal"}, "edited": false, "score": 0, "creation_date": 1528018067, "post_id": 50664778, "comment_id": 88339880, "body": "Thanks for the answer! I went and saw the documentation too, but I could not understand that &amp;&#39;b String, meant a string reference as opposed to just a string. Thanks for clarifying that!"}, {"owner": {"reputation": 41, "user_id": 8064494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cd9f057e367fd620a7b8edb0e9aa998?s=128&d=identicon&r=PG&f=1", "display_name": "vamsikal", "link": "https://stackoverflow.com/users/8064494/vamsikal"}, "edited": false, "score": 1, "creation_date": 1528021485, "post_id": 50664778, "comment_id": 88340649, "body": "Done! Added the green check mark."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 2, "last_activity_date": 1528016355, "creation_date": 1528016355, "answer_id": 50664778, "question_id": 50664501, "link": "https://stackoverflow.com/questions/50664501/stringcontainsstring-gives-the-trait-bound-string-fnmutchar-is-not-s/50664778#50664778", "title": "String::contains(String) gives &quot;the trait bound String: FnMut&lt;(char,)&gt;` is not satisfied&quot;", "body": "<p>Let's check the method signature of <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.contains\" rel=\"nofollow noreferrer\"><code>str::contains</code></a>:</p>\n\n<pre><code>pub fn contains&lt;'a, P&gt;(&amp;'a self, pat: P) -&gt; bool \nwhere\n    P: Pattern&lt;'a&gt;,\n</code></pre>\n\n<p>So the second argument has to be <strong>something that implements <code>Pattern</code></strong>, as you already noticed. We can find out who implements that trait by visiting <a href=\"https://doc.rust-lang.org/stable/std/str/pattern/trait.Pattern.html#implementors\" rel=\"nofollow noreferrer\">the documentation of <code>Pattern</code></a>. There we can find these impls:</p>\n\n<pre><code>impl&lt;'a, 'b&gt; Pattern&lt;'a&gt; for &amp;'b str\nimpl&lt;'a&gt; Pattern&lt;'a&gt; for char\nimpl&lt;'a, 'b&gt; Pattern&lt;'a&gt; for &amp;'b [char]\nimpl&lt;'a, F&gt; Pattern&lt;'a&gt; for F \nwhere\n    F: FnMut(char) -&gt; bool, \nimpl&lt;'a, 'b, 'c&gt; Pattern&lt;'a&gt; for &amp;'c &amp;'b str\nimpl&lt;'a, 'b&gt; Pattern&lt;'a&gt; for &amp;'b String\n</code></pre>\n\n<p>As you can see, <strong>the trait isn't directly implemented for <code>String</code></strong>. But it is <strong>implemented for <code>&amp;String</code></strong> and <code>&amp;str</code>. And this makes sense: the pattern only needs to be read, so ownership of the <code>String</code> is not needed. </p>\n\n<p>In your example, you wouldn't be able to use <code>b</code> afterwards since it would have been moved into the method:</p>\n\n<pre><code>let a: String = String::from(\"abcdefgh\");\nlet b: String = String::from(\"def\");\n\na.contains(b);\n\n// If this would work, `b` couldn't be used anymore because it has been moved :(\n</code></pre>\n\n<p>So <strong>instead of passing <code>String</code> (<code>b</code>), just pass <code>&amp;String</code> (<code>&amp;b</code>)</strong>:</p>\n\n<pre><code>if a.contains(&amp;b) { ... }\n//            ^\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 8064494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7cd9f057e367fd620a7b8edb0e9aa998?s=128&d=identicon&r=PG&f=1", "display_name": "vamsikal", "link": "https://stackoverflow.com/users/8064494/vamsikal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 727, "favorite_count": 0, "closed_date": 1528035351, "accepted_answer_id": 50664778, "answer_count": 1, "score": 2, "last_activity_date": 1528035315, "creation_date": 1528013848, "last_edit_date": 1528035315, "question_id": 50664501, "link": "https://stackoverflow.com/questions/50664501/stringcontainsstring-gives-the-trait-bound-string-fnmutchar-is-not-s", "closed_reason": "Duplicate", "title": "String::contains(String) gives &quot;the trait bound String: FnMut&lt;(char,)&gt;` is not satisfied&quot;", "body": "<p>The following code tries to check whether a <code>String</code> contains another <code>String</code>. I get a compiler error when I use the <code>String::contains</code> method. I expect <code>String::contains(String)</code> would work straight out of the box. </p>\n\n<p>What is the correct way to do this in Rust, when the pattern being searched for is not a string literal? I did <code>rustc --explain E0277</code>, and it seems like <code>String</code> does not implement the <code>Pattern</code> trait, is that true?</p>\n\n<pre><code>fn main() {\n    let a = String::from(\"abcdefgh\");\n    let b = String::from(\"def\");\n\n    if a.contains(b) {\n        println!(\"Contained\");\n    } else {\n        println!(\"Not contained\");\n    }\n}\n</code></pre>\n\n<p>The compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::string::String: std::ops::FnMut&lt;(char,)&gt;` is not satisfied\n --&gt; src/main.rs:6:10\n  |\n6 |     if a.contains(b) {\n  |          ^^^^^^^^ the trait `std::ops::FnMut&lt;(char,)&gt;` is not implemented for `std::string::String`\n  |\n  = note: required because of the requirements on the impl of `std::str::pattern::Pattern&lt;'_&gt;` for `std::string::String`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 1, "creation_date": 1528021227, "post_id": 50663574, "comment_id": 88340597, "body": "<a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>std::ops::Deref</code></a> and its mutable equivalent <a href=\"https://doc.rust-lang.org/std/ops/trait.DerefMut.html\" rel=\"nofollow noreferrer\"><code>std::ops::DerefMut</code></a>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1528041749, "post_id": 50663574, "comment_id": 88346429, "body": "You should be more careful when approving edits. The Edit from iPhoton introduced more errors than it fixed."}, {"owner": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "edited": false, "score": 0, "creation_date": 1528130773, "post_id": 50663574, "comment_id": 88380164, "body": "I thought my English was just bad ^_^ I&#39;m not a native english speaker"}, {"owner": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "edited": false, "score": 0, "creation_date": 1580133991, "post_id": 50663574, "comment_id": 105987415, "body": "Somehow related article: <a href=\"https://yoric.github.io/post/uom.rs/\" rel=\"nofollow noreferrer\">yoric.github.io/post/uom.rs</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "edited": false, "score": 0, "creation_date": 1528039907, "post_id": 50666820, "comment_id": 88345858, "body": "Unfortunately it doesn&#39;t work as good as I thought. I made a struct AxisX and AxisY but the result of any method is i32 so I&#39;m allowed to do stuff I shouldn&#39;t: <a href=\"https://play.rust-lang.org/?gist=d7975e0d6cc29274280eedb340ba122d&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "edited": false, "score": 1, "creation_date": 1528040773, "post_id": 50666820, "comment_id": 88346146, "body": "@Cecile Well, you have to decide if you want to use all methods of <code>i32</code>, or if you want the types to be completely distinct. Of course it is still possible to implement the methods like <code>abs()</code> itself. I have expanded my answer to that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "edited": false, "score": 2, "creation_date": 1528042665, "post_id": 50666820, "comment_id": 88346712, "body": "@Cecile <a href=\"https://stackoverflow.com/q/45086595/155423\">Is it considered a bad practice to implement Deref for newtypes?</a>."}, {"owner": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "edited": false, "score": 0, "creation_date": 1528130899, "post_id": 50666820, "comment_id": 88380233, "body": "In the end I just don&#39;t use it at all because it doesn&#39;t ensure the types without making wrapper functions of everything. The cost of the implementation (without deref) is too high for the use I have."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 2, "last_activity_date": 1528040744, "last_edit_date": 1528040744, "creation_date": 1528031776, "answer_id": 50666820, "question_id": 50663574, "link": "https://stackoverflow.com/questions/50663574/is-it-possible-to-make-my-own-box-like-wrapper/50666820#50666820", "title": "Is it possible to make my own Box-like wrapper?", "body": "<p>You are looking for <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>std::ops::Deref</code></a>:</p>\n\n<blockquote>\n  <p>In addition to being used for explicit dereferencing operations with the (unary) <code>*</code> operator in immutable contexts, <code>Deref</code> is also used implicitly by the compiler in many circumstances. This mechanism is called '<a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html#more-on-deref-coercion\" rel=\"nofollow noreferrer\"><code>Deref</code> coercion</a>'. In mutable contexts, <a href=\"https://doc.rust-lang.org/std/ops/trait.DerefMut.html\" rel=\"nofollow noreferrer\"><code>DerefMut</code></a> is used.</p>\n</blockquote>\n\n<p>Further:</p>\n\n<blockquote>\n  <p>If <code>T</code> implements <code>Deref&lt;Target = U&gt;</code>, and <code>x</code> is a value of type <code>T</code>, then:</p>\n  \n  <ul>\n  <li>In immutable contexts, <code>*x</code> on non-pointer types is equivalent to <code>*Deref::deref(&amp;x)</code>.</li>\n  <li>Values of type <code>&amp;T</code> are coerced to values of type <code>&amp;U</code></li>\n  <li><code>T</code> implicitly implements all the (immutable) methods of the type <code>U</code>.</li>\n  </ul>\n  \n  <p>For more details, visit <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-02-deref.html\" rel=\"nofollow noreferrer\">the chapter in <em>The Rust Programming Language</em></a> as well as the reference sections on <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#the-dereference-operator\" rel=\"nofollow noreferrer\">the dereference operator</a>, <a href=\"https://doc.rust-lang.org/reference/expressions/method-call-expr.html\" rel=\"nofollow noreferrer\">method resolution</a> and <a href=\"https://doc.rust-lang.org/reference/type-coercions.html\" rel=\"nofollow noreferrer\">type coercions</a>.</p>\n</blockquote>\n\n<p>By implementing <code>Deref</code> it will work: </p>\n\n<pre><code>impl Deref for AxisX {\n    type Target = i32;\n\n    fn deref(&amp;self) -&gt; &amp;i32 {\n        &amp;self.0\n    }\n}\n\nx.abs() + 3\n</code></pre>\n\n<p>You can see this in action on the <a href=\"https://play.rust-lang.org/?gist=f4e9f584627487f1e3c008f315cbf131&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n\n<p>However, if you call functions from your underlying type (<code>i32</code> in this case), the return type will remain the underlying type. Therefore </p>\n\n<pre><code>assert_eq!(AxisX(10).abs() + AxisY(20).abs(), 30);\n</code></pre>\n\n<p>will pass. To solve this, you may overwrite some of those methods you need:</p>\n\n<pre><code>impl AxisX {\n    pub fn abs(&amp;self) -&gt; Self {\n        // *self gets you `AxisX`\n        // **self dereferences to i32\n        AxisX((**self).abs())\n    }\n}\n</code></pre>\n\n<p>With this, the above code fails. <a href=\"https://play.rust-lang.org/?gist=d3615b66e59e6044065dd6814f863efb&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Take a look at it in action</a>.</p>\n"}], "owner": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 50666820, "answer_count": 1, "score": 1, "last_activity_date": 1528041497, "creation_date": 1528003995, "last_edit_date": 1528041497, "question_id": 50663574, "link": "https://stackoverflow.com/questions/50663574/is-it-possible-to-make-my-own-box-like-wrapper", "title": "Is it possible to make my own Box-like wrapper?", "body": "<p>I noticed that <code>Box&lt;T&gt;</code> implements everything that <code>T</code> implements and can be used transparently. For Example:</p>\n\n<pre><code>let mut x: Box&lt;Vec&lt;u8&gt;&gt; = Box::new(Vec::new());\nx.push(5);\n</code></pre>\n\n<p>I would like to be able to do the same.</p>\n\n<p><strong>This is one use case:</strong></p>\n\n<p>Imagine I'm writing functions that operate using an axis X and an axis Y. I'm using values to change those axis that are of type numbers but belongs only to one or the other axis.</p>\n\n<p>I would like my compiler to fail if I attempt to do operations with values that doesn't belong to the good axis.</p>\n\n<p>Example:</p>\n\n<pre><code>let x = AxisX(5);\nlet y = AxisY(3);\nlet result = x + y; // error: incompatible types\n</code></pre>\n\n<p>I can do this by making a struct that will wrap the numbers:</p>\n\n<pre><code>struct AxisX(i32);\nstruct AxisY(i32);\n</code></pre>\n\n<p>But that won't give me access to all the methods that <code>i32</code> provides like <code>abs()</code>. Example:</p>\n\n<pre><code>x.abs() + 3 // error: abs() does not exist\n// ...maybe another error because I don't implement the addition...\n</code></pre>\n\n<p><strong>Another possible use case:</strong></p>\n\n<p>You can appropriate yourself a struct of another library and implement or derive anything more you would want. For example: a struct that doesn't derive <code>Debug</code> could be wrapped and add the implementation for Debug.</p>\n"}, {"tags": ["iterator", "rust", "closures", "numeric", "string-parsing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527992693, "post_id": 50662744, "comment_id": 88335708, "body": "<code>let rank = response.chars().flat_map(|x| x.to_digit(10)).next().unwrap();</code> or <code>let rank = response.chars().nth(1).unwrap() as u32 - &#39;0&#39; as u32;</code> or <code>let rank: u32 = response[1..][..1].parse().unwrap();</code>, etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527993308, "post_id": 50662744, "comment_id": 88335783, "body": "I&#39;d encourage you to re-read <a href=\"https://doc.rust-lang.org/book/second-edition/ch03-02-data-types.html\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a> to refresh yourself on basic data types. In Rust, a single character and a string are related but distinct data types."}], "owner": {"reputation": 39, "user_id": 3925890, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ffb8c27accffa513408ba8749248cea2?s=128&d=identicon&r=PG&f=1", "display_name": "zedzorander", "link": "https://stackoverflow.com/users/3925890/zedzorander"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 714, "favorite_count": 0, "closed_date": 1527992201, "answer_count": 0, "score": 0, "last_activity_date": 1527992272, "creation_date": 1527992102, "question_id": 50662744, "link": "https://stackoverflow.com/questions/50662744/how-to-parse-int-value-from-string-in-rust", "closed_reason": "Duplicate", "title": "How to parse int value from string in Rust", "body": "<p>I'm trying to implement a network card game and I need to parse a string and get the rank value as a u32. The string looks like this </p>\n\n<pre><code>let response: String = \"(6, Hearts)\".to_string();\n</code></pre>\n\n<p>I've tried using:</p>\n\n<pre><code>let rank = response.chars().nth(1).unwrap() as u32;\n</code></pre>\n\n<p>with this I get a rank of 54 instead of 6 I think because it's returning a byte index instead of the actual value. I've also tried this:</p>\n\n<pre><code>let rank: u32;\nresponse.chars()\n        .find(|x| \n            if x.is_digit(10) {\n                rank = x.to_digit(10).unwrap();\n            }\n        );\nprintln!(\"rank {}\", rank);\n</code></pre>\n\n<p>For this one I'm getting a mismatch type error on the closure</p>\n\n<pre><code>   Compiling playground v0.0.1 (file:///playground)\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:12:35\n   |\n12 |                   if x.is_digit(10) {\n   |  ___________________________________^\n13 | |                     rank = x.to_digit(10).unwrap();\n14 | |                 }\n   | |_________________^ expected bool, found ()\n   |\n   = note: expected type `bool`\n              found type `()`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0308`.\nerror: Could not compile `playground`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>Here's a link to the code: <a href=\"https://play.rust-lang.org/?gist=120b0ee308c335c9bc79713d3875a3b4&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=120b0ee308c335c9bc79713d3875a3b4&amp;version=stable&amp;mode=debug</a></p>\n"}, {"tags": ["methods", "rust", "visibility", "naming"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527981761, "post_id": 50661775, "comment_id": 88334111, "body": "<a href=\"https://meta.stackexchange.com/q/39223/281829\">One question per post, please</a>."}], "answers": [{"comments": [{"owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "edited": false, "score": 0, "creation_date": 1527980495, "post_id": 50661865, "comment_id": 88333859, "body": "+1 for <i>usually a better way to improve the design of your program so that getters/setters become unnecessary</i>. 99% of the time, this is what a constructor does."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 3, "creation_date": 1527981032, "post_id": 50661865, "comment_id": 88333971, "body": "I think one important point that this answer is missing is that exposing the <code>len</code> field directly would make <code>Vec</code> unsafe (in the memory-safety sense) because there are invariants that need to be preserved in order to not expose uninitialised memory etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 2, "creation_date": 1527981413, "post_id": 50661865, "comment_id": 88334047, "body": "@fjh I&#39;d say that <i>is</i> the answer and you should add it separately"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527981706, "post_id": 50661865, "comment_id": 88334100, "body": "<i>adopt good guidelines and practices. (e.g. don&#39;t modify members directly.)</i> \u2014 accessor methods <b>are</b> those good practices! One of the points of a statically typed language, especially one like Rust, is to encode as much as you can into the type system so that you don&#39;t have to think about &quot;doing the right thing&quot; as much. If we could just mentally encode &quot;good guidelines and practices&quot; we wouldn&#39;t even <i>need</i> the borrow checker or types because we&#39;d just write the correct thing!"}, {"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527983488, "post_id": 50661865, "comment_id": 88334395, "body": "@Shepmaster I suppose that&#39;s my inner Python talking (which has no truly <code>private</code> fields). I&#39;ve removed the contentious bits, though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527984364, "post_id": 50661865, "comment_id": 88334526, "body": "@MateenUlhaq amusingly, I agree with you in certain cases. I usually don&#39;t find that I need to protect myself <i>from myself</i>, but as soon as there are multiple developers using a piece of code, those walls come in handy. Those multiple developers might just happen to be &quot;past me&quot; and &quot;present me&quot;, however."}], "tags": [], "owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "is_accepted": true, "score": 8, "last_activity_date": 1527986875, "last_edit_date": 1527986875, "creation_date": 1527980254, "answer_id": 50661865, "question_id": 50661775, "link": "https://stackoverflow.com/questions/50661775/why-is-veclen-a-method/50661865#50661865", "title": "Why is Vec::len a method?", "body": "<p>One reason is to provide the same interface for all containers that implement some idea of length. (Such as <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html#tymethod.len\" rel=\"noreferrer\"><code>std::iter::ExactSizeIterator</code></a>.)</p>\n\n<p>In the case of <code>Vec</code>, <code>len()</code> is acting like a getter:</p>\n\n<pre><code>impl&lt;T&gt; Vec&lt;T&gt; {\n    pub fn len(&amp;self) -&gt; usize {\n        self.len\n    }\n}\n</code></pre>\n\n<p>While this ensures consistency across the standard library, there is another reason underlying this design choice...</p>\n\n<p>This getter protects from external modification of <code>len</code>. If the condition <code>Vec::len &lt;= Vec::buf::cap</code> is not ever satisfied, <code>Vec</code>'s methods may try to access memory illegally. For instance, the implementation of <code>Vec::push</code>:</p>\n\n<pre><code>pub fn push(&amp;mut self, value: T) {\n    if self.len == self.buf.cap() {\n        self.buf.double();\n    }\n    unsafe {\n        let end = self.as_mut_ptr().offset(self.len as isize);\n        ptr::write(end, value);\n        self.len += 1;\n    }\n}\n</code></pre>\n\n<p>will attempt to write to memory past the actual end of the memory owned by the container. Because of this critical requirement, modification to <code>len</code> is forbidden.</p>\n\n<hr>\n\n<p><strong>Philosophy</strong></p>\n\n<p>It's definitely good to use a getter like this in library code (crazy people out there might try to modify it!).</p>\n\n<p>However, one should design their code in a manner that minimizes the requirement of getters/setters. A class should act on its own members as much as possible. These actions should be made available to the public through methods. And here I mean methods that <em>do useful things</em> -- not just a plain ol' getter/setter that returns/sets a variable. Setters in particular can be made redundant through the use of constructors or methods. <code>Vec</code> shows us some of these \"setters\":</p>\n\n<pre><code>push\ninsert\npop\nreserve\n...\n</code></pre>\n\n<p>Thus, <code>Vec</code> implements algorithms that provide access to the outside world. But it manages its innards by itself.</p>\n"}, {"comments": [{"owner": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "edited": false, "score": 0, "creation_date": 1552517580, "post_id": 50665777, "comment_id": 97045108, "body": "+1 for the comment that programmers from other languages may assume setting the len changes the vector&#39;s size."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1528035720, "last_edit_date": 1528035720, "creation_date": 1528024499, "answer_id": 50665777, "question_id": 50661775, "link": "https://stackoverflow.com/questions/50661775/why-is-veclen-a-method/50665777#50665777", "title": "Why is Vec::len a method?", "body": "<p>The  <code>Vec</code> struct looks <em>something like</em> this<sup>[1]</sup>:</p>\n\n<pre><code>pub struct Vec&lt;T&gt; {\n    ptr: *mut T,\n    capacity: usize,\n    len: usize,\n}\n</code></pre>\n\n<p>The idea is that <code>ptr</code> points at a block of allocated memory of size <code>capacity</code>. If the size of the <code>Vec</code> needs to be bigger than the <code>capacity</code> then new memory is allocated. The unused portion of the allocated memory is uninitialised and could contain arbitrary data.</p>\n\n<p>When you call mutating methods on <code>Vec</code> like <code>push</code> or <code>pop</code>, they carefully manage the <code>Vec</code>'s internal state, increase capacity when necessary, and ensure that items that are removed are properly dropped.</p>\n\n<p>If <code>len</code> was a public field, any code with an owned <code>Vec</code>, or a mutable reference to one, could set <code>len</code> to any value. Set it higher than it should be and you'll be able to read from uninitialised memory, causing <em>Undefined Behaviour</em>. Set it lower and you'll be effectively removing elements without properly dropping them.</p>\n\n<p>In some other programming languages (e.g. JavaScript) the API for arrays or vectors specifically lets you change the size by setting a <code>length</code> property. It's not unreasonable to think that a programmer who is used to that approach could do this accidentally in Rust.</p>\n\n<p>Keeping all the fields private and using a getter method for <code>len()</code> allows <code>Vec</code> to protect the mutability of its internals, make strong memory guarantees and prevent users from accidentally doing bad things to themselves.</p>\n\n<hr>\n\n<p><sub>[1] In practice, there are abstraction layers built over this data structure, so it <a href=\"https://doc.rust-lang.org/src/alloc/vec.rs.html#302-305\" rel=\"nofollow noreferrer\">looks a little different</a>.</sub></p>\n"}], "owner": {"reputation": 3152, "user_id": 1525759, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/LHtNL.jpg?s=128&g=1", "display_name": "Addison", "link": "https://stackoverflow.com/users/1525759/addison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1258, "favorite_count": 0, "accepted_answer_id": 50661865, "answer_count": 2, "score": 5, "last_activity_date": 1528035720, "creation_date": 1527979284, "last_edit_date": 1527981810, "question_id": 50661775, "link": "https://stackoverflow.com/questions/50661775/why-is-veclen-a-method", "title": "Why is Vec::len a method?", "body": "<p>I noticed that Rust's <code>Vec::len</code> method just accesses the vector's <code>len</code> property. Why isn't <code>len</code> just a public property, rather than wrapping a method around it? I assume this is so that in case the implementation changes in the future, nothing will break because <code>Vec::len</code> can change the way it gets the length without any users of <code>Vec</code> knowing. But I don't know if there are any other reasons.</p>\n\n<p>The second part of my question is about when I'm designing an API. If I am building my own API, and I have a struct with a <code>len</code> property, should I make <code>len</code> private and create a public <code>len()</code> method? Is it bad practice to make fields public in Rust? I wouldn't think so, but I don't notice this being done often in Rust. For example, I have the following struct:</p>\n\n<pre><code>pub struct Segment {\n    pub dol_offset: u64,\n    pub len: usize,\n    pub loading_address: u64,\n    pub seg_type: SegmentType,\n    pub seg_num: u64,\n}\n</code></pre>\n\n<p>Should any of those fields be private and instead have a wrapper function like <code>Vec</code> does? If so, then why? Is there a good guideline to follow for this in Rust?</p>\n"}, {"tags": ["generics", "rust", "traits", "associated-types"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527974332, "post_id": 50660911, "comment_id": 88332550, "body": "I have never seen anything in the documentation to suggest that the order should ever be important, so this feels like a bug."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527974552, "post_id": 50660911, "comment_id": 88332601, "body": "<i>&quot;dynamic dispatch. I don&#39;t even think it uses it&quot;</i> \u2014 Correct. There is no dynamic dispatch here."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1528037830, "last_edit_date": 1528037830, "creation_date": 1527982239, "answer_id": 50662049, "question_id": 50660911, "link": "https://stackoverflow.com/questions/50660911/why-are-supertrait-bounds-other-than-the-first-not-recognized-on-an-associated-t/50662049#50662049", "title": "Why are supertrait bounds other than the first not recognized on an associated type?", "body": "<p>This is a known bug (or a combination of a few):</p>\n\n<ol>\n<li><a href=\"https://github.com/rust-lang/rust/issues/50346\" rel=\"nofollow noreferrer\">Higher-ranked trait bounds on associated types are not elaborated (#50346)</a>.</li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/20671\" rel=\"nofollow noreferrer\">where clauses are only elaborated for supertraits, and not other things (#20671)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/32722\" rel=\"nofollow noreferrer\">Constraints on associated types declared in subtraits do not propagate. (#32722)</a></li>\n<li><a href=\"https://github.com/rust-lang/rust/issues/24159\" rel=\"nofollow noreferrer\">Unrecognized associated type bound on another associated type (#24159)</a></li>\n</ol>\n\n<p>The workaround is to restate the bounds at every usage site:</p>\n\n<pre><code>fn func&lt;T2&gt;()\nwhere\n    T: Trait2,\n    T::Associated: Trait,\n{\n    let mut t = T::method(1);\n    let t2 = T::method(2);\n    t += &amp;t2;\n    t += t2;\n}\n</code></pre>\n\n<p>This should be addressed <a href=\"https://github.com/rust-lang/rust/issues/48049\" rel=\"nofollow noreferrer\">when the type system moves</a> from its <em>ad hoc</em> implementation to <a href=\"https://github.com/rust-lang-nursery/chalk\" rel=\"nofollow noreferrer\">Chalk</a>, a more principled solver for the types of problems a complicated type system creates.</p>\n"}], "owner": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 0, "accepted_answer_id": 50662049, "answer_count": 1, "score": 5, "last_activity_date": 1528097747, "creation_date": 1527971375, "last_edit_date": 1528097747, "question_id": 50660911, "link": "https://stackoverflow.com/questions/50660911/why-are-supertrait-bounds-other-than-the-first-not-recognized-on-an-associated-t", "title": "Why are supertrait bounds other than the first not recognized on an associated type?", "body": "<p>This snippet is valid in Rust 1.26.1:</p>\n\n<pre><code>use std::ops::AddAssign;\n\ntrait Trait\nwhere\n    for&lt;'a&gt; Self: AddAssign&lt;Self&gt; + AddAssign&lt;&amp;'a Self&gt; + Sized,\n{\n}\n\ntrait Trait2 {\n    type Associated: Trait;\n\n    fn method(u32) -&gt; Self::Associated;\n}\n\nfn func&lt;T2: Trait2&gt;() {\n    let mut t = T2::method(1);\n    let t2 = T2::method(2);\n    t += &amp;t2;\n}\n</code></pre>\n\n<p>Notice that <code>Trait</code> implements both <code>AddAssign&lt;Self&gt;</code> and <code>AddAssign&lt;&amp;'a Trait&gt;</code> (in that order, which is important later). Therefore, in <code>func</code> we know that both <code>t += t2</code> and <code>t += &amp;t2</code> should be valid. As seen <a href=\"https://play.rust-lang.org/?gist=4b2c1382c9eb887d74b89847bf111602&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">on the playground</a>, <code>t += &amp;t2</code> is valid, but <a href=\"https://play.rust-lang.org/?gist=9b016bca1842519965e6d7df732772f6&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">using <code>t += t2</code> isn't</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:19:10\n   |\n19 |     t += t2;\n   |          ^^\n   |          |\n   |          expected reference, found associated type\n   |          help: consider borrowing here: `&amp;t2`\n   |\n   = note: expected type `&amp;&lt;T2 as Trait2&gt;::Associated`\n              found type `&lt;T2 as Trait2&gt;::Associated`\n</code></pre>\n\n<p>I read this error as the compiler not recognizing that <code>AddAssign&lt;Self&gt;</code> is implemented for <code>T::Associated</code>, which is clearly wrong, as it implements <code>Trait</code>, which requires <code>AddAssign&lt;Self&gt;</code>.</p>\n\n<p>If we change the order of the <code>AddAssign</code> bounds on <code>Trait</code> then the opposite holds: <a href=\"https://play.rust-lang.org/?gist=38f43ce3e124b319f6ba6600d5c6ca68&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\"><code>t += t2</code> is valid</a> while <a href=\"https://play.rust-lang.org/?gist=c6a71bc0cacb1ae4ed550a704225d651&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\"><code>t += &amp;t2</code> isn't</a>.</p>\n\n<p>A quick fix for the problem is to make <code>func</code> <a href=\"https://play.rust-lang.org/?gist=1770e240ad20355eed43bfb68c4f24ff&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">generic over both traits</a>:</p>\n\n<pre><code>fn func&lt;T: Trait, T2: Trait2&lt;Associated = T&gt;&gt;() {\n    let mut t = T2::method(1);\n    let t2 = T2::method(2);\n    t += t2;\n}\n</code></pre>\n\n<p>This shouldn't be necessary; the compiler can recognize one of the <code>AddAssign</code>s, why not the other? It seems the last bound is the one to be recognized.</p>\n\n<p>My first suspicion was this this has something to do with dynamic dispatch.\nI ruled it out since the order of the bounds shouldn't matter even in dynamic dispatch. I don't even think it uses it, since all types are known at compile-time using monomorphisation.</p>\n\n<p>My current suspicion is a compiler bug where the typechecker doesn't account for generics on trait bounds when it is an associated type. It is easy to imagine such a specific case being overlooked.</p>\n\n<p>What is going here?</p>\n"}, {"tags": ["compiler-errors", "rust", "traits", "type-constraints"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527948729, "post_id": 50657585, "comment_id": 88325519, "body": "In general, it&#39;s not good practice to put trait bounds on a struct or trait&#39;s type parameters. If you move them to the impls instead, then you will see more clearly why the cyclic dependencies are occurring."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527948926, "post_id": 50657585, "comment_id": 88325558, "body": "For example: <a href=\"https://play.rust-lang.org/?gist=0cadebe7e494d464e976b860c3a22c71&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527948999, "post_id": 50657585, "comment_id": 88325582, "body": "@PeterHall I do see a cyclic dependency, but I don&#39;t see why it can&#39;t be resolved."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527949898, "post_id": 50657585, "comment_id": 88325837, "body": "@PeterHall Doesn&#39;t <a href=\"https://play.rust-lang.org/?gist=30db42f406ef81ea745eaa18d965f794&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">this (without using the associated type)</a> do essentially the same?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527950075, "post_id": 50657585, "comment_id": 88325885, "body": "Yes. But you&#39;ve lost the generic type in the main struct. Presumably you didn&#39;t want to hard-code that as <code>()</code>?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527951649, "post_id": 50657585, "comment_id": 88326348, "body": "@PeterHall Yes, that&#39;s what the question is about: can I make use of an associated type there?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527958289, "post_id": 50657585, "comment_id": 88328169, "body": "Sorry, this example is too abstract for me. I have read a little about CRTP and it seems to be a <i>very</i> C++ specific pattern. For example, <a href=\"https://stackoverflow.com/a/26718782/3650362\">this answer</a> describes using it to do something that seems <a href=\"https://play.rust-lang.org/?gist=05bbafb5cf2e01b527a9a845dd5eafc8&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">trivially solvable with traits alone</a> (no generics in sight)."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527960606, "post_id": 50657585, "comment_id": 88328851, "body": "@trentcl OK, I guess this isn&#39;t very much like the CRTP from C++. It&#39;s just &quot;curiously recurring&quot; in that <code>.s</code> is an <code>Strategy&lt;Self&gt;</code>, so <code>s.run</code> &quot;knows&quot; about the parent type and can take it as a parameter (though I am using composition, not inheritance)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527963611, "post_id": 50657585, "comment_id": 88329708, "body": "I don&#39;t think your example justifies parameterizing  <code>Strategy</code> over the &quot;master&quot; type rather than just the data type. <a href=\"https://play.rust-lang.org/?gist=1f682402286cbca96ddcebe7c466517e&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">For example, this works fine</a> and I think the only thing it gives up is the ability to have <code>Strategy</code> trait objects. You can get even that back at the cost of double dynamic dispatch (use <code>&amp;HasData</code> instead of <code>&amp;impl HasData</code>). A more concrete example might help."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527964338, "post_id": 50657585, "comment_id": 88329945, "body": "@trentcl Thanks, moving the <code>HasData</code> constraint to a type parameter at <code>run</code> (not the complete <code>Strategy</code>) is a good idea. For some reason I believed it was necessary to have the <code>impl Example</code> reflect that type bound. Can you write an answer with that?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527972691, "post_id": 50657585, "comment_id": 88332125, "body": "Sure! I added some other suggestions too, but because I haven&#39;t completely grasped your design, they might not apply."}], "answers": [{"comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527952315, "post_id": 50658018, "comment_id": 88326553, "body": "Thanks, I understand. This is what I was going with originally, but my library is supposed to use multiple kinds of strategies (not just the <code>Strategy</code> trait) and there might be multiple implementations (not just the <code>ExampleStrat</code> for each of those strategy kinds), so that in <code>main</code> an <code>Example</code> could be combined from the implementations pretty arbitrarily. So the <code>ExampleStrat</code> definition would look more like <code>impl&lt;A, B, C, D, E, \u2026&gt; Strategy&lt;Example&lt;A, B, C, ExampleStrat, D, E, \u2026&gt;&gt; for ExampleStrat</code>, and that&#39;s what I wanted to avoid using a <code>trait</code>. Is that not possible?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527953152, "post_id": 50658018, "comment_id": 88326784, "body": "This is just saying that <code>ExampleStrat</code> is only a valid <code>Strategy</code> when used with an <code>Example</code> and with <code>ExampleData</code>. You can create other strategies for <code>Example</code>, and you could declare different <code>impl</code>s of <code>Strategy</code> for <code>ExampleStrat</code>, so it could work with other targets."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527953234, "post_id": 50658018, "comment_id": 88326809, "body": "Overall, it looks like you are trying to port an OO pattern directly from Java or C++. Usually that will not result in nice idiomatic Rust."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527953557, "post_id": 50658018, "comment_id": 88326914, "body": "Yes, exactly that is what I want to say, however if possible not with the full load of generic parameters A-Z on every <code>impl</code>. I know that my <code>ExampleStrat</code> strategy implementations work only for the <code>Example</code> type, however more or less &quot;any&quot; <code>Example</code> type regardless of its type parameters."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527953877, "post_id": 50658018, "comment_id": 88327008, "body": "Yes, I was trying to port the Curiously Recurring Template Pattern from C++ to Rust - in each of my microcontroller applications I will need only one instance of one specific type (an <code>Example</code> instantiated with the strategies appropriate for the current application), but I wanted to define my library methods on <code>Example</code> generically. What would the idiomatic Rust pattern be for this?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1527956560, "post_id": 50658018, "comment_id": 88327711, "body": "I guess maybe I should ask a separate question about that, and leave this one concerning only the error message."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1527951027, "last_edit_date": 1527951027, "creation_date": 1527950469, "answer_id": 50658018, "question_id": 50657585, "link": "https://stackoverflow.com/questions/50657585/curiously-recurring-generic-trait-pattern-overflow-evaluating-the-requirement/50658018#50658018", "title": "Curiously recurring generic trait pattern: overflow evaluating the requirement", "body": "<p>First of all, everything becomes a lot clearer if you avoid putting trait bounds on definitions of structs and traits. When things get complicated, the constraints are at least solved from the same direction.</p>\n\n<pre><code>pub struct Example&lt;S, D, A&gt; {\n    pub s: S,\n    pub a: A,\n    pub data: D,\n}\n\npub trait Strategy&lt;T&gt; {\n    type Associated;\n    fn run(&amp;self, &amp;T);\n}\n\npub trait HasData {\n    type Data;\n    fn data(&amp;self) -&gt; &amp;Self::Data;\n}\n\nimpl&lt;S, D, A&gt; Example&lt;S, D, A&gt;\nwhere\n    S: Strategy&lt;Self, Associated = A&gt;,\n{\n    pub fn do_it(&amp;self) {\n        self.s.run(self);\n    }\n}\n\nimpl&lt;S, D, A&gt; HasData for Example&lt;S, D, A&gt;\nwhere\n    S: Strategy&lt;Self, Associated = A&gt;,\n{\n    type Data = D;\n    fn data(&amp;self) -&gt; &amp;D {\n        &amp;self.data\n    }\n}\n</code></pre>\n\n<p>Your implementation of <code>Strategy</code> for <code>ExampleStrat</code> looks like this:</p>\n\n<pre><code>impl&lt;E: HasData&lt;Data = ExampleData&gt;&gt; Strategy&lt;E&gt; for ExampleStrat {\n    type Associated = ();\n     // ...\n}\n</code></pre>\n\n<p>What this means is that you are defining it for all possible qualifying types <code>E</code>. The type-checker can now only look at the trait bounds, which are again generic and only expressed in terms of other traits, which use each other as bounds, so the type-checker gets into a cycle. Put a block in the cycle by giving it a concrete type, which you know.</p>\n\n<pre><code>pub struct ExampleStrat;\npub struct ExampleData;\n\nimpl Strategy&lt;Example&lt;ExampleStrat, ExampleData, ()&gt;&gt; for ExampleStrat {\n    type Associated = ();\n    fn run(&amp;self, e: &amp;Example&lt;ExampleStrat, ExampleData, ()&gt;) {\n        let _ = e.data();\n        // uses ExampleData here\n    }\n}\n\nfn main() {\n    let example = Example {\n        s: ExampleStrat,\n        a: (),\n        data: ExampleData,\n    };\n    example.do_it();\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527974897, "post_id": 50661047, "comment_id": 88332671, "body": "&quot;<i>the <code>HasData</code> trait doesn&#39;t seem to do much in this <code>impl</code></i>&quot; - true, I&#39;ve simplified it for the question. It contains many getters and setters in the <code>Example</code> struct, and the different <code>Strategy</code> implementations use different subsets of them. I would have written the <code>Strategy</code> trait so that <code>run</code> takes an <code>Example&lt;\u2026&gt;</code> ((mutable) reference) directly, the <i>inconvenience</i> is that this requires each <code>impl Strategy</code>  to list the myriads of type parameters and their bounds. (Part of this might be solved with <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2089-implied-bounds.md\" rel=\"nofollow noreferrer\">RFC2089</a>)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1527979321, "post_id": 50661047, "comment_id": 88333621, "body": "@Bergi I figured there might be more to it. But this might be a case where it&#39;s better to bite the bullet and write the bounds."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 1, "last_activity_date": 1527972606, "creation_date": 1527972606, "answer_id": 50661047, "question_id": 50657585, "link": "https://stackoverflow.com/questions/50657585/curiously-recurring-generic-trait-pattern-overflow-evaluating-the-requirement/50661047#50661047", "title": "Curiously recurring generic trait pattern: overflow evaluating the requirement", "body": "<p>If the following <code>impl</code> is characteristic for <code>Strategy</code>, then it might be parameterized on the wrong thing. (I'm going to ignore the associated type for this answer, because the example doesn't use it.)</p>\n\n<pre><code>impl&lt;E: HasData&lt;Data = ExampleData&gt;&gt; Strategy&lt;E&gt; for ExampleStrat {\n    fn run(&amp;self, e: &amp;E) {\n        let _ = e.data();\n        // uses ExampleData here\n    }\n}\n</code></pre>\n\n<p>You could instead parameterize <code>Strategy</code> over <code>D</code> -- breaking the <code>impl</code> dependency cycle -- and parameterize only the <code>run</code> method over <code>E</code>.</p>\n\n<pre><code>pub trait Strategy&lt;D&gt; {\n    fn run(&amp;self, &amp;impl HasData&lt;Data = D&gt;);\n}\n\nimpl Strategy&lt;ExampleData&gt; for ExampleStrat {\n    fn run(&amp;self, e: &amp;impl HasData&lt;Data = ExampleData&gt;) {\n        let _ = e.data();\n        // uses ExampleData here\n    }\n}\n</code></pre>\n\n<p><code>fn run&lt;E: HasData&lt;Data = ExampleData&gt;&gt;(&amp;self, e: &amp;E)</code> is another way to define <code>run</code> that is the same for this purpose. <a href=\"https://play.rust-lang.org/?gist=dba13faeabeed5e93efa5103208419af&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Here is a full example</a>.</p>\n\n<p>A potential drawback of this approach is that <code>run</code> can't be called through a <code>Strategy</code> trait object, because it has to be monomorphized for any type that implements <code>HasData</code>. But the <code>HasData</code> trait doesn't seem to do much in this <code>impl</code>: the only thing it can do is return an internal reference, and once you have it, there's no point in using it again. Maybe <code>run</code> could just take a <code>&amp;D</code> reference?</p>\n\n<pre><code>pub trait Strategy&lt;D&gt; {\n    fn run(&amp;self, &amp;D);\n}\n\nimpl Strategy&lt;ExampleData&gt; for ExampleStrat {\n    fn run(&amp;self, _: &amp;ExampleData) {\n        // uses ExampleData here\n    }\n}\n</code></pre>\n\n<p>To be sure, now you have to call <code>self.s.run(self.data())</code> in <code>do_it</code>, but this doesn't cost you in flexibility over the original version, in which, had it worked\u00b9, you could only call <code>Strategy&lt;E&gt;::run</code> with an argument of type <code>&amp;E</code>.</p>\n\n<p>In fact, the whole <code>HasData</code> trait seems unnecessary to me: it's always implemented by the same type whose implementation calls it, so aside from the minor convenience of passing <code>self</code> instead of <code>self.data</code>, it doesn't elevate the level of abstraction inside the <code>do_it</code> method. So it seems to me effectively the same thing to <a href=\"https://play.rust-lang.org/?gist=25fb35abbdee4cbcfc8c8a2e1c01c363&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">delete <code>HasData</code> entirely</a> and let <code>Example</code> know how to call <code>Strategy::run</code> with the right reference; it has to, anyway. (However, it's possible I merely lack imagination.)</p>\n\n<p>Any of these solutions ought to handle adding an associated type to <code>Strategy</code>, but without knowing how it will be used, it's hard to say for sure.</p>\n\n<p>\u00b9It <em>could</em> be made to work in some future version of the compiler, with sufficiently smart type checking.</p>\n"}], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 282, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1527972606, "creation_date": 1527947392, "last_edit_date": 1527948055, "question_id": 50657585, "link": "https://stackoverflow.com/questions/50657585/curiously-recurring-generic-trait-pattern-overflow-evaluating-the-requirement", "title": "Curiously recurring generic trait pattern: overflow evaluating the requirement", "body": "<p>I am trying to implement a generic structure with a bunch of fields, where each of the field types should know about the exact type of the whole structure. It's a sort of strategy pattern.</p>\n\n<pre><code>pub struct Example&lt;S: Strategy&lt;Example&lt;S, D&gt;&gt;, D&gt; {\n    pub s: S,\n    pub a: S::Associated,\n    pub data: D,\n}\npub trait Strategy&lt;T&gt; {\n    type Associated;\n    fn run(&amp;self, &amp;T);\n}\npub trait HasData {\n    type Data;\n    fn data(&amp;self) -&gt; &amp;Self::Data;\n}\n\nimpl&lt;S: Strategy&lt;Self&gt;, D&gt; Example&lt;S, D&gt; {\n//               ^^^^\n// the complex code in this impl is the actual meat of the library:\n    pub fn do_it(&amp;self) {\n        self.s.run(self); // using the Strategy trait\n    }\n}\nimpl&lt;S: Strategy&lt;Self&gt;, D&gt; HasData for Example&lt;S, D&gt; {\n    type Data = D;\n    fn data(&amp;self) -&gt; &amp;D {\n        &amp;self.data\n    }\n}\n</code></pre>\n\n<p>I was planning to then instantiate the generics from the above \"library\":</p>\n\n<pre><code>pub struct ExampleStrat;\npub struct ExampleData;\n\nimpl&lt;E: HasData&lt;Data = ExampleData&gt;&gt; Strategy&lt;E&gt; for ExampleStrat {\n    type Associated = ();\n    fn run(&amp;self, e: &amp;E) {\n        let _ = e.data();\n        // uses ExampleData here\n    }\n}\nlet example = Example {\n    s: ExampleStrat,\n    a: (),\n    data: ExampleData,\n};\nexample.do_it();\n</code></pre>\n\n<p>In my actual code I've got quite a few different \"strategies\" and also multiple data fields, so the <code>Example</code> type has an impressive list of generics, and I'm happy if the library user doesn't need to be explicit about them (or not often at least) and instead can just use the <code>HasData</code> trait (with its associated types, not generic type parameters).</p>\n\n<p>If there was no type bound in <code>struct Example&lt;S, D&gt;</code>, this would actually work (surprisingly) fine, much better than I has initially expected (after <a href=\"https://stackoverflow.com/q/34552927/1048572\">fighting with <code>Self</code> in the <code>struct</code> bounds</a>). However it is recommended to <a href=\"https://stackoverflow.com/q/49229332/1048572\">duplicate the <code>impl</code> trait bounds on the <code>struct</code></a> when the struct is only supposed to be used with the constrained types, and in my case I actually <em>need</em> them to be able to use the <code>Associated</code> type for the <code>a</code> field.</p>\n\n<p>Now the compiler is complaining</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `main::ExampleStrat: Strategy&lt;Example&lt;main::ExampleStrat, main::ExampleData&gt;&gt;`\n  --&gt; src/main.rs:42:9\n   |\n42 |         a: (),\n   |         ^^^^^\n   |\n   = note: required because of the requirements on the impl of `HasData` for `Example&lt;main::ExampleStrat, main::ExampleData&gt;`\n   = note: required because of the requirements on the impl of `Strategy&lt;Example&lt;main::ExampleStrat, main::ExampleData&gt;&gt;` for `main::ExampleStrat`\n</code></pre>\n\n<p><strong>How can I solve this?</strong> Am I trying to do something that is not possible, am I doing it wrong, or is it supposed to be possible but I am falling prey to <a href=\"https://github.com/rust-lang/rust/search?utf8=%E2%9C%93&amp;q=&quot;overflow+evaluating+the+requirement&quot;&amp;type=Issues\" rel=\"nofollow noreferrer\">a compiler bug</a>? Is my complete design flawed?</p>\n"}, {"tags": ["reference", "rust", "lifetime", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "edited": false, "score": 1, "creation_date": 1527944704, "post_id": 50656449, "comment_id": 88324387, "body": "It&#39;s not only a good answer, it helps me understand better those lifetimes. Thanks a 100x times!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 7, "last_activity_date": 1527974846, "last_edit_date": 1527974846, "creation_date": 1527938969, "answer_id": 50656449, "question_id": 50655781, "link": "https://stackoverflow.com/questions/50655781/multiple-lifetimes-and-move-assignment-to-borrowed-x-occurs-here/50656449#50656449", "title": "Multiple lifetimes and move: assignment to borrowed `x` occurs here", "body": "<p>The problem is here:</p>\n\n<pre><code>impl&lt;'a&gt; B&lt;'a&gt; {\n    fn next(&amp;self) -&gt; B {\n        let mut new = self.clone();\n        new.0 = new.0 + 1;\n        new\n    }\n}\n</code></pre>\n\n<p>You didn't specify a lifetime for <code>B</code>, the return type of <code>next</code>. Because of Rust's <a href=\"https://doc.rust-lang.org/nomicon/lifetime-elision.html\" rel=\"nofollow noreferrer\">lifetime elision rules</a>, the compiler infers that you intended this:</p>\n\n<pre><code>impl&lt;'a&gt; B&lt;'a&gt; {\n    fn next&lt;'c&gt;(&amp;'c self) -&gt; B&lt;'c&gt; {\n        let mut new = self.clone();\n        new.0 = new.0 + 1;\n        new\n    }\n}\n</code></pre>\n\n<p>Which means that the return value may not outlive <code>self</code>. Or, put another way, <code>self</code> has to live longer than the <code>B</code> that is returned. Given the body of the function, this is a <em>completely unnecessary requirement</em> because those references are independent of each other. And it causes a problem here:</p>\n\n<pre><code>for _ in 0..5 {\n    b = b.next();\n}\n</code></pre>\n\n<p>You are overwriting a value that the borrow-checker thinks is still borrowed by the call to <code>next()</code>. Inside <code>next</code> we know that there is no such relationship \u2013 the lifetime annotations do not reflect the constraints of what you're actually doing.</p>\n\n<p>So what are the lifetime bounds here? </p>\n\n<ol>\n<li><p>The lifetimes of references to <code>B</code> are unrelated - each can exist without the other. So, to give the most flexibility to a caller, the lifetime of <code>B</code> should be different from the lifetime of the reference to <code>self</code> in <code>next</code>.</p></li>\n<li><p>However, each <code>B</code> that is created with <code>next()</code> holds a reference to <em>the same</em> <code>u32</code> as is held by <code>self</code>. So the lifetime <em>parameter</em> that you give to each <code>B</code> must be the same.</p></li>\n</ol>\n\n<p>Using explicitly named lifetimes, this is the result of combining both of those things: </p>\n\n<pre><code>impl&lt;'a&gt; B&lt;'a&gt; {\n    fn next&lt;'c&gt;(&amp;'c self) -&gt; B&lt;'a&gt; {\n        let mut new = self.clone();\n        new.0 = new.0 + 1;\n        new\n    }\n}\n</code></pre>\n\n<p>Note that \u2014 even though the <em>reference</em> to <code>self</code> here has lifetime <code>'c</code> \u2014 the type of <code>self</code> is <code>B&lt;'a&gt;</code>, where <code>'a</code> is the lifetime of the <code>&amp;u32</code> inside. Just the same as the return value.</p>\n\n<p>But actually, the <code>'c</code> can be elided. So it's really just the same as this:</p>\n\n<pre><code>impl&lt;'a&gt; B&lt;'a&gt; {\n    fn next(&amp;self) -&gt; B&lt;'a&gt; {\n        let mut new = self.clone();\n        new.0 = new.0 + 1;\n        new\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1125, "user_id": 2824342, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ea84a519cbc8e36fd15ced5da3fd3b6?s=128&d=identicon&r=PG&f=1", "display_name": "Cecile", "link": "https://stackoverflow.com/users/2824342/cecile"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 50656449, "answer_count": 1, "score": 4, "last_activity_date": 1545152803, "creation_date": 1527934276, "last_edit_date": 1545152803, "question_id": 50655781, "link": "https://stackoverflow.com/questions/50655781/multiple-lifetimes-and-move-assignment-to-borrowed-x-occurs-here", "title": "Multiple lifetimes and move: assignment to borrowed `x` occurs here", "body": "<p>I have a struct with a function <code>next()</code> (similar to iterators but not an iterator). This method returns the next state after modification (preserving the original state). So: <code>fn next(&amp;A) -&gt; A</code>.</p>\n\n<p>I started with a simple struct where I didn't need a lifetime (struct A in the example) and I extended it to add a reference to a new struct (struct B).</p>\n\n<p>The problem is that I now need to specify the lifetime for my struct and for some reason my method <code>next()</code> refuses to work anymore.</p>\n\n<p>I suspect that the lifetime of the new struct of every iteration is limited to the scope where it is created and I cannot move it outside of this scope.</p>\n\n<p>Is it possible to preserve the behavior of my <code>next()</code> method?</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3be70d622d936939f2f48e5d4556b3c4&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Try it here</a></p>\n\n<pre><code>#[derive(Clone)]\nstruct A(u32);\n#[derive(Clone)]\nstruct B&lt;'a&gt;(u32, &amp;'a u32);\n\nimpl A {\n    fn next(&amp;self) -&gt; A {\n        let mut new = self.clone();\n        new.0 = new.0 + 1;\n        new\n    }\n}\n\nimpl&lt;'a&gt; B&lt;'a&gt; {\n    fn next(&amp;self) -&gt; B {\n        let mut new = self.clone();\n        new.0 = new.0 + 1;\n        new\n    }\n}\n\nfn main() {\n    let mut a = A(0);\n    for _ in 0..5 {\n        a = a.next();\n    }\n\n    let x = 0;\n    let mut b = B(0, &amp;x);\n    for _ in 0..5 {\n        b = b.next();\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `b` because it is borrowed\n  --&gt; src/main.rs:31:9\n   |\n31 |         b = b.next();\n   |         ^^^^-^^^^^^^\n   |         |   |\n   |         |   borrow of `b` occurs here\n   |         assignment to borrowed `b` occurs here\n</code></pre>\n"}, {"tags": ["reference", "rust", "mutable"], "comments": [{"owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527914205, "post_id": 50653536, "comment_id": 88317466, "body": "I have been suggested to use std::mem::replace instead of std::mem::swap which makes things a lot less verbose but it&#39;s still an ugly way of achieving the result."}], "answers": [{"comments": [{"owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527923506, "post_id": 50654355, "comment_id": 88319049, "body": "A will not necessarily be a number, it has a zero as a general element you can get for the type since for this to work it needs something to be swapped inside the structure I&#39;m trying to get the element(s) out of. I&#39;m looking for a solution that would not require the Copy trait and a dummy element, if it exists."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527924044, "post_id": 50654355, "comment_id": 88319168, "body": "@jsmithc9 You cannot do that. I edited to explain why."}, {"owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "edited": false, "score": 0, "creation_date": 1527955750, "post_id": 50654355, "comment_id": 88327501, "body": "Thanks for elaborating."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1527945647, "last_edit_date": 1527945647, "creation_date": 1527922616, "answer_id": 50654355, "question_id": 50653536, "link": "https://stackoverflow.com/questions/50653536/is-there-a-way-of-extracting-a-value-from-a-mut-enum-when-the-old-one-is-discar/50654355#50654355", "title": "Is there a way of extracting a value from a &amp;mut enum when the old one is discarded?", "body": "<p>If I understand your code, <code>A</code> will be some number because it implements <code>Zero</code>. The numeric values implement <code>Copy</code> in Rust, so you can use this to your advantage:</p>\n\n<pre><code>pub fn push(&amp;mut self, e: A)\nwhere\n    A: Zero&lt;A&gt; + Copy,\n{\n    match self {\n        D::E1(e1) =&gt; *self = D::E2(e, *e1),\n        _ =&gt; unimplemented!(),\n    };\n}\n</code></pre>\n\n<p>If you do not want to bound against <code>Copy</code>, you can use <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow noreferrer\"><code>std::mem::replace</code></a> as suggested:</p>\n\n<pre><code>pub fn push(&amp;mut self, e: A)\nwhere\n    A: Zero&lt;A&gt;,\n{\n    use std::mem::replace;\n    match self {\n        D::E1(e1) =&gt; *self = D::E2(e, replace(e1, A::zero())),\n        _ =&gt; unimplemented!(),\n    };\n}\n</code></pre>\n\n<p>That is the idiomatic way to do so.</p>\n\n<p>You <em>need</em> the dummy element because you cannot do this:</p>\n\n<pre><code>D::E1(e1) =&gt; *self = D::E2(e, *e1),\n</code></pre>\n\n<p>The reason is that the compiler evaluates the parameters first, and <code>*e1</code> tries to take the ownership of borrowed data, but that is forbidden.</p>\n"}], "owner": {"reputation": 17, "user_id": 4385095, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/328bd3b60e59196869eca7d7173cd7b5?s=128&d=identicon&r=PG", "display_name": "jsmithc9", "link": "https://stackoverflow.com/users/4385095/jsmithc9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "closed_date": 1527945958, "accepted_answer_id": 50654355, "answer_count": 1, "score": 1, "last_activity_date": 1527946179, "creation_date": 1527914039, "last_edit_date": 1527946179, "question_id": 50653536, "link": "https://stackoverflow.com/questions/50653536/is-there-a-way-of-extracting-a-value-from-a-mut-enum-when-the-old-one-is-discar", "closed_reason": "Duplicate", "title": "Is there a way of extracting a value from a &amp;mut enum when the old one is discarded?", "body": "<p>I would like to extract a value from a pattern matched mutable reference and discard the old one.</p>\n\n<p>This is a minimal example I've come up with:</p>\n\n<pre><code>fn main() {\n    #[derive(Debug)]\n    enum D&lt;A&gt; {\n        E1(A),\n        E2(A, A),\n    };\n\n    trait Zero&lt;A&gt; {\n        fn zero() -&gt; A;\n    }\n\n    impl&lt;A&gt; D&lt;A&gt; {\n        pub fn push2(&amp;mut self, e: A) {\n            match self {\n                D::E1(e1) =&gt; {\n                    *self = D::E2(*e1, e);\n                }\n                _ =&gt; unimplemented!(),\n            }\n        }\n\n        pub fn push(&amp;mut self, e: A)\n        where\n            A: Zero&lt;A&gt;,\n        {\n            match self {\n                D::E1(e1) =&gt; {\n                    let mut r = A::zero();\n                    std::mem::swap(&amp;mut r, e1);\n                    *self = D::E2(e, r);\n                }\n                _ =&gt; unimplemented!(),\n            };\n        }\n    }\n\n    impl Zero&lt;i32&gt; for i32 {\n        fn zero() -&gt; i32 {\n            0\n        }\n    }\n\n    let mut d = D::E1(10);\n    d.push(11);\n\n    println!(\"{:?}\", d);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ff68d456836777e786cfd667d8637e4a&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p><code>push2</code> fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:17:39\n   |\n17 |                         *self = D::E2(*e1, e);\n   |                                       ^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>I would like to achieve this without requiring the <code>Copy</code> trait as I have some boxed types inside and ideally would like to remove the need for the dummy variable (<code>A::zero()</code>).</p>\n"}, {"tags": ["syntax", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 64, "last_activity_date": 1606231575, "last_edit_date": 1606231575, "creation_date": 1527881952, "answer_id": 50650071, "question_id": 50650070, "link": "https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type/50650071#50650071", "title": "What does &quot;dyn&quot; mean in a type?", "body": "<p>TL;DR: It's a syntax for specifying the type of a <em>trait object</em> and must be specified for clarity reasons.</p>\n<hr />\n<p>Since Rust 1.0, traits have led a double life. Once a trait has been declared, it can be used either as a trait or as a type:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>// As a trait\nimpl MyTrait for SomeType {}\n\n// As a type!\nimpl MyTrait {}\nimpl AnotherTrait for MyTrait {}\n</code></pre>\n<p>As you can imagine, this double meaning can cause some confusion. Additionally, since the <code>MyTrait</code> type is an unsized / dynamically-sized type, this can expose people to very complex error messages.</p>\n<p>To ameliorate this problem, <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2113-dyn-trait-syntax.md\" rel=\"noreferrer\">RFC 2113</a> introduced the <code>dyn</code> syntax. This syntax is available starting in Rust 1.27:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{fmt::Display, sync::Arc};\n\nfn main() {\n    let display_ref: &amp;dyn Display = &amp;42;\n    let display_box: Box&lt;dyn Display&gt; = Box::new(42);\n    let display_arc: Arc&lt;dyn Display&gt; = Arc::new(42);\n}\n</code></pre>\n<p>This new keyword parallels the <code>impl Trait</code> syntax and strives to make the type of a <a href=\"https://stackoverflow.com/q/27567849/155423\">trait object</a> more obviously distinct from the &quot;bare&quot; trait syntax.</p>\n<p><code>dyn</code> is short for &quot;dynamic&quot; and refers to the fact that trait objects perform <a href=\"https://en.wikipedia.org/wiki/Dynamic_dispatch\" rel=\"noreferrer\"><em>dynamic dispatch</em></a>. This means that the decision of exactly which function is called will occur at program run time. Contrast this to <a href=\"https://en.wikipedia.org/wiki/Static_dispatch\" rel=\"noreferrer\"><em>static dispatch</em></a> which uses the <code>impl Trait</code> syntax.</p>\n<p>The syntax without <code>dyn</code> is now deprecated and it's likely that in a subsequent <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2052-epochs.md\" rel=\"noreferrer\">edition of Rust</a> it will be removed.</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34438755/155423\">Why would I implement methods on a trait instead of as part of the trait?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27567849/155423\">What makes something a &quot;trait object&quot;?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 18897, "user_id": 8059459, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9f0fc0fd607fc44a4597cacb7f034ba6?s=128&d=identicon&r=PG&f=1", "display_name": "Willem van der Veen", "link": "https://stackoverflow.com/users/8059459/willem-van-der-veen"}, "is_accepted": false, "score": 0, "last_activity_date": 1609247060, "last_edit_date": 1609247060, "creation_date": 1609241242, "answer_id": 65491386, "question_id": 50650070, "link": "https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type/65491386#65491386", "title": "What does &quot;dyn&quot; mean in a type?", "body": "<p>The <code>dyn</code> keyword is used to indicate that a type is a trait object. According to <a href=\"https://doc.rust-lang.org/reference/types/trait-object.html\" rel=\"nofollow noreferrer\">the Rust docs</a>:</p>\n<blockquote>\n<p>A trait object is an opaque value of another type that implements a\nset of traits.</p>\n</blockquote>\n<p>In other words, we do not know the specific type of the object at compile time, we just know that the object implements the trait.</p>\n<p>Because the size of a trait object is unknown at compile time they must be placed behind a pointer. For example, if <code>Trait</code> is your trait name then you can use your trait objects in the following manner:</p>\n<ul>\n<li><code>Box&lt;dyn Trait&gt;</code></li>\n<li><code>&amp;dyn Trait</code></li>\n<li>and other pointer types</li>\n</ul>\n<p>The variables/parameters which hold the trait objects are fat pointers which consists of the following components:</p>\n<ul>\n<li>pointer to the object in memory</li>\n<li>pointer to that object\u2019s vtable, a vtable is a table with pointers which point to the actual method(s) implementation(s).</li>\n</ul>\n<p>See my answer on <a href=\"https://stackoverflow.com/a/65477224/155423\">What makes something a \u201ctrait object\u201d?</a> for further details.</p>\n"}, {"tags": [], "owner": {"reputation": 780, "user_id": 284651, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/84bd7ff38170354ea24f6acc61555e08?s=128&d=identicon&r=PG", "display_name": "watr", "link": "https://stackoverflow.com/users/284651/watr"}, "is_accepted": false, "score": 0, "last_activity_date": 1615267417, "creation_date": 1615267417, "answer_id": 66541250, "question_id": 50650070, "link": "https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type/66541250#66541250", "title": "What does &quot;dyn&quot; mean in a type?", "body": "<p>I found this blog post to explain this feature really clearly: <a href=\"https://medium.com/digitalfrontiers/rust-dynamic-dispatching-deep-dive-236a5896e49b\" rel=\"nofollow noreferrer\">https://medium.com/digitalfrontiers/rust-dynamic-dispatching-deep-dive-236a5896e49b</a></p>\n<p>Relevant excerpt:</p>\n<pre><code>struct Service&lt;T:Backend&gt;{\n    backend: Vec&lt;T&gt;  // Either Vec&lt;TypeA&gt; or Vec&lt;TypeB&gt;, not both\n}\n...\nlet mut backends = Vec::new();\nbackends.push(TypeA);\nbackends.push(TypeB);  // &lt;---- Type error here\n</code></pre>\n<p>vs</p>\n<pre><code>struct Service{\n    backends: Vec&lt;Box&lt;dyn Backend&gt;&gt;\n}\n...\nlet mut backends = Vec::new();\nbackends.push( Box::new(PositiveBackend{}) as Box&lt;dyn Backend&gt;);\nbackends.push( Box::new(NegativeBackend{}) as Box&lt;dyn Backend&gt;);\n</code></pre>\n"}], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7592, "favorite_count": 9, "accepted_answer_id": 50650071, "answer_count": 3, "score": 68, "last_activity_date": 1615267417, "creation_date": 1527881952, "last_edit_date": 1527894886, "question_id": 50650070, "link": "https://stackoverflow.com/questions/50650070/what-does-dyn-mean-in-a-type", "title": "What does &quot;dyn&quot; mean in a type?", "body": "<p>I have recently seen code using the <code>dyn</code> keyword:</p>\n\n<pre><code>fn foo(arg: &amp;dyn Display) {}\n\nfn bar() -&gt; Box&lt;dyn Display&gt; {}\n</code></pre>\n\n<p>What does this syntax mean?</p>\n"}, {"tags": ["casting", "rust", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527879635, "post_id": 50649557, "comment_id": 88309981, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/27567849/what-makes-something-a-trait-object\">What makes something a &quot;trait object&quot;?</a>"}, {"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1527879769, "post_id": 50649557, "comment_id": 88310040, "body": "That is not the answer I am looking for."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527887418, "post_id": 50649557, "comment_id": 88312909, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/38294911/how-do-i-cast-a-literal-value-to-a-trait-object\">How do I cast a literal value to a trait object?</a> (It asks about literals but the answers apply)"}], "answers": [{"comments": [{"owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1527880853, "post_id": 50649816, "comment_id": 88310493, "body": "Thanks that is answering my question. Thought of a trait more like an interface. So when I cast to Write I can use those methods withs where implemented for stdout."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "edited": false, "score": 0, "creation_date": 1527882031, "post_id": 50649816, "comment_id": 88310975, "body": "@TimonPost a trait <i>is</i> like an interface, but an interface is not a concrete concept that can be created. A trait object is that concrete value."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1527880642, "creation_date": 1527880642, "answer_id": 50649816, "question_id": 50649557, "link": "https://stackoverflow.com/questions/50649557/cast-to-unsized-type-stdiostdout-as-stdiowrite-error/50649816#50649816", "title": "Cast to unsized type: `std::io::Stdout` as `std::io::Write` error", "body": "<blockquote>\n  <p>cast <code>Stdout</code> to <code>Write</code></p>\n</blockquote>\n\n<p>This does not make sense because <code>Write</code> isn't a type that you cast <em>to</em>. <code>Write</code> is a trait. There are <em>trait objects</em> that are types though, such as <code>Box&lt;Write&gt;</code> or <code>&amp;Write</code>. Re-read the <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait objects chapter of <em>The Rust Programming Language</em></a> to refresh your memory on this topic. Rust 1.27 is going to improve the syntax here to make it more obvious as <code>Box&lt;dyn Write&gt;</code> / <code>&amp;dyn Write</code>. </p>\n\n<p>You could use <code>Box::new(io::stdout()) as Box&lt;Write&gt;</code>, but you'll quickly run into  <a href=\"https://stackoverflow.com/q/32551177/155423\">&quot;Expected type parameter&quot; error in the constructor of a generic struct</a>.</p>\n\n<pre><code>impl A&lt;Box&lt;Write&gt;&gt; {\n    pub fn new() -&gt; Self {\n        A {\n            output: Box::new(io::stdout()) as Box&lt;Write&gt;,\n        }\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27567849/155423\">What makes something a &quot;trait object&quot;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36057645/155423\">Why is `let ref a: Trait = Struct` forbidden</a></li>\n<li><a href=\"https://stackoverflow.com/q/32551177/155423\">&quot;Expected type parameter&quot; error in the constructor of a generic struct</a></li>\n</ul>\n"}], "owner": {"reputation": 2353, "user_id": 6314392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/983d79cc7cd73b44026df03f5efdb2a0?s=128&d=identicon&r=PG&f=1", "display_name": "Timon Post", "link": "https://stackoverflow.com/users/6314392/timon-post"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 625, "favorite_count": 0, "accepted_answer_id": 50649816, "answer_count": 1, "score": 1, "last_activity_date": 1527880642, "creation_date": 1527879367, "last_edit_date": 1527879998, "question_id": 50649557, "link": "https://stackoverflow.com/questions/50649557/cast-to-unsized-type-stdiostdout-as-stdiowrite-error", "title": "Cast to unsized type: `std::io::Stdout` as `std::io::Write` error", "body": "<p>I am trying to cast <code>Stdout</code> to <code>Write</code>:</p>\n\n<pre><code>use std::io::{self, Write};\n\npub struct A&lt;Output: Write&gt; {\n    output: Output,\n}\n\nimpl&lt;Output: Write&gt; A&lt;Output&gt; {\n    pub fn new() -&gt; A&lt;Output&gt; {\n        A {\n            output: io::stdout() as Write,\n        }\n    }\n}\n</code></pre>\n\n<p>The compiler is complaining:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0620]: cast to unsized type: `std::io::Stdout` as `std::io::Write`\n  --&gt; src/main.rs:10:21\n   |\n10 |             output: io::stdout() as Write,\n   |                     ^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: consider using a box or reference as appropriate\n  --&gt; src/main.rs:10:21\n   |\n10 |             output: io::stdout() as Write,\n   |                     ^^^^^^^^^^^^\n</code></pre>\n\n<p>I want to cast this and tried to do what the compiler suggested but then it is saying that the <code>as</code> keyword could only be used for primitives and that I should implement the <code>From</code> trait. </p>\n\n<p>How could I cast the <code>Stdout</code> as a <code>Write</code> trait?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1527871111, "post_id": 50647748, "comment_id": 88306088, "body": "So, does <code>rustdoc</code> know about &quot;__impl&quot; to special-case it?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1527871134, "last_edit_date": 1527871134, "creation_date": 1527871060, "answer_id": 50647748, "question_id": 50647701, "link": "https://stackoverflow.com/questions/50647701/whats-the-significance-of-impl-in-a-macro-pattern/50647748#50647748", "title": "What&#39;s the significance of __impl in a macro pattern?", "body": "<blockquote>\n  <p>I'm under the impression that the literal <code>__impl</code> in the pattern and the subsequent invocations are used as a dummy-string during pattern-matching, to separate the internally used patterns from the public ones.</p>\n</blockquote>\n\n<p>That is correct. It's an internal implementation detail that users should not know of or use. However, macros have to be public because they are ultimately expanded \"by the user\" at the usage site.</p>\n\n<blockquote>\n  <p>However, the \"internal\" match arm is hidden from <code>rustdoc</code> as well.</p>\n</blockquote>\n\n<p>I don't know what you mean, that arm <a href=\"https://docs.rs/nom/4.0.0/nom/macro.map.html\" rel=\"nofollow noreferrer\">is in the documentation</a>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/Ro6DN.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Ro6DN.png\" alt=\"__impl in docs\"></a></p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/35537758/155423\">Is there a way to hide a Rust macro pattern from docs?</a></li>\n</ul>\n\n<blockquote>\n  <p>Does the <code>__impl</code>-part have any more significance to Rust?</p>\n</blockquote>\n\n<p>No. Many times you'll see this pattern prepended with another unlikely-to-occur sigil like <code>@</code> or <code>~</code>.</p>\n"}], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 50647748, "answer_count": 1, "score": 4, "last_activity_date": 1527871134, "creation_date": 1527870800, "last_edit_date": 1527870963, "question_id": 50647701, "link": "https://stackoverflow.com/questions/50647701/whats-the-significance-of-impl-in-a-macro-pattern", "title": "What&#39;s the significance of __impl in a macro pattern?", "body": "<p>In the following example, taken from <code>nom</code>, the string <code>__impl</code> appears in the first pattern. What is this element in terms of formal syntax and why is it there?</p>\n\n<p>I'm under the impression that the literal <code>__impl</code> in the pattern and the subsequent invocations are used as a dummy-string during pattern-matching, to separate the internally used patterns from the public ones. However, the \"internal\" match arm is hidden from <code>rustdoc</code> as well. Does the <code>__impl</code>-part have any more significance to Rust?</p>\n\n<pre><code>#[macro_export]\nmacro_rules! map(\n  // Internal parser, do not use directly\n  (__impl $i:expr, $submac:ident!( $($args:tt)* ), $g:expr) =&gt; (\n    ...\n  );\n  ($i:expr, $submac:ident!( $($args:tt)* ), $g:expr) =&gt; (\n    map!(__impl $i, $submac!($($args)*), $g);\n  );\n  ($i:expr, $f:expr, $g:expr) =&gt; (\n    map!(__impl $i, call!($f), $g);\n  );\n);\n</code></pre>\n"}, {"tags": ["macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1527870768, "creation_date": 1527870768, "answer_id": 50647691, "question_id": 50647598, "link": "https://stackoverflow.com/questions/50647598/how-does-nom-have-a-macro-invocation-in-a-macro-designator-position/50647691#50647691", "title": "How does nom have a macro invocation in a macro designator position?", "body": "<blockquote>\n  <p>I'm under the impression that <code>ident!(...)</code> is a macro invocation</p>\n</blockquote>\n\n<p>It is not. It's something that deliberately <em>looks like</em> a macro invocation though. Adding a space would probably make it more obvious:</p>\n\n<pre><code>macro_rules! example {\n    ($foo:ident !) =&gt; (1);\n}\n\nfn main() {\n    example!(hello!);\n}\n</code></pre>\n"}], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 43, "favorite_count": 0, "accepted_answer_id": 50647691, "answer_count": 1, "score": 2, "last_activity_date": 1527870863, "creation_date": 1527870298, "last_edit_date": 1527870863, "question_id": 50647598, "link": "https://stackoverflow.com/questions/50647598/how-does-nom-have-a-macro-invocation-in-a-macro-designator-position", "title": "How does nom have a macro invocation in a macro designator position?", "body": "<p>In the following example, taken from <code>nom</code>, the argument <code>$submac</code> has <code>ident!( $($args:tt)* )</code> in designator-position. I'm under the impression that <code>ident!(...)</code> is a macro invocation, yet as far as I can see <code>nom</code> does not define a macro named <code>ident</code>. Rust's documentation on macros does not specify that macro-invocations can even appear in designator-position. </p>\n\n<pre><code>#[macro_export]\nmacro_rules! exact (\n  ($i:expr, $submac:ident!( $($args:tt)* )) =&gt; ({\n      terminated!($i, $submac!( $($args)*), eof!())\n  });\n  ($i:expr, $f:expr) =&gt; (\n    exact!($i, call!($f));\n  );\n);\n</code></pre>\n\n<p>What is <code>ident!(...)</code> in formal syntax?</p>\n"}, {"tags": ["rust", "hyper", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1528130735, "last_edit_date": 1528130735, "creation_date": 1527863026, "answer_id": 50645596, "question_id": 50644880, "link": "https://stackoverflow.com/questions/50644880/cannot-recursively-call-into-core-when-trying-to-achieve-nested-concurrency/50645596#50645596", "title": "&quot;cannot recursively call into `Core`&quot; when trying to achieve nested concurrency using Tokio", "body": "<p>One primary conceptual issue I see is that you should not be creating arbitrary <code>Core</code>s. You want to share these as much as possible because that's how Tokio communicates between different futures.</p>\n\n<p>Creating a single core and using it for the HTTP request and the overall command is the right thing to do.</p>\n\n<h3>hyper 0.11</h3>\n\n<p><a href=\"https://github.com/hyperium/hyper/issues/1443\" rel=\"nofollow noreferrer\">hyper 0.11 is not compatible with the tokio crate</a>. Instead, you need to use the component pieces of Tokio:</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\nextern crate tokio_timer;\n\nuse futures::{Future, Stream};\nuse hyper::Client;\nuse std::{\n    io::{self, Write}, time::{Duration, Instant},\n};\nuse tokio_core::reactor::Core;\nuse tokio_timer::Delay;\n\nfn main() {\n    let when = Instant::now() + Duration::from_secs(1);\n\n    let mut core = Core::new().expect(\"Could not achieve criticality\");\n    let handle = core.handle();\n\n    let command = Delay::new(when)\n        .map_err(|e| panic!(\"timer failed; err={:?}\", e))\n        .and_then(move |_| {\n            let client = Client::new(&amp;handle);\n\n            let uri = \"http://httpbin.org/ip\".parse().unwrap();\n            client.get(uri).and_then(|res| {\n                println!(\"Response: {}\", res.status());\n\n                res.body()\n                    .for_each(|chunk| io::stdout().write_all(&amp;chunk).map_err(From::from))\n            })\n        });\n\n    core.run(command).expect(\"Meltdown occurred\");\n}\n</code></pre>\n\n<pre><code>[dependencies]\nfutures = \"0.1\"\nhyper = \"0.11.27\"\ntokio-core = \"0.1.17\"\ntokio-timer = \"0.2.3\"\n</code></pre>\n\n<h3>hyper 0.12</h3>\n\n<p>Using hyper 0.12, it looks like this:</p>\n\n<pre><code>extern crate hyper;\nextern crate tokio;\n\nuse hyper::Client;\nuse std::{\n    error::Error, io::{self, Write}, time::{Duration, Instant},\n};\nuse tokio::{\n    prelude::{Future, Stream}, timer::Delay,\n};\n\ntype MyError = Box&lt;Error + Send + Sync&gt;;\n\nfn main() {\n    let when = Instant::now() + Duration::from_secs(1);\n\n    let command = Delay::new(when).from_err::&lt;MyError&gt;().and_then(move |_| {\n        let client = Client::new();\n\n        let uri = \"http://httpbin.org/ip\".parse().unwrap();\n        client.get(uri).from_err::&lt;MyError&gt;().and_then(|res| {\n            println!(\"Response: {}\", res.status());\n\n            res.into_body()\n                .from_err::&lt;MyError&gt;()\n                .for_each(|chunk| io::stdout().write_all(&amp;chunk).map_err(From::from))\n        })\n    });\n\n    tokio::run(command.map_err(|e| panic!(\"Error: {}\", e)));\n}\n</code></pre>\n\n<pre><code>[dependencies]\nhyper = \"0.12.0\"\ntokio = \"0.1.6\"\n</code></pre>\n"}], "owner": {"reputation": 2882, "user_id": 544454, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/ieSjS.png?s=128&g=1", "display_name": "mchlstckl", "link": "https://stackoverflow.com/users/544454/mchlstckl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 374, "favorite_count": 0, "accepted_answer_id": 50645596, "answer_count": 1, "score": 2, "last_activity_date": 1528361164, "creation_date": 1527860812, "last_edit_date": 1528361164, "question_id": 50644880, "link": "https://stackoverflow.com/questions/50644880/cannot-recursively-call-into-core-when-trying-to-achieve-nested-concurrency", "title": "&quot;cannot recursively call into `Core`&quot; when trying to achieve nested concurrency using Tokio", "body": "<p>I'm building a service that periodically makes an HTTP request. I'm using <code>tokio::timer::Delay</code> as a periodic trigger and hyper to make the HTTP call.</p>\n\n<p>Using them together gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'tokio-runtime-worker-1' panicked at 'cannot recursively call into `Core`', libcore/option.rs:960:5\n</code></pre>\n\n<p>How can I make this work? </p>\n\n<p>Below is a simplified version of the service.</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio;\nextern crate tokio_core;\nextern crate tokio_timer;\n\nuse futures::{Future, Stream};\nuse hyper::Client;\nuse tokio_core::reactor::Core;\n\nuse std::time::{Duration, Instant};\nuse tokio::timer::Delay;\nuse std::io::{self, Write};\n\nfn main() {\n    let when = Instant::now() + Duration::from_secs(1);\n\n    tokio::run({\n        Delay::new(when)\n            .map_err(|e| panic!(\"timer failed; err={:?}\", e))\n            .and_then(move |_| {\n                let mut core = Core::new().unwrap();\n                let client = Client::new(&amp;core.handle());\n\n                let uri = \"http://httpbin.org/ip\".parse().unwrap();\n                let work = client.get(uri).and_then(|res| {\n                    println!(\"Response: {}\", res.status());\n\n                    res.body()\n                        .for_each(|chunk| io::stdout().write_all(&amp;chunk).map_err(From::from))\n                });\n                core.run(work).unwrap();\n                Ok(())\n            })\n    })\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[dependencies]\nfutures = \"0.1\"\nhyper = \"0.11\"\ntokio-core = \"0.1\"\ntokio-timer = \"0.1\"\ntokio = \"0.1\"\nserde = \"1.0.19\"\nserde_derive = \"1.0.19\"\nserde_json = \"1.0.19\"\nhyper-tls = \"0.1.3\"\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1566166398, "last_edit_date": 1566166398, "creation_date": 1527859320, "answer_id": 50644451, "question_id": 50644111, "link": "https://stackoverflow.com/questions/50644111/does-this-error-message-mean-i-can-use-pattern-matching-in-for-loops/50644451#50644451", "title": "Does this error message mean I can use pattern matching in for loops?", "body": "<p>Yes, <a href=\"https://doc.rust-lang.org/book/ch18-01-all-the-places-for-patterns.html\" rel=\"nofollow noreferrer\">you can use patterns in many places</a>, but not all of them allow you to conditionally branch when there are multiple possible patterns.</p>\n\n<p>A <code>for</code> loop is one place where you cannot add conditions. That's what the error is telling you with \"refutable pattern\": there's a pattern that will not be handled. Instead, you mostly use the pattern to perform <em>destructuring</em> of the loop variable:</p>\n\n<pre><code>struct Thing {\n    foo: u8,\n}\n\nfn main() {\n    let things = vec![Thing { foo: 1 }, Thing { foo: 2 }, Thing { foo: 3 }];\n    for Thing { foo } in things {\n        println!(\"{}\", foo);\n    }\n}\n</code></pre>\n\n<p>Conditional:</p>\n\n<ul>\n<li><code>match</code> </li>\n<li><code>if let</code></li>\n<li><code>while let</code></li>\n</ul>\n\n<p>Unconditional:</p>\n\n<ul>\n<li><code>for</code></li>\n<li><code>let</code></li>\n<li>function parameters</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 16, "last_activity_date": 1566166374, "last_edit_date": 1566166374, "creation_date": 1527859545, "answer_id": 50644524, "question_id": 50644111, "link": "https://stackoverflow.com/questions/50644111/does-this-error-message-mean-i-can-use-pattern-matching-in-for-loops/50644524#50644524", "title": "Does this error message mean I can use pattern matching in for loops?", "body": "<p>You can use <em>patterns</em> as the binding in a <code>for</code> loop, but not <em>refutable</em> patterns. <a href=\"https://doc.rust-lang.org/book/ch18-02-refutability.html\" rel=\"nofollow noreferrer\">The difference between refutable and irrefutable patterns is described here</a>, but the gist of it is, if a pattern could fail, you can't use it in a <code>let</code> statement or a <code>for</code> loop. If a pattern <em>can't</em> fail, you can't (currently) use it in <code>if let</code> or <code>while let</code>. (This last may be <a href=\"https://github.com/rust-lang/rust/issues/44495\" rel=\"nofollow noreferrer\">changed in a future version</a> to issue a warning instead of failing.)</p>\n\n<p>An example of an irrefutable pattern being used in a <code>for</code> loop might be something like this:</p>\n\n<pre><code>let mut numbers = HashMap::new();\nnumbers.insert(\"one\", 1);\nnumbers.insert(\"two\", 2);\nnumbers.insert(\"three\", 3);\n\nfor (name, number) in &amp;numbers {\n    println!(\"{}: {}\", name, number);\n}\n</code></pre>\n\n<p><code>(name, number)</code> is an irrefutable pattern, because any place where it type checks, it will match. It type checks here because the items being iterated over (defined by the implementation of <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a> for <code>&amp;HashMap</code>) are tuples. You could also write the above as</p>\n\n<pre><code>for tuple in &amp;numbers {\n    let (name, number) = tuple;\n    println!(\"{}: {}\", name, number);\n}\n</code></pre>\n\n<p>because <code>let</code> is another place where only irrefutable patterns are allowed.</p>\n"}, {"tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 3, "last_activity_date": 1527862231, "last_edit_date": 1527862231, "creation_date": 1527859629, "answer_id": 50644546, "question_id": 50644111, "link": "https://stackoverflow.com/questions/50644111/does-this-error-message-mean-i-can-use-pattern-matching-in-for-loops/50644546#50644546", "title": "Does this error message mean I can use pattern matching in for loops?", "body": "<blockquote>\n  <p>But what is the right grammar to do so?</p>\n</blockquote>\n\n<p>This gets the result you want:</p>\n\n<pre><code>fn main() {\n    struct EOF;\n    let lines = vec![Ok(\"line 1\"), Ok(\"line 2\"), Err(EOF)];\n    for line in lines.into_iter().flat_map(|e| e) {\n        println!(\"{}\", line);\n    }\n}\n</code></pre>\n\n<p>Note that you can use <code>flat_map</code> here because <code>Result</code> implements the <code>into_iter</code> method provided by the <code>IntoIterator</code> trait. </p>\n\n<p>This is another option using <code>if let</code>:</p>\n\n<pre><code>fn main() {\n    struct EOF;\n    let lines = vec![Ok(\"line 1\"), Ok(\"line 2\"), Err(EOF)];\n    for result in lines {\n        if let Ok(line) = result {\n            println!(\"{}\", line);\n        }\n    }\n}\n</code></pre>\n\n<p>You may also want to stop iteration on an <code>Err</code> case:</p>\n\n<pre><code>fn main() {\n    struct EOF;\n    let lines = vec![Ok(\"line 1\"), Ok(\"line 2\"), Err(EOF), Ok(\"line 3\") ];\n    let mut lines_iter = lines.into_iter();\n    while let Some(Ok(line)) = lines_iter.next() {\n        println!(\"{}\", line);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1463, "favorite_count": 0, "accepted_answer_id": 50644524, "answer_count": 3, "score": 14, "last_activity_date": 1566166398, "creation_date": 1527858315, "last_edit_date": 1527860000, "question_id": 50644111, "link": "https://stackoverflow.com/questions/50644111/does-this-error-message-mean-i-can-use-pattern-matching-in-for-loops", "title": "Does this error message mean I can use pattern matching in for loops?", "body": "<p>I do not expect the following code to work, but as part of grammar exploration, I tried in <a href=\"https://play.rust-lang.org/?gist=1ad622f71b108b8b6dccd9b650688635&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">playground</a>:</p>\n\n<pre><code>fn main() {\n    struct EOF {};\n    let lines = vec![Ok(\"line 1\"), Ok(\"line 2\"), Err(EOF {})];\n    for Ok(line) in lines {\n        println!(\"{}\", line);\n    }\n}\n</code></pre>\n\n<p>The error message is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0005]: refutable pattern in `for` loop binding: `Err(_)` not covered\n --&gt; src/main.rs:4:9\n  |\n4 |     for Ok(line) in lines {\n  |         ^^^^^^^^ pattern `Err(_)` not covered\n</code></pre>\n\n<p>According to the message above it looks like I only need to add a match arm for the <code>Err</code> case. But what is the right grammar to do so?</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527853356, "post_id": 50642574, "comment_id": 88295359, "body": "I don&#39;t understand, rustc is the rust compiler not a C compiler. use <code>rustc-flags</code> is pointless in your case."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527853432, "post_id": 50642574, "comment_id": 88295403, "body": "You should use <a href=\"https://crates.io/crates/openmp-sys\" rel=\"nofollow noreferrer\"><code>openmp-sys</code></a>"}, {"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1527853527, "post_id": 50642574, "comment_id": 88295458, "body": "Yup, reading more closely, <code>rustc-flags</code> isn&#39;t what I want at all, was just looking for a way of adding flags to the <code>cc</code> command that gets called during the build. Will look into <code>openmp-sys</code> though, wasn&#39;t aware of that, thanks."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527853583, "post_id": 50642574, "comment_id": 88295504, "body": "the documentation of openmp-sys tell you how to do it <code>cc.flag(&amp;env::var(&quot;DEP_OPENMP_FLAG&quot;).unwrap());</code>"}, {"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527853769, "post_id": 50642574, "comment_id": 88295612, "body": "Unfortunately I&#39;m not building the C code with the <code>cc</code> crate (it&#39;s built using its own build scripts), so just need the flag to be present when linking agains the built libs (unless the <code>cc</code> crate can be used for that, will check)."}], "answers": [{"comments": [{"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "edited": false, "score": 2, "creation_date": 1527876441, "post_id": 50646443, "comment_id": 88308479, "body": "Thanks, that gets me a bit closer. The reason I was trying to specify it in build.rs is that it needs to be conditional, as the library I&#39;m linking against can be built both with/without openmp, which is detected in <code>build.rs</code>. Is the only option to write a <code>.cargo&#47;config</code> at compile time from within my build.rs which contains different link args as necessary?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "edited": false, "score": 1, "creation_date": 1527878434, "post_id": 50646443, "comment_id": 88309442, "body": "@DaveChallis I don&#39;t even know if that would work. What&#39;s the harm in adding extra linker flags all the time though? They should just be ignored since none of the symbols are needed."}, {"owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "edited": false, "score": 1, "creation_date": 1527887819, "post_id": 50646443, "comment_id": 88313043, "body": "true, there should be no harm in it, will go down that route for now."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 14, "last_activity_date": 1527865848, "creation_date": 1527865848, "answer_id": 50646443, "question_id": 50642574, "link": "https://stackoverflow.com/questions/50642574/how-can-i-specify-linker-flags-arguments-in-a-build-script/50646443#50646443", "title": "How can I specify linker flags/arguments in a build script?", "body": "<p>You cannot. Instead, you can use a Cargo <a href=\"https://doc.rust-lang.org/cargo/reference/config.html\" rel=\"noreferrer\">configuration file</a>.</p>\n\n<h3>.cargo/config</h3>\n\n<pre><code>[build]\nrustflags = [\"-C\", \"link-args=-fsome-artisanal-option\"]\n</code></pre>\n\n<h3>Execution</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --verbose\n   Compiling example v0.1.0 (file:///private/tmp/example)\n     Running `rustc ...blah blah blah... -C link-args=-fsome-artisanal-option`\nerror: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-m64\" ...blah blah blah... \"-fsome-artisanal-option\"\n  = note: clang: error: unknown argument: '-fsome-artisanal-option'\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39310905/155423\">How to get the linker to produce a map file using Cargo</a></li>\n<li><a href=\"https://stackoverflow.com/q/32029486/155423\">How can I globally configure a Cargo profile option?</a></li>\n<li><a href=\"https://stackoverflow.com/q/47663961/155423\">Is it possible to specify `panic = &quot;abort&quot;` for a specific target?</a></li>\n</ul>\n"}], "owner": {"reputation": 2865, "user_id": 171520, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/3da837d1227e7df8153c68d502f64994?s=128&d=identicon&r=PG", "display_name": "Dave Challis", "link": "https://stackoverflow.com/users/171520/dave-challis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6248, "favorite_count": 1, "accepted_answer_id": 50646443, "answer_count": 1, "score": 8, "last_activity_date": 1610805154, "creation_date": 1527853033, "last_edit_date": 1527865304, "question_id": 50642574, "link": "https://stackoverflow.com/questions/50642574/how-can-i-specify-linker-flags-arguments-in-a-build-script", "title": "How can I specify linker flags/arguments in a build script?", "body": "<p>I'm using Rust, <a href=\"https://crates.io/crates/bindgen\" rel=\"noreferrer\">bindgen</a>, and a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"noreferrer\">build script</a> to work on some FFI bindings to a library.</p>\n\n<p>This library is built using <a href=\"https://www.openmp.org/\" rel=\"noreferrer\">OpenMP</a>, so when linking against it, I'd normally pass the <code>-fopenmp</code> flag to the compiler.</p>\n\n<p>How can I get this flag to be set by <code>build.rs</code> when the library is built by Cargo?</p>\n\n<p>Currently, building using Cargo fails, with the failing command being something like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cc -Wl,--as-needed -Wl,-z,noexecstack -m64 -l gomp -l stdc++\n...skipping dozens of paths/files...\n -Wl,-Bdynamic -l dl -l rt -l pthread -l gcc_s -l c -l m -l rt -l pthread -l util\n</code></pre>\n\n<p>which fails with hundreds of <code>undefined reference to 'GOMP_parallel_end'</code> errors.</p>\n\n<p>Rerunning the generated command above with the <code>-fopenmp</code> flag manually added succeeds.</p>\n\n<p>I can specify the flag using <code>RUSTFLAGS='-C link-args=-fopenmp'</code> before compiling, but is there a way of specifying it from within <code>build.rs</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527823775, "post_id": 50635346, "comment_id": 88281284, "body": "@Shepmaster This question is different as the desired solution was to use <code>interval::MINUTE</code> vs <code>Interval::Minute as i32</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1527824067, "post_id": 50635346, "comment_id": 88281349, "body": "Your literal question is &quot;how to use an enum as a value&quot;. That&#39;s what the duplicate is. You happened to learn about an alternate solution you like and that&#39;s great, but that solution has <i>nothing to do with enums</i>."}], "answers": [{"comments": [{"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "edited": false, "score": 0, "creation_date": 1527823385, "post_id": 50635377, "comment_id": 88281209, "body": "Thank you! Is it also true that <code>interval::MINUTE</code> adds no overhead (zero cost abstraction) compared to using an int value of <code>60</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "edited": false, "score": 0, "creation_date": 1527824207, "post_id": 50635377, "comment_id": 88281381, "body": "@Greg what abstraction? <code>interval::MINUTE</code> <b>is an integer</b>."}, {"owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "reply_to_user": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "edited": false, "score": 1, "creation_date": 1527824287, "post_id": 50635377, "comment_id": 88281389, "body": "@Greg Constants (<code>const</code>) are inlined in-place by the compiler wherever they&#39;re used, at compile time, so they have no fixed address in memory like a local variable would. I don&#39;t know if that&#39;s what you&#39;re asking."}, {"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "edited": false, "score": 0, "creation_date": 1527824333, "post_id": 50635377, "comment_id": 88281399, "body": "That clears things up, thank you"}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 1, "last_activity_date": 1527820870, "creation_date": 1527820870, "answer_id": 50635377, "question_id": 50635346, "link": "https://stackoverflow.com/questions/50635346/how-to-use-enums-as-a-value-alias-in-rust/50635377#50635377", "title": "How to use enums as a value alias in Rust?", "body": "<p>You can cast it to an integer type:</p>\n\n<pre><code>let minute = Interval::Minute as i32;\n</code></pre>\n\n<p>Another option is to use <code>const</code>s within a module, depending on what you're trying to do:</p>\n\n<pre><code>mod interval {\n    pub const MINUTE: i32 = 60;\n}\n\nfn main() {\n    let interval = 120;\n    let minute = interval::MINUTE;\n    println!(\"Number of minutes: {:?}\", interval/minute);\n}\n</code></pre>\n"}], "owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 518, "favorite_count": 1, "closed_date": 1527821839, "accepted_answer_id": 50635377, "answer_count": 1, "score": 2, "last_activity_date": 1527820870, "creation_date": 1527820609, "question_id": 50635346, "link": "https://stackoverflow.com/questions/50635346/how-to-use-enums-as-a-value-alias-in-rust", "closed_reason": "Duplicate", "title": "How to use enums as a value alias in Rust?", "body": "<p>In the below code, how to use <code>Interval::Minute</code> as <code>60</code>?</p>\n\n<pre><code>#[derive(Debug)]\nenum Interval {\n    Minute = 60,\n    Hour = 3600,\n    Day = 86400,\n}\n\n\nfn main() {\n    let interval = 120;\n    let minute = Interval::Minute;\n    println!(\"Number of minutes: {:?}\", interval/minute);\n}\n</code></pre>\n\n<p>That is, how to use it as an alias for the underlying value?</p>\n"}, {"tags": ["hashmap", "rust"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1527813125, "post_id": 50634546, "comment_id": 88279254, "body": "Does <code>client.get_tracks(id).into_iter()</code> work?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1527814485, "post_id": 50634546, "comment_id": 88279548, "body": "The <a href=\"https://doc.rust-lang.org/std/iter/trait.Extend.html#tymethod.extend\" rel=\"nofollow noreferrer\"><code>extend</code></a> method, which is from the <code>Extend</code> trait, takes anything that implements <code>IntoIterator</code> -- and <code>HashMap</code> does. So <code>track_nums.extend(client.get_tracks(id))</code> should work without the <code>.iter()</code>."}, {"owner": {"reputation": 179, "user_id": 693861, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/1872cbb4792db3f7a5f25cbf75b56c3f?s=128&d=identicon&r=PG", "display_name": "user693861", "link": "https://stackoverflow.com/users/693861/user693861"}, "edited": false, "score": 0, "creation_date": 1527814584, "post_id": 50634546, "comment_id": 88279570, "body": "<code>into_iter</code> worked, thanks!  There&#39;s a good explanation of <code>into_iter</code> here for future reference: <a href=\"https://stackoverflow.com/questions/34733811/what-is-the-difference-between-iter-and-into-iter\" title=\"what is the difference between iter and into iter\">stackoverflow.com/questions/34733811/&hellip;</a>"}, {"owner": {"reputation": 179, "user_id": 693861, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/1872cbb4792db3f7a5f25cbf75b56c3f?s=128&d=identicon&r=PG", "display_name": "user693861", "link": "https://stackoverflow.com/users/693861/user693861"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527814634, "post_id": 50634546, "comment_id": 88279579, "body": "@trentcl, that worked too.  Thanks!"}], "owner": {"reputation": 179, "user_id": 693861, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/1872cbb4792db3f7a5f25cbf75b56c3f?s=128&d=identicon&r=PG", "display_name": "user693861", "link": "https://stackoverflow.com/users/693861/user693861"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 930, "favorite_count": 0, "closed_date": 1527814774, "answer_count": 0, "score": 3, "last_activity_date": 1527814850, "creation_date": 1527812884, "last_edit_date": 1527814850, "question_id": 50634546, "link": "https://stackoverflow.com/questions/50634546/extend-hashmap-with-contents-of-another-hashmap", "closed_reason": "Duplicate", "title": "Extend HashMap with contents of another HashMap", "body": "<p>I have a function that returns a <code>HashMap&lt;String, u64&gt;</code> and I want to extend another <code>HashMap&lt;String, u64&gt;</code> with the return value of that function:</p>\n\n<pre><code>pub fn find_album(&amp;self, artist: String, album: String) -&gt; Vec&lt;String&gt;\npub fn get_tracks(&amp;self, album_id: String) -&gt; HashMap&lt;String, u64&gt;\n</code></pre>\n\n\n\n<pre><code>let mut track_nums: HashMap&lt;String, u64&gt; = HashMap::new();\nfor id in client.find_album(artist, album) {\n    track_nums.extend(client.get_tracks(id).iter());\n}\n</code></pre>\n\n<p>This gives me an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    error[E0271]: type mismatch resolving `&lt;std::collections::hash_map::Iter&lt;'_, std::string::String, u64&gt; as std::iter::IntoIterator&gt;::Item == (std::string::String, u64)`\n  --&gt; src/main.rs:23:20\n   |\n23 |         track_nums.extend(client.get_tracks(id).iter());\n   |                    ^^^^^^ expected reference, found struct `std::string::String`\n   |\n   = note: expected type `(&amp;std::string::String, &amp;u64)`\n          found type `(std::string::String, u64)`\n</code></pre>\n\n<p>What's the correct way to extend a <code>HashMap</code> with all of the <code>(key, value)</code> pairs from another <code>HashMap</code>?</p>\n"}, {"tags": ["rust", "borrowing"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1527808433, "post_id": 50633742, "comment_id": 88278204, "body": "Something like <a href=\"https://play.rust-lang.org/?gist=ef79aaf7926aa03b5127d26302efbe7a&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">this</a>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1527809738, "post_id": 50633742, "comment_id": 88278492, "body": "You need the same implementation to  work for both types of key?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527812918, "post_id": 50633742, "comment_id": 88279212, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/45786717/155423\">How to implement HashMap with two keys?</a>. See also the answer to <a href=\"https://stackoverflow.com/a/50478038/155423\">How to avoid temporary allocations when using complex key for HashMap?</a> which is the same logic. If you disagree, please <a href=\"https://stackoverflow.com/posts/50633742/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1527817098, "post_id": 50633742, "comment_id": 88280044, "body": "The <a href=\"https://play.rust-lang.org/?gist=3eb216ccefb1533fea1a0e1dff5627f8&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">duplicate applied to your situation</a>."}, {"owner": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527832048, "post_id": 50633742, "comment_id": 88283535, "body": "@PeterHall Sorry I wasn&#39;t specific enough. My intent was not to clone the string."}], "owner": {"reputation": 1792, "user_id": 1525398, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5879d46c56c285c31438db57ab24049e?s=128&d=identicon&r=PG", "display_name": "rvidal", "link": "https://stackoverflow.com/users/1525398/rvidal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 300, "favorite_count": 0, "closed_date": 1527860352, "answer_count": 0, "score": 4, "last_activity_date": 1527860360, "creation_date": 1527806224, "last_edit_date": 1527832230, "question_id": 50633742, "link": "https://stackoverflow.com/questions/50633742/how-can-i-implement-borrow-for-an-enum-variant-so-that-i-can-use-a-string-slice", "closed_reason": "Duplicate", "title": "How can I implement Borrow for an enum variant so that I can use a string slice as a key for a HashMap?", "body": "<p>In the following scenario:</p>\n\n<pre><code>#[derive(PartialEq, Eq, Hash)]\nstruct Key(String);\n\nfn get_from_map(map: HashMap&lt;Key, i32&gt;, key: &amp;str) {\n    // ???\n}\n</code></pre>\n\n<p>I can implement this by using the <code>Borrow</code> trait, so I don't need a <code>&amp;Key</code>, just a <code>&amp;str</code> is fine:</p>\n\n<pre><code>impl Borrow&lt;str&gt; for Key {\n    fn borrow(&amp;self) -&gt; &amp;str {\n        &amp;self.0\n    }\n}\n\nfn get_from_map(map: HashMap&lt;Key, i32&gt;, key: &amp;str) {\n    map.get(key);\n}\n</code></pre>\n\n<p>However, when my key is an enum, there's no way to implement <code>Borrow</code>:</p>\n\n<pre><code>#[derive(PartialEq, Eq, Hash)]\nenum Key {\n    Text(String),\n    Binary(Vec&lt;u8&gt;)\n}\n\nfn get_from_map(map: HashMap&lt;Key, i32&gt;, key: &amp;str) {\n    // ???\n}\n</code></pre>\n\n<p>Is there an ergonomic way to implement <code>get_from_map</code>, without cloning <code>key</code>, so that it somehow only looks for <code>Text</code> keys?</p>\n\n<p>My first instinct is implement <code>Borrow</code> for a <code>BorrowedKey</code> newtype but that doesn't seem to work since <code>Borrow</code> needs to return a reference.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527801472, "post_id": 50631189, "comment_id": 88276104, "body": "Rust doesn&#39;t have anything similar to Java&#39;s <code>final</code>, since it doesn&#39;t support inheritance and variables are immutable by default. Java doesn&#39;t have anything similar to Rust&#39;s <code>const</code>, since Java tends to rely on the JVM to optimize things rather than doing compile time evaluation. Rust&#39;s <code>const</code> is more like C++&#39;s <code>constexpr</code> and Java&#39;s <code>final</code> is more like C++&#39;s <code>const</code>. Clear as mud!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 17, "last_activity_date": 1537812166, "last_edit_date": 1537812166, "creation_date": 1527795950, "answer_id": 50631712, "question_id": 50631189, "link": "https://stackoverflow.com/questions/50631189/why-are-const-atomic-variables-not-updated-but-static-atomic-variables-are/50631712#50631712", "title": "Why are const atomic variables not updated, but static atomic variables are?", "body": "<p>A <code>static</code> variable is guaranteed to have a single instance and you can take a reference to it. A <code>const</code> variable does not have this guarantee and the compiler is allowed to have zero, one, or multiple instances of it.</p>\n\n<p>In your case, the code is equivalent to:</p>\n\n<pre><code>println!(\"{}\", AtomicUsize::new(0).load(Ordering::SeqCst));\nprintln!(\"{}\", AtomicUsize::new(0).fetch_add(10, Ordering::SeqCst));\nprintln!(\"{}\", AtomicUsize::new(0).load(Ordering::SeqCst));\n</code></pre>\n\n<p>Since each value is created and thrown away, no changes from one propagate to the other.</p>\n\n<p>In some ways, you can think of a <code>const</code> variable like a C or C++ <code>#define</code> \u2014 conceptually the value is just pasted wherever it's used.</p>\n\n<p><a href=\"https://github.com/rust-lang-nursery/rust-clippy/issues/1560\" rel=\"noreferrer\">Clippy 0.0.211 has a lint for this case</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: a const item should never be interior mutable\n --&gt; src/main.rs:3:1\n  |\n3 | const SOME_VAR: AtomicUsize = AtomicUsize::new(0);\n  | -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  | |\n  | help: make this a static item: `static`\n  |\n  = note: #[deny(declare_interior_mutable_const)] on by default\n  = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#declare_interior_mutable_const\n\nerror: a const item with interior mutability should not be borrowed\n --&gt; src/main.rs:6:20\n  |\n6 |     println!(\"{}\", SOME_VAR.load(Ordering::SeqCst));\n  |                    ^^^^^^^^\n  |\n  = note: #[deny(borrow_interior_mutable_const)] on by default\n  = help: assign this const to a local or static variable, and use the variable here\n  = help: for further information visit https://rust-lang-nursery.github.io/rust-clippy/v0.0.211/index.html#borrow_interior_mutable_const\n</code></pre>\n\n<blockquote>\n  <p>In Java, I can use a <code>final HashMap</code></p>\n</blockquote>\n\n<p>Yes, you can make a <strong>non-thread-safe</strong> <code>HashMap</code> very easily in Java. Rust doesn't want to make it easy to create code that can lead to memory unsafety. You need to protect the type with appropriate safety, such as by a <code>Mutex</code>, or you need to dip into <code>unsafe</code> code if <em>you the programmer</em> guarantee that a global value will only ever be used by one thread.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52469986/155423\">Why do changes to a const variable not persist between usages?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27221504/155423\">How can you make a safe static singleton in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 255, "user_id": 9812873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dc67b1687d32917195be7029e4440ad?s=128&d=identicon&r=PG&f=1", "display_name": "misnomer___", "link": "https://stackoverflow.com/users/9812873/misnomer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1218, "favorite_count": 0, "accepted_answer_id": 50631712, "answer_count": 1, "score": 16, "last_activity_date": 1537812166, "creation_date": 1527793596, "last_edit_date": 1527796123, "question_id": 50631189, "link": "https://stackoverflow.com/questions/50631189/why-are-const-atomic-variables-not-updated-but-static-atomic-variables-are", "title": "Why are const atomic variables not updated, but static atomic variables are?", "body": "<p>I have this code:</p>\n\n<pre><code>use std::sync::atomic::{AtomicUsize, Ordering};\n\nconst SOME_VAR: AtomicUsize = AtomicUsize::new(0);\n\nfn main() {\n    println!(\"{}\", SOME_VAR.load(Ordering::SeqCst));\n    println!(\"{}\", SOME_VAR.fetch_add(10, Ordering::SeqCst));\n    println!(\"{}\", SOME_VAR.load(Ordering::SeqCst));\n}\n</code></pre>\n\n<p>This prints <code>0 0 0</code> without any errors. In Java, I can use a <code>final HashMap</code> and add <code>(k, v)</code> to it. In Rust, I am surprised that the compiler is not yelling at me but also does not increment my atomic value. Am I doing something wrong here?</p>\n\n<p>If I use a <code>static</code>: </p>\n\n<pre><code>static SOME_VAR: AtomicUsize = AtomicUsize::new(0);\n</code></pre>\n\n<p>I get the result <code>0 0 10</code>. Why does it not work with <code>const</code>?</p>\n"}, {"tags": ["intellij-idea", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "edited": false, "score": 2, "creation_date": 1527779989, "post_id": 50627245, "comment_id": 88265316, "body": "In <a href=\"https://github.com/tonsky/FiraCode/wiki/Intellij-products-instructions\" rel=\"nofollow noreferrer\">FiraCode</a> there re instructions for IntelliJ. In my case (version &gt; 2018.1) that was enough:     Enable in <code>Settings \u2192 Editor \u2192 Color Scheme \u2192 Color Scheme Font \u2192 Enable Font Ligatures. </code>     Select Fira Code as &quot;Primary font&quot; under <code>Settings \u2192 Editor \u2192 Color Scheme \u2192 Color Scheme Font \u2192 Font.</code>"}], "tags": [], "owner": {"reputation": 644, "user_id": 1473453, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/ZMA0Q.jpg?s=128&g=1", "display_name": "Sternjobname", "link": "https://stackoverflow.com/users/1473453/sternjobname"}, "is_accepted": false, "score": 4, "last_activity_date": 1527778637, "creation_date": 1527778637, "answer_id": 50627245, "question_id": 50627201, "link": "https://stackoverflow.com/questions/50627201/how-to-show-and-as-special-characters-in-the-intellij-idea-ide/50627245#50627245", "title": "How to show -&gt; and =&gt; as special characters in the IntelliJ Idea IDE?", "body": "<p>You're going to want to use a font which supports ligatures, such as Fira Code: <a href=\"https://github.com/tonsky/FiraCode\" rel=\"nofollow noreferrer\">https://github.com/tonsky/FiraCode</a></p>\n"}, {"tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": true, "score": 5, "last_activity_date": 1527781347, "last_edit_date": 1527781347, "creation_date": 1527780194, "answer_id": 50627776, "question_id": 50627201, "link": "https://stackoverflow.com/questions/50627201/how-to-show-and-as-special-characters-in-the-intellij-idea-ide/50627776#50627776", "title": "How to show -&gt; and =&gt; as special characters in the IntelliJ Idea IDE?", "body": "<p>You are searching for <a href=\"https://en.wikipedia.org/wiki/Typographic_ligature\" rel=\"noreferrer\">font ligatures</a>. </p>\n\n<blockquote>\n  <p>In writing and typography, a ligature occurs where two or more graphemes or letters are joined as a single glyph. An example is the character <code>\u00e6</code> as used in English, in which the letters <code>a</code> and <code>e</code> are joined. </p>\n</blockquote>\n\n<p>IntelliJ supports this by default in the <code>Settings -&gt; Editor -&gt; Font -&gt; Enable font ligatures</code>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/Fd3Na.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/Fd3Na.png\" alt=\"enter image description here\"></a></p>\n\n<p>Fonts supporting ligatures I'm aware of are:</p>\n\n<ul>\n<li><a href=\"https://github.com/tonsky/FiraCode\" rel=\"noreferrer\">Fira Code</a></li>\n<li><a href=\"https://github.com/be5invis/Iosevka\" rel=\"noreferrer\">Iosevka</a></li>\n<li><a href=\"https://github.com/i-tu/Hasklig\" rel=\"noreferrer\">Hasklig</a></li>\n<li><a href=\"https://github.com/fabrizioschiavi/pragmatapro\" rel=\"noreferrer\">PragmataPro</a></li>\n<li><a href=\"https://github.com/larsenwork/monoid\" rel=\"noreferrer\">monoid</a></li>\n<li><a href=\"https://github.com/ToxicFrog/Ligaturizer\" rel=\"noreferrer\">Ligaturizer</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "is_accepted": false, "score": 0, "last_activity_date": 1545667675, "creation_date": 1545667675, "answer_id": 53915552, "question_id": 50627201, "link": "https://stackoverflow.com/questions/50627201/how-to-show-and-as-special-characters-in-the-intellij-idea-ide/53915552#53915552", "title": "How to show -&gt; and =&gt; as special characters in the IntelliJ Idea IDE?", "body": "<p>Enable in Settings \u2192 Editor \u2192 Color Scheme \u2192 Color Scheme Font \u2192 Enable Font Ligatures. Select Fira Code as \"Primary font\" under Settings \u2192 Editor \u2192 Color Scheme \u2192 Color Scheme Font \u2192 Font.</p>\n"}], "owner": {"reputation": 1680, "user_id": 1789532, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/a2e5b7bb0f82caeda63a07dc6c8f58ae?s=128&d=identicon&r=PG", "display_name": "dilvan", "link": "https://stackoverflow.com/users/1789532/dilvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1794, "favorite_count": 1, "accepted_answer_id": 50627776, "answer_count": 3, "score": 4, "last_activity_date": 1545669287, "creation_date": 1527778494, "last_edit_date": 1545669287, "question_id": 50627201, "link": "https://stackoverflow.com/questions/50627201/how-to-show-and-as-special-characters-in-the-intellij-idea-ide", "title": "How to show -&gt; and =&gt; as special characters in the IntelliJ Idea IDE?", "body": "<p>How can I show some symbols as special characters in the IntelliJ editor (for the Rust and Java languages), for example <code>-&gt;</code> as <code>\u2192</code>?</p>\n"}, {"tags": ["rust", "match", "warnings"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1527771055, "post_id": 50624541, "comment_id": 88259392, "body": "I mean, it does give you a warning. <i>Should</i> unreachable code be an error?"}, {"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527778335, "post_id": 50624541, "comment_id": 88264291, "body": "@trentcl I am not saying it should be an error necessarily but maybe I was expecting that Rust would never let a slip happen(Catches a lot issues at compile time) even if it was only a piece of dead code. But, yes the definition put up by Boiethios justifies it real crisp."}], "answers": [{"comments": [{"owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "edited": false, "score": 0, "creation_date": 1527778426, "post_id": 50624816, "comment_id": 88264356, "body": "the definition says it all. Thanks."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527778448, "post_id": 50624816, "comment_id": 88264375, "body": "Does rustc have a flag like <code>-Werror</code> that turns warnings into errors? That might be worth mentioning."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1527775400, "last_edit_date": 1527775400, "creation_date": 1527771146, "answer_id": 50624816, "question_id": 50624541, "link": "https://stackoverflow.com/questions/50624541/why-does-a-match-expression-not-report-an-error-for-a-catch-all-arm-prior-to/50624816#50624816", "title": "Why does a match expression not report an error for a catch-all arm (_) prior to other arms?", "body": "<p>An unreachable pattern is not strictly an error, I mean: it does not prevent the compiler from \"understanding\" the code nor does it make the code unsafe.</p>\n\n<p>Similarly, in <code>C</code>, for example, you can return a reference to a local variable without triggering an error (at least with <code>gcc</code>):</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n\nint* foo() {\n    int x = 0;\n\n    return &amp;x;\n}\n\nint main() {\n    printf(\"%d\", *foo());\n\n    return 0;\n}\n</code></pre>\n\n<p>Generally, you should not consider a warning as \"oh, that's <em>only</em> a warning, I don't care\". A warning is an actual useful advice/information given by the compiler.</p>\n\n<p>I like the definition given in <a href=\"/questions/tagged/warnings\" class=\"post-tag\" title=\"show questions tagged &#39;warnings&#39;\" rel=\"tag\">warnings</a>:</p>\n\n<blockquote>\n  <p>A warning is often issued on recognizing a potential high-risk situation, a probable misunderstanding, degraded service or imminent failure.</p>\n</blockquote>\n\n<p>because it helps to understand the difference between an error and a warning:</p>\n\n<ul>\n<li>An error <em>is</em> an error,</li>\n<li>A warning is a potential/probable error or a problematic thing.</li>\n</ul>\n\n<p>In this situation, the last arm of the <code>match</code> is some dead code, so the compiler reports it accordingly.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1527771659, "last_edit_date": 1527771659, "creation_date": 1527771325, "answer_id": 50624880, "question_id": 50624541, "link": "https://stackoverflow.com/questions/50624541/why-does-a-match-expression-not-report-an-error-for-a-catch-all-arm-prior-to/50624880#50624880", "title": "Why does a match expression not report an error for a catch-all arm (_) prior to other arms?", "body": "<p>Rust's <code>match</code> expressions are a lot more powerful than Java <code>switch</code> statements, and you can do a lot more than just matching numbers.</p>\n\n<p>In particular, it supports <em>pattern matching</em> which lets you match pieces of your data, based on either its structure or the values it contains. When you have more complex patterns to match, it's important to be able to specify the order because the patterns may overlap. For example:</p>\n\n<pre><code>let value = Some((Some(3), \"hello\"));\n\nlet s = match value {\n    None =&gt; \"Nothing there!\".to_owned(),\n    Some((Some(3), _)) =&gt; \"The number is exactly 3!\".to_owned(),\n    Some((Some(n), _)) if n &gt; 3 =&gt; format!(\"Got a number bigger than 3: {}\", n),\n    Some((None, msg)) =&gt; format!(\"Message with no number: {}\", msg),\n    Some((_, msg)) =&gt; format!(\"Got the message, ignore the rest: {}\", msg),\n    _ =&gt; \"Anything else?\".to_owned()\n};\n\nprintln!(\"result = {}\", s);\n</code></pre>\n\n<p>The last case here is actually impossible because the other branches cover everything. The compiler will give a warning, in case that isn't what you intended.</p>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 1, "accepted_answer_id": 50624816, "answer_count": 2, "score": 1, "last_activity_date": 1527775400, "creation_date": 1527770315, "last_edit_date": 1527775317, "question_id": 50624541, "link": "https://stackoverflow.com/questions/50624541/why-does-a-match-expression-not-report-an-error-for-a-catch-all-arm-prior-to", "title": "Why does a match expression not report an error for a catch-all arm (_) prior to other arms?", "body": "<p>Rust has a construct called <code>match</code> which looks very similar to <code>switch</code> in  other languages. However I observed a very peculiar behavior of <code>match</code>.</p>\n\n<pre><code>let some_u32_value = 3;\nmatch some_u32_value {\n    _ =&gt; (),\n    3 =&gt; println!(\"three\"),\n}\n</code></pre>\n\n<p><code>match</code> respects the order in which the cases/patterns are mentioned. Why does it not report an error if the default (<code>_</code>) case is at the top? It does give a warning though:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unreachable pattern\n --&gt; src/main.rs:5:9\n  |\n5 |         3 =&gt; println!(\"three\"),\n  |         ^\n  |\n  = note: #[warn(unreachable_patterns)] on by default\n</code></pre>\n\n<p>A similar construct in Java, the switch, does not preserve any order, so having a <code>default</code> prior to other cases is not an error (ignoring the fall through behavior).</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>int x = 0;\n\nswitch (x) {\n  default:\n    System.out.println(\"default\");\n    break;\n  case 0:\n      System.out.println(\"Zero\");\n} \n</code></pre>\n\n<p>Is there some purpose for doing this explicitly?</p>\n"}, {"tags": ["rust", "ownership", "borrowing"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527760420, "post_id": 50621299, "comment_id": 88252572, "body": "Please can you include more information, such as the type of the objects. It looks like this is going to be because <code>compressed_data.reserve</code> takes a mutable self reference, but that isn&#39;t clear from the code you&#39;ve provided."}, {"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1527760649, "post_id": 50621299, "comment_id": 88252737, "body": "@PeterHall Added the types, but my question is that when a function takes a mutable reference, why does that affect what the arguments are, since it should be executed first."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527765686, "post_id": 50621299, "comment_id": 88255965, "body": "@HandofC&#39;thuhlu as you didn&#39;t include <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, we can only guess, take a look at the feature NLL, <a href=\"https://stackoverflow.com/q/50251487/7076153\">stackoverflow.com/q/50251487/7076153</a>"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 37, "favorite_count": 0, "closed_date": 1527761393, "answer_count": 0, "score": 1, "last_activity_date": 1527760508, "creation_date": 1527759867, "last_edit_date": 1527760508, "question_id": 50621299, "link": "https://stackoverflow.com/questions/50621299/why-are-borrows-not-allowed-in-mutable-functions-argument", "closed_reason": "Duplicate", "title": "Why are borrows not allowed in mutable function&#39;s argument", "body": "<p>Title is probably a bit confusing, what I mean is that when I try to compile:</p>\n\n<pre><code>if folder_file_paths.len() &gt; compressed_data.len() {\n    compressed_data.reserve(folder_file_paths.len() - compressed_data.len() );\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre><code>error[E0502]: cannot borrow `compressed_data` as immutable because it is also borrowed as mutable\n   --&gt; src/ImageMatching/main.rs:33:59\n   |\n33 |         compressed_data.reserve(folder_file_paths.len() - compressed_data.len() );\n   |         ---------------                                   ^^^^^^^^^^^^^^^       - mutable borrow ends here\n   |         |                                                 |\n   |         mutable borrow occurs here                        immutable borrow occurs here\n</code></pre>\n\n<p>But I can't think of a reason why this is a problem, as shouldn't the argument be processed first, the resulting <code>usize</code> value be copied, and then the <code>reserve</code> function run?</p>\n\n<p>When would the argument of a function be calculated <em>after</em> the actual function starts executing?</p>\n\n<p>Edit: <code>folder_file_path</code> is a <code>Vec</code>, and <code>compressed_data</code> is a <code>HashMap</code></p>\n"}, {"tags": ["rust", "extern", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1527753399, "creation_date": 1527753399, "answer_id": 50619415, "question_id": 50619070, "link": "https://stackoverflow.com/questions/50619070/what-are-the-different-ways-of-specifying-the-linking-path-to-ffi-libraries-in-r/50619415#50619415", "title": "What are the different ways of specifying the linking path to FFI libraries in Rust?", "body": "<p>If you need to control how a library is found or linked to your Rust code, you should do so via a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">build script</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 323, "user_id": 3624854, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ythYB.png?s=128&g=1", "display_name": "pearzl", "link": "https://stackoverflow.com/users/3624854/pearzl"}, "is_accepted": true, "score": 3, "last_activity_date": 1527775005, "last_edit_date": 1527775005, "creation_date": 1527755567, "answer_id": 50619961, "question_id": 50619070, "link": "https://stackoverflow.com/questions/50619070/what-are-the-different-ways-of-specifying-the-linking-path-to-ffi-libraries-in-r/50619961#50619961", "title": "What are the different ways of specifying the linking path to FFI libraries in Rust?", "body": "<p>The answer to the first question is YES! If your lib file is <code>libfoo.o</code>, <code>#[link(name = \"foo\")</code> is enough in your code. There are more details in the <a href=\"https://doc.rust-lang.org/book/first-edition/ffi.html\" rel=\"nofollow noreferrer\">official documentation</a>.</p>\n\n<p>It will be relative to the lib file which is located in the current work path and the system lib path. (I cannot find this in any documentation, but I once made it successfully). You can specify a path using <code>rustc -l XX -L XX</code>. Using Cargo with a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">build script</a> is a better way.</p>\n"}], "owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 0, "accepted_answer_id": 50619961, "answer_count": 2, "score": 1, "last_activity_date": 1527775005, "creation_date": 1527752202, "last_edit_date": 1527774922, "question_id": 50619070, "link": "https://stackoverflow.com/questions/50619070/what-are-the-different-ways-of-specifying-the-linking-path-to-ffi-libraries-in-r", "title": "What are the different ways of specifying the linking path to FFI libraries in Rust?", "body": "<p>Using the below code as an example:</p>\n\n<pre><code>extern crate libc;\n\n#[link(name = \"adder\")]\nextern {\n    fn double_input(input: libc::c_int) -&gt; libc::c_int;\n}\n\nfn main() {\n    let input = 4;\n    let output = unsafe { double_input(input) };\n    println!(\"{} * 2 = {}\", input, output);\n}\n</code></pre>\n\n<p>Should <code>#[link(name = \"adder\")]</code> include a relative path to the <strong>.o / a / .h</strong> files? For example, should it be <code>#[link(name = \"../adderlib/adder\")]</code>? Is there another way to tell the compiler where <code>adder</code> is?</p>\n"}, {"tags": ["rust", "extern", "ffi"], "comments": [{"owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1527752285, "post_id": 50618682, "comment_id": 88247785, "body": "@Stargateur Updated the post and posted a new question on that topic <a href=\"https://stackoverflow.com/questions/50619070\">stackoverflow.com/questions/50619070</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1527774711, "post_id": 50619519, "comment_id": 88261891, "body": "You don&#39;t need to match the struct&#39;s name to start with, you can just do <code>#[repr(C)] struct Pair { x: c_int, y: c_int }</code>. You can give it any name you want, because as you mention, the name doesn&#39;t matter to the compiler."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1527774820, "post_id": 50619519, "comment_id": 88261979, "body": "<i>to make it opaque</i> \u2014 I would <b>not</b> use this to define an opaque type. <a href=\"https://stackoverflow.com/q/38315383/155423\">Another Q&amp;A has suggestions</a>, but <code>struct PAIR;</code> would allow <i>anyone</i> to create an instance of a <code>PAIR</code>, which should not be allowed if it&#39;s opaque."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 4, "last_activity_date": 1527774636, "last_edit_date": 1527774636, "creation_date": 1527753778, "answer_id": 50619519, "question_id": 50618682, "link": "https://stackoverflow.com/questions/50618682/how-to-use-a-c-typedef-struct-and-functions-with-that-struct-from-rust/50619519#50619519", "title": "How to use a C typedef struct and functions with that struct from Rust?", "body": "<p>First:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct {\n    int x;\n    int y;\n} PAIR;\n</code></pre>\n\n<p>This declares an anonymous struct and this is not currently supported by Rust. There is a <a href=\"https://internals.rust-lang.org/t/pre-rfc-anonymous-struct-and-union-types/3894\" rel=\"nofollow noreferrer\">RFC</a> that proposes to add anonymous types.</p>\n\n<p>Secondly, a <code>typedef</code> is just an alias and the name of the struct isn't important to be compatible. That means that you can simply do:</p>\n\n<pre><code>extern crate libc;\nuse libc::c_int;\n\n#[repr(C)]\nstruct PAIR {\n    x: c_int,\n    y: c_int,\n}\n\n// optional \"equivalent\" of typedef\ntype Pair = PAIR;\n\nextern \"C\" {\n    fn pair_add(input: *mut Pair) -&gt; c_int;\n    // could be\n    // fn pair_add(input: *mut PAIR) -&gt; c_int;\n}\n</code></pre>\n\n<p>You could easily ignore the typedef and just use <code>PAIR</code> as a name for this struct. You can even just write <code>struct PAIR;</code> to make it opaque.</p>\n"}], "owner": {"reputation": 5940, "user_id": 4605629, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/741edb45b2f1d3e3c3d9555085004ad1?s=128&d=identicon&r=PG&f=1", "display_name": "Greg", "link": "https://stackoverflow.com/users/4605629/greg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 912, "favorite_count": 0, "accepted_answer_id": 50619519, "answer_count": 1, "score": 1, "last_activity_date": 1527774636, "creation_date": 1527750746, "last_edit_date": 1527774533, "question_id": 50618682, "link": "https://stackoverflow.com/questions/50618682/how-to-use-a-c-typedef-struct-and-functions-with-that-struct-from-rust", "title": "How to use a C typedef struct and functions with that struct from Rust?", "body": "<p>I have these C files and I want to use <code>pair_add</code>, <code>add</code> and <code>PAIR</code> from Rust.</p>\n\n<p><strong>adder.c</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdlib.h&gt;\n#include \"adder.h\"\n\nint pair_add(PAIR * ppair) {\n    return ppair-&gt;x + ppair-&gt;y;\n}\n\nint add(int x, int y) {\n    return x + y;\n}\n</code></pre>\n\n<p><strong>adder.h</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct {\n    int x;\n    int y;\n} PAIR;\n\nint pair_add(PAIR * ppair);\nint add(int, int);\n</code></pre>\n\n<p>I compile them using:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>gcc -c adder.c\nar rc libadder.a adder.o  # Static link\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-01-unsafe-rust.html#using-extern-functions-to-call-external-code\" rel=\"nofollow noreferrer\">documentation</a> does not detail how to integrate C typedef structs and <a href=\"https://doc.rust-lang.org/book/ffi.html\" rel=\"nofollow noreferrer\">the example</a> is for functions which return and accept <code>i32</code>. <a href=\"https://github.com/alexcrichton/rust-ffi-examples/blob/master/rust-to-c/src/main.rs\" rel=\"nofollow noreferrer\">Other online resources were also limited</a>.</p>\n\n<p>I attempted the following but could not add the <code>PAIR</code> typedef:</p>\n\n<pre><code>extern crate libc;\n\nuse libc::c_int;\n\n#[link(name = \"adder\")]\nextern \"C\" {\n    // Define PAIR\n\n    // int pair_add(PAIR * ppair);\n    fn pair_add(input: Pair) -&gt; c_int;\n\n    // int add(int, int);\n    fn add(input1: c_int) -&gt; c_int;\n}\n\nfn main() {}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527734400, "post_id": 50615494, "comment_id": 88241622, "body": "<a href=\"https://stackoverflow.com/q/27221504/3650362\">How can you make a safe static singleton in Rust?</a> has an example of using the <code>lazy_static</code> crate for a similar use case. <a href=\"https://play.rust-lang.org/?gist=ec5d8b67727c2d8cc569dc563fdf2661&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Here&#39;s an application of the same strategy to your problem.</a>"}, {"owner": {"reputation": 255, "user_id": 9812873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dc67b1687d32917195be7029e4440ad?s=128&d=identicon&r=PG&f=1", "display_name": "misnomer___", "link": "https://stackoverflow.com/users/9812873/misnomer"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527796147, "post_id": 50615494, "comment_id": 88273503, "body": "Thanks a lot. I want to follow up on a basic question  Why cant I do static ref PREFIX: &amp;&#39;static str = format!(&quot;{}.&quot;, rand::random::&lt;u64&gt;()).as_str(); in a single line. Why should I take an extra pointer?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527798084, "post_id": 50615494, "comment_id": 88274525, "body": "<code>format!</code> returns a <code>String</code>, which would be dropped if you called <code>.as_str()</code> on it without saving it somewhere. With <code>lazy_static!</code> only the final value of the initializer expression is saved and leaked. You could instead write what <code>lazy_static!</code> does manually, and leak the <code>String</code> directly, but at best you&#39;re saving a couple bytes."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1527798249, "post_id": 50615494, "comment_id": 88274606, "body": "If you don&#39;t want to expose the <code>String</code> to your public API, you could split the <code>lazy_static!</code> into a public part and a private part in a non-public module. <a href=\"https://play.rust-lang.org/?gist=46e261333adacdcc130ab91a4899260d&amp;version=stable&amp;mode=debug\" rel=\"nofollow noreferrer\">Example</a>"}], "owner": {"reputation": 255, "user_id": 9812873, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9dc67b1687d32917195be7029e4440ad?s=128&d=identicon&r=PG&f=1", "display_name": "misnomer___", "link": "https://stackoverflow.com/users/9812873/misnomer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 176, "favorite_count": 0, "closed_date": 1527733300, "answer_count": 0, "score": 5, "last_activity_date": 1527733158, "creation_date": 1527731011, "last_edit_date": 1527733158, "question_id": 50615494, "link": "https://stackoverflow.com/questions/50615494/what-are-my-options-to-create-a-const-or-static-string-as-the-result-of-a-functi", "closed_reason": "Duplicate", "title": "What are my options to create a const or static string as the result of a function call in Rust?", "body": "<p>I want to have a <code>const</code> or <code>static</code> which is a random number appended by a dot. In Java it produces what I want, but in Rust I get variety of errors </p>\n\n<pre><code>const SOME_STR:  &amp;'static str = format!(\"{}.\", rand::random::&lt;u64&gt; ()).as_str();\n\nstatic SOME_STR:  &amp;'static str = format!(\"{}.\", rand::random::&lt;u64&gt; ()).as_str();\n</code></pre>\n\n<p>I get errors like </p>\n\n<ol>\n<li>calls in statics are limited to struct and enum constructors</li>\n<li>static contains unimplemented expression type</li>\n<li>borrowed value does not live long enough</li>\n</ol>\n\n<p>What are my options here and what is an easy way to fix this?</p>\n"}]