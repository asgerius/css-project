[{"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 5800, "user_id": 6163736, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/TKHBG.jpg?s=128&g=1", "display_name": "stacksonstacks", "link": "https://stackoverflow.com/users/6163736/stacksonstacks"}, "edited": false, "score": 0, "creation_date": 1544692141, "post_id": 53752726, "comment_id": 94368822, "body": "I believe that would entail stopping the current running thread i.e. the program entirely. You&#39;d have to spawn a separate thread for the runtime and stop it from the main thread or just exit it [<a href=\"https://doc.rust-lang.org/std/process/fn.exit.html]()\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/process/fn.exit.html]()</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1591794031, "last_edit_date": 1591794031, "creation_date": 1549768669, "answer_id": 54613017, "question_id": 53752726, "link": "https://stackoverflow.com/questions/53752726/is-there-any-way-to-shutdown-tokioruntimecurrent-threadruntime/54613017#54613017", "title": "Is there any way to shutdown `tokio::runtime::current_thread::Runtime`?", "body": "<p>The runtime will automatically shut down when when the future is complete:</p>\n\n<pre><code>use std::time::Duration;\nuse tokio::time; // 0.2.21\n\n#[tokio::main]\nasync fn main() {\n    time::delay_for(Duration::from_secs(2)).await;\n    eprintln!(\"future complete\");\n}\n</code></pre>\n\n<p>See <a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a> for other ways of creating a runtime.</p>\n\n<hr>\n\n<p>If you need to cancel a future, you can create something that will cause future <code>poll</code>s to succeed. I'd probably use channels and <code>select</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::{channel::oneshot, future, FutureExt}; // 0.3.5\nuse std::time::Duration;\nuse tokio::{task, time}; // 0.2.21\n\n#[tokio::main]\nasync fn main() {\n    let future = async {\n        time::delay_for(Duration::from_secs(3600)).await;\n        eprintln!(\"future complete\");\n    };\n\n    let (cancel_tx, cancel_rx) = oneshot::channel();\n\n    let another_task = task::spawn(async {\n        eprintln!(\"Another task started\");\n        time::delay_for(Duration::from_secs(2)).await;\n        eprintln!(\"Another task canceling the future\");\n        cancel_tx.send(()).expect(\"Unable to cancel\");\n        eprintln!(\"Another task exiting\");\n    });\n\n    future::select(future.boxed(), cancel_rx).await;\n\n    another_task.await.expect(\"The other task panicked\");\n}\n</code></pre>\n\n<p>Here's an alternate manual solution that's very simple, brute force, and probably not-very-performant:</p>\n\n<pre><code>use pin_project::pin_project; // 0.4.17\nuse std::{\n    future::Future,\n    pin::Pin,\n    sync::{Arc, Mutex},\n    task::{self, Context, Poll},\n    thread,\n    time::Duration,\n};\nuse tokio::time; // 0.2.21 \n\n#[tokio::main]\nasync fn main() {\n    let future = async {\n        time::delay_for(Duration::from_secs(3600)).await;\n        eprintln!(\"future complete\");\n    };\n\n    let (future, cancel) = Cancelable::new(future);\n\n    let another_thread = thread::spawn(|| {\n        eprintln!(\"Another thread started\");\n        thread::sleep(Duration::from_secs(2));\n        eprintln!(\"Another thread canceling the future\");\n        cancel();\n        eprintln!(\"Another thread exiting\");\n    });\n\n    future.await;\n\n    another_thread.join().expect(\"The other thread panicked\");\n}\n\n#[pin_project]\n#[derive(Debug)]\nstruct Cancelable&lt;F&gt; {\n    #[pin]\n    inner: F,\n    info: Arc&lt;Mutex&lt;CancelInfo&gt;&gt;,\n}\n\n#[derive(Debug, Default)]\nstruct CancelInfo {\n    cancelled: bool,\n    task: Option&lt;task::Waker&gt;,\n}\n\nimpl&lt;F&gt; Cancelable&lt;F&gt; {\n    fn new(inner: F) -&gt; (Self, impl FnOnce()) {\n        let info = Arc::new(Mutex::new(CancelInfo::default()));\n        let cancel = {\n            let info = info.clone();\n            move || {\n                let mut info = info.lock().unwrap();\n                info.cancelled = true;\n                if let Some(waker) = info.task.take() {\n                    waker.wake();\n                }\n            }\n        };\n        let me = Cancelable { inner, info };\n        (me, cancel)\n    }\n}\n\nimpl&lt;F&gt; Future for Cancelable&lt;F&gt;\nwhere\n    F: Future&lt;Output = ()&gt;,\n{\n    type Output = ();\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, ctx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Self::Output&gt; {\n        let this = self.project();\n        let mut info = this.info.lock().unwrap();\n\n        if info.cancelled {\n            Poll::Ready(())\n        } else {\n            let r = this.inner.poll(ctx);\n\n            if r.is_pending() {\n                info.task = Some(ctx.waker().clone());\n            }\n\n            r\n        }\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/56058494/155423\">When is it safe to move a member value out of a pinned future?</a></li>\n</ul>\n"}], "owner": {"reputation": 1733, "user_id": 1460102, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/e70df89ccf5e5509e4aae9ef4ed5b865?s=128&d=identicon&r=PG", "display_name": "xxks-kkk", "link": "https://stackoverflow.com/users/1460102/xxks-kkk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1067, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1591794031, "creation_date": 1544655803, "last_edit_date": 1545242134, "question_id": 53752726, "link": "https://stackoverflow.com/questions/53752726/is-there-any-way-to-shutdown-tokioruntimecurrent-threadruntime", "title": "Is there any way to shutdown `tokio::runtime::current_thread::Runtime`?", "body": "<p>I'm using <a href=\"https://docs.rs/tokio/0.1.13/tokio/runtime/current_thread/index.html\" rel=\"nofollow noreferrer\"><code>tokio::runtime::current_thread::Runtime</code></a> and I want to able to run a future and stop the reactor in the same thread. The example on the page doesn't show how to stop the runtime. Is there any way I can do that?</p>\n"}, {"tags": ["loops", "rust", "iterator", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544651013, "post_id": 53751034, "comment_id": 94356302, "body": "Have you read <a href=\"https://stackoverflow.com/q/25730586/155423\">How can I create my own data structure with an iterator that returns mutable references?</a>? It explains why the iterator you want is impossible in safe Rust."}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544652437, "post_id": 53751034, "comment_id": 94356971, "body": "I understand why I cannot use mutable iterators, but am wondering how to correctly approach the above problem in Rust. The linked answer mentions <a href=\"http://huonw.github.io/strided-rs/strided/struct.MutItems.html\" rel=\"nofollow noreferrer\">MutItems</a>, which looks like it may be useful. I&#39;ll have to take a look."}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544652555, "post_id": 53751034, "comment_id": 94357025, "body": "Although, I am getting the sense that a solution any better than the one I already have will likely involve unsafe code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544652579, "post_id": 53751034, "comment_id": 94357037, "body": "I think that&#39;s an anachronism (I should clean up that answer), but I think it&#39;s referring to what is now called <a href=\"https://doc.rust-lang.org/std/slice/struct.IterMut.html\" rel=\"nofollow noreferrer\"><code>IterMut</code></a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544652652, "post_id": 53751034, "comment_id": 94357068, "body": "Any such iterator would actually <i>be</i> unsafe as it would allow you to get two mutable references to the same item. Such an iterator may not be constructed."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1544655514, "post_id": 53751034, "comment_id": 94358154, "body": "Why not iterate through the indices (<code>for i in 0..list.len()</code>), and call <code>get_pair()</code> from inside the loop? After all, you are not changing the list itself when you find a match, but only the elements."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 2, "last_activity_date": 1544668650, "last_edit_date": 1544668650, "creation_date": 1544667309, "answer_id": 53754122, "question_id": 53751034, "link": "https://stackoverflow.com/questions/53751034/compare-all-elements-in-list-and-get-mutable-references-for-matching-pairs/53754122#53754122", "title": "Compare all elements in list and get mutable references for matching pairs", "body": "<p>You can do it like this, and it generates pretty decent code:</p>\n\n<pre><code>let mut list = [1, 2, 3];\nfor i in 0..list.len() {\n    let (a, b) = list.split_at_mut(i);\n    let item_b = &amp;mut b[0];\n    for item_a in a {\n        println!(\"{} {}\", item_a, item_b);\n    }\n}\n</code></pre>\n\n<p>The key here is that <code>0..len</code> iteration avoids locking the <code>list</code> to be read-only. <code>split_at_mut</code> proves to the borrow checker that both references can't point to the same element.</p>\n"}], "owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 284, "favorite_count": 0, "accepted_answer_id": 53754122, "answer_count": 1, "score": 1, "last_activity_date": 1544668650, "creation_date": 1544647363, "last_edit_date": 1544648292, "question_id": 53751034, "link": "https://stackoverflow.com/questions/53751034/compare-all-elements-in-list-and-get-mutable-references-for-matching-pairs", "title": "Compare all elements in list and get mutable references for matching pairs", "body": "<p>My goal is to compare each element in a list to every other element in the list according to some criteria. In pseudo-code, something like:</p>\n\n<pre><code>for i, x in list.enumerate():\n    for y in list[i..]:\n        if x.match(y):\n            // Modify both x and y\n</code></pre>\n\n<p>I would like to get a mutable reference to both items in each matching pair. This proved to be difficult. According to <a href=\"https://stackoverflow.com/questions/30073684/how-to-get-mutable-references-to-two-array-elements-at-the-same-time\">this answer</a>, the best way to get mutable references to multiple items in a list is through <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\">split_at_mut</a>. I wrote a wrapper function for extracting two mutable references to a list:</p>\n\n<pre><code>/// Gets two mutable references to elements i and j in list\nfn get_pair&lt;'a, T&gt;(i: usize, j: usize, list: &amp;'a mut [T]) -&gt; (&amp;'a mut T, &amp;'a mut T) {\n    let (a, b) = list.split_at_mut(j);\n\n    let first = &amp;mut a[i];\n    let second = &amp;mut b[0];\n\n    (first, second)\n}\n</code></pre>\n\n<p>However, I still cannot use this function inside a nested for loop without breaking borrowing rules:</p>\n\n<pre><code>for stuff1 in list.iter() {\n    // immutable borrow on list here\n    for stuff2 in list[i..].iter() {\n        if stuff1.compare(stuff2) {\n            let (stuff1, stuff2) = get_pair(i, j, list); // mutable borrow on list\n            do_something(stuff1, stuff2);\n        }\n    }\n}\n</code></pre>\n\n<p>Instead I save a pair of matching indices and then in a different loop actually get the elements and do something with them.</p>\n\n<pre><code>// Find matching pairs and push their indices\nlet mut matches: Vec&lt;(usize, usize)&gt; = Vec::new();\nfor (i, stuff1) in list.iter().enumerate() {\n    for (j, stuff2) in list[i..].iter().enumerate() {\n        if stuff1.compare(stuff2) {\n            matches.push((i, j));\n        }\n    }\n}\n\n// Get two mutable references by indices from list\nfor m in matches.iter() {\n    let (i, j) = m;\n    let (stuff1, stuff2) = get_pair(*i, *j, list);\n    do_something(stuff1, stuff2);\n}\n</code></pre>\n\n<p>This works, but seems a little overly complicated. Is there an easier or more simple way to achieve this without breaking the borrow rules?</p>\n\n<p>Ideally I would like to modify matching pairs in the original loop without needing a separate loop to go over the indices.</p>\n\n<p>A full example of my current code can be found on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b17ea583eb8b1f4089f0987ebe17800c\" rel=\"nofollow noreferrer\">playground</a>.</p>\n"}, {"tags": ["android", "ios", "rust", "webassembly"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544646811, "post_id": 53750546, "comment_id": 94354542, "body": "This does not just write one piece of code that runs on all three platforms. It writes one piece of code and then 3 adapters for that code, tailored for each platform."}], "tags": [], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "is_accepted": true, "score": 3, "last_activity_date": 1544644991, "creation_date": 1544644991, "answer_id": 53750546, "question_id": 53750506, "link": "https://stackoverflow.com/questions/53750506/can-i-write-rust-code-that-can-run-on-webassembly-and-android-and-ios/53750546#53750546", "title": "Can I write Rust code that can run on WebAssembly and Android and iOS?", "body": "<p>Yes, it is possible, I created a post <a href=\"https://users.rust-lang.org/t/single-common-core-code-for-wasm-android-and-ios/23152\" rel=\"nofollow noreferrer\">here</a> for recommendation/thoughts to improve it.</p>\n\n<p>My code, which I tested at both <code>wasm</code> and <code>android</code> is:</p>\n\n<p>src folder tree:</p>\n\n<pre><code>Hasans-Air:src h_ajsf$ tree .\n.\n\u251c\u2500\u2500 lib.rs\n\u251c\u2500\u2500 android\n\u2502   \u2514\u2500\u2500 mod.rs\n\u251c\u2500\u2500 ios\n\u2502   \u2514\u2500\u2500 mod.rs\n\u2514\u2500\u2500 wasm\n    \u2514\u2500\u2500 mod.rs\n\n3 directories, 4 files\n</code></pre>\n\n<p>And the files now are:</p>\n\n<p>Main:</p>\n\n<pre><code>// lib.rs\npub mod wasm;\npub mod ios;\npub mod android;\n\n#[cfg(not(target_arch = \"wasm32\"))]\nuse std::os::raw::{c_char};\n\n#[cfg(not(target_arch = \"wasm32\"))]\nuse std::ffi::{CStr};\n\npub fn rust_greetings(to: &amp;str) -&gt; String {\n    format!(\"Hello {}\", to)\n}\n\n#[cfg(not(target_arch = \"wasm32\"))]\nfn char_str(pattern: *const c_char) -&gt; &amp;'static str {\n\n    let c_str = unsafe { CStr::from_ptr(pattern) };\n    let string_ptr = match c_str.to_str() {\n        Err(_) =&gt; \"there\",\n        Ok(string) =&gt; string,\n    };\n    string_ptr\n}\n</code></pre>\n\n<p>WASM</p>\n\n<pre><code>// wasm/mod.rs\n#[cfg(target_arch = \"wasm32\")]\npub mod wasm {\n    use crate::rust_greetings;\n    use wasm_bindgen::prelude::*;\n\n    #[wasm_bindgen]\n    pub fn wasm_greetings(to: &amp;str) -&gt; String {\n        rust_greetings(to)\n    }\n}\n</code></pre>\n\n<p>Android</p>\n\n<pre><code>// android/mod.rs\n#[cfg(target_os=\"android\")]\n#[allow(non_snake_case)]\npub mod android {\n    use crate::rust_greetings;\n    use crate::char_str;\n    extern crate jni;\n\n    use self::jni::JNIEnv;\n    use self::jni::objects::{JClass, JString};\n    use self::jni::sys::{jstring};\n\n    #[no_mangle]\n    pub unsafe extern fn Java_com_hasan_RustGreetings_greetings(env: JNIEnv, _: JClass, java_pattern: JString) -&gt; jstring {\n\n        let jvm_input = env.get_string(java_pattern)\n                                        .expect(\"invalid pattern string\").as_ptr();\n\n        let input = rust_greetings(char_str(jvm_input));\n\n        let output = env.new_string(input)\n                                        .expect(\"Couldn't create java string!\");\n        output.into_inner()\n    }\n}\n</code></pre>\n\n<p>iOS</p>\n\n<pre><code>// ios/mod.rs\n#[cfg(target_os=\"ios\")]\n#[no_mangle]\npub mod ios {\n    use crate::char_str;\n\n    use std::ffi::{CString, CStr};\n    use std::os::raw::{c_char};\n    use crate::rust_greetings;\n\n    #[no_mangle]\n    pub extern fn ios_greetings(to: *const c_char) -&gt; *mut c_char {\n\n        let input = rust_greetings(char_str(to));\n\n        CString::new(input).unwrap().into_raw()\n    }\n\n    pub extern fn iso_greeting_free(s: *mut c_char) {\n        unsafe {\n            if s.is_null() { return }\n            CString::from_raw(s)\n        };\n    }\n}\n</code></pre>\n\n<p>TOML</p>\n\n<pre><code># Cargo.toml\n[package]\nname = \"greetings\"\nversion = \"0.1.0\"\nauthors = [\"Hasan Yousef\"]\nedition = \"2018\"\n\n[dependencies]\n\n[target.'cfg(target_arch=\"wasm32\")'.dependencies]\nwasm-bindgen = \"0.2.29\"\n\n[target.'cfg(target_os=\"android\")'.dependencies]\njni = { version = \"0.5\", default-features = false }\n\n[lib]\nname = \"rust_greetings\"\ncrate-type = [\"cdylib\", \"dylib\", \"staticlib\"] \n# Android: dylib\n# iOS: cdylib [armv7s-apple-ios] and staticlib [Others]\n# WASM: cdylib\n</code></pre>\n"}], "owner": {"reputation": 15416, "user_id": 2441637, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z8fpp.jpg?s=128&g=1", "display_name": "Hasan A Yousef", "link": "https://stackoverflow.com/users/2441637/hasan-a-yousef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 558, "favorite_count": 2, "closed_date": 1544711262, "accepted_answer_id": 53750546, "answer_count": 1, "score": -1, "last_activity_date": 1544646728, "creation_date": 1544644770, "last_edit_date": 1544646728, "question_id": 53750506, "link": "https://stackoverflow.com/questions/53750506/can-i-write-rust-code-that-can-run-on-webassembly-and-android-and-ios", "closed_reason": "Needs more focus", "title": "Can I write Rust code that can run on WebAssembly and Android and iOS?", "body": "<p>Is it possible to write common <a href=\"https://www.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust</a> source code that can run as a native library for WebAssembly, Android and iOS at same time?</p>\n"}, {"tags": ["generics", "rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544632993, "post_id": 53747042, "comment_id": 94347657, "body": "Ah, I should have read this answer even after I figured out the solution for my initial problem, since you already had anticipated the next problem I&#39;d have. Thanks again. And now <a href=\"https://gist.github.com/Dobiasd/cc6e84f687a8e7b35f6789a1f36a15c3\" rel=\"nofollow noreferrer\">it works fine</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544633066, "post_id": 53747042, "comment_id": 94347717, "body": "TL;DR the duplicate: <code>fn load_from_file&lt;T: serde::de::DeserializeOwned&gt;(file_path: &amp;str) -&gt; T</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544633160, "post_id": 53747042, "comment_id": 94347768, "body": "I notice from your error message that you are still using Rust 2015; I encourage you to upgrade <a href=\"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html\" rel=\"nofollow noreferrer\">to Rust 2018</a>; it will make certain things much easier."}, {"owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544636926, "post_id": 53747042, "comment_id": 94349815, "body": "Thanks for the remark! I now updated. The <a href=\"https://gist.github.com/Dobiasd/87eb6d424eefd752f8e9e4790c408d0e\" rel=\"nofollow noreferrer\">new error</a> looks nicer formatted than the old one. I&#39;ll now read what else the new version brings. :)"}], "owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 43, "favorite_count": 0, "closed_date": 1544632478, "answer_count": 0, "score": 0, "last_activity_date": 1544632810, "creation_date": 1544631036, "last_edit_date": 1544632810, "question_id": 53747042, "link": "https://stackoverflow.com/questions/53747042/how-to-handle-the-lifetime-of-a-buffer-in-a-generic-function-deserializing-from", "closed_reason": "Duplicate", "title": "How to handle the lifetime of a buffer in a generic function deserializing from a file?", "body": "<p>The following minimal example reads a struct from disk just fine:</p>\n\n<pre><code>extern crate bincode;\n#[macro_use]\nextern crate serde_derive;\n\nuse std::fs::File;\nuse std::io::Read;\n\nuse bincode::deserialize;\n\n#[derive(Deserialize)]\nstruct Thing {\n    something: u64,\n}\n\nfn load_thing_from_file(file_path: &amp;str) -&gt; Thing {\n    // unwrap instead of actual error handling for brevity of this example.\n    let mut file = File::open(file_path).unwrap();\n    let mut buffer: Vec&lt;u8&gt; = Vec::new();\n    file.read_to_end(&amp;mut buffer).unwrap();\n    let result: Thing = deserialize(&amp;buffer[..]).unwrap();\n    return result;\n}\n\nfn main() {\n    let t = load_thing_from_file(\"thing.bin\");\n    println!(\"{}\", t.something);\n}\n</code></pre>\n\n<p>However when I try to make the load function generic, like so:</p>\n\n<pre><code>extern crate bincode;\n#[macro_use]\nextern crate serde_derive;\n\nuse std::fs::File;\nuse std::io::Read;\n\nuse bincode::deserialize;\n\n#[derive(Deserialize)]\nstruct Thing {\n    something: u64\n}\n\nfn load_from_file&lt;'de, T: serde::Deserialize&lt;'de&gt;&gt;(file_path: &amp;str) -&gt; T {\n    // unwrap instead of actual error handling for brevity of this example.\n    let mut file = File::open(file_path).unwrap();\n    let mut buffer: Vec&lt;u8&gt; = Vec::new();\n    file.read_to_end(&amp;mut buffer).unwrap();\n    let result: T = deserialize(&amp;buffer[..]).unwrap();\n    return result;\n}\n\nfn main() {\n    let t = load_from_file::&lt;Thing&gt;(\"thing.bin\");\n    println!(\"{}\", t.something);\n}\n</code></pre>\n\n<p>I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `buffer` does not live long enough\n  --&gt; src/main.rs:20:34\n   |\n20 |     let result: T = deserialize(&amp;buffer[..]).unwrap();\n   |                                  ^^^^^^ borrowed value does not live long enough\n21 |     return result;\n22 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'de as defined on the function body at 15:19...\n  --&gt; src/main.rs:15:19\n   |\n15 | fn load_from_file&lt;'de, T: serde::Deserialize&lt;'de&gt;&gt;(file_path: &amp;str) -&gt; T {\n   |                   ^^^\n</code></pre>\n\n<p>How can I fix this so that the compiler understands things are OK?</p>\n"}, {"tags": ["generics", "rust", "traits", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544629676, "post_id": 53746310, "comment_id": 94345664, "body": "See also <a href=\"https://stackoverflow.com/q/43554679/155423\">Lifetime error when creating a function that returns a value implementing serde::Deserialize</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1544629697, "post_id": 53746627, "comment_id": 94345677, "body": "Or <code>fn foo&lt;&#39;de, T: serde::Deserialize&lt;&#39;de&gt;&gt; (_x: T) {}</code>"}, {"owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 6, "creation_date": 1544631347, "post_id": 53746627, "comment_id": 94346727, "body": "@Shepmaster Yes, thanks. That&#39;s more concise. This might not be the ideal place here, but I also would like to say thank you on a broader scale. When I have some rust question once in a while, it&#39;s highly likely that the answer I find somewhere on the Internet was posted by you. And your work here on stackoverflow is totally amazing in any case."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544632755, "post_id": 53746627, "comment_id": 94347529, "body": "I prefer the <code>where</code> clause myself, as I find it much easier to read, although the prevailing rustfmt style is to put it on multiple lines (which I&#39;ve updated the answer to have). Thank you for taking the time to recognize those who have helped you; we really do appreciate it (and it&#39;s a nice change from the <i>other</i> feedback we often get ^_^)"}], "tags": [], "owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "is_accepted": true, "score": 5, "last_activity_date": 1544632647, "last_edit_date": 1544632647, "creation_date": 1544629652, "answer_id": 53746627, "question_id": 53746310, "link": "https://stackoverflow.com/questions/53746310/how-to-declare-a-generic-function-with-a-trait-bound-that-is-parameterized-with/53746627#53746627", "title": "How to declare a generic function with a trait bound that is parameterized with a lifetime name?", "body": "<p>Oh, it was just a basic error in the function syntax.</p>\n\n<pre><code>fn foo&lt;'de, T&gt;(_x: T)\nwhere\n    T: serde::Deserialize&lt;'de&gt;,\n{\n    // ...\n}\n</code></pre>\n\n<p>is correct and works.</p>\n"}], "owner": {"reputation": 7542, "user_id": 1866775, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/4K99R.jpg?s=128&g=1", "display_name": "Tobias Hermann", "link": "https://stackoverflow.com/users/1866775/tobias-hermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 1, "accepted_answer_id": 53746627, "answer_count": 1, "score": 4, "last_activity_date": 1544632647, "creation_date": 1544628562, "last_edit_date": 1544629587, "question_id": 53746310, "link": "https://stackoverflow.com/questions/53746310/how-to-declare-a-generic-function-with-a-trait-bound-that-is-parameterized-with", "title": "How to declare a generic function with a trait bound that is parameterized with a lifetime name?", "body": "<p>Given a generic function:</p>\n\n<pre><code>fn foo&lt;T&gt; (_x: T) {}\n</code></pre>\n\n<p>I'd like to add a <code>serde::Deserialize</code> trait bound. However the following</p>\n\n<pre><code>fn foo&lt;T: serde::Deserialize&gt; (_x: T) {}\n</code></pre>\n\n<p>results in</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0637]: `&amp;` without an explicit lifetime name cannot be used here\n --&gt; src/lib.rs:1:11\n  |\n1 | fn foo&lt;T: serde::Deserialize&gt; (_x: T) {}\n  |           ^^^^^^^^^^^^^^^^^^ explicit lifetime name needed here\n</code></pre>\n\n<p>And trying it like I understand <a href=\"https://serde.rs/lifetimes.html\" rel=\"nofollow noreferrer\">the serde documentation regarding deserializer lifetimes</a></p>\n\n<pre><code>fn foo&lt;'de, T&gt; where T: serde::Deserialize&lt;'de&gt; (_x: T) {}\n</code></pre>\n\n<p>also yields an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected `(`, found `where`\n --&gt; src/lib.rs:1:16\n  |\n1 | fn foo&lt;'de, T&gt; where T: serde::Deserialize&lt;'de&gt; (_x: T) {}\n  |                ^^^^^ expected `(`\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1544634730, "post_id": 53745030, "comment_id": 94348548, "body": "FYI: <code>test_macro!(&quot;it&quot;, (foo::test()), &quot;work&quot;);</code> is accepted."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1544637388, "post_id": 53745030, "comment_id": 94350030, "body": "Any particular reason not to use <code>expr</code> rather than <code>tt</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "is_accepted": false, "score": 1, "last_activity_date": 1547513152, "last_edit_date": 1547513152, "creation_date": 1547481311, "answer_id": 54184869, "question_id": 53745030, "link": "https://stackoverflow.com/questions/53745030/how-do-i-match-either-a-path-or-a-tt-in-a-macro/54184869#54184869", "title": "How do I match either a path or a tt in a macro?", "body": "<p>I think there is an error in your logic. As <a href=\"https://stackoverflow.com/questions/53745030/how-do-i-match-either-a-path-or-a-tt-in-a-macro#comment94350030_53745030\">mcarton noted in the comments</a>, your macro should be <code>( $( $x: expr ),* )</code> not <code>( $( $x: tt ),* )</code>. That is, use expressions instead of token trees.</p>\n\n<p>The way you are using your macro to print things won't work on some possible values that are present in token trees. I'm fairly certain you can't call <code>print!(\"{}\", std::os)</code> which your macro would possibly allow.</p>\n"}], "owner": {"reputation": 1126, "user_id": 4625697, "user_type": "registered", "accept_rate": 36, "profile_image": "https://lh6.googleusercontent.com/-NBW5Q7ZCvNY/AAAAAAAAAAI/AAAAAAAAFOw/rPvyEl37Zbw/photo.jpg?sz=128", "display_name": "David", "link": "https://stackoverflow.com/users/4625697/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1547513152, "creation_date": 1544624269, "last_edit_date": 1544630911, "question_id": 53745030, "link": "https://stackoverflow.com/questions/53745030/how-do-i-match-either-a-path-or-a-tt-in-a-macro", "title": "How do I match either a path or a tt in a macro?", "body": "<p>I'm building what I thought was a fairly simple macro in Rust to take in an arbitrary list of arguments (<code>str</code> or <code>ansi_term::Style</code> objects).</p>\n\n<p>My macro looks like this:</p>\n\n<pre><code>macro_rules! test_macro {\n    ( $( $x: tt ),* ) =&gt; (\n        $(\n            print!(\"{} \", $x);\n        )*\n        println!();\n    )\n}\n</code></pre>\n\n<p>For a minimum working example, I also defined a module and a function:</p>\n\n<pre><code>mod foo {\n    pub fn test() -&gt; &amp;'static str {\n        \"doesn't\"\n    }\n}\n\nfn test() -&gt; &amp;'static str {\n    \"doesn't\"\n}\n</code></pre>\n\n<p>The macro works with simple invocations, such as</p>\n\n<pre><code>test_macro!(\"it\", \"works\");\n</code></pre>\n\n<p>but if I try anything more complex, I get compiler errors:</p>\n\n<pre><code>fn test() -&gt; &amp;'static str {\n    \"doesn't\"\n}\ntest_macro!(\"it\", test(), \"work\");\n</code></pre>\n\n<p>results in</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `(`\n   |\n24 |     test_macro!(\"it\", test(), \"work\");\n   |                           ^\n   |                           |\n   |                           help: missing comma here\n</code></pre>\n\n<p>and</p>\n\n<pre><code>test_macro!(\"it\", foo::test(), \"work\");\n</code></pre>\n\n<p>results in</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `::`\n   |\n25 |     test_macro!(\"it\", foo::test(), \"work\");\n   |                          ^^\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=75c6690db962138e2608498c02173554\" rel=\"nofollow noreferrer\">Rust Playground example</a>.</p>\n\n<p>This is my first time playing with Rust macros, so I may be missing something else.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 4, "creation_date": 1544622694, "post_id": 53744434, "comment_id": 94341454, "body": "Especially &quot;current&quot; stack size is too obscure to be built in."}], "owner": {"reputation": 251, "user_id": 4102371, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/4a6421fb297d401d6be5dac233b5d66d?s=128&d=identicon&r=PG&f=1", "display_name": "Sleik", "link": "https://stackoverflow.com/users/4102371/sleik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 275, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1544630805, "creation_date": 1544622317, "last_edit_date": 1544630805, "question_id": 53744434, "link": "https://stackoverflow.com/questions/53744434/how-do-i-get-the-current-and-maximum-stack-size-of-a-rust-thread", "title": "How do I get the current and maximum stack size of a Rust thread?", "body": "<p>In Rust, how do I find out how big the stack of current thread is and what the maximum allowed size for that thread is (by maximum allowed size I mean the size that is usually set via <code>RUST_MIN_STACK</code> or the <code>Builder::stack_size</code> function). Ideally I would like to have something like this:</p>\n\n<pre><code>fn main() {\n    println!(\"Current stack size {:?}\", get_current_stack_size());\n    println!(\"Maximum stack size {:?}\", get_maximum_stack_size());\n}\n</code></pre>\n\n<p>Is there any built-in functionality in Rust?</p>\n"}, {"tags": ["macros", "rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1544600874, "last_edit_date": 1544600874, "creation_date": 1544600045, "answer_id": 53738103, "question_id": 53736801, "link": "https://stackoverflow.com/questions/53736801/can-i-repeat-matching-by-several-rules-in-a-macro/53738103#53738103", "title": "Can I repeat matching by several rules in a macro?", "body": "<p>You should read <a href=\"https://danielkeep.github.io/tlborm/book/index.html\" rel=\"nofollow noreferrer\">The Little Book of Rust Macros</a> and specifically for your question <a href=\"https://danielkeep.github.io/tlborm/book/pat-incremental-tt-munchers.html\" rel=\"nofollow noreferrer\">section 4.2: Incremental TT munchers</a>.</p>\n\n<p>For example:</p>\n\n<pre><code>macro_rules! my_dsl {\n    () =&gt; {};\n    (foo $name:ident; $($tail:tt)*) =&gt; {\n        {\n            println!(concat!(\"foo \", stringify!($name));\n            my_dsl!($($tail)*);\n        }\n    };\n    (bar $name:ident; $($tail:tt)*) =&gt; {\n        {\n            println!(concat!(\"bar \", stringify!($name));\n            my_dsl!($($tail)*);\n        }\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 622, "favorite_count": 0, "accepted_answer_id": 53738103, "answer_count": 1, "score": 3, "last_activity_date": 1544631050, "creation_date": 1544593817, "last_edit_date": 1544631050, "question_id": 53736801, "link": "https://stackoverflow.com/questions/53736801/can-i-repeat-matching-by-several-rules-in-a-macro", "title": "Can I repeat matching by several rules in a macro?", "body": "<p>Can I repeat match in a Rust macro? I want to be able to do something like:</p>\n\n<pre><code>my_dsl! {\n    foo &lt;other tokens&gt;;\n    bar &lt;other tokens&gt;;\n    foo &lt;other tokens&gt;;\n    ...\n}\n</code></pre>\n\n<p>Basically, an arbitrary number of semicolon-delimited statement, and each statement is handled by different rules.</p>\n\n<p>I know I can have several <code>foo!()</code>, <code>bar!()</code> macros - each per statement, but ideally I'd like to avoid that.</p>\n\n<p>I was thinking if I can capture something like <code>$($t:tt)*,</code>  but excluding semicolon, and then delegate to other macros?</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1544537707, "post_id": 53725703, "comment_id": 94305338, "body": "I really would recommend you to read <a href=\"https://doc.rust-lang.org/stable/book/\" rel=\"nofollow noreferrer\">the book</a>, especially the chapter about <a href=\"https://doc.rust-lang.org/stable/book/ch06-00-enums.html\" rel=\"nofollow noreferrer\">enums</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1544537721, "post_id": 53725703, "comment_id": 94305347, "body": "I have no idea what you are trying to ask. Have you <a href=\"https://doc.rust-lang.org/book/ch06-01-defining-an-enum.html\" rel=\"nofollow noreferrer\">read <i>The Rust Programming Language</i></a>? It explains basic concepts, like the appropriate syntax for an enum with values: <code>Grouping::Exp(Subtypes::acost)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544537756, "post_id": 53725703, "comment_id": 94305369, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, and fields; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>Acost</code> / <code>Bcost</code> instead, please."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544537850, "post_id": 53725703, "comment_id": 94305426, "body": "<i>don&#39;t know what should be done if it isn&#39;t</i> \u2014 this is not something we can help you with. Deciding on how to handle an error is vitally tied to your specific program and any potential users."}, {"owner": {"reputation": 2556, "user_id": 330601, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/fe0cddef9090d3f081e0cec085b44d11?s=128&d=identicon&r=PG", "display_name": "T9b", "link": "https://stackoverflow.com/users/330601/t9b"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544539273, "post_id": 53725703, "comment_id": 94306241, "body": "@Shepmaster enums set out a series of known values. You can build a further enum referring to the first as a type, per my example. This compiles without issue. In your example <code>Grouping::Exp(Subtypes::acost)</code> you presume that I only wish to access one value, but in fact the enum <code>Grouping::Exp</code> refers to multiple values. The book does not explain how to expose those multiple values."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544539905, "post_id": 53725703, "comment_id": 94306662, "body": "<i>in fact the enum <code>Grouping::Exp</code> refers to multiple values</i> \u2014 what do you mean by this? A variable can only be one specific value at a time, not some &quot;quantum superposition&quot; of multiple."}, {"owner": {"reputation": 2556, "user_id": 330601, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/fe0cddef9090d3f081e0cec085b44d11?s=128&d=identicon&r=PG", "display_name": "T9b", "link": "https://stackoverflow.com/users/330601/t9b"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544540250, "post_id": 53725703, "comment_id": 94306884, "body": "@Shepmaster because <code>Grouping::Exp</code> has the type <code>Subtypes</code>. Therefore it must refer to multiple possible values. This compiles without error, therefore I presume it isn&#39;t doing anything impossible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544540375, "post_id": 53725703, "comment_id": 94306973, "body": "<i>this doesn&#39;t work!!</i> vs, <i>This compiles without error</i> \u2014 perhaps you can expand on your example to make it clear what you are trying to do and <b>how</b> it doesn&#39;t work? Maybe write some pseudocode that shows what logic you want?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544540479, "post_id": 53725703, "comment_id": 94307042, "body": "<i>if user input value exists in <code>Subtypes</code></i> \u2014 user input is a binary blob or maybe a string; neither of those are an enum or enum variant. Therefore, no user input is ever in your enum, the &quot;true&quot; case cannot ever happen, and your conditional isn&#39;t needed."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544540718, "post_id": 53725703, "comment_id": 94307210, "body": "Is <i>that</i> what your question is \u2014 are you asking how to convert user input into one of your own enum variants?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544541256, "post_id": 53725703, "comment_id": 94307568, "body": "If so, then I think your question is answered by <a href=\"https://stackoverflow.com/q/36508580/155423\">How to convert a string to an enum?</a> or <a href=\"https://stackoverflow.com/q/39070244/155423\">Can I convert a string to enum without macros in Rust?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544564970, "post_id": 53728365, "comment_id": 94319555, "body": "<i>taken from a GitHub repo</i> \u2014 if you are copying code from another source, the least you can do is link to it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544575067, "post_id": 53728365, "comment_id": 94322504, "body": "<i><code>return ShellTypes</code></i> \u2014 this isn&#39;t idiomatic; there&#39;s no need for the <code>return</code>. Also the <code>*</code> in <code>*self</code> isn&#39;t needed."}], "tags": [], "owner": {"reputation": 192, "user_id": 10012683, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mczbT.png?s=128&g=1", "display_name": "i.do.stuff", "link": "https://stackoverflow.com/users/10012683/i-do-stuff"}, "is_accepted": false, "score": 1, "last_activity_date": 1544574972, "last_edit_date": 1544574972, "creation_date": 1544545508, "answer_id": 53728365, "question_id": 53725703, "link": "https://stackoverflow.com/questions/53725703/can-i-use-enums-as-value-checker-for-another-enum/53728365#53728365", "title": "Can I use enums as value checker for another enum?", "body": "<p>You are right with enums you can embedded additional data in an enum.  I am thinking you will need to follow a similar pattern. </p>\n\n<p>Here's some code to help explain, taken from a GitHub repo.  First, we embed a struct in an enum:</p>\n\n<pre><code>struct ConsoleOutput {}\n\npub enum OutputTypes {\n    Console(ConsoleOutput),\n}\n</code></pre>\n\n<p>This isn't enough to make it usable; for starters, a factory is needed.  The factory actually allocates the structure that is embedded in the enum:</p>\n\n<pre><code>pub struct OutputFactory {}\n\nimpl OutputFactory {\n    pub fn get() -&gt; OutputTypes {\n        OutputTypes::Console(ConsoleOutput {})\n    }\n}\n</code></pre>\n\n<p>The actual implementation is a little bit more involved. </p>\n\n<p>After that, a trait is implemented on the enum and the trait contains the logic. I am thinking this is the area you need to work in.</p>\n\n<pre><code>pub struct ShellTypes {}\n\npub trait OutputTrait {\n    fn generate(&amp;self) -&gt; ShellTypes;\n}\n\nimpl OutputTrait for OutputTypes {\n    fn generate(&amp;self) -&gt; ShellTypes {\n        match *self {\n            _ =&gt; return ShellTypes {},\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2556, "user_id": 330601, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/fe0cddef9090d3f081e0cec085b44d11?s=128&d=identicon&r=PG", "display_name": "T9b", "link": "https://stackoverflow.com/users/330601/t9b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 351, "favorite_count": 1, "answer_count": 1, "score": -1, "last_activity_date": 1544574972, "creation_date": 1544536822, "last_edit_date": 1544537521, "question_id": 53725703, "link": "https://stackoverflow.com/questions/53725703/can-i-use-enums-as-value-checker-for-another-enum", "title": "Can I use enums as value checker for another enum?", "body": "<p>I have a list of possible subcategory values, plus a list of subcategory grouping values that need to be associated. The user will enter a sub category value (Does this have to be an integer?) I need to check that this value is in the enum, but don't know what should be done if it isn't.</p>\n\n<ol>\n<li>Is there an \"automatic\" way of doing this check? Do we have to do this programmatically implementing the test on the enum? </li>\n<li>If the subcategory is used in a grouping category, how can it be used? How can it be set, how can it be read?</li>\n</ol>\n\n<p>I'm thinking that the enums relationship would be something like this:</p>\n\n<pre><code>#[derive(Debug)]\npub enum Subtypes {\n    acost,\n    bcost,\n    //... other subtypes\n}\n\n#[derive(Debug)]\npub enum Grouping {\n    Exp(Subtypes),\n    //...other grouping associated with different subtypes\n}\n</code></pre>\n\n<p>How do I define a new variable based on the grouping enum, and how can it be accessed?</p>\n\n<pre><code>// this doesn't work!!\nlet group = Grouping::Exp;\n</code></pre>\n\n<p>I think I'm missing something really fundamental. I don't know if enums are the way to go.</p>\n"}, {"tags": ["rust", "clion", "windows-subsystem-for-linux"], "comments": [{"owner": {"reputation": 1817, "user_id": 7556604, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hgWR8.jpg?s=128&g=1", "display_name": "Clonk", "link": "https://stackoverflow.com/users/7556604/clonk"}, "edited": false, "score": 0, "creation_date": 1544528834, "post_id": 53723438, "comment_id": 94300451, "body": "Windows Subsystem Linux call the GNU toolchain and not MSVC."}], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1544537129, "post_id": 53723636, "comment_id": 94304973, "body": "<code>rustup default</code> implies <code>rustup toolchain add</code>, so the first line can be omitted."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1544537280, "post_id": 53723636, "comment_id": 94305073, "body": "@TimDiekmann That&#39;s because the latest Rustup automatically installs missing toolchains on some commands, including <code>rustup default</code> and <code>rustup override set</code>. Given that setting the default toolchain across the system might not always be desired, I chose to separate the two."}, {"owner": {"reputation": 21, "user_id": 6728484, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wb2B8LVaYtI/AAAAAAAAAAI/AAAAAAAAABA/CB80v-5GEEc/photo.jpg?sz=128", "display_name": "theodore", "link": "https://stackoverflow.com/users/6728484/theodore"}, "edited": false, "score": 0, "creation_date": 1544583190, "post_id": 53723636, "comment_id": 94324052, "body": "Thank you! I previously thought the toolchain is what about the CLion toolchain. I&#39;ve mixed them up."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1544529122, "creation_date": 1544529122, "answer_id": 53723636, "question_id": 53723438, "link": "https://stackoverflow.com/questions/53723438/how-to-enable-rust-debugging-when-using-wsl-toolchain-in-clion/53723636#53723636", "title": "How to enable rust debugging when using WSL toolchain in CLion?", "body": "<p>Rust provides two kinds of <a href=\"https://forge.rust-lang.org/platform-support.html#tier-1\" rel=\"nofollow noreferrer\">Tier 1 toolchains</a> for the Windows operating system: <code>pc-windows-msvc</code> and <code>pc-windows-gnu</code> (for <code>i686</code> and <code>x864_64</code> architectures, making 4 toolchains in total). Their differences are highlighted here: <a href=\"https://stackoverflow.com/q/46931981/1233251\">What are the differences between the GNU and MSVC Rust toolchain?</a></p>\n\n<p>WSL requires you to use the GNU toolchain. With Rustup, you can install it and make it the default (or configure it in your IDE of choice):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustup toolchain add stable-x86_64-pc-windows-gnu\nrustup default stable-x86_64-pc-windows-gnu\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 6728484, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wb2B8LVaYtI/AAAAAAAAAAI/AAAAAAAAABA/CB80v-5GEEc/photo.jpg?sz=128", "display_name": "theodore", "link": "https://stackoverflow.com/users/6728484/theodore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1583, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1544529122, "creation_date": 1544528516, "last_edit_date": 1544529054, "question_id": 53723438, "link": "https://stackoverflow.com/questions/53723438/how-to-enable-rust-debugging-when-using-wsl-toolchain-in-clion", "title": "How to enable rust debugging when using WSL toolchain in CLion?", "body": "<p>I am new to rust and I am using CLion and the rust plugin from JetBrains on Windows now. It works well when I just compile and run. But when I start debugging, it shows a dialog like this even though I switch my toolchain to WSL.</p>\n\n<p><img src=\"https://i.stack.imgur.com/SUQbB.png\" alt=\"screenshot of WSL toolchain settings\"></p>\n\n<p><img src=\"https://i.stack.imgur.com/CssLl.png\" alt=\"screenshot of the error dialog\"></p>\n\n<p>I wonder whether WSL is a kind of GNU toolchain. And if it is, what should I do to enable rust debugging? Thanks.</p>\n"}, {"tags": ["functional-programming", "rust"], "comments": [{"owner": {"reputation": 6798, "user_id": 4174897, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/gS0gI.jpg?s=128&g=1", "display_name": "Kyll", "link": "https://stackoverflow.com/users/4174897/kyll"}, "edited": false, "score": 3, "creation_date": 1544526311, "post_id": 53722749, "comment_id": 94299043, "body": "Well-made question, might find a better home on CodeReview though."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 4, "creation_date": 1544526312, "post_id": 53722749, "comment_id": 94299044, "body": "I&#39;m afraid this is offtopic for Stackoverflow, but I can recommend itertools for this job. <a href=\"https://docs.rs/itertools/0.8.0/itertools/macro.iproduct.html\" rel=\"nofollow noreferrer\">docs.rs/itertools/0.8.0/itertools/macro.iproduct.html</a>"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1544528069, "post_id": 53722749, "comment_id": 94300026, "body": "Keep in mind that example code on <a href=\"https://codereview.stackexchange.com\">Code Review</a> is off-topic. So make sure not to express your code as an example, but instead explicitly mention that you&#39;re looking for the maximum in a <code>[[u32; WIDTH]; HEIGHT]</code> array, found a solution, but feel like there should be a more functional way. And keep in mind that cross-posting is frowned upon."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544538471, "post_id": 53722749, "comment_id": 94305799, "body": "Your <code>-1</code> in your iterator seems incorrect, seeing as how <code>..</code> already doesn&#39;t include the upper bound."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544539513, "post_id": 53722749, "comment_id": 94306417, "body": "@Shepmaster I thought so too until I noticed that <code>sum_2x2</code> goes to <code>x+1</code> and <code>y+1</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1544539672, "post_id": 53722749, "comment_id": 94306511, "body": "@Jmb then the Python equivalent (<code>range(WIDTH)</code>) seems incorrect."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544542360, "post_id": 53722749, "comment_id": 94308296, "body": "@Shepmaster yes, the Python seems wrong"}, {"owner": {"reputation": 5008, "user_id": 3594526, "user_type": "registered", "accept_rate": 30, "profile_image": "https://i.stack.imgur.com/VfPew.jpg?s=128&g=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/3594526/felix"}, "edited": false, "score": 0, "creation_date": 1544614527, "post_id": 53722749, "comment_id": 94336794, "body": "Yep, the python code was off by one. I just fixed it. Thanks for pointing it out"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 4, "last_activity_date": 1544539444, "creation_date": 1544539444, "answer_id": 53726542, "question_id": 53722749, "link": "https://stackoverflow.com/questions/53722749/iterating-over-x-y-positions-of-a-grid-using-functional-programming-methods/53726542#53726542", "title": "Iterating over (x,y) positions of a grid using functional programming methods", "body": "<p>You can possibly simplify the code with one of the loop comprehension crates like <a href=\"https://crates.io/crates/map_for\" rel=\"nofollow noreferrer\"><code>map_for</code></a> or <a href=\"https://crates.io/crates/mdo\" rel=\"nofollow noreferrer\"><code>mdo</code></a>.\nFor example with <code>map_for</code>:</p>\n\n<pre><code>let max_sum = map_for!(\n    move;\n    x &lt;- 0..WIDTH-1;\n    y &lt;- 0..HEIGHT-1;\n    =&gt; sum_2x2(x, y, &amp;grid)\n).max().unwrap();\n</code></pre>\n\n<p>I haven't tried it with Rayon, but since <code>map_for</code> is simply syntax sugar for a sequence of calls to <code>map</code> and <code>flat_map</code> and works with any type that implements those functions, it should work with Rayon as well.</p>\n\n<p>Full disclosure: I am the author of the <code>map_for</code> crate.</p>\n"}, {"tags": [], "owner": {"reputation": 685, "user_id": 5641333, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xQ9JE.jpg?s=128&g=1", "display_name": "JayDepp", "link": "https://stackoverflow.com/users/5641333/jaydepp"}, "is_accepted": false, "score": 3, "last_activity_date": 1544559655, "creation_date": 1544559655, "answer_id": 53731769, "question_id": 53722749, "link": "https://stackoverflow.com/questions/53722749/iterating-over-x-y-positions-of-a-grid-using-functional-programming-methods/53731769#53731769", "title": "Iterating over (x,y) positions of a grid using functional programming methods", "body": "<p>Another option is to use <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.cartesian_product\" rel=\"nofollow noreferrer\"><code>cartesian_product</code></a> from the Itertools crate, which has many convenient methods involving iterators.</p>\n\n<pre><code>use itertools::Itertools;\n\n(0..WIDTH-1).cartesian_product(0..HEIGHT-1).map(|(x, y)| sum_2x2(x, y, &amp;grid)).max()\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5008, "user_id": 3594526, "user_type": "registered", "accept_rate": 30, "profile_image": "https://i.stack.imgur.com/VfPew.jpg?s=128&g=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/3594526/felix"}, "is_accepted": true, "score": 1, "last_activity_date": 1544614436, "creation_date": 1544614436, "answer_id": 53742151, "question_id": 53722749, "link": "https://stackoverflow.com/questions/53722749/iterating-over-x-y-positions-of-a-grid-using-functional-programming-methods/53742151#53742151", "title": "Iterating over (x,y) positions of a grid using functional programming methods", "body": "<p>As @hellow pointed out in the comments, there's an <a href=\"https://docs.rs/itertools/0.8.0/itertools/macro.iproduct.html\" rel=\"nofollow noreferrer\"><code>iproduct</code></a> macro in the <a href=\"https://crates.io/crates/itertools\" rel=\"nofollow noreferrer\"><code>itertools</code></a> crate that does what I want. Using it, my code can be rewritten like this:</p>\n\n<pre><code>use itertools::iproduct;\n...\nlet coords = iproduct!(0..WIDTH - 1, 0..HEIGHT - 1);\n...\n</code></pre>\n\n<p>That's exactly what I was looking for. Thanks to everyone who commented / posted answers here.</p>\n\n<p><em>PS: If you want to use an itertools iterator with rayon, you can do this by using the <a href=\"https://docs.rs/rayon/1.0.3/rayon/iter/trait.ParallelBridge.html#tymethod.par_bridge\" rel=\"nofollow noreferrer\"><code>par_bridge</code></a> method, e.g. <code>iproduct!(0..WIDTH - 1, 0..HEIGHT - 1).par_iter();</code>. Took me a while to figure that out since <code>par_iter</code> and <code>into_par_iter</code> don't work.</em></p>\n"}], "owner": {"reputation": 5008, "user_id": 3594526, "user_type": "registered", "accept_rate": 30, "profile_image": "https://i.stack.imgur.com/VfPew.jpg?s=128&g=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/3594526/felix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 356, "favorite_count": 1, "accepted_answer_id": 53742151, "answer_count": 3, "score": 3, "last_activity_date": 1544614479, "creation_date": 1544526221, "last_edit_date": 1544614479, "question_id": 53722749, "link": "https://stackoverflow.com/questions/53722749/iterating-over-x-y-positions-of-a-grid-using-functional-programming-methods", "title": "Iterating over (x,y) positions of a grid using functional programming methods", "body": "<p>I want to iterate over positions <code>(x, y)</code> in a 2-dimensional grid and call a function for each position (providing <code>x</code> and <code>y</code> as parameters). I know how this can be done using <code>for</code> loops, but I'd like to write this using functional programming methods such that I can later take advantage of libraries like Rayon. I've managed to build a functional version, but it seems complicated and I wanted to ask whether there's a cleaner way to achieve this.</p>\n\n<p>Here's a small example of computing the maximum sum of all 2x2 patches in a grid:</p>\n\n<pre><code>use std::cmp::max;\n\nconst WIDTH: usize = 4;\nconst HEIGHT: usize = 3;\n\ntype Grid = [[u32; WIDTH]; HEIGHT];\n\nfn main() {\n    let grid: Grid = [\n        [1, 3, 5, 8], \n        [3, 9, 4, 2], \n        [3, 4, 5, 0],\n    ];\n\n    let coords = (0..WIDTH - 1).flat_map(|x| (0..HEIGHT - 1).map(move |y| (x, y)));\n    let max_sum = coords.map(|(x, y)| sum_2x2(x, y, &amp;grid)).max().unwrap();\n    println!(\"Max 2x2 patch: {}\", max_sum);\n}\n\nfn sum_2x2(x: usize, y: usize, grid: &amp;Grid) -&gt; u32 {\n    [\n        grid[y][x],\n        grid[y][x + 1],\n        grid[y + 1][x],\n        grid[y + 1][x + 1],\n    ]\n    .iter()\n    .sum()\n}\n</code></pre>\n\n<p>The line <code>let coords = let coords = (0..WIDTH - 1).flat_map(|x| (0..HEIGHT - 1).map(move |y| (x, y)));</code> seems pretty complex for such a simple task. In Python, I'd do the following to get the positions (which I think is much cleaner):</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>&gt;&gt;&gt; from itertools import product\n&gt;&gt;&gt; product(range(HEIGHT-1), range(WIDTH-1))\n</code></pre>\n\n<p>Is there a better way to write this or do I just need to get used to it?</p>\n"}, {"tags": ["rust", "constants"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1544524164, "post_id": 53722058, "comment_id": 94297779, "body": "Why <code>default_value(&amp;DEFAULT_LISTENER_PORT.to_string())</code> is not ergonomic? This is the way to go. BTW, you could use <a href=\"https://github.com/TeXitoi/structopt\" rel=\"nofollow noreferrer\">structopt</a> that is an ergonomic wrapper to clap."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1544524189, "post_id": 53722058, "comment_id": 94297795, "body": "@Boiethios that value doesn&#39;t live long enough, since the temporary gets dropped (<code>error[E0716]: temporary value dropped while borrowed</code>). That&#39;s because the <code>default_value</code> expects a <code>&amp;&#39;a string</code>, where the lifetime <code>&#39;a</code> stems from <code>Arg</code> and ultimately ends up in <code>ArgMatches</code>."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1544525681, "post_id": 53722058, "comment_id": 94298669, "body": "@Boiethios Just a small remark on <code>structopt</code>/<code>clap</code>: <code>clap</code> is the motivation for the question, but I&#39;m more interested in a generic, not necessarily <code>clap</code>-oriented solution like your <code>DefaultParam</code> struct."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1544525805, "post_id": 53722058, "comment_id": 94298735, "body": "Ah ok, I see. I don&#39;t understand why the code in my comment has not its lifetime inferred right, tho. Do you compile it with the 2018 edition?"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1544526321, "post_id": 53722058, "comment_id": 94299051, "body": "@Boiethios see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a6482855edcde948591235eb84374e00\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. You need to use actually use <code>matches</code>, otherwise you won&#39;t encounter the error (see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=82f772541f08a0813868cf53b02a82fd\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> for a variant without an error, since <code>matches</code> is unused). As far as I can see, the lifetimes are inferred fine, and the temporary string just doesn&#39;t live long enough."}], "answers": [{"comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1544524527, "post_id": 53722212, "comment_id": 94298004, "body": "Heh. I was halfway there but tried to define a macro that returns a pair instead of two values. It didn&#39;t occur to me to define both in the macro itself (still new to macros). Is it possible to create the <code>_STR</code> variant from the normal variant and make the macro more generic, e.g. <code>define_option! { ($id:ident, $t:ty, $e:expr) =&gt; pub const $id : $t = $e; const MAGIC!($id) : &amp;str = stringify!($e); }</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1544524723, "post_id": 53722212, "comment_id": 94298130, "body": "@Zeta Not with a regular macro (at least in stable Rust). With a procedural one, this is ok."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 2, "creation_date": 1544525133, "post_id": 53722212, "comment_id": 94298331, "body": "@Zeta You can do that: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=aec33a9f4ab73335d5aaad94d1d34330\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1544525414, "post_id": 53722212, "comment_id": 94298512, "body": "@Boiethios excellent alternative answer. Feel free to post it, so that I can provide an upvote."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1544525584, "last_edit_date": 1544525584, "creation_date": 1544524369, "answer_id": 53722212, "question_id": 53722058, "link": "https://stackoverflow.com/questions/53722058/how-do-i-turn-a-tostring-value-into-a-str-at-compile-time/53722212#53722212", "title": "How do I turn a ToString value into a &amp;str at compile time?", "body": "<p>You can use a macro to define the port integer and string at the same time using <code>stringify!</code>:</p>\n\n<pre><code>macro_rules! define_port {\n    ($port:expr) =&gt; {\n        pub const DEFAULT_LISTENER_PORT : u16 = $port;\n        const DEFAULT_LISTENER_PORT_STR : &amp;str = stringify!($port);\n    }\n}\n\ndefine_port!(4579);\n\nfn main() {\n    println!(\"{}:{}\", DEFAULT_LISTENER_PORT, DEFAULT_LISTENER_PORT_STR);\n}\n</code></pre>\n\n<p>Or, if you want a more generic one:</p>\n\n<pre><code>pub struct DefaultParam&lt;T&gt; {\n    value: T,\n    name: &amp;'static str,\n}\n\nmacro_rules! define {\n    ( $name:ident : $t:ty = $val:expr ) =&gt; {\n        pub const $name: DefaultParam&lt;$t&gt; = DefaultParam {\n            value: $val,\n            name: stringify!($val),\n        };\n    }\n}\n\ndefine!(PORT: u32 = 1234);\n\nfn main() {\n    println!(\"{} has the value: {}\", PORT.name, PORT.value);\n}\n</code></pre>\n"}], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "accepted_answer_id": 53722212, "answer_count": 1, "score": 1, "last_activity_date": 1544525584, "creation_date": 1544523853, "question_id": 53722058, "link": "https://stackoverflow.com/questions/53722058/how-do-i-turn-a-tostring-value-into-a-str-at-compile-time", "title": "How do I turn a ToString value into a &amp;str at compile time?", "body": "<p><strong>TL;DR:</strong> Is it possible to create a <code>const \u2026 &amp;str</code> from a <code>const T</code> where <code>T : ToString</code>?</p>\n\n<hr>\n\n<p>I like to provide default values when I use <a href=\"https://docs.rs/clap/\" rel=\"nofollow noreferrer\"><code>clap</code></a>. However, <code>clap</code> needs the <a href=\"https://docs.rs/clap/2.32.0/clap/struct.Arg.html#method.default_value\" rel=\"nofollow noreferrer\"><code>default_value</code></a> as <code>&amp;str</code>, not as a primitive type:</p>\n\n<pre><code>pub fn default_value(self, val: &amp;'a str) -&gt; Self\n</code></pre>\n\n<p>Therefore, I cannot use a previously defined <code>const</code> if it is not a <code>&amp;str</code>:</p>\n\n<pre><code>use clap::{App, Arg};\n\n/// The application's default port.\npub const DEFAULT_LISTENER_PORT : u16 = 12345;\n\nfn main () {\n    let matches = App::new(env!(\"CARGO_PKG_NAME\"))\n        .version(env!(\"CARGO_PKG_VERSION\"))\n        .arg(Arg::with_name(\"port\")\n             .short(\"p\")\n             .value_name(\"PORT\")\n             .default_value(DEFAULT_LISTENER_PORT) // &lt; error here\n        ).get_matches();\n     \u2026\n}\n</code></pre>\n\n<p>The workaround is to use a <code>&amp;str</code> instead:</p>\n\n<pre><code>/// The application's default port.\npub const DEFAULT_LISTENER_PORT : u16 = 12345;\n\n// Not public, since implementation detail.\nconst DEFAULT_LISTENER_PORT_STR : &amp;str = \"12345\";\n\nfn main () {\n    let matches = App::new(env!(\"CARGO_PKG_NAME\"))\n        .version(env!(\"CARGO_PKG_VERSION\"))\n        .arg(Arg::with_name(\"port\")\n             .short(\"p\")\n             .value_name(\"PORT\")\n             .default_value(DEFAULT_LISTENER_PORT_STR)\n        ).get_matches();\n     \u2026\n}\n</code></pre>\n\n<p>However, the two constants can get easily out of sync:</p>\n\n<pre><code>/// The application's default port.\npub const DEFAULT_LISTENER_PORT : u16 = 4579;\n\nconst DEFAULT_LISTENER_PORT_STR : &amp;str = \"12345\"; // whoops\n</code></pre>\n\n<p>Therefore, I'd like to generate the latter from the former by some magic function or macro:</p>\n\n<pre><code>/// The application's default port.\npub const DEFAULT_LISTENER_PORT : u16 = 4579;\n\nconst DEFAULT_LISTENER_PORT_STR : &amp;str = magic!(DEFAULT_LISTENER_PORT);\n</code></pre>\n\n<p><strong>Note:</strong> Since <a href=\"https://doc.rust-lang.org/nightly/std/string/trait.ToString.html#tymethod.to_string\" rel=\"nofollow noreferrer\"><code>std::string::ToString::to_string</code></a> isn't <code>const</code>, it's out of scope but would provide a workaround in main, e.g.</p>\n\n<pre><code>let port_string = DEFAULT_LISTENER_PORT.to_string();\nlet matches = App::new(env!(\"CARGO_PKG_NAME\"))\n    .version(env!(\"CARGO_PKG_VERSION\"))\n    .arg(Arg::with_name(\"port\")\n         .short(\"p\")\n         .value_name(\"PORT\")\n         .default_value(&amp;port_string)\n    ).get_matches();\n</code></pre>\n\n<p>But that's not really ergonomic either.</p>\n\n<p>Is there any standard macro or function that I'm missing, or is there no language-defined way yet to provide that functionality?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 956, "user_id": 5267244, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2211dfc83612c3406869f14a1187fb30?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/5267244/david"}, "edited": false, "score": 1, "creation_date": 1544552710, "post_id": 53720065, "comment_id": 94314043, "body": "Ah thanks, that worked. But I still don&#39;t understand why there has to be a lifetime parameter in the angle brackets. Whats the difference between &amp;Node&lt;&#39;a&gt;, &amp;&#39;a Node and &amp;&#39;a Node&lt;&#39;a&gt;. Does the lifetime parameter in the angle brackets just have to be there to satisfy the name of the type or does it mean anything?"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 4, "last_activity_date": 1544516722, "creation_date": 1544516722, "answer_id": 53720065, "question_id": 53719894, "link": "https://stackoverflow.com/questions/53719894/contradictory-missing-lifetime-specifier-error-on-owned-value/53720065#53720065", "title": "Contradictory &quot;missing lifetime specifier&quot; error on owned value", "body": "<p>Your defintion of node is</p>\n\n<pre><code>struct Node&lt;'a&gt;\n</code></pre>\n\n<p>but later on you don't provide that lifetime anymore. Your <code>new</code> signature must look like</p>\n\n<pre><code>fn new(parent: &amp;'a Node) -&gt; Node&lt;'a&gt;;\n</code></pre>\n\n<p>same with your struct definition</p>\n\n<pre><code>struct Node&lt;'a&gt; {\n    parent: &amp;'a Node&lt;'a&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 956, "user_id": 5267244, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2211dfc83612c3406869f14a1187fb30?s=128&d=identicon&r=PG&f=1", "display_name": "David", "link": "https://stackoverflow.com/users/5267244/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "closed_date": 1544539412, "accepted_answer_id": 53720065, "answer_count": 1, "score": 0, "last_activity_date": 1544539494, "creation_date": 1544516012, "last_edit_date": 1544539494, "question_id": 53719894, "link": "https://stackoverflow.com/questions/53719894/contradictory-missing-lifetime-specifier-error-on-owned-value", "closed_reason": "Duplicate", "title": "Contradictory &quot;missing lifetime specifier&quot; error on owned value", "body": "<p>I wrote code to model the following structure, where a node has a reference to its parent node:</p>\n\n<pre><code>struct Node&lt;'a&gt; {\n    parent: &amp;'a Node,\n}\n\nimpl&lt;'a&gt; Node&lt;'a&gt; {\n    fn new(parent: &amp;'a Node) -&gt; Node {\n        Node { parent }\n    }\n}\n</code></pre>\n\n<p>I thought with the lifetime parameter on the <code>parent</code> attribute and on the <code>parent</code> parameter in the <code>new</code> function it is made clear that the value behind the reference to <code>parent</code> has to live at least as long as the child node that holds the reference.</p>\n\n<p>However, the compiler gives me two \"<code>missing lifetime specifier</code>\" messages.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:2:17\n  |\n7 |     parent: &amp;'a Node,\n  |                 ^^^^ expected lifetime parameter\n</code></pre>\n\n<p>There <strong>is</strong> a lifetime parameter on the attribute. What the hell does the compiler want from me here?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:6:33\n  |\n6 |     fn new(parent: &amp;'a Node) -&gt; Node {\n  |                                 ^^^^ expected lifetime parameter\n</code></pre>\n\n<p>Here I expected the compiler to assume that the return value has to live at least as long as <code>'a</code>. Appearantly it does not. I thought it is syntactically impossible (because unnecessary) to annotate an owned value with a lifetime parameter. But still the compiler seemed to desire one here so I gave what it was asking for.</p>\n\n<pre><code>// --snip\nfn new(parent: &amp;'a Node) -&gt; 'a Node {\n// --snip\n</code></pre>\n\n<p>When I tried to compile that, the second error turned into a differnt one:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected type, found `'a`\n --&gt; src/main.rs:6:33\n  |\n6 |     fn new(parent: &amp;'a Node) -&gt; 'a Node {\n  |                                 ^^\n</code></pre>\n\n<p>So now the compiler tells me that it doesn't expect a lifetime parameter here, which seems contradictory to the message from before.<br>\nHow can I express this structure correctly, where a Node has a reference to its parent, which lives at least as long as the child node itself? Is it only possible with <code>Rc</code> and if yes, why?</p>\n"}, {"tags": ["collections", "rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1544512709, "post_id": 53719029, "comment_id": 94291734, "body": "How about a <code>HashMap&lt;Rc&lt;String&gt;, Record&gt;</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1544517165, "post_id": 53719029, "comment_id": 94293584, "body": "@Jmb This should be an answer."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1544518749, "post_id": 53719029, "comment_id": 94294473, "body": "Maybe you can use a <code>HashSet&lt;WrapperRecord&gt;</code>, having <code>WrapperRecord</code> contain a <code>Record</code> and implement <code>Hash</code> and <code>Borrow&lt;str&gt;</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1544526055, "post_id": 53720885, "comment_id": 94298879, "body": "That&#39;s indeed a nice way to implement it without a self-reference. I didn&#39;t think of implementing Borrow&lt;str&gt; so that I could use &amp;str in h.get(...)."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1544526120, "post_id": 53720885, "comment_id": 94298920, "body": "However, what I would like is a type abstracting this mechanism so that the user does not have to juggle btw Records and HRecords... Any crate providing that?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1544526213, "post_id": 53720885, "comment_id": 94298988, "body": "@Pierre-Antoine: Well, you can easily wrap a <code>HashSet&lt;HRecord&gt;</code> into a <code>RecordSet</code> and expose the proper <code>insert(&amp;mut self, r: Record)</code> and <code>get(&amp;self, &amp;str) -&gt; &amp;Record</code> functions, and keep the <code>HRecord</code> private."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1544531820, "post_id": 53720885, "comment_id": 94302055, "body": "indeed, but then I would have to mirror all the usual container methods (iter, len, shrink_to_fit...), which is cumbersome, and could be factorized in to a generic type, hence my question."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1544532012, "post_id": 53720885, "comment_id": 94302158, "body": "that being said, I realized that, if I have control over the Record type (which is the case in my actual scenario), I don&#39;t need HRecord, I can simply implement Hash, Eq and Borrow&lt;str&gt; (thanks again for that tip) for Record itself, and then use a HashSet&lt;Record&gt;. E.g.: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a17a3af31afc43ebb1ecf594d997e55a\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 1, "creation_date": 1544532364, "post_id": 53720885, "comment_id": 94302334, "body": "@Pierre-Antoine: That is up to you, of course. But implementing <code>Eq</code> for that may not be a good idea: being equal for indexing purposes does not necessarily mean being equal for everything. And a similar caveat for <code>Borrow&lt;str&gt;</code>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1544532395, "post_id": 53720885, "comment_id": 94302348, "body": "You can instead implement <code>impl Deref&lt;Target = Record&gt; for HRecord</code> and <code>impl From Record for HRecord</code> That would minimize user inconvenience while keeping the <code>Record</code> unaltered."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 3, "last_activity_date": 1544521454, "last_edit_date": 1544521454, "creation_date": 1544519988, "answer_id": 53720885, "question_id": 53719029, "link": "https://stackoverflow.com/questions/53719029/how-can-i-index-a-collection-of-records-by-one-of-their-field/53720885#53720885", "title": "How can I index a collection of records by one of their field?", "body": "<p>If you want a container where the key itself is part of the value, you can use <code>HashSet</code> with a <em>newtype</em> to reimplement the required traits: <code>Hash</code>, <code>Borrow&lt;str&gt;</code>, <code>PartialEq</code> and <code>Eq</code>.</p>\n\n<p>For example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c752322f239b9a4a679bbf2841d86c27\" rel=\"nofollow noreferrer\">(link to playground)</a>:</p>\n\n<pre><code>struct HRecord(Record);\nimpl Hash for HRecord {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        self.0.get_key().hash(state);\n    }\n}\nimpl PartialEq for HRecord {\n    fn eq(&amp;self, r: &amp;HRecord) -&gt; bool {\n        self.0.get_key().eq(r.0.get_key())\n    }\n}\nimpl Eq for HRecord {}\nimpl Borrow&lt;str&gt; for HRecord {\n    fn borrow(&amp;self) -&gt; &amp;str {\n        self.0.get_key()\n    }\n}\n</code></pre>\n\n<p>And now the <code>HashMap</code> just works:</p>\n\n<pre><code>let mut h = HashSet::new();\nh.insert(HRecord(Record { ... }));\nlet obj = h.get(\"...\").map(|h| &amp;h.0);\n</code></pre>\n"}], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "closed_date": 1544538224, "accepted_answer_id": 53720885, "answer_count": 1, "score": 4, "last_activity_date": 1544521454, "creation_date": 1544511913, "question_id": 53719029, "link": "https://stackoverflow.com/questions/53719029/how-can-i-index-a-collection-of-records-by-one-of-their-field", "closed_reason": "Duplicate", "title": "How can I index a collection of records by one of their field?", "body": "<p>I have a <code>Record</code> type, with a <code>get_key(&amp;self) -&gt; &amp;str</code> method (borrowing the returned <code>str</code> from inside the record). Records may be mutable, but their key is guaranteed not to change.</p>\n\n<p>I want to store a list of records in a collection, and be able to retrieve a record by its key. The first idea is to use a <code>HashMap&lt;String, Record&gt;</code>, but that looks like a waste of space (because the strings in the key position are copies of the record's keys).</p>\n\n<p>I would rather have a <code>HashMap&lt;&amp;str, Record&gt;</code>, but I can't provide a lifetime for the <code>&amp;str</code> keys (since they are borrowed from <em>inside</em> the hashmap). This is the kind of self-reference that crates like <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">rental</a> or <a href=\"https://crates.io/crates/owning_ref\" rel=\"nofollow noreferrer\">owning_ref</a> are designed to handle. However, none of them provide an out-of-the-box solution for this use-case.</p>\n\n<p>I looked for a crate providing this kind of \"indexed collection\", but to no avail. Am I missing something? (I started hacking a solution of my own, but I'd rather not re-invent the wheel)</p>\n"}, {"tags": ["process", "rust", "command"], "answers": [{"tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": true, "score": 2, "last_activity_date": 1544494845, "last_edit_date": 1544494845, "creation_date": 1544492639, "answer_id": 53716198, "question_id": 53716197, "link": "https://stackoverflow.com/questions/53716197/how-can-i-convert-a-stdprocesscommand-into-a-command-line-string/53716198#53716198", "title": "How can I convert a std::process::Command into a command line string?", "body": "<p>It turns out <code>Command</code> implements <code>Debug</code>; this will give me the desired result:</p>\n\n<pre><code>let answer = format!(\"{:?}\", com);\n</code></pre>\n"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 245, "favorite_count": 0, "accepted_answer_id": 53716198, "answer_count": 1, "score": 2, "last_activity_date": 1544494845, "creation_date": 1544492639, "last_edit_date": 1544494800, "question_id": 53716197, "link": "https://stackoverflow.com/questions/53716197/how-can-i-convert-a-stdprocesscommand-into-a-command-line-string", "title": "How can I convert a std::process::Command into a command line string?", "body": "<p>For example:</p>\n\n<pre><code>let mut com = std::process::Command::new(\"ProgramA\");\n\ncom.env(\"ENV_1\", \"VALUE_1\")\n    .arg(\"-a\")\n    .arg(\"foo\")\n    .arg(\"-b\")\n    .arg(\"--argument=bar\");\n\n// Get the command line string somehow here.\n\ncom.output().unwrap();\n</code></pre>\n\n<p>This will spawn a process with this command line <code>\"ProgramA\" -a foo -b \"--argument=with space\"</code> associated with it.</p>\n\n<p>Is there a way to get this back out from the <code>com</code> object?</p>\n"}, {"tags": ["macros", "rust", "rust-macros"], "answers": [{"comments": [{"owner": {"reputation": 85, "user_id": 8396319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b7c26dd40b33adf458b92dd23f516f5?s=128&d=identicon&r=PG&f=1", "display_name": "Artyom Gevorgyan", "link": "https://stackoverflow.com/users/8396319/artyom-gevorgyan"}, "edited": false, "score": 0, "creation_date": 1610190820, "post_id": 53716236, "comment_id": 116057379, "body": "Is there a way to bypass it?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 85, "user_id": 8396319, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b7c26dd40b33adf458b92dd23f516f5?s=128&d=identicon&r=PG&f=1", "display_name": "Artyom Gevorgyan", "link": "https://stackoverflow.com/users/8396319/artyom-gevorgyan"}, "edited": false, "score": 0, "creation_date": 1610374223, "post_id": 53716236, "comment_id": 116104949, "body": "@ArtyomGevorgyan not that I&#39;m aware of; pass in the name in that case."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1544492919, "creation_date": 1544492919, "answer_id": 53716236, "question_id": 53716044, "link": "https://stackoverflow.com/questions/53716044/why-can-i-not-access-a-variable-declared-in-a-macro-unless-i-pass-in-the-name-of/53716236#53716236", "title": "Why can I not access a variable declared in a macro unless I pass in the name of the variable?", "body": "<p>Yes, this is <em>macro hygiene</em>. Identifiers declared within the macro are not available outside of the macro (and vice versa). Rust macros are not C macros (that is, Rust macros are more than glorified text replacement).</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://danielkeep.github.io/tlborm/book/mbe-min-hygiene.html\" rel=\"noreferrer\">The Little Book of Rust Macros</a></li>\n<li><a href=\"https://danielkeep.github.io/practical-intro-to-macros.html#being-hygienic\" rel=\"noreferrer\">A Practical Intro to Macros</a></li>\n<li><a href=\"https://www.reddit.com/r/rust/comments/5v8r8f/so_what_are_hygienic_macros_anyway/\" rel=\"noreferrer\">So, what are hygienic macros anyway?</a></li>\n</ul>\n"}], "owner": {"reputation": 953, "user_id": 608958, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/920c3fee71480a12e35d5084f44d8638?s=128&d=identicon&r=PG", "display_name": "rincewind", "link": "https://stackoverflow.com/users/608958/rincewind"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 984, "favorite_count": 2, "accepted_answer_id": 53716236, "answer_count": 1, "score": 10, "last_activity_date": 1544492919, "creation_date": 1544491269, "last_edit_date": 1544492604, "question_id": 53716044, "link": "https://stackoverflow.com/questions/53716044/why-can-i-not-access-a-variable-declared-in-a-macro-unless-i-pass-in-the-name-of", "title": "Why can I not access a variable declared in a macro unless I pass in the name of the variable?", "body": "<p>I have this macro:</p>\n\n<pre><code>macro_rules! set_vars {\n    ( $($x:ident),* ) =&gt; {\n        let outer = 42;\n        $( let $x = outer; )*\n    }\n}                                                                             \n</code></pre>\n\n<p>Which expands this invocation:</p>\n\n<pre><code>set_vars!(x, y, z);\n</code></pre>\n\n<p>into what I expect (from <code>--pretty=expanded</code>):</p>\n\n<pre><code>let outer = 42;\nlet x = outer;\nlet y = outer;\nlet z = outer;\n</code></pre>\n\n<p>In the subsequent code I can print <code>x</code>, <code>y</code>, and <code>z</code> just fine, but <code>outer</code> seems to be undefined:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find value `outer` in this scope\n  --&gt; src/main.rs:11:5\n   |\n11 |     outer;\n   |     ^^^^^ not found in this scope\n</code></pre>\n\n<p>I can access the <code>outer</code> variable if I pass it as an explicit macro parameter.</p>\n\n<p>Is this intentional, something to do with \"macro hygiene\"? If so, then it would probably make sense to mark such \"internal\" variables in <code>--pretty=expanded</code> in some special way? </p>\n"}, {"tags": ["linux", "rust", "mmap"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544480903, "post_id": 53714241, "comment_id": 94283784, "body": "That crate is already suspicious as <i>every single access</i> of an mmapped file is unsafe by Rust&#39;s terms. That type allows you to access the file while another process may be modifying it without any kind of guards."}, {"owner": {"reputation": 3467, "user_id": 3393308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a3f30f7c191e8d556c70c951fe3d9af?s=128&d=identicon&r=PG", "display_name": "yorodm", "link": "https://stackoverflow.com/users/3393308/yorodm"}, "edited": false, "score": 1, "creation_date": 1544482140, "post_id": 53714241, "comment_id": 94284242, "body": "See <a href=\"https://www.reddit.com/r/rust/comments/4gnf34/is_appending_to_a_file_that_is_mmaped_safe_and/\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://stackoverflow.com/questions/4460507/appending-to-a-memory-mapped-file\">this</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1544488687, "last_edit_date": 1544488687, "creation_date": 1544488180, "answer_id": 53715730, "question_id": 53714241, "link": "https://stackoverflow.com/questions/53714241/how-to-append-to-a-file-backed-mmap-using-the-memmap-crate/53715730#53715730", "title": "How to append to a file-backed mmap using the memmap crate?", "body": "<p>First off, based on my understanding, I would urge you to be <strong>highly suspicious of that crate</strong>. It allows you do do things in safe Rust that you should <em>not</em>. </p>\n\n<p>For example, if you have a file-backed mmap, then any process on your computer with the right permissions to the file can modify it. This means that:</p>\n\n<ol>\n<li>It's never valid for the mmapped file to be treated as an immutable slice of bytes (<code>&amp;[u8]</code>) because it might be mutated!</li>\n<li>It's never valid for the mmapped file to be treated as a mutable slice of bytes (<code>&amp;mut [u8]</code>) because a mutable reference implies an exclusive owner that can change that data, but you don't have that.</li>\n</ol>\n\n<p>The <a href=\"https://docs.rs/memmap/0.7.0/memmap/index.html\" rel=\"nofollow noreferrer\">documentation for that crate</a> covers <em>none</em> of these concerns and doesn't discuss how you are supposed to use the small handful of <code>unsafe</code> functions in a safe manner. To me, these are signs that you may be introducing undefined behavior into your code, which is a Very Bad Thing.</p>\n\n<p>For example:</p>\n\n<pre><code>use memmap;\nuse std::{fs, io::prelude::*};\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let mut backing_file = fs::OpenOptions::new()\n        .read(true)\n        .append(true)\n        .create(true)\n        .write(true)\n        .open(\"foo.txt\")?;\n\n    backing_file.write_all(b\"initial\")?;\n\n    let mut mmap_mut = unsafe { memmap::MmapMut::map_mut(&amp;backing_file)? };\n    let mmap_immut = unsafe { memmap::Mmap::map(&amp;backing_file)? };\n\n    // Code after here violates the rules of references, but doesn't use `unsafe`\n    let a_str: &amp;str = std::str::from_utf8(&amp;mmap_immut)?;\n    println!(\"{}\", a_str); // initial\n\n    mmap_mut[0] = b'x';\n\n    // Look, we just changed an \"immutable reference\"!\n    println!(\"{}\", a_str); // xnitial\n\n    Ok(())\n}\n</code></pre>\n\n<hr>\n\n<p>Since people generally don't like being told \"no, don't do that, it's a bad idea\", here's how to get your code to \"work\": directly append to the file and then recreate the mmap:</p>\n\n<pre><code>use memmap;\nuse std::{fs, io::prelude::*, thread, time::Duration};\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let mut backing_file = fs::OpenOptions::new()\n        .read(true)\n        .append(true)\n        .create(true)\n        .write(true)\n        .open(\"foo.txt\")?;\n\n    // mmap requires that the initial mapping be non-zero\n    backing_file.write_all(b\"initial\")?;\n\n    for _ in 0..3 {\n        let mmap = unsafe { memmap::MmapMut::map_mut(&amp;backing_file)? };\n\n        // I think this line can introduce memory unsafety\n        println!(\"{}\", std::str::from_utf8(&amp;mmap[..])?);\n\n        thread::sleep(Duration::from_secs(1));\n\n        backing_file.write_all(b\"somestring\")?;\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>You may want to preallocate a \"big\" chunk of space in this file so that you can just open it up and start writing, instead of having to re-map it.</p>\n\n<p>I would not use this code for anything where it's important that the data is correct, myself.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://www.reddit.com/r/rust/comments/4gnf34/is_appending_to_a_file_that_is_mmaped_safe_and/\" rel=\"nofollow noreferrer\">Is appending to a file that is Mmap-ed safe and cross-platform?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/4460507/appending-to-a-memory-mapped-file\">appending to a memory-mapped file</a></li>\n<li><a href=\"https://stackoverflow.com/q/28516996/155423\">How to create and write to memory mapped files?</a></li>\n</ul>\n"}], "owner": {"reputation": 2427, "user_id": 3788261, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d14c68ce6c53d9f94656f04bb750300?s=128&d=identicon&r=PG&f=1", "display_name": "ShrimpPhaser", "link": "https://stackoverflow.com/users/3788261/shrimpphaser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 566, "favorite_count": 0, "accepted_answer_id": 53715730, "answer_count": 1, "score": 2, "last_activity_date": 1544488687, "creation_date": 1544478897, "last_edit_date": 1544486995, "question_id": 53714241, "link": "https://stackoverflow.com/questions/53714241/how-to-append-to-a-file-backed-mmap-using-the-memmap-crate", "title": "How to append to a file-backed mmap using the memmap crate?", "body": "<p>I have a file <code>foo.txt</code> with the content</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foobar\n</code></pre>\n\n<p>I want to continuously append to this file and have access to the modified file.</p>\n\n<h3><code>MmapMut</code></h3>\n\n<p>The first thing I tried is to mutate the mmap directly:</p>\n\n<pre><code>use memmap;\nuse std::fs;\nuse std::io::prelude::*;\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let backing_file = fs::OpenOptions::new()\n        .read(true)\n        .append(true)\n        .create(true)\n        .write(true)\n        .open(\"foo.txt\")?;\n\n    let mut mmap = unsafe { memmap::MmapMut::map_mut(&amp;backing_file)? };\n\n    loop {\n        println!(\"{}\", std::str::from_utf8(&amp;mmap[..])?);\n        std::thread::sleep(std::time::Duration::from_secs(5));\n        let buf = b\"somestring\";\n        (&amp;mut mmap[..]).write_all(buf)?;\n        mmap.flush()?;\n    }\n}\n</code></pre>\n\n<p>This will result in a panic:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Error: Custom { kind: WriteZero, error: StringError(\"failed to write whole buffer\") }\n</code></pre>\n\n<p>The resulting file reads <code>somest</code> </p>\n\n<h3>Appending to the backing file directly</h3>\n\n<p>After that, I tried to append to the backing file directly:</p>\n\n<pre><code>use memmap;\nuse std::fs;\nuse std::io::prelude::*;\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let mut backing_file = fs::OpenOptions::new()\n        .read(true)\n        .append(true)\n        .create(true)\n        .write(true)\n        .open(\"foo.txt\")?;\n\n    let mmap = unsafe { memmap::MmapMut::map_mut(&amp;backing_file)? };\n\n    loop {\n        println!(\"{}\", std::str::from_utf8(&amp;mmap[..])?);\n        std::thread::sleep(std::time::Duration::from_secs(5));\n        let buf = b\"somestring\";\n        backing_file.write_all(buf)?;\n        backing_file.flush()?;\n    }\n}\n</code></pre>\n\n<p>This does not result in a panic. The file will get updated regularly, but my mmap does not reflect these changes. I expected standard output to look like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foobar\nfoobarsomestring\nfoobarsomestringsomestring\n...\n</code></pre>\n\n<p>But I got</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>foobar\nfoobar\nfoobar\n...\n</code></pre>\n\n<p>I am mainly interested in a Linux solution if it is platform-dependent.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1544477314, "post_id": 53713821, "comment_id": 94282336, "body": "The easiest solution is to <a href=\"https://blog.rust-lang.org/2018/12/06/Rust-1.31-and-rust-2018.html\" rel=\"nofollow noreferrer\">switch to Rust 2018</a> and your original code will work."}], "owner": {"reputation": 6775, "user_id": 974733, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/a92fc92fd900ad9712d1bc7ea6c87f01?s=128&d=identicon&r=PG", "display_name": "Mark Vincze", "link": "https://stackoverflow.com/users/974733/mark-vincze"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 100, "favorite_count": 0, "closed_date": 1544477273, "answer_count": 0, "score": 2, "last_activity_date": 1544477833, "creation_date": 1544476900, "last_edit_date": 1544477833, "question_id": 53713821, "link": "https://stackoverflow.com/questions/53713821/how-to-avoid-borrowing-a-vec-as-mutable-twice-in-different-match-arms", "closed_reason": "Duplicate", "title": "How to avoid borrowing a Vec as mutable twice in different match arms?", "body": "<p>I'm storing some structs in a vector. In a loop I'm trying to process some input, and in every iteration I'd like to either insert a new item into the vector, or mutate an existing element (depending on whether it's already in the vector or not).</p>\n\n<p>So I'm trying to do something like this.</p>\n\n<pre><code>struct Foo {\n    id: char,\n    data: i32,\n}\n\nfn main() {\n    let mut cache: Vec&lt;Foo&gt; = Vec::new();\n\n    for a in vec!['c'] {\n        let foo = cache.iter_mut().filter(|s| s.id == a).nth(0);\n\n        match foo {\n            Some(f) =&gt; {\n                f.data = f.data + 1;\n            }\n            None =&gt; {\n                cache.push(Foo { id: a, data: 0 });\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I'm getting an error in the <code>None</code> arm saying</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `cache` as mutable more than once at a time\n  --&gt; src/main.rs:17:17\n   |\n10 |         let foo = cache.iter_mut().filter(|s| s.id == a).nth(0);\n   |                   ----- first mutable borrow occurs here\n...\n17 |                 cache.push(Foo { id: a, data: 0 });\n   |                 ^^^^^ second mutable borrow occurs here\n...\n20 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>What's the idiomatic way to avoid this issue? I tried the following workaround, which seems to work, but it feels very clunky.</p>\n\n<pre><code>for a in vec!['c'] {\n    let mut found = false;\n\n    {\n        let step = cache.iter_mut().filter(|s| s.id == a).nth(0);\n\n        match step {\n            Some(f) =&gt; {\n                f.data = f.data + 1;\n                found = true;\n            }\n            None =&gt; (),\n        }\n    }\n\n    if !found {\n        cache.push(Foo { id: a, data: 0 });\n    }\n}\n</code></pre>\n\n<p>Is there an easier solution?</p>\n"}, {"tags": ["struct", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 9435, "user_id": 2626000, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/j8GY0.jpg?s=128&g=1", "display_name": "Aaron Christiansen", "link": "https://stackoverflow.com/users/2626000/aaron-christiansen"}, "edited": false, "score": 0, "creation_date": 1544474968, "post_id": 53713384, "comment_id": 94281397, "body": "Ah OK; thank you for your answer. I&#39;d consider writing a macro if I needed to implement this trait more, but since it&#39;ll only be for <code>LinkedList</code> I won&#39;t bother. Thanks again"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1544474745, "creation_date": 1544474745, "answer_id": 53713384, "question_id": 53713354, "link": "https://stackoverflow.com/questions/53713354/implementing-traits-without-repeating-methods-already-defined-on-the-struct/53713384#53713384", "title": "Implementing traits without repeating methods already defined on the struct", "body": "<blockquote>\n  <p>Is there a way to omit the re-definition of <code>len</code> in my trait implementation?</p>\n</blockquote>\n\n<p>No, it is not possible.</p>\n\n<p>You may be able to write a macro of some kind to write the code for you, but dealing with type parameters is annoying, to say the least.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44445730/155423\">How to call a method when a trait and struct use the same name?</a></li>\n</ul>\n"}], "owner": {"reputation": 9435, "user_id": 2626000, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/j8GY0.jpg?s=128&g=1", "display_name": "Aaron Christiansen", "link": "https://stackoverflow.com/users/2626000/aaron-christiansen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 213, "favorite_count": 0, "accepted_answer_id": 53713384, "answer_count": 1, "score": 2, "last_activity_date": 1544474794, "creation_date": 1544474635, "last_edit_date": 1544474794, "question_id": 53713354, "link": "https://stackoverflow.com/questions/53713354/implementing-traits-without-repeating-methods-already-defined-on-the-struct", "title": "Implementing traits without repeating methods already defined on the struct", "body": "<p>I have a trait which only has one requirement, the presence of a methods <code>len(&amp;self) -&gt; usize</code>. It then provides implementations for a couple of new methods for the struct.</p>\n\n<pre><code>trait MyTrait {\n    fn len(&amp;self) -&gt; usize;\n\n    // ... some new functions with implementations\n}\n</code></pre>\n\n<p>I'd like to implement this trait on <code>std::collections::LinkedList</code> which already has a method with that exact type signature. Currently, I'm doing this:</p>\n\n<pre><code>impl&lt;T&gt; MyTrait for LinkedList&lt;T&gt; {\n    fn len(&amp;self) -&gt; usize {\n        self.len()\n    }\n}\n</code></pre>\n\n<p>I can then use the new methods defined by <code>MyTrait</code> on my <code>LinkedList</code> instances. However, it feels unnecessary to have to repeat the definition of the method like this, since the type signatures are identical. Is there a way to omit the re-definition of <code>len</code> in my trait implementation?</p>\n"}, {"tags": ["rust", "ecdsa"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1544468938, "post_id": 53711729, "comment_id": 94278588, "body": "<code>SecretKey::new</code> expects a random number generator (as in, it implements <code>Rng</code>) as the second parameter. If you make that other string a compatible slice of bytes, you can use <a href=\"https://www.wpsoftware.net/rustdoc/secp256k1/key/struct.SecretKey.html#method.from_slice\" rel=\"nofollow noreferrer\"><code>SecretKey::from_slice</code></a> instead."}], "answers": [{"comments": [{"owner": {"reputation": 2568, "user_id": 3232427, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JC6m3.jpg?s=128&g=1", "display_name": "brickpop", "link": "https://stackoverflow.com/users/3232427/brickpop"}, "edited": false, "score": 0, "creation_date": 1596478249, "post_id": 53713063, "comment_id": 111818083, "body": "You probably want to use <code>&quot;d500266f7d37f0957564e4ce1a1dcc8bb3408383634774a2f4a94a35f4b&zwnj;&#8203;c53e0&quot;.as_bytes()</code> in a different way, since this statement will treat the string as text, and not as hex buffer."}], "tags": [], "owner": {"reputation": 521, "user_id": 7310095, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Gd3MEz2oFWE/AAAAAAAAAAI/AAAAAAAAAC8/pwtDrc7Qves/photo.jpg?sz=128", "display_name": "Roman Frolov", "link": "https://stackoverflow.com/users/7310095/roman-frolov"}, "is_accepted": true, "score": 1, "last_activity_date": 1561059398, "last_edit_date": 1561059398, "creation_date": 1544473271, "answer_id": 53713063, "question_id": 53711729, "link": "https://stackoverflow.com/questions/53711729/how-to-generate-an-ethereum-public-key-from-a-private-key-using-rust-secp256k1/53713063#53713063", "title": "How to generate an Ethereum public key from a private key using rust-secp256k1?", "body": "<p>The following code generates a public key from a private key:</p>\n\n<pre><code>extern crate secp256k1;\nextern crate hex;\n\nuse secp256k1::key::{SecretKey, PublicKey};\n\nfn main() {\n    let context = secp256k1::Secp256k1::new();\n\n    let private_key: &amp;[u8] = \"d500266f7d37f0957564e4ce1a1dcc8bb3408383634774a2f4a94a35f4bc53e0\".as_bytes();\n\n    let secret_key = SecretKey::from_slice(&amp;hex::decode(private_key).unwrap());\n\n    let public_key = PublicKey::from_secret_key(&amp;context, &amp;secret_key.unwrap());\n\n    println!(\"{:?}\", public_key.unwrap()); // PublicKey(a423c05d32e3385bb2930e42ebbf104567215761e166c3ae3dd91d9c8bee0adcfc4f9e4ec43998eae8000de6b166014c5921c6d4545675f4f9205e7bc3d4401e)\n}\n</code></pre>\n\n<p>Instead of using <code>SecretKey::new</code>, which expects a random number generator as the second parameter, I needed to use <a href=\"https://github.com/rust-bitcoin/rust-secp256k1/blob/0fbc0f99ab4f9e94f83629e3bc2a0e04a3ee5086/src/key.rs#L119\" rel=\"nofollow noreferrer\"><code>SecretKey::from_slice</code></a>. <code>from_slice</code> takes a 32-byte key, which I can <a href=\"https://stackoverflow.com/q/52987181/155423\">parse from my string</a> into a compatible slice of bytes.</p>\n"}, {"tags": [], "owner": {"reputation": 37, "user_id": 14876802, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/128f1376d0e583b3f857502daa771b4e?s=128&d=identicon&r=PG&f=1", "display_name": "Isambard_FA", "link": "https://stackoverflow.com/users/14876802/isambard-fa"}, "is_accepted": false, "score": 1, "last_activity_date": 1615796059, "creation_date": 1615796059, "answer_id": 66634403, "question_id": 53711729, "link": "https://stackoverflow.com/questions/53711729/how-to-generate-an-ethereum-public-key-from-a-private-key-using-rust-secp256k1/66634403#66634403", "title": "How to generate an Ethereum public key from a private key using rust-secp256k1?", "body": "<p>Just adding to the accepted answer:</p>\n<p>The public key you printed in the last line is not the correct form of the uncompressed public key. To display that requires using the method <code>serialize_uncompressed</code> from the <code>secp256k1</code> crate on the public key, and dropping the leading <code>04</code> hex-byte.</p>\n<p>More information on the incorrect formatting <a href=\"https://stackoverflow.com/questions/62664187/why-are-secp256k1-uncompressed-public-keys-not-formatted-as-expected/66588748#66588748\">here</a>.</p>\n"}], "owner": {"reputation": 521, "user_id": 7310095, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Gd3MEz2oFWE/AAAAAAAAAAI/AAAAAAAAAC8/pwtDrc7Qves/photo.jpg?sz=128", "display_name": "Roman Frolov", "link": "https://stackoverflow.com/users/7310095/roman-frolov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 482, "favorite_count": 0, "accepted_answer_id": 53713063, "answer_count": 2, "score": 0, "last_activity_date": 1615796059, "creation_date": 1544467201, "last_edit_date": 1544473652, "question_id": 53711729, "link": "https://stackoverflow.com/questions/53711729/how-to-generate-an-ethereum-public-key-from-a-private-key-using-rust-secp256k1", "title": "How to generate an Ethereum public key from a private key using rust-secp256k1?", "body": "<p>I found <a href=\"https://github.com/paritytech/rust-secp256k1\" rel=\"nofollow noreferrer\">rust-secp256k1</a> and it seems to be what I need, but there are no examples in the documentation.</p>\n\n<p>I tried to use this crate in my code:</p>\n\n<pre><code>extern crate secp256k1;\n\nuse secp256k1::key::SecretKey;\n\nfn main() {\n    let context = secp256k1::Secp256k1::without_caps();\n\n    let private_key: String = String::from(\"d500266f7d37f0957564e4ce1a1dcc8bb3408383634774a2f4a94a35f4bc53e0\");\n\n    let secret_key = SecretKey::new(&amp;context, &amp;mut private_key);\n\n    println!(\"{:?}\", secret_key);\n}\n</code></pre>\n\n<p>I got an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::string::String: secp256k1::rand::Rng` is not satisfied\n  --&gt; src/main.rs:10:22\n   |\n10 |     let secret_key = SecretKey::new(&amp;context, &amp;mut private_key);\n   |                      ^^^^^^^^^^^^^^ the trait `secp256k1::rand::Rng` is not implemented for `std::string::String`\n   |\n   = note: required by `secp256k1::key::SecretKey::new`\n</code></pre>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1544473720, "post_id": 53711246, "comment_id": 94280823, "body": "I did realize what I really wanted was <code>multiqueue::broadcast_fut_queue</code> rather than <code>mpmc_fut_queue</code> (I think), but the problem persists."}, {"owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "edited": false, "score": 0, "creation_date": 1544476004, "post_id": 53711246, "comment_id": 94281811, "body": "This actually seems to be an issue with multiqueue: <a href=\"https://github.com/schets/multiqueue/issues/17\" rel=\"nofollow noreferrer\">github.com/schets/multiqueue/issues/17</a>"}], "owner": {"reputation": 2482, "user_id": 1129436, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/09511512293a4e31936309f2c6aee08e?s=128&d=identicon&r=PG", "display_name": "River Tam", "link": "https://stackoverflow.com/users/1129436/river-tam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 154, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1544471207, "creation_date": 1544465098, "last_edit_date": 1544471207, "question_id": 53711246, "link": "https://stackoverflow.com/questions/53711246/tokio-with-multiqueue-sometimes-hangs-sometimes-works", "title": "tokio with multiqueue sometimes hangs, sometimes works", "body": "<p>I'm trying to benchmark the crate <a href=\"https://docs.rs/multiqueue/0.3.2/multiqueue/\" rel=\"nofollow noreferrer\">multiqueue</a> with tokio to implement something along the lines of publisher/subscriber by making <code>Stream</code>s that can be iterated. I'm not convinced on the efficiency (I may need dozens or hundreds of listeners which filter on the items and the single publisher will be publishing somewhere around 10 messages per millisecond), so I'd like to benchmark the approach before I commit to it. However, right now, I'm encountering a strange bug where sometimes the <code>tokio::timer::Interval</code> just doesn't seem to fire at all.</p>\n\n<p>The full code is below:</p>\n\n<pre><code>#![feature(test)]\n\nextern crate futures;\nextern crate multiqueue;\nextern crate test;\nextern crate tokio;\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use futures::future::lazy;\n    use futures::sync::mpsc::{channel, Receiver, Sender};\n    use futures::{Async, Poll, Stream};\n    use futures::{Future, Sink};\n    use test::Bencher;\n    use tokio::timer::Interval;\n\n    #[bench]\n    fn bench_many(b: &amp;mut Bencher) {\n        tokio::run(lazy(|| {\n            let (tx, rx) = multiqueue::mpmc_fut_queue(1000);\n            tokio::spawn(\n                Interval::new_interval(std::time::Duration::from_micros(100))\n                    .take(100)\n                    .map(|_| 100)\n                    .map_err(|e| {\n                        eprintln!(\"Got interval error = {:?}\", e);\n                    })\n                    .fold(tx, |tx, num| {\n                        println!(\"Sending {}\", num);\n                        tx.send(num).map_err(|e| println!(\"send err = {:?}\", e))\n                    })\n                    .map(|_| ()),\n            );\n\n            for i in 0..3 {\n                println!(\"Starting\");\n                let rx = rx.clone();\n                tokio::spawn(rx.for_each(move |num| {\n                    println!(\"{} Got a num! {}\", i, num);\n                    Ok(())\n                }));\n            }\n\n            Ok(())\n        }));\n    }\n}\n</code></pre>\n\n<p>and I'm running it with <code>cargo bench</code>. <code>futures</code> is on version <code>\"0.1\"</code>, <code>tokio</code> is on version <code>\"0.1\"</code>, and <code>multiqueue</code> is on version <code>\"0.3\"</code>.</p>\n\n<p>Sometimes, the whole test completes with many messages of \"[0-2] Got a num! 100\" and \"Sending 100\", but sometimes it hangs either in the middle (after several \"Sending\" and \"Got a\" messages) or hangs just with 3 \"Starting\" messages.</p>\n\n<p>I suspect this may be an issue with the number of tasks I can run at the same time with <code>tokio</code>, but I don't really understand why this would be a limitation I'd be running into as both types of tasks I'm spawning yield time to the executor frequently.</p>\n\n<p>How can I make this more reliable?</p>\n"}, {"tags": ["floating-point", "rust"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 2, "creation_date": 1544448607, "post_id": 53706611, "comment_id": 94267902, "body": "You might be interested in the <a href=\"https://crates.io/crates/float-ord\" rel=\"nofollow noreferrer\"><code>float-ord</code> crate</a>."}, {"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1544448676, "post_id": 53706611, "comment_id": 94267936, "body": "@E_net4iskindandwelcoming Yeah, I noticed that question, but do I need to create a vector to get the max value?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1544448742, "post_id": 53706611, "comment_id": 94267975, "body": "No, not really. The duplicate applied to your question is that <code>std::cmp::max</code> expects a type that implements <code>Ord</code>, but no floating point type implements it for the reasons explained in the answer. You can take a wrapper around <code>f32</code> and <code>f64</code> that produces an unambiguous total order."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 8, "creation_date": 1544448877, "post_id": 53706611, "comment_id": 94268054, "body": "Note that there is <a href=\"https://doc.rust-lang.org/stable/std/primitive.f32.html#method.max\" rel=\"nofollow noreferrer\"><code>f32::max</code></a> and <a href=\"https://doc.rust-lang.org/stable/std/primitive.f64.html#method.max\" rel=\"nofollow noreferrer\"><code>f64::max</code></a>"}, {"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1544449044, "post_id": 53706611, "comment_id": 94268146, "body": "@Jmb Thanks, that&#39;s a good way, but still write several <code>max</code> method."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544450546, "post_id": 53706611, "comment_id": 94269027, "body": "<i>Do I need to write this</i> \u2014 note that your suggested code does not handle NaN values correctly; <code>(max!(f64::NAN, 0.0), max!(0.0, f64::NAN))</code> will result in <code>(0, NaN)</code>"}], "owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 7197, "favorite_count": 0, "closed_date": 1544449420, "answer_count": 0, "score": 7, "last_activity_date": 1544449451, "creation_date": 1544448191, "last_edit_date": 1544449451, "question_id": 53706611, "link": "https://stackoverflow.com/questions/53706611/rust-max-of-multiple-floats", "closed_reason": "Duplicate", "title": "Rust max of multiple floats?", "body": "<p>Here is the simple question, I'm writing a function that returns max value of multiple floats, <code>std::cmp::max</code> gives me:</p>\n\n<pre><code>the trait bound `{float}: std::cmp::Ord` is not satisfied\n</code></pre>\n\n<p>Do I need to write this for every project:</p>\n\n<pre><code>macro_rules! max {\n    ($x: expr) =&gt; ($x);\n    ($x: expr, $($z: expr),+) =&gt; {{\n        let y = max!($($z),*);\n        if $x &gt; y {\n            $x\n        } else {\n            y\n        }\n    }}\n}\n</code></pre>\n\n<p>So what is the recommended way to get max value of multiple floats?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544457113, "post_id": 53703181, "comment_id": 94272719, "body": "Broadly speaking, you are attempting to lie to the compiler because you say that a caller of <code>route</code> can provide any lifetime they want, but you always return a specific one. See <a href=\"https://stackoverflow.com/q/32551177/155423\">\u201cExpected type parameter\u201d error in the constructor of a generic struct</a> for the same concept with type parameters."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1559693005, "last_edit_date": 1559693005, "creation_date": 1544458444, "answer_id": 53709503, "question_id": 53703181, "link": "https://stackoverflow.com/questions/53703181/what-does-the-rust-error-code-e0495-mean/53709503#53709503", "title": "What does the Rust error code E0495 mean?", "body": "<blockquote>\n  <p>What does the Rust error code E0495 mean?</p>\n</blockquote>\n\n<p>The error code <code>E0495</code> seems to be a catch-all for a variety of different situations where lifetime requirements can't be reconciled. The message already says that, and there are huge number of ways that you could write code where lifetimes don't match up properly, which is perhaps why it isn't listed with examples in the error index.</p>\n\n<hr>\n\n<p>Type parameters, including lifetimes, are always determined by the caller. Looking at your particular example, a function signature like this:</p>\n\n<pre><code>fn route&lt;'a&gt;() -&gt; DynamicResponder&lt;'a&gt; { ... }\n</code></pre>\n\n<p>means that, for <em>any</em> lifetime <code>'a</code> chosen by the caller, references inside the returned <code>DynamicResponder&lt;'a&gt;</code> must be  valid. But what could the references inside <code>DynamicResponder&lt;'a&gt;</code> even be in this situation? They can't be references to variables in the function body because those only live as long as the function. There are no arguments, so the only things that could be referenced by the <code>DynamicResponder&lt;'a&gt;</code> are things that live outside the function, i.e. statics.</p>\n\n<p>You can fix the error by removing the lifetime variable and setting the lifetime parameter to the only lifetime that makes sense:</p>\n\n<pre><code>fn route() -&gt; DynamicResponder&lt;'static&gt; { ... }\n</code></pre>\n"}], "owner": {"reputation": 1004, "user_id": 2036673, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/cfbc483da1e90fb9fb000ad59962b295?s=128&d=identicon&r=PG", "display_name": "Person93", "link": "https://stackoverflow.com/users/2036673/person93"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 888, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1593112512, "creation_date": 1544435763, "last_edit_date": 1593112512, "question_id": 53703181, "link": "https://stackoverflow.com/questions/53703181/what-does-the-rust-error-code-e0495-mean", "title": "What does the Rust error code E0495 mean?", "body": "<p>I'm using <a href=\"https://rocket.rs/\" rel=\"nofollow noreferrer\">Rocket</a> to make a web server and I'm trying to make a wrapper around the <code>Responder</code> trait so that my route methods can return any struct.</p>\n<p>The code below does not compile because of an error about lifetimes that I don't fully understand. The error is <a href=\"https://doc.rust-lang.org/error-index.html#E0492\" rel=\"nofollow noreferrer\">not listed in the error index</a>; it skips from <code>E0492</code> to <code>E0496</code>.</p>\n<p>Since this code uses Rocket, it requires the nightly compiler.</p>\n<p>main.rs</p>\n<pre><code>#![feature(custom_attribute, proc_macro_hygiene, decl_macro)]\n#[macro_use]\nextern crate rocket;\nextern crate rocket_contrib;\n\nuse rocket::{http::Status, response::Responder, Request};\nuse rocket_contrib::templates::Template;\n\nfn main() {\n    rocket::Rocket::ignite().mount(&quot;/&quot;, routes![route]).launch();\n}\n\n#[get(&quot;/&quot;)]\nfn route&lt;'a&gt;() -&gt; DynamicResponder&lt;'a&gt; {\n    DynamicResponder::from(Template::render(&quot;template&quot;, ()))\n}\n\nstruct DynamicResponder&lt;'a&gt; {\n    inner: Box&lt;dyn Responder&lt;'a&gt; + 'a&gt;,\n}\n\nimpl&lt;'r&gt; DynamicResponder&lt;'r&gt; {\n    pub fn from&lt;T: 'r&gt;(responder: T) -&gt; DynamicResponder&lt;'r&gt;\n    where\n        T: Responder&lt;'r&gt;,\n    {\n        DynamicResponder {\n            inner: Box::new(responder),\n        }\n    }\n}\n\nimpl&lt;'r&gt; Responder&lt;'r&gt; for DynamicResponder&lt;'r&gt; {\n    fn respond_to&lt;'b&gt;(\n        self,\n        request: &amp;'b Request,\n    ) -&gt; Result&lt;rocket::response::Response&lt;'r&gt;, Status&gt; {\n        self.inner.respond_to(request)\n    }\n}\n</code></pre>\n<p>Cargo.toml</p>\n<pre><code>[package]\nname = &quot;rocketing_around&quot;\nversion = &quot;0.1.0&quot;\n\n[dependencies]\nrocket = &quot;0.4.0&quot;\n\n[dependencies.rocket_contrib]\nversion = &quot;0.4.0&quot;\ndefault_features = false\nfeatures = [ &quot;handlebars_templates&quot; ]\n</code></pre>\n<p>Compiler message:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'r` due to conflicting requirements\n  --&gt; src/main.rs:15:5\n   |\n15 |     DynamicResponder::from(Template::render(&quot;template&quot;, ()))\n   |     ^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the function body at 14:10...\n  --&gt; src/main.rs:14:10\n   |\n14 | fn route&lt;'a&gt;() -&gt; DynamicResponder&lt;'a&gt; {\n   |          ^^\n   = note: ...so that the expression is assignable:\n           expected DynamicResponder&lt;'a&gt;\n              found DynamicResponder&lt;'_&gt;\n   = note: but, the lifetime must be valid for the static lifetime...\n   = note: ...so that the types are compatible:\n           expected rocket::response::Responder&lt;'_&gt;\n              found rocket::response::Responder&lt;'static&gt;\n</code></pre>\n"}, {"tags": ["random", "rust", "traits"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1544434850, "post_id": 53701830, "comment_id": 94260538, "body": "I have copied your code and get a different error: <i>&quot;no method named <code>generate_keypair</code> found for type <code>secp256k1::Secp256k1&lt;secp256k1::All&gt;</code> in the current scope&quot;</i>. Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, including crate versions, so that the same error can be obtained."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544449552, "post_id": 53703310, "comment_id": 94268461, "body": "<i>search in the Cargo.lock file</i> \u2014 the duplicate describes a more automated way to find this error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544449747, "post_id": 53703310, "comment_id": 94268577, "body": "<i>to update their dependencies</i> \u2014 I&#39;d ask them to increase the version range, specifically. Presumably their code can support versions 0.4 through 0.6 of rand."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1544436963, "last_edit_date": 1544436963, "creation_date": 1544436211, "answer_id": 53703310, "question_id": 53701830, "link": "https://stackoverflow.com/questions/53701830/the-trait-bound-is-not-satisfied-error-in-library/53703310#53703310", "title": "the trait bound is not satisfied error in library", "body": "<p>This appears to be a crate version mismatch. The latest version of the <code>rand</code> crate is <code>0.6.1</code>, but <code>secp256k1 0.12.0</code> depends on a much older version - <code>0.4.3</code>.</p>\n\n<p>A quick fix is to use an older version of <code>rand</code>:</p>\n\n<pre><code>[dependencies]\nrand = \"0.4.3\"\n</code></pre>\n\n<p>And consider asking the authors of <code>secp256k1</code> to update their dependencies.</p>\n\n<p>The way that I found this was to search in the <code>Cargo.lock</code> file, which contains all of the actual versions of dependencies used by your application.</p>\n"}], "owner": {"reputation": 5, "user_id": 10368747, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-xfc9kdlDgzo/AAAAAAAAAAI/AAAAAAAAAAA/APUIFaMTL5w9tvgwcCa8tAgtr7rOD2YWDA/mo/photo.jpg?sz=128", "display_name": "Octav", "link": "https://stackoverflow.com/users/10368747/octav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "closed_date": 1544449524, "accepted_answer_id": 53703310, "answer_count": 1, "score": -1, "last_activity_date": 1549451592, "creation_date": 1544430019, "last_edit_date": 1549451592, "question_id": 53701830, "link": "https://stackoverflow.com/questions/53701830/the-trait-bound-is-not-satisfied-error-in-library", "closed_reason": "Duplicate", "title": "the trait bound is not satisfied error in library", "body": "<p>I am trying to generate a keypair using secp256k1 library.</p>\n\n<p>In the official documentation I found this code:</p>\n\n<pre><code>use rand::OsRng;\nuse secp256k1::{Secp256k1, Message};\n\nlet secp = Secp256k1::new();\nlet mut rng = OsRng::new().expect(\"OsRng\");\nlet (secret_key, public_key) = secp.generate_keypair(&amp;mut rng);\n</code></pre>\n\n<p>And I put this in my <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nrand = \"0.6.1\"\n\n[dependencies.secp256k1]\nfeatures = [\"rand\"]\nversion = \"0.12.0\"\n</code></pre>\n\n<p>However, I get this compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>| secp.generate_keypair(&amp;mut rng);\n|      ^^^^^^^^^^^^^^^^ the trait `secp256k1::rand::Rng` is not implemented for \n                        `std::result::Result&lt;rand::rngs::OsRng, rand::Error&gt;`\n</code></pre>\n\n<p>I am very new to Rust and I am trying to understand it but I find it extremely difficult. Please explain what is my mistake. Thanks!</p>\n"}, {"tags": ["multidimensional-array", "rust"], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 8465102, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b39083e93f5b343363402fde0586f42?s=128&d=identicon&r=PG&f=1", "display_name": "TangoJP", "link": "https://stackoverflow.com/users/8465102/tangojp"}, "edited": false, "score": 0, "creation_date": 1544453292, "post_id": 53705168, "comment_id": 94270575, "body": "Thanks! I tried flattening followed by reshaping and indeed the code worked! I&#39;ll think more about making it more performant, maybe rethink the data collection part where I create the Vec of Array1s in the first place as well (e.g. use Vec&lt;Vec&lt;T&gt;&gt; or collect into 1D Vec&lt;T&gt; in the first place instead, etc)."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1544478617, "post_id": 53705168, "comment_id": 94282927, "body": "<i>&quot;An iterator would probably have been more efficient&quot;</i> You will always need some container type <code>A</code> that implements <code>Data</code> to obtain an <code>ArrayBase&lt;A, D&gt;</code>. The standard <code>ReprOwned</code> type stores the elements in an array, and I don&#39;t think that there are ways to store them some other way. With that said, this answer is accurate (although indeed it <i>requires</i> each vector in <code>source</code> to have the same length, otherwise chaos)."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1544442878, "creation_date": 1544442878, "answer_id": 53705168, "question_id": 53698503, "link": "https://stackoverflow.com/questions/53698503/how-to-convert-a-collection-of-vecndarrayarray1-into-an-array2/53705168#53705168", "title": "How to convert a collection of Vec&lt;ndarray::Array1&gt; into an Array2?", "body": "<p>I'm not hugely familiar with <code>ndarray</code>, but it looks like you have to flatten the data as an intermediate step and then rebuild from that. An iterator would probably have been more efficient but I don't see a method to build from an iterator that also lets you specify a shape.</p>\n\n<p>It likely isn't the most <em>performant</em> way to to this, but it does at least work:</p>\n\n<pre><code>fn to_array2&lt;T: Copy&gt;(source: &amp;[Array1&lt;T&gt;]) -&gt; Result&lt;Array2&lt;T&gt;, impl std::error::Error&gt; {\n    let width = source.len();\n    let flattened: Array1&lt;T&gt; = source.into_iter().flat_map(|row| row.to_vec()).collect();\n    let height = flattened.len() / width;\n    flattened.into_shape((width, height))\n}\n</code></pre>\n\n<p>Note that it can fail if the source arrays has different lengths. This solution is not 100% robust because it won't fail if one array is smaller but compensated by another array being longer. It is probably worth adding a check in there to prevent that, but I'll leave that to you.</p>\n"}], "owner": {"reputation": 11, "user_id": 8465102, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b39083e93f5b343363402fde0586f42?s=128&d=identicon&r=PG&f=1", "display_name": "TangoJP", "link": "https://stackoverflow.com/users/8465102/tangojp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 726, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1544442878, "creation_date": 1544406280, "last_edit_date": 1544408548, "question_id": 53698503, "link": "https://stackoverflow.com/questions/53698503/how-to-convert-a-collection-of-vecndarrayarray1-into-an-array2", "title": "How to convert a collection of Vec&lt;ndarray::Array1&gt; into an Array2?", "body": "<p>I'm trying to create a 2D array from a <code>Vec</code> of 1D arrays using the ndarray crate. In the current implementation, I have <code>Vec&lt;Array1&lt;u32&gt;&gt;</code> as the collection of 1D arrays, and I'm having a hard time figuring out how to convert it to <code>Array2&lt;u32&gt;</code>. I've tried <code>from_vec()</code> on <code>Vec&lt;Array1&lt;u32&gt;&gt;</code> but it yielded <code>Array1&lt;Array1&lt;u32&gt;&gt;</code>. I thought of using the <code>stack!</code> macro, but I'm not sure how to call it on the above <code>Vec</code>. I'm using ndarray 0.12.1 and Rust 1.31.0.</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 0, "creation_date": 1544404679, "post_id": 53697816, "comment_id": 94251962, "body": "Your example compiles when you first store the value from b in a temporary and then push it  to a. I&#39;m assuming this is harder to do in your actual use case? (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e26e4e27ff1c93ee44b3bedff29dbdd3\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>)"}, {"owner": {"reputation": 73, "user_id": 7351357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/351d1c71d277cecd37b0cb1138a9a14d?s=128&d=identicon&r=PG&f=1", "display_name": "Aeledfyr", "link": "https://stackoverflow.com/users/7351357/aeledfyr"}, "reply_to_user": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "edited": false, "score": 0, "creation_date": 1544405294, "post_id": 53697816, "comment_id": 94252080, "body": "As I added at the bottom of the question, I need to have mutable borrows to both at the same time, as I am reading data (Read trait, requires mut) and writing it into a slice (requires mut)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544408425, "post_id": 53697816, "comment_id": 94252587, "body": "The duplicate <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=12de122964d06a0a45f0cd772913206e\" rel=\"nofollow noreferrer\">applied to your question</a>; TL;DR: <code>let tmp = &amp;mut *self; tmp.a.push(tmp.b.remove(0));</code>"}, {"owner": {"reputation": 73, "user_id": 7351357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/351d1c71d277cecd37b0cb1138a9a14d?s=128&d=identicon&r=PG&f=1", "display_name": "Aeledfyr", "link": "https://stackoverflow.com/users/7351357/aeledfyr"}, "edited": false, "score": 1, "creation_date": 1544409434, "post_id": 53697816, "comment_id": 94252758, "body": "That works. Thank you!"}], "owner": {"reputation": 73, "user_id": 7351357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/351d1c71d277cecd37b0cb1138a9a14d?s=128&d=identicon&r=PG&f=1", "display_name": "Aeledfyr", "link": "https://stackoverflow.com/users/7351357/aeledfyr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 1, "closed_date": 1544408163, "answer_count": 0, "score": 1, "last_activity_date": 1544408107, "creation_date": 1544398845, "last_edit_date": 1544402783, "question_id": 53697816, "link": "https://stackoverflow.com/questions/53697816/mutably-borrowing-two-fields-of-a-pinned-struct", "closed_reason": "Duplicate", "title": "Mutably borrowing two fields of a pinned struct", "body": "<p>I'm trying to make an async version of <code>BufReader</code> and the <code>Lines</code> struct, but I'm having problems because I need to mutably borrow two fields at once.  It works without the <code>Pin</code>, because the compiler can recognize directly borrowing the fields, but it can't do that when it gets the reference from the <code>DerefMut</code> on the Pin.  The futures <code>Stream</code> trait requires the self type to be a <code>Pin&lt;&amp;mut Self&gt;</code>, so I can't just use the normal self type.  How can I convince the compiler that this is safe, or otherwise use <code>unsafe</code> to do it myself?</p>\n\n<p>Here's my example:</p>\n\n<pre><code>#![feature(arbitrary_self_types, pin)]\nuse std::pin::Pin;\n\npub struct Example {\n    a: Vec&lt;u32&gt;,\n    b: Vec&lt;u32&gt;,\n}\n\nimpl Example {\n    pub fn next(mut self: Pin&lt;&amp;mut Self&gt;) {\n        let a = &amp;mut self.a;\n        let b = &amp;mut self.b;\n        a.push(b.remove(0));\n    }\n}\n</code></pre>\n\n<p>My more complicated example requires using <code>Read</code> to write to a slice, so I need to have mutable references to both fields at the same time.</p>\n"}, {"tags": ["rust", "compiler-optimization"], "comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 7, "creation_date": 1544390593, "post_id": 53696057, "comment_id": 94248980, "body": "Just for diagnosis, some notes, <code>-Ztime-passes</code> shows it is in a llvm module pass and compiling with <code>-Cinline-threshold=1000</code> makes it compile in an instant again. (We can&#39;t blame llvm \u2014 rustc is responsible for what it is giving it as input.)  This should be a bug report to rust-lang/rust"}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 3, "creation_date": 1544392422, "post_id": 53696057, "comment_id": 94249471, "body": "LTO is pretty hyper-liberal about inlining. Given it says &quot;5 symbols to preserve&quot;, I suspect those 5 are <code>f20</code>, <code>f9</code>, <code>f14</code>, <code>f15</code> (the four called in <code>main</code>), and <code>main</code> itself. I suspect it&#39;s doing some sort of full inline followed by a full reachability analysis and cull of unused code and trying to create a program as small and inlined as possible which is slow but usually what you <i>want</i> if you turn on LTO. Not certain if something better can be passed to LLVM to speed some of this up, though."}, {"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 1, "creation_date": 1544392580, "post_id": 53696057, "comment_id": 94249517, "body": "I don&#39;t know if O3 in C++ turns on similar behavior by default, it&#39;s possible whatever C++&#39;s equivalent optimization is is behind a different flag and would produce similarly long results? I wonder if this is closer to some weird union of -O3 -Oz."}, {"owner": {"reputation": 619, "user_id": 4351294, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/iSnr2.jpg?s=128&g=1", "display_name": "Aaron B", "link": "https://stackoverflow.com/users/4351294/aaron-b"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1544415988, "post_id": 53696057, "comment_id": 94253928, "body": "Thanks @bluss &amp; @LinearZoetrope. That flag <code>-Cinline-threshold</code> is what I was looking for. Considering that the same binary is created compiling both with and without it, it&#39;s interesting that it isn&#39;t the default behavior."}, {"owner": {"reputation": 619, "user_id": 4351294, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/iSnr2.jpg?s=128&g=1", "display_name": "Aaron B", "link": "https://stackoverflow.com/users/4351294/aaron-b"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1544416148, "post_id": 53696057, "comment_id": 94253966, "body": "@bluss I should look around the rustlang/rust issues to see if there&#39;s anything similar to reference, as this might be in a discussion about what defaults goes into the opt-levels, and see about making an issue/bug report. When I get around to that I&#39;ll answer/comment this post. Thanks!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1544430161, "post_id": 53696057, "comment_id": 94258323, "body": "@AaronB: Just because a particular setting has no effect on one particular binary does not lead to the conclusion that the setting is ineffective by default. You&#39;ve uncovered an edge case, it needs to be analyzed and understood before any &quot;corrective&quot; action is taken :)"}], "owner": {"reputation": 619, "user_id": 4351294, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/iSnr2.jpg?s=128&g=1", "display_name": "Aaron B", "link": "https://stackoverflow.com/users/4351294/aaron-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 584, "favorite_count": 1, "answer_count": 0, "score": 12, "last_activity_date": 1600464071, "creation_date": 1544384953, "last_edit_date": 1600464071, "question_id": 53696057, "link": "https://stackoverflow.com/questions/53696057/why-does-rustc-take-over-a-minute-to-compile-this-250-line-program-with-optimiza", "title": "Why does rustc take over a minute to compile this 250 line program with optimization?", "body": "<p>Background: I made a silly code generation program for various programming languages, the goal being to compare how long it takes various compilers to compile absurdly long 100K+ LOC programs made of simple functions. But when compiling, the Rust version of a program never finished compiling when optimization flags were given to <code>rustc</code>.</p>\n<p>I discovered that is it easy to make a pretty small Rust program (example below) that takes (to my sensibilities) far too long to compile with the <code>-C opt-level=2</code> or <code>-C opt-level=3</code> flags for <code>rustc</code>. I tried in 1.16 stable, 1.30 stable, 1.32.0-nightly on Linux and 1.30 stable on macOS and Windows - all take what looks to me far too long to compile. I say this because in comparison, roughly equivalent C++ takes under a second to compile with <code>clang++ -O3</code>. This leads me to a couple questions:</p>\n<ul>\n<li>Is there an optimization <code>rustc</code> is doing (slowly) to this code that <code>clang</code> isn't?</li>\n<li>If I wanted to look into this myself, are there good resources to profile <code>rustc</code>? It would be cool to see if a particular optimisation in <code>opt-level=2</code>  is the culprit.</li>\n</ul>\n<p>The <a href=\"https://rustc-dev-guide.rust-lang.org/compiler-debugging.html\" rel=\"nofollow noreferrer\">rustc guide</a> tells how to turn on debug logs. Using that gets:</p>\n<pre class=\"lang-none prettyprint-override\"><code>INFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(std::rt::lang_start::&lt;()&gt;)\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(std::rt::lang_start::{{closure}}::&lt;(), i8, extern &quot;rust-call&quot; fn(()) -&gt; i32, fn()&gt;)\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(std::sys::unix::process::process_common::ExitCode::as_i32)\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(&lt;[closure@DefId(1/1:1916 ~ std[424f]::rt[0]::lang_start[0]::{{closure}}[0]) 0:fn()] as std::ops::FnOnce&lt;()&gt;&gt;::call_once - shim)\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(&lt;[closure@DefId(1/1:1916 ~ std[424f]::rt[0]::lang_start[0]::{{closure}}[0]) 0:fn()] as std::ops::FnOnce&lt;()&gt;&gt;::call_once - shim(vtable))\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(std::ptr::real_drop_in_place::&lt;[closure@DefId(1/1:1916 ~ std[424f]::rt[0]::lang_start[0]::{{closure}}[0]) 0:fn()]&gt; - shim(None))\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(&lt;() as std::process::Termination&gt;::report)\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(&lt;std::process::ExitCode as std::process::Termination&gt;::report)\nINFO 2018-12-09T19:37:54Z: rustc_codegen_ssa::base: codegen_instance(std::fmt::ArgumentV1::new::&lt;i32&gt;)\nINFO 2018-12-09T19:39:12Z: rustc_codegen_llvm::back::lto: 5 symbols to preserve in this crate\nINFO 2018-12-09T19:39:12Z: rustc_codegen_llvm::back::lto: going for that thin, thin LTO\n</code></pre>\n<p>Notice the minute gap between the last <code>rustc_codegen_ssa::base</code> and <code>rustc_codegen_llvm::back::lto</code> - how should I interpret this?</p>\n<p><a href=\"https://gist.github.com/ajdust/9cf976ed2935ad428ee5465cbdef7d56\" rel=\"nofollow noreferrer\">Rust gist</a> and <a href=\"https://gist.github.com/ajdust/5e92cab52ffab5ea2a52edbd47aa348a\" rel=\"nofollow noreferrer\">C++ gist</a></p>\n<pre><code>//$ rustc -C opt-level=2 test_20.rs\n//  takes over a minute to compile, rustc 1.32.0-nightly\n//  see https://gist.github.com/ajdust/5e92cab52ffab5ea2a52edbd47aa348a\n#![allow(unused_parens)]\n\nfn f0(p: i32) -&gt; i32 {\n    let x1: i32 = (p - ((((21 | 1) | p) ^ 84) &amp; ((48 ^ (52 | (p &amp; (2 ^ 61)))) - 67)));\n    let x2: i32 = x1;\n    let mut x3: i32 = 54;\n    let x4: i32 = 75;\n    let x5: i32 = (77 &amp; 39);\n    let x6: i32 = (x2 * x5);\n    let x7: i32 = (88 * (8 + x1));\n    x3 = (x3 + 60);\n    ((((((((32 * p) &amp; x1) ^ x2) - x3) ^ x4) &amp; x5) | x6) | x7)\n}\n\nfn f1(p: i32) -&gt; i32 {\n    let mut x1: i32 = f0(78);\n    x1 = (x1 ^ p);\n    let mut x2: i32 = f0(x1);\n    x2 = (x2 * 3);\n    let x3: i32 = f0(x1);\n    let x4: i32 = ((21 &amp; (x3 - ((93 * (x3 - (f0(x3) - (x2 - (f0(x1) | 43))))) | (f0(p) - f0(x1))))) * 41);\n    ((((((f0(p) | x2) ^ p) &amp; x1) ^ x2) | x3) - x4)\n}\n\nfn f2(p: i32) -&gt; i32 {\n    let mut x1: i32 = f1(50);\n    x1 = (x1 * p);\n    x1 = (x1 | f0(p));\n    let mut x2: i32 = f1(x1);\n    x2 = (x2 | f1(x2));\n    let mut x3: i32 = (24 * f0(x1));\n    x2 = (x2 &amp; f0(p));\n    x3 = (x3 ^ x1);\n    let x4: i32 = x1;\n    (((((x4 ^ p) | x1) * x2) + x3) | x4)\n}\n\nfn f3(p: i32) -&gt; i32 {\n    let mut x1: i32 = f2(75);\n    let x2: i32 = x1;\n    x1 = (x1 &amp; x2);\n    let x3: i32 = f0(p);\n    let x4: i32 = ((f1(x3) ^ f1(x2)) + 92);\n    x1 = (x1 | (x2 ^ 94));\n    x1 = (x1 * x2);\n    let x5: i32 = (f0(x1) &amp; (3 ^ (f0(x1) * f2(x4))));\n    x1 = (x1 + x2);\n    (((((((x1 * x5) * p) - x1) | x2) * x3) - x4) - x5)\n}\n\nfn f4(p: i32) -&gt; i32 {\n    let mut x1: i32 = f3(14);\n    x1 = (x1 + f0(p));\n    let mut x2: i32 = f1(x1);\n    x1 = (x1 - 41);\n    x2 = (x2 ^ 61);\n    let x3: i32 = f2(p);\n    x2 = (x2 ^ p);\n    let x4: i32 = x2;\n    x1 = (x1 - p);\n    x1 = (x1 * x4);\n    ((((((88 &amp; 11) &amp; p) - x1) * x2) ^ x3) | x4)\n}\n\nfn f5(p: i32) -&gt; i32 {\n    let mut x1: i32 = f4(50);\n    x1 = (x1 ^ 13);\n    ((35 + p) | x1)\n}\n\nfn f6(p: i32) -&gt; i32 {\n    let mut x1: i32 = f5(51);\n    x1 = (x1 + 27);\n    let x2: i32 = (p + (p | f1(x1)));\n    x1 = (x1 + f0(x2));\n    let x3: i32 = f0(x1);\n    let mut x4: i32 = 48;\n    x1 = (x1 ^ f0(p));\n    x1 = (x1 &amp; 26);\n    x4 = (x4 * f1(x4));\n    (((((99 - p) * x1) ^ x2) &amp; x3) + x4)\n}\n\nfn f7(p: i32) -&gt; i32 {\n    let mut x1: i32 = f6(71);\n    x1 = (x1 &amp; 66);\n    x1 = (x1 &amp; p);\n    let x2: i32 = 57;\n    x1 = (x1 * 26);\n    let x3: i32 = (21 &amp; p);\n    let x4: i32 = (f0(x1) &amp; (f3(p) * f2(p)));\n    let x5: i32 = f6(x3);\n    ((((((x5 + p) | x1) + x2) - x3) &amp; x4) * x5)\n}\n\nfn f8(p: i32) -&gt; i32 {\n    let mut x1: i32 = f7(57);\n    x1 = (x1 &amp; f5(p));\n    x1 = (x1 ^ (x1 &amp; f1(p)));\n    let x2: i32 = 25;\n    let x3: i32 = f5(x1);\n    ((((x1 - p) * x1) &amp; x2) ^ x3)\n}\n\nfn f9(p: i32) -&gt; i32 {\n    let mut x1: i32 = f8(23);\n    x1 = (x1 | (((26 | f4(x1)) - f0(p)) | f8(p)));\n    let x2: i32 = x1;\n    let mut x3: i32 = 58;\n    x3 = (x3 - p);\n    let x4: i32 = f7(x1);\n    let x5: i32 = f7(x2);\n    let x6: i32 = (f7(x1) &amp; 79);\n    (((((((33 | p) - x1) + x2) + x3) * x4) ^ x5) + x6)\n}\n\nfn f10(p: i32) -&gt; i32 {\n    let mut x1: i32 = f9(75);\n    x1 = (x1 | 37);\n    (((f8(x1) + f3(x1)) | p) * x1)\n}\n\nfn f11(p: i32) -&gt; i32 {\n    let mut x1: i32 = f10(8);\n    x1 = (x1 ^ f6(x1));\n    let mut x2: i32 = p;\n    x2 = (x2 ^ 84);\n    let x3: i32 = (f5(p) ^ f5(p));\n    x1 = (x1 * f5(p));\n    x1 = (x1 | f1(x2));\n    x1 = (x1 * f8(p));\n    ((((((f0(x3) | f9(p)) - f4(x1)) + p) &amp; x1) &amp; x2) - x3)\n}\n\nfn f12(p: i32) -&gt; i32 {\n    let mut x1: i32 = f11(33);\n    x1 = (x1 * 84);\n    let mut x2: i32 = (67 - f0(p));\n    x2 = (x2 | x1);\n    x1 = (x1 - 67);\n    x2 = (x2 - f6(p));\n    (((p - p) * x1) | x2)\n}\n\nfn f13(p: i32) -&gt; i32 {\n    let mut x1: i32 = f12(90);\n    x1 = (x1 + (f6(x1) - f4(p)));\n    x1 = (x1 - 19);\n    let x2: i32 = 92;\n    let mut x3: i32 = f9(x1);\n    let mut x4: i32 = x3;\n    x4 = (x4 - (87 | f5(x3)));\n    x3 = (x3 | 49);\n    let x5: i32 = 25;\n    let x6: i32 = x3;\n    (((((((2 &amp; p) - x1) ^ x2) ^ x3) ^ x4) | x5) | x6)\n}\n\nfn f14(p: i32) -&gt; i32 {\n    let mut x1: i32 = f13(66);\n    let x2: i32 = f2(p);\n    x1 = (x1 - 11);\n    let mut x3: i32 = 69;\n    x3 = (x3 * x2);\n    let x4: i32 = 91;\n    (((((19 * p) + x1) | x2) ^ x3) &amp; x4)\n}\n\nfn f15(p: i32) -&gt; i32 {\n    let mut x1: i32 = f14(79);\n    x1 = (x1 + (f8(p) &amp; p));\n    let x2: i32 = p;\n    x1 = (x1 | ((f5(p) &amp; x2) ^ x2));\n    let mut x3: i32 = x1;\n    x1 = (x1 - p);\n    x3 = (x3 * p);\n    ((((40 * p) ^ x1) + x2) + x3)\n}\n\nfn f16(p: i32) -&gt; i32 {\n    let x1: i32 = f15(77);\n    let mut x2: i32 = 5;\n    let mut x3: i32 = x1;\n    let x4: i32 = p;\n    x2 = (x2 + p);\n    let x5: i32 = x4;\n    x3 = (x3 | f9(x4));\n    let x6: i32 = (68 ^ (61 ^ (24 * f14(x4))));\n    (((((((88 + p) - x1) &amp; x2) | x3) &amp; x4) ^ x5) | x6)\n}\n\nfn f17(p: i32) -&gt; i32 {\n    let mut x1: i32 = f16(41);\n    x1 = (x1 | 4);\n    let mut x2: i32 = x1;\n    x1 = (x1 | 52);\n    x1 = (x1 &amp; 49);\n    x2 = (x2 &amp; (f8(x2) ^ p));\n    let mut x3: i32 = x2;\n    x3 = (x3 ^ ((x1 ^ x2) + f15(x2)));\n    let mut x4: i32 = (f13(x2) ^ 73);\n    x4 = (x4 - f12(x1));\n    (((((x3 - p) + x1) ^ x2) + x3) | x4)\n}\n\nfn f18(p: i32) -&gt; i32 {\n    let mut x1: i32 = f17(3);\n    x1 = (x1 &amp; (p - ((33 * (95 | 87)) | (9 - f1(x1)))));\n    x1 = (x1 &amp; (80 - f16(x1)));\n    x1 = (x1 &amp; p);\n    x1 = (x1 + p);\n    x1 = (x1 | (82 - ((81 ^ p) - 97)));\n    ((20 - p) * x1)\n}\n\nfn f19(p: i32) -&gt; i32 {\n    let x1: i32 = f18(24);\n    let x2: i32 = (p &amp; p);\n    let mut x3: i32 = 82;\n    let x4: i32 = (4 + x1);\n    x3 = (x3 | ((f10(p) + (f16(x3) - 34)) - f10(x1)));\n    let x5: i32 = (x4 | (x1 * (((f16(x1) + f4(x4)) - 43) &amp; f7(x3))));\n    (((((((f14(x3) | f9(x5)) - p) &amp; x1) * x2) &amp; x3) * x4) + x5)\n}\n\nfn f20(p: i32) -&gt; i32 {\n    let x1: i32 = f19(78);\n    let x2: i32 = 81;\n    let x3: i32 = (x2 + (59 &amp; x1));\n    (((((f9(x3) ^ f11(x3)) * p) * x1) - x2) ^ x3)\n}\n\nfn main() {\n    let mut x0: i32 = f20(65);\n    x0 = (x0 * (53 + 37));\n    let mut x1: i32 = (x0 - ((41 | ((f20(x0) * f9(x0)) + ((((f20(x0) + (77 + (f14(x0) ^ 60))) * 27) &amp; 62) + x0))) &amp; f20(x0)));\n    let x2: i32 = f15(x1);\n    x1 = (x1 | (x0 * (4 ^ 37)));\n    let m: i32 = (((x2 | x0) | x1) | x2);\n    println!(&quot;{}&quot;, m);\n\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544380462, "post_id": 53695400, "comment_id": 94246159, "body": "What do you expect <code>wrapped(32.into());</code> to do or return?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544381115, "post_id": 53695400, "comment_id": 94246354, "body": "Macros match on syntax not on runtime values. Probably you will need to define a trait that you can implement for each supported type. But then I&#39;m not sure if you really need the macro."}, {"owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544381893, "post_id": 53695400, "comment_id": 94246591, "body": "The types that will be passed to <code>switch</code> are known and limited in my case, so I&#39;d like to match those types exhaustively. On the other hand, I need several <code>switch</code>es so I want to generalize the definition not to repeat myself."}], "answers": [{"comments": [{"owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544383547, "post_id": 53695782, "comment_id": 94247048, "body": "Is it possible to remove variant names from the invocation of <code>declare_wrapper</code>? I&#39;m not interested in the name so writing them is verbose."}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "reply_to_user": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544383719, "post_id": 53695782, "comment_id": 94247111, "body": "No, variants need a name so you have to define one. PS: I added the From impl too."}, {"owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544384006, "post_id": 53695782, "comment_id": 94247206, "body": "Hmm, I could omit variant names If I were able to generate a unique variant name for each type, but it seems not possible.."}, {"owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "reply_to_user": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "edited": false, "score": 0, "creation_date": 1544384196, "post_id": 53695782, "comment_id": 94247252, "body": "Sadly that can&#39;t be done in a macro. That would only be possible with the new proc macro system. There you could upper case the first character of the type and you would end up with variants like I32, etc, so no keywords are used. But that is much more complicated to implement and I don&#39;t think typing an extra word once in the definition is cumbersome."}], "tags": [], "owner": {"reputation": 2692, "user_id": 625791, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/996a20b9eae1def21e8db462e9bf1cf7?s=128&d=identicon&r=PG", "display_name": "theduke", "link": "https://stackoverflow.com/users/625791/theduke"}, "is_accepted": false, "score": 1, "last_activity_date": 1544384971, "last_edit_date": 1544384971, "creation_date": 1544382993, "answer_id": 53695782, "question_id": 53695400, "link": "https://stackoverflow.com/questions/53695400/macro-that-wraps-an-arbitrary-number-of-types/53695782#53695782", "title": "Macro that wraps an arbitrary number of types", "body": "<p>It can make sense to write wrapper types as you have proposed, but only if the type is needed in larger parts of your code.</p>\n\n<p>Your specific example would define a new enum every time you use the macro, move the value into the new enum and then immediately throw it away.</p>\n\n<p>That's not a idiomatic approach and if that is indeed your imagined use I'd recommend looking for different options.</p>\n\n<p>That said, I have used wrapper types on a number of occasions.</p>\n\n<p>Something like this will work for declaring a wrapper:</p>\n\n<pre><code>macro_rules! declare_wrapper {\n  (\n    $enum_name:ident {\n      $( $variant_name:ident( $typ:ty : $description:expr ) ),*\n    }\n  )=&gt; {\n    pub enum $enum_name {\n      $(\n        $variant_name($typ),\n      )*\n    }\n\n    $(\n      impl From&lt;$typ&gt; for $enum_name {\n        fn from(value: $typ) -&gt; Self {\n          $enum_name::$variant_name(value)\n        }\n      }\n    )*\n\n    impl $enum_name {\n      fn describe(&amp;self) -&gt; &amp;'static str {\n        match self {\n          $(\n            &amp;$enum_name::$variant_name(_) =&gt; $description,\n          )*\n        }\n      }\n    }\n  };\n}\n\ndeclare_wrapper!( MyWrapper {\n  MyInt(i64 : \"int\"),\n  MyString(String : \"string\")\n});\n\nfn main() {\n  let value = MyWrapper::from(22);\n  println!(\"{}\", value.describe());\n}\n</code></pre>\n\n<p>You can also extend this to add additional methods or trait impls that you need.\nI've done similar things quite often.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1544383638, "creation_date": 1544383638, "answer_id": 53695879, "question_id": 53695400, "link": "https://stackoverflow.com/questions/53695400/macro-that-wraps-an-arbitrary-number-of-types/53695879#53695879", "title": "Macro that wraps an arbitrary number of types", "body": "<p>Define a trait within your macro and implement it for each type:</p>\n\n<pre><code>macro_rules! type_switch {\n    ($($ty: ty =&gt; $expr: expr),+) =&gt; {{\n        trait TypeMatch {\n            fn type_match(self);\n        }\n        $(\n            impl TypeMatch for $ty {\n                fn type_match(self) {\n                    $expr\n                }\n            }\n        )+\n        TypeMatch::type_match\n    }}\n}\n</code></pre>\n\n<p>Notice that the first time you call the function the compiler will bind the type so that subsequent calls must be the same type:</p>\n\n<pre><code>struct Foo;\n\nfn main() {\n    let s = type_switch! {\n        i32 =&gt; { println!(\"i32\"); },\n        f32 =&gt; { println!(\"f32\"); },\n        Foo =&gt; { println!(\"Foo\"); }\n    };\n\n    s(0);\n    s(Foo); // Error!\n}\n</code></pre>\n\n<p>If you need to be able to call it with different types, this can be fixed (at a small cost) by using a trait object for dynamic dispatch:</p>\n\n<pre><code>macro_rules! type_switch {\n    ($($ty: ty =&gt; $expr: expr),+) =&gt; {{\n        trait TypeMatch {\n            fn type_match(&amp;self);\n        }\n        $(\n            impl TypeMatch for $ty {\n                fn type_match(&amp;self) {\n                    $expr\n                }\n            }\n        )+\n        |value: &amp;dyn TypeMatch| {\n            value.type_match()\n        }\n    }}\n}\n\nstruct Foo;\n\nfn main() {\n    let s = type_switch! {\n        i32 =&gt; { println!(\"i32\"); },\n        f32 =&gt; { println!(\"f32\"); },\n        Foo =&gt; { println!(\"Foo\"); }\n    };\n\n    s(&amp;0);\n    s(&amp;Foo);\n}\n</code></pre>\n\n<p>Also notice that you have to pass references instead of values.</p>\n"}], "owner": {"reputation": 205, "user_id": 8554666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0d80205451b80f1cf78061ae20608bd?s=128&d=identicon&r=PG&f=1", "display_name": "pandaman", "link": "https://stackoverflow.com/users/8554666/pandaman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 213, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1544384971, "creation_date": 1544380112, "last_edit_date": 1544381328, "question_id": 53695400, "link": "https://stackoverflow.com/questions/53695400/macro-that-wraps-an-arbitrary-number-of-types", "title": "Macro that wraps an arbitrary number of types", "body": "<p>Is it possible to write a macro that defines an enum which wraps an arbitrary number of (distinct) input types?\nI'd like to do a kind of type-level match.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type_switch!(i32 =&gt; println!(\"integer\"), f32 =&gt; println!(\"float\"), Foo =&gt; println!(\"foo\"))\n</code></pre>\n\n<p>This would expand to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>{\n    enum Wrapper {\n        Variant1(i32),\n        Variant2(f32),\n        Variant3(Foo),\n    }\n\n    // impl From&lt;i32&gt;, From&lt;f32&gt;, From&lt;Foo&gt; for Wrapper\n\n    |x: Wrapper| match x {\n        Wrapper::Variant1(x) =&gt; println!(\"integer\"),\n        Wrapper::Variant2(x) =&gt; println!(\"float\"),\n        Wrapper::Variant3(x) =&gt; println!(\"foo\"),\n    }\n}\n</code></pre>\n\n<p>so that I can write like</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let switch = type_switch!(i32 =&gt; println!(\"integer\"), f32 =&gt; println!(\"float\"), Foo =&gt; println!(\"foo\"));\nswitch(32.into()); // prints \"integer\"\nswitch(24.0.into()); // prints \"float\"\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544371930, "post_id": 53694107, "comment_id": 94243731, "body": "<i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544372523, "post_id": 53694107, "comment_id": 94243904, "body": "TL;DR the duplicate: <code>*my_reference</code>. You may wish to go back and re-read <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a> as it covers introductory topics like this."}], "owner": {"reputation": 306, "user_id": 6296541, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209286680946325/picture?type=large", "display_name": "Chris Karani", "link": "https://stackoverflow.com/users/6296541/chris-karani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 236, "favorite_count": 0, "closed_date": 1544372047, "answer_count": 0, "score": 0, "last_activity_date": 1544374201, "creation_date": 1544371340, "last_edit_date": 1544374201, "question_id": 53694107, "link": "https://stackoverflow.com/questions/53694107/how-do-i-convert-a-reference-to-an-integer-usize-into-an-integer-usize", "closed_reason": "Duplicate", "title": "How do I convert a reference to an integer (&amp;usize) into an integer (usize)?", "body": "<p>I'm getting the following error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait `std::slice::SliceIndex&lt;[Pokemon]&gt;` is not implemented for `&amp;usize`\n</code></pre>\n\n<p>I'm trying to index my vector with a size parsed from user input. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544363115, "post_id": 53692885, "comment_id": 94241354, "body": "This does not address why <code>d.body</code> is moved when <code>d</code> is a reference."}], "tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": false, "score": -1, "last_activity_date": 1544363130, "last_edit_date": 1544363130, "creation_date": 1544362613, "answer_id": 53692885, "question_id": 53692702, "link": "https://stackoverflow.com/questions/53692702/why-is-a-reference-variable-accessed-via-auto-deref-moved/53692885#53692885", "title": "Why is a reference variable accessed via auto-deref moved?", "body": "<p>This loop will be <a href=\"https://doc.rust-lang.org/std/iter/index.html#for-loops-and-intoiterator\" rel=\"nofollow noreferrer\">desugared into something similar to the following</a>:</p>\n\n<pre><code>let mut iter = IntoIterator::into_iter(v);\nloop {\n    match iter.next() {\n        Some(x) =&gt; {\n            // loop body\n        },\n        None =&gt; break,\n    }\n}\n</code></pre>\n\n<p>As you can see, it's using <code>into_iter</code>, which moves the vector <code>d.body</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544363473, "post_id": 53692922, "comment_id": 94241460, "body": "<i>If you would use <code>d</code> directly, no <code>&amp;</code> would be necessary, but since you are accessing a field in <code>d</code>, you must specify that you want to have the reference to the field.</i> \u2014 This answer does not describe why this happens."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 0, "last_activity_date": 1544363137, "last_edit_date": 1544363137, "creation_date": 1544362826, "answer_id": 53692922, "question_id": 53692702, "link": "https://stackoverflow.com/questions/53692702/why-is-a-reference-variable-accessed-via-auto-deref-moved/53692922#53692922", "title": "Why is a reference variable accessed via auto-deref moved?", "body": "<p>You are accessing the field <code>body</code> in <code>d</code>. <code>body</code> itself is a <code>Vec&lt;i32&gt;</code> which is not a reference. If you would use <code>d</code> directly, no <code>&amp;</code> would be necessary, but since you are accessing a field in <code>d</code>, you must specify that you want to have the reference to the field.</p>\n\n<p>Basically <code>d</code> owns <code>body</code>. If you borrow <code>d</code> you cannot steal <code>body</code>, it belongs to <code>d</code> but you can borrow it.</p>\n"}, {"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 5, "last_activity_date": 1544388138, "last_edit_date": 1544388138, "creation_date": 1544362912, "answer_id": 53692945, "question_id": 53692702, "link": "https://stackoverflow.com/questions/53692702/why-is-a-reference-variable-accessed-via-auto-deref-moved/53692945#53692945", "title": "Why is a reference variable accessed via auto-deref moved?", "body": "<p>What you are doing is field accessing on pointer.</p>\n\n<p>Check <a href=\"https://doc.rust-lang.org/reference/expressions/field-expr.html\" rel=\"nofollow noreferrer\">Field Access Expression</a> : </p>\n\n<blockquote>\n  <p>if the type of the expression to the left of the dot is a pointer, it\n  is automatically dereferenced as many times as necessary to make the\n  field access possible</p>\n</blockquote>\n\n<p>Sample for how Rust evaluates Field Access Expression on Borrowed Content :</p>\n\n<pre><code>let d = Data { /*input*/}\nlet body = (&amp;d).body // -&gt; (*&amp;d).body -&gt; d.body\nlet ref_body = &amp;(&amp;d).body // -&gt; &amp;(*&amp;).body -&gt; &amp;d.body -&gt; &amp;(d.body) \n</code></pre>\n\n<p>Note : d is still borrowed content, auto deref is just needed to access the fields.</p>\n\n<hr>\n\n<h2>Why move ?</h2>\n\n<p>Consider this code:</p>\n\n<pre><code>struct Data {\n    body: Vec&lt;i32&gt;,\n    id: i32,\n}\n\nfn p(mut d: &amp;Data) {\n    let id = d.id;\n}\n</code></pre>\n\n<p>This code will work as expected and there will be no moves in here so you will able to reuse <code>d.id</code>. In this situation: </p>\n\n<ol>\n<li>Rust will try to copy the value of <code>d.id</code>. Since <code>d.id</code> is <code>i32</code> and implements the <code>Copy</code> trait, it will copy the value to <code>id</code>. </li>\n</ol>\n\n<p>Consider this code:</p>\n\n<pre><code>fn p(mut d: &amp;Data) {\n    let id = d.id; // works\n    let body = d.body; // fails\n}\n</code></pre>\n\n<p>This code will not work because:</p>\n\n<ol>\n<li>Rust will try to copy <code>d.body</code> but <code>Vec&lt;i32&gt;</code> has no implementation of the <code>Copy</code> trait. </li>\n<li>Rust will try to move <code>body</code> from <code>d</code>, and you will get the \"cannot move out of borrowed content\" error. </li>\n</ol>\n\n<h2>How does this effect the loop?</h2>\n\n<p>From <a href=\"https://doc.rust-lang.org/reference/expressions/loop-expr.html#iterator-loops\" rel=\"nofollow noreferrer\">the reference</a> </p>\n\n<blockquote>\n  <p>A <code>for</code> expression is a syntactic construct for looping over elements provided by an implementation of <code>std::iter::IntoIterator</code></p>\n  \n  <p>A for loop is equivalent to the following block expression.</p>\n\n<pre><code>'label: for PATTERN in iter_expr {\n    /* loop body */\n}\n</code></pre>\n  \n  <p>is equivalent to</p>\n\n<pre><code>{\n    let result = match IntoIterator::into_iter(iter_expr) {\n        mut iter =&gt; 'label: loop {\n            let mut next;\n            match Iterator::next(&amp;mut iter) {\n                Option::Some(val) =&gt; next = val,\n                Option::None =&gt; break,\n            };\n            let PAT = next;\n            let () = { /* loop body */ };\n        },\n    };\n    result\n}\n</code></pre>\n</blockquote>\n\n<p>This means your vector must have an implementation of <code>IntoIterator</code> because <code>IntoIterator::into_iter(self)</code> expects <code>self</code> as an argument. Luckily, both  <a href=\"https://github.com/rust-lang/rust/blob/b7da2c6e12a6b2a2343e2f1e66fe4f6a1ad55463/src/liballoc/vec.rs#L1705\" rel=\"nofollow noreferrer\"><code>impl IntoIterator for Vec&lt;T&gt;</code></a>, another is <a href=\"https://github.com/rust-lang/rust/blob/b7da2c6e12a6b2a2343e2f1e66fe4f6a1ad55463/src/liballoc/vec.rs#L1746\" rel=\"nofollow noreferrer\"><code>impl&lt;'a, T&gt; IntoIterator for &amp;'a Vec&lt;T&gt;</code></a> exist.</p>\n\n<h2>Why does this happen?</h2>\n\n<p>Simply:</p>\n\n<ul>\n<li>When you use <code>&amp;d.body</code>, your loop uses the <code>&amp;Vec</code> implementation of <code>IntoIterator</code>.</li>\n</ul>\n\n<p>This implementation returns an iterator which points at your vector's slice. This means you will get the <strong>reference of elements</strong> from your vector.</p>\n\n<ul>\n<li>When you use <code>d.body</code>, your loop uses the <code>Vec</code> implementation of <code>IntoIterator</code>.</li>\n</ul>\n\n<p>This implementation returns an iterator which is a consuming iterator. This means your loop will have the <strong>ownership of actual elements</strong>, not their references. For the consuming part this implementation needs the actual vector not the reference, so the move occurs.</p>\n"}], "owner": {"reputation": 1857, "user_id": 6329187, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/WDkSs.jpg?s=128&g=1", "display_name": "sunfy", "link": "https://stackoverflow.com/users/6329187/sunfy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 0, "accepted_answer_id": 53692945, "answer_count": 3, "score": 2, "last_activity_date": 1544388138, "creation_date": 1544361548, "last_edit_date": 1544362940, "question_id": 53692702, "link": "https://stackoverflow.com/questions/53692702/why-is-a-reference-variable-accessed-via-auto-deref-moved", "title": "Why is a reference variable accessed via auto-deref moved?", "body": "<p>I thought I got the idea of move semantics until this code.</p>\n\n<pre><code>fn main() {\n    let v = Data {\n        body: vec![10, 40, 30],\n    };\n    p(&amp;v);\n}\n\nfn p(d: &amp;Data) {\n    for i in d.body {\n        // &amp;d.body, Why d.body move?\n        println!(\"{}\", i);\n    }\n}\n\nstruct Data {\n    body: Vec&lt;i32&gt;,\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n --&gt; src/main.rs:9:14\n  |\n9 |     for i in d.body {\n  |              ^^^^^^ cannot move out of borrowed content\n\nerror[E0507]: cannot move out of `d.body` which is behind a `&amp;` reference\n --&gt; src/main.rs:9:14\n  |\n8 | fn p(d: &amp;Data) {\n  |         ----- help: consider changing this to be a mutable reference: `&amp;mut Data`\n9 |     for i in d.body {\n  |              ^^^^^^\n  |              |\n  |              cannot move out of `d.body` which is behind a `&amp;` reference\n  |              `d` is a `&amp;` reference, so the data it refers to cannot be moved\n</code></pre>\n\n<p>I passed a reference, and I accessed a field via auto-deref feature, so why is it a move?</p>\n"}, {"tags": ["error-handling", "rust", "smart-pointers", "reference-counting"], "comments": [{"owner": {"reputation": 471, "user_id": 868297, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/svgZ0.jpg?s=128&g=1", "display_name": "Jaybird", "link": "https://stackoverflow.com/users/868297/jaybird"}, "edited": false, "score": 0, "creation_date": 1544354093, "post_id": 53691655, "comment_id": 94239158, "body": "Could you debug and see the output of Arc::try_unwrap(arc) ?"}, {"owner": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "reply_to_user": {"reputation": 471, "user_id": 868297, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/svgZ0.jpg?s=128&g=1", "display_name": "Jaybird", "link": "https://stackoverflow.com/users/868297/jaybird"}, "edited": false, "score": 0, "creation_date": 1544354854, "post_id": 53691655, "comment_id": 94239339, "body": "trying to also find a debugger for it, since I&#39;m doing it blindly (wasn&#39;t able to find any debuggers for rust)."}], "answers": [{"comments": [{"owner": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "edited": false, "score": 0, "creation_date": 1544354933, "post_id": 53691827, "comment_id": 94239363, "body": "Well, if I comment the <code>peers.push(arc.clone())</code>, it still panics. What I found out is that, after removing <code>.clone</code> it works fine."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "edited": false, "score": 1, "creation_date": 1544355099, "post_id": 53691827, "comment_id": 94239399, "body": "There are <b>two</b> other references. The other is the <code>arc</code> variable inside the loop, whose scope is until the end of the loop. When you remove the <code>clone</code>, you instead move the variable, so it is no longer alive in the loop."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1544460178, "last_edit_date": 1544460178, "creation_date": 1544354754, "answer_id": 53691827, "question_id": 53691655, "link": "https://stackoverflow.com/questions/53691655/why-does-arctry-unwrap-cause-a-panic/53691827#53691827", "title": "Why does Arc::try_unwrap() cause a panic?", "body": "<blockquote>\n  <p>Why is it panicking?</p>\n</blockquote>\n\n<p>You are calling <code>unwrap</code> on a <code>Result::Err</code>. The <code>Err</code> comes from <code>try_unwrap</code> failing on the <code>Arc</code>.</p>\n\n<blockquote>\n  <p>What am I doing wrong?</p>\n</blockquote>\n\n<p>Unwrapping an <code>Arc</code> will <em>move</em> its value and take ownership of it. This fails because there are three clones of the same <code>Arc</code>: </p>\n\n<ul>\n<li>one in the main loop which is still in scope</li>\n<li>one in the <code>peers</code> vector</li>\n<li>the one that you are trying to unwrap inside <code>handle_client</code>.</li>\n</ul>\n\n<p>The other two clones would become invalid if Rust allowed you to unwrap and move the value.\nInstead of unwrapping the value you can use <code>Arc</code>'s  <code>Deref</code> implementation to borrow it:</p>\n\n<pre><code>let stream: &amp;TcpStream = &amp;arc;\n</code></pre>\n\n<p>Since you are now borrowing the value from the <code>Arc</code>, you need to move the scope of the <code>arc</code> variable inside the new thread, otherwise the borrow checker won't be able to ensure that it lives as long as the thread:</p>\n\n<pre><code>fn handle_client(arc: Arc&lt;TcpStream&gt;) -&gt; std::io::Result&lt;()&gt; {\n    std::thread::spawn(move || -&gt; std::io::Result&lt;()&gt; {\n        let mut stream: &amp;TcpStream = &amp;arc;\n        stream.write(b\"Welcome to the server!\\r\\n\")?;\n\n        let peer_addr = stream.peer_addr()?;\n        let mut reader = std::io::BufReader::new(stream);\n        let mut buf = String::new();\n\n        // ... \n     }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "edited": false, "score": 0, "creation_date": 1544355701, "post_id": 53691920, "comment_id": 94239545, "body": "Thanks for the explaining, I&#39;ll practice more on this. It&#39;s all clear now! :)"}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 1, "last_activity_date": 1544371504, "last_edit_date": 1544371504, "creation_date": 1544355418, "answer_id": 53691920, "question_id": 53691655, "link": "https://stackoverflow.com/questions/53691655/why-does-arctry-unwrap-cause-a-panic/53691920#53691920", "title": "Why does Arc::try_unwrap() cause a panic?", "body": "<p>It says in <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#method.try_unwrap\" rel=\"nofollow noreferrer\">the documentation</a> </p>\n\n<blockquote>\n  <p>Returns the contained value, if the <code>Arc</code> has exactly one strong\n  reference.</p>\n  \n  <p>Otherwise, an <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Err</code></a> is returned with the same <code>Arc</code> that was passed in.</p>\n  \n  <p>This will succeed even if there are outstanding weak references.</p>\n</blockquote>\n\n<p>(<a href=\"https://doc.rust-lang.org/std/sync/struct.Weak.html\" rel=\"nofollow noreferrer\">weak reference</a>)</p>\n\n<p>Your code will work fine with one strong and many weak references. </p>\n\n<pre><code>let mut peers: Vec&lt;Weak&lt;TcpStream&gt;&gt; = vec![];\n\nfor stream in listener.incoming() {\n    let mut stream = stream.unwrap();\n    let arc = Arc::new(stream);\n    peers.push(Arc::downgrade(&amp;arc));\n    handle_client(arc).unwrap();\n}\n</code></pre>\n\n<p>One thing to note about the weak references: if you unwrap your one strong reference, you will not able to use weak references.</p>\n"}], "owner": {"reputation": 1684, "user_id": 1444038, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/185137db669d90871dd5537330610def?s=128&d=identicon&r=PG", "display_name": "Nika", "link": "https://stackoverflow.com/users/1444038/nika"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 535, "favorite_count": 0, "accepted_answer_id": 53691827, "answer_count": 2, "score": 2, "last_activity_date": 1603219569, "creation_date": 1544353630, "last_edit_date": 1603219569, "question_id": 53691655, "link": "https://stackoverflow.com/questions/53691655/why-does-arctry-unwrap-cause-a-panic", "title": "Why does Arc::try_unwrap() cause a panic?", "body": "<p>I'm writing a simple chat server which broadcasts messages to all the clients connected. </p>\n\n<p>The code might look terrible, since I'm a beginner. Peers are not used anywhere yet, since I want to pass it to <code>handle_client</code> function as well, so when data will be available in stream and read successfully, I want to broadcast it over all the clients connected. I understand this is not a good approach, I'm just trying to understand how can I do things like this in general.</p>\n\n<pre><code>use std::io::BufRead;\nuse std::io::Write;\nuse std::net::{TcpListener, TcpStream};\nuse std::sync::Arc;\n\nfn handle_client(arc: Arc&lt;TcpStream&gt;) -&gt; std::io::Result&lt;()&gt; {\n    let mut stream = Arc::try_unwrap(arc).unwrap();\n\n    stream.write(b\"Welcome to the server!\\r\\n\")?;\n    println!(\"incomming connection: {:?}\", stream);\n\n    std::thread::spawn(move || -&gt; std::io::Result&lt;()&gt; {\n        let peer_addr = stream.peer_addr()?;\n        let mut reader = std::io::BufReader::new(stream);\n        let mut buf = String::new();\n\n        loop {\n            let bytes_read = reader.read_line(&amp;mut buf)?;\n            if bytes_read == 0 {\n                println!(\"client disconnected {}\", peer_addr);\n                return Ok(());\n            }\n\n            buf.remove(bytes_read - 1);\n            println!(\"{}: {}\", peer_addr, buf);\n\n            buf.clear();\n        }\n    });\n\n    Ok(())\n}\n\nfn start() -&gt; std::io::Result&lt;()&gt; {\n    let listener = TcpListener::bind(\"0.0.0.0:1111\")?;\n    println!(\"listening on {}\", listener.local_addr()?.port());\n\n    let mut peers: Vec&lt;Arc&lt;TcpStream&gt;&gt; = vec![];\n\n    for stream in listener.incoming() {\n        let mut stream = stream.unwrap();\n        let arc = Arc::new(stream);\n\n        peers.push(arc.clone());\n        handle_client(arc.clone()).unwrap();\n    }\n\n    Ok(())\n}\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    start()\n}\n</code></pre>\n\n<p>It compiles fine, but <code>let mut stream = Arc::try_unwrap(arc).unwrap();</code> in the <code>handle_client</code> function panics. What am I doing wrong? Why is it panicking?</p>\n"}, {"tags": ["arrays", "rust", "heap"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544363868, "post_id": 53691012, "comment_id": 94241580, "body": "<i>There are several questions already on Stack Overflow about allocating an array</i> \u2014 And how is <b>this one</b> different? Just because you don&#39;t like existing answers doesn&#39;t mean that you can open a duplicate."}, {"owner": {"reputation": 2394, "user_id": 2099873, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/321bd06eb43fe4b165b4d21466aa1753?s=128&d=identicon&r=PG", "display_name": "Svip", "link": "https://stackoverflow.com/users/2099873/svip"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1544376750, "post_id": 53691012, "comment_id": 94245035, "body": "@Shepmaster My question was about performance as well.  The other questions never raised this issue.  The answer below also explores this aspect and answers it well."}], "answers": [{"comments": [{"owner": {"reputation": 2394, "user_id": 2099873, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/321bd06eb43fe4b165b4d21466aa1753?s=128&d=identicon&r=PG", "display_name": "Svip", "link": "https://stackoverflow.com/users/2099873/svip"}, "edited": false, "score": 0, "creation_date": 1544352586, "post_id": 53691365, "comment_id": 94238879, "body": "You are absolutely right, the difference was made with the optimiser.  Compiling my larger program with <code>-O</code>, there is no performance impact using <code>Vec&lt;T&gt;</code>.  Thank you for the in depth answer.  So the answer to my question is just to keep using <code>Vec&lt;T&gt;</code>."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 8, "last_activity_date": 1544351442, "creation_date": 1544351442, "answer_id": 53691365, "question_id": 53691012, "link": "https://stackoverflow.com/questions/53691012/is-there-any-way-to-allocate-a-standard-rust-array-directly-on-the-heap-skippin/53691365#53691365", "title": "Is there any way to allocate a standard Rust array directly on the heap, skipping the stack entirely?", "body": "<p><strong><em>Summary</em>: your benchmark is flawed; just use a <code>Vec</code> (as described <a href=\"https://stackoverflow.com/questions/30242770/how-to-allocate-arrays-on-the-heap-in-rust-1-0\">here</a>), possibly with <a href=\"http://doc.rust-lang.org/std/vec/struct.Vec.html#method.into_boxed_slice\" rel=\"noreferrer\"><code>into_boxed_slice</code></a>,  as it is incredibly unlikely to be slower than a heap allocated array.</strong></p>\n\n<hr>\n\n<p>Unfortunately, your benchmarks are flawed. First of all, you probably didn't compile with optimizations (<code>--release</code> for cargo, <code>-O</code> for rustc). Because if you would have, the Rust compiler would have removed all of your code. See <a href=\"https://rust.godbolt.org/z/OJY4W-\" rel=\"noreferrer\">the assembly here</a>. Why? Because you never observe the vector/array, so there is no need to do all that work in the first place.</p>\n\n<p>Also, your benchmark is not testing what you actually want to test. You are comparing an stack-allocated array with a heap-allocated vector. You should compare the <code>Vec</code> to a heap allocated array.</p>\n\n<p>Don't feel bad though: writing benchmarks is incredible hard for many reasons. Just remember: if you don't know a lot about writing benchmarks, better don't trust your own benchmarks without asking others first.</p>\n\n<hr>\n\n<p>I fixed your benchmark and included all three possibilities: <code>Vec</code>, array on stack and array on heap. You can find the full code <a href=\"https://gist.github.com/LukasKalbertodt/7eaf9399d3a3220dae16ef64a46f0ba9\" rel=\"noreferrer\">here</a>. The results are:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>running 3 tests\ntest array_heap  ... bench:   9,600,979 ns/iter (+/- 1,438,433)\ntest array_stack ... bench:   9,232,623 ns/iter (+/- 720,699)\ntest vec_heap    ... bench:   9,259,912 ns/iter (+/- 691,095)\n</code></pre>\n\n<p>Surprise: the difference between the versions are way less than the variance of the measurement. So we can assume they all are pretty equally fast.</p>\n\n<p>Note that this benchmark is <em>still</em> pretty bad. The two loops can just be replaced by one loop setting all array elements to <code>LENGTH - 1</code>. From taking a quick look at the assembly (and from the rather long time of 9ms), I think that LLVM is not smart enough to actually perform this optimization. But things like this are important and one should be aware of that.</p>\n\n<hr>\n\n<p>Finally, let's discuss why both solutions should be equally fast and whether there are actually differences in speed. </p>\n\n<p>The data section of a <code>Vec&lt;T&gt;</code> has exactly the same memory layout as a <code>[T]</code>: just many <code>T</code>s contiguously in memory. Super simple. This also means both exhibit the same caching-behavior (specifically, being very cache-friendly).</p>\n\n<p>The only difference is that a <code>Vec</code> might have more capacity than elements. So <code>Vec</code> itself stores <code>(pointer, length, capacity)</code>. That is one word more than a simple (boxed) slice (which stores <code>(pointer, length)</code>). A boxed array doesn't need to store the length, as it's already in the type, so it is just a simple pointer. Whether or not we store one, two or three words is not really important when you will have millions of elements anyway. </p>\n\n<p>Accessing one element is the same for all three: we do a bounds check first and then calculate the target pointer via <code>base_pointer + size_of::&lt;T&gt;() * index</code>. But it's important to note that the array storing its length in the type means that the bounds check can be removed more easily by the optimizer! This can be a real advantage. </p>\n\n<p>However, bounds checks are already usually removed by the smart optimizer. In the benchmark code I posted above, there are no bounds checks in the assembly. So while a boxed array could be a bit faster by removed bounds checks, (a) this will be a minor performance difference and (b) it's very unlikely that you will have a lot of situations where the bound check is removed for the array but not for the Vec/slice.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1559564908, "post_id": 56426372, "comment_id": 99449245, "body": "Any time you use <code>unsafe</code>, but especially on Stack Overflow, you should add a comment explaining why you believe it is correct. In this particular case, why it&#39;s OK to leave the Vec&#39;s elements uninitialized, and why it&#39;s OK to use <code>Box::from_raw</code> on the casted pointer."}], "tags": [], "owner": {"reputation": 678, "user_id": 647151, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/7e5c476f7ed6fcbb67eee738e304f066?s=128&d=identicon&r=PG", "display_name": "malthe", "link": "https://stackoverflow.com/users/647151/malthe"}, "is_accepted": false, "score": 2, "last_activity_date": 1559643003, "last_edit_date": 1559643003, "creation_date": 1559561135, "answer_id": 56426372, "question_id": 53691012, "link": "https://stackoverflow.com/questions/53691012/is-there-any-way-to-allocate-a-standard-rust-array-directly-on-the-heap-skippin/56426372#56426372", "title": "Is there any way to allocate a standard Rust array directly on the heap, skipping the stack entirely?", "body": "<p>If you really want a heap-allocated array, i.e. <code>Box&lt;[i32; LENGTH]&gt;</code> then you can use:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    const LENGTH: usize = 10_000_000;\n\n    let mut a = {\n        let mut v: Vec&lt;i32&gt; = Vec::with_capacity(LENGTH);\n\n        // Explicitly set length which is safe since the allocation is\n        // sized correctly.\n        unsafe { v.set_len(LENGTH); };\n\n        // While not required for this particular example, in general\n        // we want to initialize elements to a known value.\n        let mut slice = v.into_boxed_slice();\n        for i in &amp;mut slice[..] {\n            *i = 0;\n        }\n\n        let raw_slice = Box::into_raw(slice);\n\n        // Using `from_raw` is safe as long as the pointer is\n        // retrieved using `into_raw`.\n        unsafe {\n            Box::from_raw(raw_slice as *mut [i32; LENGTH])\n        }\n    };\n\n    // This is the micro benchmark from the question.\n    for j in 0..LENGTH {\n        for i in 0..LENGTH {\n            a[i] = j as i32;\n        }\n    }\n}\n</code></pre>\n\n<p>It's not going to be faster than using a vector since Rust does bounds-checking even on arrays, but it has a smaller interface which might make sense in terms of software design.</p>\n"}], "owner": {"reputation": 2394, "user_id": 2099873, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/321bd06eb43fe4b165b4d21466aa1753?s=128&d=identicon&r=PG", "display_name": "Svip", "link": "https://stackoverflow.com/users/2099873/svip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2637, "favorite_count": 3, "accepted_answer_id": 53691365, "answer_count": 2, "score": 7, "last_activity_date": 1559643003, "creation_date": 1544348166, "last_edit_date": 1544364066, "question_id": 53691012, "link": "https://stackoverflow.com/questions/53691012/is-there-any-way-to-allocate-a-standard-rust-array-directly-on-the-heap-skippin", "title": "Is there any way to allocate a standard Rust array directly on the heap, skipping the stack entirely?", "body": "<p>There are several questions already on Stack Overflow about allocating an array (say <code>[i32]</code>) on the heap.  The general recommendation is boxing, e.g. <code>Box&lt;[i32]&gt;</code>.  But while boxing works fine enough for smaller arrays, the problem is that the array being boxed has to first be allocated on the stack.</p>\n\n<p>So if the array is too large (say 10 million elements), you will - even with boxing - get a stack overflow (one is unlikely to have a stack that large).</p>\n\n<p>The suggestion then is using <code>Vec&lt;T&gt;</code> instead, that is <code>Vec&lt;i32&gt;</code> in our example.  And while that does do the job, it does have a performance impact.</p>\n\n<p>Consider the following program:</p>\n\n<pre><code>fn main() {\n    const LENGTH: usize = 10_000;\n    let mut a: [i32; LENGTH] = [0; LENGTH];\n    for j in 0..LENGTH {\n        for i in 0..LENGTH {\n            a[i] = j as i32;\n        }\n    }\n}\n</code></pre>\n\n<p><code>time</code> tells me that this program takes about 2.9 seconds to run.  I use 10'000 in this example, so I can allocate that on the stack, but I really want one with 10 million.</p>\n\n<p>Now consider the same program but with <code>Vec&lt;T&gt;</code> instead:</p>\n\n<pre><code>fn main() {\n    const LENGTH: usize = 10_000;\n    let mut a: Vec&lt;i32&gt; = vec![0; LENGTH];\n    for j in 0..LENGTH {\n        for i in 0..LENGTH {\n            a[i] = j as i32;\n        }\n    }\n}\n</code></pre>\n\n<p><code>time</code> tells me that this program takes about 5 seconds to run.  Now <code>time</code> isn't super exact, but the difference of about 2 seconds for such a simple program is not an insignificant impact.</p>\n\n<p>Storage is storage, the program with array is just as fast when the array is boxed.  So it's not the heap slowing the <code>Vec&lt;T&gt;</code> version down, but the <code>Vec&lt;T&gt;</code> structure itself.</p>\n\n<p>I also tried with a <code>HashMap</code> (specifically <code>HashMap&lt;usize, i32&gt;</code> to mimic an array structure), but that's far slower than the <code>Vec&lt;T&gt;</code> solution.</p>\n\n<p>If my <code>LENGTH</code> had been 10 million, the first version wouldn't even have run.</p>\n\n<p>If that's not possible, is there a structure that behaves like an array (and <code>Vec&lt;T&gt;</code>) on the heap, but can match the speed and performance of an array?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 573, "user_id": 9946772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19b5785ce8af233b264c6f7fb66977e5?s=128&d=identicon&r=PG&f=1", "display_name": "kangalioo", "link": "https://stackoverflow.com/users/9946772/kangalioo"}, "edited": false, "score": 1, "creation_date": 1544340154, "post_id": 53689622, "comment_id": 94236577, "body": "It would have been nice if you had minimized your code further. For testing, I had to create a new Cargo project, add the dependencies and copy-paste two files."}, {"owner": {"reputation": 1778, "user_id": 5698740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/faee64fe3fa6b806a89f84492ba6c431?s=128&d=identicon&r=PG&f=1", "display_name": "clmno", "link": "https://stackoverflow.com/users/5698740/clmno"}, "reply_to_user": {"reputation": 573, "user_id": 9946772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19b5785ce8af233b264c6f7fb66977e5?s=128&d=identicon&r=PG&f=1", "display_name": "kangalioo", "link": "https://stackoverflow.com/users/9946772/kangalioo"}, "edited": false, "score": 0, "creation_date": 1544340821, "post_id": 53689622, "comment_id": 94236678, "body": "@kangalioo Oh, I&#39;m sorry. I just started learning Rust. Could you share your version of the code?"}, {"owner": {"reputation": 573, "user_id": 9946772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19b5785ce8af233b264c6f7fb66977e5?s=128&d=identicon&r=PG&f=1", "display_name": "kangalioo", "link": "https://stackoverflow.com/users/9946772/kangalioo"}, "edited": false, "score": 0, "creation_date": 1544340924, "post_id": 53689622, "comment_id": 94236706, "body": "It&#39;s ok :) I actually haven&#39;t minimized your code though because I&#39;ve already gotten a good overview"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544373915, "post_id": 53689622, "comment_id": 94244290, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53689622/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544373967, "post_id": 53689622, "comment_id": 94244305, "body": "<i>Questions seeking debugging help (&quot;why isn&#39;t this code working?&quot;) must include the desired behavior, a specific problem or error and the shortest code necessary to reproduce it in the question itself.</i>"}], "answers": [{"tags": [], "owner": {"reputation": 573, "user_id": 9946772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19b5785ce8af233b264c6f7fb66977e5?s=128&d=identicon&r=PG&f=1", "display_name": "kangalioo", "link": "https://stackoverflow.com/users/9946772/kangalioo"}, "is_accepted": true, "score": 3, "last_activity_date": 1544343616, "creation_date": 1544343616, "answer_id": 53690547, "question_id": 53689622, "link": "https://stackoverflow.com/questions/53689622/lifetime-error-for-a-variable-i-think-im-not-borrowing/53690547#53690547", "title": "Lifetime error for a variable I think I&#39;m not borrowing", "body": "<p><code>FileInfo</code> contains a reference to a <code>str</code>, not an owned <code>String</code>. This means that it can only live as long as the <code>str</code> that it references.</p>\n\n<p>You tried to avoid that problem by cloning the <code>e.path().to_str()</code>. That way, you have a new copy that should not be bound to <code>e</code> in any way. That is correct, but because the clone was created in an iteration of the loop, it only lives for that iteration of the loop.</p>\n\n<p>So in the end, cloning doesn't change anything, because the lifetime is still the same (You can try it out).</p>\n\n<p>One solution would be to modify <code>FileInfo</code> so that it contains a <code>String</code> instead of a <code>&amp;str</code>. That way, every <code>FileInfo</code> instance can be moved around freely without lifetime conflictions.</p>\n"}], "owner": {"reputation": 1778, "user_id": 5698740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/faee64fe3fa6b806a89f84492ba6c431?s=128&d=identicon&r=PG&f=1", "display_name": "clmno", "link": "https://stackoverflow.com/users/5698740/clmno"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 53690547, "answer_count": 1, "score": 0, "last_activity_date": 1544343616, "creation_date": 1544332632, "question_id": 53689622, "link": "https://stackoverflow.com/questions/53689622/lifetime-error-for-a-variable-i-think-im-not-borrowing", "title": "Lifetime error for a variable I think I&#39;m not borrowing", "body": "<p>I have a block of code that recursively reads a directory and creates a hash for each file. This is the code:</p>\n\n<pre><code>//read the file paths all the way upto individual files\nfor dir in search_dirs.iter(){\n    //read the dir, skip errors (hidden files, syslinks etc) \n    for e in WalkDir::new(dir).into_iter().filter_map(|e| e.ok()) {\n        //check if it's a file, continue\n        if metadata(e.path().display().to_string()).unwrap().is_file(){\n\n            //\"clone\" std::path::Path as &amp;str\n            let file_path = e.path().to_str().unwrap().clone();\n            //create a new FileInfo Object\n            let mut file_obj = FileInfo::new(None, None, file_path);\n            file_obj.generate_hash();\n            file_obj.generate_path_hash();\n\n            //count the num for each file content hash ~ HashMap\n            *file_counter.entry( file_obj.get_hash() ).or_insert(0) += 1;\n\n            //HashMap for file path hash and FileInfo Object\n\n            /*If I add this statement I have an Error: E0597\n            file_info.entry(file_obj.get_path_hash())\n                           .or_insert(file_obj.clone());\n            */\n        }\n    }\n}\n</code></pre>\n\n<p>If I add <code>file_info.entry(file_obj.get_path_hash()).or_insert(file_obj.clone())</code> I get an error <code>E0597</code>. </p>\n\n<pre><code>error[E0597]: `e` does not live long enough                                     \n  --&gt; src/main.rs:41:33                                                         \n   |                                                                            \n41 |                 let file_path = e.path().to_str().unwrap().clone();        \n   |                                 ^ borrowed value does not live long enough \n...                                                                             \n48 |                 file_info.entry(file_obj.get_path_hash() ).or_insert(file_obj.clone());\n   |                 --------- borrow used here, in later iteration of loop     \n49 |             }                                                              \n50 |         }                                                                  \n   |         - `e` dropped here while still borrowed\n</code></pre>\n\n<p><strong>Question</strong><br/></p>\n\n<ul>\n<li>I cloned <code>e</code>, I don't think I borrowed it.</li>\n<li>I'm not using 'e` anywhere else, so why should the compiler care about it? It can be dropped.</li>\n</ul>\n\n<p>Minimal, Complete, and Verifiable example: <a href=\"https://pastebin.com/dvC7TiG8\" rel=\"nofollow noreferrer\">main.rs</a> <a href=\"https://pastebin.com/uHdmFMKX\" rel=\"nofollow noreferrer\">lib.rs</a></p>\n"}, {"tags": ["rust", "type-level-computation"], "comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1544359278, "post_id": 53689599, "comment_id": 94240384, "body": "To me, this looks like the type checker runs into an infinite loop somehow. Maybe you can narrow down your problem by (temporarily) eliminating <code>Uop</code>, setting all <code>type Get=Zero</code>, and selectively uncommenting type requirements."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544359481, "post_id": 53689599, "comment_id": 94240431, "body": "Your code looks correct. I would not expect this to overflow."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1544359627, "post_id": 53689599, "comment_id": 94240468, "body": "@phimuemue I think this is a compiler bug. Each type only ever depends on a simpler type, so there is no reason for it to explode."}, {"owner": {"reputation": 43, "user_id": 10739302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/578bd4012e3d05f886bcf7752f1caab2?s=128&d=identicon&r=PG&f=1", "display_name": "user10739302", "link": "https://stackoverflow.com/users/10739302/user10739302"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544360175, "post_id": 53689599, "comment_id": 94240598, "body": "@PeterHall The code caused overflow is at <code>Bop&lt;&lt;T as Fib&gt;::Get, &lt;Inc&lt;T&gt; as Fib&gt;::Get&gt;: Add,</code> constraint. IDK why the compiler will go to the opposite side to evaluate a more nested type."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1544361093, "post_id": 53689599, "comment_id": 94240838, "body": "Consider creating a bug report at: <a href=\"https://github.com/rust-lang/rust/issues\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544372879, "post_id": 53689599, "comment_id": 94243988, "body": "See also <a href=\"https://stackoverflow.com/q/31196422/155423\">What does \u201cOverflow evaluating the requirement\u201d mean and how can I fix it</a>; <a href=\"https://stackoverflow.com/q/39397157/155423\">&quot;Overflow evaluating the requirement\u201d but that kind of recursion should not happen at all</a>; <a href=\"https://stackoverflow.com/q/50657585/155423\">Curiously recurring generic trait pattern: overflow evaluating the requirement</a>; <a href=\"https://stackoverflow.com/q/53405287/155423\">What&#39;s going on with this bizarre recursive type error in Rust?</a>."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1544437785, "post_id": 53689599, "comment_id": 94262121, "body": "The solution seems to be to introduce temporary type variables for shared type structures: <a href=\"https://users.rust-lang.org/t/type-level-fibonacci-sequence-results-in-overflow-evaluating-the-requirement/23058/6\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}], "owner": {"reputation": 43, "user_id": 10739302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/578bd4012e3d05f886bcf7752f1caab2?s=128&d=identicon&r=PG&f=1", "display_name": "user10739302", "link": "https://stackoverflow.com/users/10739302/user10739302"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1544372710, "creation_date": 1544332325, "last_edit_date": 1544372710, "question_id": 53689599, "link": "https://stackoverflow.com/questions/53689599/type-level-fibonacci-sequence-results-in-overflow-evaluating-the-requirement", "title": "Type level Fibonacci sequence results in &quot;overflow evaluating the requirement&quot;", "body": "<p>I'm writing a type level Fibonacci sequence. I've already written a type level addition, which works fine. Every number is represented as <code>Inc&lt;Inc&lt;...&lt;Zero&gt;...&gt;&gt;</code>. There is a trait <code>Add</code>, then the structure <code>Bop&lt;Left, Right&gt;</code> (binary operation) implements the <code>Add</code> trait. The usage is that <code>&lt;Bop&lt;Inc&lt;Inc&lt;Inc&lt;Zero&gt;&gt;&gt;, Inc&lt;Inc&lt;Zero&gt;&gt;&gt; as Add&gt;::Get</code> will be <code>Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Zero&gt;&gt;&gt;&gt;&gt;</code>, that is 3 + 2 = 5.</p>\n\n<p>Then I write a Fibonacci sequence based on the addition:</p>\n\n<pre><code>use std::marker::PhantomData;\nstruct Zero {}\nstruct Inc&lt;T&gt; {\n    _phantom: PhantomData&lt;T&gt;,\n}\n\nstruct Bop&lt;Left, Right&gt; {\n    _phantom_l: PhantomData&lt;Left&gt;,\n    _phantom_r: PhantomData&lt;Right&gt;,\n}\n\ntrait Add {\n    type Get;\n}\n\nimpl&lt;Left&gt; Add for Bop&lt;Left, Zero&gt; {\n    type Get = Left;\n}\n\nimpl&lt;Left, RightInner&gt; Add for Bop&lt;Left, Inc&lt;RightInner&gt;&gt;\nwhere\n    Bop&lt;Left, RightInner&gt;: Add,\n{\n    type Get = Inc&lt;&lt;Bop&lt;Left, RightInner&gt; as Add&gt;::Get&gt;;\n}\n\ntype One = Inc&lt;Zero&gt;;\ntype Two = Inc&lt;One&gt;;\ntype Three = Inc&lt;Two&gt;;\ntype Four = Inc&lt;Three&gt;;\ntype Five = Inc&lt;Four&gt;;\n// then &lt;Bop&lt;Three, Two&gt; as Add&gt;::Get will be type Five\n\n// 0 1 2 3 4 5 6 7\n// 0 1 1 2 3 5 8 13\n// usage: &lt;Inc&lt;Inc&lt;Inc&lt;Zero&gt;&gt;&gt; as Fib&gt;::Get should be the third fib number,\n// i.e. 2, or Inc&lt;Inc&lt;Zero&gt;&gt;\ntrait Fib {\n    type Get;\n}\nimpl Fib for Zero {\n    type Get = Zero;\n}\nimpl Fib for One {\n    type Get = One;\n}\n\nimpl&lt;T&gt; Fib for Inc&lt;Inc&lt;T&gt;&gt;\nwhere\n    T: Fib,\n    Inc&lt;T&gt;: Fib,\n    Bop&lt;&lt;T as Fib&gt;::Get, &lt;Inc&lt;T&gt; as Fib&gt;::Get&gt;: Add,\n{\n    type Get = &lt;Bop&lt;&lt;T as Fib&gt;::Get, &lt;Inc&lt;T&gt; as Fib&gt;::Get&gt; as Add&gt;::Get;\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=763c5101373e4eb8ed2f503d2a7e10e6\" rel=\"nofollow noreferrer\">complete example</a></p>\n\n<p>The compiler has trouble figuring out the <code>impl&lt;T&gt; Fib for Uop&lt;Inc&lt;Inc&lt;T&gt;&gt;&gt;</code> part, it complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `Inc&lt;_&gt;: Fib`\n  |\n  = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;_&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n  = note: required because of the requirements on the impl of `Fib` for `Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;Inc&lt;_&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;`\n\n// cut off more\n</code></pre>\n\n<p>What's the reason of the error? How to resolve it?</p>\n"}, {"tags": ["rust", "list-comprehension"], "comments": [{"owner": {"reputation": 20427, "user_id": 2570261, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e71068b09fc539447a0cee3e99fc419d?s=128&d=identicon&r=PG&f=1", "display_name": "Haleemur Ali", "link": "https://stackoverflow.com/users/2570261/haleemur-ali"}, "edited": false, "score": 2, "creation_date": 1544316817, "post_id": 53688202, "comment_id": 94233414, "body": "i&#39;m not sure if that would be considered idiomatic python, much less whether it should be emulated in another language - the files are not explicitly closed after being opened."}, {"owner": {"user_type": "does_not_exist", "display_name": "user10307643"}, "reply_to_user": {"reputation": 20427, "user_id": 2570261, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e71068b09fc539447a0cee3e99fc419d?s=128&d=identicon&r=PG&f=1", "display_name": "Haleemur Ali", "link": "https://stackoverflow.com/users/2570261/haleemur-ali"}, "edited": false, "score": 1, "creation_date": 1544317347, "post_id": 53688202, "comment_id": 94233509, "body": "@HaleemurAli Replace <code>open().read()</code> with an ad-hoc function to read (and close) and it&#39;s ok, and idiomatic. However, I don&#39;t know how useful it is to just read these text files. Depends on contents I guess, but if there is any structure it should probably be exploited (text lines / csv table / json / ...)."}, {"owner": {"reputation": 8421, "user_id": 4381487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YNB1x.jpg?s=128&g=1", "display_name": "gilch", "link": "https://stackoverflow.com/users/4381487/gilch"}, "edited": false, "score": 0, "creation_date": 1544321907, "post_id": 53688202, "comment_id": 94234214, "body": "Python&#39;s comprehensions are just sugar for a for loop and accumulator. Rust has <a href=\"https://doc.rust-lang.org/stable/rust-by-example/macros.html\" rel=\"nofollow noreferrer\">macros</a>--you can make any sugar you want."}, {"owner": {"reputation": 1600, "user_id": 4562156, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WuCmq.jpg?s=128&g=1", "display_name": "Sean Pianka", "link": "https://stackoverflow.com/users/4562156/sean-pianka"}, "reply_to_user": {"reputation": 8421, "user_id": 4381487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YNB1x.jpg?s=128&g=1", "display_name": "gilch", "link": "https://stackoverflow.com/users/4381487/gilch"}, "edited": false, "score": 0, "creation_date": 1544321957, "post_id": 53688202, "comment_id": 94234230, "body": "@gilch would you mind submitting an example as an answer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544363769, "post_id": 53688202, "comment_id": 94241550, "body": "See also <a href=\"https://stackoverflow.com/q/45282970/155423\">Does Rust have an equivalent to Python&#39;s list comprehension syntax?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8421, "user_id": 4381487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YNB1x.jpg?s=128&g=1", "display_name": "gilch", "link": "https://stackoverflow.com/users/4381487/gilch"}, "is_accepted": false, "score": 9, "last_activity_date": 1544363647, "last_edit_date": 1544363647, "creation_date": 1544323454, "answer_id": 53688928, "question_id": 53688202, "link": "https://stackoverflow.com/questions/53688202/does-rust-have-an-equivalent-to-pythons-dictionary-comprehension-syntax/53688928#53688928", "title": "Does Rust have an equivalent to Python&#39;s dictionary comprehension syntax?", "body": "<p>Python's comprehensions are just sugar for a for loop and accumulator. Rust has <a href=\"https://doc.rust-lang.org/stable/rust-by-example/macros.html\" rel=\"noreferrer\">macros</a>--you can make any sugar you want.</p>\n\n<p>Take this simple Python example,</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>print({i+i: i*i for i in range(1, 5)})\n</code></pre>\n\n<p>You could easily re-write this as a loop and accumulator:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>map = {}\nfor i in range(1, 5):\n    map[i+i] = i*i\nprint(map)\n</code></pre>\n\n<p>You could do it basically the same way in Rust.</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut hm = HashMap::new();\n    for i in 1..5 {\n        hm.insert(i + i, i * i);\n    }\n    println!(\"{:?}\", hm);\n}\n</code></pre>\n\n<p>You can use a macro to do the rewriting to this form for you.</p>\n\n<pre><code>use std::collections::HashMap;\nmacro_rules! hashcomp {\n    ($name:ident = $k:expr =&gt; $v:expr; for $i:ident in $itr:expr) =&gt; {\n        let mut $name = HashMap::new();\n        for $i in $itr {\n            $name.insert($k, $v);\n        }\n    };\n}\n</code></pre>\n\n<p>When you use it, the resulting code is much more compact. And this choice of separator tokens makes it resemble the Python.</p>\n\n<pre><code>fn main() {\n    hashcomp!(hm = i+i =&gt; i*i; for i in 1..5);\n    println!(\"{:?}\", hm);\n}\n</code></pre>\n\n<p>This is just a basic example that can handle a single loop. Python's comprehensions also can have filters and additional loops, but a more advanced macro could probably do that too.</p>\n"}, {"tags": [], "owner": {"reputation": 8421, "user_id": 4381487, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YNB1x.jpg?s=128&g=1", "display_name": "gilch", "link": "https://stackoverflow.com/users/4381487/gilch"}, "is_accepted": true, "score": 13, "last_activity_date": 1544363591, "last_edit_date": 1544363591, "creation_date": 1544328915, "answer_id": 53689316, "question_id": 53688202, "link": "https://stackoverflow.com/questions/53688202/does-rust-have-an-equivalent-to-pythons-dictionary-comprehension-syntax/53689316#53689316", "title": "Does Rust have an equivalent to Python&#39;s dictionary comprehension syntax?", "body": "<p>Rust's iterators have <code>map</code>/<code>filter</code>/<code>collect</code> methods which are enough to do anything Python's comprehensions can. You can create a <code>HashMap</code> with <code>collect</code> on an iterator of pairs, but <code>collect</code> can return various types of collections, so you may have to specify the type you want.</p>\n\n<p>For example,</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    println!(\n        \"{:?}\",\n        (1..5).map(|i| (i + i, i * i)).collect::&lt;HashMap&lt;_, _&gt;&gt;()\n    );\n}\n</code></pre>\n\n<p>Is roughly equivalent to the Python</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>print({i+i: i*i for i in range(1, 5)})\n</code></pre>\n\n<p>Though conceptually, it's actually closer to</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>print(\"{!r}\".format(dict(map(lambda i: (i+i, i*i), range(1, 5)))))\n</code></pre>\n"}], "owner": {"reputation": 1600, "user_id": 4562156, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WuCmq.jpg?s=128&g=1", "display_name": "Sean Pianka", "link": "https://stackoverflow.com/users/4562156/sean-pianka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4596, "favorite_count": 2, "accepted_answer_id": 53689316, "answer_count": 2, "score": 6, "last_activity_date": 1544363684, "creation_date": 1544313634, "last_edit_date": 1544363684, "question_id": 53688202, "link": "https://stackoverflow.com/questions/53688202/does-rust-have-an-equivalent-to-pythons-dictionary-comprehension-syntax", "title": "Does Rust have an equivalent to Python&#39;s dictionary comprehension syntax?", "body": "<p>How would one translate the following Python, in which several files are read and their contents are used as values to a dictionary (with filename as key), to Rust?    </p>\n\n<pre><code>countries = {region: open(\"{}.txt\".format(region)).read() for region in [\"canada\", \"usa\", \"mexico\"]}\n</code></pre>\n\n<p>My attempt is shown below, but I was wondering if a one-line, idiomatic solution is possible.</p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{prelude::*, BufReader},\n    path::Path,\n    collections::HashMap,\n};\n\nmacro_rules! map(\n    { $($key:expr =&gt; $value:expr),+ } =&gt; {\n        {\n            let mut m = HashMap::new();\n            $(\n                m.insert($key, $value);\n            )+\n            m\n        }\n     };\n);\n\nfn lines_from_file&lt;P&gt;(filename: P) -&gt; Vec&lt;String&gt;\nwhere\n    P: AsRef&lt;Path&gt;,\n{\n    let file = File::open(filename).expect(\"no such file\");\n    let buf = BufReader::new(file);\n    buf.lines()\n        .map(|l| l.expect(\"Could not parse line\"))\n        .collect()\n}\n\nfn main() {\n    let _countries = map!{ \"canada\" =&gt; lines_from_file(\"canada.txt\"),\n                           \"usa\"    =&gt; lines_from_file(\"usa.txt\"),\n                           \"mexico\" =&gt; lines_from_file(\"mexico.txt\") };\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1544338838, "post_id": 53687045, "comment_id": 94236395, "body": "<i>&quot;would the best next step be to create a calendar crate or something of the sort?&quot;</i> -- Would be overkill if this is the only functionality you need. It&#39;s a fairly trivial function to write, have you tried it? <a href=\"https://en.wikipedia.org/wiki/Leap_year#Algorithm\" rel=\"nofollow noreferrer\">Wikipedia</a> even has the algorithm for determining if it&#39;s a leap year in pseudocode."}, {"owner": {"reputation": 157, "user_id": 6451083, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20562477774447c154c4111f027bb032?s=128&d=identicon&r=PG&f=1", "display_name": "ludofet", "link": "https://stackoverflow.com/users/6451083/ludofet"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1544357370, "post_id": 53687045, "comment_id": 94239942, "body": "What I&#39;m really looking for is a high level API for managing datetime for time series analysis. Getting the number of days in a months is only the first baby step."}], "answers": [{"tags": [], "owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "is_accepted": true, "score": 6, "last_activity_date": 1544362609, "last_edit_date": 1544362609, "creation_date": 1544305599, "answer_id": 53687279, "question_id": 53687045, "link": "https://stackoverflow.com/questions/53687045/how-to-get-the-number-of-days-in-a-month-in-rust/53687279#53687279", "title": "How to get the number of days in a month in Rust?", "body": "<p>You can use <a href=\"https://docs.rs/chrono/0.4/chrono/naive/struct.NaiveDate.html#method.signed_duration_since\" rel=\"noreferrer\"><code>NaiveDate::signed_duration_since</code></a> from the <a href=\"https://crates.io/crates/chrono\" rel=\"noreferrer\"><code>chrono</code> crate</a>:</p>\n\n<pre><code>use chrono::NaiveDate;\n\nfn main() {\n    let year = 2018;\n    for (m, d) in (1..=12).map(|m| {\n        (\n            m,\n            if m == 12 {\n                NaiveDate::from_ymd(year + 1, 1, 1)\n            } else {\n                NaiveDate::from_ymd(year, m + 1, 1)\n            }.signed_duration_since(NaiveDate::from_ymd(year, m, 1))\n            .num_days(),\n        )\n    }) {\n        println!(\"days {} in month {}\", d, m);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 23378, "user_id": 4850040, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/acYd0.png?s=128&g=1", "display_name": "Toby Speight", "link": "https://stackoverflow.com/users/4850040/toby-speight"}, "edited": false, "score": 0, "creation_date": 1569946095, "post_id": 58188385, "comment_id": 102757053, "body": "Thank you for this code snippet, which might provide some limited short-term help.  A proper explanation <a href=\"//meta.stackexchange.com/q/114762\">would greatly improve</a> its long-term value by showing <i>why</i> this is a good solution to the problem, and would make it more useful to future readers with other, similar questions.  Please <a href=\"https://stackoverflow.com/posts/58188385/edit\">edit</a> your answer to add some explanation, including the assumptions you&#39;ve made."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1569947190, "post_id": 58188385, "comment_id": 102757528, "body": "Additionally, it would be good to explain what <i>this</i> answer brings as compared to the <a href=\"https://stackoverflow.com/a/53687279/155423\">existing answer</a>. They both appear to use the same logic and functions."}], "tags": [], "owner": {"reputation": 63, "user_id": 6323280, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PqcXTeT-HAs/AAAAAAAAAAI/AAAAAAAAAB4/aSfQrzzpJsY/photo.jpg?sz=128", "display_name": "Boussif Asma", "link": "https://stackoverflow.com/users/6323280/boussif-asma"}, "is_accepted": false, "score": 5, "last_activity_date": 1569947088, "last_edit_date": 1569947088, "creation_date": 1569944999, "answer_id": 58188385, "question_id": 53687045, "link": "https://stackoverflow.com/questions/53687045/how-to-get-the-number-of-days-in-a-month-in-rust/58188385#58188385", "title": "How to get the number of days in a month in Rust?", "body": "<pre><code>pub fn get_days_from_month(year: i32, month: u32) -&gt; i64 {\n    NaiveDate::from_ymd(\n        match month {\n            12 =&gt; year + 1,\n            _ =&gt; year,\n        },\n        match month {\n            12 =&gt; 1,\n            _ =&gt; month + 1,\n        },\n        1,\n    )\n    .signed_duration_since(NaiveDate::from_ymd(year, month, 1))\n    .num_days()\n}\n</code></pre>\n"}], "owner": {"reputation": 157, "user_id": 6451083, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20562477774447c154c4111f027bb032?s=128&d=identicon&r=PG&f=1", "display_name": "ludofet", "link": "https://stackoverflow.com/users/6451083/ludofet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1222, "favorite_count": 0, "accepted_answer_id": 53687279, "answer_count": 2, "score": 4, "last_activity_date": 1569947088, "creation_date": 1544303611, "last_edit_date": 1544362518, "question_id": 53687045, "link": "https://stackoverflow.com/questions/53687045/how-to-get-the-number-of-days-in-a-month-in-rust", "title": "How to get the number of days in a month in Rust?", "body": "<p>Is there a idiomatic Rust way to get the number of days in a given month? I've looked at chrono but I haven't found anything in the docs for this.</p>\n\n<p>I'm looking for something that can manage leap years similar to <code>calendar.monthrange</code> in Python or <code>DateTime.DaysInMonth</code> in C# .</p>\n"}, {"tags": ["pointers", "vector", "reference", "rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1544303682, "post_id": 53686639, "comment_id": 94230460, "body": "If you want to know the type you can specify <code>()</code> as the type and study the error message, i.e. <code>let third: () = v[2];</code>."}, {"owner": {"reputation": 7560, "user_id": 1034749, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2022f0caae119ed6232cf370bb9d9d3a?s=128&d=identicon&r=PG", "display_name": "fghj", "link": "https://stackoverflow.com/users/1034749/fghj"}, "edited": false, "score": 0, "creation_date": 1544306002, "post_id": 53686639, "comment_id": 94231087, "body": "possible dulication of  <a href=\"https://stackoverflow.com/questions/27852613/why-does-printing-a-pointer-print-the-same-thing-as-printing-the-dereferenced-po\" title=\"why does printing a pointer print the same thing as printing the dereferenced po\">stackoverflow.com/questions/27852613/&hellip;</a> ?"}], "answers": [{"tags": [], "owner": {"reputation": 522, "user_id": 153612, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba347a31bc66bb2654de01850e914021?s=128&d=identicon&r=PG", "display_name": "Ta Thanh Dinh", "link": "https://stackoverflow.com/users/153612/ta-thanh-dinh"}, "is_accepted": false, "score": 1, "last_activity_date": 1544331521, "last_edit_date": 1544331521, "creation_date": 1544331107, "answer_id": 53689495, "question_id": 53686639, "link": "https://stackoverflow.com/questions/53686639/not-understanding-how-to-access-the-elements-of-a-vector-in-rust/53689495#53689495", "title": "Not understanding how to access the elements of a vector in Rust", "body": "<p>Disclaimer: <em>I'm learning Rust too, so please take this with a grain of salt.</em></p>\n\n<p>To understand what happens, it might be easier with <a href=\"https://github.com/dtolnay/cargo-expand\" rel=\"nofollow noreferrer\">cargo-expand</a>.</p>\n\n<p>For the code</p>\n\n<pre><code>fn main() {\n  let v = vec![1, 2, 3, 4, 5];\n  let third: &amp;i32 = &amp;v[2];\n  println!(\"{}\", third);\n}\n</code></pre>\n\n<p>we get (I've removed irrelevant codes)</p>\n\n<pre><code>fn main() {\n    ...\n    let third: ...\n    {\n        ::io::_print(::std::fmt::Arguments::new_v1_formatted(                            \n            ...\n            &amp;match (&amp;third,) {                                                           \n                (arg0,) =&gt; [::std::fmt::ArgumentV1::new(arg0, ::std::fmt::Display::fmt)],\n            },\n            ...\n        ));\n    };\n}\n</code></pre>\n\n<p>for the first/last case, and</p>\n\n<pre><code>fn main() {\n    ...\n    let third: ...\n    {\n        ::io::_print(::std::fmt::Arguments::new_v1_formatted(                            \n            ...\n            &amp;match (&amp;*third,) {                                                           \n                (arg0,) =&gt; [::std::fmt::ArgumentV1::new(arg0, ::std::fmt::Display::fmt)],\n            },\n            ...\n        ));\n    };\n}\n</code></pre>\n\n<p>for the second case.</p>\n\n<p>Which, roughly, means that, for <code>{}</code> formatter, the function <code>fmt</code> (of the trait <code>Display</code>) will be called for a reference to <code>third</code> or <code>*third</code> respectively.</p>\n\n<p>Let's apply this logic for </p>\n\n<ul>\n<li><p>second case: <code>third: &amp;i32</code> then <code>*third: i32</code>, this is where <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html#impl-Display-14\" rel=\"nofollow noreferrer\"><code>impl Display for i32</code></a> applies.</p></li>\n<li><p>first case: <code>third: &amp;i32</code>, this works also because of <a href=\"https://doc.rust-lang.org/std/fmt/trait.Display.html#impl-Display-72\" rel=\"nofollow noreferrer\"><code>impl&lt;'_, T&gt; Display for &amp;'_ T</code></a> (where <code>T</code> is <code>i32</code>)</p></li>\n<li><p>last case: <code>third: i32</code>: is the same as the first case. Moreover, <code>v[2]</code> (which is of type <code>i32</code>) works because <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-Index%3CI%3E\" rel=\"nofollow noreferrer\">impl Index for Vec</a> (note that: <code>let third = v[2]</code> works because <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#impl-Copy\" rel=\"nofollow noreferrer\">impl Copy for i32</a>, i.e copy semantics is applied for <code>=</code> instead of the default move semantics).</p></li>\n</ul>\n"}], "owner": {"reputation": 363, "user_id": 4334680, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/9b476e9ef1dd19513621f371386d5cf9?s=128&d=identicon&r=PG&f=1", "display_name": "Alex M.", "link": "https://stackoverflow.com/users/4334680/alex-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1619, "favorite_count": 0, "closed_date": 1544351926, "answer_count": 1, "score": 5, "last_activity_date": 1544331521, "creation_date": 1544300684, "question_id": 53686639, "link": "https://stackoverflow.com/questions/53686639/not-understanding-how-to-access-the-elements-of-a-vector-in-rust", "closed_reason": "Duplicate", "title": "Not understanding how to access the elements of a vector in Rust", "body": "<p>This is my first encounter with Rust, and I am reading the chapter on vectors in the current version of the <a href=\"https://doc.rust-lang.org/book/ch08-01-vectors.html\" rel=\"noreferrer\">Rust Book</a>. I do have previous experience with other languages (mostly functional ones, where the following issues are hidden).</p>\n\n<p>Running the following code snippet (from the book) returns <code>3</code>:</p>\n\n<pre><code>fn main() {\n  let v = vec![1, 2, 3, 4, 5];\n  let third: &amp;i32 = &amp;v[2];\n  println!(\"{}\", third);\n}\n</code></pre>\n\n<ol>\n<li>The first thing that I do not understand is why the <code>third</code> inside the <code>println!</code> macro isn't referenced. I would have expected the above code to print the memory address of the 3rd element of <code>v</code> (as in C and C++), not its content.</li>\n</ol>\n\n<p>Consider now the code (notice the reference this time inside <code>println!</code>):</p>\n\n<pre><code>fn main() {\n  let v = vec![1, 2, 3, 4, 5];\n  let third: &amp;i32 = &amp;v[2];\n  println!(\"{}\", *third);\n}\n</code></pre>\n\n<ol start=\"2\">\n<li>Why does the code code above produce exactly the same output as the one above it, as if the <code>*</code> made no difference?</li>\n</ol>\n\n<p>Finally, let us rewrite the above code snippets eliminating references completely:</p>\n\n<pre><code>fn main() {\n  let v = vec![1, 2, 3, 4, 5];\n  let third: i32 = v[2];\n  println!(\"{}\", third);\n}\n</code></pre>\n\n<ol start=\"3\">\n<li>Why does this last version produce the same output as the previous two? And what type does <code>v[2]</code> really have: is it an <code>&amp;i32</code> or an <code>i32</code>?</li>\n</ol>\n\n<p>Are all of the above a manifestation of the automatic dereferencing that is only once alluded to in a previous chapter? (If so, then the book should be rewritten, because it is more confusing than clarifying.)</p>\n"}, {"tags": ["rust", "thread-safety", "closures", "channel", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 573, "user_id": 9946772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19b5785ce8af233b264c6f7fb66977e5?s=128&d=identicon&r=PG&f=1", "display_name": "kangalioo", "link": "https://stackoverflow.com/users/9946772/kangalioo"}, "is_accepted": true, "score": 1, "last_activity_date": 1544351629, "last_edit_date": 1544351629, "creation_date": 1544351037, "answer_id": 53691335, "question_id": 53685763, "link": "https://stackoverflow.com/questions/53685763/conflicting-lifetime-requirements-when-forwarding-slices-from-a-static-callback/53691335#53691335", "title": "Conflicting lifetime requirements when forwarding slices from a static callback into a channel", "body": "<p>It clicked inside my brain.</p>\n\n<p>Additionally, to the <code>move</code> keyword, the following is required:</p>\n\n<p><code>connect</code> provides a reference to an array which lives for the scope of the callback. That means that when the callback finishes, the <code>&amp;[u8]</code> is inaccessible. I tried sending the reference outside of the callback which made no sense because then it would have to live longer.</p>\n\n<p>The solution is to create an owned object from the slice, like a <code>Vec</code>. That's trivially done by adding <code>.to_vec()</code>:</p>\n\n<pre><code>connect(move |data| tx.send(data.to_vec()).unwrap());\n</code></pre>\n\n<p>The <code>Vec</code> can be passed around freely without any lifetime conflictions. :)</p>\n"}], "owner": {"reputation": 573, "user_id": 9946772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19b5785ce8af233b264c6f7fb66977e5?s=128&d=identicon&r=PG&f=1", "display_name": "kangalioo", "link": "https://stackoverflow.com/users/9946772/kangalioo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 53691335, "answer_count": 1, "score": 1, "last_activity_date": 1544351629, "creation_date": 1544294718, "last_edit_date": 1544348460, "question_id": 53685763, "link": "https://stackoverflow.com/questions/53685763/conflicting-lifetime-requirements-when-forwarding-slices-from-a-static-callback", "title": "Conflicting lifetime requirements when forwarding slices from a static callback into a channel", "body": "<p>I am using a Rust <a href=\"https://github.com/Boddlnagg/midir\" rel=\"nofollow noreferrer\">Midi library</a> to receive and handle real-time Midi messages. It exposes a <code>connect</code> function that accepts a callback which will be called for every Midi message that arrives. My plan was to forward these Midi messages to a channel. This is the minimal version of the code that still reproduces my issue (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=35348fd2380da9d7dc9d82144045a4be\" rel=\"nofollow noreferrer\">Rust Playground link</a>):</p>\n\n<pre><code>use std::sync::mpsc;\n\nfn main() {\n    let (tx, rx) = mpsc::sync_channel(0);\n\n    // The callback forwards all data it gets to the channel\n    connect(|data| tx.send(data).unwrap());\n\n    // `rx` will be given to some other part of the program here\n}\n\n// This is basically the function signature of my Midi library's `connect` function\n// I *don't have control over it*, as it's part of that external library\nfn connect&lt;F&gt;(callback: F)\n        where F: FnMut(&amp;[u8]) + Send + 'static {}\n</code></pre>\n\n<p>After researching this issue for a while, I thought the solution was to add the <code>move</code> keyword to the callback. This made sense to me, as the callback may live longer than the main function so <code>tx</code> may have been dropped when the callback still needs it. <code>move</code> forces the callback to capture its environment by value which should lead to <code>tx</code> living exactly as long as the callback. <br/>Yet <code>move</code> changes nothing at all; the error message stays the same.</p>\n\n<p>I noticed that when I change the parameter of the callback from <code>&amp;[u8]</code> to just <code>u8</code>, <code>move</code> actually does the trick. I have no idea why this could be.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/26477757/how-do-you-send-slices-of-a-vec-to-a-task-in-rust\">Another question I've found</a> explains how to send mutable slices over channels, but I have immutable slices, so I assume there is an easier solution than the one that has been explained there.</p>\n\n<p>To close this off: I know that it's possible to restructure the code to avoid channels. However, I'm still interested in the solution so I can solve future issues with channels and callbacks on my own.</p>\n"}, {"tags": ["rust", "language-design"], "comments": [{"owner": {"reputation": 768, "user_id": 6654157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1333ba4134ba203d904153c079f6e45e?s=128&d=identicon&r=PG&f=1", "display_name": "O.O.", "link": "https://stackoverflow.com/users/6654157/o-o"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544286670, "post_id": 53684540, "comment_id": 94225735, "body": "@Shepmaster and the differences then are due to collisions/confusions with new rust-features I assume?"}, {"owner": {"reputation": 768, "user_id": 6654157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1333ba4134ba203d904153c079f6e45e?s=128&d=identicon&r=PG&f=1", "display_name": "O.O.", "link": "https://stackoverflow.com/users/6654157/o-o"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544287215, "post_id": 53684540, "comment_id": 94225891, "body": "I&#39;m not asking for opinions about which is better - rather I&#39;m curious about the history and why choices have been made like they have etc. Might be the answer there is just not very interesting as Shepmaster points out."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544289511, "post_id": 53684540, "comment_id": 94226549, "body": "@Shepmaster Fair point. I kind skimmed the last paragraph, not realizing that there is this additional question."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1544289515, "post_id": 53684540, "comment_id": 94226551, "body": "@O.O could you just remove that last question? It&#39;s pretty broad anyway."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1544289588, "post_id": 53684540, "comment_id": 94226581, "body": "I feel that open-ended &quot;why&quot;s are almost always bad questions because they can lead down a rabbit hole: there&#39;s always another &quot;why&quot;. Why did Rust use <code>&amp;&amp;</code> and <code>||</code>? Because of C. Well, <i>why</i> did Rust follow C? I guess, because someone thought it was more important to be slightly more familiar to C programmers than to be slightly more English-like. And <i>why</i> is it more important? And <i>why</i> did C use symbols instead of English-like words, anyway? Etc. As a potential answerer, I&#39;m disinclined to answer because I don&#39;t know what answer (if any) will satisfy the asker."}, {"owner": {"reputation": 768, "user_id": 6654157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1333ba4134ba203d904153c079f6e45e?s=128&d=identicon&r=PG&f=1", "display_name": "O.O.", "link": "https://stackoverflow.com/users/6654157/o-o"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1544290969, "post_id": 53684540, "comment_id": 94227013, "body": "@LukasKalbertodt Yes, I&#39;ll remove the last question; thanks. Wanted to try and preempt what trentcl is talking about a bit with a potential answer - but agree that it is beside the point. Excellent answer btw, thanks alot."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1544296848, "post_id": 53684540, "comment_id": 94228682, "body": "I don&#39;t accuse you of this, but some people also use &quot;why&quot; questions to passively criticize, like &quot;why does Rust not have X&quot; while implying &quot;Rust <i>ought</i> to have X&quot; and rejecting any answer as insufficient. This often goes hand in hand with &quot;Rust should add <i>my</i> favorite feature&quot;. So that&#39;s another reason I avoid questions like this. (I did not downvote BTW)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1544301648, "post_id": 53684540, "comment_id": 94229968, "body": "@LukasKalbertodt &quot;Gosh people, stop downvoting.&quot;, first this is not needed you can&#39;t ask to other people to stop downvoting, there do what they want. &quot;OP here in that this question can be perfectly answered&quot;, yes, every primary oriented question can be answer, the problem is that there is no correct answer."}, {"owner": {"reputation": 768, "user_id": 6654157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1333ba4134ba203d904153c079f6e45e?s=128&d=identicon&r=PG&f=1", "display_name": "O.O.", "link": "https://stackoverflow.com/users/6654157/o-o"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1544302917, "post_id": 53684540, "comment_id": 94230294, "body": "@Stargateur Of course people will do what they will; but there is surely reason to ask for constructive comments. How is an explanation to the historic context of the decision and a link to discussion of the feature in rfcs not a correct answer to the question? (How could the question be made more clear to this end - it is what I was after)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1544303696, "post_id": 53684540, "comment_id": 94230463, "body": "@O.O. The problem, whatever how you turn it, your question is asking for opinion. Look lucas answer the first part he talk in the name of &quot;Graydon Hoare&quot;, &quot;His goal&quot;, &quot;Rust was basically a C++ replacement for Hoare.&quot;, &quot;So using the same logical operators as C++ seemed just natural.&quot;, &quot;But we are generally opposed to contextual keywords unless absolutely necessary&quot;, I don&#39;t see what differs <code>and</code> from <code>as</code>, for exemple, &quot;So the only option was to add alternative operators, but not replace those ones.&quot;, &quot;That didn&#39;t seem worth it.&quot;, all of this is opinion"}, {"owner": {"reputation": 768, "user_id": 6654157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1333ba4134ba203d904153c079f6e45e?s=128&d=identicon&r=PG&f=1", "display_name": "O.O.", "link": "https://stackoverflow.com/users/6654157/o-o"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1544304953, "post_id": 53684540, "comment_id": 94230768, "body": "@Stargateur Welp, this is turning philosophical - please anyone feel free to edit the question to fit the given answer however you like; it is what I was after. To the point of opinions - it is not an opinion that they were part of the language since early on, or that the rfc to add them was closed. (A why in the more efficient rather than final sense I suppose)."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544371800, "post_id": 53684965, "comment_id": 94243708, "body": "This answer can be improved. Specifically: <i>His goal for Rust</i> - [citation needed]; <i>basically a C++ replacement for Hoare</i> - [citation needed]; <i>seemed just natural</i> - [opinion]. The second half of the answer is backed up by facts and seems good."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 3, "creation_date": 1544429941, "post_id": 53684965, "comment_id": 94258241, "body": "Additionally regarding the difference in <code>for</code> loop syntax with C++, note that <a href=\"https://github.com/rust-lang/rust/blob/d6b7c96c3eb29b9244ece0c046d3f372ff432d04/src/test/run-pass/foreach-simple.rs\" rel=\"nofollow noreferrer\">rust already had a <code>for \u2026 in \u2026</code> syntax in 2010</a> whereas the <code>for (\u2026 : \u2026)</code> syntax <a href=\"https://en.cppreference.com/w/cpp/language/range-for\" rel=\"nofollow noreferrer\">was only added in C++11</a>."}, {"owner": {"reputation": 1809, "user_id": 7339171, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e618ef1f932f57ce1008799082f8db29?s=128&d=identicon&r=PG&f=1", "display_name": "CoffeeTableEspresso", "link": "https://stackoverflow.com/users/7339171/coffeetableespresso"}, "edited": false, "score": 0, "creation_date": 1551663148, "post_id": 53684965, "comment_id": 96710055, "body": "Not sure why this was closed, this answer seems to be backed up by facts"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 6, "last_activity_date": 1544289325, "creation_date": 1544289325, "answer_id": 53684965, "question_id": 53684540, "link": "https://stackoverflow.com/questions/53684540/what-is-the-reason-that-the-designers-of-rust-chose-the-symbols-instead/53684965#53684965", "title": "What is the reason that the designers of Rust chose the symbols !/&amp;&amp;/|| instead of the words not/and/or?", "body": "<p>Back in 2006, Graydon Hoare started working on Rust as a small project. Hoare also worked on the Servo browser engine. His goal for Rust was that it might help with the development said browser engine. Since the engine (like almost all other browser engines) was written in C++ at that time, Rust was basically a C++ replacement for Hoare.</p>\n\n<p>So <strong>using the same logical operators as C++ seemed just natural.</strong></p>\n\n<p>When the GitHub repository was created in 2010, <code>&amp;&amp;</code> and <code>||</code> were already in the Rust language. See <a href=\"https://github.com/rust-lang/rust/blob/d6b7c96c3eb29b9244ece0c046d3f372ff432d04/src/test/run-pass/lazy-and-or.rs\" rel=\"noreferrer\">the <code>lazy-and-or.rs</code> test during the second commit in the repository</a>:</p>\n\n<pre><code>if (true &amp;&amp; x) { ... }\n</code></pre>\n\n<hr>\n\n<p>Over time, the language design process got a lot more democratic and a lot more ideas appeared. But it wasn't until 2016 that <a href=\"https://github.com/rust-lang/rfcs/issues/1749\" rel=\"noreferrer\"><strong>someone officially proposed adding <code>not</code>, <code>and</code> and <code>or</code> as an RFC</strong></a>.</p>\n\n<p>But as you can see the RFC was closed. The contributor withoutboats explained it like this:</p>\n\n<blockquote>\n  <p>If I were designing a language from the beginning, I would probably prefer <code>and</code> and <code>or</code>. But we are generally opposed to contextual keywords unless absolutely necessary, contextual keywords in expression contexts are particularly difficult to introduce, and we tend to avoid syntactic sugar of the \"pick your poison\" variety.</p>\n</blockquote>\n\n<p>It is important that at that point <code>!</code>, <code>&amp;&amp;</code> and <code>||</code> were already been stabilized for more than a year. So the only option was to add alternative operators, but not replace those ones. That didn't seem worth it.</p>\n\n<hr>\n\n<p><sup>Disclaimer: I only joined the Rust community in 2014. There might have been larger discussions about this in IRC or other media I can't search. But this is all I could find.</sup></p>\n"}], "owner": {"reputation": 768, "user_id": 6654157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1333ba4134ba203d904153c079f6e45e?s=128&d=identicon&r=PG&f=1", "display_name": "O.O.", "link": "https://stackoverflow.com/users/6654157/o-o"}, "delete_vote_count": 1, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 1, "closed_date": 1544346501, "accepted_answer_id": 53684965, "answer_count": 1, "score": -1, "last_activity_date": 1544362216, "creation_date": 1544286505, "last_edit_date": 1544362216, "question_id": 53684540, "link": "https://stackoverflow.com/questions/53684540/what-is-the-reason-that-the-designers-of-rust-chose-the-symbols-instead", "closed_reason": "Opinion-based", "title": "What is the reason that the designers of Rust chose the symbols !/&amp;&amp;/|| instead of the words not/and/or?", "body": "<p>What was the rationale used for choosing the operators <code>!</code>/<code>&amp;&amp;</code>/<code>||</code> over <code>not</code>/<code>and</code>/<code>or</code>? Is there some history behind it, or was it just a preference thing?</p>\n\n<p>Some ideas I've had:</p>\n\n<ul>\n<li><p><strong>Rust followed C / C++</strong>. However, in the case of for-each loops, the more English-like version of <code>for x in X</code> is used instead of C++'s <code>for (x: X)</code>, so Rust didn't just blindly follow C / C++ in everything.</p></li>\n<li><p><strong>The symbols are shorter</strong>. The number of characters seems similar between the two. </p></li>\n<li><p><strong>The syntax had to be different due to a collision with type-specifications</strong>. There is also difference of <code>a as u8</code> instead of <code>(u8)a</code>.</p></li>\n</ul>\n\n<p>Since Rust is a new language, I would think that they could choose either symbols or words without issue. What is the reason Rust chose symbols over words? Why did it not choose both?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1544281522, "creation_date": 1544281522, "answer_id": 53683788, "question_id": 53683767, "link": "https://stackoverflow.com/questions/53683767/built-in-way-to-cast-a-string-that-is-a-a-binary-number-to-an-actual-number-in-r/53683788#53683788", "title": "Built-in way to cast a string that is a a binary number to an actual number in Rust?", "body": "<p>You are looking for <a href=\"https://doc.rust-lang.org/stable/std/primitive.u32.html#method.from_str_radix\" rel=\"noreferrer\"><code>from_str_radix</code></a>, available to all \ncore integer types.</p>\n\n<pre><code>let n = \"1010\";\nlet m = u32::from_str_radix(n, 2)?;\nassert_eq!(m, 10);\n</code></pre>\n"}], "owner": {"reputation": 351, "user_id": 8666695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/16724471de747f3d50d46cde0c47471a?s=128&d=identicon&r=PG&f=1", "display_name": "Emilien", "link": "https://stackoverflow.com/users/8666695/emilien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40, "favorite_count": 0, "accepted_answer_id": 53683788, "answer_count": 1, "score": 2, "last_activity_date": 1544281522, "creation_date": 1544281356, "question_id": 53683767, "link": "https://stackoverflow.com/questions/53683767/built-in-way-to-cast-a-string-that-is-a-a-binary-number-to-an-actual-number-in-r", "title": "Built-in way to cast a string that is a a binary number to an actual number in Rust?", "body": "<p>For instance:</p>\n\n<pre><code>let n = \"1010\";\n\nlet m: u32 = ?\n</code></pre>\n\n<p>It can be done by adding each digit multiplied by the right power of two but is there another, simpler, built-in way ?</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "answers": [{"tags": [], "owner": {"reputation": 6515, "user_id": 272924, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/WYhVU.jpg?s=128&g=1", "display_name": "dark_ruby", "link": "https://stackoverflow.com/users/272924/dark-ruby"}, "is_accepted": true, "score": 0, "last_activity_date": 1544293702, "creation_date": 1544293702, "answer_id": 53685611, "question_id": 53682219, "link": "https://stackoverflow.com/questions/53682219/fromwasmabi-is-not-implemented-for-fnsomestruct-while-somestruct-is-wasm-b/53685611#53685611", "title": "FromWasmAbi is not implemented for fn(SomeStruct) , while SomeStruct is #[wasm_bindgen]", "body": "<p>Going to answer my own question after a bit of research:</p>\n\n<p>Because I was trying to pass some functions from JS to Rust, those can not be guaranteed to have certain signature. </p>\n\n<p>Instead <code>js-sys</code> crate provides a way to <a href=\"https://rustwasm.github.io/wasm-bindgen/reference/receiving-js-closures-in-rust.html#receiving-javascript-closures-in-exported-rust-functions\" rel=\"nofollow noreferrer\">Receiving JavaScript Closures in Exported Rust Functions</a></p>\n\n<p>I changed my code to following:</p>\n\n<pre><code>#[wasm_bindgen]\npub struct Game {\n  board: Board,\n  on_cpu_move: js_sys::Function,\n  on_game_over: js_sys::Function,\n}\n</code></pre>\n\n<p>and <code>new</code> signature looks like this:</p>\n\n<pre><code>  pub fn new(on_move: js_sys::Function, on_game_over: js_sys::Function) -&gt; Game {\n</code></pre>\n\n<p>Then I need to call a callback that a <code>JS</code> consumer is going to provide, this is done like so:</p>\n\n<pre><code>...\nlet state = self.board.state();\nlet this = JsValue::NULL;\n\nif state.game_over {\n   let _ = self.on_game_over.call0(&amp;this);\n} else {\n   let board = JsValue::from(self.board);\n   let _ = self.on_cpu_move.call1(&amp;this, &amp;board);\n}\n...\n</code></pre>\n\n<p>It is up to <code>JS</code> consumer to make sure they provide right types.</p>\n\n<p>hope somebody finds it useful.</p>\n"}], "owner": {"reputation": 6515, "user_id": 272924, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/WYhVU.jpg?s=128&g=1", "display_name": "dark_ruby", "link": "https://stackoverflow.com/users/272924/dark-ruby"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 270, "favorite_count": 0, "accepted_answer_id": 53685611, "answer_count": 1, "score": 0, "last_activity_date": 1544293702, "creation_date": 1544269744, "last_edit_date": 1544287309, "question_id": 53682219, "link": "https://stackoverflow.com/questions/53682219/fromwasmabi-is-not-implemented-for-fnsomestruct-while-somestruct-is-wasm-b", "title": "FromWasmAbi is not implemented for fn(SomeStruct) , while SomeStruct is #[wasm_bindgen]", "body": "<p>I have a 3 structs and two types defined</p>\n\n<pre><code>type OnMoveEvent = fn(Board) -&gt; ();\ntype OnGameOverEvent = fn(Player) -&gt; ();\n\n#[wasm_bindgen]\npub struct Game {\n    on_move: OnMoveEvent,\n    on_game_over: OnGameOverEvent,\n    board: Board,\n}\n#[wasm_bindgen]\npub struct Board {/* ... */}\n#[wasm_bindgen]\npub struct Player {/* ... */}\n</code></pre>\n\n<p>All 3 structs are <code>wasm_bindgen</code> and types can not be marked as <code>wasm_bindgen</code>. However types are just functions accepting structs and returning <code>void</code></p>\n\n<p>When I add <code>wasm_bindgen</code> to <code>Game</code> <code>impl</code> I get the following error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> --&gt; src/game.rs:16:1\n     |\n  16 | #[wasm_bindgen]\n     | ^^^^^^^^^^^^^^^ the trait `wasm_bindgen::convert::traits::FromWasmAbi` is not implemented for `fn(board::Board)`\n</code></pre>\n\n<p>That is because <code>new</code> has the following signature</p>\n\n<pre><code>pub fn new(on_move: OnMoveEvent, on_game_over: OnGameOverEvent) -&gt; Game\n</code></pre>\n\n<p>It seemed to me that it should be simple to translate types as they are functions accepting <code>wasm_bindgen</code> structs, but it appears as it's not the case</p>\n\n<p>Is this a bug or am I missing something?</p>\n\n<p>The full code <a href=\"https://github.com/venil7/rust-minimax/blob/master/src/game.rs\" rel=\"nofollow noreferrer\">is here</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "edited": false, "score": 1, "creation_date": 1544260842, "post_id": 53681099, "comment_id": 94219459, "body": "Your code compiles on 1.31.0 - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=f32696019328725e145e21d59775c4d6\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 18583, "user_id": 501171, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/afc19876a76fb3a9d507352d6d3e4cce?s=128&d=identicon&r=PG", "display_name": "Christian Fazzini", "link": "https://stackoverflow.com/users/501171/christian-fazzini"}, "reply_to_user": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "edited": false, "score": 0, "creation_date": 1544261086, "post_id": 53681099, "comment_id": 94219505, "body": "That is strange. I am using 1.31.0 and I still see the error"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "reply_to_user": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "edited": false, "score": 1, "creation_date": 1544261158, "post_id": 53681099, "comment_id": 94219519, "body": "@\u0110or\u0111eZelji\u0107: Only with 2018 edition enabled."}, {"owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "edited": false, "score": 1, "creation_date": 1544268698, "post_id": 53681099, "comment_id": 94221161, "body": "@ChristianFazzini yes, thank you. btw NLL is great."}], "answers": [{"tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 3, "last_activity_date": 1544261038, "creation_date": 1544261038, "answer_id": 53681168, "question_id": 53681099, "link": "https://stackoverflow.com/questions/53681099/why-is-add-cart-complaining-with-an-error/53681168#53681168", "title": "Why is add_cart complaining with an error?", "body": "<p>When I compile your code, the full error message is this:</p>\n\n<pre><code>   |\n70 |     merchant.add_cart(&amp;cart);\n   |                        ^^^^ borrowed value does not live long enough\n71 | }\n   | - `cart` dropped here while still borrowed\n   |\n   = note: values in a scope are dropped in the opposite order they are created\n</code></pre>\n\n<p>That last line is telling you your problem. You declared <code>apple</code>, <code>orange</code> and <code>guava</code> before <code>merchant</code>, so they outlive <code>merchant</code>, and so it is okay to store references to them. However, you declare <code>cart</code> after <code>merchant</code>, so <code>merchant</code> outlives it, thus you are not able to store a reference to it.</p>\n\n<p>Note that your code will compile in Rust 2018 edition, because of non-lexical-lifetimes, explained <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">here</a>.</p>\n"}], "owner": {"reputation": 18583, "user_id": 501171, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/afc19876a76fb3a9d507352d6d3e4cce?s=128&d=identicon&r=PG", "display_name": "Christian Fazzini", "link": "https://stackoverflow.com/users/501171/christian-fazzini"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 53681168, "answer_count": 1, "score": 0, "last_activity_date": 1544261038, "creation_date": 1544260319, "question_id": 53681099, "link": "https://stackoverflow.com/questions/53681099/why-is-add-cart-complaining-with-an-error", "title": "Why is add_cart complaining with an error?", "body": "<p>Trying to understand why <code>merchant.add_cart()</code> is complaining and <code>merchant.add_product()</code> is fine. Both <code>Cart</code> and <code>Product</code> contain more or less the same structure</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug, Clone)]\nstruct Merchant&lt;'a&gt; {\n    id: u64,\n    name: String,\n    products: HashMap&lt;u64, &amp;'a Product&gt;,\n    carts: HashMap&lt;u64, &amp;'a Cart&gt;,\n}\n\nimpl&lt;'a&gt; Merchant&lt;'a&gt; {\n    pub fn new(id: u64, name: String) -&gt; Merchant&lt;'a&gt; {\n        Merchant {\n            id,\n            name,\n            products: HashMap::new(),\n            carts: HashMap::new(),\n        }\n    }\n\n    pub fn add_product(&amp;mut self, product: &amp;'a Product) {\n        self.products.insert(product.id, product);\n    }\n\n    pub fn add_cart(&amp;mut self, cart: &amp;'a Cart) {\n        self.carts.insert(cart.id, cart);\n    }\n}\n\n#[derive(Debug, Clone)]\nstruct Product {\n    id: u64,\n    name: String,\n    amount_in_cents: u64,\n}\n\nimpl Product {\n    pub fn new(id: u64, name: String, amount_in_cents: u64) -&gt; Product {\n        Product {\n            id,\n            name,\n            amount_in_cents,\n        }\n    }\n}\n\n#[derive(Debug, Clone)]\nstruct Cart {\n    id: u64,\n}\n\nimpl Cart {\n    pub fn new(id: u64) -&gt; Cart {\n        Cart { id }\n    }\n}\n\nfn main() {\n    let apple = Product::new(1, String::from(\"Apple\"), 10000);\n    let orange = Product::new(2, String::from(\"Orange\"), 20000);\n    let guava = Product::new(3, String::from(\"Guava\"), 30000);\n\n    let mut merchant = Merchant::new(1, String::from(\"Oak Market\"));\n\n    merchant.add_product(&amp;apple);\n    merchant.add_product(&amp;orange);\n    merchant.add_product(&amp;guava);\n\n    let cart = Cart::new(1);\n    merchant.add_cart(&amp;cart);\n}\n</code></pre>\n\n<p><code>merchant.add_cart(&amp;cart);</code> is complaining with</p>\n\n<pre><code>cart does not live long enough: borrowed value does not live long enough\n</code></pre>\n\n<p>Using <code>rustc 1.31.0</code></p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1544259147, "post_id": 53680955, "comment_id": 94219140, "body": "What do you want to have at the end? Owned or borrowed strings?"}, {"owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1544259263, "post_id": 53680955, "comment_id": 94219159, "body": "the next step is parsing them into integers using <code>.map</code> so it doesn&#39;t matter I guess"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1544259641, "post_id": 53680955, "comment_id": 94219224, "body": "I advice you to fully understand the borrowing rules of Rust before doing something complicated, otherwise you will not be able to do anything."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 5, "last_activity_date": 1544287105, "last_edit_date": 1544287105, "creation_date": 1544259570, "answer_id": 53681025, "question_id": 53680955, "link": "https://stackoverflow.com/questions/53680955/how-to-flat-map-and-split-from-an-iterator-of-strings/53681025#53681025", "title": "How to flat_map and split from an iterator of Strings", "body": "<p>The issue with your code is that you are doing those actions:</p>\n\n<ol>\n<li>You are consuming your vector with <code>into_iter</code></li>\n<li>Thus, inside the closure, you are taking a <code>String</code> by value that you borrow with <code>split</code></li>\n<li>In your temporary iterator, you hold a reference to this string</li>\n</ol>\n\n<p>Conclusion: you are trying to return a reference to a local variable.</p>\n\n<p>To solve this issue, you must create owned strings from the split string, and collect them to not hold a reference anymore:</p>\n\n<pre><code>fn main() {\n    let strings = vec![\"1 2\".to_string(), \"3 4\".into()];\n    let result = strings.into_iter().flat_map(|str| str.split(\" \").map(str::to_owned).collect::&lt;Vec&lt;_&gt;&gt;());\n\n    println!(\"{:?}\", result.collect::&lt;Vec&lt;_&gt;&gt;());\n}\n</code></pre>\n\n<p>In fact, this would be less costly to not consume the vector at first:</p>\n\n<pre><code>fn main() {\n    let strings = vec![\"1 2\".to_string(), \"3 4\".into()];\n    let result = strings.iter().flat_map(|str| str.split(\" \")).map(str::to_owned);\n\n    println!(\"{:?}\", result.collect::&lt;Vec&lt;_&gt;&gt;());\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3885, "user_id": 652528, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a580420b66f89e76e1fb9a368f785b3f?s=128&d=identicon&r=PG", "display_name": "geckos", "link": "https://stackoverflow.com/users/652528/geckos"}, "is_accepted": false, "score": 0, "last_activity_date": 1597372310, "creation_date": 1597372310, "answer_id": 63405700, "question_id": 53680955, "link": "https://stackoverflow.com/questions/53680955/how-to-flat-map-and-split-from-an-iterator-of-strings/63405700#63405700", "title": "How to flat_map and split from an iterator of Strings", "body": "<p>I had the same problem and end up creating an iterator that take the ownership of the string, here is the code. Since you're splitting by space it should fit</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct Words {\n    buf: String,\n    offset: usize,\n}\n\nimpl Words {\n    fn new(buf: String) -&gt; Words {\n        Words { buf, offset: 0 }\n    }\n}\n\nimpl Iterator for Words {\n    type Item = String;\n\n    fn next(&amp;mut self) -&gt; Option&lt;String&gt; {\n        let s = &amp;(self.buf)[self.offset..];\n        let left = s.chars().take_while(|x| x.is_whitespace()).count();\n        let right = left + s[left..].chars().take_while(|x| !x.is_whitespace()).count();\n        if left &lt; right {\n            self.offset += right;\n            return Some(String::from(&amp;s[left..right]));\n        }\n\n        None\n    }\n}\n</code></pre>\n<p>Here how I use it</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn read_file&lt;'a&gt;(buf: impl BufRead) -&gt; impl Iterator&lt;Item = String&gt; {\n    buf.lines().filter_map(Result::ok).flat_map(Words::new)\n}\n</code></pre>\n"}], "owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1454, "favorite_count": 1, "accepted_answer_id": 53681025, "answer_count": 2, "score": 3, "last_activity_date": 1597372310, "creation_date": 1544258850, "last_edit_date": 1544287189, "question_id": 53680955, "link": "https://stackoverflow.com/questions/53680955/how-to-flat-map-and-split-from-an-iterator-of-strings", "title": "How to flat_map and split from an iterator of Strings", "body": "<p>Is there a way to make this work without switching to using <code>iter</code> instead of <code>into_iter</code>?</p>\n\n<pre><code>let strings: Vec&lt;String&gt; = vec![\"1 2\".to_string(), \"3 4\".to_string()];\nstrings.into_iter().flat_map(|str| str.split(\" \"));\n</code></pre>\n\n<p>The problem is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing function parameter `str`\n --&gt; src/lib.rs:3:40\n  |\n3 |     strings.into_iter().flat_map(|str| str.split(\" \"));\n  |                                        ---^^^^^^^^^^^\n  |                                        |\n  |                                        returns a value referencing data owned by the current function\n  |                                        `str` is borrowed here\n</code></pre>\n\n<p>When using <code>iter</code> instead of <code>into_iter</code>, I get an iterator of references and everything works but I'd like to know if it's possible to make this work on an iterator of <code>String</code>s.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 7, "last_activity_date": 1544256351, "creation_date": 1544256351, "answer_id": 53680702, "question_id": 53680429, "link": "https://stackoverflow.com/questions/53680429/extracting-type-t-from-optiont/53680702#53680702", "title": "Extracting type T from Option&lt;T&gt;", "body": "<p>You can define a trait that exposes the <code>T</code> as an associated type.</p>\n\n<pre><code>trait OptionExt {\n    type Type;\n}\n\nimpl&lt;T&gt; OptionExt for Option&lt;T&gt; {\n    type Type = T;\n}\n\ntype MyOption = Option&lt;fn()&gt;;\n\nfn foo(f: &lt;MyOption as OptionExt&gt;::Type) {\n    f();\n}\n\nfn main() {\n    foo(|| {});\n}\n</code></pre>\n"}], "owner": {"reputation": 309, "user_id": 3562369, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/C3H1J.png?s=128&g=1", "display_name": "RKS", "link": "https://stackoverflow.com/users/3562369/rks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 53680702, "answer_count": 1, "score": 7, "last_activity_date": 1544256692, "creation_date": 1544253631, "last_edit_date": 1544256692, "question_id": 53680429, "link": "https://stackoverflow.com/questions/53680429/extracting-type-t-from-optiont", "title": "Extracting type T from Option&lt;T&gt;", "body": "<p>I have some code generated by bindgen that has function pointers represented by <code>Option&lt;T&gt;</code>.</p>\n\n<pre><code>pub type SomeFnPointerType = ::std::option::Option&lt;\n  unsafe extern \"C\" fn ( /* .. large number of argument types .. */) \n    -&gt; /* return type */\n&gt; ;\n</code></pre>\n\n<p>I want to store the unwrapped values in a structure. However, there are no type aliases for the inner function pointer types, so how can I define that structure? I cannot refactor the code because it's automatically generated.</p>\n\n<p>I want to do something like this (in C++'ish pseudo code):</p>\n\n<pre><code>struct FunctionTable {\n  decltype((None as SomeFnPointerType).unwrap()) unwrappedFn;\n  /* ... */\n};\n</code></pre>\n\n<p>or maybe just <code>SomeFnPointerType::T</code> if that is allowed.</p>\n\n<p>Is it possible to achieve that in Rust? If not, the only way I see it is to manually define those types by copy-pasting code from the generated file into a separate handwritten file and keep the types in sync manually.</p>\n"}, {"tags": ["c", "rust", "ffi"], "comments": [{"owner": {"reputation": 1007, "user_id": 2826535, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e8ad4f5da7e39c0839d9eb6012bf6fc?s=128&d=identicon&r=PG&f=1", "display_name": "Julo", "link": "https://stackoverflow.com/users/2826535/julo"}, "edited": false, "score": 0, "creation_date": 1544246727, "post_id": 53679723, "comment_id": 94217174, "body": "I would say, it is not a good idea to use a local (on stack allocated) variable or locally (in function) allocated heap value as return value. In the first case, the value will be destroyed after leaving the function, in second case you will have memory leaks. Unfortunately I do not understand Rust and I&#39;m not sure what is the real behaviour of the code. But I can tell <i>(when it is similar to MFC/C++)</i>, that by destroying the <code>a</code>, you will also destroy it&#39;s value, which is stored in <code>p</code>."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1544246918, "post_id": 53679723, "comment_id": 94217198, "body": "You should use <a href=\"https://doc.rust-lang.org/stable/std/ffi/struct.CString.html#method.into_raw\" rel=\"nofollow noreferrer\"><code>CString::into_raw</code></a> instead of <code>as_ptr</code> + <code>mem::forget</code>. Both methods are roughly equivalent, but <code>into_raw</code> is more idiomatic."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1544253693, "post_id": 53679836, "comment_id": 94218238, "body": "<code>The compiler therefore infers that the return type is int .. The same reasoning applies to the function&#39;s parameters: they are implicitly defined as int</code> This is not true since C99, compile in pedantic C99/C11/C(C17) will result in a error. <a href=\"https://rextester.com/DVEH7616\" rel=\"nofollow noreferrer\">rextester.com/DVEH7616</a>, <a href=\"https://stackoverflow.com/a/437763/7076153\">stackoverflow.com/a/437763/7076153</a>. However, many compiler don&#39;t follow this rule by default to be retro compatible, this is stupid, but they do what they want."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1544254196, "post_id": 53679836, "comment_id": 94218315, "body": "Also <code>const char *plugin_get_config_string(void *config, const char *k);</code> <code>config</code> should also be mark as <code>const</code> and <code>extern fn plugin_get_config_string(config: *const toml::Value, k: *const c_char) -&gt; *const c_char</code> is incorrect <code>config</code> should be of type <code>*const c_void</code> and the Rust side should cast it."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1544255863, "last_edit_date": 1544255863, "creation_date": 1544247230, "answer_id": 53679836, "question_id": 53679723, "link": "https://stackoverflow.com/questions/53679723/why-is-a-cstring-pointer-value-changed-when-printed-from-c/53679836#53679836", "title": "Why is a CString pointer value changed when printed from C?", "body": "<p>In your C code, there's no prototype for <code>plugin_get_config_string</code>. The compiler therefore infers that the return type is <code>int</code>. When that <code>int</code> is then assigned to a <code>char *</code> variable, the <code>int</code> is sign-extended because a <code>char *</code> is larger than an <code>int</code> on your target platform.</p>\n\n<p>The same reasoning applies to the function's parameters: they are implicitly defined as <code>int</code>, so your pointers coming from C will be truncated, and the arguments might be in the wrong place because of the size mismatch.</p>\n\n<p>To fix this, you must declare a prototype like this:</p>\n\n<pre><code>const char *plugin_get_config_string(const void *config, const char *k);\n</code></pre>\n"}], "owner": {"reputation": 147, "user_id": 2146347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6c8c7542b95db5a294eb773787602538?s=128&d=identicon&r=PG", "display_name": "egs0", "link": "https://stackoverflow.com/users/2146347/egs0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 53679836, "answer_count": 1, "score": 0, "last_activity_date": 1544287074, "creation_date": 1544245791, "last_edit_date": 1544287074, "question_id": 53679723, "link": "https://stackoverflow.com/questions/53679723/why-is-a-cstring-pointer-value-changed-when-printed-from-c", "title": "Why is a CString pointer value changed when printed from C?", "body": "<p>I'm calling a Rust function from C but the pointer address is changed when returned.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern fn plugin_get_config_string(config: *const toml::Value, k: *const c_char) -&gt; *const c_char {\n    let a = CString::new(\"dwadwad\").unwrap();\n    let p = a.as_ptr();\n    println!(\"{:?}\", p);\n    mem::forget(a);\n    p\n}   \n</code></pre>\n\n<pre class=\"lang-c prettyprint-override\"><code>__declspec(dllexport) void initialize(void *config) {\n    char *dwad = plugin_get_config_string(config, \"host\");\n    printf(\"%p\\n\", dwad);\n}\n</code></pre>\n\n<p>In Rust: <code>0x220d3ceee30</code></p>\n\n<p>In C: <code>FFFFFFFFD3CEEE30</code></p>\n\n<p>The first 3 bytes are always stripped in C.</p>\n\n<p>I'm using Visual Studio 2017 x64 Dev Command Prompt and stable-x86_64-pc-windows-msvc.</p>\n\n<p>Anyone know what the problem might be?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 649, "user_id": 1183564, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/3aXuf.jpg?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/1183564/mark"}, "edited": false, "score": 1, "creation_date": 1579709026, "post_id": 53677463, "comment_id": 105858859, "body": "I encountered the same problem. I&#39;m using VS Code for editing and building and executing from the command line using cargo. I could not get the error to go away in the editor, but I was able to build and run with no problem using cargo. So I exited out of VS Code and restarted it. Fixed the problem, because VS Code is no longer showing the error."}], "answers": [{"comments": [{"owner": {"reputation": 34, "user_id": 10762078, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Wwjq6foApbM/AAAAAAAAAAI/AAAAAAAAADQ/25zs1Reqs_o/photo.jpg?sz=128", "display_name": "Giancarlo DiMino", "link": "https://stackoverflow.com/users/10762078/giancarlo-dimino"}, "reply_to_user": {"reputation": 83, "user_id": 9637076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f7946a218d098e5b619f50eaa22de13?s=128&d=identicon&r=PG&f=1", "display_name": "tbarnes", "link": "https://stackoverflow.com/users/9637076/tbarnes"}, "edited": false, "score": 0, "creation_date": 1544361607, "post_id": 53677875, "comment_id": 94240955, "body": "I just figured out where the problem is. In order for the code to work as shown in the tutorial you must make sure your project is in &quot;2018&quot; mode. In the Cargo.toml file put <code>edition = &quot;2018&quot;</code>  in the package section. Version 1.31.0 does this automatically when you create new projects but I had created my project before updating to 1.31.0 from 1.30.0."}, {"owner": {"reputation": 83, "user_id": 9637076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f7946a218d098e5b619f50eaa22de13?s=128&d=identicon&r=PG&f=1", "display_name": "tbarnes", "link": "https://stackoverflow.com/users/9637076/tbarnes"}, "edited": false, "score": 0, "creation_date": 1544370120, "post_id": 53677875, "comment_id": 94243197, "body": "Yes, I see the same behavior. It also looks like new projects I create are using version &quot;0.1.0&quot; by default, which must have been the cause of my problem. Thanks!"}, {"owner": {"reputation": 34, "user_id": 10762078, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Wwjq6foApbM/AAAAAAAAAAI/AAAAAAAAADQ/25zs1Reqs_o/photo.jpg?sz=128", "display_name": "Giancarlo DiMino", "link": "https://stackoverflow.com/users/10762078/giancarlo-dimino"}, "reply_to_user": {"reputation": 83, "user_id": 9637076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f7946a218d098e5b619f50eaa22de13?s=128&d=identicon&r=PG&f=1", "display_name": "tbarnes", "link": "https://stackoverflow.com/users/9637076/tbarnes"}, "edited": false, "score": 0, "creation_date": 1544399268, "post_id": 53677875, "comment_id": 94251013, "body": "Sure thing. When I was searching for solutions to my problem all I saw was your post with no replies. Once my code started to compile I thought I&#39;d share my experience. Glad I could help."}, {"owner": {"reputation": 34, "user_id": 10762078, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Wwjq6foApbM/AAAAAAAAAAI/AAAAAAAAADQ/25zs1Reqs_o/photo.jpg?sz=128", "display_name": "Giancarlo DiMino", "link": "https://stackoverflow.com/users/10762078/giancarlo-dimino"}, "reply_to_user": {"reputation": 83, "user_id": 9637076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f7946a218d098e5b619f50eaa22de13?s=128&d=identicon&r=PG&f=1", "display_name": "tbarnes", "link": "https://stackoverflow.com/users/9637076/tbarnes"}, "edited": false, "score": 0, "creation_date": 1544399394, "post_id": 53677875, "comment_id": 94251030, "body": "Also, just so you know. The version you see is the default version for all new projects. That will always be the same on new crates and has nothing to do with the version of Rust. To get the version of Rust run this on the command-line: <code>rustc --version</code>."}, {"owner": {"reputation": 1768, "user_id": 1639150, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/949ce7ddc08d1d461c206ec3964259a0?s=128&d=identicon&r=PG", "display_name": "Chuck", "link": "https://stackoverflow.com/users/1639150/chuck"}, "edited": false, "score": 0, "creation_date": 1555827185, "post_id": 53677875, "comment_id": 98231895, "body": "None of the solutions with this answer seem to apply any longer. The other answer from user11090888 to use mod lib; use lib::Config: seems to be correct, consistent with the other documentation and actually works."}], "tags": [], "owner": {"reputation": 34, "user_id": 10762078, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Wwjq6foApbM/AAAAAAAAAAI/AAAAAAAAADQ/25zs1Reqs_o/photo.jpg?sz=128", "display_name": "Giancarlo DiMino", "link": "https://stackoverflow.com/users/10762078/giancarlo-dimino"}, "is_accepted": true, "score": 1, "last_activity_date": 1544286284, "last_edit_date": 1544286284, "creation_date": 1544223861, "answer_id": 53677875, "question_id": 53677463, "link": "https://stackoverflow.com/questions/53677463/rust-book-12-3-unresolved-import-error-e4032/53677875#53677875", "title": "Rust Book 12.3 - unresolved import error [E4032]", "body": "<p>I just ran across the same problem when reviewing The Rust Programming Language. The way I got it to compile was to remove the line <code>use minigrep;</code> from src/main.rs and add <code>extern crate minigrep</code> to the top of the file. The other file can stay as it is. Not sure if this a typo in the book (if it is then it is in multiple versions) or if there is a change to the behavior of the Rust compiler to accommodate the new syntax and we are just using a version that is too old. For comparison my version is 1.31.0.</p>\n"}, {"comments": [{"owner": {"reputation": 1768, "user_id": 1639150, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/949ce7ddc08d1d461c206ec3964259a0?s=128&d=identicon&r=PG", "display_name": "Chuck", "link": "https://stackoverflow.com/users/1639150/chuck"}, "edited": false, "score": 3, "creation_date": 1555827030, "post_id": 54789830, "comment_id": 98231876, "body": "This should now be the best answer! Thanks very much."}, {"owner": {"reputation": 289, "user_id": 3553597, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/o4F20.jpg?s=128&g=1", "display_name": "Diericx", "link": "https://stackoverflow.com/users/3553597/diericx"}, "edited": false, "score": 0, "creation_date": 1592608145, "post_id": 54789830, "comment_id": 110496294, "body": "This is much nicer than the answer above, thank you!"}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user11090888"}, "is_accepted": false, "score": 26, "last_activity_date": 1550677061, "last_edit_date": 1550677061, "creation_date": 1550676498, "answer_id": 54789830, "question_id": 53677463, "link": "https://stackoverflow.com/questions/53677463/rust-book-12-3-unresolved-import-error-e4032/54789830#54789830", "title": "Rust Book 12.3 - unresolved import error [E4032]", "body": "<p>There is a contradiction between the code samples for the exercise in chapter 12.3 and the earlier section in chapter 7: '7.2 -- Modules and use to control scope -- Separating modules into different files'.</p>\n\n<p>Using 7.2's syntax complies:</p>\n\n<pre><code>mod lib; //.. instead of 'use minigrep'\nuse lib::Config; //.. instead of 'use minigrep::Config'\n</code></pre>\n"}], "owner": {"reputation": 83, "user_id": 9637076, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8f7946a218d098e5b619f50eaa22de13?s=128&d=identicon&r=PG&f=1", "display_name": "tbarnes", "link": "https://stackoverflow.com/users/9637076/tbarnes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2883, "favorite_count": 0, "accepted_answer_id": 53677875, "answer_count": 2, "score": 8, "last_activity_date": 1610841206, "creation_date": 1544221004, "last_edit_date": 1544286250, "question_id": 53677463, "link": "https://stackoverflow.com/questions/53677463/rust-book-12-3-unresolved-import-error-e4032", "title": "Rust Book 12.3 - unresolved import error [E4032]", "body": "<p>I am new to Rust and working on the exercise in <a href=\"https://doc.rust-lang.org/book/ch12-03-improving-error-handling-and-modularity.html\" rel=\"noreferrer\">Chapter 12.3 in the book</a>.</p>\n\n<p>I am pretty confident that my code is the same as that in the book (hard to tell for sure because of the 'snips'). However I get an unresolved import error when I try <code>cargo build</code> or <code>cargo run</code> from the project directory, <code>minigrep/</code></p>\n\n<p><code>src/main.rs</code></p>\n\n<pre><code>use std::env;\nuse std::process;\n\nuse minigrep;\nuse minigrep::Config;\n\nfn main() {\n    let args: Vec&lt;String&gt; = env::args().collect();\n\n    let config = Config::new(&amp;args).unwrap_or_else(|err| {\n        println!(\"Problem parsing args: {}\", err);\n        process::exit(1);\n    });\n\n    println!(\"Searching for {}\", config.query);\n    println!(\"In file {}\", config.filename);\n\n    if let Err(e) = minigrep::run(config) {\n         println!(\"Application error: {}\", e);\n\n         process::exit(1);\n    }\n}\n</code></pre>\n\n<p><code>src/lib.rs</code></p>\n\n<pre><code>use std::fs;\nuse std::error::Error;\n\npub struct Config {\n    pub query: String,\n    pub filename: String,\n}\n\nimpl Config {\n    pub fn new(args: &amp;[String]) -&gt; Result &lt;Config, &amp;'static str&gt; {\n        if args.len() &lt; 3 {\n            return Err(\"not enough args\");\n        }\n\n        let query = args[1].clone();\n        let filename = args[2].clone();\n\n        Ok(Config { query, filename })\n    }\n}\n\npub fn run(config: Config) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n\n    let contents = fs::read_to_string(config.filename)?;\n\n    println!(\"With text:\\n {}\", contents);\n\n    Ok(())\n\n}\n</code></pre>\n"}, {"tags": ["multithreading", "rust", "pcap"], "answers": [{"tags": [], "owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "is_accepted": false, "score": 0, "last_activity_date": 1544224545, "creation_date": 1544224545, "answer_id": 53677948, "question_id": 53676102, "link": "https://stackoverflow.com/questions/53676102/communicate-rust-pnet-packets-between-threads-using-channels/53677948#53677948", "title": "Communicate Rust pnet packets between threads using channels", "body": "<p>The <em>package_receiver.next()</em> call is defined as:</p>\n\n<pre><code>pub trait DataLinkReceiver: Send {\n    fn next(&amp;mut self) -&gt; Result&lt;&amp;[u8]&gt;;\n}\n</code></pre>\n\n<p>And the mspc::Sender defines send as:</p>\n\n<pre><code>pub fn send(&amp;self, t: T) -&gt; Result&lt;(), SendError&lt;T&gt;&gt;\n</code></pre>\n\n<p>So package_receiver.next() returns a result containing a reference to a slice of bytes, <em>&amp;[u8]</em>. So when you then call <em>sender.send(packet);</em> that's saying you want to send the reference to the other thread. However, the match scope for package_receiver.next() doesn't promise that the reference lives longer than the end of the scope. So the other thread can't be guaranteed that the reference is still valid at the time it's accessing that data.</p>\n\n<p>The str works because it's a static lifetime string. That memory will always be valid to read no matter what thread reads it.</p>\n\n<p>If you change your call to:</p>\n\n<pre><code>sender.send(Vec::from(packet))\n</code></pre>\n\n<p>This creates a Vec variable, copies the packet slice into the new memory, then passes ownership of that variable to the other thread. This guarantees that the other receiving thread will always have clear access to that data. Because the ownership is clearly passed, the code in the receiving thread is known to the compiler as where the lifetime of received Vec variables ends.</p>\n\n<p>There will also be some miscellaneous errors about using the result of the .send() which could be taken care of with something like this:</p>\n\n<pre><code>if sender.send(Vec::from(packet)).is_err() {\n    println!(\"Send error\");\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 429, "user_id": 5081997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-GmesG-HGk2A/AAAAAAAAAAI/AAAAAAAACLI/lmInTd8OR3A/photo.jpg?sz=128", "display_name": "cotigao", "link": "https://stackoverflow.com/users/5081997/cotigao"}, "is_accepted": false, "score": 1, "last_activity_date": 1544224759, "creation_date": 1544224759, "answer_id": 53677976, "question_id": 53676102, "link": "https://stackoverflow.com/questions/53676102/communicate-rust-pnet-packets-between-threads-using-channels/53677976#53677976", "title": "Communicate Rust pnet packets between threads using channels", "body": "<p><code>packet</code> is <code>&amp;[u8]</code> type, with some lifetime <code>'a</code> that is also same as that of the reference taken to <code>package_receiver</code> in the <code>next()</code> call.  The <code>next()</code> definition with lifetimes will look like this:</p>\n\n<pre><code>fn next(&amp;'a mut self) -&gt; Result&lt;&amp;'a [u8]&gt;\n</code></pre>\n\n<p>You <code>send</code> the <code>&amp;[u8]</code> to a thread. But the thread can outlive the references you send to it, leading to dangling references. As a result the compiler complains that they need to have <code>'static</code> lifetime.<code>\"foo\"</code> works because it is <code>&amp;'static str</code>.</p>\n\n<p>One way would be to take the ownership of the data and then send it as a value to another thread.</p>\n\n<pre><code>Ok(packet) =&gt; {\n   // sender.send(\"foo\"); // this works fine\n   sender.send(packet.to_owned());\n}\n</code></pre>\n\n<p>You can also have a look at using scoped threads with <a href=\"https://docs.rs/crossbeam/0.5.0/crossbeam/thread/index.html\" rel=\"nofollow noreferrer\">crossbeam</a></p>\n"}], "owner": {"reputation": 11, "user_id": 10761393, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b3fe3183996395bbdc946ed12bf099b3?s=128&d=identicon&r=PG&f=1", "display_name": "awersching", "link": "https://stackoverflow.com/users/10761393/awersching"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 380, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1544224759, "creation_date": 1544212695, "last_edit_date": 1544213090, "question_id": 53676102, "link": "https://stackoverflow.com/questions/53676102/communicate-rust-pnet-packets-between-threads-using-channels", "title": "Communicate Rust pnet packets between threads using channels", "body": "<p>I'm working on a simple Rust program that reads and parses network packets. For reading the network packets I'm using the <a href=\"https://github.com/libpnet/libpnet\" rel=\"nofollow noreferrer\">pnet libary</a>.\nBecause the parsing may take some time I'm using two separate threads for reading and parsing the packets.</p>\n\n<p>My idea now was to pass the read packages from the first thread to the second thread via message passing (using <code>mpsc::channel()</code>).\nHere's a simplified version of my code which I wrote based on <a href=\"https://docs.rs/pnet/0.21.0/pnet/\" rel=\"nofollow noreferrer\">the example given in the pnet doc</a>:</p>\n\n<pre><code>extern crate pnet;\n\nuse std::sync::mpsc;\nuse std::thread;\n\nuse pnet::datalink;\nuse pnet::datalink::Channel::Ethernet;\n\nfn main() {\n    let (sender, receiver) = mpsc::channel();\n    thread::spawn(move || {\n        for packet in receiver.recv() {\n            println!(\"{:?}\", packet)\n        }\n    });\n\n    let interface = datalink::interfaces().into_iter()\n        .find(|interface| interface.name == \"enp5s0\")\n        .unwrap();\n    let (_, mut package_receiver) =\n        match datalink::channel(&amp;interface, Default::default()) {\n            Ok(Ethernet(tx, rx)) =&gt; (tx, rx),\n            _ =&gt; panic!()\n        };\n\n    loop {\n        match package_receiver.next() {\n            Ok(packet) =&gt; {\n                // sender.send(\"foo\"); // this works fine\n                sender.send(packet);\n            }\n            _ =&gt; panic!()\n        }\n    }\n}\n</code></pre>\n\n<p>This works fine for sending primitive types or Strings over the channel, but not for the network packets. When I try to send a packet to the parser thread via the channel I get the following compiler error:</p>\n\n<pre><code>error[E0597]: `*package_receiver` does not live long enough                                                                   \n--&gt; src/main.rs:28:15                                                                                                       \n|                                                                                                                          \n28 |         match package_receiver.next() {                                                                                  \n|               ^^^^^^^^^^^^^^^^ borrowed value does not live long enough                                                  \n...                                                                                                                           \n36 | }                                                                                                                        \n| - borrowed value only lives until here                                                                                   \n|                                                                                                                          \n= note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>I'm pretty new to Rust and would really appreciate the help!</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 192, "user_id": 10012683, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mczbT.png?s=128&g=1", "display_name": "i.do.stuff", "link": "https://stackoverflow.com/users/10012683/i-do-stuff"}, "edited": false, "score": 0, "creation_date": 1544209104, "post_id": 53675340, "comment_id": 94208378, "body": "right.   what does that mean explicitly?  each character in the string is what?  number from the ascii table?"}, {"owner": {"reputation": 421, "user_id": 9698139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2129f0842cf4d80df486c039f9c99dd0?s=128&d=identicon&r=PG&f=1", "display_name": "Sander", "link": "https://stackoverflow.com/users/9698139/sander"}, "reply_to_user": {"reputation": 192, "user_id": 10012683, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mczbT.png?s=128&g=1", "display_name": "i.do.stuff", "link": "https://stackoverflow.com/users/10012683/i-do-stuff"}, "edited": false, "score": 0, "creation_date": 1544212578, "post_id": 53675340, "comment_id": 94209862, "body": "It&#39;s just a string representation of the number represented in decimal. So if you pass in the number 1234, the string it returns is &quot;1234&quot;. The documentation I linked has an example that shows this."}], "tags": [], "owner": {"reputation": 421, "user_id": 9698139, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2129f0842cf4d80df486c039f9c99dd0?s=128&d=identicon&r=PG&f=1", "display_name": "Sander", "link": "https://stackoverflow.com/users/9698139/sander"}, "is_accepted": true, "score": 3, "last_activity_date": 1544278522, "last_edit_date": 1544278522, "creation_date": 1544208925, "answer_id": 53675340, "question_id": 53675259, "link": "https://stackoverflow.com/questions/53675259/what-does-bignumto-dec-str-do/53675340#53675340", "title": "What does BigNum::to_dec_str do?", "body": "<p>From the <a href=\"https://docs.rs/openssl/0.9.11/openssl/bn/struct.BigNum.html#method.to_dec_str\" rel=\"nofollow noreferrer\">documentation for the openssl crate</a>:</p>\n\n<blockquote>\n  <p><code>fn to_dec_str(&amp;self) -&gt; Result&lt;OpensslString, ErrorStack&gt;</code></p>\n  \n  <p>Returns a decimal string representation of <code>self</code>.</p>\n</blockquote>\n"}], "owner": {"reputation": 192, "user_id": 10012683, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mczbT.png?s=128&g=1", "display_name": "i.do.stuff", "link": "https://stackoverflow.com/users/10012683/i-do-stuff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 53675340, "answer_count": 1, "score": -1, "last_activity_date": 1544565544, "creation_date": 1544208468, "last_edit_date": 1544565544, "question_id": 53675259, "link": "https://stackoverflow.com/questions/53675259/what-does-bignumto-dec-str-do", "title": "What does BigNum::to_dec_str do?", "body": "<p>I need to recreate a Rust function in C#.  This is my C# so far:</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>public static string AsSha256Decimal(this string asci)\n{\n    if (asci.IsDigitsOnly())\n        return asci;\n\n    byte[] hashBytes = asci.AsHashSha256();\n    StringBuilder builder = new StringBuilder();\n\n    foreach (byte a in hashBytes)\n    {\n        builder.Append(a);\n    }\n\n    return builder.ToString(); \n}\n</code></pre>\n\n<p>Here's my Rust code:</p>\n\n<pre><code>extern crate openssl;\n\nuse self::openssl::bn::BigNum;\nuse self::openssl::sha::sha256;\nuse utils::error::BIG_NUMBER_ERROR;\n\nfn encode_a_word() {\n    let blah = \"blah\";\n    let hash = sha256(blah.as_bytes());\n    let bignum = BigNum::from_slice(&amp;hash).unwrap();\n    let final1 = bignum.to_dec_str().unwrap();\n    trace!(\"hash {:?} and final {:#?}\", hash, final1)\n}\n</code></pre>\n\n<p>I can get the correct SHA256 hash but I cannot get the right final value. <code>hash</code> looks like an array of numbers, and <code>final1</code> is a string but the numbers in the string to do not match one for one.</p>\n\n<p><code>hash</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[139, 125, 241, 67, 217, 28, 113, 110, 207, 165, 252, 23, 48, 2, 47, 107, 66, 27, 5, 206, 222, 232, 253, 82, 177, 252, 101, 169, 96, 48, 173, 82]\n</code></pre>\n\n<p><code>final1</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>63094006986221797353605481996956262747240529547095446989928883355012717129042\n</code></pre>\n\n<p>I don\u2019t understand what the bignum functions are doing; what is the line using <code>bignum.to_dec_str</code> doing? It looks like some kind of decimal packing;  is that correct?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 4454, "user_id": 975074, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/33b2d10bd291f5addc8ecc2c60e89883?s=128&d=identicon&r=PG&f=1", "display_name": "suztomo", "link": "https://stackoverflow.com/users/975074/suztomo"}, "is_accepted": false, "score": 0, "last_activity_date": 1544221205, "creation_date": 1544221205, "answer_id": 53677487, "question_id": 53673834, "link": "https://stackoverflow.com/questions/53673834/frunks-foldl-against-elements-that-share-same-trait-with-different-type-paramet/53677487#53677487", "title": "frunk&#39;s foldl against elements that share same trait with different type parameters", "body": "<p>Got an idea from @1tgr about using macro. The below is my implementation. This requires manually defining '@cons' part for every 'N' that may be invoked, and  specifying \"3\" in macro argument.</p>\n\n<p>Still I'm looking for a better solution.</p>\n\n<pre><code>macro_rules! hcons_repeat {\n    (@cons (0, $_e:expr))\n        =&gt; { HNil };\n    (@cons (1, $e:expr))\n        =&gt; { HCons{ head: $e, tail: hcons_repeat!(@cons (0, $e))}};\n    (@cons (2, $e:expr))\n        =&gt; { HCons{ head: $e, tail: hcons_repeat!(@cons (1, $e))}};\n    (@cons (3, $e:expr))\n        =&gt; { HCons{ head: $e, tail: hcons_repeat!(@cons (2, $e))}};\n    (@cons (4, $e:expr))\n        =&gt; { HCons{ head: $e, tail: hcons_repeat!(@cons (3, $e))}};\n    (@cons (5, $e:expr))\n        =&gt; { HCons{ head: $e, tail: hcons_repeat!(@cons (4, $e))}};\n    (@cons (6, $e:expr))\n        =&gt; { HCons{ head: $e, tail: hcons_repeat!(@cons (5, $e))}};\n    (@cons (7, $e:expr))\n        =&gt; { HCons{ head: $e, tail: hcons_repeat!(@cons (6, $e))}};\n    [$e:expr; $n:tt] =&gt; {\n        {\n            hcons_repeat!(@cons ($n, $e))\n        }\n    };\n}\n\n...\n\nlet r = layers\n    .to_ref()\n    .foldl(hcons_repeat![Layer::static_forward; 3], vec_float);\n</code></pre>\n"}], "owner": {"reputation": 4454, "user_id": 975074, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/33b2d10bd291f5addc8ecc2c60e89883?s=128&d=identicon&r=PG&f=1", "display_name": "suztomo", "link": "https://stackoverflow.com/users/975074/suztomo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1544221205, "creation_date": 1544201762, "question_id": 53673834, "link": "https://stackoverflow.com/questions/53673834/frunks-foldl-against-elements-that-share-same-trait-with-different-type-paramet", "title": "frunk&#39;s foldl against elements that share same trait with different type parameters", "body": "<p>I'm learning how to use <a href=\"https://beachape.com/frunk/frunk/index.html\" rel=\"nofollow noreferrer\">frunk in Rust</a>. </p>\n\n<p>I have a question on how to use  the<code>folder</code> argument of the <a href=\"https://docs.rs/frunk/0.2.2/frunk/hlist/struct.HCons.html#method.foldl\" rel=\"nofollow noreferrer\">foldl method</a> against <em>elements that share same trait with different type parameters</em>. I wrote an example below with seemingly-redundant <code>folder</code> parameter (this example compiles just fine) of foldl method.</p>\n\n<p>Is there a simpler way to pass <code>static_forward</code> function to <code>foldl</code>?</p>\n\n<pre><code>#[macro_use]\nextern crate frunk;\n\ntrait Layer&lt;InDim, OutDim&gt; {\n    fn forward(&amp;self, input: Vec&lt;InDim&gt;) -&gt; Vec&lt;OutDim&gt;;\n\n    fn static_forward(input: Vec&lt;InDim&gt;, layer: &amp;Self) -&gt; Vec&lt;OutDim&gt; {\n        layer.forward(input)\n    }\n}\n\nstruct FtoI {}\nstruct ItoF {}\nstruct FtoS {}\n\nimpl Layer&lt;f32, i32&gt; for FtoI {\n    fn forward(&amp;self, input: Vec&lt;f32&gt;) -&gt; Vec&lt;i32&gt; {\n        // In real case, converts the input to output.\n        vec![1, 2, 3]\n    }\n}\n\nimpl Layer&lt;i32, f32&gt; for ItoF {\n    fn forward(&amp;self, input: Vec&lt;i32&gt;) -&gt; Vec&lt;f32&gt; {\n        // In real case, converts the input to output.\n        vec![1., 2., 3.]\n    }\n}\n\nimpl Layer&lt;f32, String&gt; for FtoS {\n    fn forward(&amp;self, input: Vec&lt;f32&gt;) -&gt; Vec&lt;String&gt; {\n        // In real case, converts the input to output.\n        vec![String::from(\"Hello\"), String::from(\"world\")]\n    }\n}\n\nfn main() {\n    let vec_float = vec![1., 2., 3.];\n    # These elements share Layer trait with different type parameters\n    let layers = hlist![FtoI {}, ItoF {}, FtoS {}];\n\n    let r = layers.to_ref().foldl(\n        hlist![\n            // All of the element are same and seem redundant. Can this argument be simplified?\n            Layer::static_forward,\n            Layer::static_forward,\n            Layer::static_forward\n        ],\n        vec_float,\n    );\n    /* This doesn't compile due to \"type mismatch in function arguments \"\n    let r = layers.to_ref().foldl(Layer::static_forward, vec_float);\n    */\n    println!(\"result: {:?}\", r);\n}\n</code></pre>\n"}, {"tags": ["pointers", "memory-management", "rust", "unsafe-pointers"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1544199026, "post_id": 53672692, "comment_id": 94203742, "body": "If you want to know what type the compiler inferred for a variable, just put <code>let () = variable;</code> somewhere."}, {"owner": {"reputation": 5586, "user_id": 1965774, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/e7KDB.gif?s=128&g=1", "display_name": "Pie &#39;Oh&#39; Pah", "link": "https://stackoverflow.com/users/1965774/pie-oh-pah"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1544208946, "post_id": 53672692, "comment_id": 94208314, "body": "Thank you @SebastianRedl"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1544198797, "creation_date": 1544198797, "answer_id": 53673085, "question_id": 53672692, "link": "https://stackoverflow.com/questions/53672692/dereferencing-raw-pointer-with-explicit-annotation-in-rust/53673085#53673085", "title": "Dereferencing raw pointer with explicit annotation in Rust", "body": "<p>It's not correctly inferred. <a href=\"https://doc.rust-lang.org/stable/std/alloc/fn.alloc.html\" rel=\"nofollow noreferrer\"><code>alloc</code></a> returns a pointer to <code>u8</code>, which can be set to 0 or incremented, so the compiler doesn't complain. However it will wrap at 255 instead of wrapping at 4G (or whatever if you're on a 64-bit system).</p>\n"}], "owner": {"reputation": 5586, "user_id": 1965774, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/e7KDB.gif?s=128&g=1", "display_name": "Pie &#39;Oh&#39; Pah", "link": "https://stackoverflow.com/users/1965774/pie-oh-pah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 53673085, "answer_count": 1, "score": 0, "last_activity_date": 1544201452, "creation_date": 1544197401, "last_edit_date": 1544201452, "question_id": 53672692, "link": "https://stackoverflow.com/questions/53672692/dereferencing-raw-pointer-with-explicit-annotation-in-rust", "title": "Dereferencing raw pointer with explicit annotation in Rust", "body": "<p>I was writing unsafe snippet of code to emulate how C would have allocated a memory for an <code>int</code>. The code allocates memory for an <code>isize</code> type, assign <code>0</code> to the pointer variable, then infinitely increment the value at the address every second</p>\n\n<pre><code>use std::process;\nuse std::{thread, time};\nuse std::alloc::{alloc, Layout};\n\nfn main() {\n    unsafe {\n        let layout = Layout::new::&lt;isize&gt;();\n        let p = alloc(layout);\n        println!(\"({}) address pointed to by p: {:p}\", process::id(), p);\n        *(p as *mut isize) = 0;\n        loop {\n            thread::sleep(time::Duration::from_millis(1000));\n            *(p as *mut isize) += 1;\n            println!(\"({}) p: {}\", process::id(), *(p as *mut isize));\n        }\n    }\n}\n</code></pre>\n\n<p>However, for each <code>*(p as *mut size)</code> I could have replaced with just <code>*p</code> without the compiler complaining (i.e. <code>*p = 0;</code>), thus I assumed it was correctly inferred. I need help explaining the difference and in which case the explicit type annotation may be required.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1544195751, "post_id": 53672206, "comment_id": 94201910, "body": "It is by design (I think I read somewhere that rust allows you to use or omit the trailing separator almost everywhere). Maybe this is relevant: <a href=\"https://github.com/rust-dev-tools/fmt-rfcs/issues/42\" rel=\"nofollow noreferrer\">github.com/rust-dev-tools/fmt-rfcs/issues/42</a> or <a href=\"https://stackoverflow.com/questions/28163772/why-and-when-should-be-comma-used-at-the-end-of-a-block\" title=\"why and when should be comma used at the end of a block\">stackoverflow.com/questions/28163772/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1544239079, "post_id": 53672662, "comment_id": 94216226, "body": "Yeah, in macros you can choose what separates parameters: <code>$($foo:ident),*</code> refers to 0 or more repetitions of an identifier followed by a comma, which needs the comma or else it doesn&#39;t work."}, {"owner": {"reputation": 397, "user_id": 4131596, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh4.googleusercontent.com/-dUHeMDfE0xw/AAAAAAAAAAI/AAAAAAAAANE/y-2iUXIrmU4/photo.jpg?sz=128", "display_name": "Ryan", "link": "https://stackoverflow.com/users/4131596/ryan"}, "edited": false, "score": 1, "creation_date": 1544311089, "post_id": 53672662, "comment_id": 94232424, "body": "It also makes code generation easier with <code>macro_rules</code> or other other tools because you don&#39;t have to treat the last element of a list different than the rest. Every element in the list can have the trailing comma."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 9, "last_activity_date": 1544197325, "creation_date": 1544197325, "answer_id": 53672662, "question_id": 53672206, "link": "https://stackoverflow.com/questions/53672206/why-is-a-trailing-comma-in-a-function-call-not-a-syntax-error/53672662#53672662", "title": "Why is a trailing comma in a function call not a syntax error?", "body": "<p>Most languages accept trailing commas in comma-separated lists like argument lists or tuple or array literals. This is helpful if you split up a list across multiple lines, e.g.</p>\n\n<pre><code>let a = [\n    0,\n    1,\n    2,\n    3,\n];\n</code></pre>\n\n<p>Since all lines are terminated by a comma, you can easily reorder the lines in your editor, and diffs will look cleaner in version control, in particular when adding further entries to the end of the list. This may not seem like a strong reason to allow the trailing comma, but since allowing the traling comma never hurts, it is good enough as a rationale.</p>\n\n<p>Note that macro invocations in Rust don't always allow the trailing comma.</p>\n\n<p>Other languages have a history of becoming more permissive for the trailing comma over time. JavaScript always allowed a trailing comma in array literals. They allowed it for object literals in EcmaScript 5, and for function parameter lists in EcmaScript 2017, while standard JSON still does not allow trailing commas. Python did not allow a trailing comma after <code>*args</code> and <code>**kwargs</code> until recently, but now they are allowed as well.</p>\n"}], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1071, "favorite_count": 0, "accepted_answer_id": 53672662, "answer_count": 1, "score": 4, "last_activity_date": 1544286684, "creation_date": 1544195473, "last_edit_date": 1544286684, "question_id": 53672206, "link": "https://stackoverflow.com/questions/53672206/why-is-a-trailing-comma-in-a-function-call-not-a-syntax-error", "title": "Why is a trailing comma in a function call not a syntax error?", "body": "<p>I would expect this code to fail because the comma acts as a parameter separator. There is no second parameter and <code>foo</code> only accepts one parameter.</p>\n\n<pre><code>fn foo(_a: u8) {}\n\nfn main() {\n    foo(3, );\n}\n</code></pre>\n"}, {"tags": ["rust", "lint", "rust-cargo", "clippy"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1586918854, "post_id": 53670865, "comment_id": 108303271, "body": "doesn&#39;t work currently <a href=\"https://github.com/rust-lang/cargo/pull/7533\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/pull/7533</a>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1586955795, "post_id": 53670865, "comment_id": 108318766, "body": "<code>cargo-fix --clippy</code> has been removed. Work is underway to re-add it as <code>cargo-clippy --fix</code>: <a href=\"https://github.com/rust-lang/rust-clippy/pull/5363\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust-clippy/pull/5363</a>, but it is not yet merged."}, {"owner": {"reputation": 1033, "user_id": 7988054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4162cedf05bf6101cc7fddb3d706b72e?s=128&d=identicon&r=PG", "display_name": "Patrick Jos&#233; Pereira", "link": "https://stackoverflow.com/users/7988054/patrick-jos%c3%a9-pereira"}, "edited": false, "score": 1, "creation_date": 1604509044, "post_id": 53670865, "comment_id": 114370378, "body": "First you need to install clippy nightly (<code>rustup component add clippy --toolchain nightly-x86_64-unknown-linux-gnu</code>), and after that run it with: <code>cargo +nightly clippy --fix -Z unstable-options</code>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 6, "last_activity_date": 1571771881, "last_edit_date": 1571771881, "creation_date": 1544190393, "answer_id": 53670865, "question_id": 53670348, "link": "https://stackoverflow.com/questions/53670348/can-rusts-clippy-do-autocorrection-autofix/53670865#53670865", "title": "Can Rust&#39;s clippy do autocorrection / autofix?", "body": "<p><code>cargo fix</code> can already apply some suggestions deriving from <code>rustc</code>'s errors and warnings.</p>\n\n<p>In <em>nightly</em> builds, since <a href=\"https://github.com/rust-lang/cargo/blob/master/CHANGELOG.md#cargo-138-2019-09-26\" rel=\"nofollow noreferrer\">Rust 1.38</a> \u2014 that is, since <em>Rust 1.40-nightly</em> \u2014 you can use <code>cargo fix --clippy</code> to apply certain suggestions from Clippy too.</p>\n\n<p>If you are using a stable version of the Rust toolchain, you can opt-in to use a nightly build for just one command, by using <code>+nightly</code> to override the toolchain:</p>\n\n<pre><code>cargo +nightly fix --clippy -Z unstable-options\n</code></pre>\n"}], "owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1782, "favorite_count": 0, "answer_count": 1, "score": 6, "last_activity_date": 1571771881, "creation_date": 1544188554, "last_edit_date": 1544277853, "question_id": 53670348, "link": "https://stackoverflow.com/questions/53670348/can-rusts-clippy-do-autocorrection-autofix", "title": "Can Rust&#39;s clippy do autocorrection / autofix?", "body": "<p>Is it possible to run <code>cargo clippy</code> with an option so it will fix warnings automatically? </p>\n\n<p>From the help message, it does not look like this option is supported at the moment.</p>\n"}, {"tags": ["concurrency", "rust", "future"], "comments": [{"owner": {"reputation": 752, "user_id": 2513747, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/bfbafb4af0633251bb5e684d3bd1c0d0?s=128&d=identicon&r=PG", "display_name": "shoham", "link": "https://stackoverflow.com/users/2513747/shoham"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1544181140, "post_id": 53666943, "comment_id": 94194189, "body": "@E_net4iskindandwelcoming Added examples of what I tried"}], "answers": [{"tags": [], "owner": {"reputation": 319, "user_id": 2809232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da0df83f7732c5e47505ac0072308426?s=128&d=identicon&r=PG&f=1", "display_name": "Aaron Miller", "link": "https://stackoverflow.com/users/2809232/aaron-miller"}, "is_accepted": false, "score": 0, "last_activity_date": 1547155178, "last_edit_date": 1592644375, "creation_date": 1547155178, "answer_id": 54137045, "question_id": 53666943, "link": "https://stackoverflow.com/questions/53666943/reading-all-available-messages-from-mpsc-unboundedreceiver-without-blocking-unne/54137045#54137045", "title": "Reading all available messages from mpsc UnboundedReceiver without blocking unnecessarily", "body": "<p>You are using futures incorrectly -- you need a <code>Runtime</code> and a bit more boilerplate to get this to work:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>\n    extern crate tokio;\n    extern crate futures;\n    \n    use tokio::prelude::*;\n    use futures::future::{lazy, ok};\n    use futures::sync::mpsc::unbounded;\n    use tokio::runtime::Runtime;\n    \n    fn main() {\n        let (sender, receiver) = unbounded::&lt;i64&gt;();\n        let receiver = receiver.for_each(|result| {\n            println!(&quot;Got: {}&quot;, result);\n            Ok(())\n        });\n    \n        let rt = Runtime::new().unwrap();\n        rt.executor().spawn(receiver);\n    \n        let lazy_future = lazy(move || {\n            sender.unbounded_send(1).unwrap();\n            sender.unbounded_send(2).unwrap();\n            sender.unbounded_send(3).unwrap();\n            ok::&lt;(), ()&gt;(())\n        });\n    \n        rt.block_on_all(lazy_future).unwrap();\n    }\n\n</code></pre>\n<p>Further reading, from <a href=\"https://tokio.rs/docs/internals/runtime-model/\" rel=\"nofollow noreferrer\">Tokio's runtime model</a>:</p>\n<blockquote>\n<p>[...]in order to use Tokio and successfully execute tasks, an application must start an executor and the necessary drivers for the resources that the application\u2019s tasks depend on. This requires significant boilerplate. To manage the boilerplate, Tokio offers a couple of runtime options. A runtime is an executor bundled with all necessary drivers to power Tokio\u2019s resources. Instead of managing all the various Tokio components individually, a runtime is created and started in a single call.</p>\n<p>Tokio offers a <a href=\"https://docs.rs/tokio/0.1.8/tokio/runtime/index.html\" rel=\"nofollow noreferrer\">concurrent runtime</a> and a <a href=\"https://docs.rs/tokio/0.1.8/tokio/runtime/current_thread/index.html\" rel=\"nofollow noreferrer\">single-threaded runtime</a>. The concurrent runtime is backed by a multi-threaded, work-stealing executor. The single-threaded runtime executes all tasks and drivers on thee current thread. The user may pick the runtime with characteristics best suited for the application.</p>\n</blockquote>\n"}], "owner": {"reputation": 752, "user_id": 2513747, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/bfbafb4af0633251bb5e684d3bd1c0d0?s=128&d=identicon&r=PG", "display_name": "shoham", "link": "https://stackoverflow.com/users/2513747/shoham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 698, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1547155178, "creation_date": 1544175961, "last_edit_date": 1544181114, "question_id": 53666943, "link": "https://stackoverflow.com/questions/53666943/reading-all-available-messages-from-mpsc-unboundedreceiver-without-blocking-unne", "title": "Reading all available messages from mpsc UnboundedReceiver without blocking unnecessarily", "body": "<p>I have an <code>futures::sync::mpsc::unbounded</code> channel.  I can send messages  to the <code>UnboundedSender&lt;T&gt;</code> but have problems receiving them from the <code>UnboundedReciever&lt;T&gt;</code>.<br>\nI use the channel to send messages to the UI thread, and I have a function that gets called every frame, and I'd like to read all the available messages from the channel on each frame, without blocking the thread when there are no available messages.</p>\n\n<p>From what I've read the <code>Future::poll</code> method is kind of what I need, I just poll, and if I get Async::Ready, I do something with the message, and if not, I just return from the function.<br>\nThe problem is the <code>poll</code> panics when there is no task context (I'm not sure what that means or what to do about it).</p>\n\n<p>What I tried:</p>\n\n<pre><code>let (sender, receiver) = unbounded(); // somewhere in the code, doesn't matter\n// ...\nlet fut = match receiver.by_ref().collect().poll() {\n    Async::Ready(items_vec) =&gt; // do something on UI with items,\n    _ =&gt; return None\n}\n</code></pre>\n\n<p>this panics because I don't have a task context.</p>\n\n<p>Also tried:</p>\n\n<pre><code>let (sender, receiver) = unbounded(); // somewhere in the code, doesn't matter\n// ...\nlet fut = receiver.by_ref().collect(); // how do I run the future?\ntokio::runtime::current_thread::Runtime::new().unwrap().block_on(fut); // this blocks the thread when there are no items in the receiver\n</code></pre>\n\n<p>I would like help with reading the <code>UnboundedReceiver&lt;T&gt;</code> without blocking the thread when there are no items in the stream (just do nothing then).</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 271, "user_id": 3739216, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/d4p4W.jpg?s=128&g=1", "display_name": "Jtaks", "link": "https://stackoverflow.com/users/3739216/jtaks"}, "edited": false, "score": 1, "creation_date": 1544138410, "post_id": 53661138, "comment_id": 94180629, "body": "That was it.. Thank you for your help!"}], "tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": true, "score": 3, "last_activity_date": 1544138332, "creation_date": 1544138332, "answer_id": 53661138, "question_id": 53660817, "link": "https://stackoverflow.com/questions/53660817/why-is-there-a-pause-between-a-back-to-back-println-and-print-statement/53661138#53661138", "title": "Why is there a pause between a back-to-back println and print statement?", "body": "<p><code>stdout</code> is typically line buffered, meaning it stores whatever you write to it in a buffer until it sees a newline. So you won't see anything until <code>println!(\"Read!\");</code> prints a newline.</p>\n\n<p>If you want to display the contents before that you need to <a href=\"https://doc.rust-lang.org/std/io/trait.Write.html#tymethod.flush\" rel=\"nofollow noreferrer\">flush the buffer</a>.</p>\n\n<pre><code>use std::io;  // for io::stdout\n\n...\n\nprint!(\"Reading...\");\nio::stdout().flush()?;\n</code></pre>\n"}], "owner": {"reputation": 271, "user_id": 3739216, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/d4p4W.jpg?s=128&g=1", "display_name": "Jtaks", "link": "https://stackoverflow.com/users/3739216/jtaks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 53661138, "answer_count": 1, "score": 1, "last_activity_date": 1544142434, "creation_date": 1544136257, "last_edit_date": 1544142434, "question_id": 53660817, "link": "https://stackoverflow.com/questions/53660817/why-is-there-a-pause-between-a-back-to-back-println-and-print-statement", "title": "Why is there a pause between a back-to-back println and print statement?", "body": "<p>I am writing a simple HTTP request using the standard libraries <code>net</code> module:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::net;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let request = \nb\"GET / HTTP/1.1\nHost: localhost:8080\n\n\";\n\n    let mut response = String::new();\n\n    print!(\"Connecting...\");\n    let mut stream = net::TcpStream::connect(\"127.0.0.1:8080\")\n        .expect(\"Cannot connect to server\");\n    println!(\"Connected!\");\n\n    print!(\"Writing...\");\n    stream.write(request)\n        .expect(\"Error writing\");\n    println!(\"Written!\");\n\n    print!(\"Reading...\");\n    stream.read_to_string(&amp;mut response)\n        .expect(\"Error reading\");\n    println!(\"Read!\");\n\n    println!(\"\\nResponse:\\n{}\", response);\n    Ok(())\n}\n</code></pre>\n\n<p>I have a simple <a href=\"https://expressjs.com/\" rel=\"nofollow noreferrer\">Express</a> webserver running locally on <code>localhost:8080</code>. </p>\n\n<pre><code>const express = require('express')\nconst app = express()\nconst port = 8080\n\napp.get('/', (req, res) =&gt; {\n  console.time('/')\n  res.send('ok')\n  console.timeEnd('/')\n})\n\napp.listen(port, () =&gt; console.log(`Server on ${port}`))\n</code></pre>\n\n<p>When I run the program, there is a second or two pause between the printing of <code>Written!</code> and <code>Reading...</code>. Why does that pause occur when there seems to be nothing there to pause execution?</p>\n\n<p>Server Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/: 5.168ms\n</code></pre>\n\n<p>Rust Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Connecting...Connected!\nWriting...Written! // PAUSES HERE AT EOL!\nReading...Read!\n\nResponse:\nHTTP/1.1 200 OK\nX-Powered-By: Express\nContent-Type: text/html; charset=utf-8\nContent-Length: 2\nETag: W/\"2-eoX0dku9ba8cNUXvu/DyeabcC+s\"\nDate: Thu, 06 Dec 2018 22:32:47 GMT\nConnection: keep-alive\n\nok\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1544141967, "creation_date": 1544141967, "answer_id": 53661578, "question_id": 53660432, "link": "https://stackoverflow.com/questions/53660432/the-and-then-method-cannot-be-invoked-on-a-trait-object-error-when-type-anno/53661578#53661578", "title": "&quot;the `and_then` method cannot be invoked on a trait object&quot; error when type annotations are added to the `and_then`", "body": "<p>There are multiple problems here:</p>\n\n<ul>\n<li><p>Closures are an <a href=\"https://stackoverflow.com/questions/45935100/how-do-rust-closures-work-and-how-does-it-execute-a-closure\">anonymous type</a>, which means that you <em>cannot name them</em>. </p></li>\n<li><p>It's currently impossible to have a bare trait like <code>FnOnce</code> because <a href=\"https://stackoverflow.com/q/28044231/155423\">it is unsized</a>.</p></li>\n<li><p><code>|| foo</code> isn't a trait, it's a concrete type.</p></li>\n</ul>\n\n<p>Instead, <a href=\"https://stackoverflow.com/q/41394751/155423\">specify the return type of the closure</a>:</p>\n\n<pre><code>let y = x\n    .and_then(|_inner| -&gt; Option&lt;String&gt; { None })\n    .and(Some(\"new String\".to_string()));\n</code></pre>\n\n<p>Or <a href=\"https://stackoverflow.com/q/37886379/155423\">qualify the type of the <code>None</code></a>:</p>\n\n<pre><code>let y = x\n    .and_then(|_inner| None::&lt;String&gt;)\n    .and(Some(\"new String\".to_string()));\n</code></pre>\n\n<p>Or avoid the chaining:</p>\n\n<pre><code>let y: Option&lt;String&gt; = x.and_then(|_inner| None);\nlet y = y.and(Some(\"new String\".to_string()));\n</code></pre>\n"}], "owner": {"reputation": 6509, "user_id": 356011, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17ff41be1044be6fb5ef186b83efb20?s=128&d=identicon&r=PG", "display_name": "marathon", "link": "https://stackoverflow.com/users/356011/marathon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 511, "favorite_count": 0, "accepted_answer_id": 53661578, "answer_count": 1, "score": 5, "last_activity_date": 1544141967, "creation_date": 1544134110, "last_edit_date": 1544141632, "question_id": 53660432, "link": "https://stackoverflow.com/questions/53660432/the-and-then-method-cannot-be-invoked-on-a-trait-object-error-when-type-anno", "title": "&quot;the `and_then` method cannot be invoked on a trait object&quot; error when type annotations are added to the `and_then`", "body": "<p>I have a function passed to <code>and_then</code> that returns a type not known to the compiler. When chained with other option methods, type annotations are required.</p>\n\n<pre><code>fn main() {\n    let w = Some(\"hi\".to_string());\n    let x: Option&lt;&amp;String&gt; = w.as_ref();\n\n    //fails:\n    let y: Option&lt;String&gt; =\n        x.and_then::&lt;String, FnOnce(Option&lt;&amp;String&gt;) -&gt; Option&lt;String&gt;&gt;(|_inner: &amp;String| None);\n\n    //ok:\n    let y: Option&lt;String&gt; = x.and_then(|_inner: &amp;String| None);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=77fdec86ccf6587d0ac83220db8e7c44\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Adding the mandatory annotations causes this compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the `and_then` method cannot be invoked on a trait object\n --&gt; src/main.rs:7:11\n  |\n7 |         x.and_then::&lt;String, FnOnce(Option&lt;&amp;String&gt;) -&gt; Option&lt;String&gt;&gt;(|_inner: &amp;String| None);\n  |           ^^^^^^^^\n</code></pre>\n\n<p>I assume it is complaining about the <code>FnOnce</code> trait, but I don't see what this has to do with <code>x</code>.</p>\n\n<p>I would like to understand what is going wrong here.   </p>\n\n<p>Ultimately, the goal is to have this <code>and_then</code> in a chained statement, which is why the annotations are needed.</p>\n\n<pre><code>let y = x\n    .and_then::&lt;String, FnOnce(Option&lt;&amp;String&gt;) -&gt; Option&lt;String&gt;&gt;(|_inner: &amp;String| None)\n    .and(Some(\"new String\".to_string()));\n</code></pre>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544130176, "post_id": 53658451, "comment_id": 94177526, "body": "<i>I have tried using rand::seq::sample_iter on words.chars</i> \u2014 and what happened?"}], "answers": [{"tags": [], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "is_accepted": true, "score": 1, "last_activity_date": 1544130230, "last_edit_date": 1544130230, "creation_date": 1544126491, "answer_id": 53658832, "question_id": 53658451, "link": "https://stackoverflow.com/questions/53658451/how-to-get-a-random-char-from-a-string/53658832#53658832", "title": "How to get a random char from a string", "body": "<pre><code>extern crate rand; // 0.6.0\n\nuse rand::seq::IteratorRandom;\n\nfn main() {\n    let words = \"helloworld\";\n    let mut result = String::new();\n\n    let random = words\n        .chars()\n        .choose(&amp;mut rand::thread_rng())\n        .expect(\"Couldn't get random char\");\n\n    result.push(random);\n\n    println!(\"result is {}\", result);\n}\n</code></pre>\n"}], "owner": {"reputation": 264, "user_id": 10756455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/584555d27f8df3e5e8c4d4c7047498cf?s=128&d=identicon&r=PG&f=1", "display_name": "Toothless204", "link": "https://stackoverflow.com/users/10756455/toothless204"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "closed_date": 1544131137, "accepted_answer_id": 53658832, "answer_count": 1, "score": -2, "last_activity_date": 1544130230, "creation_date": 1544124935, "last_edit_date": 1544130192, "question_id": 53658451, "link": "https://stackoverflow.com/questions/53658451/how-to-get-a-random-char-from-a-string", "closed_reason": "Duplicate", "title": "How to get a random char from a string", "body": "<p>I have a string and I want to get a random character from it. It should hopefully work like this:</p>\n\n<pre><code>fn main() {\n    let words = \"helloworld\";\n    let mut result = String::new();\n    // get random char and append to result\n    println!(\"result is {}\", result);\n}\n</code></pre>\n\n<p>I have tried using <code>rand::seq::sample_iter</code> on <code>words.chars</code>.</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 6673, "user_id": 777689, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/19JOo.jpg?s=128&g=1", "display_name": "PeterT", "link": "https://stackoverflow.com/users/777689/petert"}, "edited": false, "score": 4, "creation_date": 1544092558, "post_id": 53648948, "comment_id": 94157191, "body": "I would try to set the level of compression. Just because the final file-size is similar doesn&#39;t mean that the compression levels are similar if the file is not very compressible. Also performance not being optimal is explicitly mentioned here <a href=\"https://docs.rs/deflate/0.7.19/deflate/\" rel=\"nofollow noreferrer\"><code>The current implementation is still a bit lacking speed-wise compared to C-libraries like zlib and miniz.</code></a>. So maybe using zlib with some ffi might help out."}, {"owner": {"reputation": 6678, "user_id": 136248, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a64b4253834c35cd28a190f1f55a12a9?s=128&d=identicon&r=PG", "display_name": "Benoit Courtine", "link": "https://stackoverflow.com/users/136248/benoit-courtine"}, "reply_to_user": {"reputation": 6673, "user_id": 777689, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/19JOo.jpg?s=128&g=1", "display_name": "PeterT", "link": "https://stackoverflow.com/users/777689/petert"}, "edited": false, "score": 0, "creation_date": 1544093082, "post_id": 53648948, "comment_id": 94157487, "body": "Tried to use <code>CompressionMethod::Stored</code> (no compression): no performance gain! Also tried to reimplement <code>copy</code> (increasing buffer size, at 8k by default): again, no performance gain."}, {"owner": {"reputation": 6673, "user_id": 777689, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/19JOo.jpg?s=128&g=1", "display_name": "PeterT", "link": "https://stackoverflow.com/users/777689/petert"}, "edited": false, "score": 1, "creation_date": 1544093543, "post_id": 53648948, "comment_id": 94157785, "body": "Curious. But it seems like you&#39;re not the only one with the issue: <a href=\"https://github.com/mvdnes/zip-rs/issues/88\" rel=\"nofollow noreferrer\">github.com/mvdnes/zip-rs/issues/88</a>"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 9, "creation_date": 1544112581, "post_id": 53648948, "comment_id": 94169313, "body": "Have you tried wrapping your <code>File</code>s in <code>BufReader</code>/<code>BufWriter</code>?"}, {"owner": {"reputation": 6678, "user_id": 136248, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a64b4253834c35cd28a190f1f55a12a9?s=128&d=identicon&r=PG", "display_name": "Benoit Courtine", "link": "https://stackoverflow.com/users/136248/benoit-courtine"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1544446679, "post_id": 53648948, "comment_id": 94266807, "body": "@Jmb Thanks, it helped a lot. With <code>BufWriter</code>, compression becomes 3x slower than native zip command, which is a great improvement."}, {"owner": {"reputation": 937, "user_id": 3802790, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/bb81e22ee264e3290d78a6a8f41b45f8?s=128&d=identicon&r=PG&f=1", "display_name": "Zenton", "link": "https://stackoverflow.com/users/3802790/zenton"}, "edited": false, "score": 1, "creation_date": 1594658853, "post_id": 53648948, "comment_id": 111195986, "body": "@BenoitCourtine did you also add the <code>BufReader</code>? Buffering on both sides is important to get performant I/O."}], "answers": [{"tags": [], "owner": {"reputation": 674, "user_id": 3551604, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/660b8994e7b681b2ce4cf4da9ab6e0e7?s=128&d=identicon&r=PG", "display_name": "c-x-berger", "link": "https://stackoverflow.com/users/3551604/c-x-berger"}, "is_accepted": false, "score": 1, "last_activity_date": 1594695660, "last_edit_date": 1594695660, "creation_date": 1594694741, "answer_id": 62887252, "question_id": 53648948, "link": "https://stackoverflow.com/questions/53648948/can-i-improve-the-poor-performance-of-the-rust-zip-crate/62887252#62887252", "title": "Can I improve the poor performance of the Rust zip crate?", "body": "<p>I don't have your test data, so I'm operating on a 3.7 GB Debian DVD ISO. I'm also assuming whatever you're calling the &quot;system zip&quot; is roughly the same as the Arch <a href=\"https://www.archlinux.org/packages/extra/x86_64/zip/\" rel=\"nofollow noreferrer\">zip package.</a></p>\n<p>Starting with your original code, updates to the zip crate such as moving to flate2 over deflate help:</p>\n<pre><code>time ./zipbench \n\nreal    2m29.285s\nuser    2m23.396s\nsys     0m4.066s\n</code></pre>\n<pre><code>time zip test2.zip  debian-10.4.0-amd64-DVD-1.iso \n  adding: debian-10.4.0-amd64-DVD-1.iso (deflated 1%)\n\nreal    1m42.709s\nuser    1m38.066s\nsys     0m3.386s\n</code></pre>\n<p>The zip utility is only about twice as fast, and we haven't even changed our code yet, just updated our crates and Rust proper by about a year.</p>\n<p>We can add buffered IO to our Rust with <code>BufReader</code> and <code>BufWriter</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() -&gt; io::Result&lt;()&gt; {\n    let mut src = BufReader::new(File::open(&quot;./debian-10.4.0-amd64-DVD-1.iso&quot;)?);\n    dest = BufWriter::new(File::create(&quot;./test.zip&quot;)?);\n    let mut zip_writer = ZipWriter::new(dest);\n\n    zip_writer.start_file(&quot;src.mxf&quot;, FileOptions::default())?;\n    // This is only workable because we're only writing one file to our ZIP.\n    let mut zip_writer = BufWriter::new(zip_writer);\n    io::copy(&amp;mut src, &amp;mut zip_writer)?;\n\n    Ok(())\n}\n</code></pre>\n<p>This earns us a small performance bump, but not a huge amount:</p>\n<pre><code>time ./zipbench\n\nreal    2m25.348s\nuser    2m20.105s\nsys     0m3.894s\n</code></pre>\n<p>You might get a bit more speed by using flate2 directly, especially if you can use <a href=\"https://crates.io/crates/cloudflare-zlib-sys\" rel=\"nofollow noreferrer\">CloudFlare's Zlib fork.</a> However, I haven't tested this.</p>\n"}], "owner": {"reputation": 6678, "user_id": 136248, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a64b4253834c35cd28a190f1f55a12a9?s=128&d=identicon&r=PG", "display_name": "Benoit Courtine", "link": "https://stackoverflow.com/users/136248/benoit-courtine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 641, "favorite_count": 0, "answer_count": 1, "score": 10, "last_activity_date": 1594695660, "creation_date": 1544091035, "last_edit_date": 1544105703, "question_id": 53648948, "link": "https://stackoverflow.com/questions/53648948/can-i-improve-the-poor-performance-of-the-rust-zip-crate", "title": "Can I improve the poor performance of the Rust zip crate?", "body": "<p>Here is my benchmark program:</p>\n\n<pre><code>extern crate zip;\n\nuse std::fs::File;\nuse std::io::copy;\nuse zip::write::FileOptions;\nuse zip::ZipWriter;\n\nfn main() {\n    let mut src = File::open(\"/tmp/src.mxf\").unwrap(); // 624 Mb file.\n    let dest = File::create(\"/tmp/test.zip\").unwrap();\n    let mut zip_writer = ZipWriter::new(dest);\n\n    zip_writer\n        .start_file(\"src.mxf\", FileOptions::default())\n        .unwrap();\n    copy(&amp;mut src, &amp;mut zip_writer).unwrap();\n\n    zip_writer.finish().unwrap();\n}\n</code></pre>\n\n<p>With the program compiled in release mode:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>time ./zip_bench\n./zip_bench  62,68s user 146,21s system 99% cpu 3:28,91 total\n</code></pre>\n\n<p>The same file compressed using the system <code>zip</code> binary:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>time zip /tmp/test2.zip /tmp/src.mxf\nzip /tmp/test2.zip /tmp/src.mxf  13,77s user 0,19s system 99% cpu 13,965 total\n</code></pre>\n\n<p>The time factor between the system and Rust zip is around 14x (for a similar output file, with insignificant size difference).</p>\n\n<p>Am I doing something wrong in the code that could explain Rust performance? How can I improve it to approach system performance?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1544089328, "post_id": 53648396, "comment_id": 94155245, "body": "You are thinking way too complicated. You don&#39;t want to return <code>&amp;impl Iterator</code> but <code>impl Iterator</code>. Make that happen and then look again"}, {"owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544090275, "post_id": 53648396, "comment_id": 94155837, "body": "Well, that was what I first tried. That gives me &quot;cannot infer an appropriate lifetime&quot; ... &quot;this return type evaluates to the <code>&#39;static</code> lifetime...&quot; ... &quot;but this borrow... can&#39;t outlive the lifetime &#39;a as defined on the method body&quot; etc. Tried adding &quot;+ &#39;a&quot; to annotate a lifetime, then got to &quot;closure may outlive the current function, but it borrows <code>self</code>, which is owned by the current function&quot;. I&#39;m quite sure the return type needs to be a lifetimed ref."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544090492, "post_id": 53648396, "comment_id": 94155940, "body": "use <code>move</code> on the <code>flat_map</code> closure as well ;)"}, {"owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544090870, "post_id": 53648396, "comment_id": 94156150, "body": "Ha, thanks! I posted the working solution below."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544091228, "post_id": 53648890, "comment_id": 94156364, "body": "As a sidenote, if you are using Rust2018, you can elide <code>&#39;a</code> and instead use <code>fn iter(&amp;self) -&gt; impl Iterator&lt;Item = (usize, usize)&gt; + &#39;_</code>"}], "tags": [], "owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "is_accepted": false, "score": 3, "last_activity_date": 1544106345, "last_edit_date": 1544106345, "creation_date": 1544090836, "answer_id": 53648890, "question_id": 53648396, "link": "https://stackoverflow.com/questions/53648396/how-do-i-return-an-appropriately-lifetimed-reference-to-an-iterator-over-struct/53648890#53648890", "title": "How do I return an appropriately lifetimed reference to an iterator over struct contents?", "body": "<p>The return type must not be a reference. The trick is to add a lifetime specifier for the return type. Also, both closures need to have <code>move</code> to capture the ownership of the <code>self</code> and <code>y</code>.</p>\n\n<pre><code>fn iter&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = (usize, usize)&gt; + 'a {\n    (0..self.height).flat_map(move |y| (0..self.width).map(move |x| (x, y)))\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1544106851, "creation_date": 1544106851, "answer_id": 53653682, "question_id": 53648396, "link": "https://stackoverflow.com/questions/53648396/how-do-i-return-an-appropriately-lifetimed-reference-to-an-iterator-over-struct/53653682#53653682", "title": "How do I return an appropriately lifetimed reference to an iterator over struct contents?", "body": "<p>There's no reason to maintain any references to the original struct here since all the closed-over values implement <code>Copy</code>. You just need to extract <code>height</code> and <code>width</code> from the struct, making a copy as you do so:</p>\n\n<pre><code>fn iter(&amp;self) -&gt; impl Iterator&lt;Item = (usize, usize)&gt; {\n    let Self { height, width } = *self;\n    (0..height).flat_map(move |y| (0..width).map(move |x| (x, y)))\n}\n</code></pre>\n"}], "owner": {"reputation": 2856, "user_id": 1125931, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/6aec4e7168bcc6ce45a24ab174e136fc?s=128&d=identicon&r=PG", "display_name": "raimohanska", "link": "https://stackoverflow.com/users/1125931/raimohanska"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1544106851, "creation_date": 1544089149, "last_edit_date": 1544106333, "question_id": 53648396, "link": "https://stackoverflow.com/questions/53648396/how-do-i-return-an-appropriately-lifetimed-reference-to-an-iterator-over-struct", "title": "How do I return an appropriately lifetimed reference to an iterator over struct contents?", "body": "<p>I\u2019m trying to implement an iterator over a 2-dimensional grid as below (this is a simplification of a bit more complex setup):</p>\n\n<pre><code>struct Grid {\n    width: usize,\n    height: usize,\n}\n\nimpl Grid {\n    fn new(width: usize, height: usize) -&gt; Grid {\n        Grid { width, height }\n    }\n\n    fn iter&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a impl Iterator&lt;Item = (usize, usize)&gt; {\n        let i = (0..self.height).flat_map(|y: usize| (0..self.width).map(move |x| (x, y)));\n        &amp;i\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/lib.rs:12:43\n   |\n12 |         let i = (0..self.height).flat_map(|y: usize| (0..self.width).map(move |x| (x, y)));\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the method body at 11:13...\n  --&gt; src/lib.rs:11:13\n   |\n11 |     fn iter&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a impl Iterator&lt;Item = (usize, usize)&gt; {\n   |             ^^\n   = note: ...so that the types are compatible:\n           expected &amp;&amp;Grid\n              found &amp;&amp;'a Grid\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that return value is valid for the call\n  --&gt; src/lib.rs:11:34\n   |\n11 |     fn iter&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a impl Iterator&lt;Item = (usize, usize)&gt; {\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I cannot figure out how to return an appropriately lifetimed reference to the iterator. I understand that the lifetime of the iterator must not exceed the lifetime of the underlying <code>Grid</code> struct.</p>\n"}, {"tags": ["functional-programming", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544089775, "post_id": 53648394, "comment_id": 94155534, "body": "What about <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow noreferrer\"><code>filter_map</code></a>?"}, {"owner": {"reputation": 127, "user_id": 6748751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/879942233f1a467b2e158869153da800?s=128&d=identicon&r=PG&f=1", "display_name": "BinaryHexer", "link": "https://stackoverflow.com/users/6748751/binaryhexer"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1544090049, "post_id": 53648394, "comment_id": 94155699, "body": "@hellow I am not interested in skipping over the errors, I want <code>map</code> to execute only if <code>Result</code> is a <code>Ok</code> otherwise short-circuit the chain and immediately return the error.  This is how most functional languages handle such chains or pipes."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1544090559, "post_id": 53648394, "comment_id": 94155979, "body": "There&#39;s <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.try_fold\" rel=\"nofollow noreferrer\"><code>try_fold</code></a> for that."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1544106057, "post_id": 53648394, "comment_id": 94165217, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/53648394/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. For example, you reference <code>self</code>, <code>Token1</code>, <code>Error</code>, <code>some_init</code>, but we don&#39;t know what that is. If they aren&#39;t important, remove or replace them. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}], "answers": [{"comments": [{"owner": {"reputation": 127, "user_id": 6748751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/879942233f1a467b2e158869153da800?s=128&d=identicon&r=PG&f=1", "display_name": "BinaryHexer", "link": "https://stackoverflow.com/users/6748751/binaryhexer"}, "edited": false, "score": 0, "creation_date": 1544173153, "post_id": 53658344, "comment_id": 94190077, "body": "I have updated the original code example to be more clear. Here is a rust playground link: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=00e583be8f9398f09dce309f8c5bc1dd\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "reply_to_user": {"reputation": 127, "user_id": 6748751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/879942233f1a467b2e158869153da800?s=128&d=identicon&r=PG&f=1", "display_name": "BinaryHexer", "link": "https://stackoverflow.com/users/6748751/binaryhexer"}, "edited": false, "score": 0, "creation_date": 1544185769, "post_id": 53658344, "comment_id": 94196591, "body": "I&#39;ve updated my answer based on your playground code"}], "tags": [], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "is_accepted": false, "score": 0, "last_activity_date": 1544185731, "last_edit_date": 1544185731, "creation_date": 1544124453, "answer_id": 53658344, "question_id": 53648394, "link": "https://stackoverflow.com/questions/53648394/type-aware-map-when-using-iterator/53658344#53658344", "title": "Type aware Map when using Iterator", "body": "<p>You can collect the results in an intermediate container, and then handle any errors from there (note that you will need to change the return value of your function):</p>\n\n<pre><code>fn internal_eval(&amp;mut self, tokens: Vec&lt;String&gt;) -&gt; Result&lt;(), Error&gt; {\n    tokens\n        // Use `into_iter` to iterate over owned objects\n        .into_iter()\n        .map(|token| parse_token(token))\n        .collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;()?\n        .into_iter()\n        .map(|token1| do_something_with_token1(token1))\n        .fold(some_init, |acc, x| {\n            // reduce\n        });\n    // ...\n}\n</code></pre>\n\n<p>If you can't afford to create an intermediate container, you could also do this (slightly less readable):</p>\n\n<pre><code>fn internal_eval(&amp;mut self, tokens: Vec&lt;String&gt;) -&gt; Result&lt;(), Error&gt; {\n    tokens\n        .into_iter()\n        .map(|token| parse_token(token))\n        .map(|token1_res| token1_res.map(|token1| do_something_with_token1(token1) ))\n        .try_fold(some_init, |acc, x| -&gt; Result&lt;SomeType, Error&gt; {\n            let val = x??;\n            // ...\n        });\n    Ok(())\n}\n</code></pre>\n\n<p><strong>Update</strong></p>\n\n<pre><code>fn do_some(tokens: Vec&lt;String&gt;) -&gt; Result&lt;Vec&lt;String&gt;, bool&gt; {\n    Ok(tokens\n        .into_iter()\n        .map(|token: String| Ok(token))\n        .map(|token: Result&lt;String, bool&gt;| token.map(|s| s + \"a\"))\n        .try_fold(Vec::new(), |mut acc, s| { acc.push(s?); Ok(acc) })?)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 1, "last_activity_date": 1544211189, "last_edit_date": 1544211189, "creation_date": 1544210662, "answer_id": 53675675, "question_id": 53648394, "link": "https://stackoverflow.com/questions/53648394/type-aware-map-when-using-iterator/53675675#53675675", "title": "Type aware Map when using Iterator", "body": "<p>I cannot really tell what you're exactly after, but - judging by the signature of <code>do_some</code> - I suppose that you have a <code>Vec&lt;String&gt;</code>, a function operating on <code>String</code>, returning a <code>Result&lt;String, bool&gt;</code>, and you want to apply this function to each element in the <code>Vec</code>, and get them into a <code>Vec</code> if all are <code>Ok</code>. If you encounter an <code>Err</code>, you want to return an <code>Err</code>. This can be acchieved as follows:</p>\n\n<pre><code>fn do_some(tokens: Vec&lt;String&gt;) -&gt; Result&lt;Vec&lt;String&gt;, bool&gt; {\n    tokens\n        .into_iter()\n        .map(|token: String| Ok(token)) // or any other Fn(String)-&gt;Result&lt;String, bool&gt;\n        .map(|token: Result&lt;String, bool&gt;| token.map(|s| s + \"a\"))\n        .collect()\n}\n</code></pre>\n\n<p>This uses <code>collect</code>, relying on <a href=\"https://doc.rust-lang.org/std/iter/trait.FromIterator.html\" rel=\"nofollow noreferrer\"><code>FromIter</code></a>, and <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#impl-FromIterator%3CResult%3CA%2C%20E%3E%3E\" rel=\"nofollow noreferrer\">you can convert an iterator over <code>Result</code>s into a <code>Result</code></a>.</p>\n\n<p>Note that you could make all this a bit more generic:</p>\n\n<ul>\n<li>The input does not need to be a <code>Vec</code>, it can be an <code>Iterator</code> over <code>String</code>s.</li>\n<li>We can parametrize it by the transformation function that converts a single <code>String</code> to a <code>Result&lt;String, bool&gt;</code>, or - to be more generic - to a <code>Result&lt;String, ErrorType&gt;</code> for some <code>ErrorType</code>.</li>\n<li>You do not necessarily need a <code>Vec</code> as the successfull return type, but anything implementing <code>FromIter</code> (which is - often - a container type).</li>\n</ul>\n\n<p>A first step to do this may look as follows:</p>\n\n<pre><code>fn do_some&lt;\n    ErrorType,\n    Tokens: std::iter::IntoIterator&lt;Item=String&gt;, // an iterable yielding String\n    StringToResult: Fn(String) -&gt; Result&lt;String, ErrorType&gt;,\n&gt;(\n    tokens: Tokens,\n    string_to_result: StringToResult,\n) -&gt; Result&lt;Vec&lt;String&gt;, ErrorType&gt; {\n    tokens\n        .into_iter()\n        .map(|s| string_to_result(s).map(|s| s + \"a\"))\n        .collect()\n}\n</code></pre>\n\n<p>which can be used as follows:</p>\n\n<pre><code>fn main() {\n    println!(\"{:?}\",\n        do_some(vec![\"i1\".to_string(), \"i2\".to_string(), \"i3\".to_string()], |s| {\n            if s.starts_with(\"i\") {\n                Ok(s)\n            } else {\n                Err(s + \" i does not start with i\")\n            }\n        })\n    );\n    println!(\"{:?}\",\n        do_some(vec![\"i1\".to_string(), \"i2\".to_string(), \"A3\".to_string()], |s| {\n            if s.starts_with(\"i\") {\n                Ok(s)\n            } else {\n                Err(s + \" i does not start with i\")\n            }\n        })\n    );\n}\n</code></pre>\n"}], "owner": {"reputation": 127, "user_id": 6748751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/879942233f1a467b2e158869153da800?s=128&d=identicon&r=PG&f=1", "display_name": "BinaryHexer", "link": "https://stackoverflow.com/users/6748751/binaryhexer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 53675675, "answer_count": 2, "score": -1, "last_activity_date": 1544211189, "creation_date": 1544089145, "last_edit_date": 1544189969, "question_id": 53648394, "link": "https://stackoverflow.com/questions/53648394/type-aware-map-when-using-iterator", "title": "Type aware Map when using Iterator", "body": "<p>I have the following code:</p>\n\n<pre><code>fn main() {\n    let xs = vec![\"1i32\".to_string(), \"2\".to_string(), \"3\".to_string()];\n    let ys = do_some(xs);\n    println!(\"{:?}\", ys);\n}\n\nfn do_some(tokens: Vec&lt;String&gt;) -&gt; Result&lt;Vec&lt;String&gt;, bool&gt; {\n    tokens\n        .into_iter()\n        .map(|token: String| Ok(token))\n        .map(|token: Result&lt;String, bool&gt;| token.map(|s| s + \"a\"))\n        .fold(Ok(Vec::new()), |acc, s| acc.push(s))\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=00e583be8f9398f09dce309f8c5bc1dd\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>After the line <code>.map(|token| Ok(token))</code>, I would expect that calling <code>map</code> would act on <code>Result</code> and not <code>Iterator</code> and thus be able to unwrap the <code>Result</code>, but I get <code>Result&lt;String, bool&gt;</code> as the output data:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `push` found for type `std::result::Result&lt;std::vec::Vec&lt;std::string::String&gt;, bool&gt;` in the current scope\n  --&gt; src/main.rs:12:44\n   |\n12 |         .fold(Ok(Vec::new()), |acc, s| acc.push(s))\n   |                                            ^^^^\n</code></pre>\n\n<p>What is the best way of writing functional-like code in Rust?</p>\n\n<p>I am aware of <code>and_then</code> but it seems to be unavailable to use in this chain.</p>\n"}, {"tags": ["windows", "winapi", "rust"], "answers": [{"comments": [{"owner": {"reputation": 884, "user_id": 9761034, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-tmCRdMuF26I/AAAAAAAAAAI/AAAAAAAAALk/-UqHQR1Lj-E/photo.jpg?sz=128", "display_name": "Joel Ellis", "link": "https://stackoverflow.com/users/9761034/joel-ellis"}, "edited": false, "score": 0, "creation_date": 1544186461, "post_id": 53668494, "comment_id": 94196883, "body": "BTW, as_ptr is gemerating stome weird results for me. sometimes there are loads of strange kanji and stuff popping up."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 884, "user_id": 9761034, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-tmCRdMuF26I/AAAAAAAAAAI/AAAAAAAAALk/-UqHQR1Lj-E/photo.jpg?sz=128", "display_name": "Joel Ellis", "link": "https://stackoverflow.com/users/9761034/joel-ellis"}, "edited": false, "score": 0, "creation_date": 1544190212, "post_id": 53668494, "comment_id": 94198821, "body": "@DerpMarine you are almost certainly either running into the analog of <a href=\"https://stackoverflow.com/questions/48235267/conversion-between-a-rust-str-and-fficstring-and-back-again-partially-corrupts\">this problem</a> or you&#39;ve forgotten your trailing <code>\\0</code>, or you aren&#39;t <a href=\"https://stackoverflow.com/questions/25197315/how-to-convert-rust-strings-to-utf-16\">converting to UTF-16 correctly</a>."}, {"owner": {"reputation": 884, "user_id": 9761034, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-tmCRdMuF26I/AAAAAAAAAAI/AAAAAAAAALk/-UqHQR1Lj-E/photo.jpg?sz=128", "display_name": "Joel Ellis", "link": "https://stackoverflow.com/users/9761034/joel-ellis"}, "edited": false, "score": 0, "creation_date": 1544190953, "post_id": 53668494, "comment_id": 94199204, "body": "I fixed it, by pushing \\0 onto the vec. <code>.push(0);</code>. (It&#39;s user input that I&#39;m dealing with.) Thanks!"}], "tags": [], "owner": {"reputation": 6165, "user_id": 1901658, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/95eee89c6704eb4d075c33821c61af72?s=128&d=identicon&r=PG", "display_name": "Fredrick Brennan", "link": "https://stackoverflow.com/users/1901658/fredrick-brennan"}, "is_accepted": true, "score": 3, "last_activity_date": 1544185374, "last_edit_date": 1544185374, "creation_date": 1544181523, "answer_id": 53668494, "question_id": 53648377, "link": "https://stackoverflow.com/questions/53648377/create-a-popup-in-rust-using-windows-apis/53668494#53668494", "title": "Create a popup in Rust using Windows APIs", "body": "<h1>main.rs</h1>\n\n<pre><code>extern crate winapi;\n\nuse std::ptr::null_mut as NULL;\nuse winapi::um::winuser;\n\nfn main() {\n    let l_msg: Vec&lt;u16&gt; = \"Wassa wassa wassup\\0\".encode_utf16().collect();\n    let l_title: Vec&lt;u16&gt; = \"\\u{20BF}itconnect\\0\".encode_utf16().collect();\n\n    unsafe {\n        winuser::MessageBoxW(NULL(), l_msg.as_ptr(), l_title.as_ptr(), winuser::MB_OK | winuser::MB_ICONINFORMATION);\n    }\n}\n</code></pre>\n\n<p>This uses the <a href=\"https://docs.rs/winapi/0.3.6/winapi/um/winuser/fn.MessageBoxW.html\" rel=\"nofollow noreferrer\">MessageBoxW function</a>.</p>\n\n<p>The argument <code>winuser::MB_OK</code> can be <code>winuser::MB_OK</code>, <code>winuser::MB_OKCANCEL</code>, <code>winuser::MB_ABORTRETRYIGNORE</code>, <code>winuser::MB_YESNOCANCEL</code>, <code>winuser::MB_YESNO</code>, <code>winuser::MB_RETRYCANCEL</code> or <code>winuser::MB_CANCELTRYCONTINUE</code>.</p>\n\n<p>The argument <code>winuser::MB_ICONINFORMATION</code> can be <code>winuser::MB_ICONHAND</code>, <code>winuser::MB_ICONQUESTION</code>, <code>winuser:: MB_ICONEXCLAMATION</code> or <code>winuser::MB_ICONASTERISK</code>.</p>\n\n<h1>Cargo.toml should include:</h1>\n\n<pre><code>[dependencies.winapi]\nversion = \"0.3\"\nfeatures = [\"winuser\"]\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/4NEKN.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/4NEKN.png\" alt=\"popup\"></a></p>\n"}], "owner": {"reputation": 884, "user_id": 9761034, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-tmCRdMuF26I/AAAAAAAAAAI/AAAAAAAAALk/-UqHQR1Lj-E/photo.jpg?sz=128", "display_name": "Joel Ellis", "link": "https://stackoverflow.com/users/9761034/joel-ellis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 654, "favorite_count": 0, "accepted_answer_id": 53668494, "answer_count": 1, "score": 1, "last_activity_date": 1544185374, "creation_date": 1544089072, "last_edit_date": 1544105257, "question_id": 53648377, "link": "https://stackoverflow.com/questions/53648377/create-a-popup-in-rust-using-windows-apis", "title": "Create a popup in Rust using Windows APIs", "body": "<p>I would like to create a dialog box or popup in Rust in a similar fashion to <a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/windows-scripting/x83z1d9f(v=vs.84)\" rel=\"nofollow noreferrer\">PowerShell</a>. </p>\n\n<p>I'm struggling to find documentation on the Windows APIs for this. The closest I've found so far is <a href=\"https://docs.microsoft.com/en-gb/windows/desktop/api/winuser/nf-winuser-createdialoga\" rel=\"nofollow noreferrer\">the <code>CreateDialogA</code> macro</a> (<a href=\"https://docs.rs/winapi/0.3.6/winapi/um/winuser/index.html\" rel=\"nofollow noreferrer\">Rust winapi equivalent</a>).</p>\n\n<p>I've found some things on it such as <a href=\"https://docs.microsoft.com/en-gb/cpp/windows/creating-a-new-dialog-box?view=vs-2017\" rel=\"nofollow noreferrer\">Creating a New Dialog Box (C++)</a>, but most of it is not applicable to a Rust project.</p>\n\n<p>Perhaps <a href=\"https://docs.microsoft.com/en-us/windows/desktop/menurc/dialogex-resource\" rel=\"nofollow noreferrer\">dialoge template</a> is relevant?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 6, "creation_date": 1544085174, "post_id": 53644810, "comment_id": 94153029, "body": "These operators also have non-short-circuiting variants <code>|</code> and <code>&amp;</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1544105003, "post_id": 53644810, "comment_id": 94164547, "body": "It&#39;s not really a <b>bug</b> \u2014 it&#39;s code that hasn&#39;t been implemented yet and is disallowed."}], "tags": [], "owner": {"reputation": 311, "user_id": 8646013, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61ca107434f864680be832adddfbf22c?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/8646013/user"}, "is_accepted": true, "score": 10, "last_activity_date": 1617352762, "last_edit_date": 1617352762, "creation_date": 1544071494, "answer_id": 53644810, "question_id": 53644809, "link": "https://stackoverflow.com/questions/53644809/do-logical-operators-short-circuit-in-rust/53644810#53644810", "title": "Do logical operators short-circuit in Rust?", "body": "<p>Yes.</p>\n<p>From the <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#lazy-boolean-operators\" rel=\"nofollow noreferrer\">Rust reference</a>:</p>\n<pre><code>fn main() {\n    let x = false || true; // true\n    let y = false &amp;&amp; panic!(); // false, doesn't evaluate `panic!()`\n}\n</code></pre>\n"}], "owner": {"reputation": 311, "user_id": 8646013, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61ca107434f864680be832adddfbf22c?s=128&d=identicon&r=PG&f=1", "display_name": "user", "link": "https://stackoverflow.com/users/8646013/user"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2209, "favorite_count": 0, "accepted_answer_id": 53644810, "answer_count": 1, "score": 11, "last_activity_date": 1617352762, "creation_date": 1544071494, "last_edit_date": 1544104952, "question_id": 53644809, "link": "https://stackoverflow.com/questions/53644809/do-logical-operators-short-circuit-in-rust", "title": "Do logical operators short-circuit in Rust?", "body": "<p>Do <code>&amp;&amp;</code> and <code>||</code> stop evaluating as soon as a result is known?\nIn other words will <code>(true == true) || (true == false)</code> not evaluate the right side because the whole expression is known to be <code>true</code> after only evaluating the left side.</p>\n"}, {"tags": ["rust", "travis-ci", "cross-compiling", "cc", "rust-crates"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544064769, "post_id": 53643737, "comment_id": 94146854, "body": "By installing the program <code>cc</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1544064836, "post_id": 53643737, "comment_id": 94146873, "body": "See also <a href=\"https://stackoverflow.com/q/52445961/155423\">How do I fix the Rust error \u201clinker &#39;cc&#39; not found\u201d for Debian on Windows 10?</a> / <a href=\"https://stackoverflow.com/q/29023305/155423\">Could not exec the linker <code>cc</code> error when running \u201ccargo build\u201d</a>"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1544172289, "post_id": 53653737, "comment_id": 94189656, "body": "I am really rooting for lld. A single linker capable of handling many different architectures right out of the box? That&#39;s how you streamline cross-compilation!"}], "tags": [], "owner": {"reputation": 9936, "user_id": 6525260, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-DdsW6uGdpjg/AAAAAAAAAAI/AAAAAAAAAAw/srXxxqCzyW0/photo.jpg?sz=128", "display_name": "Arnav Borborah", "link": "https://stackoverflow.com/users/6525260/arnav-borborah"}, "is_accepted": true, "score": 2, "last_activity_date": 1544107032, "creation_date": 1544107032, "answer_id": 53653737, "question_id": 53643737, "link": "https://stackoverflow.com/questions/53643737/linker-cc-not-found-when-cross-compiling-simple-crate-on-travis-ci/53653737#53653737", "title": "Linker cc not found when cross-compiling simple crate on Travis CI", "body": "<p>Well, after experimenting and more googling, I changed my apt install command to:</p>\n\n<pre><code>sudo apt-get install -y gcc-4.8 cpp-4.8 gcc-multilib\n</code></pre>\n\n<p>(The first two are unmet dependencies of the third, which had to be manually installed).</p>\n\n<p>Now the build runs properly.</p>\n"}], "owner": {"reputation": 9936, "user_id": 6525260, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh6.googleusercontent.com/-DdsW6uGdpjg/AAAAAAAAAAI/AAAAAAAAAAw/srXxxqCzyW0/photo.jpg?sz=128", "display_name": "Arnav Borborah", "link": "https://stackoverflow.com/users/6525260/arnav-borborah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 970, "favorite_count": 0, "accepted_answer_id": 53653737, "answer_count": 1, "score": 1, "last_activity_date": 1544107032, "creation_date": 1544063341, "last_edit_date": 1544064737, "question_id": 53643737, "link": "https://stackoverflow.com/questions/53643737/linker-cc-not-found-when-cross-compiling-simple-crate-on-travis-ci", "title": "Linker cc not found when cross-compiling simple crate on Travis CI", "body": "<p>As part of one of my projects, I have to cross-compile a Rust crate from <code>x86_64</code> to <code>i686</code> on Linux. I'm currently using Travis CI for this, with a simple <a href=\"https://github.com/arnavb/test-rust-deploy-releases\" rel=\"nofollow noreferrer\">Hello World</a> crate (the default binary crate). My Travis CI configuration for the relevant matrix entry is:</p>\n\n<pre><code># ...\n\nmatrix:\n  include:\n    # ...\n    - os: linux\n      rust: 1.30.0\n      before_script:\n        - sudo apt-get update\n        - sudo apt-get install -y libc6-dev:i386\n      env: TARGET=i686-unknown-linux-gnu\n  # ...\n\nscript:\n  - rustup target install $TARGET\n  - cargo build --release --target=$TARGET\n</code></pre>\n\n<p>Unfortunately, when I push this configuration to Travis CI, I get a <a href=\"https://travis-ci.org/arnavb/test-rust-deploy-releases/jobs/463891352#L772\" rel=\"nofollow noreferrer\">build error</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build --release --target=$TARGET\n   Compiling test-rust-deploy-releases v0.1.0 (/home/travis/build/arnavb/test-rust-deploy-releases)\nerror: linker `cc` not found\n  |\n  = note: No such file or directory (os error 2)\n\nerror: aborting due to previous error\n\nerror: Could not compile `test-rust-deploy-releases`.\nTo learn more, run the command again with --verbose.\nThe command \"cargo build --release --target=$TARGET\" exited with 101.\n</code></pre>\n\n<p>How do I fix this?</p>\n"}]