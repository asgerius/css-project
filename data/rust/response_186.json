[{"tags": ["rust", "type-inference"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533157515, "post_id": 51641834, "comment_id": 90248956, "body": "What is the type of <code>number</code> then? Should it <i>change</i> at runtime? Why do you think this code has anything to do with inference?"}, {"owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533157755, "post_id": 51641834, "comment_id": 90249034, "body": "It&#39;s an i32...   If I change <i>condition</i>, then the compiled type could be changed to a String.  I get that there are more complex examples where the type is ambiguous, but it seems pretty simple to handle this sort of case: a good compiler is likely to optimize away the redundant conditional statement anyway. When it does that, it&#39;ll be left with an unambiguous type (since the expression resolves to 5)."}, {"owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533157873, "post_id": 51641834, "comment_id": 90249088, "body": "@Shepmaster I think it has to do with type inference because the canonical book for learning the language explicitly says it has to do with type inference...  The type doesn&#39;t need to change at runtime, because it can be explicitly inferred at compile time in the given example."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 3, "creation_date": 1533157970, "post_id": 51641834, "comment_id": 90249133, "body": "It&#39;s not a type inference concern. Even if you explicitly put <code>let number: i32 = ...</code>, it still won&#39;t compile."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533158016, "post_id": 51641834, "comment_id": 90249156, "body": "<i>the canonical book for learning the language explicitly says it has to do with type inference</i> \u2014 the word &quot;infer&quot; doesn&#39;t appear anywhere <a href=\"https://doc.rust-lang.org/book/second-edition/ch03-05-control-flow.html\" rel=\"nofollow noreferrer\">on the page you linked</a>; that&#39;s why I&#39;m confused at the connection between the two."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1533158176, "post_id": 51641834, "comment_id": 90249204, "body": "<i>it seems pretty simple to handle this sort of case</i> \u2014 Let&#39;s say this feature existed; under what circumstances would you find it useful? You can&#39;t rely on it because as soon as the condition isn&#39;t trivially evaluated then your code can no longer compile."}, {"owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533158309, "post_id": 51641834, "comment_id": 90249247, "body": "@Shepmaster I don&#39;t expect it&#39;s very useful most of the time, but I&#39;ve written things like it when I wrote a type system into an interpreter for a Forth dialect.   The question is simply <i>why</i> it doesn&#39;t do inference here. If the answer is &quot;This case is not common enough to be worth handling&quot;, that&#39;s not the same as the one the book gave (which was the source of my confusion)."}, {"owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533158510, "post_id": 51641834, "comment_id": 90249321, "body": "@Shepmaster Also, regarding the book, you&#39;re right that it doesn&#39;t explicitly say type inference, but come on: the type of <i>number</i> is not explicitly stated, so it must be inferred by the compiler. My question is about why it doesn&#39;t handle this inference. What tag would you rather this be filed under?"}, {"owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1533158610, "post_id": 51641834, "comment_id": 90249360, "body": "@WesleyWiser Great, that sounds like an answer that you should post. Maybe I asked this question strangely, but I&#39;m surprised by the hostile response from the community at large. I really want to know why the language was designed this way. It&#39;s clearly not for the reason given in the book."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1533158690, "post_id": 51641834, "comment_id": 90249381, "body": "I also find it interesting that you&#39;ve decided to not quote the preceding two sentences (emphasis mine): <i>The expression in the <code>if</code> block evaluates to an integer, and the expression in the <code>else</code> block evaluates to a string. This won\u2019t work because <b>variables must have a single type</i></b>. And like SilvioMayolo mentions, you can give explicit types to everything here, removing any inference."}, {"owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1533158858, "post_id": 51641834, "comment_id": 90249438, "body": "@WesleyWiser Fair enough. Thanks for the constructive work anyway."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1533158866, "post_id": 51641834, "comment_id": 90249443, "body": "There&#39;s no hostility intended, just actual, honest perplexity. You would prefer to use a language where <code>typeof(if A { X } else { Y })</code> is determined by <code>A</code>, <code>X</code> and <code>Y</code> instead of just <code>X</code> (so long as <code>X</code> == <code>Y</code>) and that&#39;s confusing to me. There&#39;s no reason for the compiler writers to spend time working on such features that have such limited use that seemingly no one wants."}, {"owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533159166, "post_id": 51641834, "comment_id": 90249546, "body": "@Shepmaster It&#39;s really not a question of preference. The book says the type is indeterminate because it would make the compiler &quot;more complex and would make fewer guarantees&quot;. It&#39;s clear that, in this case, the complexity added is close to zero (just check the type after checking whether you can optimize out the conditional), and there&#39;s no change in the guarantees it can make. I don&#39;t need this feature, I just want to know why it&#39;s not there.  Also, I mean this in the best possible way, but if this is &quot;no hostility intended&quot; for you, you should take a course in interpersonal communication."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533159526, "post_id": 51641834, "comment_id": 90249664, "body": "<i>the complexity added is close to zero (just check the type after checking whether you can optimize out the conditional)</i> \u2014 If that&#39;s the case, then submit an RFC to change the language, ideally with a parallel pull request implementing the feature. I would guess that everything is on the complete other side of the coin, that it&#39;s <b>not trivial</b> to add. Since no one wants it, no one has added it. Why waste time developing such a feature?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533159731, "post_id": 51641834, "comment_id": 90249723, "body": "As for the book, the text isn&#39;t intending for you to focus on the fact that <code>condition = true</code>. Instead, pretend that the code is <code>fn example(condition: boolean) { let number = if condition { 5 } else { &quot;six&quot; }; println!(&quot;The value of number is: {}&quot;, number); }</code>. In that case, the value of <code>condition</code> is indeterminate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "edited": false, "score": 0, "creation_date": 1533160257, "post_id": 51641834, "comment_id": 90249892, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/177232/discussion-between-shepmaster-and-john-doucette\">continue this discussion in chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533160097, "post_id": 51642696, "comment_id": 90249838, "body": "Could you annotate which of these reasons are the ones that the Rust language has chosen? These all feel opinion based."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533160138, "post_id": 51642696, "comment_id": 90249858, "body": "<i>Compiler internals exposed</i> \u2014 this can be solved by only relying on <code>const fn</code>"}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1533160140, "post_id": 51642696, "comment_id": 90249859, "body": "It\u2019s worth noting that the idea of a \u201ccompile-time constant\u201d isn\u2019t an implementation detail for C or C++."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1533160560, "post_id": 51642696, "comment_id": 90249990, "body": "@DietrichEpp even there, it kind of is. The standards guarantee some of it, but most compilers are able to do a lot more that what the standard mandates (which is good), and expose it sometimes without the user&#39;s knowledge (which is less good). Work on C++ <code>constexpr</code>s has made dealing with this simpler and more consistent, but I&#39;m pretty sure some compiler will accept more than other even when they both claim to follow the standard."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1533219337, "post_id": 51642696, "comment_id": 90275220, "body": "@mcarton: So you&#39;re saying that some compilers are more permissive and accept code that other compilers don&#39;t accept, therefore it is better to not do any constant folding in the type checker? I&#39;m not sure I follow the argument. The fact that some compilers are more permissive than others is pervasive and affects programs in many ways, the identification of compile-time constants doesn&#39;t seem special. The idea that it &quot;depends on how smart this version of your compiler is&quot; is too much of an exaggeration these days."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1533224708, "post_id": 51642696, "comment_id": 90278912, "body": "I&#39;m not saying they shouldn&#39;t do constant folding, of course they should! I&#39;m saying a some implementation details still leak to the user and some compiler are able to do more (rather than being more permissive). Also, <code>constexpr</code> has little to do with constant folding (as in, you don&#39;t need to use <code>constexpr</code> to get constant folding, and compilers can do fold a lot more than what the standard mandates they do)."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1533224791, "post_id": 51642696, "comment_id": 90278955, "body": "And &quot;depends on how smart this version of your compiler is&quot; doesn&#39;t hold for desktops, but it still holds on industrial embedded platforms were you get shipped with a basically undocumented compiler that support some kind of C bastard. Those are great. But yeah, that&#39;s not relevant to the OP."}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": false, "score": 11, "last_activity_date": 1533159982, "creation_date": 1533159982, "answer_id": 51642696, "question_id": 51641834, "link": "https://stackoverflow.com/questions/51641834/why-cant-rust-do-more-complex-type-inference/51642696#51642696", "title": "Why can&#39;t Rust do more complex type inference?", "body": "<p>There are three main reasons I can think of:</p>\n\n<h2>1. Action at a distance effects</h2>\n\n<p>Let's suppose the language worked that way. Since we're extending type inference, we might as well make the language even smarter and have it infer return types as well. This allows me to write something like:</p>\n\n<pre><code>pub fn get_flux_capacitor() {\n  let is_prod = true;\n\n  if is_prod { FluxCapacitor::new() } else { MovieProp::new() }\n}\n</code></pre>\n\n<p>And elsewhere in my project, I can get a <code>FluxCapacitor</code> by calling that function. However, one day, I change <code>is_prod</code> to <code>false</code>. Now, instead of getting an error that my function is returning the wrong type, I will get errors at <strong>every</strong> callsite. A small change inside one function has lead to errors in entirely unchanged files! That's pretty weird.</p>\n\n<p>(If we don't want to add inferered return types, just imagine it's a very long function instead.)</p>\n\n<h2>2. Compiler internals exposed</h2>\n\n<p>What happens in the case where it's not so simple? Surely this should be the same as the above example:</p>\n\n<pre><code>pub fn get_flux_capacitor() {\n  let is_prod = (1 + 1) == 2;\n\n  ...\n}\n</code></pre>\n\n<p>But how far does that extend? The compiler's constant propagation is mostly an implementation detail. You don't want the types in your program to depend on how smart this version of the compiler is.</p>\n\n<h2>3. What did you actually mean?</h2>\n\n<p>As a human looking at this code, it looks like something is missing. Why are you branching on <code>true</code> at all? Why not just write <code>FluxCapacitor::new()</code>? Perhaps there's logic missing to check and see if a <code>env=DEV</code> environment variable is missing. Perhaps a trait object should actually be used so that you can take advantage of runtime polymorphism.</p>\n\n<p>In this kind of situation where you're asking the computer to do something that doesn't seem quite right, Rust often chooses to throw its hands up and ask you to fix the code.</p>\n"}, {"tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": 2, "last_activity_date": 1533214131, "last_edit_date": 1533214131, "creation_date": 1533202339, "answer_id": 51650192, "question_id": 51641834, "link": "https://stackoverflow.com/questions/51641834/why-cant-rust-do-more-complex-type-inference/51650192#51650192", "title": "Why can&#39;t Rust do more complex type inference?", "body": "<p>You're right, in this very specific case (where <code>condition=true</code> statically), the compiler could be made able to detect that the <code>else</code> branch is unreachable and therefore <code>number</code> must be 5.</p>\n\n<p>This is just a contrived example, though... in the more general case, the value of <code>condition</code> would only be dynamically known at runtime.\nIt's in that case, as other have said, that inference becomes hard to implement.</p>\n\n<p>On that topic, there are two things I haven't seen mentioned yet.</p>\n\n<ol>\n<li>The Rust language design tends to err on the side of doing things as\nexplicitly as possible </li>\n<li>Rust type inference is only local</li>\n</ol>\n\n<p>On point #1, the explicit way for Rust to deal with the \"this type can be one of multiple types\" use case are <a href=\"https://doc.rust-lang.org/book/second-edition/ch06-01-defining-an-enum.html\" rel=\"nofollow noreferrer\">enums</a>.\nYou can define something like this:</p>\n\n<pre><code>#[derive(Debug)]\nenum Whatsit {\n    Num(i32),\n    Text(&amp;'static str),\n}\n</code></pre>\n\n<p>and then do <code>let number = if condition { Num(5) } else { Text(\"six\") };</code></p>\n\n<p>On point #2, let's see how the enum (while wordier) is the preferred approach in the language. In the example from the book we just try printing the value of <code>number</code>. \nIn a more real-case scenario we would at one point use <code>number</code> for something other than printing.</p>\n\n<p>This means passing it to another function or including it in another type. Or (to even enable use of <code>println!</code>) implementing the <code>Debug</code> or <code>Display</code> traits on it. Local inference means that (if you can't name the type of <code>number</code> in Rust), you would not be able to do any of these things.\nSuppose you want to create a function that does something with a <code>number</code>;\nwith the enum you would write:</p>\n\n<pre><code>fn do_something(number: Whatsit)\n</code></pre>\n\n<p>but without it...</p>\n\n<pre><code>fn do_something(number: /* what type is this? */)\n</code></pre>\n\n<p>In a nutshell, you're right that in principle it IS doable for the compiler to synthesize a type for <code>number</code>. For instance, the compiler might create an anonymous enum like <code>Whatsit</code> above when compiling that code. \nBut you - the programmer - would not know the name of that type, would not be able to refer to it, wouldn't even know what you can do with it (can I multiply two \"numbers\"?) and this would greatly limit its usefulness. </p>\n\n<p>A similar approach was followed for instance to add closures to the language. The compiler would know what specific type a closure has, but you, the programmer, would not. If you're interested I can try finding out discussions on the difficulties that the approach introduced in the design of the language. </p>\n"}], "owner": {"reputation": 3942, "user_id": 747916, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e780eae6ca6a0b5d0d4705259f9da879?s=128&d=identicon&r=PG", "display_name": "John Doucette", "link": "https://stackoverflow.com/users/747916/john-doucette"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 635, "favorite_count": 0, "closed_date": 1533416135, "answer_count": 2, "score": -1, "last_activity_date": 1533214131, "creation_date": 1533155494, "last_edit_date": 1533159799, "question_id": 51641834, "link": "https://stackoverflow.com/questions/51641834/why-cant-rust-do-more-complex-type-inference", "closed_reason": "Opinion-based", "title": "Why can&#39;t Rust do more complex type inference?", "body": "<p>In <a href=\"https://doc.rust-lang.org/book/second-edition/ch03-05-control-flow.html\" rel=\"nofollow noreferrer\">Chapter 3</a> of <em>The Rust Programming Language</em>, the following code is used as an example for a kind of type inference that Rust cannot manage:</p>\n\n<pre><code>fn main() {\n    let condition = true;\n\n    let number = if condition { 5 } else { \"six\" };\n\n    println!(\"The value of number is: {}\", number);\n}\n</code></pre>\n\n<p>with the explanation that:</p>\n\n<blockquote>\n  <p>Rust needs to know at compile time what type the <code>number</code> variable is, definitively, so it can verify at compile time that its type is valid everywhere we use <code>number</code>. Rust wouldn\u2019t be able to do that if the type of <code>number</code> was only determined at runtime; the compiler would be more complex and would make fewer guarantees about the code if it had to keep track of multiple hypothetical types for any variable.</p>\n</blockquote>\n\n<p>I'm not certain I understand the rationale, because the example does seem like something where a simple compiler could infer the type.</p>\n\n<p>What exactly makes this kind of type inference so difficult? In this case, the value of <em>condition</em> can be clearly inferred at compile time (it's true), and so thus the type of number can be too (it's <code>i32</code>?). </p>\n\n<p>I can see how things <em>could</em> become a lot more complicated, if you were trying to infer types across multiple compilation units for instance, but is there something about this specific example that would add a lot of complexity to the compiler?</p>\n"}, {"tags": ["rust", "bigint"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1533152810, "creation_date": 1533152810, "answer_id": 51641222, "question_id": 51640381, "link": "https://stackoverflow.com/questions/51640381/how-do-i-generate-a-random-numbiguint/51641222#51641222", "title": "How do I generate a random num::BigUint?", "body": "<p>From the README of <code>num</code>:</p>\n\n<blockquote>\n  <p>The <code>rand</code> feature enables randomization traits in <code>num-bigint</code> and <code>num-complex</code>.</p>\n</blockquote>\n\n<pre class=\"lang-none prettyprint-override\"><code>[dependencies]\nnum-bigint = { version = \"0.2.0\", features = [\"rand\"] }\nrand = \"0.5.4\"\n</code></pre>\n\n<p>Then you need to use a <a href=\"https://docs.rs/num-bigint/0.2.0/num_bigint/struct.RandomBits.html\" rel=\"noreferrer\"><code>RandomBits</code></a> which implements <a href=\"https://docs.rs/rand/0.5.4/rand/distributions/trait.Distribution.html\" rel=\"noreferrer\"><code>rand::Distribution</code></a>:</p>\n\n<pre><code>extern crate num_bigint;\nextern crate rand;\n\nuse num_bigint::{BigInt, BigUint, RandomBits};\nuse rand::Rng;\n\nfn main() {\n    let mut rng = rand::thread_rng();\n\n    let signed: BigInt = rng.sample(RandomBits::new(256));\n    let unsigned: BigUint = rng.sample(RandomBits::new(256));\n\n    println!(\"{}, {}\", signed, unsigned)\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 15, "user_id": 6402360, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-a4zvFOFuJHQ/AAAAAAAAAAI/AAAAAAAAEHE/Yoig31FVz58/photo.jpg?sz=128", "display_name": "MSB", "link": "https://stackoverflow.com/users/6402360/msb"}, "is_accepted": false, "score": 1, "last_activity_date": 1559370137, "creation_date": 1559370137, "answer_id": 56404365, "question_id": 51640381, "link": "https://stackoverflow.com/questions/51640381/how-do-i-generate-a-random-numbiguint/56404365#56404365", "title": "How do I generate a random num::BigUint?", "body": "<p>Shepmaster's answer was raising a trait bound error in more recent versions of rand. Got this to work:</p>\n\n<p>Cargo.toml</p>\n\n<pre><code>edition = \"2018\"\n\n[dependencies]\nrand = \"0.6\"\nnum-bigint = { version = \"0.2.2\", features = [\"rand\"] }\n</code></pre>\n\n<p>main.rs</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use num_bigint::{BigUint, RandBigInt};\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let unsigned: BigUint = rng.gen_biguint(256);\n    println!(\"{}\", unsigned);  \n}\n</code></pre>\n"}], "owner": {"reputation": 2512, "user_id": 5808553, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/6be8254e63e22cc820bb14938d532814?s=128&d=identicon&r=PG&f=1", "display_name": "Rajeev Ranjan", "link": "https://stackoverflow.com/users/5808553/rajeev-ranjan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 537, "favorite_count": 0, "accepted_answer_id": 51641222, "answer_count": 2, "score": 1, "last_activity_date": 1559370137, "creation_date": 1533149360, "last_edit_date": 1533152852, "question_id": 51640381, "link": "https://stackoverflow.com/questions/51640381/how-do-i-generate-a-random-numbiguint", "title": "How do I generate a random num::BigUint?", "body": "<p>I need a random 256-bit unsigned  number. I discovered that there is the <a href=\"https://docs.rs/num-bigint/0.2.0/num_bigint/trait.RandBigInt.html\" rel=\"nofollow noreferrer\"><code>RandBigInt</code></a> trait with the method <code>gen_biguint()</code>, but I am having a tough time finding an implementation for it. </p>\n\n<p>I tried doing this some time ago for <code>BigInt</code>. The crates have been updated since. This is how I am using it to get a <code>BigUint</code> now.</p>\n\n<pre><code>extern crate num;\nextern crate rand;\n\nuse num::bigint::{BigInt, BigUint, RandBigInt};\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let mut n: BigUint = BigUint::default();\n    loop {\n        let bigUint: Option&lt;BigUint&gt; = rng.gen_bigint(256).to_biguint();\n        match bigUint {\n            Some(num) =&gt; {\n                n = num.clone();\n                println!(\"Found the 1st BigUint - {}\", num);\n                break;\n            }\n            _ =&gt; {}\n        }\n    }\n}\n</code></pre>\n\n<p>Contents from my <strong>Cargo.toml</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>num = \"0.1.42\"\nrand = \"0.4.2\"\n</code></pre>\n\n<p>I am sure there must be some straight-forward way of achieving this. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1533148614, "post_id": 51638863, "comment_id": 90244772, "body": "You can make it compile separating the trait in two: <code>trait FamilyBase { type Out; }</code> to define the types, and <code>trait Family&lt;&#39;a&gt; : FamilyBase { }</code> to do the real work. A bit hacky, maybe..."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1533149914, "post_id": 51638863, "comment_id": 90245392, "body": "@rodrigo Thanks for the idea! The problem with that approach is that the implementer needs the ability to use the lifetime parameter in the <code>Out</code> type. Like <code>impl&lt;&#39;a&gt; Family&lt;&#39;a&gt; for Bar { type Out = &amp;&#39;a bool; }</code>. That&#39;s not possible with your two traits idea :/"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1533151029, "post_id": 51638863, "comment_id": 90245938, "body": "I see. What about this: add this function to <code>trait Family</code>: <code>fn zero() -&gt; Self::Out;</code>. then in <code>Iterator::next()</code> just call <code>&lt;Self::Item as Family&lt;&#39;s&gt;&gt;::zero()</code>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1533154077, "post_id": 51638863, "comment_id": 90247431, "body": "@rodrigo I just edited my question because I apparently I wasn&#39;t clear enough in that regard: I don&#39;t always want to return 0, but calculate this somehow. And I actually don&#39;t always want <code>u32</code>, but arbitrary types. So &quot;return some value of the type&quot; (like <code>zero()</code> does), doesn&#39;t always work."}, {"owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1533189939, "post_id": 51638863, "comment_id": 90256777, "body": "If you shift the trait constraint from the <code>next</code> function to the whole <code>Iterator</code> trait (i.e. <code>type Item: Family&lt;&#39;a&gt;</code>) you can get it to compile. This does require adding a lifetime to <code>Iterator</code> though. <a href=\"https://play.rust-lang.org/?gist=2dbea94f6311fd042c8a5f156feec9ba&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 0, "creation_date": 1533193803, "post_id": 51638863, "comment_id": 90258620, "body": "Would using HRTB (<code>for&lt;&#39;t&gt; Self::Item: Family&lt;&#39;t&gt;</code>) in the trait definition of <code>next</code> work for you? <a href=\"https://play.rust-lang.org/?gist=e3b3b1f763cb8bce9e3d8808044ca5c1&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1533203408, "post_id": 51638863, "comment_id": 90264391, "body": "@Kwarrtz Sadly, this doesn&#39;t work in my situation. I cannot have a lifetime parameter on the trait."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 0, "creation_date": 1533203417, "post_id": 51638863, "comment_id": 90264400, "body": "@Calculator Similarly here, I unfortunately cannot use HRTBs. But thanks for your ideas! As you can see, I edited the question again and assume that this is a compiler bug :/"}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 0, "creation_date": 1533212846, "post_id": 51638863, "comment_id": 90270555, "body": "How does it come though that HRTBs are not an option? Do you have an example where the <code>Self::Item: Family&lt;&#39;s&gt;</code> bound would provide more flexibility when calling or implementing <code>next</code> compared to <code>for&lt;&#39;t&gt; Self::Item: Family&lt;&#39;t&gt;</code> (considering that <code>Self::Item</code> can be cast to <code>Family&lt;&#39;s&gt;</code>)?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 0, "creation_date": 1533214428, "post_id": 51638863, "comment_id": 90271620, "body": "@Calculator The complete explanation doesn&#39;t fit into the comment section. But the gist: if you have a family with <code>Out = &amp;&#39;a T</code>, then <code>T</code> has to be bounded by <code>&#39;a</code>. When you now say <code>Item: for&lt;&#39;a&gt; Family&lt;&#39;a&gt;</code>, it is equivalent to <code>T: &#39;static</code>. This is a notable restriction. But again, this whole topic is a bit complicated and I think it isn&#39;t really necessary to explain everything for this question. (If you want to <a href=\"https://chat.stackoverflow.com/rooms/62927/rust\">join us in chat</a>, I could elaborate further, if you&#39;d like to)"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1542826895, "post_id": 53412912, "comment_id": 93711930, "body": "The <code>Iterator</code> trait in my question is self-made and not the official one from <code>std</code>. And in my trait, I don&#39;t return <code>Option&lt;Self::Item&gt;</code> but the associated <code>Out</code> type. And in any case, I can&#39;t just use <code>&#39;static</code> for several reasons. But thanks for your answer :) ! If you&#39;re interested, my question came up while writing <a href=\"http://lukaskalbertodt.github.io/2018/08/03/solving-the-generalized-streaming-iterator-problem-without-gats.html\" rel=\"nofollow noreferrer\">this blog post</a>. It should explain my weird requirements."}], "tags": [], "owner": {"reputation": 672, "user_id": 983541, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0a3784a7fb0509980072272c7704306?s=128&d=identicon&r=PG", "display_name": "Kosta", "link": "https://stackoverflow.com/users/983541/kosta"}, "is_accepted": false, "score": 0, "last_activity_date": 1542806192, "creation_date": 1542806192, "answer_id": 53412912, "question_id": 51638863, "link": "https://stackoverflow.com/questions/51638863/expected-associated-type-found-u32-when-using-the-lifetime-of-a-parameter-a/53412912#53412912", "title": "&quot;Expected associated type, found `u32`&quot; when using the lifetime of a parameter as trait parameter in where bound", "body": "<pre><code>struct U32Family;\n...\nimpl Iterator for Foo {\ntype Item = U32Family;\n</code></pre>\n\n<p>So next() must return <code>Option&lt;U32Family&gt;</code>, whose only possible values are <code>None</code> and <code>Some(U32Family{})</code></p>\n\n<p>You probably want <code>Item = &lt;U32Family as Family&lt;'static&gt;::Out</code> which fixes this issue but creates some lifetime issues. (The Item needs a lifetime because Family has one, but you only accept a lifetime on <code>next()</code>)</p>\n"}, {"tags": [], "owner": {"reputation": 799, "user_id": 3096774, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/1dd1ee89121ffeb86343b5e70b20beb1?s=128&d=identicon&r=PG&f=1", "display_name": "apt1002", "link": "https://stackoverflow.com/users/3096774/apt1002"}, "is_accepted": false, "score": 2, "last_activity_date": 1544069218, "creation_date": 1544069218, "answer_id": 53644516, "question_id": 51638863, "link": "https://stackoverflow.com/questions/51638863/expected-associated-type-found-u32-when-using-the-lifetime-of-a-parameter-a/53644516#53644516", "title": "&quot;Expected associated type, found `u32`&quot; when using the lifetime of a parameter as trait parameter in where bound", "body": "<p>I think the problem is that it is a \"coincidence\" that <code>&lt;Self::Item as Family&lt;'s&gt;&gt;::Out</code> is <code>u32</code> for all <code>'s</code>. The compiler can prove it for any <code>'s</code> you want, but it can't even express the concept that it is true for all <code>'s</code>.</p>\n\n<p>The work-around you have found is the right approach: add a method to <code>U32Family</code> which converts a <code>u32</code> into a <code>&lt;Self as Family&lt;'a&gt;&gt;::Out</code>. The body of the method is entirely inside the scope of <code>'a</code>, so the compiler can prove that the conversion is type-correct for that <code>'a</code>, and therefore that the method is type-correct. Then, at the call-site, you're telling the compiler to use its knowledge about the method.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1084, "favorite_count": 2, "answer_count": 2, "score": 15, "last_activity_date": 1544069218, "creation_date": 1533143610, "last_edit_date": 1533203233, "question_id": 51638863, "link": "https://stackoverflow.com/questions/51638863/expected-associated-type-found-u32-when-using-the-lifetime-of-a-parameter-a", "title": "&quot;Expected associated type, found `u32`&quot; when using the lifetime of a parameter as trait parameter in where bound", "body": "<p>I tried to compile this code (<a href=\"https://play.rust-lang.org/?gist=43b9ecf10d3f5a16b8c54db9ab05a102&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>trait Family&lt;'a&gt; {\n    type Out;\n}\n\nstruct U32Family;\nimpl&lt;'a&gt; Family&lt;'a&gt; for U32Family {\n    type Out = u32;\n}\n\n\ntrait Iterator {\n    type Item;\n    fn next&lt;'s&gt;(&amp;'s mut self) -&gt; &lt;Self::Item as Family&lt;'s&gt;&gt;::Out\n    where\n        Self::Item: Family&lt;'s&gt;;\n}\n\n\nstruct Foo;\nimpl Iterator for Foo {\n    type Item = U32Family;\n\n    fn next&lt;'s&gt;(&amp;'s mut self) -&gt; &lt;Self::Item as Family&lt;'s&gt;&gt;::Out\n    where\n        Self::Item: Family&lt;'s&gt;,\n    {\n        0u32  // &lt;-- in real code, this is somehow calculated\n    }\n}\n</code></pre>\n\n<p>But sadly, it results in this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:28:9\n   |\n24 |     fn next&lt;'s&gt;(&amp;'s mut self) -&gt; &lt;Self::Item as Family&lt;'s&gt;&gt;::Out\n   |                                  ------------------------------- expected `&lt;U32Family as Family&lt;'s&gt;&gt;::Out` because of return type\n...\n28 |         0u32\n   |         ^^^^ expected associated type, found u32\n   |\n   = note: expected type `&lt;U32Family as Family&lt;'s&gt;&gt;::Out`\n              found type `u32`\n</code></pre>\n\n<p>I really don't understand why. Obviously, in this code snippet, <code>&lt;U32Family as Family&lt;'s&gt;&gt;::Out</code> is exactly <code>u32</code>. But Rust seems to think that it's <em>not always</em> the same. <strong>Why? And how can I make it compile?</strong></p>\n\n<p>Some notes:</p>\n\n<ul>\n<li>There are a bunch of similar situations where a similar error occurs, but I think this is different from everything I've seen so far.</li>\n<li>I cannot use <code>type Out: for&lt;'a&gt; Family&lt;'a&gt;;</code>. So that's not a workaround that works for me.</li>\n<li>If I remove the lifetime parameter of <code>Family</code>, everything works.</li>\n<li>If I replace <code>Family&lt;'s&gt;</code> with <code>Family&lt;'static&gt;</code> in the function signature, everything works.</li>\n</ul>\n\n<hr>\n\n<p><strong>EDIT</strong>: I can work around this problem by adding:</p>\n\n<pre><code>impl U32Family {\n    fn from&lt;'a&gt;(v: u32) -&gt; &lt;Self as Family&lt;'a&gt;&gt;::Out {\n        v\n    }\n}\n</code></pre>\n\n<p>Then I can just say <code>Self::Item::from(0u32)</code> in the body of <code>next()</code>. (<a href=\"https://play.rust-lang.org/?gist=994d9c7f8a75cf89606b7a550c53ec28&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>I think it's clear why the error in <code>next()</code> is gone: <code>U32Family::from</code> always takes <code>u32</code> as argument. Hardcoded. Never changing. The bigger question about this workaround is: why does the <code>from()</code> method compile fine? So in <code>from()</code> the compiler somehow knows that <code>&lt;Self as Family&lt;'a&gt;&gt;::Out</code> is always <code>u32</code>, but if I try the same in <code>next()</code>, somehow the compiler doesn't understand that <code>&lt;Self::Item as Family&lt;'s&gt;&gt;::Out</code> is <code>u32</code>. Now I'm even more confused.</p>\n\n<p><strong>EDIT2</strong>: first, I suspected that specialization is the problem. For example, you might write:</p>\n\n<pre><code>impl Family&lt;'static&gt; for U32Family {\n    type Out = char;\n}\n</code></pre>\n\n<p>Then of course, the compiler would be right in assuming that <code>u32</code> is not always the same as <code>&lt;Self::Item as Family&lt;'s&gt;&gt;::Out</code> for any <code>'s</code>. <em>However</em>, I think this is not the problem. </p>\n\n<p>First of all, impls that can be specialized <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md#the-default-keyword\" rel=\"noreferrer\">need to be marked with the <code>default</code> keyword</a>. I did not do that, so I should be able to assume the associated type is in fact <code>u32</code> (<a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md#hazard-interactions-with-type-checking\" rel=\"noreferrer\">the RFC talks about something very similar</a>). But additionally, specialization based on lifetimes <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md#interaction-with-lifetimes\" rel=\"noreferrer\">is not allowed</a>. </p>\n\n<p>So by now I tend to think this is a compiler error. But I'd love to get another answer!</p>\n"}, {"tags": ["debugging", "visual-studio-code", "rust", "breakpoints", "vscode-debugger"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1533180363, "post_id": 51638372, "comment_id": 90254054, "body": "Hi. Which debugger extension are you using? If you use the &quot;C/C++&quot; extension from Microsoft (<code>ms-vscode.cpptools</code>), the &quot;\u2611\ufe0f All Exceptions&quot; breakpoint should be able to catch panics."}, {"owner": {"reputation": 423, "user_id": 1211392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dbc8b835bed12dd8194c240139033bc8?s=128&d=identicon&r=PG", "display_name": "Usagi Ito", "link": "https://stackoverflow.com/users/1211392/usagi-ito"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1533254386, "post_id": 51638372, "comment_id": 90290647, "body": "Hi @kennytm, That&#39;s the best answer! Please write it to the answer, I&#39;ll check the answer to you! Thank you :) <a href=\"https://imgur.com/a/yoj9Wg2\" rel=\"nofollow noreferrer\">imgur.com/a/yoj9Wg2</a>"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1533283719, "post_id": 51638372, "comment_id": 90298783, "body": "Heh okay, I thought you&#39;re already using that extension ^_^"}], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 4, "last_activity_date": 1533284370, "creation_date": 1533284370, "answer_id": 51668226, "question_id": 51638372, "link": "https://stackoverflow.com/questions/51638372/how-can-i-set-a-breakpoint-at-a-panic-when-debugging-a-rust-program-with-vs-co/51668226#51668226", "title": "How can I set a breakpoint at a `panic` when debugging a Rust program with VS Code and the MSVC toolchain?", "body": "<p>With the MSVC toolchain, you could use the Visual Studio debugger. In VSCode, you could install the <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools\" rel=\"nofollow noreferrer\">\"C/C++\" extension</a> to access it. Despite the name, the debugger supports Rust just fine.</p>\n\n<p>Panics uses the same strategy as C++ exceptions when set to unwinding, so you could catch panics using the same exception breakpoints for C++.</p>\n\n<p><img src=\"https://i.imgur.com/H9KyJ6W.png\" alt=\"\"></p>\n\n<p>(screenshot provided by OP)</p>\n"}], "owner": {"reputation": 423, "user_id": 1211392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dbc8b835bed12dd8194c240139033bc8?s=128&d=identicon&r=PG", "display_name": "Usagi Ito", "link": "https://stackoverflow.com/users/1211392/usagi-ito"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1006, "favorite_count": 0, "accepted_answer_id": 51668226, "answer_count": 1, "score": 2, "last_activity_date": 1552314524, "creation_date": 1533141597, "last_edit_date": 1552314524, "question_id": 51638372, "link": "https://stackoverflow.com/questions/51638372/how-can-i-set-a-breakpoint-at-a-panic-when-debugging-a-rust-program-with-vs-co", "title": "How can I set a breakpoint at a `panic` when debugging a Rust program with VS Code and the MSVC toolchain?", "body": "<p>I can set a breakpoint manualy, and run with debugger, but I can't set a breakpoint at a panic of a Rust program. How can I set a breakpoint at a panic like I would an exception in C++?</p>\n\n<p>I'm using Rust 1.29.0-nightly, VS Code 1.25.1 and the MSVC 2017 toolchain.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533140125, "post_id": 51637870, "comment_id": 90240227, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/questions/26731243/how-do-i-use-a-macro-across-module-files\">How do I use a macro across module files?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51637870/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533140142, "post_id": 51637870, "comment_id": 90240238, "body": "TL;DR the duplicate: define your macro before using it."}, {"owner": {"reputation": 129, "user_id": 9564655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/617bfecf703b9468a063f0c21d984a1a?s=128&d=identicon&r=PG&f=1", "display_name": "EmbeddedOS", "link": "https://stackoverflow.com/users/9564655/embeddedos"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533140428, "post_id": 51637870, "comment_id": 90240413, "body": "True sorry, i was in that post before also but i missed that part totally. Thanks .."}], "owner": {"reputation": 129, "user_id": 9564655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/617bfecf703b9468a063f0c21d984a1a?s=128&d=identicon&r=PG&f=1", "display_name": "EmbeddedOS", "link": "https://stackoverflow.com/users/9564655/embeddedos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 5957, "favorite_count": 0, "closed_date": 1533140453, "answer_count": 0, "score": 1, "last_activity_date": 1533140010, "creation_date": 1533139782, "last_edit_date": 1533140010, "question_id": 51637870, "link": "https://stackoverflow.com/questions/51637870/cannot-find-macro-in-this-scope", "closed_reason": "Duplicate", "title": "Cannot find macro in this scope", "body": "<p>I have been trying to add my macro with no success. Check out the code:</p>\n\n<pre><code>extern crate nrf52;\n\n#[macro_use]\nuse nrf52::uart::UARTE0;\nuse kernel::hil::uart::{self, UART};\n\nconst BUFFER_SIZE_2048: usize = 2048;\n\npub unsafe fn run() {\n    let output = scan!(\"2 false fox\", char::is_whitespace, u8, bool, String);\n\n    &amp;nrf52::uart::UARTE0.init(uart::UARTParams {\n        baud_rate: 115200,\n        stop_bits: uart::StopBits::One,\n        parity: uart::Parity::None,\n        hw_flow_control: false,\n    });\n\n    let buf = static_init!([u8; BUFFER_SIZE_2048], [0; BUFFER_SIZE_2048]);\n\n    for (ascii_char, b) in (33..126).cycle().zip(buf.iter_mut()) {\n        *b = ascii_char;\n    }\n\n    transmit_entire_buffer(buf);\n}\n\n#[allow(unused)]\nunsafe fn transmit_entire_buffer(buf: &amp;'static mut [u8]) {\n    &amp;UARTE0.transmit(buf, BUFFER_SIZE_2048);\n}\n\nmacro_rules! scan {\n    ( $string:expr, $sep:expr, $( $x:ty ),+ ) =&gt; {{\n        let mut iter = $string.split($sep);\n        ($(iter.next().and_then(|word| word.parse::&lt;$x&gt;().ok()),)*)\n    }}\n}\n</code></pre>\n\n<p>The error message i am getting is: <code>error: cannot find macro `scan!` in this scope</code>, <code>= help: have you added the `#[macro_use]` on the module/import?</code></p>\n\n<p>I am simply trying to create a macro that will work as a scanf in this project. </p>\n"}, {"tags": ["rust", "compiler-warnings"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1533134884, "post_id": 51636225, "comment_id": 90236899, "body": "We could use more details. Is the project a library or a binary?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1533134908, "post_id": 51636225, "comment_id": 90236917, "body": "Could you clarify how you know it is not used? Normally, anything <code>pub</code> can be used by any downstream user."}, {"owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "edited": false, "score": 0, "creation_date": 1533135242, "post_id": 51636225, "comment_id": 90237157, "body": "Added more context via an edit. I have single Cargo.toml that builds a <code>lib</code> and a series of <code>bin</code>s."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1602860589, "last_edit_date": 1602860589, "creation_date": 1533134968, "answer_id": 51636336, "question_id": 51636225, "link": "https://stackoverflow.com/questions/51636225/how-can-i-get-the-compiler-to-warn-me-of-unused-code-that-is-marked-pub/51636336#51636336", "title": "How can I get the compiler to warn me of unused code that is marked pub?", "body": "<p>You cannot enable anything to do this. By definition, if something is public outside of your crate, it may be used by the crates that import your crate; there's no way for the compiler to actually tell. This is part of having a <em>public API</em>. Removing something from the public API is a breaking change.</p>\n<p>If you have an item that's not exported from your crate, the fact that it's <code>pub</code> won't matter:</p>\n<pre><code>mod foo {\n    pub fn bar() {}\n}\n\nfn main() {}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>warning: function is never used: `bar`\n --&gt; src/main.rs:2:5\n  |\n2 |     pub fn bar() {}\n  |     ^^^^^^^^^^^^\n  |\n  = note: #[warn(dead_code)] on by default\n</code></pre>\n<p>Instead, <em>don't mark things as public</em> to start with. Instead, either leave off <code>pub</code> entirely or use a visibility modifier like <code>pub(crate)</code>. Binary crates should basically have no items marked for export from the crate.</p>\n<hr />\n<p>In your specific case of a workspace, there's never a time when a single compiler invocation knows &quot;everything&quot;. For example, if your library exports <code>fn a()</code> and <code>fn b()</code> and one binary uses <code>a</code> and another binary uses <code>b</code>, then no compilation of the library or either binary would ever see the whole picture. The &quot;best&quot; case would be getting tons of false positives.</p>\n<p>In similar situations, I've resorted to removing <em>everything</em> public from the API and compiling to see the errors / used functions.</p>\n<p>A tool called <a href=\"https://github.com/est31/warnalyzer\" rel=\"nofollow noreferrer\">warnalyzer</a> <strong>might</strong> help in this case. It uses some unstable compiler features to save files from intermediate compiler invocations, then aggregates them to identify unused code. It has a number of false positives at the moment, but it might be useful as a guide.</p>\n"}], "owner": {"reputation": 50119, "user_id": 32133, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/68175c95b0ed231f35bb3e1be2805169?s=128&d=identicon&r=PG", "display_name": "Tim Robinson", "link": "https://stackoverflow.com/users/32133/tim-robinson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 628, "favorite_count": 0, "accepted_answer_id": 51636336, "answer_count": 1, "score": 5, "last_activity_date": 1602860589, "creation_date": 1533134694, "last_edit_date": 1533135287, "question_id": 51636225, "link": "https://stackoverflow.com/questions/51636225/how-can-i-get-the-compiler-to-warn-me-of-unused-code-that-is-marked-pub", "title": "How can I get the compiler to warn me of unused code that is marked pub?", "body": "<p>Rust warns for unused private items:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: function is never used: `hmm`\n   --&gt; src/example.rs:357:1\n    |\n357 | fn hmm() {\n    | ^^^^^^^^\n    |\n    = note: #[warn(dead_code)] on by default\n</code></pre>\n\n<p>I have some code marked <code>pub</code> that I know is not being used. How can I get the compiler to warn me of this?</p>\n\n<p>This is in the context of a library and a series of binaries, all in the same workspace. The library is only used by those binaries; the library isn't being consumed by anybody else and I'm not going to upload to crates.io, so I have full knowledge of the code that's being used.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1533129689, "last_edit_date": 1533129689, "creation_date": 1533125850, "answer_id": 51633119, "question_id": 51632391, "link": "https://stackoverflow.com/questions/51632391/what-is-the-difference-between-featureno-core-and-no-core/51633119#51633119", "title": "What is the difference between `#![feature(no_core)]` and `#![no_core]`?", "body": "<p>To use <code>#![no_core]</code> you have to use a nightly compiler and enable that via <code>#![feature(no_core)]</code>. So yes, they are both required if you want to omit libcore.</p>\n\n<p>So-called \"feature gates\" are used to enable unstable behavior of the Rust language, so you are required to explicitly opt-in and acknowledge that it can change in the future.</p>\n\n<p>There is always a tracking issue for a feature where you can lookup the status of a feature. In the case for <code>no_core</code> it is <a href=\"https://github.com/rust-lang/rust/issues/29639\" rel=\"nofollow noreferrer\">#29539</a>. You can also get the tracking number from the source code, e.g. when looking at <a href=\"https://doc.rust-lang.org/nightly/src/core/future/future.rs.html#11\" rel=\"nofollow noreferrer\"><code>Future</code></a>.</p>\n"}], "owner": {"reputation": 1053, "user_id": 4247851, "user_type": "registered", "accept_rate": 40, "profile_image": "https://i.stack.imgur.com/W4hFQ.png?s=128&g=1", "display_name": "Shanavas M", "link": "https://stackoverflow.com/users/4247851/shanavas-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "accepted_answer_id": 51633119, "answer_count": 1, "score": 4, "last_activity_date": 1533139233, "creation_date": 1533123698, "last_edit_date": 1533139233, "question_id": 51632391, "link": "https://stackoverflow.com/questions/51632391/what-is-the-difference-between-featureno-core-and-no-core", "title": "What is the difference between `#![feature(no_core)]` and `#![no_core]`?", "body": "<p>What is the difference between <code>#![feature(no_core)]</code> and <code>#![no_core]</code>?</p>\n\n<p>Are both required to compile without libcore?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1533119680, "post_id": 51631084, "comment_id": 90226357, "body": "does <code>#![cfg_attr(not(test), no_main)]</code> work? For using android you need a cdylib, not a binary."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1533119684, "post_id": 51631084, "comment_id": 90226360, "body": "Hi! I think your question is answered by <a href=\"https://stackoverflow.com/questions/42551113/is-it-possible-to-conditionally-derive-with-features/42551386\">this Q&amp;A</a>. tl;dr: <code>#[cfg_attr(not(test), no_main)]</code>. But I&#39;m not sure if I would actually close this question as a dupe since the question I linked asks about <i>deriving</i> and only happens to have an answer that fits here, too. Maybe someone else has an opinion about this."}, {"owner": {"reputation": 1744, "user_id": 2597900, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/7a6a8c9e5f836f6874969a8a59801fb6?s=128&d=identicon&r=PG", "display_name": "programmerjake", "link": "https://stackoverflow.com/users/2597900/programmerjake"}, "edited": false, "score": 0, "creation_date": 1533119967, "post_id": 51631084, "comment_id": 90226545, "body": "This should be more prominent in rust-lang&#39;s docs as I couldn&#39;t find that info after an hour of googling"}, {"owner": {"reputation": 1744, "user_id": 2597900, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/7a6a8c9e5f836f6874969a8a59801fb6?s=128&d=identicon&r=PG", "display_name": "programmerjake", "link": "https://stackoverflow.com/users/2597900/programmerjake"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1533120231, "post_id": 51631084, "comment_id": 90226721, "body": "@Tim I hadn&#39;t actually gotten around to building on android yet, i just know that sdl is a pain to use on android because you can&#39;t even use something like <code>WinMain</code>. I think Windows Mobile and iOS are equally painful, but don&#39;t remember for sure"}], "owner": {"reputation": 1744, "user_id": 2597900, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/7a6a8c9e5f836f6874969a8a59801fb6?s=128&d=identicon&r=PG", "display_name": "programmerjake", "link": "https://stackoverflow.com/users/2597900/programmerjake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1533128957, "answer_count": 0, "score": 0, "last_activity_date": 1533129123, "creation_date": 1533119420, "last_edit_date": 1533129123, "question_id": 51631084, "link": "https://stackoverflow.com/questions/51631084/how-to-make-the-no-main-attribute-conditional", "closed_reason": "Duplicate", "title": "How to make the #![no_main] attribute conditional?", "body": "<p>I'm using <code>#![no_main]</code> so I can use SDL2main on Windows and Android but I would like to have it conditionally used so I can run Rust's built-in test harness on Linux.</p>\n\n<p>I've tried:</p>\n\n<pre><code>#[cfg(not(test))]\n#![no_main]\n</code></pre>\n\n<p>and</p>\n\n<pre><code>include!(concat!(\"cfg_test_\", cfg!(test), \".rs\"));\n</code></pre>\n\n<p>where <code>cfg_test_false.rs</code> contains <code>#![no_main]</code> and <code>cfg_test_true.rs</code> doesn't.</p>\n\n<p>Neither of them work.</p>\n\n<p>I know I can fall back to generating <code>main.rs</code> using <code>build.rs</code> but I'm hoping there is a better way, as from what I know, it will have to generate the <code>main.rs</code> in the <code>src</code> directory instead of <code>${OUT_DIR}</code>.</p>\n"}, {"tags": ["debugging", "visual-studio-code", "rust", "lldb"], "owner": {"reputation": 11, "user_id": 10086427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b907ed92a305380e41dfb46dec8064d?s=128&d=identicon&r=PG&f=1", "display_name": "kwebi", "link": "https://stackoverflow.com/users/10086427/kwebi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 351, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1539841046, "creation_date": 1533119152, "last_edit_date": 1533129873, "question_id": 51630996, "link": "https://stackoverflow.com/questions/51630996/cannot-debug-rust-code-using-lldb-in-vs-code-unicodeencodeerror-ascii-codec", "title": "Cannot debug Rust code using LLDB in VS Code: UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode characters", "body": "<p>I want to debug Rust with VS Code. I have installed LLDB 6.0.0 and Rust 1.27.1 but I can't debug Rust code with LLDB:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Display settings: variable format=auto, show disassembly=auto, numeric pointer values=off, container summaries=on.\nInternal debugger error:\nTraceback (most recent call last):\n  File \"/home/kwebi/.vscode/extensions/vadimcn.vscode-lldb-0.8.9/adapter/debugsession.py\", line 1365, in handle_message\n    result = handler(args)\n  File \"/home/kwebi/.vscode/extensions/vadimcn.vscode-lldb-0.8.9/adapter/debugsession.py\", line 385, in DEBUG_setBreakpoints\n    file_id = os.path.normcase(from_lldb_str(source.get('path')))\n  File \"/home/kwebi/.vscode/extensions/vadimcn.vscode-lldb-0.8.9/adapter/__init__.py\", line 8, in &lt;lambda&gt;\n    from_lldb_str = lambda s: s.decode('utf8', 'replace')\n  File \"/usr/lib/python2.7/encodings/utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 12-13: ordinal not in range(128)\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "is_accepted": true, "score": 1, "last_activity_date": 1533089375, "last_edit_date": 1533089375, "creation_date": 1533087928, "answer_id": 51624276, "question_id": 51624079, "link": "https://stackoverflow.com/questions/51624079/variable-lifetime-qs-in-function/51624276#51624276", "title": "Variable lifetime qs in function", "body": "<p>The first function works because the string has the <code>'static</code> lifetime and will be promoted by the compiler.</p>\n\n<p>As for the others..</p>\n\n<pre><code>fn get_str2&lt;'a&gt;(str1: &amp;str) -&gt; &amp;'a str {\n    let x = (str1.to_string() + \"123\").as_str();\n    return x\n}\n</code></pre>\n\n<p>This part: <code>str1.to_string()</code>, isn't returning a string slice... but a new instance of a <code>String</code>. This is basically the same as this:</p>\n\n<pre><code>let x = str1.to_string(); // this is of type String, and its lifetime is local to this function\nlet y = str1 + \"123\"; // This consumes str1 and appends a &amp;str to it - thus the lifetime is still of the new String instance above\nlet z = y.as_str(); // This returns a reference to the local String instance\n</code></pre>\n\n<p>Reading each comment above, it becomes clear that you're actually trying to return a reference to a local <code>String</code>. You can't do this, because the <code>String</code> will be destroyed at the end of the function and the reference will be invalid.</p>\n\n<p>This applies to your third function as well. You're returning a reference to a <code>String</code> instance that will be destroyed at the end of the function.</p>\n"}], "owner": {"reputation": 73, "user_id": 6862495, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Pvqq6YgEObk/AAAAAAAAAAI/AAAAAAAAADQ/XSJSeSTwjf0/photo.jpg?sz=128", "display_name": "\u5218\u6797\u6b23", "link": "https://stackoverflow.com/users/6862495/%e5%88%98%e6%9e%97%e6%ac%a3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "closed_date": 1533089240, "accepted_answer_id": 51624276, "answer_count": 1, "score": 0, "last_activity_date": 1533089438, "creation_date": 1533086233, "last_edit_date": 1533089187, "question_id": 51624079, "link": "https://stackoverflow.com/questions/51624079/variable-lifetime-qs-in-function", "closed_reason": "Duplicate", "title": "Variable lifetime qs in function", "body": "<pre><code>fn get_str1&lt;'a&gt;() -&gt; &amp;'a str {\n    let x = \"hello\";\n    return x;\n}\n\nfn get_str2&lt;'a&gt;(str1: &amp;str) -&gt; &amp;'a str {\n    let x: &amp;'a str = (str1.to_string() + \"123\").as_str();\n    return x;\n}\n\nfn get_str3&lt;'a&gt;(str1: &amp;str) -&gt; &amp;'a str {\n    let tmp = str1.to_string() + \"123\";\n    let x: &amp;'a str = tmp.as_str();\n    return x;\n}\n\n#[test]\nfn lifetime_test() {\n    println!(\"{}\", get_str1());\n    println!(\"{}\", get_str2(\"hello\"));\n    println!(\"{}\", get_str3(\"hello\"))\n}\n</code></pre>\n\n<p>When I call <code>get_str1</code>, it has no problem, but when I call <code>get_str2</code>, it has a compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n --&gt; src/main.rs:7:22\n  |\n7 |     let x: &amp;'a str = (str1.to_string() + \"123\").as_str();\n  |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^         - temporary value only lives until here\n  |                      |\n  |                      temporary value does not live long enough\n  |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 6:1...\n --&gt; src/main.rs:6:1\n  |\n6 | fn get_str2&lt;'a&gt;(str1: &amp;str) -&gt; &amp;'a str {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>When I call <code>get_str3</code>, it also has a compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `tmp` does not live long enough\n  --&gt; src/main.rs:13:22\n   |\n13 |     let x: &amp;'a str = tmp.as_str();\n   |                      ^^^ borrowed value does not live long enough\n14 |     return x;\n15 | }\n   | - borrowed value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 11:1...\n  --&gt; src/main.rs:11:1\n   |\n11 | fn get_str3&lt;'a&gt;(str1: &amp;str) -&gt; &amp;'a str {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Why do I get these errors and how do I fix <code>get_str2</code> and <code>get_str3</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1533069829, "post_id": 51621642, "comment_id": 90209030, "body": "<i>What</i> Makefile? Rust does not have Makefiles. <a href=\"https://stackoverflow.com/q/51620782/155423\">As you already know</a>, <code>env::var</code> is for  environment variables set <i>when the program executes</i>, not when the <i>compiler</i> executes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1533069908, "post_id": 51621642, "comment_id": 90209063, "body": "<i>I&#39;m not clear on where to specify it</i> \u2014 where did you learn about it? The <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">documentation that you linked before</a> tells you where these go; what do you find confusing about it?"}, {"owner": {"reputation": 543, "user_id": 6861720, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/edfbcf83eddb9c18f9ed3e6c0619ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "Dragonight", "link": "https://stackoverflow.com/users/6861720/dragonight"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533165284, "post_id": 51621642, "comment_id": 90251213, "body": "it says &quot;rustc-env=VAR=VALUE indicates that the specified environment variable will be added to the environment which the compiler is run within&quot;. I cannot find how and where to specify rustc-env and how to access that variable from the code."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1562678636, "last_edit_date": 1562678636, "creation_date": 1533174275, "answer_id": 51644398, "question_id": 51621642, "link": "https://stackoverflow.com/questions/51621642/how-to-specify-an-environment-variable-using-the-rustc-env-flag/51644398#51644398", "title": "How to specify an environment variable using the rustc-env flag?", "body": "<h3>TL;DR</h3>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-env=VAR=VALUE\");\n}\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>fn main() {\n    let var = env!(\"VAR\");\n}\n</code></pre>\n\n<hr>\n\n<p>The <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"noreferrer\">documentation that you linked</a> is for a Cargo <em>build script</em>:</p>\n\n<blockquote>\n  <p>The Rust file designated by the <code>build</code> command (relative to the package root) will be compiled and invoked before anything else is compiled in the package, allowing your Rust code to depend on the built or generated artifacts. By default Cargo looks up for <code>\"build.rs\"</code> file in a package root (even if you do not specify a value for <code>build</code>). Use <code>build = \"custom_build_name.rs\"</code> to specify a custom build name or <code>build = false</code> to disable automatic detection of the build script.</p>\n</blockquote>\n\n<p>On the same page, there's a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#outputs-of-the-build-script\" rel=\"noreferrer\">section that describes outputs of build.rs</a></p>\n\n<blockquote>\n  <p>All the lines printed to stdout by a build script are written to a file [...] Any line that starts with <code>cargo:</code> is interpreted directly by Cargo. This line must be of the form <code>cargo:key=value</code>, like the examples below:</p>\n  \n  <pre class=\"lang-none prettyprint-override\"><code>cargo:rustc-env=FOO=bar\n</code></pre>\n</blockquote>\n\n<p>It then details <code>rustc-env</code>:</p>\n\n<blockquote>\n  <p><code>rustc-env=VAR=VALUE</code> indicates that the specified environment variable will be added to the environment which the compiler is run within. The value can be then retrieved by the <code>env!</code> macro in the compiled crate. This is useful for embedding additional metadata in crate's code, such as the hash of Git HEAD or the unique identifier of a continuous integration server.</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/macro.env.html\" rel=\"noreferrer\"><code>env!</code></a> is a macro.</p>\n\n<hr>\n\n<blockquote>\n  <p>access it using <code>env::var(\"VAR\")</code></p>\n</blockquote>\n\n<p>No. <a href=\"https://doc.rust-lang.org/std/env/fn.var.html\" rel=\"noreferrer\"><code>env::var</code></a> is for reading environment variables set when the program <em>runs</em>, not when the program is <em>compiled</em>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51620782/155423\">Is it possible to initialize a variable from an environment variable at compilation time when using no_std?</a></li>\n</ul>\n"}], "owner": {"reputation": 543, "user_id": 6861720, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/edfbcf83eddb9c18f9ed3e6c0619ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "Dragonight", "link": "https://stackoverflow.com/users/6861720/dragonight"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3411, "favorite_count": 1, "accepted_answer_id": 51644398, "answer_count": 1, "score": 6, "last_activity_date": 1562678636, "creation_date": 1533069163, "last_edit_date": 1533069726, "question_id": 51621642, "link": "https://stackoverflow.com/questions/51621642/how-to-specify-an-environment-variable-using-the-rustc-env-flag", "title": "How to specify an environment variable using the rustc-env flag?", "body": "<p>I want to set <code>rustc-env=VAR=VALUE</code> so that I could access it using <code>env::var(\"VAR\")</code> in my code. However, I'm not clear on where to specify it. Can I set the environment variable <code>VAR</code> in the Makefile? </p>\n"}, {"tags": ["rust", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533082220, "post_id": 51621179, "comment_id": 90212458, "body": "<i>Is there a way of doing this?</i> and <i>Is this the correct way to achieve this?</i> are somewhat at odds. Does the solution you have do what you want, or not? If not, what is wrong about it?"}, {"owner": {"reputation": 63, "user_id": 7589481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2b5B7dDyi68/AAAAAAAAAAI/AAAAAAAAACU/iiLm_5kaIhI/photo.jpg?sz=128", "display_name": "Kiran Gopinathan", "link": "https://stackoverflow.com/users/7589481/kiran-gopinathan"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533097811, "post_id": 51621179, "comment_id": 90215440, "body": "Sorry my wording was unclear. I don&#39;t have a compiling solution."}, {"owner": {"reputation": 63, "user_id": 7589481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2b5B7dDyi68/AAAAAAAAAAI/AAAAAAAAACU/iiLm_5kaIhI/photo.jpg?sz=128", "display_name": "Kiran Gopinathan", "link": "https://stackoverflow.com/users/7589481/kiran-gopinathan"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533099324, "post_id": 51621179, "comment_id": 90215779, "body": "While you can cast a convert a <code>Rc&lt;struct&gt; -&gt; Rc&lt;Trait&gt;</code> by cloning, and then convert a reference to that to <code>Weak&lt;Trait&gt;</code> using <code>Rc::downgrade</code>, I have not found a suitable way to first store the <code>Rc&lt;Trait&gt;</code> into a sequence of a supertype (for example <code>Vec&lt;Rc&lt;Any&gt;&gt;</code>, and then downcast the reference to the supertype back into a reference to the original type (<code>&amp;Rc&lt;Any&gt; -&gt; &amp;Rc&lt;Trait&gt;</code>) ."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533126731, "post_id": 51621179, "comment_id": 90230860, "body": "I&#39;ve answered at least <a href=\"https://stackoverflow.com/questions/27892375/can-i-do-type-introspection-with-trait-objects-and-then-downcast-it\">two</a> <a href=\"https://stackoverflow.com/questions/40024093/downcast-traits-inside-rc-for-ast-manipulation?noredirect=1&amp;lq=1\">questions</a> about downcasting in Rust. I&#39;m thinking of another one (not written by me) but I can&#39;t find it right now. Does one of those answer your question?"}, {"owner": {"reputation": 63, "user_id": 7589481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2b5B7dDyi68/AAAAAAAAAAI/AAAAAAAAACU/iiLm_5kaIhI/photo.jpg?sz=128", "display_name": "Kiran Gopinathan", "link": "https://stackoverflow.com/users/7589481/kiran-gopinathan"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533149860, "post_id": 51621179, "comment_id": 90245363, "body": "The main gist of this question isn&#39;t about down-casting - rather obtaining Weak&lt;Trait&gt; references - this provides two important features - maintaining a single &quot;owner&quot; of data, while also allowing treating multiple references the same - i.e holding a sequence of <code>vec&lt;Weak&lt;Trait&gt;&gt;</code>, rather than several lists of each independent type. It just so happens that in my example I have an issue with downcasting (but only because I upcasted immediately prior)."}, {"owner": {"reputation": 63, "user_id": 7589481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2b5B7dDyi68/AAAAAAAAAAI/AAAAAAAAACU/iiLm_5kaIhI/photo.jpg?sz=128", "display_name": "Kiran Gopinathan", "link": "https://stackoverflow.com/users/7589481/kiran-gopinathan"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533150055, "post_id": 51621179, "comment_id": 90245466, "body": "The use of downcast ref doesn&#39;t help, as the implementation I have tried requires converting a <code>&amp;Rc&lt;Any&gt; -&gt; &amp;Rc&lt;Trait&gt;</code>, (unlike <code>&amp;Rc&lt;Any&gt; -&gt; Option&lt;&amp;Trait&gt;</code>, which <code>downcast_ref</code> provides). It seems the only way to do this is to use <code>std::mem::transmute()</code>, which doesn&#39;t seem very idiomatic."}], "answers": [{"tags": [], "owner": {"reputation": 63, "user_id": 7589481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2b5B7dDyi68/AAAAAAAAAAI/AAAAAAAAACU/iiLm_5kaIhI/photo.jpg?sz=128", "display_name": "Kiran Gopinathan", "link": "https://stackoverflow.com/users/7589481/kiran-gopinathan"}, "is_accepted": false, "score": 0, "last_activity_date": 1533187319, "creation_date": 1533187319, "answer_id": 51646029, "question_id": 51621179, "link": "https://stackoverflow.com/questions/51621179/sharing-weak-trait-object-references/51646029#51646029", "title": "Sharing weak trait object references", "body": "<p>I'm not sure if this is the idiomatic way of doing this, but I've since developed a crate providing this functionality - <a href=\"https://crates.io/crates/dependent_view\" rel=\"nofollow noreferrer\" title=\"dependent_view\"><code>dependent_view</code></a>.</p>\n\n<p>Using the crate, the initial problem can be solved by using <code>DependentRc</code> instead of plain <code>Rc</code>'s:</p>\n\n<pre><code>struct ObjectManager {\n    boxes: Vec&lt;DependentRc&lt;Box&gt;&gt;,\n    panels: Vec&lt;DependentRc&lt;Panel&gt;&gt;,\n    expressions: Vec&lt;DependentRc&lt;Expression&gt;&gt;\n}\n\nlet object_manager : ObjectManager = ObjectManager::new();\n</code></pre>\n\n<p>Then using macros provided by the crate, we can obtain <code>Weak&lt;&gt;</code> references to these structs:</p>\n\n<pre><code>let box_view : Weak&lt;Drawable&gt; = to_view!(object_manager.boxes[0]);\nlet panel_view : Weak&lt;Drawable&gt; = to_view!(object_manager.panels[0]);\nlet expression_view : Weak&lt;Drawable&gt; = to_view!(object_manager.expressions[0]);\n</code></pre>\n\n<p>With this, dropping the corresponding <code>DependentRc&lt;&gt;</code> will invalidate all <code>Weak&lt;&gt;</code> references that have been made of it.</p>\n"}], "owner": {"reputation": 63, "user_id": 7589481, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-2b5B7dDyi68/AAAAAAAAAAI/AAAAAAAAACU/iiLm_5kaIhI/photo.jpg?sz=128", "display_name": "Kiran Gopinathan", "link": "https://stackoverflow.com/users/7589481/kiran-gopinathan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 205, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1533187319, "creation_date": 1533067249, "last_edit_date": 1533067438, "question_id": 51621179, "link": "https://stackoverflow.com/questions/51621179/sharing-weak-trait-object-references", "title": "Sharing weak trait object references", "body": "<p>I'm trying to provide \"views\" of non-owned structs to separate components of a system.</p>\n\n<p>Assume a set of traits with distinct methods: <code>Drawable</code>, <code>Modifiable</code> and a number of structs which implement at least one of the traits - <code>SimpleBox</code>, <code>Panel</code>, <code>Expression</code>.</p>\n\n<p>Different components of the system will need to frequently access sequences of these objects, using methods of specific traits; consider a <code>DrawingManager</code> or a <code>ModifyManager</code>:</p>\n\n<pre><code>struct DrawingManager {\n    items: Vec&lt;Weak&lt;Drawable&gt;&gt;,\n}\n\nstruct ModifyManager {\n    items: Vec&lt;Weak&lt;Modifiable&gt;&gt;\n}\n</code></pre>\n\n<p>While a single object may be referenced in both managers, assume that there is a separate single owner of all structs:</p>\n\n<pre><code>struct ObjectManager {\n    boxes: Vec&lt;Rc&lt;Box&gt;&gt;,\n    panels: Vec&lt;Rc&lt;Panel&gt;&gt;,\n    expressions: Vec&lt;Rc&lt;Expression&gt;&gt;,\n}\n</code></pre>\n\n<p>Ideally, it would be useful to be able to manage deleting structs from one place - i.e simply removing it from the <code>ObjectManager</code> being enough to invalidate references in all other components (hence the use of <code>Weak</code>).</p>\n\n<ul>\n<li>Is there a way of doing this? </li>\n<li>Is this the correct way to achieve this? </li>\n<li>Is there a more idiomatic way of implementing this functionality?</li>\n</ul>\n\n<p>The system contains several traits, so making a single trait using methods of all the other traits seems like a bad idea. Several traits have more than one method, so replacing them with closures is not possible.</p>\n\n<p><strong>What I have tried</strong> </p>\n\n<p>As one object may produce one or more <code>Rc&lt;Trait&gt;</code>, we might envision implementing this with a <code>HashMap&lt;ID, Vec&lt;Rc&lt;Any&gt;&gt;&gt;</code> whereby we make each struct have a unique <code>ID</code>, which maps to a list of all <code>Rc</code> that have been made for it. </p>\n\n<p>When we want to remove an object, we remove it from the corresponding list, and remove the entry in the hashmap, invalidating all <code>Weak</code> references.</p>\n\n<p>However, implementing this fails, as to insert into the <code>HashMap</code>, one must upcast a <code>Rc&lt;Trait&gt;</code> -> <code>Rc&lt;Any&gt;</code>, only to downcast it later.</p>\n"}, {"tags": ["rust", "compile-time-constant"], "answers": [{"comments": [{"owner": {"reputation": 543, "user_id": 6861720, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/edfbcf83eddb9c18f9ed3e6c0619ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "Dragonight", "link": "https://stackoverflow.com/users/6861720/dragonight"}, "edited": false, "score": 0, "creation_date": 1533066215, "post_id": 51620853, "comment_id": 90207284, "body": "&quot;rustc-env=VAR=VALUE indicates that the specified environment variable will be added to the environment which the compiler is run within. The value can be then retrieved by the env! macro in the compiled crate. &quot; Copied from <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/cargo/reference/build-scripts.html</a>. I&#39;m bit confused. What does it mean by &quot;the environment which the compiler is run within?&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 543, "user_id": 6861720, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/edfbcf83eddb9c18f9ed3e6c0619ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "Dragonight", "link": "https://stackoverflow.com/users/6861720/dragonight"}, "edited": false, "score": 0, "creation_date": 1533066355, "post_id": 51620853, "comment_id": 90207344, "body": "@Dragonight The thing you have quoted seems to agree with me: <i>retrieved by the <code>env!</code> macro</i>. &quot;the environment which the compiler is run within&quot; would mean &quot;the environment variables set when the compiler runs&quot; (as opposed to &quot;when the produced program runs&quot;)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1533065843, "creation_date": 1533065843, "answer_id": 51620853, "question_id": 51620782, "link": "https://stackoverflow.com/questions/51620782/is-it-possible-to-initialize-a-variable-from-an-environment-variable-at-compilat/51620853#51620853", "title": "Is it possible to initialize a variable from an environment variable at compilation time?", "body": "<p><a href=\"https://doc.rust-lang.org/std/env/fn.var.html\" rel=\"noreferrer\"><code>env::var</code></a> does <strong>not</strong> get evaluated at compile time:</p>\n\n<blockquote>\n  <p>Fetches the environment variable key from the current process.</p>\n</blockquote>\n\n<p>You are looking for <a href=\"https://doc.rust-lang.org/std/macro.env.html\" rel=\"noreferrer\"><code>std::env!</code></a> / <a href=\"https://doc.rust-lang.org/core/macro.env.html\" rel=\"noreferrer\"><code>core::env!</code></a> or <a href=\"https://doc.rust-lang.org/std/macro.option_env.html\" rel=\"noreferrer\"><code>std::option_env!</code></a> / <a href=\"https://doc.rust-lang.org/core/macro.option_env.html\" rel=\"noreferrer\"><code>core::option_env!</code></a>.</p>\n"}], "owner": {"reputation": 543, "user_id": 6861720, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/edfbcf83eddb9c18f9ed3e6c0619ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "Dragonight", "link": "https://stackoverflow.com/users/6861720/dragonight"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1287, "favorite_count": 0, "accepted_answer_id": 51620853, "answer_count": 1, "score": 1, "last_activity_date": 1596445896, "creation_date": 1533065561, "last_edit_date": 1596445896, "question_id": 51620782, "link": "https://stackoverflow.com/questions/51620782/is-it-possible-to-initialize-a-variable-from-an-environment-variable-at-compilat", "title": "Is it possible to initialize a variable from an environment variable at compilation time?", "body": "<p>I would like to initialize a variable during compilation time. For example, I would like to initialize the variable <code>VAR</code> to <code>VALUE</code> when compiling the code:</p>\n<pre><code>match env::var(&quot;VAR&quot;) {\n    Ok(value) =&gt; println!(&quot;Ok {}&quot;, value),\n    Err(e) =&gt; println!(&quot;Error ({})&quot;, e),\n};\n</code></pre>\n<p>However, I wanted to do it in a <code>no_std</code> context, therefore, I cannot use <code>std::env</code> to access the environment. Is it possible to do this?</p>\n"}, {"tags": ["cryptography", "rust", "sha256", "hmac"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1533065590, "last_edit_date": 1533065590, "creation_date": 1533065025, "answer_id": 51620645, "question_id": 51619075, "link": "https://stackoverflow.com/questions/51619075/the-result-of-hmacsha256-differs-from-another-implementation/51620645#51620645", "title": "The result of HMAC&lt;Sha256&gt; differs from another implementation", "body": "<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>4712bf92ffc2917d15a2f5a273e39f0116667419aa4b6ac0b3baaf26fa3c4d20\n</code></pre>\n</blockquote>\n\n<p>This isn't supposed to be treated as an ASCII bytestring. This is a <em>hex-encoding</em> of the raw bytes to an easily human-readable format. You need to properly match encodings:</p>\n\n<pre><code>extern crate hmac;\nextern crate sha2;\nextern crate hex;\n\nuse hmac::{Hmac, Mac};\nuse sha2::Sha256;\n\npub fn verify(message: &amp;[u8], code: &amp;str, key: &amp;[u8]) -&gt; bool {\n    type HmacSha256 = Hmac&lt;Sha256&gt;;\n\n    let mut mac = HmacSha256::new_varkey(key).unwrap();\n    mac.input(message);\n\n    let result = mac.result().code();\n\n    let r2 = hex::encode(&amp;result);\n\n    r2 == code\n}\n\n#[test]\nfn should_work() {\n    assert!(verify(\n        b\"code=0907a61c0c8d55e99db179b68161bc00&amp;shop=some-shop.myshopify.com&amp;timestamp=1337178173\",\n        \"4712bf92ffc2917d15a2f5a273e39f0116667419aa4b6ac0b3baaf26fa3c4d20\",\n        b\"hush\"\n    ), \"Returned false with correct parameters!\");\n}\n\n#[test]\nfn shouldnt_work() {\n    assert!(\n        !verify(\n            b\"things=things&amp;stuff=this_is_pod_racing\",\n            \"3b3f62798a09c78hjbjsakbycut^%9n29ddeb8f6862b42c7eb6fa65cf2a8cade\",\n            b\"mysecu)reAn111eecretB\"\n        ),\n        \"Returned true with incorrect parameters!\"\n    );\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27492969/155423\">How do I convert a string to hex in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/48630814/155423\">Why do I get incorrect values when implementing HMAC-SHA256?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49101377/155423\">Using PBKDF2 key derivation to properly create user-readable salt with rust-crypto</a></li>\n</ul>\n"}], "owner": {"reputation": 577, "user_id": 4938460, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/109ce42816d23c999e06490a700f4c63?s=128&d=identicon&r=PG&f=1", "display_name": "Qwertycrackers", "link": "https://stackoverflow.com/users/4938460/qwertycrackers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 921, "favorite_count": 0, "accepted_answer_id": 51620645, "answer_count": 1, "score": 2, "last_activity_date": 1533065590, "creation_date": 1533058522, "last_edit_date": 1533065205, "question_id": 51619075, "link": "https://stackoverflow.com/questions/51619075/the-result-of-hmacsha256-differs-from-another-implementation", "title": "The result of HMAC&lt;Sha256&gt; differs from another implementation", "body": "<p>I am attempting to implement HMAC verification using SHA256 to interact with an API. I've found the <a href=\"https://docs.rs/hmac/0.6.2/hmac/\" rel=\"nofollow noreferrer\">hmac</a> and <a href=\"https://docs.rs/sha2/0.7.1/sha2/\" rel=\"nofollow noreferrer\">sha2</a> crates, and according to their examples they will work perfectly for my purposes. </p>\n\n<p>I have this code:</p>\n\n<pre><code>extern crate hmac;\nextern crate sha2;\n\nuse hmac::{Hmac, Mac};\nuse sha2::{Digest, Sha256};\n\npub fn verify(message: &amp;[u8], code: &amp;[u8], key: &amp;[u8]) -&gt; bool {\n    type HmacSha256 = Hmac&lt;Sha256&gt;;\n\n    let mut mac = HmacSha256::new_varkey(key).unwrap();\n    mac.input(message);\n\n    let result = mac.result().code();\n    return result == code;\n}\n\n#[cfg(test)]\nmod tests {\n    use verify;\n    #[test]\n    fn should_work() {\n        assert!(verify(\n          b\"code=0907a61c0c8d55e99db179b68161bc00&amp;shop=some-shop.myshopify.com&amp;timestamp=1337178173\",\n          b\"4712bf92ffc2917d15a2f5a273e39f0116667419aa4b6ac0b3baaf26fa3c4d20\",\n          b\"hush\"\n        ), \"Returned false with correct parameters!\");\n    }\n\n    #[test]\n    fn shouldnt_work() {\n        assert!(\n            !verify(\n                b\"things=things&amp;stuff=this_is_pod_racing\",\n                b\"3b3f62798a09c78hjbjsakbycut^%9n29ddeb8f6862b42c7eb6fa65cf2a8cade\",\n                b\"mysecu)reAn111eecretB\"\n            ),\n            \"Returned true with incorrect parameters!\"\n        );\n    }\n}\n</code></pre>\n\n<p><code>cargo test</code> should show a valid HMAC verification, and an invalid one.</p>\n\n<p>Unfortunately, the results given from the <code>verify</code> function disagree with the result from online HMAC generators. As an example, with the message <code>code=0907a61c0c8d55e99db179b68161bc00&amp;shop=some-shop.myshopify.com&amp;timestamp=1337178173</code> and key <code>hush</code>, this <a href=\"https://www.freeformatter.com/hmac-generator.html\" rel=\"nofollow noreferrer\">online</a> HMAC generator indicates the hash should be <code>4712bf92ffc2917d15a2f5a273e39f0116667419aa4b6ac0b3baaf26fa3c4d20</code>, but this causes my tests to fail, and printing out the result confirms that the hash is not correct.</p>\n\n<p>I've confirmed that the results of my byte-string literals are indeed their ASCII equivalents, and otherwise I'm performing this process almost exactly like the examples demonstrate. </p>\n\n<p>I will not be using <code>result == code</code> in the final version due to side-channel attacks, that is just to make my debugging life a little easier.</p>\n\n<p><code>Cargo.toml</code></p>\n\n<pre><code>[package]\nname = \"crypto\"\nversion = \"0.1.0\"\n\n\n[dependencies]\nhmac = \"0.6.2\"\nsha2 = \"0.7.1\"\n</code></pre>\n"}, {"tags": ["rust", "type-inference", "specialization"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533059971, "post_id": 51619059, "comment_id": 90204373, "body": "FWIW, you can just say <code>U::Output: Add&lt;U&gt;</code> \u2014 one level deep doesn&#39;t need the <code>&lt;X as Y&gt;</code>"}, {"owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533063605, "post_id": 51619059, "comment_id": 90206115, "body": "@Shepmaster Well that solved it, but I don&#39;t see how that conclusion follows from the error message"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1533305879, "creation_date": 1533305879, "answer_id": 51674629, "question_id": 51619059, "link": "https://stackoverflow.com/questions/51619059/expected-output-type-changes-when-marking-trait-method-and-associated-type-as-de/51674629#51674629", "title": "Expected output type changes when marking trait method and associated type as default for specialization", "body": "<p>Here is a smaller reproduction of the problem (an <a href=\"/help/mcve\">MCVE</a>):</p>\n\n<pre><code>#![feature(specialization)]\n\ntrait Example {\n    type Output;\n    fn foo(&amp;self) -&gt; Self::Output;\n}\n\nimpl&lt;T&gt; Example for T {\n    default type Output = i32;\n\n    default fn foo(&amp;self) -&gt; Self::Output {\n        42\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>The problem arises because a specialization of this implementation can choose to specialize either <code>Output</code> or <code>foo</code> <em>but it doesn't have to do both</em>:</p>\n\n<pre><code>impl&lt;T&gt; Example for T\nwhere\n    T: Copy,\n{\n    type Output = bool;\n}\n</code></pre>\n\n<p>In this case, the original implementation of <code>foo</code> would no longer make sense \u2014 it's not returning a value of type <code>Self::Output</code> anymore.</p>\n\n<p>The current implementation of specialization requires you to think both locally and globally, which is the context you have to read the error message in. It's not ideal, but problems like this (and many more complicated things, I'm sure) are part of the reason that it isn't stable yet. </p>\n"}], "owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 51674629, "answer_count": 1, "score": 1, "last_activity_date": 1533305879, "creation_date": 1533058442, "last_edit_date": 1533067069, "question_id": 51619059, "link": "https://stackoverflow.com/questions/51619059/expected-output-type-changes-when-marking-trait-method-and-associated-type-as-de", "title": "Expected output type changes when marking trait method and associated type as default for specialization", "body": "<p>I want to implement a <a href=\"https://stackoverflow.com/questions/31210357/is-there-a-modulus-not-remainder-function-operation\">modulo</a> operation for most <code>Rem</code> types in Rust:</p>\n\n<pre><code>#![feature(specialization)]\n\nuse std::ops::{Add, Rem};\n\n/// Define a modulo operation, in the mathematical sense.\n/// This differs from Rem because the result is always non-negative.\npub trait Modulo&lt;T&gt; {\n    type Output;\n\n    #[inline]\n    fn modulo(self, other: T) -&gt; Self::Output;\n}\n\n/// Implement modulo operation for types that implement Rem, Add and Clone.\n// Add and Clone are needed to shift the value by U if it is below zero.\nimpl&lt;U, T&gt; Modulo&lt;T&gt; for U\n    where\n        T: Clone,\n        U: Rem&lt;T&gt;,\n        &lt;U as Rem&lt;T&gt;&gt;::Output: Add&lt;T&gt;,\n        &lt;&lt;U as Rem&lt;T&gt;&gt;::Output as Add&lt;T&gt;&gt;::Output: Rem&lt;T&gt;\n    {\n    default type Output = &lt;&lt;&lt;U as Rem&lt;T&gt;&gt;::Output as Add&lt;T&gt;&gt;::Output as Rem&lt;T&gt;&gt;::Output;\n\n    #[inline]\n    default fn modulo(self, other: T) -&gt; Self::Output {\n        ((self % other.clone()) + other.clone()) % other\n    }\n}\n</code></pre>\n\n<p>This compiles fine without the <code>default</code>s, but with the <code>default</code>, I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; main.rs:\n   |\n   |     default fn modulo(self, other: T) -&gt; Self::Output {\n   |                                          ------------ expected `&lt;U as Modulo&lt;T&gt;&gt;::Output` because of return type\n   |         ((self % other.clone()) + other.clone()) % other\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected Modulo::Output, found std::ops::Rem::Output\n   |\n   = note: expected type `&lt;U as Modulo&lt;T&gt;&gt;::Output`\n              found type `&lt;&lt;&lt;U as std::ops::Rem&lt;T&gt;&gt;::Output as std::ops::Add&lt;T&gt;&gt;::Output as std::ops::Rem&lt;T&gt;&gt;::Output`\n</code></pre>\n\n<p>I don't understand why that would happen. I need the <code>default</code>s because I want to specialize it for <code>Copy</code> types.</p>\n\n<p>I'm using Rust 1.29.0-nightly.</p>\n"}, {"tags": ["rust", "travis-ci"], "answers": [{"comments": [{"owner": {"reputation": 969, "user_id": 204052, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e3c791e8e5da39bf88b09dfb089de01b?s=128&d=identicon&r=PG", "display_name": "Colin Dean", "link": "https://stackoverflow.com/users/204052/colin-dean"}, "edited": false, "score": 0, "creation_date": 1533582598, "post_id": 51618717, "comment_id": 90389770, "body": "I tried this and it didn&#39;t work: the beta job still executed. I did have to remove the <code>v</code> from the regex because our tags do not contain it, but it should be otherwise the same\u2026 <a href=\"https://gist.github.com/colindean/c0aeee4150e7d56747e2c6ca05493835\" rel=\"nofollow noreferrer\">gist.github.com/colindean/c0aeee4150e7d56747e2c6ca05493835</a>"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 1, "last_activity_date": 1533056978, "creation_date": 1533056978, "answer_id": 51618717, "question_id": 51617673, "link": "https://stackoverflow.com/questions/51617673/how-can-i-build-master-against-only-stable-rust-on-travis-ci/51618717#51618717", "title": "How can I build master against only stable Rust on Travis CI?", "body": "<p>You can move the <code>rust</code> toolchain definitions into the build matrix and <a href=\"https://docs.travis-ci.com/user/customizing-the-build/#building-specific-branches\" rel=\"nofollow noreferrer\">specify which branches to build</a> independently. With the help of a branch blacklist and a regular expression for capturing tagged commits (assuming the format <code>v#.#.#</code>), we get the following:</p>\n\n<pre><code>sudo: false\nlanguage: rust\n\nmatrix:\n  fast_finish: true\n  include:\n  - rust: stable\n  - rust: beta\n    branches:\n    except:\n    - master\n    - /^v\\d+\\.\\d+(\\.\\d+)?(-\\S*)?$/\n  allow_failures:\n    rust:\n    - beta\n\ncache:\n  cargo: true\n  timeout: 600\n\nscript:\n- make pkginfo\n- make test\n</code></pre>\n"}], "owner": {"reputation": 969, "user_id": 204052, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/e3c791e8e5da39bf88b09dfb089de01b?s=128&d=identicon&r=PG", "display_name": "Colin Dean", "link": "https://stackoverflow.com/users/204052/colin-dean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1533056978, "creation_date": 1533053072, "question_id": 51617673, "link": "https://stackoverflow.com/questions/51617673/how-can-i-build-master-against-only-stable-rust-on-travis-ci", "title": "How can I build master against only stable Rust on Travis CI?", "body": "<p>I currently build a Rust app against both <code>stable</code> and <code>beta</code>. Branch debug builds are reasonably quick \u2013 5 minutes \u2013 but release builds can reach 45 minutes. I currently have a paid Travis plan with two simultaneous jobs. Building against both stable and beta means that no other CI jobs execute for 45 minutes.</p>\n\n<p>I only care about the build artifacts from the <code>stable</code> job. How can I exclude <code>beta</code> from master and tagged builds?</p>\n\n<p>My .travis.yml:</p>\n\n<pre><code>sudo: false\nlanguage: rust\nrust:\n- stable\n- beta\n\nmatrix:\n  fast_finish: true\n  allow_failures:\n    rust:\n    - beta\n\ncache:\n  cargo: true\n  timeout: 600\n\nscript:\n- make pkginfo\n- make test\n</code></pre>\n\n<p>I think I need to make modifications to the <code>matrix</code> but the <a href=\"https://docs.travis-ci.com/user/customizing-the-build/#Build-Matrix\" rel=\"nofollow noreferrer\">Build Matrix</a> docs aren't really clear about how to do this.</p>\n"}, {"tags": ["rust", "boxing", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533052391, "post_id": 51617330, "comment_id": 90200439, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/40319313/155423\">Dereferencing boxed struct and moving its field causes it to be moved</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51617330/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533052626, "post_id": 51617330, "comment_id": 90200595, "body": "See also <a href=\"https://stackoverflow.com/q/28466809/155423\">Collaterally moved error when deconstructing a Box of pairs</a>"}, {"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "edited": false, "score": 0, "creation_date": 1533052822, "post_id": 51617330, "comment_id": 90200724, "body": "Okay, these linked questions led me to a solution, but onyl indirectly. Should I answer myself, or will you compile an answer that <code>let x = *self; let _a = x.a; x.b</code> as a method body compiled properly? I was looking for interactions between partial moves and boxing in the language."}, {"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "edited": false, "score": 0, "creation_date": 1533052977, "post_id": 51617330, "comment_id": 90200836, "body": "<a href=\"https://play.rust-lang.org/?gist=4ae457f5f2ca34b419578242799352dc&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533056442, "post_id": 51617330, "comment_id": 90202655, "body": "How do you mean &quot;indirectly&quot;? That&#39;s literally the implementation of <code>pub fn pop</code> in the first question."}, {"owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533108268, "post_id": 51617330, "comment_id": 90219512, "body": "You are completely right, I was jumping to the error message in that post directly and read only the non-working implementation. End-of-day problems :wink:"}], "owner": {"reputation": 1936, "user_id": 1584012, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/382084cea852ce1fd7c613db8e3bfcbe?s=128&d=identicon&r=PG", "display_name": "wigy", "link": "https://stackoverflow.com/users/1584012/wigy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1533056454, "answer_count": 0, "score": 1, "last_activity_date": 1533052062, "creation_date": 1533051937, "last_edit_date": 1533052062, "question_id": 51617330, "link": "https://stackoverflow.com/questions/51617330/how-does-boxing-affect-borrow-checking", "closed_reason": "Duplicate", "title": "How does boxing affect borrow checking?", "body": "<p>This code works as expected in Rust 1.27.2:</p>\n\n<pre><code>struct X {\n    a: String,\n    b: String,\n}\n\nimpl X {\n    fn func(mut self: Self) -&gt; String {\n        let _a = self.a;\n        self.a = \"\".to_string();\n        self.b\n    }\n}\n\nfn main() {\n    let x = X {\n        a: \"\".to_string(),\n        b: \"\".to_string(),\n    };\n    x.func();\n}\n</code></pre>\n\n<p>Using the same compiler version, the <code>X</code> instance is now boxed. Even without trying to mutate the partial object, the borrow checker stops reasoning behind the <code>self</code>:</p>\n\n<pre><code>struct X {\n    a: String,\n    b: String,\n}\n\nimpl X {\n    fn func(self: Box&lt;Self&gt;) -&gt; String {\n        let _a = self.a;\n        self.b\n    }\n}\n\nfn main() {\n    let x = Box::new(X {\n        a: \"\".to_string(),\n        b: \"\".to_string(),\n    });\n    x.func();\n}\n</code></pre>\n\n<p>Error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `self`\n --&gt; src/main.rs:9:9\n  |\n8 |         let _a = self.a;\n  |             -- value moved here\n9 |         self.b\n  |         ^^^^^^ value used here after move\n  |\n  = note: move occurs because `self.a` has type `std::string::String`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>Is it by design that the boxed objects cannot be partially borrowed or is it a regression in the ongoing refactoring of the borrow checker?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533046800, "post_id": 51615131, "comment_id": 90196513, "body": "I have added to the question. Thanks and Sorry for not being clear."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533048538, "post_id": 51615131, "comment_id": 90197822, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/22243527/155423\">How to implement a custom &#39;fmt::Debug&#39; trait?</a> and/or <a href=\"https://stackoverflow.com/q/36385519/155423\">How to implement Debug to struct with <code>RefCell&lt;Vec&lt;Weak&lt;Gadget&gt;&gt;&gt;</code> field type?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51615131/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533049396, "post_id": 51615131, "comment_id": 90198372, "body": "@Shepmaster, Those examples suggest me to change all code. However, I have no chance to edit whats out of my own source code. I have added comment to code to show what&#39;s mine and what&#39;s not."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533049785, "post_id": 51615131, "comment_id": 90198670, "body": "<i>to change all code</i> \u2014 no, they don&#39;t. You just need to implement <code>Debug</code> for <code>Subscriber</code> instead of using <code>derive</code>."}, {"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533049900, "post_id": 51615131, "comment_id": 90198745, "body": "May I ask a little help on my case. I tried to implement according to two links you post. However, with no luck. :/"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533050202, "post_id": 51615131, "comment_id": 90198951, "body": "&quot;I tried to implement it and it worked&quot;. Note how this isn&#39;t a useful statement for me to make because you cannot tell what I did? Likewise, saying you tried but did not succeed in not useful. What did you try? What went wrong? Again, these are basic parts of creating a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533049999, "post_id": 51616679, "comment_id": 90198813, "body": "Do you agree that this question is answered by the linked questions then?"}, {"owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533050103, "post_id": 51616679, "comment_id": 90198879, "body": "Yes, although this answer is distinct in some sense with the link to working implementation of questioners code"}], "tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": true, "score": 3, "last_activity_date": 1533049966, "creation_date": 1533049966, "answer_id": 51616679, "question_id": 51615131, "link": "https://stackoverflow.com/questions/51615131/wssender-doesnt-implement-stdfmtdebug/51616679#51616679", "title": "ws::Sender doesn&#39;t implement std::fmt::Debug", "body": "<p>You can implement <code>Debug</code> as @Shepmaster suggested. You may want to go with a more useful implementation though I'm not sure from context what that would be.</p>\n\n<pre><code>impl fmt::Debug for Subscriber {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"Hi\")\n    }\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=e95f0ab1aea888731b2d2c9867e421a5&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3242, "favorite_count": 0, "closed_date": 1533054717, "accepted_answer_id": 51616679, "answer_count": 1, "score": 3, "last_activity_date": 1533049966, "creation_date": 1533045469, "last_edit_date": 1533049866, "question_id": 51615131, "link": "https://stackoverflow.com/questions/51615131/wssender-doesnt-implement-stdfmtdebug", "closed_reason": "Duplicate", "title": "ws::Sender doesn&#39;t implement std::fmt::Debug", "body": "<p>I have a connection type <code>Cons</code> and a <code>Subscriber</code> implementation for my Redis server. ws is a websocket library. There's no chance to edit source code either:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::fmt::Debug;\nuse std::sync::atomic::AtomicBool;\nuse std::sync::{Arc, Mutex};\n\n#[derive(Debug)]\npub struct Consumer {\n    tag: String,\n    no_local: bool,\n    no_ack: bool,\n    exclusive: bool,\n    nowait: bool,\n    subscriber: Box&lt;ConsumerSubscriber&gt;,\n    pub current_message: Option&lt;bool&gt;,\n}\n\nimpl Consumer {\n    pub fn new(\n        tag: String,\n        no_local: bool,\n        no_ack: bool,\n        exclusive: bool,\n        nowait: bool,\n        subscriber: Box&lt;ConsumerSubscriber&gt;,\n    ) -&gt; Consumer {\n        Consumer {\n            tag,\n            no_local,\n            no_ack,\n            exclusive,\n            nowait,\n            subscriber,\n            current_message: None,\n        }\n    }\n\n    pub fn new_delivery_complete(&amp;mut self) {\n        if let Some(delivery) = self.current_message.take() {\n            self.subscriber.new_delivery(delivery);\n        }\n    }\n}\n\npub trait ConsumerSubscriber: Debug + Send + Sync {\n    fn new_delivery(&amp;mut self, delivery: bool);\n}\n\n#[derive(Clone)]\npub struct Sender {\n    connection_id: u32,\n}\n\n// Above code is out of my source code and I cannot edit it.\n// Below is my own code.\n\ntype Cons = Arc&lt;Mutex&lt;HashMap&lt;u64, Sender&gt;&gt;&gt;;\n\n#[derive(Debug)]\nstruct Subscriber {\n    messager: Arc&lt;AtomicBool&gt;,\n    connections: Cons,\n}\n\nimpl ConsumerSubscriber for Subscriber {\n    fn new_delivery(&amp;mut self, delivery: bool) {\n        println!(\"received correctly: {:?}\", delivery)\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=48c8cf0e7647597d2ae25337698ab158&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `Sender` doesn't implement `std::fmt::Debug`\n  --&gt; src/main.rs:58:5\n   |\n58 |     connections: Cons,\n   |     ^^^^^^^^^^^^^^^^^ `Sender` cannot be formatted using `{:?}`\n   |\n   = help: the trait `std::fmt::Debug` is not implemented for `Sender`\n   = note: add `#[derive(Debug)]` or manually implement `std::fmt::Debug`\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `std::collections::HashMap&lt;u64, Sender&gt;`\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `std::sync::Mutex&lt;std::collections::HashMap&lt;u64, Sender&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `std::sync::Arc&lt;std::sync::Mutex&lt;std::collections::HashMap&lt;u64, Sender&gt;&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `&amp;std::sync::Arc&lt;std::sync::Mutex&lt;std::collections::HashMap&lt;u64, Sender&gt;&gt;&gt;`\n   = note: required for the cast to the object type `std::fmt::Debug`\n</code></pre>\n\n<p>If I remove the <code>#[derive(Debug)]</code> attribute on <code>Subscriber</code>, it complains about <code>Subscriber</code>. I cannot remove it, and I cannot compile with it.</p>\n\n<p>How can I handle this error and pass connections <code>Cons</code> to this struct?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1533046996, "post_id": 51611764, "comment_id": 90196649, "body": "A note to those attempting to close the question: <a href=\"https://chat.stackoverflow.com/transcript/message/43207688#43207688\">Requests for an official resource are fine.</a> As long as we stick to canonical content, the question can become useful without becoming a source of rubbish."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1533048681, "post_id": 51611764, "comment_id": 90197925, "body": "@E_net4 I think a meta post is more authoritative than a link to a chat transcript; can you find one? Otherwise, that just appears to be Shog&#39;s opinion."}], "answers": [{"comments": [{"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "edited": false, "score": 1, "creation_date": 1533064963, "post_id": 51612611, "comment_id": 90206701, "body": "@Tyfingr This is exactly what I was looking for. In the documetation of Target &amp; TargetOptions I have listed all the possible values I can have in JSON as well as some brief info."}], "tags": [], "owner": {"reputation": 84, "user_id": 9267451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b4be44427ddb57e5e13e279dabe32b5?s=128&d=identicon&r=PG&f=1", "display_name": "Tyfingr", "link": "https://stackoverflow.com/users/9267451/tyfingr"}, "is_accepted": true, "score": 2, "last_activity_date": 1533046656, "last_edit_date": 1533046656, "creation_date": 1533037358, "answer_id": 51612611, "question_id": 51611764, "link": "https://stackoverflow.com/questions/51611764/where-can-i-find-the-corresponding-documentation-for-the-rust-target-specificati/51612611#51612611", "title": "Where can I find the corresponding documentation for the Rust target specification format?", "body": "<p>Look at the <a href=\"https://doc.rust-lang.org/nightly/nightly-rustc/rustc_target/spec/index.html\" rel=\"nofollow noreferrer\">official documentation</a> </p>\n\n<pre><code>Struct rustc_target::spec::Target\nStruct rustc_target::spec::TargetOptions\n</code></pre>\n\n<p>are the corresponding definitions. </p>\n"}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 257, "favorite_count": 0, "accepted_answer_id": 51612611, "answer_count": 1, "score": 3, "last_activity_date": 1533046656, "creation_date": 1533034608, "last_edit_date": 1533044977, "question_id": 51611764, "link": "https://stackoverflow.com/questions/51611764/where-can-i-find-the-corresponding-documentation-for-the-rust-target-specificati", "title": "Where can I find the corresponding documentation for the Rust target specification format?", "body": "<p>I'm building an application for <code>thumbv7em-none-eabihf</code> target. </p>\n\n<p>I'd like to understand the field described in the JSON that I get when I run the following command:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc +nightly -Z unstable-options --print target-spec-json --target thumbv7em-none-eabihf\n</code></pre>\n\n<p>Where can I find the official corresponding documentation?</p>\n"}, {"tags": ["rust", "rustdoc"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533008091, "post_id": 51605046, "comment_id": 90175647, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51605046/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Try to produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> or you can reproduce it in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533008163, "post_id": 51605046, "comment_id": 90175660, "body": "There are no special rules for test success compared to &quot;standard&quot; Rust tests."}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533008412, "post_id": 51605046, "comment_id": 90175713, "body": "I am aware that my question is incomplete, but it&#39;s very hard to provide a complete one here as it would mean copy-pasting most of my library. I will add the test though."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533008743, "post_id": 51605046, "comment_id": 90175787, "body": "Create a minimal reproduction of the problem. That&#39;s what all of the links I provided say to do. They do not say to put your entire code in. I&#39;d almost  <b>guarantee</b> that you can create something that reproduces the problem with less than 25 lines of code in a completely new Cargo project."}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533008865, "post_id": 51605046, "comment_id": 90175812, "body": "Okay I will try, thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533009254, "post_id": 51605046, "comment_id": 90175895, "body": "That unsafe code seems massively incorrect. Try running your code in Valgrind. I wouldn&#39;t be surprised if your test is dying due to a segfault."}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533009421, "post_id": 51605046, "comment_id": 90175924, "body": "Well it works fine in integration testing... I changed the names of the variables slighty so it&#39;s more clear (still same result). Now trying to make a minimal reproduction of the problem..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533009900, "post_id": 51605046, "comment_id": 90176015, "body": "Just because something compiles means very little as soon as unsafe code enters the picture. Are your integration tests running under Valgrind? Undefined behavior is not deterministic. A concrete reminder from the Firefox developers: <a href=\"https://stackoverflow.com/a/51224196/155423\">stackoverflow.com/a/51224196/155423</a>"}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533010294, "post_id": 51605046, "comment_id": 90176084, "body": "Excuse my ignorance but this is the first time I hear about Valgrind :D Till I learn how to use it I will post the reproduction of the problem."}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533014918, "post_id": 51605046, "comment_id": 90177239, "body": "Still I don&#39;t understand how the correctness of the unsafe code has anything to do with the fact that the code passes all tests except rustdoc tests..."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 4, "creation_date": 1533015229, "post_id": 51605046, "comment_id": 90177344, "body": "Once undefined behavior exists in a program, it is allowed to do anything, meaning that it&#39;s entirely possible for it to crash in some cases but not others, so it could just be that the <code>rustdoc</code> case is one where it crashes."}, {"owner": {"reputation": 7642, "user_id": 436275, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a72a51d31e40d541a9786e0243678029?s=128&d=identicon&r=PG", "display_name": "Uli Schlachter", "link": "https://stackoverflow.com/users/436275/uli-schlachter"}, "edited": false, "score": 0, "creation_date": 1533030003, "post_id": 51605046, "comment_id": 90185064, "body": "Wait... are you turning a reference to a Vec into a pointer and expect that to point at the elements of the vector instead of the vector itself?"}, {"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "edited": false, "score": 0, "creation_date": 1533030774, "post_id": 51605046, "comment_id": 90185601, "body": "I am desperately trying to convert or access pixel data as raw bytes...  The reason I want that is for my library to be able to work with any library that decodes PNGs, instead of just picking one and using its data types."}], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "edited": false, "score": 1, "creation_date": 1533037765, "post_id": 51612341, "comment_id": 90190103, "body": "I see... I fell in the most obvious trap. It turns out the crate <code>png</code> takes care of everything. After a lot of investigation I think It&#39;s the only png-decoder crate that can give you pixels as raw bytes."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1533037528, "last_edit_date": 1533037528, "creation_date": 1533036597, "answer_id": 51612341, "question_id": 51605046, "link": "https://stackoverflow.com/questions/51605046/why-does-a-rustdoc-test-with-unsafe-code-fail-but-the-same-code-in-an-integratio/51612341#51612341", "title": "Why does a rustdoc test with unsafe code fail but the same code in an integration test passes?", "body": "<p>This has nothing to do with the fact that it's running in a rustdoc test. Your code is exhibiting <em>Undefined Behaviour</em> because it is <em>unsound</em>. Running the same code <em>outside</em> of a test also panics for me.</p>\n\n<p>You are making assumptions about how memory is laid out - assumptions that are in no way backed up by any compiler guarantees. A \"correct\" way to get the pointer would be this:</p>\n\n<pre><code>let p = img.as_ptr() as *const u8;\n</code></pre>\n\n<p>However, while this removes the assumption on how the <code>Vec</code> is laid out, the rest of the code is <em>still</em> assuming the layout of <code>RGB</code>. This change stops it panicking for me, but I can't be sure that it is working <em>correctly</em> and I can't know if it will break on some other computer, or on mine after the next Rust update.</p>\n\n<blockquote>\n  <p>I am asking because my method passes integration test with very similar code, so I am pretty confident it's correct</p>\n</blockquote>\n\n<p>This is exactly the danger of <em>Undefined Behaviour</em>, and it's why <code>unsafe</code> should be used only in code that is not only well tested but also where the assumptions and guarantees are well understood.</p>\n"}], "owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "accepted_answer_id": 51612341, "answer_count": 1, "score": 0, "last_activity_date": 1533041386, "creation_date": 1533007658, "last_edit_date": 1533041386, "question_id": 51605046, "link": "https://stackoverflow.com/questions/51605046/why-does-a-rustdoc-test-with-unsafe-code-fail-but-the-same-code-in-an-integratio", "title": "Why does a rustdoc test with unsafe code fail but the same code in an integration test passes?", "body": "<p>I am trying to write a rustdoc test of a method called <code>insert</code>.\nThe testing function is called in the last line of the test, and when I comment it out the test passes just fine.</p>\n\n<p>Error message:</p>\n\n<pre><code>$ cargo test\n   Compiling reproduce v0.1.0 \n(file:///home/user/reproduce)                                                           \n    Finished dev [unoptimized + debuginfo] target(s) in 2.03s\n     Running target/debug/deps/reproduce-17ad4bb50aa9c47e\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out\n\n   Doc-tests reproduce\n\nrunning 1 test\ntest src/lib.rs - MyStruct::method (line 19) ... FAILED\n\nfailures:\n\nfailures:\n    src/lib.rs - MyStruct::method (line 19)\n\ntest result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out\n\nerror: test failed, to rerun pass '--doc'\n</code></pre>\n\n<p>Code:</p>\n\n<pre><code>impl MyStruct {\n    pub fn new(lsb: u8, step: usize) -&gt; MyStruct {\n        let mask: u8 = match lsb {\n            1 =&gt; 0b0000_0001,\n            2 =&gt; 0b0000_0011,\n            _ =&gt; 0b0000_1111\n        };\n\n        MyStruct { lsb, mask, step }\n    }\n\n    /// # Examples\n    /// ```\n    /// extern crate reproduce;\n    /// extern crate rgb;\n    ///\n    /// use std::slice;\n    /// use rgb::RGB;\n    ///\n    /// let msg = \"This is a secret message\".as_bytes();\n    /// let img = vec![RGB {r: 0, g: 0, b: 0}; 800*500];\n    ///\n    /// // Create a reference to the bytes of img\n    /// let p: *const Vec&lt;RGB&lt;u8&gt;&gt; = &amp;img;\n    /// let p: *const u8 = p as *const u8;\n    /// let p: &amp;[u8] = unsafe { \n    ///     slice::from_raw_parts(p, 3*800*500)\n    /// };\n    ///\n    /// let settings = reproduce::MyStruct::new(2, 12);\n    /// let new_data = settings.method(p, &amp;msg);\n    /// ```\n    pub fn method(&amp;self, img: &amp;[u8], msg: &amp;[u8]) -&gt; Vec&lt;u8&gt; {\n        let mut ret = img.to_vec();\n        let mut n = 0;\n\n        for ch in msg.iter() {\n            for i in 1..=8/self.lsb {\n                let shift = (self.lsb*i) as u32;\n                ret[n] = (ret[n] &amp; !self.mask) |\n                    (ch &amp; self.mask.rotate_right(shift)).rotate_left(shift);\n                n += self.step;\n            }\n        }\n\n        ret\n    }\n}\n</code></pre>\n\n<p>Could it be that there are special rules for a rustdoc test to pass (for example the use of <code>assert!</code> macro to prove that it returns a proper value)?</p>\n\n<p><em>I am asking because my method passes integration test with very similar code, so I am pretty confident it's correct</em></p>\n"}, {"tags": ["arrays", "rust", "generic-programming"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532990233, "post_id": 51603088, "comment_id": 90172306, "body": "An <i>array</i> is not the same as a <i><code>Vec</code></i>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532990305, "post_id": 51603088, "comment_id": 90172326, "body": "Can you explain what you don&#39;t understand about the error message? It seems pretty clear to me: <code>Box&lt;Any&gt;</code> != <code>Box&lt;&amp;Any&gt;</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532990419, "post_id": 51603088, "comment_id": 90172353, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51603088/edit\">edit</a> your question to include it. There are numerous types present that have nothing to do with your question, thus it is not <b>Minimal</b>."}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532990552, "post_id": 51603088, "comment_id": 90172388, "body": "@Shepmaster I understand the errror but not how solve it. If I put Box::new(x.as_any()) why is not matching Vec&lt;Box&lt;Any&gt;&gt;?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532990652, "post_id": 51603088, "comment_id": 90172420, "body": "Yes, you need to provide enough code to reproduce the problem (<i>Complete</i>), but that&#39;s all you should provide (<i>Minimal</i>). If you read the help page for <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> all of this is explained."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532990735, "post_id": 51603088, "comment_id": 90172447, "body": "For example, you don&#39;t need <code>Layout</code> or <code>DataType</code> to produce the problem \u2014 they aren&#39;t relevant whatsoever."}, {"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532990896, "post_id": 51603088, "comment_id": 90172501, "body": "@Shepmaster I put there because I have found is common to complain why I&#39;m doing that (ie: not using a static array). Without the context I need to explain that."}], "answers": [{"comments": [{"owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1532994680, "post_id": 51603483, "comment_id": 90173302, "body": "This solve the task, but is weird why Box::new(x.as_any()) not get the same effect."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "edited": false, "score": 0, "creation_date": 1532995200, "post_id": 51603483, "comment_id": 90173405, "body": "@mamcx: As I commented, that is because <code>as_any()</code> borrows the value, and then you want to take ownership of the borrowed result. If you just want to box the any, you can simply write <code>fn box_any&lt;T:Any&gt;(t: T) -&gt; Box&lt;Any&gt; { Box::new(t) }</code>, and then to build the vector: <code>of.into_iter().map(box_any).collect()</code>."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1532995499, "last_edit_date": 1532995499, "creation_date": 1532992830, "answer_id": 51603483, "question_id": 51603088, "link": "https://stackoverflow.com/questions/51603088/how-can-i-have-an-array-of-any-type/51603483#51603483", "title": "How can I have an array of Any type?", "body": "<p>The main problem is with this function:</p>\n\n<pre><code>fn as_any(&amp;self) -&gt; &amp;Any {\n    self\n}\n</code></pre>\n\n<p>This means that you can borrow a <code>Value</code> as a <code>&amp;Any</code>, (it converts a <code>&amp;Value</code> into a <code>&amp;Any</code>).</p>\n\n<p>But then, you want to create a <code>Box&lt;Any&gt;</code> from that <code>&amp;Any</code>. That will never work, because <code>&amp;Any</code> is a borrowed value, while <code>Box&lt;Any&gt;</code> is owned.</p>\n\n<p>The easiest solution would be to change the trait to return the boxed value (an owned trait object):</p>\n\n<pre><code>pub trait Value: Any + Sized {\n    fn as_boxed_any(&amp;self) -&gt; Box&lt;Any&gt; {\n        Box::new(self)\n    }\n    //The mut variation is not needed\n}\n</code></pre>\n\n<p>Now the <code>make_int</code> function is trivial:</p>\n\n<pre><code>fn make_int(of: Vec&lt;i32&gt;) -&gt; Frame {\n    let data = of.into_iter().map(|x| x.as_boxed_any()).collect();\n    Frame {\n        data: data,\n    }\n}\n</code></pre>\n\n<p>UPDATE: Tinkering a bit, I've found that you can create the <code>Vec&lt;Box&lt;Any&gt;&gt;</code> by writing:</p>\n\n<pre><code>fn make_int(of: Vec&lt;i32&gt;) -&gt; Frame {\n    let data = of.into_iter().map(|x| Box::new(x) as Box&lt;Any&gt;).collect();\n    Frame {\n        data: data,\n    }\n}\n</code></pre>\n\n<p>If you are writing the trait only for this conversion, you don't actually need it.</p>\n"}], "owner": {"reputation": 14809, "user_id": 53185, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/021d0d3a0676561486d5ec92339e3bb4?s=128&d=identicon&r=PG", "display_name": "mamcx", "link": "https://stackoverflow.com/users/53185/mamcx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 558, "favorite_count": 0, "accepted_answer_id": 51603483, "answer_count": 1, "score": -1, "last_activity_date": 1532995499, "creation_date": 1532989575, "last_edit_date": 1532991583, "question_id": 51603088, "link": "https://stackoverflow.com/questions/51603088/how-can-i-have-an-array-of-any-type", "title": "How can I have an array of Any type?", "body": "<p>I'm trying to model a dataframe-like structure. I know how use <code>enum</code>s here, but I'm exploring how do it similar to C#/Python/etc.</p>\n\n<p>I tried to follow <a href=\"https://stackoverflow.com/questions/41604107/rust-trait-object-conversion\">Rust Trait object conversion</a> but things are not working:</p>\n\n<pre><code>use std::any::{Any};\nuse std::fmt::Debug;\n\npub trait Value: Any + Sized {\n    fn as_any(&amp;self) -&gt; &amp;Any {\n        self\n    }\n\n    fn as_any_mut(&amp;mut self) -&gt; &amp;mut Any {\n        self\n    }\n}\n\nimpl Value for i32 {}\n\n#[derive(Debug)]\nstruct Frame {\n    data: Vec&lt;Box&lt;Any&gt;&gt;,\n}\n\nfn make_int(of: Vec&lt;i32&gt;) -&gt; Frame {\n    let data = of.into_iter().map(|x| Box::new(x.as_any())).collect();\n    Frame {\n        data: data,\n    }\n}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::vec::Vec&lt;std::boxed::Box&lt;std::any::Any&gt;&gt;: std::iter::FromIterator&lt;std::boxed::Box&lt;&amp;std::any::Any&gt;&gt;` is not satisfied\n  --&gt; src/main.rs:40:61\n   |\n40 |     let data = of.into_iter().map(|x| Box::new(x.as_any())).collect();\n   |                                                             ^^^^^^^ a collection of type `std::vec::Vec&lt;std::boxed::Box&lt;std::any::Any&gt;&gt;` cannot be built from an iterator over elements of type `std::boxed::Box&lt;&amp;std::any::Any&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;std::boxed::Box&lt;&amp;std::any::Any&gt;&gt;` is not implemented for `std::vec::Vec&lt;std::boxed::Box&lt;std::any::Any&gt;&gt;`\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1532988970, "post_id": 51602816, "comment_id": 90171966, "body": "The problem is you&#39;re raising an unsigned integer to a signed power."}, {"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 2, "creation_date": 1532993104, "post_id": 51602816, "comment_id": 90172964, "body": "The float class of numbers have <code>powi</code>: <a href=\"https://play.rust-lang.org/?gist=e6e34ab56425d0456cb8165b520c9e56&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1194, "user_id": 8390068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sbzKf.jpg?s=128&g=1", "display_name": "Micheal O&#39;Dwyer", "link": "https://stackoverflow.com/users/8390068/micheal-odwyer"}, "edited": false, "score": 0, "creation_date": 1532994830, "post_id": 51602816, "comment_id": 90173338, "body": "Apologies, I meant to ask if I can raise an unsigned integer to a <i>signed</i> integer. (I used the word integer in a mathematical sense.) I see that float numbers have <code>powi</code>, is there any similar function for unsigned integers?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532996331, "post_id": 51602816, "comment_id": 90173627, "body": "<i>I used the word integer in a mathematical sense</i> \u2014 <a href=\"https://en.wikipedia.org/wiki/Integer\" rel=\"nofollow noreferrer\">&quot;An integer (from the Latin integer meaning &quot;whole&quot;) is a number that can be written without a fractional component. <b>For example, 21, 4, 0, and \u22122048 are integers</b>&quot;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1533003311, "post_id": 51602816, "comment_id": 90174806, "body": "Note that in computer hardware you can&#39;t raise an integer to an integer power and get a floating point output -- if you want a floating-point result, you have to convert (one of) the inputs to floating point and feed them into the appropriate piece of hardware. When languages like Perl or Javascript tell you that <code>1 &#47; 2</code> is <code>0.5</code>, they&#39;re implicitly using floating-point numbers under the hood, even if they behave like integers otherwise. Rust forgoes that slight convenience in favor of making you <i>tell</i> it exactly what kind of floating-point math you want."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1533015314, "post_id": 51602816, "comment_id": 90177368, "body": "Note that Rust generally doesn&#39;t convert types automatically, unlike most other languages. So you have to tell it explicitly, using a cast or <code>from()</code>."}, {"owner": {"reputation": 1194, "user_id": 8390068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sbzKf.jpg?s=128&g=1", "display_name": "Micheal O&#39;Dwyer", "link": "https://stackoverflow.com/users/8390068/micheal-odwyer"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1533040830, "post_id": 51602816, "comment_id": 90192406, "body": "Thanks for clarifying the underlying hardware process @trentcl! Yeah, it makes sense why this function doesn&#39;t exist, as it isn&#39;t really possible without implicit numerical casting."}], "answers": [{"comments": [{"owner": {"reputation": 1194, "user_id": 8390068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sbzKf.jpg?s=128&g=1", "display_name": "Micheal O&#39;Dwyer", "link": "https://stackoverflow.com/users/8390068/micheal-odwyer"}, "edited": false, "score": 0, "creation_date": 1533000338, "post_id": 51603923, "comment_id": 90174275, "body": "Thanks for the answer! I realized that the method I was looking for isn&#39;t exactly needed, as one exists for f32s or f64. Calling methods as functions is something I never knew about. Very helpful!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1559070645, "last_edit_date": 1559070645, "creation_date": 1532996920, "answer_id": 51603923, "question_id": 51602816, "link": "https://stackoverflow.com/questions/51602816/how-to-raise-an-integer-to-a-signed-integer-power-in-rust/51603923#51603923", "title": "How to raise an integer to a signed integer power in Rust?", "body": "<blockquote>\n  <p>I expect that the result [...] type would be a float</p>\n</blockquote>\n\n<p>There is no <code>float</code> type in Rust. If you refer back to <a href=\"https://doc.rust-lang.org/book/foreword.html\" rel=\"nofollow noreferrer\"><em>The Rust Programming Language</em></a>, specifically the chapter on <a href=\"https://doc.rust-lang.org/book/ch03-02-data-types.html#floating-point-types\" rel=\"nofollow noreferrer\">data types</a>, you'll see that there are two built-in floating point types: <code>f32</code> and <code>f64</code>. Which of those should this proposed method return? </p>\n\n<blockquote>\n  <p>I expect that the result would be 0.5</p>\n</blockquote>\n\n<pre><code>(2u32 as f32).powi(-1)\n</code></pre>\n\n\n\n<pre><code>(2u32 as f64).powi(-1)\n</code></pre>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.powi\" rel=\"nofollow noreferrer\"><code>f32::powi</code></a></li>\n<li><a href=\"https://doc.rust-lang.org/std/primitive.f64.html#method.powi\" rel=\"nofollow noreferrer\"><code>f64::powi</code></a></li>\n</ul>\n\n<blockquote>\n  <p>if such a function cannot be called directly on the integer</p>\n</blockquote>\n\n<p>Any <a href=\"https://doc.rust-lang.org/book/ch05-03-method-syntax.html\" rel=\"nofollow noreferrer\"><em>method</em></a> can be called as a <em>function</em>:</p>\n\n<pre><code>f32::powi(2u32 as f32, -1)\n</code></pre>\n\n\n\n<pre><code>f64::powi(2u32 as f64, -1)\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47330241/155423\">Converting {integer} to f32 in Rust</a></li>\n<li><a href=\"https://stackoverflow.com/q/28273169/155423\">How do I convert between numeric types safely and idiomatically?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28010779/155423\">Where is the sine function?</a></li>\n</ul>\n"}], "owner": {"reputation": 1194, "user_id": 8390068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sbzKf.jpg?s=128&g=1", "display_name": "Micheal O&#39;Dwyer", "link": "https://stackoverflow.com/users/8390068/micheal-odwyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1368, "favorite_count": 0, "accepted_answer_id": 51603923, "answer_count": 1, "score": 2, "last_activity_date": 1559070645, "creation_date": 1532987777, "last_edit_date": 1532996397, "question_id": 51602816, "link": "https://stackoverflow.com/questions/51602816/how-to-raise-an-integer-to-a-signed-integer-power-in-rust", "title": "How to raise an integer to a signed integer power in Rust?", "body": "<p>I've been using the <code>pow()</code> method on integers. I tried raising a <code>u32</code> to a negative power, which resulted in an compile error.</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", 2u32.pow(-1));\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0600]: cannot apply unary operator `-` to type `u32`\n --&gt; src/main.rs:2:29\n  |\n2 |     println!(\"{}\", 2u32.pow(-1));\n  |                             ^^\n</code></pre>\n\n<p>This makes perfect sense, because the <code>pow()</code> function does not take a signed integer as a parameter.</p>\n\n<p>Is there any way to raise an integer to a signed integer power, ideally without using an experimental nightly API? Is there any reason to only allow for unsigned integers as parameters to the <code>pow()</code> function?</p>\n\n<p>I expect that the result would be 0.5, and the type would be a float. I now see that a function which allows for this probably cannot be called directly on the unsigned integer, because that would result in its type changing. </p>\n\n<p>Perhaps there is a function which then takes both the base and power as an argument and returns a float, if such a function cannot be called directly on the integer?</p>\n"}, {"tags": ["rust", "binary-tree"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532980042, "post_id": 51600816, "comment_id": 90168657, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51600816/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532980074, "post_id": 51600816, "comment_id": 90168666, "body": "<a href=\"https://play.rust-lang.org/?gist=da1abad240a5d1f8e16e914be2ddde57&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532980334, "post_id": 51600816, "comment_id": 90168776, "body": "See also <a href=\"https://stackoverflow.com/q/49057270/155423\">Is there a way to iterate over a mutable tree to get a random node?</a> for why you <b>cannot</b> keep a previous reference."}], "owner": {"reputation": 63, "user_id": 6917152, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ea1d22b9c4f918e5c73ff6fa0c5855c?s=128&d=identicon&r=PG&f=1", "display_name": "\u0418\u0433\u043e\u0440\u044c \u041a\u043e\u0440\u043f\u0435\u043d\u043a\u043e", "link": "https://stackoverflow.com/users/6917152/%d0%98%d0%b3%d0%be%d1%80%d1%8c-%d0%9a%d0%be%d1%80%d0%bf%d0%b5%d0%bd%d0%ba%d0%be"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1533051081, "answer_count": 0, "score": 1, "last_activity_date": 1532979958, "creation_date": 1532978057, "last_edit_date": 1532979958, "question_id": 51600816, "link": "https://stackoverflow.com/questions/51600816/binary-tree-insert-implementation", "closed_reason": "Duplicate", "title": "Binary tree insert implementation", "body": "<p>I was trying to implement a binary tree, and I'm stuck with implementing an insert operation:</p>\n\n<pre><code>use std::cmp::PartialOrd;\n\ntype Link&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\nstruct Node&lt;T: PartialOrd&gt; {\n    val: T,\n    left: Link&lt;T&gt;,\n    right: Link&lt;T&gt;,\n}\n\nstruct Tree&lt;T: PartialOrd&gt; {\n    root: Link&lt;T&gt;,\n}\n\nimpl&lt;T: PartialOrd&gt; Tree&lt;T&gt; {\n    fn new() -&gt; Self {\n        Tree { root: None }\n    }\n\n    fn add(&amp;mut self, val: T) {\n        let mut prev: Option&lt;&amp;mut Node&lt;T&gt;&gt; = None;\n        let mut cur = self.root.as_mut();\n\n        while let Some(boxed_node_ref) = cur {\n            if val &lt; boxed_node_ref.val {\n                cur = boxed_node_ref.left.as_mut();\n            } else {\n                cur = boxed_node_ref.right.as_mut();\n            }\n            prev = Some(boxed_node_ref);\n        }\n    }\n}\n\nfn main() {\n    println!(\"It's ok...\");\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `**boxed_node_ref` as mutable more than once at a time\n  --&gt; src/main.rs:30:25\n   |\n24 |         while let Some(boxed_node_ref) = cur {\n   |                                            - first borrow ends here\n25 |             if val &lt; boxed_node_ref.val {\n26 |                 cur = boxed_node_ref.left.as_mut();\n   |                       ------------------- first mutable borrow occurs here\n...\n30 |             prev = Some(boxed_node_ref);\n   |                         ^^^^^^^^^^^^^^ second mutable borrow occurs here\n</code></pre>\n\n<p>I don't understand why it tells me that I'm borrowing <code>boxed_node_ref</code> second time. I suppose that I'm moving it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1532975923, "post_id": 51600230, "comment_id": 90166758, "body": "<code>fn dont_require_send&lt;U: T + ?Sized&gt;(us: Vec&lt;Box&lt;U&gt;&gt;)</code>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1532976132, "post_id": 51600230, "comment_id": 90166852, "body": "It&#39;s not <code>Trait</code> vs. <code>Trait + Send</code>, it&#39;s <code>Box&lt;Trait&gt;</code> vs. <code>Box&lt;Trait + Send&gt;</code>. Those types have different memory layout."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532976326, "post_id": 51600230, "comment_id": 90166948, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/51447656/155423\">Is there any way to convert Box&lt;Box&lt;Foo + Send&gt;&gt; to Box&lt;Box&lt;Foo&gt;&gt;?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51600230/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "edited": false, "score": 0, "creation_date": 1532979077, "post_id": 51600230, "comment_id": 90168240, "body": "I&#39;ve tried to apply the box-unbox solution from the sibling question this way: <code>dont_require_send(ts.into_iter().map(|t| Box::new(*t)).collect())</code>, but it doesn&#39;t compile (<a href=\"https://play.rust-lang.org/?gist=5907326f328f91e4a294145dfb6d8035&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>). Also, I&#39;m still uncertain if this restriction is useful, and if not, is there some hope this could work automatically in the future?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532979384, "post_id": 51600230, "comment_id": 90168387, "body": "@Tom&#225;\u0161Dvo\u0159&#225;k I don&#39;t believe that Stack Overflow is a good place to ask questions like &quot;will language <i>X</i> ever support <i>some feature</i>&quot;. If you want something like that, it seems better to ask somewhere like the <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">user&#39;s forum</a>, <a href=\"https://internals.rust-lang.org/\" rel=\"nofollow noreferrer\">internals forum</a>, or the issue tracker."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532979602, "post_id": 51600230, "comment_id": 90168467, "body": "<a href=\"https://play.rust-lang.org/?gist=5cb40391f33c4ae1e68d9780cf42d7f5&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">The duplicate applied to your case</a> \u2014 you don&#39;t have to unbox in this case because <code>into_iter</code> removes the outer layer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532981287, "post_id": 51600230, "comment_id": 90169221, "body": "In your case, <a href=\"https://stackoverflow.com/a/51451932/3650362\">Shepmaster&#39;s answer to the other question</a> may be more appropriate than the unbox-box one. <a href=\"https://play.rust-lang.org/?gist=5907326f328f91e4a294145dfb6d8035&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here it is applied to your problem</a>."}, {"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532984688, "post_id": 51600230, "comment_id": 90170552, "body": "Thank you for your suggestions. In the end, in my app, I&#39;ve decided to use <code>fn dont_require_send(ts: Vec&lt;Box&lt;dyn Trait + Send&gt;&gt;)</code>, it&#39;s probably the least annoying way for my use case. @trentcl&#39;s <code>U: T + ?Sized</code> is nice, but it obscures the purpose too much for my taste (<code>dyn</code> keyword gone etc.), and @Shepmaster&#39;s <code>ts.into_iter().map(|t| t as Box&lt;Trait&gt;).collect()</code> is also nice, but I&#39;d have to do that at every call site. It&#39;s good to know there are workarounds in case I really need them, though. Thank you."}, {"owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "edited": false, "score": 0, "creation_date": 1533012192, "post_id": 51600230, "comment_id": 90176487, "body": "From the comments it seems to me that the most versatile solution is the <code>&lt;U: T + ?Sized&gt;</code>. I&#39;d like to hear from more experienced Rustaceans: Is that a common idiom, something people who know it routinely use when writing libraries to allow users of the library to use it with any combination of marker traits? And when you see it, do you immediately recognize it as a pattern to allow that? Are there any downsides to this idiom besides readability for those uninitiated?"}], "owner": {"reputation": 1350, "user_id": 3220468, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8bcd5a0e9fc3018d76dd96371281a891?s=128&d=identicon&r=PG", "display_name": "Tom&#225;\u0161 Dvo\u0159&#225;k", "link": "https://stackoverflow.com/users/3220468/tom%c3%a1%c5%a1-dvo%c5%99%c3%a1k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1533041231, "answer_count": 0, "score": 1, "last_activity_date": 1533011787, "creation_date": 1532975610, "last_edit_date": 1533011787, "question_id": 51600230, "link": "https://stackoverflow.com/questions/51600230/is-there-any-workaround-for-converting-a-vec-of-trait-objects-with-marker-traits", "closed_reason": "Duplicate", "title": "Is there any workaround for converting a Vec of trait objects with marker traits to trait objects without marker traits?", "body": "<p>This code:</p>\n\n<pre><code>trait Trait {}\n\nfn dont_require_send(ts: Vec&lt;Box&lt;dyn Trait&gt;&gt;) {}\n\nfn use_send(ts: Vec&lt;Box&lt;dyn Trait + Send&gt;&gt;) {\n    dont_require_send(ts)\n}\n</code></pre>\n\n<p>fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:6:23\n  |\n6 |     dont_require_send(ts)\n  |                       ^^ expected trait `Trait`, found trait `Trait + std::marker::Send`\n  |\n  = note: expected type `std::vec::Vec&lt;std::boxed::Box&lt;Trait + 'static&gt;&gt;`\n             found type `std::vec::Vec&lt;std::boxed::Box&lt;Trait + std::marker::Send + 'static&gt;&gt;`\n</code></pre>\n\n<p>I kind of understand that Rust considers <code>Trait</code> and <code>Trait + Send</code> to be different types, and that is probably the reason for the error. On the other hand, I can't think of any reason why rejecting this particular code is actually useful. It is in fact quite annoying, it forces me to require <code>Send</code> in the <code>dont_require_send</code> function's parameters even though the function doesn't actually need it. Under some circumstances it could even make me implement several versions of <code>dont_require_send</code> for different combinations of these marker traits.</p>\n\n<p>Is there any workaround for this? Or are there any plans in the Rust compiler itself to make this code compile?</p>\n\n<h1>EDIT</h1>\n\n<p>What I've extracted from the comments: This question is a duplicate of <a href=\"https://stackoverflow.com/questions/51447656\">Is there any way to convert Box> to Box>?</a>. Both ways suggested there to work around the nuisance work for my question as well.</p>\n\n<ol>\n<li><code>fn dont_require_send&lt;U: Trait + ?Sized&gt;(ts: Vec&lt;Box&lt;dyn U&gt;&gt;) {}</code> is probably the best solution if you have access to <code>dont_require_send</code>'s sources. I personally don't like how the original intent is obscured, so I'm probably going to use this new idiom rarely.</li>\n<li>If you don't have access to the original source, you can use the following to convert the objects at the call site: <code>ts.into_iter().map(|t| t as Box&lt;Trait&gt;).collect();</code>. Please note that just naively using the box-unbox trick from the other question doesn't work (why?): <code>dont_require_send(ts.into_iter().map(|t| Box::new(*t)).collect())</code></li>\n</ol>\n"}, {"tags": ["visual-studio-code", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1532970139, "post_id": 51598759, "comment_id": 90163839, "body": "<a href=\"https://doc.rust-lang.org/book/second-edition/ch01-03-hello-cargo.html\" rel=\"nofollow noreferrer\">Chapter 1.3 \u2014 Hello, Cargo!</a> of <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533061110, "post_id": 51598759, "comment_id": 90204960, "body": "@Shepmaster I understand that this is stupid question, but your link is not helpful, because it only describes Cargo.toml file for the project, not the file in the workspace directory. I have made it more explicit in the question,but it was contained in the original versions as well. Please, read the text of questions before downvoting them."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533061184, "post_id": 51598759, "comment_id": 90205002, "body": "Do you actually have a <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\"><i>Cargo</i> workspace</a>? I believe that message is referring to a <i>VS Code</i> workspace. This question doesn&#39;t seem to show any effort about what you&#39;ve tried, what isn&#39;t working, etc."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533061268, "post_id": 51598759, "comment_id": 90205049, "body": "Well there is not much to try, I have placed the file Cargo.toml to the workspace root, but still I do not understand what is it for."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1533061270, "post_id": 51598759, "comment_id": 90205050, "body": "Why do you believe that I&#39;ve downvoted this question? It&#39;s that kind of assumption / accusation that makes people on Stack Overflow less likely to leave comments, leading to people downvoting without leaving comments."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533061458, "post_id": 51598759, "comment_id": 90205163, "body": "If you did not, than I apology, it was merely a reaction to 4 downvotes, and one close vote, I may be overreacting."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533061472, "post_id": 51598759, "comment_id": 90205169, "body": "If you follow the instructions in <a href=\"https://doc.rust-lang.org/book/second-edition/ch01-03-hello-cargo.html\" rel=\"nofollow noreferrer\">Hello, Cargo!</a>, you will run <code>cargo new</code>, which generates a Cargo.toml for you. Then you are done."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1533061538, "post_id": 51598759, "comment_id": 90205200, "body": "<code>cargo new</code> only generates Cargo.toml WITHIN the project, not within the workspace. It must be some VS Code thing."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1533192412, "post_id": 51598759, "comment_id": 90257923, "body": "Can you please eloberate why you opened a bounty? IMHO everything has been said."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1533563519, "post_id": 51598759, "comment_id": 90379540, "body": "@hellow I think I have commented on every answer and explained why it does not work for me. Especially I have been repeatedly directed to explanations for Cargo.toml file WITHIN THE PROJECT DIRECTORY, which is NOT what the question is about."}], "answers": [{"comments": [{"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533563575, "post_id": 51649868, "comment_id": 90379578, "body": "Thanks, this is exactly the piece of documentation I have been looking for. Do I understand it right, that this file should be edited manually everytime I want to include new project in the workspace?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533565036, "post_id": 51649868, "comment_id": 90380503, "body": "@gorn That is correct, unless the new project is a path dependency of another member of the workspace. I have updated the answer with those details."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533666518, "post_id": 51649868, "comment_id": 90427142, "body": "The whole system of workspaces and how they are conected to the Cargo.toml files is confusing for me, but you have helped to get me started, thanks."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533666823, "post_id": 51649868, "comment_id": 90427300, "body": "@gorn Well, there is a chance that workspaces are not what you are looking for. They were specifically made for holding multiple crates that are part of the same project. If you just happen to keep multiple standalone Rust programs in the same folder, that does not usually merit a workspace."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533844882, "post_id": 51649868, "comment_id": 90508492, "body": "That might be true. If VS Code was not nagging me about nonexisting Cargo.toml outside the individual crate directories, I would never started the question. It is more UI flaw of VSC than anything else ..."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533845400, "post_id": 51649868, "comment_id": 90508696, "body": "As far as I know, it&#39;s the Rust extension for Code that currently does not handle independent projects that were not opened in their root directory."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533925628, "post_id": 51649868, "comment_id": 90541730, "body": "Maybe it is also cargo connected I get similar complaint when working with it in terminal."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533926121, "post_id": 51649868, "comment_id": 90541961, "body": "You may wish to create a new, more accurate question on that matter."}, {"owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "edited": false, "score": 0, "creation_date": 1533926128, "post_id": 51649868, "comment_id": 90541965, "body": "Specifically <code>cargo new</code> says &quot;warning: compiling this new crate may not work due to invalid workspace configuration&quot;, so maybe the workspace notion does not come from VCS at all ... I really do not know"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 5, "last_activity_date": 1533565004, "last_edit_date": 1533565004, "creation_date": 1533201246, "answer_id": 51649868, "question_id": 51598759, "link": "https://stackoverflow.com/questions/51598759/what-should-be-in-the-cargo-toml-file-at-the-root-of-the-workspace-so-that-visua/51649868#51649868", "title": "What should be in the Cargo.toml file at the root of the workspace so that Visual Studio Code supports all features?", "body": "<p>This is covered in <a href=\"https://doc.rust-lang.org/book/second-edition/ch14-03-cargo-workspaces.html\" rel=\"nofollow noreferrer\">chapter 14 of the book, section 3</a>. The Cargo.toml at the root of a Cargo workspace should explicitly contain its member projects in the <code>members</code> property. Note that this is exactly what the IDE was advising you to do.</p>\n\n\n\n<pre><code>[workspace]\nmembers = [\n    \"project1\",\n    \"project2\",\n]\n</code></pre>\n\n<p>Quoting:</p>\n\n<blockquote>\n  <p>Next, in the add directory, we create the Cargo.toml file that will configure the entire workspace. This file won\u2019t have a <code>[package]</code> section or the metadata we\u2019ve seen in other Cargo.toml files. Instead, it will start with a <code>[workspace]</code> section that will allow us to add members to the workspace by specifying the path to our binary crate; in this case, that path is adder:</p>\n  \n  <p>Filename: Cargo.toml</p>\n  \n  <pre><code>[workspace]\n\nmembers = [\n    \"adder\",\n]\n</code></pre>\n  \n  <p>Next, we\u2019ll create the adder binary crate by running <code>cargo new</code> within the add directory:</p>\n  \n  <p>$ cargo new --bin adder\n       Created binary (application) <code>adder</code> project</p>\n  \n  <p>At this point, we can build the workspace by running <code>cargo build</code>. The files in your add directory should look like this:</p>\n  \n  <pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 adder\n\u2502   \u251c\u2500\u2500 Cargo.toml\n\u2502   \u2514\u2500\u2500 src\n\u2502       \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 target\n</code></pre>\n</blockquote>\n\n<p>Another example of this in the wild is <a href=\"https://github.com/serde-rs/serde\" rel=\"nofollow noreferrer\">serde</a> (<a href=\"https://github.com/serde-rs/serde/blob/master/Cargo.toml\" rel=\"nofollow noreferrer\">Cargo.toml</a>).</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">Cargo documentation</a> provides additional details on the <code>members</code> field, including that path dependencies are included automatically.</p>\n\n<blockquote>\n  <p>The root crate of a workspace, indicated by the presence of <code>[workspace]</code> in its manifest, is responsible for defining the entire workspace. All <code>path</code> dependencies residing in the workspace directory become members. You can add additional packages to the workspace by listing them in the <code>members</code> key. Note that members of the workspaces listed explicitly will also have their path dependencies included in the workspace. [...]</p>\n</blockquote>\n\n<p>In this case, no path dependencies nor members were stated in the root Cargo project, leading to the sub-directories not being regarded as workspace members.</p>\n"}, {"tags": [], "owner": {"reputation": 65, "user_id": 10826737, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Gq4bBk7PmCE/AAAAAAAAAAI/AAAAAAAAALU/6SPfaTfz-mI/photo.jpg?sz=128", "display_name": "Rich Kadel", "link": "https://stackoverflow.com/users/10826737/rich-kadel"}, "is_accepted": false, "score": 2, "last_activity_date": 1564014428, "creation_date": 1564014428, "answer_id": 57192788, "question_id": 51598759, "link": "https://stackoverflow.com/questions/51598759/what-should-be-in-the-cargo-toml-file-at-the-root-of-the-workspace-so-that-visua/57192788#57192788", "title": "What should be in the Cargo.toml file at the root of the workspace so that Visual Studio Code supports all features?", "body": "<p>As a workaround, I was able to create a top-level Cargo.toml with the following content:</p>\n\n<pre><code>[workspace]\nmembers = [\n    \"./*/src/..\",\n]\n</code></pre>\n\n<p>With this, I can create new projects under the workspace without explicitly updating the top-level Cargo.html.</p>\n\n<p>As a note, the more obvious globs like <code>\"*\"</code>, <code>\"./*\"</code> and <code>\"*/\"</code> do not work because the resulting matches must be directories with Cargo.toml files, and these globs match more than that (including \"./target/\", for example). The path I came up with results in the right subset (at least in the basic, typical case).</p>\n"}], "owner": {"reputation": 4300, "user_id": 313522, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/e6dd88ec54643689069f97f0d52398ca?s=128&d=identicon&r=PG", "display_name": "gorn", "link": "https://stackoverflow.com/users/313522/gorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2905, "favorite_count": 0, "accepted_answer_id": 51649868, "answer_count": 2, "score": -2, "last_activity_date": 1564014428, "creation_date": 1532969269, "last_edit_date": 1533151961, "question_id": 51598759, "link": "https://stackoverflow.com/questions/51598759/what-should-be-in-the-cargo-toml-file-at-the-root-of-the-workspace-so-that-visua", "title": "What should be in the Cargo.toml file at the root of the workspace so that Visual Studio Code supports all features?", "body": "<p>Visual Studio Code says:</p>\n\n<blockquote>\n  <p>A Cargo.toml file must be at the root of the workspace in order to\n  support all features</p>\n</blockquote>\n\n<p>However I did not find what should be in Cargo.toml file <em>located in the workspace root</em>. Is it common for all project subdirectories?</p>\n\n<p>I have read the <a href=\"https://doc.rust-lang.org/book/second-edition/ch01-03-hello-cargo.html\" rel=\"nofollow noreferrer\">chapter Hello, Cargo!</a> of the documentation, but it only speaks about the Cargo.toml files within the project directory.</p>\n\n<p>By experimenting, I have found out that the file with only one line <code>[workspace]</code> makes the VS Code note go away, but now every time I set up a new project it nags me about the fact that this project is not mentioned in the members array within this \"workspace\" Cargo.toml </p>\n\n<p>Visual Studio Code directory structure is as follows</p>\n\n<pre><code>workspace\n  |\n  ---&gt; project1\n  |\n  ---&gt; project2\n</code></pre>\n\n<p>the <code>cargo new project3</code> generates Cargo.toml within newly created project3 directory, but Visual Studio Code expects another Cargo.toml within the workspace directory itself. </p>\n"}, {"tags": ["rust", "mutable", "dereference", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1532956907, "post_id": 51594058, "comment_id": 90155647, "body": "What triggers <code>m</code> to be copied in <b>block1</b> ? I mean clearly in this case <code>fn main() {     let mut m:i32 = 10;     let n = {         let b = &amp;mut m;         *b = 12;         &amp;*b     };          println!(&quot;{:?}&quot;, n); }</code> , it is not. Is the copied triggered because of outer reference?"}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1532957409, "post_id": 51594058, "comment_id": 90155984, "body": "A temporary mutable reference will always take the ownership (copy/move)  of the value it is pointing to?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1532960449, "post_id": 51594058, "comment_id": 90158057, "body": "I can see the parallel between <code>&amp;mut</code> and <code>S</code>, but this can&#39;t be the whole story. For one thing, <a href=\"http://play.rust-lang.org/?gist=80efb0bfa11cccf7add174435a74c4c5&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">block1 will work if you remove the extra layer of <code>&amp;</code></a>, whereas the version with <code>S</code> will still fail to compile"}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1532961834, "post_id": 51594058, "comment_id": 90159048, "body": "block1 with only 1 <code>&amp;</code> (i.e <code>&amp;mut</code>) is working because there is no copy (no ownership) involved and there is no temporary (akin to rvalue?) here, I guess. So that&#39;s why I asked is the ownership taken because it is a temporary ref. (incase of <code>&amp;&amp;mut</code> i mean)"}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1532962455, "post_id": 51594058, "comment_id": 90159448, "body": "@soupybionics Obviously, <code>S</code> is too simplistic to model the full semantics of <code>&amp;mut</code>. My guess is that the outer reference forces the compiler to base its reasoning on some stricter model for <code>&amp;mut</code> which is closer to <code>S</code> and therefore cannot guarantee that the code is safe, while in the case where the outer reference is missing the compiler can make advanced use of its knowledge about <code>&amp;mut</code> to infer that the code is indeed safe."}, {"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1532981219, "post_id": 51594058, "comment_id": 90169189, "body": "@Calculator The <code>temporary value does not live long enough</code> is referring to <code>&amp;mut m</code> and not just <code>m</code> (My guess based on the error message having <code>^^^^^^</code> underlining the whole of <code>&amp;mut m</code> and not just <code>m</code>). So it is the <code>&amp;mut</code> which is the <i>temporary value</i> pointing to <code>m</code> without taking the ownership (no move/copy).  If <code>&amp;mut</code> does take the ownership, shouldn&#39;t <a href=\"https://play.rust-lang.org/?gist=4c46ed68f0695c9e6f3ae8266a7ea385&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this code</a> fail to compile then ? It passes."}], "tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 6, "last_activity_date": 1532960144, "last_edit_date": 1532960144, "creation_date": 1532953924, "answer_id": 51594058, "question_id": 51591381, "link": "https://stackoverflow.com/questions/51591381/when-an-immutable-reference-to-a-mutable-reference-to-a-value-outside-the-scope/51594058#51594058", "title": "When an immutable reference to a mutable reference to a value outside the scope is returned, why is the mutable reference dropped when the scope ends?", "body": "<p>It is sufficient here to think of a mutable borrow as a non-<code>Copy</code> struct (<code>S</code> in the snippets below) which takes ownership of the referenced value. This model represents the exclusive nature of a mutable borrow.</p>\n\n<p>Reasoning based on this model: In block2 <code>n</code> is a reference to the original <code>m</code>, while in block1 <code>n</code> would end up being a reference to a copy of <code>m</code> owned by the mutable borrow. In both blocks the inner reference is dropped at the end of the let-block, but only in block1 this causes a problem, because in block1 the target of the reference for <code>n</code> is still owned by the inner reference when this inner reference is dropped.</p>\n\n<pre><code>struct S { m: i32 }\nlet mut m = 10;\n\nlet n = {\n    let s = S { m };\n    let b = &amp;s;\n    &amp;(*b).m\n}; // s is dropped\n\nprintln!(\"{:?}\", n);\n</code></pre>\n\n<p>In the snippet above <code>s</code> takes ownership of a copy of <code>m</code>. The reference <code>n</code> would point to that copy of <code>n</code> which is dropped when <code>s</code> is dropped - not allowed. If <code>m</code> was non-Copy, <code>m</code> would be moved into <code>s</code>, which would have the same implications. </p>\n\n<p>In block2 the original <code>m</code> is borrowed directly without copying it. If you force a copy, you will get the same error as for block1:</p>\n\n<pre><code>let mut m = 10;\n\nlet n = {\n    let m2 = m;\n    let mut a = &amp;m2;\n    let b = &amp;a;\n    &amp;**b\n};\n\nprintln!(\"{:?}\", n);\n</code></pre>\n"}], "owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 5, "accepted_answer_id": 51594058, "answer_count": 1, "score": 10, "last_activity_date": 1532960144, "creation_date": 1532944511, "last_edit_date": 1532960018, "question_id": 51591381, "link": "https://stackoverflow.com/questions/51591381/when-an-immutable-reference-to-a-mutable-reference-to-a-value-outside-the-scope", "title": "When an immutable reference to a mutable reference to a value outside the scope is returned, why is the mutable reference dropped when the scope ends?", "body": "<pre><code>fn main() {\n    // block1: fails\n    {\n        let mut m = 10;\n\n        let n = {\n            let b = &amp;&amp;mut m;\n            &amp;**b // just returning b fails\n        };\n\n        println!(\"{:?}\", n);\n    }\n\n    // block2: passes\n    {\n        let mut m = 10;\n\n        let n = {\n            let b = &amp;&amp;m;\n            &amp;**b // just returning b fails here too\n        };\n\n        println!(\"{:?}\", n);\n    }\n}\n</code></pre>\n\n<p><strong>block1</strong> fails with the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:7:22\n   |\n7  |             let b = &amp;&amp;mut m;\n   |                      ^^^^^^ temporary value does not live long enough\n8  |             &amp;**b // just returning b fails\n9  |         };\n   |         - temporary value dropped here while still borrowed\n...\n12 |     }\n   |     - temporary value needs to live until here\n</code></pre>\n\n<p>Am I correct in assuming that the inner immutable reference is extended beyond the <strong>block2</strong> scope, whereas in <strong>block1</strong>, the inner mutable reference is always dropped even if there is an outer reference to it? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 10147682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b337b805e6106ecbbc2b84862e7f3e90?s=128&d=identicon&r=PG&f=1", "display_name": "Damian", "link": "https://stackoverflow.com/users/10147682/damian"}, "edited": false, "score": 0, "creation_date": 1532937149, "post_id": 51589011, "comment_id": 90143812, "body": "Ah! I see now. Instead of convincing the compiler the result would be T, type the output to be flexible. Perfect. Thanks!"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 4, "last_activity_date": 1532955671, "last_edit_date": 1532955671, "creation_date": 1532935910, "answer_id": 51589011, "question_id": 51588809, "link": "https://stackoverflow.com/questions/51588809/how-do-i-explain-to-the-compiler-that-t-implements-add-in-a-way-that-returns-the/51589011#51589011", "title": "How do I explain to the compiler that T implements Add in a way that returns the same type?", "body": "<p>The problem you are facing is that a generic <code>T</code> + the same <code>T</code> is not necessarily <code>T</code>.</p>\n\n<p>Your <code>Add</code> impl has to look something like this:</p>\n\n<pre><code>impl&lt;T: Add&gt; Add&lt;Vector2&lt;T&gt;&gt; for Vector2&lt;T&gt; {\n    type Output = Vector2&lt;&lt;T as Add&gt;::Output&gt;;\n\n    fn add(self, other: Vector2&lt;T&gt;) -&gt; Self::Output {\n        Vector2 {\n            x: self.x + other.x,\n            y: self.y + other.y,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 10147682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b337b805e6106ecbbc2b84862e7f3e90?s=128&d=identicon&r=PG&f=1", "display_name": "Damian", "link": "https://stackoverflow.com/users/10147682/damian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "closed_date": 1532955596, "accepted_answer_id": 51589011, "answer_count": 1, "score": 2, "last_activity_date": 1532955671, "creation_date": 1532935021, "last_edit_date": 1532955560, "question_id": 51588809, "link": "https://stackoverflow.com/questions/51588809/how-do-i-explain-to-the-compiler-that-t-implements-add-in-a-way-that-returns-the", "closed_reason": "Duplicate", "title": "How do I explain to the compiler that T implements Add in a way that returns the same type?", "body": "<p>I'm trying to implement <code>Add</code> for a simple generic type:</p>\n\n<pre><code>use std::ops::Add;\n\npub struct Vector2&lt;T&gt; {\n    x: T,\n    y: T,\n}\n\nimpl&lt;T&gt; Vector2&lt;T&gt; {\n    fn new(x: T, y: T) -&gt; Self {\n        Vector2::&lt;T&gt; { x, y }\n    }\n}\n\nimpl&lt;T: Add&gt; Add&lt;Vector2&lt;T&gt;&gt; for Vector2&lt;T&gt; {\n    type Output = Vector2&lt;T&gt;;\n\n    fn add(self, other: Vector2&lt;T&gt;) -&gt; Vector2&lt;T&gt; {\n        let x = self.x + other.x;\n        let y = self.y + other.y;\n\n        Vector2::&lt;T&gt; {\n            x: self.x + other.x,\n            y: self.y + other.y,\n        }\n    }\n}\n</code></pre>\n\n<p>Here's the result:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:22:16\n   |\n22 |             x: self.x + other.x,\n   |                ^^^^^^^^^^^^^^^^ expected type parameter, found associated type\n   |\n   = note: expected type `T`\n              found type `&lt;T as std::ops::Add&gt;::Output`\n</code></pre>\n\n<p>If I interpret this correctly, it's saying \"You said you were giving me <code>T</code>, but instead all I have is the result of <code>T + T</code>, and I don't have visibility to know whether that is <code>T</code>.\"</p>\n\n<p>How do I explain to the compiler that <code>T</code> not only implements <code>Add,</code> but it does so in a way that returns the same type?</p>\n"}, {"tags": ["data-structures", "hashmap", "rust", "multimap"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1532899980, "post_id": 51584729, "comment_id": 90134976, "body": "That is not a map data structure. You are looking for a multi-value map, or a bag. Have you tried something like <code>HashMap&lt;u32, Vec&lt;Sender&gt;&gt;</code>?"}, {"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1532900272, "post_id": 51584729, "comment_id": 90135026, "body": "@E_net4, I am bit unfamiliar with Vec. (Very beginner here). I saw them in few tutorial but didn&#39;t catch the idea yet. If this is what I mean, Could you please elaborate with sample so I can try on my end? Btw, I should be able to add/remove values too (after set)"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1532900542, "post_id": 51584729, "comment_id": 90135091, "body": "You may start with what&#39;s on <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch08-01-vectors.html#storing-lists-of-values-with-vectors\" rel=\"nofollow noreferrer\">The Rust Programming Language (chapter 8)</a>, as it covers the usage of <code>Vec</code> to store lists of values pretty well. There is no multi-valued map collection type in the standard library, likely because it can be implemented by combining a map with a vector or set."}, {"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1532900958, "post_id": 51584729, "comment_id": 90135185, "body": "Working on it. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "edited": false, "score": 0, "creation_date": 1532962888, "post_id": 51585452, "comment_id": 90159728, "body": "Thank you for both samples. May I ask how do you delete a specifc Vec (lets say i want to remove one of the vec&#39;s but not whole entry.) I cannot find proper remove for values"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "edited": false, "score": 0, "creation_date": 1532963271, "post_id": 51585452, "comment_id": 90159994, "body": "@Pratha In both cases, the method is named the same. Just do  <code>my_map.remove(key)</code>."}, {"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "edited": false, "score": 0, "creation_date": 1532963521, "post_id": 51585452, "comment_id": 90160132, "body": "But this removes key with all values. Am I right? I would like to keep key and values but remove one of its values."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "edited": false, "score": 0, "creation_date": 1532965740, "post_id": 51585452, "comment_id": 90161450, "body": "@Pratha Ok, you don&#39;t want to remove the Vec, but just an element of it? In the code above, <code>.entry(key).or_insert_with(Vec::new)</code> gives you a mutable reference to a <code>Vec</code>. If you chose to use <code>MultiMap</code> then <code>.get_vec_mut(key)</code> will give you the same thing. In both cases you&#39;ll have a mutable Vec reference so you can use any of the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#methods\" rel=\"nofollow noreferrer\">Vec methods</a> to do what you need. If you&#39;re still having problems, I suggest you spend a bit of time familiarising yourself with <code>Vec</code>, and possibly ask a new question if you really get stuck."}, {"owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "edited": false, "score": 0, "creation_date": 1532965825, "post_id": 51585452, "comment_id": 90161502, "body": "Exactly. This will work. You explained very well thank you again. I will definitely do some learning on Vec."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 12, "last_activity_date": 1602102244, "last_edit_date": 1602102244, "creation_date": 1532908088, "answer_id": 51585452, "question_id": 51584729, "link": "https://stackoverflow.com/questions/51584729/how-can-i-store-multiple-elements-in-a-rust-hashmap-for-the-same-key/51585452#51585452", "title": "How can I store multiple elements in a Rust HashMap for the same key?", "body": "<p>To do this with a <code>HashMap</code> you should use a <code>Vec</code> as the values, so that each key can point to multiple <code>Sender</code>s. The type then would be <code>HashMap&lt;u32, Vec&lt;Sender&gt;&gt;</code>.</p>\n<p>Using this structure, just using <code>insert()</code> can get clunky when you need to mutate the values like this, but instead you can use the <code>Entry</code> API for retrieving and updating records in one go. For example:</p>\n<pre><code>let mut hash_map: HashMap&lt;u32, Vec&lt;Sender&gt;&gt; = HashMap::new();\n\nhash_map.entry(3)\n    // If there's no entry for key 3, create a new Vec and return a mutable ref to it\n    .or_default()\n    // and insert the item onto the Vec\n    .push(sender); \n</code></pre>\n<hr />\n<p>You could also use the <a href=\"https://crates.io/crates/multimap\" rel=\"nofollow noreferrer\"><code>multimap</code> crate</a>, which does something similar under the hood, but adds a layer of abstraction. You might find it easier to work with:</p>\n<pre><code>let mut multi_map = MultiMap::new();\n\nmulti_map.insert(3, sender_1);\nmulti_map.insert(3, sender_2);\n</code></pre>\n<p>The method <code>multi_map.get(key)</code> will the first value with that key, while <code>multi_map.get_vec(key)</code> will retrieve all of them.</p>\n"}], "owner": {"reputation": 1315, "user_id": 7412183, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/a73ddfb4eba2ce63e534ab68317210dc?s=128&d=identicon&r=PG&f=1", "display_name": "Dennis", "link": "https://stackoverflow.com/users/7412183/dennis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3464, "favorite_count": 0, "accepted_answer_id": 51585452, "answer_count": 1, "score": 5, "last_activity_date": 1602102244, "creation_date": 1532899900, "last_edit_date": 1545488298, "question_id": 51584729, "link": "https://stackoverflow.com/questions/51584729/how-can-i-store-multiple-elements-in-a-rust-hashmap-for-the-same-key", "title": "How can I store multiple elements in a Rust HashMap for the same key?", "body": "<p>I have a <code>HashMap&lt;u32, Sender&gt;</code>. <code>Sender</code> is a open connection object and the key is a user id. Each user can connect from multiple devices. I need to store all possible open connections for the same user id. After this I can iterate and send messages to all open connections for same user.</p>\n\n<p>The above <code>HashMap</code> only stores each user id and connection once. I need to get one key with multiple values. How can I make the value into a list or an array, so I can see which connections exist and send to them all?</p>\n\n<p>I am not talking about different value types, like enums. I am talking about the same type values but more than one. Maybe <code>HashMap</code> is not designed for this?</p>\n\n<p>Alternative ideas are also welcomed.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1532902013, "post_id": 51584139, "comment_id": 90135416, "body": "Is it reasonable for a type to implement both <code>Point&lt;char&gt;</code> and (for example) <code>Point&lt;i32&gt;</code>? Or will every type that implements <code>Point</code> implement it only once? If the latter, you want an associated type, not a generic one. See <a href=\"https://stackoverflow.com/q/42613974/3650362\">stackoverflow.com/q/42613974/3650362</a>"}, {"owner": {"reputation": 1105, "user_id": 840635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62d893cacc4318e7a96f830f1bc7cb99?s=128&d=identicon&r=PG", "display_name": "Carlos", "link": "https://stackoverflow.com/users/840635/carlos"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532966023, "post_id": 51584139, "comment_id": 90161626, "body": "Thanks!. I&#39;ve been able to write a working example using associated type. This is the link <a href=\"https://play.rust-lang.org/?gist=adac9f30c472054e4674e2fcd973f603&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> just in case it could help anyone."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1532895638, "creation_date": 1532895638, "answer_id": 51584225, "question_id": 51584139, "link": "https://stackoverflow.com/questions/51584139/how-do-i-declare-the-implementation-of-a-function-that-takes-a-trait-that-has-a/51584225#51584225", "title": "How do I declare the implementation of a function that takes a trait that has a type parameter?", "body": "<p>A generic type must be monomorphized: each generic type must be resolved as a concrete type. If there is no constraint, the compiler cannot know what is the concrete type you want. You must put the generic type in the function:</p>\n\n<pre><code>pub trait Point&lt;I: PartialEq&gt; {\n    fn id(&amp;self) -&gt; I;\n}\n\npub struct Connection&lt;T&gt; {\n    pub to: T\n}\n\nimpl&lt;T&gt; Connection&lt;T&gt; {\n    pub fn is_connected_to&lt;I: PartialEq&gt;(&amp;self, point: T) -&gt; bool\n    where\n        T: Point&lt;I&gt;\n    {\n        self.to.id() == point.id()\n    }\n}\n\npub fn main() {\n    struct SimplePoint;\n    impl Point&lt;char&gt; for SimplePoint{\n        fn id(&amp;self) -&gt; char { return 'A' }\n    }\n\n    let a = SimplePoint {};\n\n    let conn = Connection {\n        to: a\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 1105, "user_id": 840635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/62d893cacc4318e7a96f830f1bc7cb99?s=128&d=identicon&r=PG", "display_name": "Carlos", "link": "https://stackoverflow.com/users/840635/carlos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1236, "favorite_count": 0, "accepted_answer_id": 51584225, "answer_count": 1, "score": 3, "last_activity_date": 1532895688, "creation_date": 1532894923, "last_edit_date": 1532895688, "question_id": 51584139, "link": "https://stackoverflow.com/questions/51584139/how-do-i-declare-the-implementation-of-a-function-that-takes-a-trait-that-has-a", "title": "How do I declare the implementation of a function that takes a trait that has a type parameter?", "body": "<p>I have a trait with generic type. I want to define a struct with a property which meets that trait and I want to implement a function in that struct that uses the function inside the trait:</p>\n\n<pre><code>pub trait Point&lt;I&gt; {\n    fn id(&amp;self) -&gt; I;\n}\n\npub struct Connection&lt;T&gt; {\n    pub to: T,\n}\n\nimpl&lt;T: Point&gt; Connection&lt;T&gt; {\n    pub fn is_connected_to(&amp;self, point: T) -&gt; bool {\n        self.to.id() == point.id()\n    }\n}\n\npub fn main() {\n    struct SimplePoint;\n    impl Point&lt;char&gt; for SimplePoint {\n        fn id(&amp;self) -&gt; char {\n            return 'A';\n        }\n    }\n\n    let a = SimplePoint {};\n\n    let conn = Connection { to: a };\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=d70d592fbe40a006e09a1086672dcfe1&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>If I try to run this code, I get an error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0243]: wrong number of type arguments: expected 1, found 0\n --&gt; src/main.rs:9:9\n  |\n9 | impl&lt;T: Point&gt; Connection&lt;T&gt; {\n  |         ^^^^^ expected 1 type argument\n</code></pre>\n\n<p>If I try add a generic type:</p>\n\n<pre><code>impl&lt;T: Point&lt;I&gt;&gt; Connection&lt;T&gt; {\n    pub fn is_connected_to(&amp;self, point: T) -&gt; bool {\n        self.to.id() == point.id()\n    }\n}\n</code></pre>\n\n<p>Then I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0412]: cannot find type `I` in this scope\n --&gt; src/main.rs:9:15\n  |\n9 | impl&lt;T: Point&lt;I&gt;&gt; Connection&lt;T&gt; {\n  |               ^ did you mean `T`?\n</code></pre>\n\n<p>If I try to define the type <code>I</code>:</p>\n\n<pre><code>impl&lt;I, T: Point&lt;I&gt;&gt; Connection&lt;T&gt; {\n    pub fn is_connected_to(&amp;self, point: T) -&gt; bool {\n        self.to.id() == point.id()\n    }\n}\n</code></pre>\n\n<p>The compiler tells me that <code>I</code> is unconstrained:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0207]: the type parameter `I` is not constrained by the impl trait, self type, or predicates\n --&gt; src/main.rs:9:6\n  |\n9 | impl&lt;I, T: Point&lt;I&gt;&gt; Connection&lt;T&gt; {\n  |      ^ unconstrained type parameter\n</code></pre>\n\n<p>How should I declare the implementation of the <code>is_connected_to</code> function?</p>\n"}, {"tags": ["visual-studio-code", "rust"], "answers": [{"tags": [], "owner": {"reputation": 84, "user_id": 9267451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b4be44427ddb57e5e13e279dabe32b5?s=128&d=identicon&r=PG&f=1", "display_name": "Tyfingr", "link": "https://stackoverflow.com/users/9267451/tyfingr"}, "is_accepted": false, "score": 0, "last_activity_date": 1532957707, "last_edit_date": 1532957707, "creation_date": 1532940759, "answer_id": 51590219, "question_id": 51581243, "link": "https://stackoverflow.com/questions/51581243/how-to-view-external-librarys-source-in-a-rust-project-in-visual-studio-code/51590219#51590219", "title": "How to view external library&#39;s source in a Rust project in Visual Studio Code?", "body": "<p>Not sure if there is a built in feature, but you can use right click, Go to definition (<kbd>F12</kbd>). </p>\n\n<p>For example: <code>use std::io::BufReader;</code> right-click <kbd>F12</kbd> on <code>BufReader</code> opens up the file <code>buffered.rs</code> with the definition.</p>\n"}], "owner": {"reputation": 1611, "user_id": 7526319, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/aUMpl.jpg?s=128&g=1", "display_name": "Sajuuk", "link": "https://stackoverflow.com/users/7526319/sajuuk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 193, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1532957707, "creation_date": 1532874046, "last_edit_date": 1532876355, "question_id": 51581243, "link": "https://stackoverflow.com/questions/51581243/how-to-view-external-librarys-source-in-a-rust-project-in-visual-studio-code", "title": "How to view external library&#39;s source in a Rust project in Visual Studio Code?", "body": "<p>When working on Rust projects in IntelliJ IDEA, the IDE provides a project view with access to external library sources:</p>\n\n<p><a href=\"https://i.stack.imgur.com/WDi8T.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/WDi8T.jpg\" alt=\"project view with access to external library sources\"></a></p>\n\n<p>This is configurable at the import or creation of a Rust project. </p>\n\n<p><a href=\"https://i.stack.imgur.com/EqMXz.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/EqMXz.jpg\" alt=\"configuration\"></a></p>\n\n<p>Does this feature exist in a Visual Studio Code Rust project workflow?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532863255, "post_id": 51579647, "comment_id": 90124822, "body": "I had a lot of problems both matching and emitting type bounds. It was a while ago, but I think I ended up just doing something else instead..."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532864938, "post_id": 51579647, "comment_id": 90125250, "body": "@PeterHall The Rust team should do something about that. IMO, the macro system should permit to easily match and emit the language syntax."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532866112, "post_id": 51580104, "comment_id": 90125581, "body": "Unfortunately, I do have generic trait bounds :( But your idea is good !"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532871605, "post_id": 51580104, "comment_id": 90127071, "body": "I initially expected <code>tt</code> to match things like  <code>Into&lt;u32&gt;</code> here actually.  I think you really want to use <code>ty</code>, but there are too many restrictions about what can follow it - e.g. <code>+</code> cannot."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532873302, "post_id": 51580104, "comment_id": 90127521, "body": "I tried with <code>ty</code> with coma separator and semicolon termination, but when I try to expand the macro, I&#39;m getting this error: <code>expected </code>where<code>, or </code>{` after struct name`"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1532865434, "creation_date": 1532865434, "answer_id": 51580104, "question_id": 51579647, "link": "https://stackoverflow.com/questions/51579647/how-to-match-trait-bounds-in-a-macro/51580104#51580104", "title": "How to match trait bounds in a macro?", "body": "<p>I was able to get this to match by splitting the first bound from the rest. </p>\n\n<pre><code>macro_rules! test {\n    (\n        where $(\n            $bounded_type:ident: $bound:tt $(+ $others:tt )*,\n        )+\n    ) =&gt; {\n        // Dummy expansion for test:\n        struct Foo&lt;T, U&gt;\n        where $(\n            $bounded_type : $bound $(+ $others)*,\n        )+\n\n        {\n            t: T,\n            u: U\n        }\n    }\n}\n</code></pre>\n\n<p>However, this isn't going to work if the traits have parameters.</p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532897256, "post_id": 51581434, "comment_id": 90134269, "body": "<code>parse_where_shim!</code> calls <code>parse_where!</code> in this file <a href=\"https://github.com/DanielKeep/rust-parse-generics/blob/master/parse-generics-shim/src/parse_where_shim.rs\" rel=\"nofollow noreferrer\">github.com/DanielKeep/rust-parse-generics/blob/master/&hellip;</a>, but I cannot find the definition of the latter."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532995657, "post_id": 51581434, "comment_id": 90173492, "body": "@Boiethios You&#39;ll note that the next macro is <i>also</i> called <code>parse_where_shim!</code> and has the exact inverse conditional compilation condition.  <code>parse_where!</code> was a proposed addition to the compiler that was rejected; hence the alternate implementation that doesn&#39;t use it."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1532875261, "creation_date": 1532875261, "answer_id": 51581434, "question_id": 51579647, "link": "https://stackoverflow.com/questions/51579647/how-to-match-trait-bounds-in-a-macro/51581434#51581434", "title": "How to match trait bounds in a macro?", "body": "<p>Your best bet is to read the <a href=\"https://github.com/DanielKeep/rust-parse-generics/tree/master/parse-generics-shim\" rel=\"nofollow noreferrer\">source code for the <code>parse-generics-shim</code> crate</a>; it's a bit old, but should hopefully still work.  This is <em>way</em> too convoluted to explain in a Stack Overflow question, since it would basically involve copy+pasting the source of that crate into the answer.</p>\n\n<p>The easier approach is to just <em>not</em> parse actual Rust syntax, and use something the macro parser <em>can</em> handle, like wrapping the constraints in a group (like <code>{ ... }</code>).</p>\n"}, {"tags": [], "owner": {"reputation": 1186, "user_id": 837964, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/87a9a620de21a352537c68881cdc7625?s=128&d=identicon&r=PG", "display_name": "norcalli", "link": "https://stackoverflow.com/users/837964/norcalli"}, "is_accepted": false, "score": 1, "last_activity_date": 1564103856, "creation_date": 1564103856, "answer_id": 57211953, "question_id": 51579647, "link": "https://stackoverflow.com/questions/51579647/how-to-match-trait-bounds-in-a-macro/57211953#57211953", "title": "How to match trait bounds in a macro?", "body": "<p>Since around 2016 with the closing of <a href=\"https://github.com/rust-lang/rust/pull/38279\" rel=\"nofollow noreferrer\">this issue</a>, you could use the <code>path</code> macro type to match <code>TypePath</code>s.</p>\n\n<p>For example, from my own code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>($name:ident&lt;$($l:lifetime, )*$($x:ident : $xt:path),+&gt;($s:ident$(, $a:ident: $t:ty)*) -&gt; $ret:ty  =&gt; $body:block) =&gt; {\n}\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 880, "favorite_count": 0, "answer_count": 3, "score": 4, "last_activity_date": 1564103856, "creation_date": 1532862257, "last_edit_date": 1532874637, "question_id": 51579647, "link": "https://stackoverflow.com/questions/51579647/how-to-match-trait-bounds-in-a-macro", "title": "How to match trait bounds in a macro?", "body": "<p>I'm trying to match the trait bounds for generic types:</p>\n\n<pre><code>macro_rules! test {\n    (\n        where $(\n            $bounded_type:ident: $( $bound:tt )++,\n        )+\n    ) =&gt; {\n        // Dummy expansion for test:\n        struct Foo&lt;T, U&gt;\n        where $(\n            $bounded_type : $( $bound )++,\n        )+\n        {\n            t: T,\n            u: U\n        }\n    }\n}\n\ntest! {\n    where\n        T: PartialEq + Clone,\n        U: PartialEq,\n}\n\nfn main() {}\n</code></pre>\n\n<p>Unfortunately, if I understand well, the only way to match a trait is a <code>tt</code> fragment, but this fragment can match almost anything, so whatever I do, I get an error:</p>\n\n<pre><code>error: local ambiguity: multiple parsing options: built-in NTs tt ('bound') or 1 other option.\n</code></pre>\n\n<p>How can I match this piece of code?</p>\n\n<p>Note that I do not <em>need</em> something very elegant (I do not need it for plublic users) but of course, the more elegant, the better.</p>\n"}, {"tags": ["image", "rust"], "answers": [{"comments": [{"owner": {"reputation": 423, "user_id": 1211392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dbc8b835bed12dd8194c240139033bc8?s=128&d=identicon&r=PG", "display_name": "Usagi Ito", "link": "https://stackoverflow.com/users/1211392/usagi-ito"}, "edited": false, "score": 0, "creation_date": 1532864494, "post_id": 51579928, "comment_id": 90125136, "body": "It works! Thank you.  if i.color() != image::ColorType::RGB( 8 ) { return None; }"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1532864816, "last_edit_date": 1532864816, "creation_date": 1532864170, "answer_id": 51579928, "question_id": 51579453, "link": "https://stackoverflow.com/questions/51579453/how-can-i-get-and-compare-the-colortype-from-loaded-image-using-the-image-crate/51579928#51579928", "title": "How can I get and compare the ColorType from loaded image, using the image crate?", "body": "<p><code>image::load_from_memory()</code> returns a <code>Result</code> containing a <a href=\"https://docs.rs/image/0.19.0/image/enum.DynamicImage.html\" rel=\"nofollow noreferrer\"><code>DynamicImage</code></a> if successful. <code>DynamicImage</code> has a <a href=\"https://docs.rs/image/0.19.0/image/enum.DynamicImage.html#method.color\" rel=\"nofollow noreferrer\"><code>color()</code> method</a>, which is the <code>ColorType</code> you are looking for.</p>\n\n<p>So you want:</p>\n\n<pre><code>if i.color() != image::ColorType::RGB(8) {\n    return None;\n}\n</code></pre>\n"}], "owner": {"reputation": 423, "user_id": 1211392, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dbc8b835bed12dd8194c240139033bc8?s=128&d=identicon&r=PG", "display_name": "Usagi Ito", "link": "https://stackoverflow.com/users/1211392/usagi-ito"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "accepted_answer_id": 51579928, "answer_count": 1, "score": -1, "last_activity_date": 1532865171, "creation_date": 1532860734, "last_edit_date": 1532865171, "question_id": 51579453, "link": "https://stackoverflow.com/questions/51579453/how-can-i-get-and-compare-the-colortype-from-loaded-image-using-the-image-crate", "title": "How can I get and compare the ColorType from loaded image, using the image crate?", "body": "<p>The situation is below:</p>\n\n<pre><code>let i = image::load_from_memory( &amp;buffer ).unwrap();\n// The problem\nif i.[[[how_get_the_ColorType??]]] != image::ColorType::RGB(8) {\n    return None;\n}\n</code></pre>\n\n<p>How get and compare the <code>ColorType</code> of <code>i</code>?</p>\n\n<hr>\n\n<p>I have read these docs but I can't understand them well enough:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/image/0.19.0/image/trait.Pixel.html\" rel=\"nofollow noreferrer\">https://docs.rs/image/0.19.0/image/trait.Pixel.html</a></li>\n<li><a href=\"https://docs.rs/image/0.19.0/image/trait.GenericImage.html\" rel=\"nofollow noreferrer\">https://docs.rs/image/0.19.0/image/trait.GenericImage.html</a></li>\n</ul>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1532843305, "post_id": 51577597, "comment_id": 90120566, "body": "I didn&#39;t understand anything to your question but take a look to <a href=\"https://github.com/dzamlo/rust-bitfield/\" rel=\"nofollow noreferrer\">bitfield</a> or <a href=\"https://docs.rs/sparse-bitfield/0.4.0/sparse_bitfield/\" rel=\"nofollow noreferrer\">sparse_bitfield</a>"}, {"owner": {"reputation": 4689, "user_id": 1755847, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/tTDlX.png?s=128&g=1", "display_name": "manabreak", "link": "https://stackoverflow.com/users/1755847/manabreak"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1532843432, "post_id": 51577597, "comment_id": 90120587, "body": "@Stargateur I don&#39;t really understand how that relates to my question? I have my own, properly working bitset implementation already in place."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1532843770, "post_id": 51577597, "comment_id": 90120635, "body": "Oh I was more thinking to <a href=\"https://github.com/bitflags/bitflags\" rel=\"nofollow noreferrer\">bitflags</a> sorry. But I still don&#39;t understand what you are trying to do, you are showing code that implement manually the value on two types, that really doesn&#39;t look like strong code for me, the only answer you will have currently is build a macro, your question doesn&#39;t include enough context to understand what you are doing."}, {"owner": {"reputation": 4689, "user_id": 1755847, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/tTDlX.png?s=128&g=1", "display_name": "manabreak", "link": "https://stackoverflow.com/users/1755847/manabreak"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1532851628, "post_id": 51577597, "comment_id": 90122150, "body": "@Stargateur I want to replace the manual value retrieval by macros or something else that generates the indexes automatically."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 6, "last_activity_date": 1532876942, "last_edit_date": 1532876942, "creation_date": 1532861272, "answer_id": 51579508, "question_id": 51577597, "link": "https://stackoverflow.com/questions/51577597/how-to-automatically-generate-incrementing-number-identifiers-for-each-implement/51579508#51579508", "title": "How to automatically generate incrementing number identifiers for each implementation of a trait?", "body": "<p>You can define a macro that calls itself recursively:</p>\n\n<pre><code>macro_rules! impl_component {\n    // Empty case to end the recursion\n    ($n:expr ;) =&gt; {};\n    // Match the current count, the current type, and whatever else comes after\n    ($n:expr ; $t:ty $(, $rest:tt)*) =&gt; {\n        impl Component for $t {\n            fn index(&amp;self) -&gt; usize { $n }\n        }\n        // Recurse, incrementing counter and only passing the remaining params\n        impl_component!($n + 1; $($rest),*);\n    };\n    // For the first recursion, set the counter initial value to zero\n    ($($types:tt),+) =&gt; { impl_component!(0; $($types),*); };\n}\n\nimpl_component!(Foo, Bar, Baz);\n</code></pre>\n\n<p>The generated code will include implementations like this:</p>\n\n<pre><code>impl Component for Baz {\n    fn index(&amp;self) -&gt; usize { 0 + 1 + 1 }\n}\n</code></pre>\n\n<p>The compiler will collapse those expressions into literals, so the result is equivalent to what you wanted.</p>\n"}], "owner": {"reputation": 4689, "user_id": 1755847, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/tTDlX.png?s=128&g=1", "display_name": "manabreak", "link": "https://stackoverflow.com/users/1755847/manabreak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 378, "favorite_count": 0, "accepted_answer_id": 51579508, "answer_count": 1, "score": 4, "last_activity_date": 1545613664, "creation_date": 1532843210, "last_edit_date": 1545613664, "question_id": 51577597, "link": "https://stackoverflow.com/questions/51577597/how-to-automatically-generate-incrementing-number-identifiers-for-each-implement", "title": "How to automatically generate incrementing number identifiers for each implementation of a trait?", "body": "<p>I have a <code>Component</code> trait that has a method to return an index, like so:</p>\n\n<pre><code>trait Component {\n    fn index(&amp;self) -&gt; usize;\n}\n</code></pre>\n\n<p>These indexes are used for setting flags in a bitset. For example, a <code>Component</code> trait object returning an index of 5 would result in 5th bit being set in a container.</p>\n\n<p>Currently I return a running index for each implementing type manually:</p>\n\n<pre><code>struct Foo;\nstruct Bar;\n\nimpl Component for Foo {\n    fn index(&amp;self) -&gt; usize { 0 }\n}\n\nimpl Component for Bar {\n    fn index(&amp;self) -&gt; usize { 1 }\n}\n</code></pre>\n\n<p>The trait objects are inserted into a container which keeps track of added components using a bitset:</p>\n\n<pre><code>struct Container&lt;'a&gt; {\n    components: Vec&lt;Component + 'a&gt;,\n    bits: BitSet\n}\n\nimpl&lt;'a&gt; Container&lt;'a&gt; {\n    fn add&lt;T: Component + 'a&gt;(&amp;mut self, component: T) {\n        self.components.push(component);\n        self.bits.set(component.index());\n    }\n}\n</code></pre>\n\n<p>This works fine, but manually returning the index for each implementing type is cumbersome. How could I make it so that each implementing type would get its index automatically?</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1532874963, "post_id": 51577192, "comment_id": 90127951, "body": "Also, why would you return a <code>&amp;char</code> rather than a <code>char</code>?"}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1532883066, "post_id": 51577192, "comment_id": 90130246, "body": "@mcarton <a href=\"https://doc.rust-lang.org/std/iter/struct.Peekable.html#method.peek\" rel=\"nofollow noreferrer\"><code>peek()</code></a> returns a reference to the next item in the iterable. It cannot take ownership of the actual item as it is only peeking ahead, not actually consuming the value like <code>next()</code> would. To return a <code>char</code> the char would have to be cloned first."}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1532883127, "post_id": 51577192, "comment_id": 90130270, "body": "@SilvioMayolo Can you share what you have that compiles without borrow errors? I&#39;m new and could benefit from seeing code from someone more familiar with Rust."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532883297, "post_id": 51577192, "comment_id": 90130330, "body": "<a href=\"https://play.rust-lang.org/?gist=e1f7e6d94aebc976f96264c517041d17&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1532883341, "post_id": 51577192, "comment_id": 90130347, "body": "Upon going back to it today, I realize I made a foolish typo that confused the compiler. I can reproduce your error now. But I think mcarton is right that you should just clone the <code>char</code>. Cloning characters is cheap, and retaining a reference to that character in the container is what&#39;s stopping you from doing what you want to do."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1532883434, "post_id": 51577192, "comment_id": 90130383, "body": "@IncreasinglyIdiotic but <code>char</code> is a trivial type to clone/copy, so unless you really do need a reference, don&#39;t use a reference, and I don&#39;t believe a reference would ever be useful here."}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1532883464, "post_id": 51577192, "comment_id": 90130399, "body": "@SilvioMayolo Thanks, but what if I have the same issue with something else that cannot be trivially cloned?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1532883475, "post_id": 51577192, "comment_id": 90130403, "body": "Your <a href=\"https://play.rust-lang.org/?gist=7001578b86c14610d08b533cbe531980&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">original code will work as-is</a> once <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical lifetimes</a> are available."}, {"owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532883832, "post_id": 51577192, "comment_id": 90130507, "body": "@Shepmaster I think that clears things up quite a bit, thanks! Am I right in understanding the code above cannot be compiled by rust without cloning the char as long as Rust relies on lexical lifetimes?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532884036, "post_id": 51577192, "comment_id": 90130563, "body": "That&#39;s correct. The compiler currently doesn&#39;t see that the borrow held by <code>next</code> is no longer used once the while loop&#39;s body is started."}], "owner": {"reputation": 4217, "user_id": 9614249, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eJfci.png?s=128&g=1", "display_name": "Increasingly Idiotic", "link": "https://stackoverflow.com/users/9614249/increasingly-idiotic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1532883272, "answer_count": 0, "score": 1, "last_activity_date": 1532883131, "creation_date": 1532837982, "last_edit_date": 1532883131, "question_id": 51577192, "link": "https://stackoverflow.com/questions/51577192/how-to-wrap-a-peekable-iterator-without-without-breaking-borrow-rules", "closed_reason": "Duplicate", "title": "How to wrap a peekable iterator without without breaking borrow rules", "body": "<p>I am trying to make a simple lexer that works on <a href=\"https://doc.rust-lang.org/std/iter/struct.Peekable.html\" rel=\"nofollow noreferrer\"><code>Peekable</code></a> iterators. When there are no more characters left to iterate I return EOF instead using <code>unwrap_or()</code>.</p>\n\n<p>Instead of constantly typing out <code>iter.peek().unwrap_or(&amp;EOF)</code>, I have a function <code>peek_or_eof</code>. I try and use the function like this:</p>\n\n<pre><code>use std::iter::Peekable;\n\nconst EOF: char = '\\0';\n\nenum Token {\n    Identifier(String),\n}\n\npub struct Lexer&lt;I&gt;\nwhere\n    I: Iterator&lt;Item = char&gt;,\n{\n    stream: Peekable&lt;I&gt;,\n}\n\nimpl&lt;I&gt; Lexer&lt;I&gt;\nwhere\n    I: Iterator&lt;Item = char&gt;,\n{\n    fn peek_or_eof(stream: &amp;mut Peekable&lt;I&gt;) -&gt; &amp;char {\n        stream.peek().unwrap_or(&amp;EOF)\n    }\n\n    fn read_identifier(stream: &amp;mut Peekable&lt;I&gt;) -&gt; Option&lt;Token&gt; {\n        // ...\n\n        let mut identifier = String::new();\n\n        let mut next = Lexer::peek_or_eof(stream);\n        while next.is_alphanumeric() || next == &amp;'_' {\n            identifier.push(stream.next().unwrap());\n            next = Lexer::peek_or_eof(stream);\n        }\n\n        // ...\n        None\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=4eada00f8dd76a8b3fd8c6b8cfd5ab6f&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>The above code results in the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*stream` as mutable more than once at a time\n  --&gt; src/main.rs:31:29\n   |\n29 |         let mut next = Lexer::peek_or_eof(stream);\n   |                                           ------ first mutable borrow occurs here\n30 |         while next.is_alphanumeric() || next == &amp;'_' {\n31 |             identifier.push(stream.next().unwrap());\n   |                             ^^^^^^ second mutable borrow occurs here\n...\n37 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>If I understand correctly, the borrow lifetime is the same as the returned character reference, which in this case is <code>next</code>. However, I don't actually use next after checking the condition in the while loop and <code>next</code> will be overwritten with a new value before the next iteration of the loop.</p>\n\n<p>Am I making a larger mistake? How do I let the compiler know that the mutable borrow on stream is done and that it is safe to allow another mutable borrow?</p>\n"}, {"tags": ["rust", "rust-cargo", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532811266, "post_id": 51574929, "comment_id": 90116100, "body": "TL;DR the duplicate: <code>serde_support = [&quot;nalgebra&#47;serde-serialize&quot;]</code>"}], "owner": {"reputation": 107, "user_id": 569349, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/101466804065795b1a0b8dbfc2b6cfc2?s=128&d=identicon&r=PG", "display_name": "E. J. Winkleberry", "link": "https://stackoverflow.com/users/569349/e-j-winkleberry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 31, "favorite_count": 0, "closed_date": 1532811226, "answer_count": 0, "score": 1, "last_activity_date": 1538857741, "creation_date": 1532808834, "last_edit_date": 1538857741, "question_id": 51574929, "link": "https://stackoverflow.com/questions/51574929/how-to-set-dependencies-features-based-on-library-features", "closed_reason": "Duplicate", "title": "How to set dependencies&#39; features based on library features?", "body": "<p>I have a package for which I want serde support to be optional. I have it set up as a feature, and some of my dependencies (e.g. nalgebra) have it set up as a feature as well.</p>\n\n<p>In my <code>Cargo.toml</code> I have something like this:</p>\n\n<pre><code>[package]\nname = \"foo\"\n\n[features]\nserde_support = []\n\n[dependencies]\nnalgebra = {version = \"0.16.0\", features = [\"serde-serialize\"]}\n</code></pre>\n\n<p>Is there a way to set things up so <code>serde-serialize</code> in <code>nalgebra</code> is only enabled when <code>serde_support</code> in <code>foo</code> is enabled?</p>\n"}, {"tags": ["parallel-processing", "rust", "rayon"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1532807094, "post_id": 51574380, "comment_id": 90115091, "body": "It&#39;s not an infinite loop, it just takes a while to sum 50 million integers. Especially if it has to handle failure so many times in between."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1532807104, "creation_date": 1532807104, "answer_id": 51574680, "question_id": 51574380, "link": "https://stackoverflow.com/questions/51574380/how-do-i-detect-overflow-on-a-sum-of-integers-using-rayon/51574680#51574680", "title": "How do I detect overflow on a sum of integers using Rayon?", "body": "<p>You are looking for <a href=\"https://docs.rs/rayon/1.0.2/rayon/iter/trait.ParallelIterator.html#method.try_reduce\" rel=\"nofollow noreferrer\"><code>ParallelIterator::try_reduce</code></a>. The documentation example does what you are looking for (and more):</p>\n\n<blockquote>\n<pre><code>use rayon::prelude::*;\n\n// Compute the sum of squares, being careful about overflow.\nfn sum_squares&lt;I: IntoParallelIterator&lt;Item = i32&gt;&gt;(iter: I) -&gt; Option&lt;i32&gt; {\n    iter.into_par_iter()\n        .map(|i| i.checked_mul(i))            // square each item,\n        .try_reduce(|| 0, i32::checked_add)   // and add them up!\n}\nassert_eq!(sum_squares(0..5), Some(0 + 1 + 4 + 9 + 16));\n\n// The sum might overflow\nassert_eq!(sum_squares(0..10_000), None);\n\n// Or the squares might overflow before it even reaches `try_reduce`\nassert_eq!(sum_squares(1_000_000..1_000_001), None);\n</code></pre>\n</blockquote>\n\n<p>Specifically for your example:</p>\n\n<pre><code>extern crate rayon;\n\nuse rayon::prelude::*;\n\nfn main() {\n    let sample: Vec&lt;u32&gt; = (0..50000000).collect();\n    let sum = sample\n        .into_par_iter()\n        .map(Some)\n        .try_reduce(\n            || 0, \n            |a, b| a.checked_add(b)\n        );\n\n    println!(\"{:?}\", sum);\n}\n</code></pre>\n\n<p>The <code>collect</code> is unneeded inefficiency, but I've left it for now.</p>\n"}], "owner": {"reputation": 84, "user_id": 9267451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b4be44427ddb57e5e13e279dabe32b5?s=128&d=identicon&r=PG&f=1", "display_name": "Tyfingr", "link": "https://stackoverflow.com/users/9267451/tyfingr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "accepted_answer_id": 51574680, "answer_count": 1, "score": 0, "last_activity_date": 1532807104, "creation_date": 1532804578, "last_edit_date": 1532806655, "question_id": 51574380, "link": "https://stackoverflow.com/questions/51574380/how-do-i-detect-overflow-on-a-sum-of-integers-using-rayon", "title": "How do I detect overflow on a sum of integers using Rayon?", "body": "<p>Is there a way to detect an overflow in Rayon and force it to panic instead of having an infinite loop?</p>\n\n<pre><code>extern crate rayon;\n\nuse rayon::prelude::*;\n\nfn main() {\n    let sample: Vec&lt;u32&gt; = (0..50000000).collect();\n    let sum: u32 = sample.par_iter().sum();\n\n    println!(\"{}\",sum );\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=02fdafb287c608c26145d1723a392402&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532796525, "post_id": 51573265, "comment_id": 90112592, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/49703990/155423\">Can&#39;t borrow mutably within two different closures in the same scope</a> and/or <a href=\"https://stackoverflow.com/q/41990175/155423\">Problems with mutability in a closure</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51573265/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532796622, "post_id": 51573265, "comment_id": 90112615, "body": "TL;DR the duplicates: pass an argument or switch to <code>RefCell</code>."}, {"owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532802389, "post_id": 51573265, "comment_id": 90114016, "body": "<code>RefCell</code> introduces runtime overhead, which I would prefer to avoid. I was hoping for a solution which can make compiler &quot;happy&quot;. Thanks anyways."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532803286, "post_id": 51573265, "comment_id": 90114237, "body": "The solution to make the compiler happy is to pass <code>values</code> as an argument as @Shepmaster said."}, {"owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1532803390, "post_id": 51573265, "comment_id": 90114263, "body": "@mcarton that diminishes the value of capturing environment :shrug:"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1532805633, "post_id": 51573265, "comment_id": 90114753, "body": "In your example, it is trivial to use a parameter. In a non-trivial example, how would you expect the borrow checker to verify that what you are doing is safe? Generally, capturing the environment is still very useful for immutable closures."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1532808499, "post_id": 51573265, "comment_id": 90115441, "body": "@mcarton how do you feel about <a href=\"https://stackoverflow.com/questions/49703990/cant-borrow-mutably-within-two-different-closures-in-the-same-scope\">my addition</a> of &quot;Unsafe programmer-brain-time borrow checking&quot;?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532808863, "post_id": 51573265, "comment_id": 90115540, "body": "@Shepmaster Good!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532811172, "post_id": 51573265, "comment_id": 90116072, "body": "@ArazAbishov I&#39;ve added an unsafe version to <a href=\"https://stackoverflow.com/q/49703990/155423\">Can&#39;t borrow mutably within two different closures in the same scope</a> to address your concern."}], "owner": {"reputation": 1351, "user_id": 2129181, "user_type": "registered", "accept_rate": 38, "profile_image": "https://i.stack.imgur.com/ZzNsf.jpg?s=128&g=1", "display_name": "Araz Abishov", "link": "https://stackoverflow.com/users/2129181/araz-abishov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1532811102, "answer_count": 0, "score": 0, "last_activity_date": 1532811115, "creation_date": 1532795772, "last_edit_date": 1532796305, "question_id": 51573265, "link": "https://stackoverflow.com/questions/51573265/are-there-any-ways-to-mitigate-or-workaround-mutably-capturing-the-environment-i", "closed_reason": "Duplicate", "title": "Are there any ways to mitigate or workaround mutably capturing the environment in a closure used in a loop?", "body": "<p>The <code>check_vec()</code> closure captures a mutable reference to the <code>values</code> vector. The compiler is not smart enough to understand that <code>values.push(0xbeef)</code> call is safe. I have tried compiling using NLL feature flag, but that didn't help either. </p>\n\n<pre><code>fn main() {\n    let mut values = Vec::with_capacity(16);\n\n    let mut check_vec = || {\n        if values.len() &lt; 16 {\n            values.push(0xdead);\n        }\n    };\n\n    for _ in 0..32 {\n        check_vec();\n        values.push(0xbeef);\n    }\n\n    check_vec();\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=a153790b69b579af80f5c9c81b1aac26&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `values` as mutable more than once at a time\n  --&gt; src/main.rs:12:9\n   |\n4  |     let mut check_vec = || {\n   |                         -- first mutable borrow occurs here\n5  |         if values.len() &lt; 16 {\n   |            ------ previous borrow occurs due to use of `values` in closure\n...\n12 |         values.push(0xbeef);\n   |         ^^^^^^ second mutable borrow occurs here\n...\n16 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>Are there any ways to mitigate or workaround this limitation?</p>\n"}, {"tags": ["loops", "rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 6, "last_activity_date": 1532790239, "last_edit_date": 1532790239, "creation_date": 1532788814, "answer_id": 51572378, "question_id": 51572329, "link": "https://stackoverflow.com/questions/51572329/is-there-a-way-to-tell-the-compiler-that-i-am-managing-ownership-of-a-variable-i/51572378#51572378", "title": "Is there a way to tell the compiler that I am managing ownership of a variable in a loop?", "body": "<p>The usual way of telling the compiler \"It's OK, I will handle it\" is to use <code>unsafe</code>. You <em>could</em> use <code>unsafe</code> here along with some deep <code>ptr</code> magic, but that would be extremely brittle and difficult to prove correct.</p>\n\n<p>However, this is a safe and easy thing to do with an <code>Option</code>:</p>\n\n<pre><code>let mut a = Some(\"Hello\".to_string());\n\nfor _ in 0..5 {\n    if let Some(hello) = a.take() {\n        take_ownership(hello);\n    }\n}\n</code></pre>\n\n<p>In the original, there's no type-level relationship between <code>a</code> and <code>hello</code>, so the compiler can't be sure that <code>hello</code> is only moved once. <code>Option</code> encodes the invariant \"there <em>might</em> be a thing here, or it might be gone\" into the type, so the compiler can know that <code>take_ownership</code> is only called when there is something to pass to it.</p>\n\n<p><a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.take\" rel=\"nofollow noreferrer\"><code>.take()</code></a> is a method that replaces <code>a</code> with <code>None</code>, returning the contents (if any). Because this method does not consume the <code>Option</code>, it's fine to call it multiple times in a loop. <a href=\"https://stackoverflow.com/questions/28258548/cannot-move-out-of-borrowed-content-when-trying-to-transfer-ownership/28268208#28268208\">Cannot move out of borrowed content when trying to transfer ownership</a> is a related question.</p>\n"}], "owner": {"reputation": 3489, "user_id": 9434800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/469a55ff2e5beb918a1ba26465ed5518?s=128&d=identicon&r=PG&f=1", "display_name": "Mickael B.", "link": "https://stackoverflow.com/users/9434800/mickael-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 51572378, "answer_count": 1, "score": 1, "last_activity_date": 1532790239, "creation_date": 1532788535, "last_edit_date": 1532788859, "question_id": 51572329, "link": "https://stackoverflow.com/questions/51572329/is-there-a-way-to-tell-the-compiler-that-i-am-managing-ownership-of-a-variable-i", "title": "Is there a way to tell the compiler that I am managing ownership of a variable in a loop?", "body": "<p>I'm trying to give ownership of a variable to a function in a loop and I have my own boolean to ensure it happens only one time, however the compiler tells me the value was moved in the previous iteration.</p>\n\n<p>Here is an example: </p>\n\n<pre><code>fn take_ownership(a: String) {\n    println!(\"{}\", a);\n}\n\nfn main() {\n    let mut a = true;\n    let hello = \"Hello\".to_string();\n\n    for _ in 0..5 {\n        if a {\n            a = false;\n            take_ownership(hello);\n        }\n    }\n}\n</code></pre>\n\n<p>With this code, the compiler tells me: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `hello`\n  --&gt; src/main.rs:12:28\n   |\n12 |             take_ownership(hello);\n   |                            ^^^^^ value moved here in previous iteration of loop\n</code></pre>\n\n<p>Is there a way to tell the compiler \"it's ok, I will handle it\"? I don't want to use references (<code>&amp;</code>).</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 84, "user_id": 9267451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b4be44427ddb57e5e13e279dabe32b5?s=128&d=identicon&r=PG&f=1", "display_name": "Tyfingr", "link": "https://stackoverflow.com/users/9267451/tyfingr"}, "edited": false, "score": 0, "creation_date": 1532784493, "post_id": 51571774, "comment_id": 90109664, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/27329653/writing-a-macro-that-contains-a-match-body\">Writing a macro that contains a match body</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 84, "user_id": 9267451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b4be44427ddb57e5e13e279dabe32b5?s=128&d=identicon&r=PG&f=1", "display_name": "Tyfingr", "link": "https://stackoverflow.com/users/9267451/tyfingr"}, "edited": false, "score": 2, "creation_date": 1532784802, "post_id": 51571774, "comment_id": 90109743, "body": "@Tyfingr Please can you explain the link between my question and the question/answer you linked because I cannot see it."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532785675, "post_id": 51571774, "comment_id": 90109956, "body": "What does <code>fn foo(self) {} </code> mean outside of an <code>impl</code> block?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532786127, "post_id": 51571774, "comment_id": 90110062, "body": "A fn that takes self is <i>not</i> an item, but its surrounding impl block is."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532786456, "post_id": 51571774, "comment_id": 90110131, "body": "@PeterHall It will be put in an impl block. That&#39;s for a boilerplate code generator. I&#39;ll generate the inherent impl and a trait impl at once."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532786636, "post_id": 51572070, "comment_id": 90110173, "body": "Is it possible to match all the method with a single fragment? I cannot match the impl block because I need to match separately the generic types and the bounds"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532796330, "post_id": 51572070, "comment_id": 90112536, "body": "I&#39;ll use your solution. It will be simple because the functions signature will be always the same."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 4, "last_activity_date": 1532811035, "last_edit_date": 1532811035, "creation_date": 1532786268, "answer_id": 51572070, "question_id": 51571774, "link": "https://stackoverflow.com/questions/51571774/how-to-match-methods-in-macros/51572070#51572070", "title": "How to match methods in macros?", "body": "<p>A function that takes <code>self</code> is not an item, because it can't exist at the top level without an <code>impl</code> block to give a type to <code>self</code>.</p>\n\n<p>The surrounding <code>impl</code> block <em>is</em> an item though.</p>\n\n<p>To match the function, you'd have to break it down, perhaps like this:</p>\n\n<pre><code>macro_rules! test {\n    ( fn $fn:ident ( self ) -&gt; $ret:ty $body:block ) =&gt; {};\n}\n</code></pre>\n\n<p>But you have to use the macro <em>inside</em> the <code>impl</code> block:</p>\n\n<pre><code>impl Foo {\n    test! {\n        fn foo(self) -&gt; bool {\n            true\n        }\n    }\n}\n</code></pre>\n\n<p>You'll have to also handle quite a few permutations of possible kinds of function here though, which could end up getting quite repetitive:</p>\n\n<pre><code>// enables the ? operator for optional parts\n#![feature(macro_at_most_once_rep)]\n\nmacro_rules! test {\n    ( fn $fn:ident ( $($name:ident : $type:ty),* ) $( -&gt; $ret:ty )? \n        $body:block \n    ) =&gt; {};\n    ( fn $fn:ident ( self $(, $name:ident : $type:ty)* ) $( -&gt; $ret:ty )? \n        $body:block \n    ) =&gt; {};\n    ( fn $fn:ident ( &amp;self $(, $name:ident : $type:ty)* ) $( -&gt; $ret:ty )? \n        $body:block \n    ) =&gt; {};\n    ( fn $fn:ident ( &amp;mut self $(, $name:ident : $type:ty)* ) $( -&gt; $ret:ty )? \n        $body:block\n    ) =&gt; {};\n}\n</code></pre>\n\n<p>And these don't even consider lifetime or type parameters.</p>\n\n<p>Getting code reuse, by delegating these cases to another macro, might be tricky because you don't have the type of  <code>self</code> inside the macro, so you might not be able to get rid of the repetition, unfortunately.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 745, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1532811035, "creation_date": 1532783730, "question_id": 51571774, "link": "https://stackoverflow.com/questions/51571774/how-to-match-methods-in-macros", "title": "How to match methods in macros?", "body": "<p>The <code>item</code> fragment can match functions, but if the first argument of the function is a variant of <code>self</code>, <em>i.e.</em> if it is a method, it is not recognized as an <code>item</code>:</p>\n\n<pre><code>macro_rules! test {\n    ( $fn:item ) =&gt; {}\n}\n\n// Ok\ntest! {\n    fn foo() -&gt; bool {\n        true\n    }\n}\n\n// Not ok\ntest! {\n    fn foo(self) -&gt; bool {\n        true\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>How to match a method?</p>\n"}, {"tags": ["rust", "traits", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 3960242, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/749a2f7cc6f70141ae5581bcd68d6c37?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Lukas Gernert", "link": "https://stackoverflow.com/users/3960242/jan-lukas-gernert"}, "edited": false, "score": 0, "creation_date": 1532785678, "post_id": 51571472, "comment_id": 90109957, "body": "Oh boy. You are correct. Did not think the error was something as simple as that. The compiler lead me in a totally different direction. Thank you, and sorry for the noise. Hopefully at least others can learn from my silly mistakes :D"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1532785760, "last_edit_date": 1532785760, "creation_date": 1532781397, "answer_id": 51571472, "question_id": 51571139, "link": "https://stackoverflow.com/questions/51571139/why-is-the-failurefail-trait-bound-not-satisfied-by-my-result-type-alias/51571472#51571472", "title": "Why is the failure::Fail trait bound not satisfied by my Result type alias?", "body": "<blockquote>\n<pre><code>pub type PortalResult&lt;T&gt; = Result&lt;PortalError, T&gt;;\n</code></pre>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"nofollow noreferrer\"><code>Result</code></a> has two type parameters: the success type and the error type. You have transposed them; you want:</p>\n\n<pre><code>pub type PortalResult&lt;T&gt; = Result&lt;T, PortalError&gt;;\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 3960242, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/749a2f7cc6f70141ae5581bcd68d6c37?s=128&d=identicon&r=PG&f=1", "display_name": "Jan Lukas Gernert", "link": "https://stackoverflow.com/users/3960242/jan-lukas-gernert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 576, "favorite_count": 0, "accepted_answer_id": 51571472, "answer_count": 1, "score": 0, "last_activity_date": 1533130337, "creation_date": 1532778896, "last_edit_date": 1533130337, "question_id": 51571139, "link": "https://stackoverflow.com/questions/51571139/why-is-the-failurefail-trait-bound-not-satisfied-by-my-result-type-alias", "title": "Why is the failure::Fail trait bound not satisfied by my Result type alias?", "body": "<p>I'm trying to implement event hooks as demonstrated by <a href=\"https://mattgathu.github.io/simple-events-hook-rust/\" rel=\"nofollow noreferrer\">\"simple event hooks in Rust\"</a> while also using the <a href=\"https://boats.gitlab.io/failure/error-errorkind.html\" rel=\"nofollow noreferrer\"><code>Error</code> + <code>ErrorKind</code></a> pattern of the failure crate.</p>\n\n<p>This is a stripped down version of my code:</p>\n\n<pre><code>#[macro_use]\nextern crate failure;\n\nuse failure::{Backtrace, Context, Error, Fail};\nuse std::fmt;\n\n#[derive(Debug)]\npub struct PortalError {\n    inner: Context&lt;PortalErrorKind&gt;,\n}\n\nimpl Fail for PortalError {\n    fn cause(&amp;self) -&gt; Option&lt;&amp;Fail&gt; {\n        self.inner.cause()\n    }\n\n    fn backtrace(&amp;self) -&gt; Option&lt;&amp;Backtrace&gt; {\n        self.inner.backtrace()\n    }\n}\n\nimpl fmt::Display for PortalError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        fmt::Display::fmt(&amp;self.inner, f)\n    }\n}\n\n#[derive(Copy, Clone, PartialEq, Debug, Fail)]\npub enum PortalErrorKind {\n    #[fail(display = \"Unknown Error\")]\n    Unknown,\n}\n\n//----------------------------------------------------------\n\npub type PortalResult&lt;T&gt; = Result&lt;PortalError, T&gt;;\npub trait Portal {\n    fn get_something(&amp;self) -&gt; PortalResult&lt;Vec&lt;u32&gt;&gt;;\n}\n\n//----------------------------------------------------------\n\npub trait FeedApi&lt;'a&gt; {\n    type T: FeedApi&lt;'a&gt;;\n\n    fn new&lt;P: Portal + 'a&gt;(portal: P) -&gt; Result&lt;Self::T, Error&gt;;\n}\n\n//----------------------------------------------------------\n\npub struct Feedly&lt;'a&gt; {\n    portal: Box&lt;Portal + 'a&gt;,\n}\n\nimpl&lt;'a&gt; FeedApi&lt;'a&gt; for Feedly&lt;'a&gt; {\n    type T = Feedly&lt;'a&gt;;\n\n    fn new&lt;P: Portal + 'a&gt;(portal: P) -&gt; Result&lt;Self::T, Error&gt; {\n        Ok(Feedly {\n            portal: Box::new(portal),\n        })\n    }\n}\n\nimpl&lt;'a&gt; Feedly&lt;'a&gt; {\n    pub fn demo_function(&amp;self) -&gt; Result&lt;(), Error&gt; {\n        let _ = self.portal.get_something().context(PortalErrorKind::Unknown)?;\n        Ok(())\n    }\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<pre><code>[dependencies]\nfailure = \"0.1.1\"\n</code></pre>\n\n<p>In a method of 'Feedly' I want to use the portal:</p>\n\n<pre><code>self.portal.get_something().context(PortalErrorKind::Unknown)?\n</code></pre>\n\n<p>But I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `context` found for type `std::result::Result&lt;PortalError, std::vec::Vec&lt;u32&gt;&gt;` in the current scope\n  --&gt; src/main.rs:67:45\n   |\n67 |         let _ = self.portal.get_something().context(PortalErrorKind::Unknown)?;\n   |                                             ^^^^^^^\n   |\n   = note: the method `context` exists but the following trait bounds were not satisfied:\n           `std::result::Result&lt;PortalError, std::vec::Vec&lt;u32&gt;&gt; : failure::Fail`\n           `&amp;std::result::Result&lt;PortalError, std::vec::Vec&lt;u32&gt;&gt; : failure::Fail`\n           `&amp;mut std::result::Result&lt;PortalError, std::vec::Vec&lt;u32&gt;&gt; : failure::Fail`\n</code></pre>\n\n<p>Looking through the docs the <code>failure::Fail</code> trait has a bound <code>'static</code>. And the method <code>context</code> has a bound <code>Self: Sized</code>.</p>\n\n<p>I'm not sure which trait is not satisfied here. The boxed <code>Portal</code> is neither <code>Sized</code> nor <code>'static</code>, but the returned result should be, right?</p>\n\n<p>This is the first time I'm handling boxes and lifetimes in Rust.</p>\n"}, {"tags": ["rust", "bit-shift"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1532779617, "post_id": 51571066, "comment_id": 90108352, "body": "&quot;Performs the <code>&gt;&gt;</code> operation.&quot; Well, that&#39;s not really detailed documentation indeed. I would suggest you open an issue to ask for more detailed documentation."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 4, "creation_date": 1532779660, "post_id": 51571066, "comment_id": 90108362, "body": "Note that the documentation of <a href=\"https://doc.rust-lang.org/stable/std/primitive.usize.html#method.rotate_right\" rel=\"nofollow noreferrer\"><code>rotate_right</code></a> specifies &quot;Please note this isn&#39;t the same operation as <code>&gt;&gt;</code>!&quot;, so at least you can get from that that <code>&gt;&gt;</code> doesn&#39;t rotate bits."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 10, "last_activity_date": 1532781090, "last_edit_date": 1532781090, "creation_date": 1532780732, "answer_id": 51571369, "question_id": 51571066, "link": "https://stackoverflow.com/questions/51571066/what-are-the-exact-semantics-of-rusts-shift-operators/51571369#51571369", "title": "What are the exact semantics of Rust&#39;s shift operators?", "body": "<p>The thin documentation on the traits <code>Shl</code> and <code>Shr</code> is intentional, so that they may adopt a behaviour that is most suitable for the type at hand (think newtypes!).</p>\n\n<p>With that said, when it comes to the base integer types, the <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#arithmetic-and-logical-binary-operators\" rel=\"noreferrer\">Rust reference</a> covers how they behave, with a bit of inference:</p>\n\n<blockquote>\n  <ul>\n  <li><p><code>&lt;&lt;</code>    | Left Shift        |   <code>std::ops::Shl</code></p></li>\n  <li><p><code>&gt;&gt;</code>    | Right Shift*      |   <code>std::ops::Shr</code></p></li>\n  </ul>\n  \n  <p>* Arithmetic right shift on signed integer types, logical right shift on unsigned integer types.</p>\n</blockquote>\n\n<p>It also includes a few examples, which further clarifies that these are conventional logical/arithmetic shifts: zeros are inserted to the least significant bits on a left bit shift, and the most significant bit is extended for signed integers on a right bit shift. It is also <a href=\"https://doc.rust-lang.org/std/primitive.i32.html#method.rotate_left\" rel=\"noreferrer\">not a rotation</a>, as described in the methods <code>rotate_left</code> and <code>rotate_right</code>.</p>\n\n<pre><code>assert_eq!(13 &lt;&lt; 3, 104);\nassert_eq!(-10 &gt;&gt; 2, -3);\n</code></pre>\n\n<p>Moreover, shifting too many bits may be regarded as an arithmetic overflow, and is not undefined behaviour. See: <a href=\"https://stackoverflow.com/q/46714279/1233251\">Is it expected that a too large bitshift is undefined behavior in Rust?</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 18, "last_activity_date": 1532780740, "creation_date": 1532780740, "answer_id": 51571371, "question_id": 51571066, "link": "https://stackoverflow.com/questions/51571066/what-are-the-exact-semantics-of-rusts-shift-operators/51571371#51571371", "title": "What are the exact semantics of Rust&#39;s shift operators?", "body": "<blockquote>\n  <p>What are the exact semantics of Rust's shift operators?</p>\n</blockquote>\n\n<p>There are none. The shift operators are a user-implementable trait and you can do basically anything you want in them. The documentation even shows an example of \"[a]n implementation of <code>Shr</code> that spins a vector rightward by a given amount.\"</p>\n\n<hr>\n\n<blockquote>\n  <p>how the <code>&lt;&lt;</code> and <code>&gt;&gt;</code> operators work on integers,</p>\n</blockquote>\n\n<p>The reference has a section on <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#arithmetic-and-logical-binary-operators\" rel=\"noreferrer\">Arithmetic and Logical Binary Operators</a>. Most usefully, it contains this footnote:</p>\n\n<blockquote>\n  <p>Arithmetic right shift on signed integer types, logical right shift on unsigned integer types.</p>\n</blockquote>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Logical_shift\" rel=\"noreferrer\">Logical shifting</a> and <a href=\"https://en.wikipedia.org/wiki/Arithmetic_shift\" rel=\"noreferrer\">arithmetic shifting</a> are preexisting computer science terms with established definitions.</p>\n\n<blockquote>\n  <p>Zeroes are shifted in</p>\n</blockquote>\n\n<p>Yes.</p>\n\n<blockquote>\n  <p>the bits rotate</p>\n</blockquote>\n\n<p>No. There are separate methods for rotating <a href=\"https://doc.rust-lang.org/stable/std/primitive.i32.html#method.rotate_left\" rel=\"noreferrer\">left</a> and <a href=\"https://doc.rust-lang.org/stable/std/primitive.i32.html#method.rotate_right\" rel=\"noreferrer\">right</a>.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9322, "favorite_count": 0, "accepted_answer_id": 51571371, "answer_count": 2, "score": 20, "last_activity_date": 1532781090, "creation_date": 1532778367, "question_id": 51571066, "link": "https://stackoverflow.com/questions/51571066/what-are-the-exact-semantics-of-rusts-shift-operators", "title": "What are the exact semantics of Rust&#39;s shift operators?", "body": "<p>I tried to find exact information about how the <code>&lt;&lt;</code> and <code>&gt;&gt;</code> operators work on integers, but I couldn't find a clear answer (<a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Shr.html\" rel=\"noreferrer\">the documentation</a> is not that great in that regard). </p>\n\n<p>There are two parts of the semantics that are not clear to me. First, what bits are \"shifted in\"?</p>\n\n<ul>\n<li>Zeroes are shifted in from one side (i.e. <code>0b1110_1010u8 &lt;&lt; 4 == 0b1010_0000u8</code>), or </li>\n<li>the bits rotate (i.e. <code>0b1110_1010u8 &lt;&lt; 4 == 0b1010_1110u8</code>), or</li>\n<li>it's unspecified (like overflowing behavior of integers is unspecified), or</li>\n<li>something else.</li>\n</ul>\n\n<p>Additionally, how does shifts work with signed integers? Is the sign bit also involved in the shift or not? Or is this unspecified?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 1, "creation_date": 1532801760, "post_id": 51569870, "comment_id": 90113862, "body": "I do want to comment that while Sebastian&#39;s solution works great in this specific case, you&#39;re going to have a very hard time avoiding generics as a general rule. They are extremely common practice in idiomatic Rust code."}, {"owner": {"reputation": 53, "user_id": 10147682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b337b805e6106ecbbc2b84862e7f3e90?s=128&d=identicon&r=PG&f=1", "display_name": "Damian", "link": "https://stackoverflow.com/users/10147682/damian"}, "reply_to_user": {"reputation": 2513, "user_id": 4725625, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/YwH49.png?s=128&g=1", "display_name": "Kwarrtz", "link": "https://stackoverflow.com/users/4725625/kwarrtz"}, "edited": false, "score": 0, "creation_date": 1532812929, "post_id": 51569870, "comment_id": 90116400, "body": "Yeah, totally fair. I&#39;m not opposed in theory. It&#39;s more that it started to feel like a code smell. (I&#39;m probably still not thinking about the problem properly, although I suppose pseudo-global/shared state like a PRNG is always a sticking point for languages like this.)"}], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 10147682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b337b805e6106ecbbc2b84862e7f3e90?s=128&d=identicon&r=PG&f=1", "display_name": "Damian", "link": "https://stackoverflow.com/users/10147682/damian"}, "edited": false, "score": 0, "creation_date": 1532772657, "post_id": 51569939, "comment_id": 90106668, "body": "Oh, interesting. That looks like it addresses exactly my concerns (and then some). Many thanks!  For anyone who comes along later, it looks like this is currently documented <a href=\"https://rust-lang-nursery.github.io/edition-guide/2018/transitioning/traits/impl-trait.html\" rel=\"nofollow noreferrer\">here</a>."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 6, "last_activity_date": 1532770033, "creation_date": 1532770033, "answer_id": 51569939, "question_id": 51569870, "link": "https://stackoverflow.com/questions/51569870/what-is-an-idiomatic-way-to-pass-by-interface-without-being-really-gross-and-typ/51569939#51569939", "title": "What is an idiomatic way to pass by interface without being really gross and typographically heavyweight?", "body": "<p>You can use the new impl trait short syntax for this:</p>\n\n<pre><code>mod sim {\n    use rand::Rng;\n\n    pub fn generate_numbers(r: &amp;mut impl Rng) -&gt; i32 {\n        r.gen_range(42, 45)\n    }\n}\n</code></pre>\n\n<p>This doens't really change the meaning of the code, but it makes it less heavyweight.</p>\n"}], "owner": {"reputation": 53, "user_id": 10147682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b337b805e6106ecbbc2b84862e7f3e90?s=128&d=identicon&r=PG&f=1", "display_name": "Damian", "link": "https://stackoverflow.com/users/10147682/damian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1532780972, "creation_date": 1532769524, "last_edit_date": 1532780972, "question_id": 51569870, "link": "https://stackoverflow.com/questions/51569870/what-is-an-idiomatic-way-to-pass-by-interface-without-being-really-gross-and-typ", "title": "What is an idiomatic way to pass by interface without being really gross and typographically heavyweight?", "body": "<p>I'm struggling to understand the <em>right</em> way to handle a specific abstraction problem. Let's use my current struggles with <code>thread_rng</code> as a proxy for the larger problem.</p>\n\n<p>I want to pass around a single instance of a random number generator to various functions. I don't want them to know about the implementation (or size!) of the struct, just use its defined interface. Today it's <code>thread_rng()</code>, but maybe tomorrow it'll need to be some other thing, and I don't want to rewrite the code that uses it.</p>\n\n<p>The obvious thing to do is to use the <code>rand::Rng</code> trait, but passing it around seems really gross and (at least typographically) heavyweight. If I understand correctly, anything I pass my trait-implementing struct to will need to use generics to monomorphize, correct? Is this just how people do it, or is there another way?</p>\n\n<p>Code example:</p>\n\n<pre><code>extern crate rand;\n\nuse rand::prelude::*;\n\nmod sim {\n    use rand::Rng;\n\n    pub fn generate_numbers&lt;TRng : Rng&gt;(r: &amp;mut TRng) -&gt; i32 {\n        r.gen_range(42, 45)\n    }\n}\n\nfn main() {\n    let mut rng = thread_rng();\n\n    let result = sim::generate_numbers(&amp;mut rng);\n\n    println!(\"Result: {}\", result);\n}\n</code></pre>\n\n<p>This looks fine in such a constrained example, but in my codebase I might be passing the RNG down through several layers of function calls across modules before it finally arrives at the leaf function that actually acts on it. Everything between gets this massive dusting of generics. I can only imagine how bad it will look when there are more than a few things I want to abstract like this.</p>\n\n<p>What's the must Rust way to do this? Maybe define a struct to hold this sort of context, and put the trait in a box? I don't know how to do that (can't box a trait like <code>Rng</code>) without making the containing struct itself generic -- which, again, is going to litter generics everywhere I have to pass this containing struct.</p>\n\n<p>Maybe I'm just whining too much about generics because they remind me of C++ templates.</p>\n"}, {"tags": ["enums", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 622, "user_id": 2949830, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/I9CgV.jpg?s=128&g=1", "display_name": "rusnasonov", "link": "https://stackoverflow.com/users/2949830/rusnasonov"}, "edited": false, "score": 1, "creation_date": 1581925637, "post_id": 51567668, "comment_id": 106585742, "body": "But if  I want implement Playable for all enum variants ( Cutscene.play(), Game.play(), etc), what should I do? Add <code>match</code> expression to SceneType.play() method?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 622, "user_id": 2949830, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/I9CgV.jpg?s=128&g=1", "display_name": "rusnasonov", "link": "https://stackoverflow.com/users/2949830/rusnasonov"}, "edited": false, "score": 1, "creation_date": 1581956476, "post_id": 51567668, "comment_id": 106601713, "body": "@rusnasonov yes."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 14, "last_activity_date": 1532747353, "last_edit_date": 1532747353, "creation_date": 1532747018, "answer_id": 51567668, "question_id": 51567350, "link": "https://stackoverflow.com/questions/51567350/can-traits-be-used-on-enum-types/51567668#51567668", "title": "Can traits be used on enum types?", "body": "<blockquote>\n  <p>Can traits be used on enum types?</p>\n</blockquote>\n\n<p><strong>Yes</strong>. In fact, you already have multiple traits defined for your enum; the traits <a href=\"https://doc.rust-lang.org/std/fmt/trait.Debug.html\" rel=\"noreferrer\"><code>Debug</code></a>, <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\"><code>Copy</code></a> and <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"noreferrer\"><code>Clone</code></a>:</p>\n\n<blockquote>\n<pre><code>#[derive(Debug, Copy, Clone)]\npub enum SceneType\n</code></pre>\n</blockquote>\n\n<p>The problem is that you aren't attempting to implement <code>Playable</code> for your enum, you are trying to implement it for one of the enum's <em>variants</em>. Enum variants <em>are not types</em>.</p>\n\n<p>As the error message tells you:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>help: you can try using the variant's enum: `SceneType`\n</code></pre>\n</blockquote>\n\n<pre><code>impl Playable for SceneType {\n    fn play() {}\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29935878/155423\">Can struct-like enums be used as types?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49705007/155423\">Is there a way to use existing structs as enum variants?</a></li>\n</ul>\n"}], "owner": {"reputation": 159, "user_id": 9993738, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-S0FY9K1Pg8E/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq22coa6Y-2JAZiVqDMVGiOv6SIH8w/mo/photo.jpg?sz=128", "display_name": "Vergil", "link": "https://stackoverflow.com/users/9993738/vergil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10053, "favorite_count": 2, "answer_count": 1, "score": 12, "last_activity_date": 1532747353, "creation_date": 1532742092, "last_edit_date": 1532746923, "question_id": 51567350, "link": "https://stackoverflow.com/questions/51567350/can-traits-be-used-on-enum-types", "title": "Can traits be used on enum types?", "body": "<p>I read through the <a href=\"https://doc.rust-lang.org/rust-by-example/trait.html\" rel=\"noreferrer\">trait documentation</a> and found a neat definition for using traits on structs. Is it possible to use traits on <code>enum</code> types? I have seen answers that say no, but they are 3 years old and don't quite do what I'm trying to do.</p>\n\n<p>I tried to do this:</p>\n\n<pre><code>#[derive(Debug, Copy, Clone)]\npub enum SceneType {\n    Cutscene,\n    Game,\n    Menu,\n    Pause,\n    Credits,\n    Exit,\n}\n\n//We want to guarantee every SceneType can be played statically\ntrait Playable {\n    fn play();\n}\n\nimpl Playable for SceneType::Cutscene {\n    fn play() {}\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0573]: expected type, found variant `SceneType::Cutscene`\n  --&gt; src/main.rs:16:19\n   |\n16 | impl Playable for SceneType::Cutscene {\n   |                   ^^^^^^^^^^^^^^^^^^^\n   |                   |\n   |                   not a type\n   |                   help: you can try using the variant's enum: `SceneType`\n</code></pre>\n\n<p>I don't understand this error because the enum it references is in the same file. If I really can't use traits on enum variants, is there any way I can guarantee any enum trait must implement certain methods?</p>\n"}, {"tags": ["function", "reflection", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1532677474, "post_id": 51553065, "comment_id": 90073245, "body": "I guess you meant <code>fn call_function(&amp;self)</code>? Please add more precision about what you want to do with the type of the caller"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532678549, "post_id": 51553065, "comment_id": 90073829, "body": "@Boiethios clarified the question"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1532679084, "post_id": 51553065, "comment_id": 90074091, "body": "You didn&#39;t understand my question: why do you want the type of the caller? Rust is not a dynamic language nor has reflection so it isn&#39;t possible as is. I suspect that you&#39;re doing some kind of cargo cult."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532679786, "post_id": 51553065, "comment_id": 90074433, "body": "I see, I was trying to implement publish subscribe design and did not wanted to explicitly specify the subscriber type, since the subscriber calls the subscribe method itself. So I guess, I need to pass it&#39;s reference or at least it&#39;s type explicity for subscription?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532680571, "post_id": 51553065, "comment_id": 90074812, "body": "Ok. In this case, you need to use a trait <code>Suscriber</code> (for example) with the desired methods in it, and each suscriber <b>must</b> implement this trait."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1532698703, "last_edit_date": 1532698703, "creation_date": 1532686179, "answer_id": 51555689, "question_id": 51553065, "link": "https://stackoverflow.com/questions/51553065/how-to-find-the-type-of-the-caller-of-a-function-in-rust/51555689#51555689", "title": "How to find the type of the caller of a function in Rust?", "body": "<p>Rust doesn't have any machinery like this built-in. If you want to know some context inside a function then you'll need to pass it in as an argument.</p>\n\n<p>Also, Rust doesn't have a way to get the name of a type, so you'd have to provide that too. For example, with a trait:</p>\n\n<pre><code>trait Named {\n    fn name() -&gt; &amp;'static str;\n}\n\nimpl Named for A {\n    fn name() -&gt; &amp;'static str {\n        \"A\"\n    }\n}\n</code></pre>\n\n<p>Which you might use like this:</p>\n\n<pre><code>impl B {\n    pub fn my_function&lt;T: Named&gt;(_: &amp;T) {\n        println!(\"Hello\");\n        println!(\"{}\", T::name());\n    }\n}\n</code></pre>\n\n<p>You just have to pass in the caller when you call it:</p>\n\n<pre><code>impl A {\n    fn call_function(&amp;self) {\n        B::my_function(self);\n    }\n}\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Hello\nA\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1470, "user_id": 2075745, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/6f9a084d236381e1882c4e28edb5151f?s=128&d=identicon&r=PG", "display_name": "user25064", "link": "https://stackoverflow.com/users/2075745/user25064"}, "is_accepted": false, "score": 0, "last_activity_date": 1532711859, "creation_date": 1532711859, "answer_id": 51562731, "question_id": 51553065, "link": "https://stackoverflow.com/questions/51553065/how-to-find-the-type-of-the-caller-of-a-function-in-rust/51562731#51562731", "title": "How to find the type of the caller of a function in Rust?", "body": "<p>You can have the compiler write the boilerplate by creating a macro and making use of the <code>stringify!</code> macro.</p>\n\n<pre><code>struct A;\nstruct B;\nstruct C;\n\ntrait Named {\n    fn name() -&gt; &amp;'static str;\n}\n\nmacro_rules! make_named {\n    ( $($x:ty),* ) =&gt; {\n        $(\n        impl Named for $x {\n            fn name() -&gt; &amp;'static str {\n                stringify!($x)\n            }\n        }\n        )*\n    };\n}\n\nmake_named!(A, B);\nmake_named!(C);\n\nfn main() {\n    println!(\"{:#?}\", A::name());\n    println!(\"{:#?}\", B::name());\n    println!(\"{:#?}\", C::name());\n}\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=d045a01000df55d9081da1a938249581&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 487, "favorite_count": 0, "accepted_answer_id": 51555689, "answer_count": 2, "score": 1, "last_activity_date": 1532711859, "creation_date": 1532677009, "last_edit_date": 1532695856, "question_id": 51553065, "link": "https://stackoverflow.com/questions/51553065/how-to-find-the-type-of-the-caller-of-a-function-in-rust", "title": "How to find the type of the caller of a function in Rust?", "body": "<p>How can I get the caller type in my function?</p>\n\n<pre><code>struct A;\nstruct B;\n\nimpl A {\n    fn new() -&gt; Self {\n        A\n    }\n    fn call_function(&amp;self) {\n        B::my_function();\n    }\n}\n\nimpl B {\n    pub fn my_function() {\n        println!(\"Hello\");\n        // println!(\"{}\" type_of_the_caller) // I want to get type A here\n        // Is it possible to get the caller type which is A in this case?\n    }\n}\n\nfn main() {\n    let a = A::new();\n    a.call_function();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d8b475aeb50493f092235713a22c286d&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Here</a> is the working code in playground. This is simplified code for an example.</p>\n"}, {"tags": ["error-handling", "rust", "type-systems"], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "edited": false, "score": 0, "creation_date": 1532669544, "post_id": 51550905, "comment_id": 90069742, "body": "Wow, that&#39;s a lot... Now I have even more questions... 1. So it&#39;s mandatory to create my own error type? Is it not possible to return an error that&#39;s already defined in std? 2. How would the code look if I use the compiler attributes that you suggested? 3. what is this dyn??? It&#39;s not even listed on Appendix - A of &quot;The Rust Programming Language&quot;!"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "edited": false, "score": 0, "creation_date": 1532670800, "post_id": 51550905, "comment_id": 90070141, "body": "@\u03a3\u03c4\u03ad\u03c6\u03b1\u03bd\u03bf\u03c2\u039c\u03b1\u03bd\u03b4\u03b1\u03bb\u03ac\u03c2 I cannot answer right now. In 1 hour or so."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "edited": false, "score": 1, "creation_date": 1532675864, "post_id": 51550905, "comment_id": 90072333, "body": "@\u03a3\u03c4\u03ad\u03c6\u03b1\u03bd\u03bf\u03c2\u039c\u03b1\u03bd\u03b4\u03b1\u03bb\u03ac\u03c2 I updated my answer about your points 1 and 3. The attributes generate the boilerplate code that you are afraid of ;) Furthermore, IIRC, the <code>Fail</code> trait permit more usefull things, but you can read the doc to know more."}, {"owner": {"reputation": 3067, "user_id": 53991, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/2191b5cfee9c0fb7de571ac6cac45512?s=128&d=identicon&r=PG", "display_name": "perrohunter", "link": "https://stackoverflow.com/users/53991/perrohunter"}, "edited": false, "score": 0, "creation_date": 1560236036, "post_id": 51550905, "comment_id": 99658119, "body": "@FrenchBoiethios Can you somehow check for the type <code>MyError</code> instead of just printing the error? I&#39;m trying to use this example to return different error types, but compiler says it&#39;s always <code>Box&lt;Error&gt;</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560242197, "post_id": 51550905, "comment_id": 99661044, "body": "You can <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html#method.downcast-1\" rel=\"nofollow noreferrer\">downcast</a> your error: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8c9370ae5d91852bcf93e92608661991\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 17, "last_activity_date": 1591885609, "last_edit_date": 1591885609, "creation_date": 1532666739, "answer_id": 51550905, "question_id": 51550167, "link": "https://stackoverflow.com/questions/51550167/how-to-manually-return-a-result-boxdyn-error/51550905#51550905", "title": "How to manually return a Result&lt;(), Box&lt;dyn Error&gt;&gt;?", "body": "<p><code>Error</code> is a trait and you want to return a <strong>trait object</strong> (note the <a href=\"https://rust-lang-nursery.github.io/edition-guide/rust-2018/trait-system/dyn-trait-for-trait-objects.html\" rel=\"noreferrer\"><code>dyn</code> keyword</a>), so you need to implement this trait:</p>\n\n<pre><code>use std::error::Error;\nuse std::fmt;\n\n#[derive(Debug)]\nstruct MyError(String);\n\nimpl fmt::Display for MyError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"There is an error: {}\", self.0)\n    }\n}\n\nimpl Error for MyError {}\n\npub fn run() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let condition = true;\n\n    if condition {\n        return Err(Box::new(MyError(\"Oops\".into())));\n    }\n\n    Ok(())\n}\n\nfn main() {\n    if let Err(e) = run() {\n        println!(\"{}\", e); // \"There is an error: Oops\"\n    }\n}\n</code></pre>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42584368/155423\">Create your own error type</a>,</li>\n<li>Implement <code>Debug</code>, <code>Display</code>, then <code>Error</code> for it,</li>\n<li>If there is an error, return the <code>Err</code> variant of <code>Result</code>.</li>\n</ul>\n\n<p>I advise you to use <a href=\"https://boats.gitlab.io/failure/\" rel=\"noreferrer\">failure</a> that remove all the error boilerplate:</p>\n\n<pre><code>#[derive(Fail, Debug)]\n#[fail(display = \"There is an error: {}.\", _0)]\nstruct MyError(String);\n</code></pre>\n\n<p>--</p>\n\n<p>Note that if you expect an <code>Error</code>, you can return whatever type you want, given that it implements <code>Error</code>. This includes the error types in <code>std</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "edited": false, "score": 0, "creation_date": 1532674653, "post_id": 51551456, "comment_id": 90071676, "body": "I&#39;m ok with the very basics. In this case though I needed a function that returns a generic error, so I can use ? operator for returning error in case a file can&#39;t open etc but also be able to return errors manually (which seems not possible with the ? operator)."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 0, "last_activity_date": 1532695723, "last_edit_date": 1532695723, "creation_date": 1532670434, "answer_id": 51551456, "question_id": 51550167, "link": "https://stackoverflow.com/questions/51550167/how-to-manually-return-a-result-boxdyn-error/51551456#51551456", "title": "How to manually return a Result&lt;(), Box&lt;dyn Error&gt;&gt;?", "body": "<p>A <code>Result&lt;T, E&gt;</code> is an enum with two variants. To return either of them, you just use corresponding variants.</p>\n\n<pre><code>fn foo(var: bool) -&gt; Result&lt;(), i32&gt; {\n    if var {\n        Ok(()) //in fact this is std::result::Result::Ok\n    } else {\n        Err(-3) //in fact this is std::result::Result::Err\n    }\n}\n</code></pre>\n\n<p>The reason why you don't have to write <code>std::result::Result::Ok</code> is that it is in the <a href=\"https://doc.rust-lang.org/std/prelude/index.html\" rel=\"nofollow noreferrer\">prelude</a>. As you can see, you don't have to stick to <code>Box&lt;Error&gt;</code>, but can return any type you want. It is a generic enum, with no restrictions.</p>\n\n<p>The <code>?</code>-operator is a <a href=\"https://stackoverflow.com/questions/42917566/what-is-this-question-mark-operator-about\">handy shortcut for early returns</a>, so you don't have to be too verbose about results.</p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1552404747, "post_id": 55125216, "comment_id": 96992016, "body": "<code>Err(&quot;Bad request&quot;)?</code>"}, {"owner": {"reputation": 508, "user_id": 2261658, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b61fbc1ca8e07bdb8e9429b5ce522fe3?s=128&d=identicon&r=PG&f=1", "display_name": "jimis", "link": "https://stackoverflow.com/users/2261658/jimis"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1552404905, "post_id": 55125216, "comment_id": 96992131, "body": "return Err(&quot;Bad request&quot;)  was the first thing I tried. Unfortunately the compiler complains: &quot;expected struct <code>std::boxed::Box</code>, found reference&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 12, "creation_date": 1552404966, "post_id": 55125216, "comment_id": 96992186, "body": "<code>return Err(&quot;Bad request&quot;.into());</code>"}, {"owner": {"reputation": 508, "user_id": 2261658, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b61fbc1ca8e07bdb8e9429b5ce522fe3?s=128&d=identicon&r=PG&f=1", "display_name": "jimis", "link": "https://stackoverflow.com/users/2261658/jimis"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1552405192, "post_id": 55125216, "comment_id": 96992324, "body": "Works! Also I now see what @Stargateur meant, because just writing <code>Err(&quot;Bad request&quot;)?</code> (without return statement and with question mark at the end) also works!  I think both of these solutions are much more elegant. Should I edit the answer?"}, {"owner": {"reputation": 2388, "user_id": 213388, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/03844b74ab22ee502c01c1d888f3e454?s=128&d=identicon&r=PG", "display_name": "Svilen", "link": "https://stackoverflow.com/users/213388/svilen"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1570546153, "post_id": 55125216, "comment_id": 102942296, "body": "Could someone explain why appending <code>?</code> or using <code>.into()</code> work as a solution? Is one preferred over the other? @Stargateur @Shepmaster"}, {"owner": {"reputation": 128, "user_id": 4012426, "user_type": "registered", "profile_image": "https://graph.facebook.com/100000105441681/picture?type=large", "display_name": "Hutch Moore", "link": "https://stackoverflow.com/users/4012426/hutch-moore"}, "reply_to_user": {"reputation": 2388, "user_id": 213388, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/03844b74ab22ee502c01c1d888f3e454?s=128&d=identicon&r=PG", "display_name": "Svilen", "link": "https://stackoverflow.com/users/213388/svilen"}, "edited": false, "score": 0, "creation_date": 1595371973, "post_id": 55125216, "comment_id": 111450360, "body": "@Svilen I don&#39;t know about other people, but I prefer only using <code>?</code> when it doesn&#39;t always return. Using a literal Err always returns, of course."}], "tags": [], "owner": {"reputation": 508, "user_id": 2261658, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b61fbc1ca8e07bdb8e9429b5ce522fe3?s=128&d=identicon&r=PG&f=1", "display_name": "jimis", "link": "https://stackoverflow.com/users/2261658/jimis"}, "is_accepted": false, "score": 10, "last_activity_date": 1552436859, "last_edit_date": 1552436859, "creation_date": 1552404553, "answer_id": 55125216, "question_id": 51550167, "link": "https://stackoverflow.com/questions/51550167/how-to-manually-return-a-result-boxdyn-error/55125216#55125216", "title": "How to manually return a Result&lt;(), Box&lt;dyn Error&gt;&gt;?", "body": "<p>I am new to Rust, but here is my dirty hack to return custom errors, given that the function is set to return <code>Result&lt;(), Box&lt;dyn Error&gt;&gt;</code>:</p>\n\n<pre><code>fn serve(config: &amp;Config, stream: TcpStream) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    // ...\n    if request_is_bad() {\n        // This returns immediately a custom \"Bad request\" error\n        Err(\"Bad request\")?;\n    }\n    // ...\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 80945, "user_id": 1002260, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/5ec9c21c8d54825b04def7a41998d18d?s=128&d=identicon&r=PG", "display_name": "Steven Penny", "link": "https://stackoverflow.com/users/1002260/steven-penny"}, "is_accepted": false, "score": 1, "last_activity_date": 1606799070, "creation_date": 1606799070, "answer_id": 65085003, "question_id": 51550167, "link": "https://stackoverflow.com/questions/51550167/how-to-manually-return-a-result-boxdyn-error/65085003#65085003", "title": "How to manually return a Result&lt;(), Box&lt;dyn Error&gt;&gt;?", "body": "<p><code>Box&lt;dyn Error&gt;</code> is handy for types that implement it:</p>\n<pre><code>use std::error::Error;\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n   Err(&quot;March&quot;)?\n}\n</code></pre>\n<p>but surprisingly, it doesnt work with all types:</p>\n<pre><code>use std::error::Error;\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n   // the trait `std::error::Error` is not implemented for `{integer}`\n   Err(9)?\n}\n</code></pre>\n<p>as a workaround, you can use what I call the Error Format idiom:</p>\n<pre><code>use std::error::Error;\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n   Err(format!(&quot;{}&quot;, 9))?\n}\n</code></pre>\n<p>Note this has many variations, for example with literals you can do this:</p>\n<pre><code>use std::error::Error;\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n   Err(concat!(9))?\n}\n</code></pre>\n<p>and also, you may not even need to use <code>Box&lt;dyn Error&gt;</code>:</p>\n<pre><code>fn main() -&gt; Result&lt;(), String&gt; {\n   Err(concat!(9))?\n}\n</code></pre>\n<p>It can also be useful in cases where you normally dont need it. For example,\nthis example below could work without it, but its useful as it adds the filename\nto the error, which normally isnt shown:</p>\n<pre><code>use std::fs;\nfn main() -&gt; Result&lt;(), String&gt; {\n   let s = &quot;a.rs&quot;;\n   match fs::read_to_string(s) {\n      Ok(v) =&gt; print!(&quot;{}&quot;, v),\n      // normal message is just: The system cannot find the file specified\n      Err(v) =&gt; Err(format!(&quot;{} {}&quot;, s, v))?\n   }\n   Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 375, "user_id": 8581218, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58df074d95c658bd54fabef46f4e3f1d?s=128&d=identicon&r=PG&f=1", "display_name": "rect0x51", "link": "https://stackoverflow.com/users/8581218/rect0x51"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10979, "favorite_count": 8, "accepted_answer_id": 51550905, "answer_count": 4, "score": 18, "last_activity_date": 1606799070, "creation_date": 1532660530, "last_edit_date": 1578081781, "question_id": 51550167, "link": "https://stackoverflow.com/questions/51550167/how-to-manually-return-a-result-boxdyn-error", "title": "How to manually return a Result&lt;(), Box&lt;dyn Error&gt;&gt;?", "body": "<p>I want to return an error from a function in case a condition is true:</p>\n\n<pre><code>use std::error::Error;\n\npub fn run() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    // -- snip ---\n\n    if condition {\n        // return error\n    }\n\n    // -- snip --\n\n    Ok(())\n}\n\nfn main() {}\n</code></pre>\n\n<p>I probably don't have the basics of the typesystem down, but everywhere I looked people use the <code>?</code> operator, so I can't figure out what type to return.</p>\n\n<ol>\n<li>Is it possible to just return an error like this?</li>\n<li>Is there a better way to handle this logic?</li>\n</ol>\n"}, {"tags": ["syntax", "rust", "type-inference"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1532646538, "creation_date": 1532646538, "answer_id": 51548650, "question_id": 51548363, "link": "https://stackoverflow.com/questions/51548363/unable-to-initialize-a-trimat-matrix-from-the-sprs-library/51548650#51548650", "title": "Unable to initialize a TriMat matrix from the SPRS library", "body": "<p><a href=\"https://docs.rs/sprs/0.6.2/sprs/type.TriMat.html\" rel=\"nofollow noreferrer\"><code>TriMat</code></a> is:</p>\n\n<pre><code>type TriMat&lt;N&gt; = TriMatI&lt;N, usize&gt;;\n</code></pre>\n\n<p><a href=\"https://docs.rs/sprs/0.6.2/sprs/type.TriMatI.html\" rel=\"nofollow noreferrer\"><code>TriMatI</code></a> is:</p>\n\n<pre><code>type TriMatI&lt;N, I&gt; = TriMatBase&lt;Vec&lt;I&gt;, Vec&lt;N&gt;&gt;;\n</code></pre>\n\n<p><a href=\"https://docs.rs/sprs/0.6.2/sprs/struct.TriMatBase.html\" rel=\"nofollow noreferrer\"><code>TriMatBase</code></a> is:</p>\n\n<pre><code>pub struct TriMatBase&lt;IStorage, DStorage&gt; { /* fields omitted */ }\n</code></pre>\n\n<p><a href=\"https://docs.rs/sprs/0.6.2/sprs/struct.TriMatBase.html#method.new\" rel=\"nofollow noreferrer\"><code>TriMatBase::new</code></a> is:</p>\n\n<pre><code>pub fn new(shape: (usize, usize)) -&gt; TriMatI&lt;N, I&gt;\n</code></pre>\n\n<p>Putting those together, you are effectively calling</p>\n\n<pre><code>TriMatBase::&lt;_, usize&gt;::new((5, 5));\n</code></pre>\n\n<p>The first type parameter is undecidable based on the code you've provided. In many cases, you do <em>something</em> with the value which will allow the compiler to pin down the concrete type. Since you just construct it and throw it away, there's a theoretical infinite number of types this could end up being.</p>\n\n<p>You need to specify the type using the <em>turbofish</em>:</p>\n\n<pre><code>TriMat::&lt;usize&gt;::new((5, 5));\n</code></pre>\n\n<p>Or an explicit type on the variable:</p>\n\n<pre><code>let matrix: TriMat&lt;usize&gt; = TriMat::new((5, 5));\n</code></pre>\n\n<p>Or write some more code that will force the compiler to know the concrete type.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1532646661, "creation_date": 1532646661, "answer_id": 51548670, "question_id": 51548363, "link": "https://stackoverflow.com/questions/51548363/unable-to-initialize-a-trimat-matrix-from-the-sprs-library/51548670#51548670", "title": "Unable to initialize a TriMat matrix from the SPRS library", "body": "<p>You just need to tell it the type of the elements of the matrix. For example, if it's a matrix of <code>i32</code> then:</p>\n\n<pre><code>let mut matrix: TriMat&lt;i32&gt; = TriMat::new((5, 5));\n</code></pre>\n\n<p>This can't be inferred from the <code>new</code> constructor because that only takes an argument for the <em>shape</em> of the matrix, which doesn't include elements of the element type.</p>\n\n<p>If you actually start storing data in the matrix, then the type annotation mostly won't be necessary because it will be inferred from the data:</p>\n\n<pre><code>let mut matrix = TriMat::new((5, 5));\nmatrix.add_triplet(0, 0, 42); // 42 literal is `i32` by default.\n</code></pre>\n"}], "owner": {"reputation": 2479, "user_id": 2370863, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/1A5At.jpg?s=128&g=1", "display_name": "Ian Fiddes", "link": "https://stackoverflow.com/users/2370863/ian-fiddes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "accepted_answer_id": 51548670, "answer_count": 2, "score": 1, "last_activity_date": 1549366741, "creation_date": 1532644317, "last_edit_date": 1549366741, "question_id": 51548363, "link": "https://stackoverflow.com/questions/51548363/unable-to-initialize-a-trimat-matrix-from-the-sprs-library", "title": "Unable to initialize a TriMat matrix from the SPRS library", "body": "<p>I am trying to use the sparse matrix library SPRS and am having trouble initializing a matrix. Why does this not work?</p>\n\n<pre><code>extern crate sprs;\nuse sprs::TriMat;\n\nfn main() {\n    let mut matrix = TriMat::new((5, 5));\n}\n</code></pre>\n\n<p>The error is </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n --&gt; src/main.rs:5:22\n  |\n5 |     let mut matrix = TriMat::new((5, 5));\n  |         ----------   ^^^^^^^^^^^ cannot infer type for `N`\n  |         |\n  |         consider giving `matrix` a type\n</code></pre>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1532625592, "post_id": 51544240, "comment_id": 90056509, "body": "Can you show us how you measured memory usage in the browser? You might also want to know <a href=\"https://github.com/rust-lang/rust/blob/master/src/libcore/mem.rs#L795\" rel=\"nofollow noreferrer\">how <code>std::mem::drop</code> is implemented</a>, so as to avoid misusage."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1532625819, "post_id": 51544240, "comment_id": 90056638, "body": "As E_net4 alludes, your <code>remove_data</code> method can be written as <code>ID_TO_DATA.lock().unwrap().remove(&amp;id);</code>. No calls to <code>drop</code>, no <code>match</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1532626783, "post_id": 51544240, "comment_id": 90057094, "body": "In general (not just in Rust), freed memory is not restored to the operating system, but to the program&#39;s allocator. See, e.g., <a href=\"https://stackoverflow.com/questions/48690301/python-memory-releasing-very-slowly\">Python memory releasing very slowly</a>, <a href=\"https://stackoverflow.com/questions/10943907/linux-allocator-does-not-release-small-chunks-of-memory\">Linux Allocator Does Not Release Small Chunks of Memory</a>, and <a href=\"https://stackoverflow.com/questions/1242832/in-perl-how-can-i-release-memory-to-the-operating-system\">In Perl, how can I release memory to the operating system?</a>"}, {"owner": {"reputation": 385, "user_id": 5577384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7265224a43bec8e07c971f2b11273e9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam R", "link": "https://stackoverflow.com/users/5577384/adam-r"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532627720, "post_id": 51544240, "comment_id": 90057596, "body": "Thanks to @trentcl, I thought I&#39;d try it again with multiple cycles of adding / removing data, and although the browser memory never drops significantly, it doesn&#39;t keep growing, so I can only assume the memory is being reused by WebAssembly.  This is sufficient for my needs."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1532628094, "last_edit_date": 1532628094, "creation_date": 1532627613, "answer_id": 51544868, "question_id": 51544240, "link": "https://stackoverflow.com/questions/51544240/how-can-i-free-memory-allocated-by-rust-code-exposed-in-webassembly/51544868#51544868", "title": "How can I free memory allocated by Rust code exposed in WebAssembly?", "body": "<p><a href=\"https://webassembly.github.io/spec/core/syntax/instructions.html#memory-instructions\" rel=\"noreferrer\">WebAssembly does not offer any instructions to deallocate memory</a>, there is only the ability to increase the allocated size. Practically speaking, this means that the peak memory usage of your WebAssembly application is also the <strong>permanent</strong> memory usage.</p>\n\n<p>For a given problem, it may be possible to tweak your algorithm to reduce the peak amount of memory.</p>\n\n<p>I don't have the knowledge or ability to test this, but one out-of-the-box idea would be to try and have multiple WebAssembly runtimes distinct from each other. You could chew up a lot of memory in one to compute a relatively small result, serialize that result outside of the WASM runtime, then throw it away and spin up a new one. This is likely only to be useful in certain specific problem domains.</p>\n\n<hr>\n\n<p>In the future, memory resizing may be <strong>re</strong>-added to WebAssembly. It was explicitly removed before the MVP release:</p>\n\n<blockquote>\n  <p>After the MVP, we are moving to things that diverge and cannot be polyfilled, and memory resizing makes more sense to add at that point in time.</p>\n</blockquote>\n\n<ul>\n<li><a href=\"https://github.com/WebAssembly/design/issues/294\" rel=\"noreferrer\">Remove memory resizing from the MVP (294)</a></li>\n<li><a href=\"https://github.com/WebAssembly/design/pull/389\" rel=\"noreferrer\">Only allow memory growth in MVP (389)</a></li>\n</ul>\n\n<p>Thanks to <a href=\"https://discordapp.com/channels/442252698964721669/443151097398296587/472096547635462156\" rel=\"noreferrer\">alexcrichton</a> and <a href=\"https://discordapp.com/channels/442252698964721669/443151097398296587/472096596725858314\" rel=\"noreferrer\">steveklabnik</a> for answering this question in the Rust Discord.</p>\n"}, {"tags": [], "owner": {"reputation": 1847, "user_id": 978280, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/88bb9a7e6bcf77b2be63f59c476fb6e9?s=128&d=identicon&r=PG", "display_name": "Ivan Kuckir", "link": "https://stackoverflow.com/users/978280/ivan-kuckir"}, "is_accepted": false, "score": 0, "last_activity_date": 1611885199, "creation_date": 1611885199, "answer_id": 65947750, "question_id": 51544240, "link": "https://stackoverflow.com/questions/51544240/how-can-i-free-memory-allocated-by-rust-code-exposed-in-webassembly/65947750#65947750", "title": "How can I free memory allocated by Rust code exposed in WebAssembly?", "body": "<p>My visitors spend hours on my website without reloading it.</p>\n<p>My wasm program runs once every 5 minutes, for 0.5 seconds each time. It is called by a synchronous JS function, which expects the output right after the wasm finishes. During the execution, the wasm program needs 700 MB of RAM.</p>\n<p>I would like to release these 700 MB when the wasm program does not run. What JS object should I release (remove references to)? Next time my JS function runs, I want to run the wasm program again (in a synchronous way).</p>\n<p>I was thinking about recompiling WASM each time my JS function runs, but all current browsers compine WASM asynchronously. Is there anything else I can do?</p>\n<p>These lines do nothing:</p>\n<pre><code>wasm.instance.exports.memory.buffer = new ArrayBuffer(10);\nwasm.instance.exports.memory = new WebAssembly.Memory({initial:10});\n</code></pre>\n"}], "owner": {"reputation": 385, "user_id": 5577384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7265224a43bec8e07c971f2b11273e9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam R", "link": "https://stackoverflow.com/users/5577384/adam-r"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1481, "favorite_count": 2, "accepted_answer_id": 51544868, "answer_count": 2, "score": 14, "last_activity_date": 1611885199, "creation_date": 1532625152, "last_edit_date": 1532627898, "question_id": 51544240, "link": "https://stackoverflow.com/questions/51544240/how-can-i-free-memory-allocated-by-rust-code-exposed-in-webassembly", "title": "How can I free memory allocated by Rust code exposed in WebAssembly?", "body": "<p>I have a web application written in Rust and wasm-bindgen that needs to store state. The state is stored like this:</p>\n\n<pre><code>lazy_static! {\n    static ref ID_TO_DATA: Mutex&lt;HashMap&lt;u32, Data&gt;&gt; = Mutex::new(HashMap::new());\n}\n\npub struct Data {\n    pub coder_id: u16,\n    pub bools: Vec&lt;bool&gt;,\n    pub ints: Vec&lt;i32&gt;,\n    pub strings: Vec&lt;String&gt;,\n}\n</code></pre>\n\n<p>I attempted the following to remove the data and free the memory, and the data is removed from the <code>HashMap</code> and no errors are reported:</p>\n\n<pre><code>#[wasm_bindgen]\npub fn remove_data(id: u32) {\n    match ID_TO_DATA.lock().unwrap().remove(&amp;id) {\n        Some(data) =&gt; {\n            std::mem::drop(data);\n        }\n        None =&gt; {}\n    }\n}\n</code></pre>\n\n<p>However, the memory used by the browser tab never drops (using Chrome 67). I used Windows' Task Manager and watched the memory grow to almost 2GB for the relevant process/tab, and then after my program removed all the entries, I waited a minute and the memory was still at almost 2GB.</p>\n\n<p>I also tried the following, but got this error: <code>RuntimeError: memory access out of bounds</code></p>\n\n<pre><code>#[wasm_bindgen]\npub fn remove_data(id: u32) {\n    match ID_TO_DATA.lock().unwrap().remove(&amp;id) {\n        Some(mut data) =&gt; {\n            unsafe {\n                std::ptr::drop_in_place(&amp;mut data);\n            }\n        }\n        None =&gt; {}\n    }\n}\n</code></pre>\n\n<p>How can I successfully free this memory?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532621890, "post_id": 51543177, "comment_id": 90054523, "body": "<a href=\"https://stackoverflow.com/questions/30661046/how-do-i-return-an-instance-of-a-trait-from-a-method\">How do I return an instance of a trait from a method?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 7, "last_activity_date": 1532623775, "last_edit_date": 1532623775, "creation_date": 1532621168, "answer_id": 51543209, "question_id": 51543177, "link": "https://stackoverflow.com/questions/51543177/why-do-i-get-a-match-arms-have-incompatible-types-error-in-a-function-returnin/51543209#51543209", "title": "Why do I get a &quot;match arms have incompatible types&quot; error in a function returning `impl Trait`?", "body": "<p>See the <code>impl Trait</code> notation as a generic type. You cannot write:</p>\n\n<pre><code>fn get_counter&lt;T&gt;(a: i32, b: i32, op: &amp;str) -&gt; T {\n    match op {\n        \"+\" =&gt; AddCounter { a, b },\n        \"*\" =&gt; MulCounter { a, b },\n        _ =&gt; panic!(format!(\"{}{}\", \"\u672a\u77e5\u7684\u7b26\u53f7\uff1a\", op)),\n    }\n}\n</code></pre>\n\n<p>because <code>AddCounter</code> and <code>MulCounter</code> do not have the same type: what is <code>T</code>?</p>\n\n<p>You can use dynamic dispatch instead of static dispatch:</p>\n\n<pre><code>fn get_counter(a: i32, b: i32, op: &amp;str) -&gt; Box&lt;dyn Counter&gt; {\n    match op {\n        \"+\" =&gt; Box::new(AddCounter { a, b }),\n        \"*\" =&gt; Box::new(MulCounter { a, b }),\n        _ =&gt; panic!(format!(\"{}{}\", \"\u672a\u77e5\u7684\u7b26\u53f7\uff1a\", op)),\n    }\n}\n</code></pre>\n\n<h3>Further explanation</h3>\n\n<p>When you use static dispatch, the Rust compiler <em>monomorphizes</em> the code: it generates a new function for each value of the generic type (see <a href=\"https://stackoverflow.com/questions/14189604/what-is-monomorphisation-with-context-to-c\">What is monomorphisation with context to C++?</a> for more details). Each of those returned values are \"real\" plain types. In this case, a function cannot return (for example) a <code>String</code> in one path and an <code>i32</code> in another path.</p>\n\n<p>In the case of <a href=\"https://doc.rust-lang.org/book/second-edition/ch17-02-trait-objects.html#trait-objects-perform-dynamic-dispatch\" rel=\"noreferrer\">dynamic dispatch</a>, it is not the \"real\" type that is returned but a <strong>trait object</strong>: the compiler does not know the real type; it only cares that the trait object can be used as a trait implementor. That is what you need here.</p>\n"}], "owner": {"reputation": 73, "user_id": 6862495, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Pvqq6YgEObk/AAAAAAAAAAI/AAAAAAAAADQ/XSJSeSTwjf0/photo.jpg?sz=128", "display_name": "\u5218\u6797\u6b23", "link": "https://stackoverflow.com/users/6862495/%e5%88%98%e6%9e%97%e6%ac%a3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1702, "favorite_count": 3, "accepted_answer_id": 51543209, "answer_count": 1, "score": 6, "last_activity_date": 1532623775, "creation_date": 1532621026, "last_edit_date": 1532621309, "question_id": 51543177, "link": "https://stackoverflow.com/questions/51543177/why-do-i-get-a-match-arms-have-incompatible-types-error-in-a-function-returnin", "title": "Why do I get a &quot;match arms have incompatible types&quot; error in a function returning `impl Trait`?", "body": "<pre><code>trait Counter {\n    fn count(&amp;self) -&gt; i32;\n}\n\nstruct AddCounter {\n    a: i32,\n    b: i32,\n}\nimpl Counter for AddCounter {\n    fn count(&amp;self) -&gt; i32 {\n        self.a + self.b\n    }\n}\n\nstruct MulCounter {\n    a: i32,\n    b: i32,\n}\nimpl Counter for MulCounter {\n    fn count(&amp;self) -&gt; i32 {\n        self.a * self.b\n    }\n}\n\nfn get_counter(a: i32, b: i32, op: &amp;str) -&gt; impl Counter {\n    match op {\n        \"+\" =&gt; AddCounter { a, b },\n        \"*\" =&gt; MulCounter { a, b },\n        _ =&gt; panic!(format!(\"{}{}\", \"\u672a\u77e5\u7684\u7b26\u53f7\uff1a\", op)),\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I get an error when I call <code>get_counter(...)</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: match arms have incompatible types\n  --&gt; src/main.rs:26:5\n   |\n26 | /     match op {\n27 | |         \"+\" =&gt; AddCounter { a, b },\n28 | |         \"*\" =&gt; MulCounter { a, b },\n   | |                ------------------- match arm with an incompatible type\n29 | |         _ =&gt; panic!(format!(\"{}{}\", \"\u672a\u77e5\u7684\u7b26\u53f7\uff1a\", op)),\n30 | |     }\n   | |_____^ expected struct `AddCounter`, found struct `MulCounter`\n   |\n   = note: expected type `AddCounter`\n              found type `MulCounter`\n</code></pre>\n"}, {"tags": ["rust", "hashmap"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 10, "last_activity_date": 1582764897, "last_edit_date": 1582764897, "creation_date": 1532618425, "answer_id": 51542367, "question_id": 51542024, "link": "https://stackoverflow.com/questions/51542024/how-do-i-use-the-entry-api-with-an-expensive-key-that-is-only-constructed-if-the/51542367#51542367", "title": "How do I use the Entry API with an expensive key that is only constructed if the Entry is Vacant?", "body": "<p>You cannot, safely. This is a limitation of the current entry API, and there's no great solution. The anticipated solution is the \"raw\" entry API. See <a href=\"https://stackoverflow.com/a/56921965/155423\">Stargateur's answer for an example of using it</a>.</p>\n\n<p>The only stable solution using the Entry API is to always clone the key:</p>\n\n<pre><code>map.entry(key.clone()).or_insert(some_value);\n</code></pre>\n\n<p>Outside of the Entry API, you can check if the map contains a value and insert it if not:</p>\n\n<pre><code>if !map.contains_key(&amp;key) {\n    map.insert(key.clone(), some_value);\n}\n\nmap.get(&amp;key).expect(\"This is impossible as we just inserted a value\");\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://internals.rust-lang.org/t/pre-rfc-abandonning-morals-in-the-name-of-performance-the-raw-entry-api/7043\" rel=\"nofollow noreferrer\">[Pre-RFC] Abandonning Morals In The Name Of Performance: The Raw Entry API</a> </li>\n<li><a href=\"https://github.com/rust-lang/rust/pull/50821\" rel=\"nofollow noreferrer\">WIP: add raw_entry API to HashMap (50821)</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/1769\" rel=\"nofollow noreferrer\">Extend entry API to work on borrowed keys. (1769)</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/issues/1203\" rel=\"nofollow noreferrer\">Add HashMap.entry_or_clone() method (1203)</a></li>\n</ul>\n\n<p>For non-<code>entry</code> based solutions, see:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36480845/155423\">How to avoid temporary allocations when using a complex key for a HashMap?</a></li>\n<li><a href=\"https://stackoverflow.com/q/45786717/155423\">How to implement HashMap with two keys?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 7, "last_activity_date": 1603658693, "last_edit_date": 1603658693, "creation_date": 1562500724, "answer_id": 56921965, "question_id": 51542024, "link": "https://stackoverflow.com/questions/51542024/how-do-i-use-the-entry-api-with-an-expensive-key-that-is-only-constructed-if-the/56921965#56921965", "title": "How do I use the Entry API with an expensive key that is only constructed if the Entry is Vacant?", "body": "<p>In nightly Rust, you can use the unstable <a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#method.raw_entry_mut\" rel=\"nofollow noreferrer\"><code>raw_entry_mut()</code></a> feature that allows this:</p>\n<blockquote>\n<p>Creates a raw entry builder for the HashMap.</p>\n<p>[...]</p>\n<p>Raw entries are useful for such exotic situations as:</p>\n<ul>\n<li>Deferring the creation of an owned key until it is known to be required</li>\n</ul>\n</blockquote>\n<p>In stable Rust, you can add the <a href=\"https://crates.io/crates/hashbrown\" rel=\"nofollow noreferrer\">hashbrown</a> crate which has the same API but stable. The hashbrown crate is actually the underlying implementation of the standard library's hashmap.</p>\n<p>Example:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(hash_raw_entry)]\nuse std::collections::HashMap;\n\n#[derive(Hash, PartialEq, Eq, Debug)]\nstruct NoCopy {\n    foo: i32,\n}\n\nimpl Clone for NoCopy {\n    fn clone(&amp;self) -&gt; Self {\n        println!(&quot;Clone of: {:?}&quot;, self);\n        Self { foo: self.foo }\n    }\n}\n\nfn main() {\n    let no_copy = NoCopy { foo: 21 };\n\n    let mut map = HashMap::new();\n\n    map.raw_entry_mut()\n        .from_key(&amp;no_copy)\n        .or_insert_with(|| (no_copy.clone(), 42));\n\n    map.raw_entry_mut()\n        .from_key(&amp;no_copy)\n        .or_insert_with(|| (no_copy.clone(), 84));\n\n    println!(&quot;{:#?}&quot;, map);\n}\n</code></pre>\n<p>Applied to your original example:</p>\n<pre><code>fn get_or_create&lt;K&gt;(&amp;mut self, key: K) -&gt; &amp;mut Foo\nwhere\n    K: AsRef&lt;str&gt; + Into&lt;String&gt;,\n{\n    self.map\n        .raw_entry_mut()\n        .from_key(key.as_ref())\n        .or_insert_with(|| (key.into(), Foo))\n        .1\n}\n</code></pre>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1167, "favorite_count": 1, "accepted_answer_id": 56921965, "answer_count": 2, "score": 12, "last_activity_date": 1603658693, "creation_date": 1532617405, "last_edit_date": 1582917077, "question_id": 51542024, "link": "https://stackoverflow.com/questions/51542024/how-do-i-use-the-entry-api-with-an-expensive-key-that-is-only-constructed-if-the", "title": "How do I use the Entry API with an expensive key that is only constructed if the Entry is Vacant?", "body": "<p>Is it possible to use the <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html\" rel=\"nofollow noreferrer\"><code>Entry</code></a> API to get a value by a <code>AsRef&lt;str&gt;</code>, but inserting it with <code>Into&lt;String&gt;</code>?</p>\n\n<p>This is the working example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::hash_map::{Entry, HashMap};\n\nstruct Foo;\n\n#[derive(Default)]\nstruct Map {\n    map: HashMap&lt;String, Foo&gt;,\n}\n\nimpl Map {\n    fn get(&amp;self, key: impl AsRef&lt;str&gt;) -&gt; &amp;Foo {\n        self.map.get(key.as_ref()).unwrap()\n    }\n\n    fn create(&amp;mut self, key: impl Into&lt;String&gt;) -&gt; &amp;mut Foo {\n        match self.map.entry(key.into()) {\n            Entry::Vacant(entry) =&gt; entry.insert(Foo {}),\n            _ =&gt; panic!(),\n        }\n    }\n\n    fn get_or_create(&amp;mut self, key: impl Into&lt;String&gt;) -&gt; &amp;mut Foo {\n        match self.map.entry(key.into()) {\n            Entry::Vacant(entry) =&gt; entry.insert(Foo {}),\n            Entry::Occupied(entry) =&gt; entry.into_mut(),\n        }\n    }\n}\n\nfn main() {\n    let mut map = Map::default();\n    map.get_or_create(\"bar\");\n    map.get_or_create(\"bar\");\n    assert_eq!(map.map.len(), 1);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=644a89e615a7503fc87742513b367816\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>My problem is that in <code>get_or_create</code> a <code>String</code> will always be created, incurring unneeded memory allocation, even if it's not needed for an occupied entry. Is it possible to fix this in any way? Maybe in a neat way with <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a>?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1532610097, "post_id": 51539473, "comment_id": 90046495, "body": "<a href=\"https://github.com/alexcrichton/toml-rs\" rel=\"nofollow noreferrer\">github.com/alexcrichton/toml-rs</a>"}, {"owner": {"reputation": 348, "user_id": 8496913, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B5NSF.png?s=128&g=1", "display_name": "jens1o", "link": "https://stackoverflow.com/users/8496913/jens1o"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532610310, "post_id": 51539473, "comment_id": 90046643, "body": "The duplicate isn&#39;t matching, although it refers to the same solution. Thanks @Boiethios"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532610472, "post_id": 51539473, "comment_id": 90046777, "body": "You&#39;re welcome! FYI, the duplicate, contrary to what is written, does not apply to duplicate question, but to <b>duplicate answer</b>."}, {"owner": {"reputation": 731, "user_id": 2665850, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/68760170a1eb60ce959a9248d78e1737?s=128&d=identicon&r=PG", "display_name": "Alinex", "link": "https://stackoverflow.com/users/2665850/alinex"}, "edited": false, "score": 6, "creation_date": 1532617102, "post_id": 51539473, "comment_id": 90051436, "body": "<a href=\"https://docs.rs/clap/2.9.3/clap/macro.crate_version!.html\" rel=\"nofollow noreferrer\">docs.rs/clap/2.9.3/clap/macro.crate_version!.html</a> Use <code>crate_version!()</code>"}, {"owner": {"reputation": 348, "user_id": 8496913, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B5NSF.png?s=128&g=1", "display_name": "jens1o", "link": "https://stackoverflow.com/users/8496913/jens1o"}, "reply_to_user": {"reputation": 731, "user_id": 2665850, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/68760170a1eb60ce959a9248d78e1737?s=128&d=identicon&r=PG", "display_name": "Alinex", "link": "https://stackoverflow.com/users/2665850/alinex"}, "edited": false, "score": 0, "creation_date": 1532618700, "post_id": 51539473, "comment_id": 90052479, "body": "@Alinex Thanks, that&#39;s the best answer!"}, {"owner": {"reputation": 362, "user_id": 5093093, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JOv6r.jpg?s=128&g=1", "display_name": "porkbrain", "link": "https://stackoverflow.com/users/5093093/porkbrain"}, "edited": false, "score": 2, "creation_date": 1586046271, "post_id": 51539473, "comment_id": 107981804, "body": "<code>option_env!(&quot;CARGO_PKG_VERSION&quot;)</code> is another alternative, see <a href=\"https://doc.rust-lang.org/std/macro.option_env.html\" rel=\"nofollow noreferrer\"><code>option_env!</code> macro</a>"}, {"owner": {"reputation": 3549, "user_id": 2271927, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/121d75f735e0cb84fcb2dd5f83427849?s=128&d=identicon&r=PG", "display_name": "Almar", "link": "https://stackoverflow.com/users/2271927/almar"}, "edited": false, "score": 3, "creation_date": 1587628396, "post_id": 51539473, "comment_id": 108586856, "body": "Or <code>let version = env!(&quot;CARGO_PKG_VERSION&quot;);</code>"}], "owner": {"reputation": 348, "user_id": 8496913, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B5NSF.png?s=128&g=1", "display_name": "jens1o", "link": "https://stackoverflow.com/users/8496913/jens1o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2659, "favorite_count": 0, "closed_date": 1532611081, "answer_count": 0, "score": 3, "last_activity_date": 1537385246, "creation_date": 1532610018, "last_edit_date": 1537385246, "question_id": 51539473, "link": "https://stackoverflow.com/questions/51539473/get-cargo-toml-version-at-runtime", "closed_reason": "Duplicate", "title": "Get Cargo.toml version at runtime", "body": "<p>In my <code>Cargo.toml</code> I have this block</p>\n\n<pre><code>[package]\nname = \"packagename\"\nversion = \"0.1.0\"\nauthors = [\"me &lt;abuse@gmail.com&gt;\"]\n</code></pre>\n\n<p>How can I fetch what [package].version is at runtime?</p>\n"}, {"tags": ["rust", "embedded", "move", "ffi"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532596610, "post_id": 51535192, "comment_id": 90038091, "body": "Do you have a heap?"}, {"owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532596704, "post_id": 51535192, "comment_id": 90038149, "body": "@Boiethios On the system I&#39;m currenty implementing this I do. But that&#39;s not always the case, so I&#39;d prefer to prevent using the heap. (The structure isn&#39;t big and it doesn&#39;t have to be fast. So moving it is okay in my usecase.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532610958, "post_id": 51535192, "comment_id": 90047153, "body": "To be clear, this is <i>exactly</i> what C does. It&#39;s only because you are using FFI and raw pointers that the problem even occurs in Rust. If your FFI function used lifetimes (which doesn&#39;t make sense), the Rust compiler would <a href=\"https://stackoverflow.com/q/32682876/155423\"><i>prevent</i> this code from compiling</a>."}, {"owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532625474, "post_id": 51535192, "comment_id": 90056449, "body": "@Shepmaster Thanks for the clarification, but I wasn&#39;t complaining Rust. It actually make perfect sense. But what do you mean by \u201cexactly what C does\u201d? I&#39;ve never seen move semantics in C."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532625736, "post_id": 51535192, "comment_id": 90056598, "body": "In C, you&#39;d be creating your <code>SerialPort</code> struct in the stack frame of <code>setup_new_port</code>, passing a reference to it to <code>register_with_c_code</code>, and then immediately invalidating the reference by exiting the function. That&#39;s what&#39;s happening here because you are using raw pointers. &quot;Move semantics&quot; exist in C and C++, Rust just allows the compiler to help you with them."}, {"owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532626097, "post_id": 51535192, "comment_id": 90056779, "body": "@Shepmaster I see what you mean and compare. But in C I think its more obvious for the programmer as he will think more of returning a copy of the data. (Or its me having a better understanding of what the compiler produces in C.) You might think a lot in how the Rust compiler does things on the machine level. For a developer new at Rust just using the language the move semantics feels more like its still the same variable. So at first sight the changed memory address might be a surprise. I think at this point also the name \u201cmove semantics\u201d might suggest a wrong understanding at first."}], "answers": [{"comments": [{"owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "edited": false, "score": 0, "creation_date": 1532597818, "post_id": 51535502, "comment_id": 90038815, "body": "Thank you for this detailed information with a lot of helpful pointers. I guess I go with using the heap for the moment. Everything else seems to make the code more complicated while not being necessary so far."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 9, "last_activity_date": 1532600846, "last_edit_date": 1532600846, "creation_date": 1532597382, "answer_id": 51535502, "question_id": 51535192, "link": "https://stackoverflow.com/questions/51535192/is-there-any-trait-in-rust-that-gets-notified-if-a-structure-is-moved-to-a-diffe/51535502#51535502", "title": "Is there any trait in Rust that gets notified if a structure is moved to a different location?", "body": "<p><strong>No, by design.</strong></p>\n\n<p>Rust was specifically designed without so-called move constructors, in Rust a move is a bitwise copy, allowing many optimizations:</p>\n\n<ul>\n<li>such as the use of C <code>memcpy</code> and <code>realloc</code>,</li>\n<li>optimizations based on the fact that no <code>panic!</code> can be called during a move,</li>\n<li>...</li>\n</ul>\n\n<p>Actually, there are proposals in C++ to retrofit such a design (<code>is_relocatable</code>), and performance is the main driver.</p>\n\n<hr>\n\n<p><strong>So what?</strong></p>\n\n<p>Do it like <code>Mutex</code> do! That is, <code>Box</code> whatever should not move, and isolate it in an opaque <code>struct</code> so that nobody can move the content out of the box.</p>\n\n<p>If heap allocation is not available... then you may want to look into <a href=\"https://doc.rust-lang.org/nightly/std/mem/struct.PinMut.html\" rel=\"noreferrer\"><code>PinMut</code></a>, or otherwise borrow the structure. What is borrowed cannot be moved.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 2, "last_activity_date": 1532597898, "last_edit_date": 1532597898, "creation_date": 1532597519, "answer_id": 51535552, "question_id": 51535192, "link": "https://stackoverflow.com/questions/51535192/is-there-any-trait-in-rust-that-gets-notified-if-a-structure-is-moved-to-a-diffe/51535552#51535552", "title": "Is there any trait in Rust that gets notified if a structure is moved to a different location?", "body": "<p>The only solution I see (I do not says that it is the only solution) is to have an arena in the stack, or another kind of placeholder:</p>\n\n<pre><code>#[derive(Default)]\npub struct SerialPort {\n    _dummy: i32,\n}\n\npub fn setup_new_port(placeholder: &amp;mut Option&lt;SerialPort&gt;) -&gt; &amp;SerialPort {\n    let port = SerialPort::default();\n    std::mem::replace(placeholder, Some(port));\n    let port = placeholder.as_ref().unwrap();\n    println!(\"address: {:p}\", port);\n    //port.register_with_c_code();\n    port\n}\n\nfn main() {\n    let mut placeholder = None;\n\n    let port = setup_new_port(&amp;mut placeholder);\n    println!(\"address: {:p}\", port);\n}\n</code></pre>\n\n<p>The two <code>println!</code> lines print the same value.</p>\n\n<p>I searched in the internet to find a crate that implements an arena in the stack but found nothing so far.</p>\n"}, {"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532613904, "post_id": 51535766, "comment_id": 90049183, "body": "<code>mem::forget</code> can consume a stack-allocated <code>Serialport</code> without calling <code>drop</code>, which may lead to memory unsafety."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 1, "last_activity_date": 1532598131, "creation_date": 1532598131, "answer_id": 51535766, "question_id": 51535192, "link": "https://stackoverflow.com/questions/51535192/is-there-any-trait-in-rust-that-gets-notified-if-a-structure-is-moved-to-a-diffe/51535766#51535766", "title": "Is there any trait in Rust that gets notified if a structure is moved to a different location?", "body": "<p>I would split it up.\nI'd create an instance of the Serialport somewhere (on the stack) and afterwards call <code>register_with_c_code()</code>. Also I would <code>impl Drop</code> for Serialport, so the c_code would be detached, when the Serialport goes out of scope.</p>\n\n<p>For your Serialport interface, I would not accept any move, but only (mutable) references.</p>\n"}], "owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "accepted_answer_id": 51535502, "answer_count": 3, "score": 2, "last_activity_date": 1532610832, "creation_date": 1532596473, "last_edit_date": 1532610832, "question_id": 51535192, "link": "https://stackoverflow.com/questions/51535192/is-there-any-trait-in-rust-that-gets-notified-if-a-structure-is-moved-to-a-diffe", "title": "Is there any trait in Rust that gets notified if a structure is moved to a different location?", "body": "<p>In a mixture of Rust and C code for a microcontroller, I have a Rust data structure that I have to make known to the C part of my program. I got this working.</p>\n\n<pre><code>pub struct SerialPort {\n    // ... some attributes ...\n}\n</code></pre>\n\n<p>I tried to refactor the Rust code and wanted to generate the Rust structure in a function that also registers the callbacks in my C Code.</p>\n\n<pre><code>pub fn setup_new_port() -&gt; SerialPort {\n    let port = SerialPort::new();\n    port.register_with_c_code();\n    port\n}\n</code></pre>\n\n<p>This doesn't work because Rust will move the content of the memory of my variable of type <code>SerialPort</code> to a different location when the function returns. The addresses registered in the C code point to the (now freed) stackframe of <code>setup_new_port()</code> while it got moved to the stack frame of the caller, so my C code will access invalid addresses.</p>\n\n<p>Is there any trait that I can implement that gets notified when a move happens? I could adjust the addresses registered in my C code in the implementation of the trait.</p>\n\n<p>I know that I could prevent the move from happening by allocating my structure on the heap, but I would like to avoid this as the code runs on a microcontroller and dynamic memory allocation might not always be present.</p>\n"}, {"tags": ["syntax", "rust"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1532566962, "post_id": 51529567, "comment_id": 90027374, "body": "Is that actually a valid C expression\u2026?"}, {"owner": {"reputation": 507, "user_id": 3530573, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mCiQb.png?s=128&g=1", "display_name": "RJ-Adam", "link": "https://stackoverflow.com/users/3530573/rj-adam"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1532567776, "post_id": 51529567, "comment_id": 90027526, "body": "Yes, C compilers even have a warning to make sure you put extra parenthesis around the assignment to make sure you didn&#39;t mean == instead of =. It&#39;s called -Wparenthesis <a href=\"https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html\" rel=\"nofollow noreferrer\">gcc.gnu.org/onlinedocs/gcc/Warning-Options.html</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1532574223, "post_id": 51529567, "comment_id": 90028809, "body": "@Ry- Clearly, no it isn&#39;t a valid C expression, (but I wish it would sometime ;))"}, {"owner": {"reputation": 507, "user_id": 3530573, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mCiQb.png?s=128&g=1", "display_name": "RJ-Adam", "link": "https://stackoverflow.com/users/3530573/rj-adam"}, "edited": false, "score": 0, "creation_date": 1532696800, "post_id": 51529567, "comment_id": 90084026, "body": "I see the error now. Fixed."}], "answers": [{"comments": [{"owner": {"reputation": 507, "user_id": 3530573, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mCiQb.png?s=128&g=1", "display_name": "RJ-Adam", "link": "https://stackoverflow.com/users/3530573/rj-adam"}, "edited": false, "score": 0, "creation_date": 1532568258, "post_id": 51529659, "comment_id": 90027614, "body": "Oh my, those are some gnarly for loop iterators. I agree, boring is better."}], "tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 2, "last_activity_date": 1533265211, "last_edit_date": 1533265211, "creation_date": 1532567765, "answer_id": 51529659, "question_id": 51529567, "link": "https://stackoverflow.com/questions/51529567/is-there-an-way-to-assign-a-variable-inside-a-loops-conditional-expression/51529659#51529659", "title": "Is there an way to assign a variable inside a loop&#39;s conditional expression?", "body": "<p>As of Rust 1.28, you can use <a href=\"https://doc.rust-lang.org/std/iter/fn.repeat_with.html\" rel=\"nofollow noreferrer\"><code>iter::repeat_with</code></a>:</p>\n\n<pre><code>for x in iter::repeat_with(get_num).take_while (|x| *x &lt; 5) {\n    println!(\"x is {}, but less than 5\", x);\n}\n</code></pre>\n\n<p>but boring is probably better:</p>\n\n<pre><code>loop {\n    let x = get_num();\n\n    if x &gt;= 5 {\n        break;\n    }\n\n    println!(\"x is {}, but less than 5\", x);\n}\n</code></pre>\n\n<p><a href=\"https://github.com/rust-lang/rfcs/pull/2497\" rel=\"nofollow noreferrer\">Eventually, there might</a> be an equivalent closer in syntax.</p>\n\n<pre><code>// doesn\u2019t exist yet!\nwhile let x = get_num() &amp;&amp; x &lt; 5 {\n    println!(\"x is {}, but less than 5\", x);\n}\n</code></pre>\n"}], "owner": {"reputation": 507, "user_id": 3530573, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mCiQb.png?s=128&g=1", "display_name": "RJ-Adam", "link": "https://stackoverflow.com/users/3530573/rj-adam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "closed_date": 1532568949, "accepted_answer_id": 51529659, "answer_count": 1, "score": 0, "last_activity_date": 1533265211, "creation_date": 1532566809, "last_edit_date": 1532696769, "question_id": 51529567, "link": "https://stackoverflow.com/questions/51529567/is-there-an-way-to-assign-a-variable-inside-a-loops-conditional-expression", "closed_reason": "Duplicate", "title": "Is there an way to assign a variable inside a loop&#39;s conditional expression?", "body": "<p>Is there an equivalent to this C expression in Rust?</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int x;\nwhile ((x = get_num()) &lt; 5) {\n    printf(\"x is %d, but less than 5\\n\", x);\n}\n</code></pre>\n\n<p><code>get_num()</code> is a function that takes user input and returns an integer.</p>\n\n<p>The best I've been able to come up with so far is this:</p>\n\n<pre><code>while let Some(x) = {let y = get_num(); if y &lt; 5 {Some(y)} else {None}}  {\n    println!(\"x is {}, but less than 5\", x);\n}\n</code></pre>\n"}]