[{"tags": ["json", "rust", "deserialization", "serde"], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1448527789, "post_id": 33930806, "comment_id": 55628137, "body": "I think you can run <code>cargo rustc -Z unstable-options --pretty=expanded</code>. No need to extract <code>rustc</code> command from the verbose output."}, {"owner": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "edited": false, "score": 0, "creation_date": 1448537659, "post_id": 33930806, "comment_id": 55634595, "body": "Thank you for the such complete and serious explanation. The only missing answer is about how to fix that."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1448585109, "post_id": 33930806, "comment_id": 55656657, "body": "@VladimirMatveev: Thanks for the info. Actually, you need to put <code>--</code> before the arguments to pass to <code>rustc</code>, and then, Cargo will not run <code>rustc</code> if the target is up to date."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "edited": false, "score": 1, "creation_date": 1448610455, "post_id": 33930806, "comment_id": 55663048, "body": "@ababo, I think this is likely a problem with serde itself. It probably makes sense to report this issue to its issue tracker."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1448585568, "last_edit_date": 1448585568, "creation_date": 1448513328, "answer_id": 33930806, "question_id": 33925368, "link": "https://stackoverflow.com/questions/33925368/how-can-i-disable-the-unused-attribute-warning-when-using-serde-library/33930806#33930806", "title": "How can I disable the &quot;unused attribute&quot; warning when using Serde library?", "body": "<p>Here's the full output from the compiler:</p>\n\n<pre><code>src/main.rs:10:10: 10:21 warning: unused attribute, #[warn(unused_attributes)] on by default\nsrc/main.rs:10 #[derive(Deserialize)]\n                        ^~~~~~~~~~~\nsrc/main.rs:10:10: 10:21 note: in this expansion of #[derive_Deserialize] (defined in src/main.rs)\n</code></pre>\n\n<p>What this means is that the warning is within the code for the <code>impl</code> generated by the <code>#[derive]</code> attribute. However, it's hard to understand what's going on without seeing the code!</p>\n\n<p>Fortunately, we can ask the compiler to show us the generated code. We need to pass additional parameters to <code>rustc</code>, specifically <code>-Z unstable-options --pretty=expanded</code>. If you're using Cargo, delete the compiled crate or run <code>cargo clean</code> (Cargo does nothing if the target is up to date), then run this command:</p>\n\n<pre><code>$ cargo rustc -- -Z unstable-options --pretty=expanded &gt; src/main-expanded.rs\n</code></pre>\n\n<p>We can then try to compile <code>src/main-expanded.rs</code> with <code>rustc</code>. If you're using Cargo, use the command Cargo prints when you run <code>cargo build --verbose</code> (when the target is not up to date), but replace the name of the root source file with the new file we just generated &ndash; or you can just swap your <code>main.rs</code> or <code>lib.rs</code> with the expanded source. It might not always work, but when it does, it can provide some valuable insight.</p>\n\n<p>We now get a clearer picture of the situation:</p>\n\n<pre><code>src/main-expanded.rs:17:5: 17:43 warning: unused attribute, #[warn(unused_attributes)] on by default\nsrc/main-expanded.rs:17     #[serde(rename = \"cudaBlasDylibPath\")]\n                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nsrc/main-expanded.rs:20:1: 20:25 warning: unused attribute, #[warn(unused_attributes)] on by default\nsrc/main-expanded.rs:20 #[automatically_derived]\n                        ^~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>Here, the warning on the <code>#[serde]</code> attribute is probably caused by the fact that the struct no longer has the <code>#[derive(Deserialize)]</code> attribute, which is what processes the attribute. Also, it's not part of the expansion of the <code>#[derive(Deserialize)]</code> attribute, so that's not the attribute the original warning complained about.</p>\n\n<p>It looks like the <code>#[automatically_derived]</code> attribute is the culprit here. This attribute appears to be used mainly by rustdoc (the documentation generation tool), but it has no meaning when compiling.</p>\n\n<p>The implementation of <code>#[derive]</code> for derivable traits known to <code>rustc</code> emits the attribute like this:</p>\n\n<pre><code>let attr = cx.attribute(\n    self.span,\n    cx.meta_word(self.span,\n                 InternedString::new(\"automatically_derived\")));\n// Just mark it now since we know that it'll end up used downstream\nattr::mark_used(&amp;attr);\n</code></pre>\n\n<p>My guess is that serde doesn't call the <code>mark_used</code> function, which is what causes the warning. The <a href=\"https://github.com/serde-rs/serde/blob/f474c57881444346f431bb6f2c978f3a06f0af73/serde_codegen/src/ser.rs#L62-L71\" rel=\"nofollow\">only</a> <a href=\"https://github.com/serde-rs/serde/blob/f474c57881444346f431bb6f2c978f3a06f0af73/serde_codegen/src/de.rs#L67-L76\" rel=\"nofollow\">occurrences</a> of \"automatically_derived\" in serde's source code are in invocations of the <code>quote_item!</code> macro, which probably doesn't emit a call to <code>mark_used</code> (and it should probably not do it either).</p>\n"}], "owner": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 561, "favorite_count": 0, "accepted_answer_id": 33930806, "answer_count": 1, "score": 5, "last_activity_date": 1538857165, "creation_date": 1448481488, "last_edit_date": 1538857165, "question_id": 33925368, "link": "https://stackoverflow.com/questions/33925368/how-can-i-disable-the-unused-attribute-warning-when-using-serde-library", "title": "How can I disable the &quot;unused attribute&quot; warning when using Serde library?", "body": "<p>In addition to disabling the warning, why does it happen?</p>\n\n<pre><code>use serde_json::from_str;\nuse serde_json::error::Result;\n\n#[derive(Deserialize)]\npub struct Config {\n    #[serde(rename=\"cudaBlasDylibPath\")]\n    pub cuda_blas_dylib_path: String,\n}\n\nimpl Config {\n    pub fn new() -&gt; Result&lt;Config&gt; {\n        from_str(\"{}\")\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>src/config.rs:4:10: 4:21 warning: unused attribute, #[warn(unused_attributes)] on by default\n  src/config.rs:4 #[derive(Deserialize)]</p>\n</blockquote>\n\n<p>Adding <code>#[allow(unused_attributes)]</code> doesn't help.</p>\n"}, {"tags": ["enums", "pattern-matching", "rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1448532042, "post_id": 33925232, "comment_id": 55631018, "body": "You could also make <code>Expr</code> copyable. Or consume it during evaluation if you don&#39;t need it again after evaluation anyway."}], "answers": [{"comments": [{"owner": {"reputation": 876, "user_id": 3824328, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/9329606ad412e2e981aeb35ebbb1e799?s=128&d=identicon&r=PG&f=1", "display_name": "Fedorov7890", "link": "https://stackoverflow.com/users/3824328/fedorov7890"}, "edited": false, "score": 0, "creation_date": 1611666347, "post_id": 33925640, "comment_id": 116519247, "body": "Looks like something changed in Rust language, because as of 2021 the asterisk is not required, first variant with &#39;match self&#39; works."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 876, "user_id": 3824328, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/9329606ad412e2e981aeb35ebbb1e799?s=128&d=identicon&r=PG&f=1", "display_name": "Fedorov7890", "link": "https://stackoverflow.com/users/3824328/fedorov7890"}, "edited": false, "score": 0, "creation_date": 1611685395, "post_id": 33925640, "comment_id": 116529009, "body": "Yeah, this is called match ergonomics, but I don&#39;t recommend using this because it can provide confusing error messages."}], "tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 15, "last_activity_date": 1484863871, "last_edit_date": 1484863871, "creation_date": 1448482448, "answer_id": 33925640, "question_id": 33925232, "link": "https://stackoverflow.com/questions/33925232/how-to-match-over-self-in-an-enum/33925640#33925640", "title": "How to match over self in an enum?", "body": "<p>For the first question, you need to use the <code>ref</code> keyword, as said by @Adrian:</p>\n\n<pre><code>impl Expr {\n    fn eval(&amp;self, env: &amp;mut Env) -&gt; Result&lt;u32, String&gt; {\n        use Expr::*;\n\n        match *self {\n            Lit(l) =&gt; Ok(l),\n            Var(ref id) =&gt; env.lookup(id).ok_or_else(|| format!(\"undefined var {:?}\", id)),\n            Ass(ref id, v) =&gt; {\n                env.assign(id.clone(), v);\n                Ok(v)\n            }\n            Add(f, s) =&gt; Ok(f + s),\n            Sub(f, s) =&gt; Ok(f - s),\n            Mul(f, s) =&gt; Ok(f * s),\n        }\n    }\n}\n</code></pre>\n\n<p>Using <code>ref</code> prevents the pattern matching from taking ownership of <code>id</code>. As you mention, you are not allowed to take the value of <code>id</code> out of the <code>Expr</code> because you only have an immutable reference. <code>v</code>, <code>f</code>, and <code>s</code> don't have this problem because they are <code>u32</code>, which implements <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"noreferrer\"><code>Copy</code></a>. Instead of taking the value out, they are copied, leaving the original in place.</p>\n\n<p>I don't know what the <code>Env</code> or <code>Id</code> type are, or the definitions of <code>lookup</code> and <code>assign</code>, so perhaps some <code>clone()</code> calls are not necessary.</p>\n\n<p>For your second question, this is because <code>self</code> is of type <code>&amp;Expr</code>, so you need to include <code>&amp;</code> in the patterns:</p>\n\n<pre><code>impl Expr {\n    fn eval(&amp;self, env: &amp;mut Env) -&gt; Result&lt;u32, String&gt; {\n        use Expr::*;\n\n        match self {\n            &amp;Lit(l) =&gt; Ok(l),\n            &amp;Var(ref id) =&gt; env.lookup(id).ok_or_else(|| format!(\"undefined var {:?}\", id)),\n            &amp;Ass(ref id, v) =&gt; {\n                env.assign(id.clone(), v);\n                Ok(v)\n            }\n            &amp;Add(f, s) =&gt; Ok(f + s),\n            &amp;Sub(f, s) =&gt; Ok(f - s),\n            &amp;Mul(f, s) =&gt; Ok(f * s),\n        }\n    }\n}\n</code></pre>\n\n<p>Both forms of matching are equivalent, but <code>*self</code> is more idiomatic and requires less typing :)</p>\n"}], "owner": {"reputation": 5638, "user_id": 987706, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f9c778f2ae5f4b5fde46d5f1720b4a7c?s=128&d=identicon&r=PG", "display_name": "The Oddler", "link": "https://stackoverflow.com/users/987706/the-oddler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4760, "favorite_count": 2, "accepted_answer_id": 33925640, "answer_count": 1, "score": 14, "last_activity_date": 1484863871, "creation_date": 1448480915, "last_edit_date": 1484863259, "question_id": 33925232, "link": "https://stackoverflow.com/questions/33925232/how-to-match-over-self-in-an-enum", "title": "How to match over self in an enum?", "body": "<p>I have an enum:</p>\n\n<pre><code>enum Expr {\n    Lit(u32),\n    Var(Id),\n    Ass(Id, u32),\n    Add(u32, u32),\n    Sub(u32, u32),\n    Mul(u32, u32),\n}\n</code></pre>\n\n<p>I'm trying to implement a method:</p>\n\n<pre><code>impl Expr {\n    fn eval(&amp;self, env: &amp;mut Env) -&gt; Result&lt;u32, String&gt; {\n        use Expr::*;\n\n        match *self {\n            Lit(l) =&gt; Ok(l),\n            Var(id) =&gt; env.lookup(&amp;id).ok_or_else(|| format!(\"undefined var {:?}\", id)),\n            Ass(id, v) =&gt; {\n                env.assign(id, v);\n                Ok(v)\n            }\n            Add(f, s) =&gt; Ok(f + s),\n            Sub(f, s) =&gt; Ok(f - s),\n            Mul(f, s) =&gt; Ok(f * s),\n        }\n    }\n}\n</code></pre>\n\n<p>but I'm getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:25:15\n   |\n25 |         match *self {\n   |               ^^^^^ cannot move out of borrowed content\n26 |             Lit(l) =&gt; Ok(l),\n27 |             Var(id) =&gt; env.lookup(&amp;id).ok_or_else(|| format!(\"undefined var {:?}\", id)),\n   |                 -- hint: to prevent move, use `ref id` or `ref mut id`\n28 |             Ass(id, v) =&gt; {\n   |                 -- ...and here (use `ref id` or `ref mut id`)\n</code></pre>\n\n<p>Without the star, I'm also getting an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:25:17\n   |\n25 |                 Lit(l) =&gt; Ok(l),\n   |                 ^^^^^^ expected &amp;Expr, found enum `Expr`\n   |\n   = note: expected type `&amp;Expr`\n   = note:    found type `Expr`\n</code></pre>\n\n<p>I think I understand the first error: I'm trying to do more than I'm allowed with the (immutable) borrowed <code>self</code>, but I'm not really sure about the second error. I have no idea how to do this properly.</p>\n"}, {"tags": ["java", "android", "android-ndk", "rust", "libsodium"], "comments": [{"owner": {"reputation": 11902, "user_id": 3115956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8eb57ac8f519e5655e4f436e5dd276fb?s=128&d=identicon&r=PG&f=1", "display_name": "mstorsjo", "link": "https://stackoverflow.com/users/3115956/mstorsjo"}, "edited": false, "score": 0, "creation_date": 1448475109, "post_id": 33923142, "comment_id": 55608152, "body": "I take it that you&#39;ve already loaded library A when loading library B? Can you try <code>arm-linux-androideabi-nm -D libA.so | grep crypto_sign_ed25519_detached</code> and similarly for libB.so? (You find the <code>nm</code> binary in <code>NDK&#47;toolchains&#47;arm-linux-androideabi-4.*&#47;prebuilt&#47;*&#47;bin</code>.)"}, {"owner": {"reputation": 63, "user_id": 2846849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34cdb1d7639d4f4ad05e3e6e3303d351?s=128&d=identicon&r=PG&f=1", "display_name": "Raed M", "link": "https://stackoverflow.com/users/2846849/raed-m"}, "reply_to_user": {"reputation": 11902, "user_id": 3115956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8eb57ac8f519e5655e4f436e5dd276fb?s=128&d=identicon&r=PG&f=1", "display_name": "mstorsjo", "link": "https://stackoverflow.com/users/3115956/mstorsjo"}, "edited": false, "score": 0, "creation_date": 1448476357, "post_id": 33923142, "comment_id": 55608873, "body": "That&#39;s right, A is being loaded before B. Just ran nm and received the following outputs:  <code>T crypto_sign_ed25519_detached for libA.so U crypto_sign_ed25519_detached for libB.so</code>  Any idea what this means?"}, {"owner": {"reputation": 11902, "user_id": 3115956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8eb57ac8f519e5655e4f436e5dd276fb?s=128&d=identicon&r=PG&f=1", "display_name": "mstorsjo", "link": "https://stackoverflow.com/users/3115956/mstorsjo"}, "edited": false, "score": 0, "creation_date": 1448478220, "post_id": 33923142, "comment_id": 55609920, "body": "I assume the former had a nonzero hex address printed before the <code>T</code>, while the latter had empty space before the <code>U</code>? This just means that libA.so has a definition for the symbol, and libB.so has an undefined symbol with that name. So given that, it does seem correct."}, {"owner": {"reputation": 63, "user_id": 2846849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34cdb1d7639d4f4ad05e3e6e3303d351?s=128&d=identicon&r=PG&f=1", "display_name": "Raed M", "link": "https://stackoverflow.com/users/2846849/raed-m"}, "reply_to_user": {"reputation": 11902, "user_id": 3115956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8eb57ac8f519e5655e4f436e5dd276fb?s=128&d=identicon&r=PG&f=1", "display_name": "mstorsjo", "link": "https://stackoverflow.com/users/3115956/mstorsjo"}, "edited": false, "score": 0, "creation_date": 1448478728, "post_id": 33923142, "comment_id": 55610219, "body": "Oh interesting. Could this mean that libB has been configured incorrectly or that some undesirable optimization could have occurred that omitted this method from the final object?"}, {"owner": {"reputation": 11902, "user_id": 3115956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8eb57ac8f519e5655e4f436e5dd276fb?s=128&d=identicon&r=PG&f=1", "display_name": "mstorsjo", "link": "https://stackoverflow.com/users/3115956/mstorsjo"}, "edited": false, "score": 0, "creation_date": 1448479202, "post_id": 33923142, "comment_id": 55610472, "body": "No, it means that libB uses this function (or variable), and libA provides it - which all seems just correct, just as it should be. The questions is why it isn&#39;t found when you already have loaded libA, when trying to load libB."}], "answers": [{"tags": [], "owner": {"reputation": 63, "user_id": 2846849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34cdb1d7639d4f4ad05e3e6e3303d351?s=128&d=identicon&r=PG&f=1", "display_name": "Raed M", "link": "https://stackoverflow.com/users/2846849/raed-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1448584567, "creation_date": 1448584567, "answer_id": 33948832, "question_id": 33923142, "link": "https://stackoverflow.com/questions/33923142/android-ndk-two-prebuilt-shared-libraries-but-one-of-them-depends-on-the-other/33948832#33948832", "title": "Android NDK: Two prebuilt shared libraries, but one of them depends on the other", "body": "<p>After a days worth of work, the problem was with the version of libsodium that I was using (1.0.6). I found that the undefined symbols when running ndk-build vary based on the version used. Using libsodium v1.0.3 solved my problems!</p>\n"}], "owner": {"reputation": 63, "user_id": 2846849, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34cdb1d7639d4f4ad05e3e6e3303d351?s=128&d=identicon&r=PG&f=1", "display_name": "Raed M", "link": "https://stackoverflow.com/users/2846849/raed-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 318, "favorite_count": 0, "accepted_answer_id": 33948832, "answer_count": 1, "score": 2, "last_activity_date": 1448584567, "creation_date": 1448473399, "question_id": 33923142, "link": "https://stackoverflow.com/questions/33923142/android-ndk-two-prebuilt-shared-libraries-but-one-of-them-depends-on-the-other", "title": "Android NDK: Two prebuilt shared libraries, but one of them depends on the other", "body": "<p>I'm writing an Android application that relies on two prebuilt shared libraries (A and B). Both libraries are configured to work with the armeabi and armeabi-v7a architectures.</p>\n\n<p>The first prebuilt library, A, is libsodium. The second prebuilt library, B, is a Rust library that depends on libsodium. When compiling the Rust prebuilt library, libsodium is used as a dependency.</p>\n\n<p>Right now, I want to use my two prebuilt libraries, A &amp; B, in my Android application. Loading A using System.loadLibrary() works just fine. But when I load B, there's an error that B can't find a method defined in A:</p>\n\n<p><code>java.lang.UnsatisfiedLinkError: dlopen failed: cannot locate symbol \"crypto_sign_ed25519_detached\" referenced by \"libB.so\"...</code></p>\n\n<p>My Android.mk is as follows:</p>\n\n<pre><code>LOCAL_PATH := $(call my-dir)\n\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := sodium\nLOCAL_SRC_FILES := ../jniLibs/$(TARGET_ARCH_ABI)/libsodium.so\nLOCAL_C_INCLUDES := $(LOCAL_PATH)/include/sodium.h $(LOCAL_PATH)/include/sodium/\ninclude $(PREBUILT_SHARED_LIBRARY)\n\ninclude $(CLEAR_VARS)\nLOCAL_MODULE := rust\nLOCAL_SRC_FILES := ../jniLibs/$(TARGET_ARCH_ABI)/librust.so\nLOCAL_C_INCLUDES := $(LOCAL_PATH)/include/sodium.h $(LOCAL_PATH)/include/sodium/\nLOCAL_SHARED_LIBRARIES := sodium\ninclude $(PREBUILT_SHARED_LIBRARY)\n\ninclude $(CLEAR_VARS)\nLOCAL_MODULE    := rust-manager\nLOCAL_SRC_FILES := rust-manager.c\nLOCAL_SHARED_LIBRARIES := rust sodium\nLOCAL_C_INCLUDES := $(LOCAL_PATH)/include/ $(LOCAL_PATH)/include/sodium.h $(LOCAL_PATH)/include/sodium/\ninclude $(BUILD_SHARED_LIBRARY)\n</code></pre>\n\n<p>The rust-manager.c file is my C wrapper generated using javah that contains C functions that map my native Java functions to the Rust library, but I think it's negligible at this point. Any help would be much appreciated!</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"comments": [{"owner": {"reputation": 9885, "user_id": 1039947, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/eYRpr.png?s=128&g=1", "display_name": "kmp", "link": "https://stackoverflow.com/users/1039947/kmp"}, "edited": false, "score": 0, "creation_date": 1448442040, "post_id": 33911915, "comment_id": 55586297, "body": "Awesome, thank you so much!  I was about to run into a deep tunnel I think when instead the solution was pretty straight forward."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 18, "last_activity_date": 1448441108, "creation_date": 1448441108, "answer_id": 33911915, "question_id": 33911792, "link": "https://stackoverflow.com/questions/33911792/how-do-i-share-access-to-an-atomicbool-between-threads/33911915#33911915", "title": "How do I share access to an AtomicBool between threads?", "body": "<p>There are two ways to access variables between threads:</p>\n\n<ul>\n<li>borrowing, which requires guaranteeing that the variable's lifetime exceeds the threads' lifetime</li>\n<li>shared ownership (via <code>Arc</code>):</li>\n</ul>\n\n<p>Borrowing is not supported by the Standard Library at the moment, although 3rd-party crates such as <a href=\"https://github.com/aturon/crossbeam\" rel=\"noreferrer\">crossbeam</a> offer it. For shared ownership, <code>Arc</code> is indeed a possibility...</p>\n\n<p>... however you need to consider what you put in <code>Arc</code> carefully:</p>\n\n<pre><code>let stop_bool = Arc::new(&amp;self.should_stop).clone();\n</code></pre>\n\n<p>Here, you are creating a <code>Arc&lt;&amp;'a AtomicBool&gt;</code> from a <code>&amp;'a self</code>, and thus you are sharing ownership over a <em>borrowed</em> reference. I'll point you back to the above explanation: cross-thread borrowing is not supported in the Standard Library yet.</p>\n\n<p>You need a <code>Arc&lt;AtomicBool&gt;</code> for proper shared ownership, and this is done by changing <code>Test</code>:</p>\n\n<pre><code>struct Test {\n    should_stop: Arc&lt;AtomicBool&gt;,\n    running_thread_handles: Vec&lt;JoinHandle&lt;()&gt;&gt;\n}\n</code></pre>\n\n<p>Then, cloning it is easy:</p>\n\n<pre><code>let stop_bool = self.should_stop.clone();\n</code></pre>\n"}], "owner": {"reputation": 9885, "user_id": 1039947, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/eYRpr.png?s=128&g=1", "display_name": "kmp", "link": "https://stackoverflow.com/users/1039947/kmp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3720, "favorite_count": 0, "accepted_answer_id": 33911915, "answer_count": 1, "score": 10, "last_activity_date": 1448635615, "creation_date": 1448440645, "last_edit_date": 1448635615, "question_id": 33911792, "link": "https://stackoverflow.com/questions/33911792/how-do-i-share-access-to-an-atomicbool-between-threads", "title": "How do I share access to an AtomicBool between threads?", "body": "<p>I have this little program - essentially I want one thread to be able to tell the other to stop via a shared boolean in a struct.  </p>\n\n<pre><code>use std::thread;\nuse std::thread::JoinHandle;\nuse std::time::Duration;\nuse std::sync::atomic::{AtomicBool, Ordering};\n\nstruct Test {\n    should_stop: AtomicBool,\n    running_thread_handles: Vec&lt;JoinHandle&lt;()&gt;&gt;\n}\n\nimpl Test {\n    fn new() -&gt; Test {\n        Test { \n            should_stop: AtomicBool::new(false), \n            running_thread_handles: Vec::new() \n        }\n    }\n\n    fn stop(&amp;mut self) {\n        self.should_stop.store(true, Ordering::Relaxed);\n    }\n\n    fn start(&amp;mut self) {\n        let handle = thread::spawn(move || {\n            loop {\n                println!(\"Looping\");\n                thread::sleep(Duration::from_millis(500));\n\n                // I want to effectively do this...\n                /*\n                if self.stop_bool.load(Ordering::Relaxed) {\n                    println!(\"Stopping\");\n                    break;\n                }*/\n            }\n        });\n\n        self.running_thread_handles.push(handle);\n    }\n}\n\nimpl Drop for Test {\n    fn drop(&amp;mut self) {\n        self.stop();\n\n        // Here I want to iterate the self.running_thread_handles and\n        // make sure they are cleaned up\n    }\n}\n\n// I expect to see a 4 \"Looping\" messages and then a \"Stopping\" message\nfn main() {\n   let mut test = Test::new();\n   test.start();\n   thread::sleep(Duration::from_millis(2000));\n   test.stop();\n}\n</code></pre>\n\n<p>Perhaps there is a better approach altogether but I figure this is probably a good way to understand the lifetime stuff a bit.</p>\n\n<p>I thought that all I need is an <code>Arc</code> so I tried this:</p>\n\n<pre><code>fn start(&amp;mut self) {\n    let stop_bool = Arc::new(&amp;self.should_stop).clone();\n\n    let handle = thread::spawn(move || {\n        loop {\n            println!(\"Looping\");\n            thread::sleep(Duration::from_millis(500));\n\n            if stop_bool.load(Ordering::Relaxed) {\n                println!(\"Stopping\");\n                break;\n            }\n        }\n    });\n\n    self.running_thread_handles.push(handle);\n}\n</code></pre>\n\n<p>That gives me this error:</p>\n\n<blockquote>\n  <p>error: cannot infer an appropriate lifetime for borrow expression due to conflicting requirements</p>\n</blockquote>\n\n<p>I figure the compiler does not understand the lifetime of the threads since all I am doing is storing the handles in a vector so I need to tell it somehow, but how?  </p>\n\n<p>If I declare the struct like this would I be getting nearer to making it work?</p>\n\n<pre><code>struct Test&lt;'a&gt; {\n    should_stop: AtomicBool,\n    running_thread_handles: &amp;'a Vec&lt;JoinHandle&lt;()&gt;&gt;\n}\n</code></pre>\n\n<p>I also have secondary, related, troubles that I cannot for the life of me figure out how to iterate through my vector of handles and call any functions on them in the <code>Drop</code> impl.  I suppose that the solution to that would be related, so I will not ask that.</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 51826, "user_id": 1223693, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/viu9Y.jpg?s=128&g=1", "display_name": "tckmn", "link": "https://stackoverflow.com/users/1223693/tckmn"}, "edited": false, "score": 0, "creation_date": 1448391103, "post_id": 33901423, "comment_id": 55565544, "body": "What does <code>ls -l &#47;usr&#47;local&#47;bin&#47;rustc</code> tell you?"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 51826, "user_id": 1223693, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/viu9Y.jpg?s=128&g=1", "display_name": "tckmn", "link": "https://stackoverflow.com/users/1223693/tckmn"}, "edited": false, "score": 0, "creation_date": 1448391177, "post_id": 33901423, "comment_id": 55565591, "body": "It tells me: ` ls -l /usr/local/bin/rustc      -rwxr-xr-x 1 root root 2889 Nov 24 13:24 /usr/local/bin/rustc`"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 51826, "user_id": 1223693, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/viu9Y.jpg?s=128&g=1", "display_name": "tckmn", "link": "https://stackoverflow.com/users/1223693/tckmn"}, "edited": false, "score": 0, "creation_date": 1448391317, "post_id": 33901423, "comment_id": 55565680, "body": "There is a <code>~&#47;.multirust&#47;toolchains&#47;stable&#47;bin</code> folder in my home directory. Would that be the correct one to use. There is a <code>rustc</code> and a <code>cargo</code> file in there."}, {"owner": {"reputation": 51826, "user_id": 1223693, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/viu9Y.jpg?s=128&g=1", "display_name": "tckmn", "link": "https://stackoverflow.com/users/1223693/tckmn"}, "edited": false, "score": 0, "creation_date": 1448391670, "post_id": 33901423, "comment_id": 55565895, "body": "Re: your first comment, that means that it&#39;s not a symlink. The <code>.multirust</code> directory does sound promising."}], "answers": [{"comments": [{"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1448392550, "post_id": 33901903, "comment_id": 55566412, "body": "Okay interesting. So I am a little confused because I had installed rust using the rustup.sh script initially. Then when I installed multirust, the installer asked me to uninstall the previous version of rust. So I uninstalled the rustup.sh version of rust. But you are saying that multirust does not install the source? So I am just trying to understand where I should be looking or something. Am I missing something?"}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1448392959, "post_id": 33901903, "comment_id": 55566648, "body": "Here is the specific notation from the multirust github site indicating that I need to uninstall any previously installed rust version. &quot;Installation of multirust over an existing installation of Rust or vice versa will cause brokenness. Uninstall the other first. ./install.sh will detect this and error. This should be fixable in the future.&quot; Any clarification would be appreciated. Thanks so much."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1448393137, "post_id": 33901903, "comment_id": 55566751, "body": "@krishnab To my knowledge, none of the official Rust installers (which is what <code>rustup.sh</code> runs) include the Rust source. The issue I linked shows that multirust does not install the Rust source. <a href=\"https://github.com/phildawes/racer\" rel=\"nofollow noreferrer\">The README for Racer says</a> &quot; Fetch the rust sourcecode from git, or download from <a href=\"https://www.rust-lang.org/install.html\" rel=\"nofollow noreferrer\">rust-lang.org/install.html</a> &quot;."}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1448394788, "post_id": 33901903, "comment_id": 55567774, "body": "Okay got you. So I used git to download the rust src and then used that for the environment variable. I will note this on the stackexchange answer. Thanks for your help."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1448395098, "last_edit_date": 1448395098, "creation_date": 1448392281, "answer_id": 33901903, "question_id": 33901423, "link": "https://stackoverflow.com/questions/33901423/where-does-multirust-install-the-rust-language-source-code/33901903#33901903", "title": "Where does `multirust` install the Rust language source code?", "body": "<p>Currently, <a href=\"https://github.com/brson/multirust/issues/77\">multirust doesn't install the source</a>. This is also <a href=\"https://github.com/brson/multirust/issues/114\">mentioned in the context of using racer with multirust</a>.</p>\n\n<p>Instead, follow the <a href=\"https://github.com/phildawes/racer\">instructions in the Racer README</a>:</p>\n\n<blockquote>\n  <p>Fetch the Rust sourcecode from git, or download from <a href=\"https://www.rust-lang.org/install.html\">https://www.rust-lang.org/install.html</a></p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 751, "user_id": 586198, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b426c615ce15990d0daa4a00fa0b8bc3?s=128&d=identicon&r=PG", "display_name": "Yuvaraj Loganathan", "link": "https://stackoverflow.com/users/586198/yuvaraj-loganathan"}, "is_accepted": false, "score": 14, "last_activity_date": 1484424488, "last_edit_date": 1484424488, "creation_date": 1484402446, "answer_id": 41650813, "question_id": 33901423, "link": "https://stackoverflow.com/questions/33901423/where-does-multirust-install-the-rust-language-source-code/41650813#41650813", "title": "Where does `multirust` install the Rust language source code?", "body": "<p>By default, rustup doesn't install the source code for the Rust standard library. But you can execute the following command to install it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ rustup component add rust-src\n</code></pre>\n\n<p>The source is installed in <code>~/.rustup/toolchains/$TOOLCHAIN/lib/rustlib/src/rust/src/</code> (where <code>$TOOLCHAIN</code> is the name of a toolchain you use).</p>\n"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3412, "favorite_count": 0, "accepted_answer_id": 33901903, "answer_count": 2, "score": 9, "last_activity_date": 1484424488, "creation_date": 1448390630, "question_id": 33901423, "link": "https://stackoverflow.com/questions/33901423/where-does-multirust-install-the-rust-language-source-code", "title": "Where does `multirust` install the Rust language source code?", "body": "<p>I installed the <code>multirust</code> version of the Rust programming language. I was trying to configure the <code>racer</code> code completion package to point to the Rust source code through the <code>RUST_SRC_PATH</code>environment variable. However, I can't seem to find the location of the rust source files. When I type <code>which rustc</code> I am pointed to <code>/usr/local/bin</code> probably because there is a symlink to the actual source directory or something. Any info on where the proper directory for the <code>RUST_SRC_PATH</code> variable is for <code>multirust</code>? </p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1448388668, "post_id": 33900553, "comment_id": 55564109, "body": "Do you know the basics of the command line interface and how command shells work? &quot;editor&quot; here is just a placeholder for the actual editor name; the provided command just means that you need to open the file in some editor. Depending on your workflow, it may even be some GUI editor like Sublime Text or Atom."}, {"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1448388993, "post_id": 33900553, "comment_id": 55564287, "body": "I use sublime text 2 on mac, yes i&#39;m learning how command shell works along the way, any suggestions on how i could tackle this ..."}, {"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1448389200, "post_id": 33900553, "comment_id": 55564413, "body": "so i use sublime Cargo.toml ... is this what u meant ?"}, {"owner": {"reputation": 504, "user_id": 2823472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d9dc359b91cb1296da9d8d2df3ee06b?s=128&d=identicon&r=PG&f=1", "display_name": "bstockwell", "link": "https://stackoverflow.com/users/2823472/bstockwell"}, "edited": false, "score": 0, "creation_date": 1448389376, "post_id": 33900553, "comment_id": 55564519, "body": "As Vladimir says above, the command you are having trouble with simply opens the file for editing. You can open this however you want--if you&#39;re using sublime it&#39;s probably best to open the application first, then navigate to the file using the explorer.  You will need to jump back to the command line to compile (with <code>cargo build</code>, or <code>cargo run</code>)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1448389900, "post_id": 33900553, "comment_id": 55564816, "body": "<i>Why</i> did you type <code>editor Cargo.toml</code>? Did you get these instructions from somewhere? Perhaps the original source could be updated to be more clear, so point us to it."}, {"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "edited": false, "score": 0, "creation_date": 1448390343, "post_id": 33900553, "comment_id": 55565087, "body": "Shepmaster <a href=\"http://doc.rust-lang.org/book/hello-cargo.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/hello-cargo.html</a>"}, {"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "edited": false, "score": 0, "creation_date": 1448390391, "post_id": 33900553, "comment_id": 55565112, "body": "well trying to link subl now using terminal, getting this command &quot;ln: /Users/shaq/bin/subl: No such file or directory&quot;"}, {"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "edited": false, "score": 1, "creation_date": 1448392395, "post_id": 33900553, "comment_id": 55566309, "body": "thank you Vladmir, bstockwell, and Shepmaster. I managed to link sublime, learned some command shell, used Cargo as well, it was a nice learning experience, Wanted to learn programming, had C++ in mind, then bumped into Rust, so learning from scratch :)"}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "edited": false, "score": 0, "creation_date": 1448389118, "post_id": 33900607, "comment_id": 55564365, "body": "When I try saving the .rs file on sublime the window does not show the folders on my root directory to save it ? trying to google and figure it out, but no luck"}], "tags": [], "owner": {"reputation": 504, "user_id": 2823472, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d9dc359b91cb1296da9d8d2df3ee06b?s=128&d=identicon&r=PG&f=1", "display_name": "bstockwell", "link": "https://stackoverflow.com/users/2823472/bstockwell"}, "is_accepted": false, "score": 0, "last_activity_date": 1448388179, "last_edit_date": 1448388179, "creation_date": 1448387794, "answer_id": 33900607, "question_id": 33900553, "link": "https://stackoverflow.com/questions/33900553/editor-command-not-found-when-trying-to-edit-cargo-toml/33900607#33900607", "title": "&quot;editor: command not found&quot; when trying to edit Cargo.toml", "body": "<p>This means you don't have the editor program installed on your system. Depending on your environment, you might try installing it or using another text editor (say, vim for unix).</p>\n"}, {"comments": [{"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "edited": false, "score": 0, "creation_date": 1448429956, "post_id": 33906083, "comment_id": 55580679, "body": "thanks iajrz, I&#39;m new to terminal commands, and programming ... finally figured out how its done late last night, will have a lot of questions in the future :) any help is appreciated."}, {"owner": {"reputation": 699, "user_id": 1256121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd9ea8d9c9b6ef91cd7f5bdda5b707b4?s=128&d=identicon&r=PG", "display_name": "iajrz", "link": "https://stackoverflow.com/users/1256121/iajrz"}, "reply_to_user": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "edited": false, "score": 1, "creation_date": 1448458174, "post_id": 33906083, "comment_id": 55596561, "body": "If you found your solution, it&#39;d be nice if you added the answer; if this was the solution, it would be nice if you accepted the answer."}, {"owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "edited": false, "score": 0, "creation_date": 1448554796, "post_id": 33906083, "comment_id": 55645343, "body": "I switched to atom which was linked and run this $atom Cargo.toml"}], "tags": [], "owner": {"reputation": 699, "user_id": 1256121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd9ea8d9c9b6ef91cd7f5bdda5b707b4?s=128&d=identicon&r=PG", "display_name": "iajrz", "link": "https://stackoverflow.com/users/1256121/iajrz"}, "is_accepted": false, "score": 1, "last_activity_date": 1448409022, "creation_date": 1448409022, "answer_id": 33906083, "question_id": 33900553, "link": "https://stackoverflow.com/questions/33900553/editor-command-not-found-when-trying-to-edit-cargo-toml/33906083#33906083", "title": "&quot;editor: command not found&quot; when trying to edit Cargo.toml", "body": "<p>If you literally typed <code>editor Cargo.toml</code>, then you're trying to run a program called <code>editor</code>, with an argument called <code>Cargo.toml</code>. The message you get is the system letting you know that you don't have such a program.</p>\n\n<p>To do what you want to do you can either:</p>\n\n<ul>\n<li><p>Write <code>open -t Cargo.toml</code> in MacOsX, which opens the file with the system's default text editor (TextEdit, or whatever you may have changed it to).</p></li>\n<li><p>Or you can bypass this and open the file directly from your favorite editor's window; the intent here is for you to open and edit the file with any text editor you have installed.</p></li>\n</ul>\n"}], "owner": {"reputation": 1, "user_id": 5600846, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8w60q.jpg?s=128&g=1", "display_name": "Shaq", "link": "https://stackoverflow.com/users/5600846/shaq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 751, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1448409022, "creation_date": 1448387635, "last_edit_date": 1448389741, "question_id": 33900553, "link": "https://stackoverflow.com/questions/33900553/editor-command-not-found-when-trying-to-edit-cargo-toml", "title": "&quot;editor: command not found&quot; when trying to edit Cargo.toml", "body": "<p>I'm learning Rust and can't get the Cargo command working; I'm not sure if it's my mistake or an error. </p>\n\n<p>This is what I typed in the <code>/src</code> directory:</p>\n\n<pre><code>src [path]$ editor Cargo.toml\n</code></pre>\n\n<p>The reply I got was:</p>\n\n<pre><code>-bash: editor: command not found\n</code></pre>\n"}, {"tags": ["url", "download", "io", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1448381352, "post_id": 33897623, "comment_id": 55559407, "body": "Depending on what you want to learn exactly, since Rust features TCP handling, you could actually implement basic file download by yourself I guess... it would be a bit low-level."}], "answers": [{"tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": false, "score": 9, "last_activity_date": 1448379603, "creation_date": 1448379603, "answer_id": 33897844, "question_id": 33897623, "link": "https://stackoverflow.com/questions/33897623/are-there-capabilities-in-the-rust-standard-library-to-download-a-file-from-a-ur/33897844#33897844", "title": "Are there capabilities in the Rust standard library to download a file from a URL", "body": "<p>Rust's standard library has no HTTP functionality. You will have to use a third-party library like <a href=\"https://github.com/carllerche/curl-rust\" rel=\"noreferrer\">curl</a> or <a href=\"https://github.com/hyperium/hyper\" rel=\"noreferrer\">hyper</a> or implement something yourself.</p>\n"}], "owner": {"reputation": 64389, "user_id": 36590, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/790b36a09a4c93e976295cd7c6eb50e8?s=128&d=identicon&r=PG", "display_name": "BuddyJoe", "link": "https://stackoverflow.com/users/36590/buddyjoe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2355, "favorite_count": 0, "answer_count": 1, "score": 9, "last_activity_date": 1531753630, "creation_date": 1448379024, "last_edit_date": 1448381284, "question_id": 33897623, "link": "https://stackoverflow.com/questions/33897623/are-there-capabilities-in-the-rust-standard-library-to-download-a-file-from-a-ur", "title": "Are there capabilities in the Rust standard library to download a file from a URL", "body": "<p>I'm new to Rust.</p>\n\n<p>I have written a few Hello World programs and the program I usually try to write next interacts with the web in some way. I usually try downloading a file. I figured I could learn something about the Rust \"net\" and \"io\" areas. But I have not been able to find an example of how to do this in Rust.</p>\n\n<p>Are there any capabilities in the Standard Library to download a file from a URL?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user35288"}, "is_accepted": false, "score": 0, "last_activity_date": 1448377985, "creation_date": 1448377985, "answer_id": 33897232, "question_id": 33896825, "link": "https://stackoverflow.com/questions/33896825/no-method-entries-mut-when-unarchiving-a-file-with-the-tar-crate/33897232#33897232", "title": "No method &#39;entries_mut&#39; when unarchiving a file with the tar crate?", "body": "<p>Turns out that the published documentation of <code>tar-rs</code> was for a different version than what was on <code>crates.io</code>, so I had to change <code>.entries_mut</code> to <code>.files_mut</code>, and <code>let files =</code> to <code>let mut files =</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1448377996, "creation_date": 1448377996, "answer_id": 33897238, "question_id": 33896825, "link": "https://stackoverflow.com/questions/33896825/no-method-entries-mut-when-unarchiving-a-file-with-the-tar-crate/33897238#33897238", "title": "No method &#39;entries_mut&#39; when unarchiving a file with the tar crate?", "body": "<p>Oh man, this is tricky. The published documentation and the code <em>do not match</em>. In tar version 0.3.2, the method is called <code>files_mut</code>:</p>\n\n<pre><code>extern crate flate2; // version 0.2.11\nextern crate tar;    // version 0.3\n\nuse std::fs::File;\nuse flate2::read::GzDecoder;\nuse tar::Archive;\n\nfn main() {\n    let file = File::open(\"/path/to/tarball.tar.gz\").unwrap();\n    let decompressed = GzDecoder::new(file).unwrap();\n    let mut unarchived = Archive::new(decompressed);\n    let _files_iter = unarchived.files_mut();\n}\n</code></pre>\n\n<p><a href=\"https://github.com/alexcrichton/tar-rs/commit/3237ef18d43493347255817c6e7c7b4556183df3\" rel=\"nofollow\">This commit</a> changed the API.</p>\n\n<p>This is a subtle but prevalent problem with self-hosted Rust documentation at the moment (my own crates have the same issue). We build the documentation on every push to the <em>master</em> branch, but people use <em>stable releases</em>. Sometimes these go out of sync.</p>\n\n<p>The best thing you can do is to run <code>cargo doc</code> or <code>cargo doc --open</code> on your <em>local</em> project. This will build a set of documentation for the crates and versions you are using.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user35288"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1448378444, "creation_date": 1448376886, "last_edit_date": 1448378444, "question_id": 33896825, "link": "https://stackoverflow.com/questions/33896825/no-method-entries-mut-when-unarchiving-a-file-with-the-tar-crate", "title": "No method &#39;entries_mut&#39; when unarchiving a file with the tar crate?", "body": "<p>I am trying to use the <a href=\"https://github.com/alexcrichton/flate2-rs\" rel=\"nofollow\">flate2</a> and <a href=\"https://github.com/alexcrichton/tar-rs\" rel=\"nofollow\">tar</a> crates to iterate over the entries of a <code>.tar.gz</code> file, but am getting type errors, and I'm not sure why.</p>\n\n<p>Here is my code (and yes, I know I shouldn't use <code>.unwrap()</code> everywhere, this is just POC code):</p>\n\n<pre><code>extern crate flate2; // version 0.2.11\nextern crate tar;    // version 0.3\n\nuse std::io::Read;\nuse std::fs::File;\nuse flate2::read::GzDecoder;\nuse tar::Archive;\n\nfn main() {\n    let file = File::open(\"/path/to/tarball.tar.gz\").unwrap();\n    let mut decompressed = GzDecoder::new(file).unwrap();\n    let unarchived = Archive::new(decompressed);\n    let entries_iter = unarchived.entries_mut();\n}\n</code></pre>\n\n<p>This gives me the error <code>error: no method named 'entries_mut' found for type 'tar::Archive&lt;flate2::gz::DecoderReader&lt;std::fs::File&gt;&gt;' in the current scope</code>.</p>\n\n<p><code>GzDecoder::new</code> is returning a <code>DecoderReader&lt;R&gt;</code>, which implements <code>Read</code> as long as <code>R</code> implements <code>Read</code>, which <code>File</code> does, so that should be fine. <code>Archive&lt;O&gt;</code> has different methods depending on what kind of traits <code>O</code> implements, but in this case I am trying to use <code>.entries_mut()</code>, which only requires <code>O</code> to implement <code>Read</code>.</p>\n\n<p>Obviously I am missing something here, could someone help shed some light on this?</p>\n"}, {"tags": ["json", "recursion", "struct", "hashmap", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448372709, "post_id": 33895090, "comment_id": 55553211, "body": "Welcome to Stack Overflow! When asking a question, it&#39;s expected that you show us <a href=\"http://stackoverflow.com/help/how-to-ask\">the research you have done</a>. This helps understand what you are missing and provide answers. It also helps weed out people who want to use SO as a code-writing service (which it is not). You should <a href=\"https://stackoverflow.com/posts/33895090/edit\">edit</a> your question to include what you have attempted, why that doesn&#39;t work, and then we can go from there."}, {"owner": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 0, "creation_date": 1448396121, "post_id": 33895090, "comment_id": 55568560, "body": "Your struct corresponds to a single-linked list, wheras your json object seems to be a tree, so something is wrong. My best advice is that you start out creating the correct data structure before you start worrrying about json. Furthermore try to export to json before you import. Hereis the manual page for exporting to <a href=\"https://doc.rust-lang.org/num/rustc_serialize/json/index.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/num/rustc_serialize/json/index.html</a> You should probably read up om enums to be able to represent StringOrArgument <a href=\"https://doc.rust-lang.org/book/enums.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/enums.html</a>"}, {"owner": {"reputation": 41, "user_id": 5520874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f5a04de3a1c1e0409a06a340c04b362?s=128&d=identicon&r=PG&f=1", "display_name": "qio", "link": "https://stackoverflow.com/users/5520874/qio"}, "edited": false, "score": 1, "creation_date": 1448649580, "post_id": 33895090, "comment_id": 55683697, "body": "Thanks Shepmaster, Niesle for the comments. Niesle, i researched about the trees representation in here : <a href=\"http://stackoverflow.com/questions/21791786/rudimentary-tree-and-pointers-in-rust\" title=\"rudimentary tree and pointers in rust\">stackoverflow.com/questions/21791786/&hellip;</a>, thanks for this orientation, now i can redo some coding to see the exported json as you recommended. The representation in json is important because this is for a REST API and i need this exact representation."}], "answers": [{"tags": [], "owner": {"reputation": 796, "user_id": 959847, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/40d3fdc131dbfeae3a893a354bcbcf67?s=128&d=identicon&r=PG", "display_name": "euclio", "link": "https://stackoverflow.com/users/959847/euclio"}, "is_accepted": false, "score": 4, "last_activity_date": 1537998688, "creation_date": 1537998688, "answer_id": 52526482, "question_id": 33895090, "link": "https://stackoverflow.com/questions/33895090/serialize-json-in-a-recursive-struct/52526482#52526482", "title": "Serialize JSON in a recursive struct", "body": "<p>You have a few distinct problems here.</p>\n\n<p>First, you want to be able to define a data type that can be either one type or another type, but not both. This is what Rust's <a href=\"https://doc.rust-lang.org/book/second-edition/ch06-01-defining-an-enum.html\" rel=\"nofollow noreferrer\"><code>enum</code> data type</a> is intended for.</p>\n\n<pre><code>enum Value {\n    String(String),\n    Argument(Argument),\n}\n</code></pre>\n\n<p>This <code>Value</code> type can contain either a <code>String</code> or an <code>Argument</code>, but not both.</p>\n\n<p>Now, we need to define the <code>Argument</code> type. In your example, an argument can contain arbitrary field names, so we can't just define a <code>struct</code>. Instead, we can use a map collection from the standard library to map <code>String</code>s to <code>Value</code>s, such as <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html\" rel=\"nofollow noreferrer\"><code>BTreeMap</code></a>. We'll also define a <a href=\"https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#creating-type-synonyms-with-type-aliases\" rel=\"nofollow noreferrer\">type alias</a> so that we can use the name <code>Argument</code> instead of <code>BTreeMap&lt;String, Argument&gt;</code> elsewhere in the program.</p>\n\n<pre><code>use std::collections::BTreeMap;\n\ntype Argument = BTreeMap&lt;String, Argument&gt;;\n</code></pre>\n\n<p>Now that we've successfully defined the type, let's define its serialization behavior using the <a href=\"https://serde.rs/\" rel=\"nofollow noreferrer\">serde</a> library. Serde can automatically serialize types from the Rust standard library, and user structs can implement or derive the <code>Serialize</code> and <code>Deserialize</code> traits to add the functionality to their own types.</p>\n\n<p>For most structs, we can just add a <code>#[derive(Serialize)]</code> and/or <code>#[derive(Deserialize)]</code> to implement the necessary traits for serialization. In this case, we want to customize the deserialization of our <code>enum</code> to be <a href=\"https://serde.rs/enum-representations.html#untagged\" rel=\"nofollow noreferrer\">untagged</a>, so it just emits the value of the enum, not an object with \"String\" or \"Argument\" as the key. Instead, we just want the JSON to contain the value. We do this by adding a special attribute to the struct, <code>#[serde(untagged)]</code>.</p>\n\n<p>Here's a short Rust program that demonstrates the above concepts. This program will read your JSON example, and print the <a href=\"https://doc.rust-lang.org/rust-by-example/hello/print/print_debug.html\" rel=\"nofollow noreferrer\"><code>Debug</code></a> representation of a Rust type  that represents the data.</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive; // 1.0.78\nextern crate serde; // 1.0.78\nextern crate serde_json; // 1.0.27\n\nuse std::collections::BTreeMap;\n\n\n#[derive(Debug, Serialize, Deserialize)]\n#[serde(untagged)]\nenum Value {\n    String(String),\n    Argument(Argument),\n}\n\ntype Argument = BTreeMap&lt;String, Value&gt;;\n\nfn main() {\n    let argument: Argument = serde_json::from_str(\n        r#\"{\n            \"argument0\": {\n                \"argument1\": \"test\",\n                \"argument2\": {\n                    \"argument3\": \"test3\"\n                }          \n            }\n        }\"#,\n    ).unwrap();\n\n    println!(\"{:?}\", argument);\n}\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 5520874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f5a04de3a1c1e0409a06a340c04b362?s=128&d=identicon&r=PG&f=1", "display_name": "qio", "link": "https://stackoverflow.com/users/5520874/qio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 667, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1537998688, "creation_date": 1448372030, "last_edit_date": 1448372501, "question_id": 33895090, "link": "https://stackoverflow.com/questions/33895090/serialize-json-in-a-recursive-struct", "title": "Serialize JSON in a recursive struct", "body": "<p>I have this JSON:</p>\n\n<pre><code>{\n  \"argument0\": {\n    \"argument1\": \"test\",\n    \"argument2\": {\n       \"argument3\": \"test3\"\n    }          \n  }\n}\n</code></pre>\n\n<p>I need to use some kind of recursive struct with methods like the <code>HashMap&lt;String, _&gt;</code> in Rust. The key should always be a <code>String</code> but the value can be a <code>String</code> or the same <code>Argument</code> struct.</p>\n\n<pre><code>#[derive(Clone, RustcDecodable, RustcEncodable)]\nstruct Argument {\n    key: String\n    value: String Or Argument\n}\n</code></pre>\n\n<p>How can I achieve this?</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1448420222, "creation_date": 1448420222, "answer_id": 33907758, "question_id": 33884184, "link": "https://stackoverflow.com/questions/33884184/why-is-a-immutable-pointer-to-a-static-immutable-variable-not-sync/33907758#33907758", "title": "Why is a immutable pointer to a static immutable variable not Sync?", "body": "<p>The chapter <a href=\"https://doc.rust-lang.org/nightly/nomicon/send-and-sync.html\" rel=\"nofollow\"><em>Send and Sync</em></a> in <a href=\"https://doc.rust-lang.org/nightly/nomicon/\" rel=\"nofollow\"><em>The Rustonomicon</em></a> describes what it means for a type to be <code>Send</code> or <code>Sync</code>. It mentions that:</p>\n\n<blockquote>\n  <ul>\n  <li>raw pointers are neither Send nor Sync (because they have no safety guards).</li>\n  </ul>\n</blockquote>\n\n<p>But that just begs the question; why doesn't <code>*const T</code> implement <code>Sync</code>? Why do the safety guards matter?</p>\n\n<p>Just before that, it says:</p>\n\n<blockquote>\n  <p>Send and Sync are also automatically derived traits. This means that, unlike every other trait, if a type is composed entirely of Send or Sync types, then it is Send or Sync. Almost all primitives are Send and Sync, and as a consequence pretty much all types you'll ever interact with are Send and Sync.</p>\n</blockquote>\n\n<p>This is the key reason why raw pointers are neither <code>Send</code> nor <code>Sync</code>. If you defined a struct that encapsulates a raw pointer, but only expose it as a <code>&amp;T</code> or <code>&amp;mut T</code> in the struct's API, did you really make sure that your struct respects the contracts of <code>Send</code> and <code>Sync</code>? If raw pointers were <code>Send</code>, then <code>Rc&lt;T&gt;</code> would also be <code>Send</code> by default, so it would have to explicitly opt-out. (In the source, there is in fact an explicit opt-out for <code>Rc&lt;T&gt;</code>, but it's only for documentation purposes, because it's actually redundant.)</p>\n\n<blockquote>\n  <p>[...] they're <a href=\"https://doc.rust-lang.org/nightly/nomicon/safe-unsafe-meaning.html\" rel=\"nofollow\">unsafe traits</a>. This means that they are unsafe to implement, and other unsafe code can assume that they are correctly implemented.</p>\n</blockquote>\n\n<p>OK, let's recap: they're unsafe to implement, but they're automatically derived. Isn't that a weird combination? Actually, it's not as bad as it sounds. Most primitive types, like <code>u32</code>, are <code>Send</code> and <code>Sync</code>. Simply compounding primitive values into a struct or enum is not enough to disqualify the type for <code>Send</code> or <code>Sync</code>. Therefore, you need a struct or enum with non-<code>Send</code> or non-<code>Sync</code> before you need to write an <code>unsafe impl</code>.</p>\n\n<p><code>Send</code> and <code>Sync</code> are marker traits, which means they have no methods. Therefore, when a function or type puts a <code>Send</code> or <code>Sync</code> bound on a type parameter, it's relying on the type to respect a particular contract <em>across all of its API</em>. Because of this:</p>\n\n<blockquote>\n  <p>Incorrectly implementing Send or Sync can cause Undefined Behavior.</p>\n</blockquote>\n"}], "owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "accepted_answer_id": 33907758, "answer_count": 1, "score": 2, "last_activity_date": 1448420222, "creation_date": 1448330538, "last_edit_date": 1495541289, "question_id": 33884184, "link": "https://stackoverflow.com/questions/33884184/why-is-a-immutable-pointer-to-a-static-immutable-variable-not-sync", "title": "Why is a immutable pointer to a static immutable variable not Sync?", "body": "<p>A static global C string (as in <a href=\"https://stackoverflow.com/a/33883281/243712\">this answer</a>) doesn't have the <a href=\"https://doc.rust-lang.org/std/marker/trait.Sync.html\" rel=\"nofollow noreferrer\"><code>Sync</code> trait</a>.</p>\n\n<pre><code>pub static MY_STRING: &amp;'static *const u8\n  = \"hello\" as const *u8;\n\n// TODO: Simple assertion showing it's not Sync ;)\n</code></pre>\n\n<p><code>Sync</code> is described as </p>\n\n<blockquote>\n  <p>The precise definition is: a type <code>T</code> is <code>Sync</code> if <code>&amp;T</code> is thread-safe. In other words, there is no possibility of data races when passing <code>&amp;T</code> references between threads.</p>\n</blockquote>\n\n<p>It seems like this is entirely readonly and has static lifetime, so why isn't it safe to pass a reference?</p>\n"}, {"tags": ["casting", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1448331827, "post_id": 33884114, "comment_id": 55532927, "body": "FWIW, the Rust docs are pretty responsive to issues suggesting enhancements. Or even better, take the answer(s) here and submit a PR to the docs for everyone to benefit!"}, {"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1448332516, "post_id": 33884114, "comment_id": 55533109, "body": "Yep, I was going to do just that."}, {"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448673522, "post_id": 33884114, "comment_id": 55690931, "body": "Started in <a href=\"https://github.com/rust-lang/rust/pull/30088\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/30088</a>"}], "answers": [{"comments": [{"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 0, "creation_date": 1448380606, "post_id": 33884290, "comment_id": 55558875, "body": "Casting an integer to a pointer seems unsafe. Maybe this list is out of date since the doc says <code>as</code> only does safe casts (now?)"}, {"owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "reply_to_user": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 1, "creation_date": 1448384197, "post_id": 33884290, "comment_id": 55561443, "body": "@poolie: it still works <a href=\"http://is.gd/7sLMbt\" rel=\"nofollow noreferrer\">[playpen link</a>]. casting an integer into a pointer isn&#39;t unsafe but dereferencing a pointer is."}], "tags": [], "owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "is_accepted": true, "score": 7, "last_activity_date": 1448331406, "creation_date": 1448331406, "answer_id": 33884290, "question_id": 33884114, "link": "https://stackoverflow.com/questions/33884114/what-casts-are-allowed-with-as/33884290#33884290", "title": "What casts are allowed with `as`?", "body": "<p>I don't think that this is documented very well, but <a href=\"https://github.com/rust-lang/rust/blob/219eca11b044de3644b3e9101124513c1a842b09/src/librustc_typeck/check/cast.rs#L11\">here</a> is some information you might find useful:</p>\n\n<blockquote>\n  <p>A cast <code>e as U</code> is valid if one of the following holds:</p>\n  \n  <ul>\n  <li><code>e</code> has type <code>T</code> and <code>T</code> coerces to <code>U</code>; <em>coercion-cast</em></li>\n  <li><code>e</code> has type <code>*T</code>, <code>U</code> is <code>*U_0</code>, and either <code>U_0: Sized</code> or\n  unsize_kind(<code>T</code>) = unsize_kind(<code>U_0</code>); <em>ptr-ptr-cast</em></li>\n  <li><code>e</code> has type <code>*T</code> and <code>U</code> is a numeric type, while <code>T: Sized</code>; <em>ptr-addr-cast</em></li>\n  <li><code>e</code> is an integer and <code>U</code> is <code>*U_0</code>, while <code>U_0: Sized</code>; <em>addr-ptr-cast</em></li>\n  <li><code>e</code> has type <code>T</code> and <code>T</code> and <code>U</code> are any numeric types; <em>numeric-cast</em></li>\n  <li><code>e</code> is a C-like enum and <code>U</code> is an integer type; <em>enum-cast</em></li>\n  <li><code>e</code> has type <code>bool</code> or <code>char</code> and <code>U</code> is an integer; <em>prim-int-cast</em></li>\n  <li><code>e</code> has type <code>u8</code> and <code>U</code> is <code>char</code>; <em>u8-char-cast</em></li>\n  <li><code>e</code> has type <code>&amp;[T; n]</code> and <code>U</code> is <code>*const T</code>; <em>array-ptr-cast</em></li>\n  <li><code>e</code> is a function pointer type and <code>U</code> has type <code>*T</code>,\n  while <code>T: Sized</code>; <em>fptr-ptr-cast</em></li>\n  <li><code>e</code> is a function pointer type and <code>U</code> is an integer; <em>fptr-addr-cast</em></li>\n  </ul>\n  \n  <p>where <code>&amp;.T</code> and <code>*T</code> are references of either mutability,\n  and where unsize_kind(<code>T</code>) is the kind of the unsize info\n  in <code>T</code> - the vtable for a trait definition (e.g. <code>fmt::Display</code> or\n  <code>Iterator</code>, not <code>Iterator&lt;Item=u8&gt;</code>) or a length (or <code>()</code> if <code>T: Sized</code>).</p>\n  \n  <p>Note that lengths are not adjusted when casting raw slices -\n  <code>T: *const [u16] as *const [u8]</code> creates a slice that only includes\n  half of the original memory.</p>\n  \n  <p>Casting is not transitive, that is, even if <code>e as U1 as U2</code> is a valid\n  expression, <code>e as U2</code> is not necessarily so (in fact it will only be valid if\n  <code>U1</code> coerces to <code>U2</code>).</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "is_accepted": false, "score": 2, "last_activity_date": 1448422166, "creation_date": 1448422166, "answer_id": 33908017, "question_id": 33884114, "link": "https://stackoverflow.com/questions/33884114/what-casts-are-allowed-with-as/33908017#33908017", "title": "What casts are allowed with `as`?", "body": "<p>Quoted from <a href=\"https://doc.rust-lang.org/nightly/nomicon/casts.html\" rel=\"nofollow\" title=\"The Rustonomicon: Casts\">The Rustonomicon: Casts</a></p>\n\n<blockquote>\n  <p>Here's an exhaustive list of all the true casts. For brevity, we will use * to denote either a *const or *mut, and integer to denote any integral primitive:</p>\n  \n  <ul>\n  <li>*T as *U where T, U: Sized</li>\n  <li>*T as *U TODO: explain unsized situation</li>\n  <li>*T as integer</li>\n  <li>integer as *T</li>\n  <li>number as number</li>\n  <li>C-like-enum as integer</li>\n  <li>bool as integer</li>\n  <li>char as integer</li>\n  <li>u8 as char</li>\n  <li>&amp;[T; n] as *const T</li>\n  <li>fn as *T where T: Sized</li>\n  <li>fn as integer</li>\n  </ul>\n</blockquote>\n"}], "owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 0, "accepted_answer_id": 33884290, "answer_count": 2, "score": 12, "last_activity_date": 1448422166, "creation_date": 1448330080, "last_edit_date": 1448331734, "question_id": 33884114, "link": "https://stackoverflow.com/questions/33884114/what-casts-are-allowed-with-as", "title": "What casts are allowed with `as`?", "body": "<p><a href=\"https://doc.rust-lang.org/book/casting-between-types.html\">The Rust Book section on the <code>as</code> operator</a> currently says</p>\n\n<blockquote>\n  <p>The as keyword does basic casting:</p>\n</blockquote>\n\n<pre><code>let x: i32 = 5;\n\nlet y = x as i64;\n</code></pre>\n\n<blockquote>\n  <p>It only allows certain kinds of casting, however.</p>\n</blockquote>\n\n<p>What are those <em>certain kinds</em> of allowed casting?</p>\n\n<p>A since-deleted answer here explained that sometimes you need to chain multiple <code>as</code>-casts to accomplish a safe result, that can't be done in a single step. When is that necessary?</p>\n"}, {"tags": ["format", "rust"], "answers": [{"comments": [{"owner": {"reputation": 769, "user_id": 5433623, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-0jplvxnVu04/AAAAAAAAAAI/AAAAAAAAGvQ/VLbN9V7SMJ8/photo.jpg?sz=128", "display_name": "Matt Brubeck", "link": "https://stackoverflow.com/users/5433623/matt-brubeck"}, "edited": false, "score": 0, "creation_date": 1610297910, "post_id": 33867420, "comment_id": 116082585, "body": "As a follow-up, Notepad gained the ability to handle <code>\\n</code> line endings in 2018."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 10, "last_activity_date": 1448270564, "creation_date": 1448270564, "answer_id": 33867420, "question_id": 33867076, "link": "https://stackoverflow.com/questions/33867076/is-there-a-format-spec-that-will-output-a-os-specific-newline/33867420#33867420", "title": "Is there a format spec that will output a OS-specific newline?", "body": "<p>I don't believe so.</p>\n\n<p>That said, with the exception of Notepad, just about everything on Windows has long since learned that <code>\\n</code> is as much a newline as <code>\\r\\n</code>.  In fact, the only other time I have line ending issues is badly ported UNIX software that refuses to believe in the existence of <code>\\r\\n</code> newlines.</p>\n\n<p>In other words, unless you have a specific reason for doing so, just stick to <code>\\n</code>.</p>\n\n<p>If you <em>do</em> have a specific reason, it's probably simplest to define a <code>NL</code> constant somewhere (I couldn't find one in the stdlib):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(windows)] pub const NL: &amp;'static str = \"\\r\\n\";\n#[cfg(not(windows))] pub const NL: &amp;'static str = \"\\n\";\n</code></pre>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 333, "favorite_count": 0, "accepted_answer_id": 33867420, "answer_count": 1, "score": 6, "last_activity_date": 1448270564, "creation_date": 1448269412, "question_id": 33867076, "link": "https://stackoverflow.com/questions/33867076/is-there-a-format-spec-that-will-output-a-os-specific-newline", "title": "Is there a format spec that will output a OS-specific newline?", "body": "<p>In <code>format!(..)</code>, <code>print!(..)</code>, <code>println!(..)</code> etc. it's easy enough to insert values in various formats, however the docs show no way of adding an OS specific newline (e.g. <code>'\\n'</code> in unices/MacOS X, <code>\"\\r\\n\"</code> on Windows). Is there such a format specifier? If not, how should one put newlines in their formatted strings/outputs?</p>\n"}, {"tags": ["generics", "syntax", "rust", "traits"], "comments": [{"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448253290, "post_id": 33863567, "comment_id": 55491717, "body": "@Shepmaster Edited question, but maybe I&#39;m missing something? Using it like you have in your example is the second option I tried and is in my question. Not sure where I&#39;m going wrong...?"}, {"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1448255243, "post_id": 33863567, "comment_id": 55492177, "body": "@Shepmaster Turns out, <code>Read, White</code>, etc... is needed for the question because it has to do with how aliases were made"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448287740, "post_id": 33863567, "comment_id": 55509549, "body": "Good to know, you may want to <a href=\"https://stackoverflow.com/posts/33863567/edit\">edit</a> your question to include that those specific traits are required and no other traits cause the same problem (and show what else you tried that doesn&#39;t work). And to clarify, my example was to show a smaller reproduction <i>of the same problem</i>, not trying to show how to fix it :-)"}], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1448261830, "post_id": 33864032, "comment_id": 55494451, "body": "Note that this is <i>entirely</i> different from <code>LinkedList&lt;T&gt; where T: Stream&lt;U&gt;, U: Read + Write + AsRawFd</code>. In your example both <code>Stream</code> and <code>StreamIo</code> are used as trait objects. It is highly unlikely that you&#39;ll be able to construct a value of such type. For example, you won&#39;t be able to pass <code>LinkedList&lt;SomeStream&gt;</code> where <code>SomeStream: Stream&lt;Something&gt;</code> and <code>Something: Read + Write + AsRawFd</code> to where your <code>StreamList</code> is expected."}, {"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1448287608, "post_id": 33864032, "comment_id": 55509464, "body": "@VladimirMatveev And, I found this out now that I&#39;m trying to use it. Thanks for taking the time to comment on this :)"}], "tags": [], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "is_accepted": false, "score": 0, "last_activity_date": 1448255094, "last_edit_date": 1495540313, "creation_date": 1448255094, "answer_id": 33864032, "question_id": 33863567, "link": "https://stackoverflow.com/questions/33863567/syntax-for-using-traits-as-type-parameters-in-aliases/33864032#33864032", "title": "Syntax for using traits as type parameters in aliases", "body": "<p>Answer was found <a href=\"https://stackoverflow.com/questions/26070559/alias-on-compound-type-in-rust\">from this question</a>. </p>\n\n<pre><code>pub trait StreamIo: Read + Write + AsRawFd {}\npub type StreamList = LinkedList&lt;Stream&lt;StreamIo&gt;&gt;;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "edited": false, "score": 0, "creation_date": 1448339573, "post_id": 33873338, "comment_id": 55535111, "body": "I think I may be reaching for something that isn&#39;t available yet with trait objects. Thanks for the in-depth explanation :)"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1448289040, "last_edit_date": 1448289040, "creation_date": 1448288623, "answer_id": 33873338, "question_id": 33863567, "link": "https://stackoverflow.com/questions/33863567/syntax-for-using-traits-as-type-parameters-in-aliases/33873338#33873338", "title": "Syntax for using traits as type parameters in aliases", "body": "<p>Syntactically, I think this is what you want:</p>\n\n<pre><code>trait OuterTrait&lt;T&gt; {\n    fn use_type_parameter(t: T);\n}\n\ntrait InnerTrait {}\n\ntype CombinedTypeOne&lt;T: InnerTrait&gt; = Option&lt;OuterTrait&lt;T&gt;&gt;;\ntype CombinedTypeTwo&lt;T&gt; where T: InnerTrait = Option&lt;OuterTrait&lt;T&gt;&gt;;\n\nfn main() {}\n</code></pre>\n\n<p>In a larger sense, this makes sense. When you define a type, it has to either completely know what type it is, or have type parameters and be fully specified at the use site. In your example, the type <code>StreamList</code> acts like it is completely specified. However, the right-hand side says \"put in any concrete type\", so you'd need to rectify the two.</p>\n\n<p>Beyond that, the trait constraint goes on the \"declaration\" part of the alias, not the \"definition\" part. This mirrors how trait and function definitions work.</p>\n\n<p><strong>However</strong>, the first example has this warning:</p>\n\n<pre><code>warning: trait bounds are not (yet) enforced in type definitions [E0122]\n    type CombinedTypeOne&lt;T: InnerTrait&gt; = Option&lt;OuterTrait&lt;T&gt;&gt;;\n    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/error-index.html#E0122\" rel=\"nofollow\">The detailed explanation for E0122</a>.</p>\n\n<p>I believe that the second example has the same underlying problem, but the warning is missing \u2014 I'd guess this is a bug that should be reported. I think that overall, this means you cannot do what you want yet.</p>\n\n<hr>\n\n<p>Additionally, you are trying to use a trait as a type (represented above as <code>Option&lt;OuterTrait&gt;</code>. Although conceptually possible, I don't know how to actually construct an object that looks like that. It's more likely you want something like</p>\n\n<pre><code>type CombinedTypeOne&lt;T, U: OuterTrait&lt;T&gt;&gt; = Option&lt;U&gt;;\ntype CombinedTypeTwo&lt;T, U&gt; where U: OuterTrait&lt;T&gt; = Option&lt;U&gt;;\n</code></pre>\n\n<p>but that complains about unused type parameters. I can't reason through if the error makes sense or is a side-effect of the fact that this feature isn't enforced yet:</p>\n\n<pre><code>error: type parameter `T` is unused [E0091]\n    type CombinedTypeOne&lt;T, U: OuterTrait&lt;T&gt;&gt; = Option&lt;U&gt;;\n                                                ^~~~~~~~~\n</code></pre>\n"}], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "accepted_answer_id": 33873338, "answer_count": 2, "score": 0, "last_activity_date": 1448289040, "creation_date": 1448251599, "last_edit_date": 1448255132, "question_id": 33863567, "link": "https://stackoverflow.com/questions/33863567/syntax-for-using-traits-as-type-parameters-in-aliases", "title": "Syntax for using traits as type parameters in aliases", "body": "<p>I've got the following trait:</p>\n\n<pre><code>pub trait EventHandler&lt;T: Stream&lt;U&gt;, U: Read + Write + AsRawFd&gt; {\n    fn on_data_received(&amp;mut self, stream: T, buffer: Vec&lt;u8&gt;);\n    fn on_stream_closed(&amp;mut self, id: u32);\n}\n</code></pre>\n\n<p>I've tried the following:</p>\n\n<p><code>pub type StreamList = LinkedList&lt;Stream&gt;</code> produces:</p>\n\n<pre><code>error: wrong number of type arguments: expected 1, found 0\n</code></pre>\n\n<p>and <code>pub type StreamList = LinkedList&lt;Stream&lt;T: Read + Write + AsRawFd&gt;&gt;</code> produces:</p>\n\n<pre><code>error: expected one of '!', '(', '+', ',', '::', '&lt;', or '&gt;', found ':'\n</code></pre>\n\n<p>What is the proper syntax for using <code>Stream</code> as a type parameter?</p>\n"}, {"tags": ["generics", "syntax", "rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1448249634, "creation_date": 1448249634, "answer_id": 33863349, "question_id": 33863307, "link": "https://stackoverflow.com/questions/33863307/syntax-for-traits-with-generics/33863349#33863349", "title": "Syntax for traits with generics", "body": "<p>You need to specify a type parameter on the <code>&lt;T: Stream&gt;</code> bound, like this:</p>\n\n<pre><code>pub trait EventHandler&lt;T: Stream&lt;U&gt;, U: Read + Write + AsRawFd&gt; {\n    fn on_data_received(&amp;mut self, stream: T, buffer: Vec&lt;u8&gt;);\n    fn on_stream_closed(&amp;mut self, id: u32);\n}\n</code></pre>\n\n<p>You can also write bounds using <code>where</code> clauses:</p>\n\n<pre><code>pub trait EventHandler&lt;T, U&gt; where\n    T: Stream&lt;U&gt;,\n    U: Read + Write + AsRawFd\n{\n    fn on_data_received(&amp;mut self, stream: T, buffer: Vec&lt;u8&gt;);\n    fn on_stream_closed(&amp;mut self, id: u32);\n}\n</code></pre>\n\n<p>Another option is to use associated types. Define <code>Stream</code> like this:</p>\n\n<pre><code>pub trait Stream: Sized {\n    type T: Read + Write + AsRawFd;\n\n    fn new(stream: Self::T) -&gt; Result&lt;Self, Error&gt;;\n    fn recv(&amp;mut self) -&gt; Result&lt;Vec&lt;u8&gt;, Error&gt;;\n    fn send(&amp;mut self, buf: &amp;[u8]) -&gt; Result&lt;usize, Error&gt;;\n}\n</code></pre>\n\n<p>Then your original definition of <code>EventHandler</code> will work.</p>\n"}], "owner": {"reputation": 2628, "user_id": 1366913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bcd760432e7ba71d5f0c71350886456f?s=128&d=identicon&r=PG", "display_name": "nathansizemore", "link": "https://stackoverflow.com/users/1366913/nathansizemore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 33863349, "answer_count": 1, "score": 1, "last_activity_date": 1448252085, "creation_date": 1448249226, "question_id": 33863307, "link": "https://stackoverflow.com/questions/33863307/syntax-for-traits-with-generics", "title": "Syntax for traits with generics", "body": "<p>I've got the following trait:</p>\n\n<pre><code>pub trait Stream&lt;T: Read + Write + AsRawFd&gt;: Sized {\n    fn new(stream: T) -&gt; Result&lt;Self, Error&gt;;\n    fn recv(&amp;mut self) -&gt; Result&lt;Vec&lt;u8&gt;, Error&gt;;\n    fn send(&amp;mut self, buf: &amp;[u8]) -&gt; Result&lt;usize, Error&gt;;\n}\n</code></pre>\n\n<p>I'd like to create another trait that takes a type that implements <code>Stream</code> as parameter in one of the functions, like so:</p>\n\n<pre><code>pub trait EventHandler&lt;T: Stream&gt; {\n    fn on_data_received(&amp;mut self, stream: T, buffer: Vec&lt;u8&gt;);\n    fn on_stream_closed(&amp;mut self, id: u32);\n}\n</code></pre>\n\n<p>I've tried several variations on where to put the trait definitions, but I always seem to get the error: </p>\n\n<pre><code>error: wrong number of type arguments: expected 1, found 0\n</code></pre>\n\n<p>What is the proper syntax for this?</p>\n"}, {"tags": ["memory", "type-conversion", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1448230311, "post_id": 33860750, "comment_id": 55486187, "body": "If appropriate for the answer, I&#39;d also like to extend the question to <code>Vec&lt;T&gt;</code> and <code>&amp;[T]</code>."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 6, "last_activity_date": 1448232257, "last_edit_date": 1448232257, "creation_date": 1448231159, "answer_id": 33860992, "question_id": 33860750, "link": "https://stackoverflow.com/questions/33860750/is-there-a-difference-between-slicing-and-an-explicit-reborrow-when-converting-s/33860992#33860992", "title": "Is there a difference between slicing and an explicit reborrow when converting Strings to &amp;strs?", "body": "<p>They are completely the same for <code>String</code> and <code>Vec</code>. </p>\n\n<p>The <code>[..]</code> syntax results in a call to <code>Index&lt;RangeFull&gt;::index()</code> and it's not just sugar for <code>[0..collection.len()]</code>. The latter would introduce the cost of bound checking. Gladly this is not the case in Rust so they both are equally fast.</p>\n\n<hr>\n\n<p>Relevant code:</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/libcollections/string.rs#L972-L980\"><code>index</code> of <code>String</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/libcollections/string.rs#L1011-L1019\"><code>deref</code> of <code>String</code></a></li>\n<li><a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/libcollections/vec.rs#L1082-L1090\"><code>index</code> of <code>Vec</code></a> (just returns <code>self</code> which triggers the deref coercion thus executes exactly the same code as just <code>deref</code>)</li>\n<li><a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/libcollections/vec.rs#L1125-L1136\"><code>deref</code> of <code>Vec</code></a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 10, "last_activity_date": 1448251251, "creation_date": 1448251251, "answer_id": 33863530, "question_id": 33860750, "link": "https://stackoverflow.com/questions/33860750/is-there-a-difference-between-slicing-and-an-explicit-reborrow-when-converting-s/33863530#33863530", "title": "Is there a difference between slicing and an explicit reborrow when converting Strings to &amp;strs?", "body": "<p>In the case of <a href=\"http://doc.rust-lang.org/std/string/struct.String.html\"><code>String</code></a> and <a href=\"http://doc.rust-lang.org/std/vec/struct.Vec.html\"><code>Vec</code></a>, they do the same thing.  In <em>general</em>, however, they aren't quite equivalent.</p>\n\n<p>First, you have to understand <a href=\"http://doc.rust-lang.org/std/ops/trait.Deref.html\"><code>Deref</code></a>.  This trait is implemented in cases where a type is logically \"wrapping\" some lower-level, simpler value.  For example, all of the \"smart pointer\" types (<code>Box</code>, <code>Rc</code>, <code>Arc</code>) implement <code>Deref</code> to give you access to their contents.</p>\n\n<p>It is also implemented for <code>String</code> and <code>Vec</code>: <code>String</code> \"derefs\" to the simpler <code>str</code>, <code>Vec&lt;T&gt;</code> derefs to the simpler <code>[T]</code>.</p>\n\n<p>Writing <code>*s</code> is just manually invoking <a href=\"http://doc.rust-lang.org/std/ops/trait.Deref.html#tymethod.deref\"><code>Deref::deref</code></a> to turn <code>s</code> into its \"simpler form\".  It is almost always written <code>&amp;*s</code>, however: although the <code>Deref::deref</code> signature says it returns a borrowed pointer (<code>&amp;Target</code>), the compiler inserts a second automatic deref.  This is so that, for example, <code>{ let x = Box::new(42i32); *x }</code> results in an <code>i32</code> rather than a <code>&amp;i32</code>.</p>\n\n<p>So <code>&amp;*s</code> is really just shorthand for <code>Deref::deref(&amp;s)</code>.</p>\n\n<p><code>s[..]</code> is syntactic sugar for <code>s.index(RangeFull)</code>, implemented by the <a href=\"http://doc.rust-lang.org/std/ops/trait.Index.html\"><code>Index</code></a> trait.  This means to slice the \"whole range\" of the thing being indexed; for both <code>String</code> and <code>Vec</code>, this gives you a slice of the entire contents.  Again, the result is <em>technically</em> a borrowed pointer, but Rust auto-derefs this one <em>as well</em>, so it's also almost always written <code>&amp;s[..]</code>.</p>\n\n<p>So what's the difference?  Hold that thought; let's talk about <code>Deref</code> chaining.</p>\n\n<p>To take a specific example, because you can view a <code>String</code> as a <code>str</code>, it would be <em>really</em> helpful to have all the methods available on <code>str</code>s automatically available on <code>String</code>s as well.  Rather than inheritance, Rust does this by <code>Deref</code> chaining.</p>\n\n<p>The way it works is that when you ask for a particular method on a value, Rust first looks at the methods defined for that specific type.  Let's say it doesn't find the method you asked for; before giving up, Rust will check for a <code>Deref</code> implementation.  If it finds one, it invokes it and then <em>tries again</em>.</p>\n\n<p>This means that when you call <code>s.chars()</code> where <code>s</code> is a <code>String</code>, what's <em>actually</em> happening is that you're calling <code>s.deref().chars()</code>, because <code>String</code> doesn't <em>have</em> a method called <code>chars</code>, but <a href=\"http://doc.rust-lang.org/std/string/struct.String.html#method.chars\"><code>str</code> <em>does</em></a> (scroll up to see that <code>String</code> only gets this method because it implements <code>Deref&lt;Target=str&gt;</code>).</p>\n\n<p>Getting back to the original question, the difference between <code>&amp;*s</code> and <code>&amp;s[..]</code> is in what happens when <code>s</code> is not <em>just</em> <code>String</code> or <code>Vec&lt;T&gt;</code>.  Let's take a few examples:</p>\n\n<ul>\n<li><code>s: String</code>; <code>&amp;*s: &amp;str</code>, <code>&amp;s[..]: &amp;str</code>.</li>\n<li><code>s: &amp;String</code>: <code>&amp;*s: &amp;String</code>, <code>&amp;s[..]: &amp;str</code>.</li>\n<li><code>s: Box&lt;String&gt;</code>: <code>&amp;*s: &amp;String</code>, <code>&amp;s[..]: &amp;str</code>.</li>\n<li><code>s: Box&lt;Rc&lt;&amp;String&gt;&gt;</code>: <code>&amp;*s: &amp;Rc&lt;&amp;String&gt;</code>, <code>&amp;s[..]: &amp;str</code>.</li>\n</ul>\n\n<p><code>&amp;*s</code> only <em>ever</em> peels away <em>one</em> layer of indirection.  <code>&amp;s[..]</code> peels away <em>all of them</em>.  This is because none of <code>Box</code>, <code>Rc</code>, <code>&amp;</code>, <em>etc.</em> implement the <code>Index</code> trait, so <code>Deref</code> chaining causes the call to <code>s.index(RangeFull)</code> to chain through all those intermediate layers.</p>\n\n<p>Which one should you use?  Whichever you want.  Use <code>&amp;*s</code> (or <code>&amp;**s</code>, or <code>&amp;***s</code>) if you want to control <em>exactly</em> how many layers of indirection you want to strip off.  Use <code>&amp;s[..]</code> if you want to strip them all off and just get at the innermost representation of the value.</p>\n\n<p>Or, you can do what I do and use <code>&amp;*s</code> because it reads left-to-right, whereas <code>&amp;s[..]</code> reads left-to-right-to-left-again and that annoys me.  :)</p>\n\n<h2>Addendum</h2>\n\n<ul>\n<li>There's the related concept of <a href=\"http://doc.rust-lang.org/book/deref-coercions.html\"><code>Deref</code> coercions</a>.</li>\n<li>There's also <a href=\"http://doc.rust-lang.org/std/ops/trait.DerefMut.html\"><code>DerefMut</code></a> and <a href=\"http://doc.rust-lang.org/std/ops/trait.IndexMut.html\"><code>IndexMut</code></a> which do all of the above, but for <code>&amp;mut</code> instead of <code>&amp;</code>.</li>\n</ul>\n"}], "owner": {"reputation": 365, "user_id": 2593302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17fe83beb5917d7541b088a20bce08b3?s=128&d=identicon&r=PG&f=1", "display_name": "chad", "link": "https://stackoverflow.com/users/2593302/chad"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 33863530, "answer_count": 2, "score": 11, "last_activity_date": 1448459056, "creation_date": 1448229534, "last_edit_date": 1448230227, "question_id": 33860750, "link": "https://stackoverflow.com/questions/33860750/is-there-a-difference-between-slicing-and-an-explicit-reborrow-when-converting-s", "title": "Is there a difference between slicing and an explicit reborrow when converting Strings to &amp;strs?", "body": "<p>Are the following two examples equivalent?</p>\n\n<p>Example 1:</p>\n\n<pre><code>let x = String::new();\nlet y = &amp;x[..];\n</code></pre>\n\n<p>Example 2:</p>\n\n<pre><code>let x = String::new();\nlet y = &amp;*x;\n</code></pre>\n\n<p>Is one more efficient than the other or are they basically the same?</p>\n"}, {"tags": ["pattern-matching", "rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 365, "user_id": 2593302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17fe83beb5917d7541b088a20bce08b3?s=128&d=identicon&r=PG&f=1", "display_name": "chad", "link": "https://stackoverflow.com/users/2593302/chad"}, "edited": false, "score": 0, "creation_date": 1448228813, "post_id": 33859430, "comment_id": 55485669, "body": "Is there a difference between creating a string slice e.g. <code>&amp;x[..]</code> and doing an explicit reborrow e.h. <code>&amp;*x</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 365, "user_id": 2593302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17fe83beb5917d7541b088a20bce08b3?s=128&d=identicon&r=PG&f=1", "display_name": "chad", "link": "https://stackoverflow.com/users/2593302/chad"}, "edited": false, "score": 0, "creation_date": 1448229049, "post_id": 33859430, "comment_id": 55485758, "body": "@chad I don&#39;t <i>think</i> there is a difference, but I am not sure. That sounds like a straight-forward thing you could <a href=\"http://stackoverflow.com/questions/ask\">ask a new question for</a> and get a more reliable answer for, and maybe some points. :-)"}, {"owner": {"reputation": 1706, "user_id": 4255842, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b0d7dfd98472547776f7d23112d000f5?s=128&d=identicon&r=PG&f=1", "display_name": "Pyfisch", "link": "https://stackoverflow.com/users/4255842/pyfisch"}, "edited": false, "score": 0, "creation_date": 1448278990, "post_id": 33859430, "comment_id": 55503654, "body": "This is the question: <a href=\"http://stackoverflow.com/questions/33860750/is-there-a-difference-between-slicing-and-an-explicit-reborrow-when-converting-s\" title=\"is there a difference between slicing and an explicit reborrow when converting s\">stackoverflow.com/questions/33860750/&hellip;</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1578075361, "last_edit_date": 1578075361, "creation_date": 1448221901, "answer_id": 33859430, "question_id": 33859266, "link": "https://stackoverflow.com/questions/33859266/using-slice-patterns-with-a-slice-of-strings/33859430#33859430", "title": "Using slice patterns with a slice of Strings", "body": "<p>Technically, you don't have a slice of <code>String</code>s (<code>&amp;[String]</code>), you have an <em>array</em> of <code>String</code>s (<code>[String; 2]</code>).</p>\n\n<p>Let's take a look at a smaller case:</p>\n\n<pre><code>fn main() {\n    match \"foo\".to_owned() {\n        \"foo\" =&gt; println!(\"matched\"),\n        _ =&gt; unreachable!(),\n    }\n}\n</code></pre>\n\n<p>Here, we get the same error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:3:9\n  |\n3 |         \"foo\" =&gt; println!(\"matched\"),\n  |         ^^^^^ expected struct `std::string::String`, found reference\n  |\n  = note: expected type `std::string::String`\n             found type `&amp;'static str`\n</code></pre>\n\n<p>The fix in this case is to change the <code>String</code> into a <code>&amp;str</code>, which is what the slice patterns understand:</p>\n\n<pre><code>let s = \"foo\".to_owned();\nmatch s.as_str() {\n    \"foo\" =&gt; println!(\"matched\"),\n    _ =&gt; unreachable!(),\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25383488/155423\">How to match a String against string literals in Rust?</a></li>\n</ul>\n\n<p>So, how can we expand this to your example? The straight-forward thing is to do the same thing twice:</p>\n\n<pre><code>fn main() {\n    let x = [\"foo\".to_owned(), \"bar\".to_owned()];\n\n    match [x[0].as_str(), x[1].as_str()] {\n        [\"foo\", y] =&gt; println!(\"y is {}.\", y),\n        _ =&gt; unreachable!(),\n    }\n}\n</code></pre>\n\n<p>However, this wouldn't work for the case of a slice (<code>&amp;[T]</code>) because we only handle two values, not an arbitrary amount. In that case, we need to make a temporary <code>Vec</code>:</p>\n\n<pre><code>\nfn main() {\n    let x = [\"foo\".to_owned(), \"bar\".to_owned()];\n    let x2: Vec&lt;_&gt; = x.iter().map(|x| x.as_str()).collect();\n\n    match x2.as_slice() {\n        [\"foo\", y] =&gt; println!(\"y is {}.\", y),\n        _ =&gt; unreachable!(),\n    }\n}\n</code></pre>\n\n<p>Note that you have to convert the <code>Vec</code> into a slice itself (<code>x2.as_slice()</code>) because slice patterns only understand slices.</p>\n"}], "owner": {"reputation": 1706, "user_id": 4255842, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/b0d7dfd98472547776f7d23112d000f5?s=128&d=identicon&r=PG&f=1", "display_name": "Pyfisch", "link": "https://stackoverflow.com/users/4255842/pyfisch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1991, "favorite_count": 1, "accepted_answer_id": 33859430, "answer_count": 1, "score": 3, "last_activity_date": 1578075361, "creation_date": 1448220772, "last_edit_date": 1448221990, "question_id": 33859266, "link": "https://stackoverflow.com/questions/33859266/using-slice-patterns-with-a-slice-of-strings", "title": "Using slice patterns with a slice of Strings", "body": "<p>I am trying to use slice patterns on a slice of <code>String</code>s. This does not work because Rust does not match the <code>String</code>s of the slice with the <code>&amp;str</code> literal. I could not find out how to convert the slice of <code>String</code>s to a slice of <code>&amp;str</code>s.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(slice_patterns)]\n\nfn main() {\n    // A slice of strings.\n    let x = [\"foo\".to_owned(), \"bar\".to_owned()];\n    match x {\n        [\"foo\", y] =&gt; println!(\"y is {}.\", y),\n        _ =&gt; println!(\"I did not expect this.\"),\n    }\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/0TyjUv\" rel=\"nofollow\">Playground</a></p>\n"}, {"tags": ["rust", "specialization"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448214143, "post_id": 33857673, "comment_id": 55480400, "body": "Your terminology, code examples, and style are all very unusual for Rust. I&#39;d <b>highly</b> recommend reading through the entire book, <a href=\"http://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a> and working through the exercises there. In doing so, you&#39;d learn that there is no such thing as a &quot;class&quot; in Rust, much less a &quot;subclass&quot; or &quot;superclass&quot;. Additionally, Rust structs do not use <code>_</code> to denote member variables (you may be thinking C++?). In fact, a prefix of <code>_</code>means &quot;an unused variable&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1448214845, "post_id": 33857673, "comment_id": 55480658, "body": "Sorry, not trying to be antagonistic! However, my point is that Rust <i>does not have classes</i>, so you cannot ask how to do something with a &quot;Rust class&quot; because the question is <i>mu</i>. There are questions that ask how to translate concepts from other languages into Rust; maybe that was your intention? Again, <i>in Rust</i>, <code>_</code> means an unused variable, no &quot;potentially&quot; about it. The compiler can do flow analysis to know if a variable may be used and will not complain about it if so. Feel free to ignore everything I say, but I&#39;m also talking to future visitors that find this question. ^_^"}], "answers": [{"comments": [{"owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "edited": false, "score": 0, "creation_date": 1448213781, "post_id": 33857847, "comment_id": 55480259, "body": "This seems like it would result in a lot of rewritten code. What a pity. Thanks for the tips and the recommendations."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "edited": false, "score": 2, "creation_date": 1448214434, "post_id": 33857847, "comment_id": 55480526, "body": "@erip there are other ways of avoiding rewritten code, it&#39;s just that inheritance isn&#39;t the way. Composition works just fine for example, and often works better with Rust&#39;s emphasis on ownership."}, {"owner": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 0, "creation_date": 1448221510, "post_id": 33857847, "comment_id": 55483085, "body": "Rust doesn&#39;t offer class inheritance, so perhaps StringTokeniser should be a trait rather than a struct. (Traits roughly correspond to c# interfaces).   Future versions of rust may allow you to define an associated_const when you implement a trait, but this is unstable and AFAICS it only works with integers  <a href=\"https://doc.rust-lang.org/book/associated-constants.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/associated-constants.html</a>  Alternatively space_tokenizer could be a variable let space_tokenizer = StringTokenizer { string: &quot; &quot; }"}, {"owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "reply_to_user": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 0, "creation_date": 1448291315, "post_id": 33857847, "comment_id": 55512009, "body": "@nielsle <code>StringTokenizer</code> implements a trait <code>TokenizerI</code>. AFAIK Rust doesn&#39;t allow traits to implement traits. Temporarily I&#39;ll use the variable binding <code>space_tokenizer</code> until I decide to refactor."}, {"owner": {"reputation": 373, "user_id": 361640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a26c2ab786845a33302f62df06125e9e?s=128&d=identicon&r=PG", "display_name": "nielsle", "link": "https://stackoverflow.com/users/361640/nielsle"}, "edited": false, "score": 0, "creation_date": 1448449745, "post_id": 33857847, "comment_id": 55591271, "body": "Here is some info on implementing a trait for all structs that implement another trait <a href=\"http://stackoverflow.com/questions/29256519/traits-implementing-traits\" title=\"traits implementing traits\">stackoverflow.com/questions/29256519/traits-implementing-tra&zwnj;&#8203;its</a> Alternatively it might be cleaner to use a function     <code>fn get_tokens&lt;T: StringTokenizer&gt;( x: T) -&gt; SomeIterator&lt;Item=Token&gt; {..}</code>"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1448213378, "creation_date": 1448213378, "answer_id": 33857847, "question_id": 33857673, "link": "https://stackoverflow.com/questions/33857673/specialize-to-reuse-in-rust/33857847#33857847", "title": "Specialize to reuse in Rust", "body": "<p>There are no \"superclasses\" and \"subclasses\" in Rust (as of 1.4.0). The best we have is traits.</p>\n\n<p>For your case, I see two options. If the only difference between the tokenizer \"classes\" is the delimiter string, then I would have a single struct, and simply various constructor methods for each possible delimiter:</p>\n\n<pre><code>struct StringTokenizer {\n    string: &amp;'static str,\n}\n\nimpl StringTokenizer {\n    fn new_space() -&gt; StringTokenizer {\n        StringTokenizer { string: \" \" }\n    }\n}\n</code></pre>\n\n<p>If the classes need to be able to implement different behaviors, then you should use traits instead. You'd define a trait with a method that returns the delimiter string to use for each particular implementation. You could then add other methods as needed.</p>\n\n<pre><code>trait StringTokenizer {\n    fn delimiter() -&gt; &amp;'static str;\n}\n\nstruct SpaceTokenizer;\n\nimpl StringTokenizer for SpaceTokenizer {\n    fn delimiter() -&gt; &amp;'static str {\n        \" \"\n    }\n}\n</code></pre>\n\n<p>Note that the <code>delimiter</code> method here has no <code>self</code>, <code>&amp;self</code> or <code>&amp;mut self</code> parameter, which makes it a \"static\" method. For your other methods, you may need to add one of those as the first parameter.</p>\n\n<p>To learn more about traits, read <a href=\"http://doc.rust-lang.org/book/traits.html\" rel=\"nofollow\">the section on Traits in <em>The Rust Programming Language</em></a>.</p>\n"}], "owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 770, "favorite_count": 0, "accepted_answer_id": 33857847, "answer_count": 1, "score": -1, "last_activity_date": 1448214136, "creation_date": 1448212472, "last_edit_date": 1448214136, "question_id": 33857673, "link": "https://stackoverflow.com/questions/33857673/specialize-to-reuse-in-rust", "title": "Specialize to reuse in Rust", "body": "<p>I have a tokenizer superclass that can tokenize on an arbitrary string <code>_string</code>. I want to implement some \"simple\" tokenizers that can tokenize on common delimiters like space, newline, etc.</p>\n\n<p>I have the following code:</p>\n\n<blockquote>\n  <p>api.rs</p>\n</blockquote>\n\n<pre><code>pub struct StringTokenizer { _string: &amp;'static str }\n</code></pre>\n\n<p>The first subclass I'm trying to implement is a space tokenizer, so <code>_string</code> will be <code>\" \"</code>.</p>\n\n<p>I tried to following:</p>\n\n<blockquote>\n  <p>simple.rs</p>\n</blockquote>\n\n<pre><code>use api::StringTokenizer;\n\nimpl StringTokenizer for SpaceTokenizer {\n    let _string = \" \";\n}\n</code></pre>\n\n<p>and got the following error: </p>\n\n<blockquote>\n  <p>error: expected one of <code>const</code>, <code>extern</code>, <code>fn</code>, <code>pub</code>, <code>type</code>, <code>unsafe</code>, or <code>}</code>, found <code>let</code></p>\n</blockquote>\n\n<p>How can I give <code>_string</code> the value of <code>\" \"</code> in the subclass of <code>StringTokenizer</code>?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448316019, "post_id": 33881294, "comment_id": 55527485, "body": "This... is an amazing answer. Kudos to all the work you obviously put into describing this!"}, {"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "edited": false, "score": 0, "creation_date": 1452943328, "post_id": 33881294, "comment_id": 57394512, "body": "Shouldn&#39;t it be <code>PhantomData&lt;Cell&lt;&amp;&#39;a T&gt;&gt;</code> rather than <code>PhantomData&lt;Cell&lt;&amp;&#39;a ()&gt;&gt;</code> in order to have correct dropping semantics with respect to the generic <code>T</code>?"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1452958557, "post_id": 33881294, "comment_id": 57399121, "body": "<code>&amp;T</code> has no dropck implications that I know, and there&#39;s already a <code>&amp;T</code> in the type."}, {"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "edited": false, "score": 0, "creation_date": 1453023787, "post_id": 33881294, "comment_id": 57414749, "body": "Ah right, I confused it with the example from the Rustonomicon."}], "tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": false, "score": 7, "last_activity_date": 1448316325, "last_edit_date": 1448316325, "creation_date": 1448315132, "answer_id": 33881294, "question_id": 33857631, "link": "https://stackoverflow.com/questions/33857631/does-lifetime-elision-work-for-methods-in-trait-impls/33881294#33881294", "title": "Does lifetime elision work for methods in trait impls?", "body": "<p>Let\u2019s look at rustc\u2019s process to determine if a provided <code>impl</code> method corresponds\nto the signature declared in the trait.</p>\n\n<p>The location in the code is\n<a href=\"https://github.com/rust-lang/rust/blob/69b8e74c31c5bc2a35c40cecbceffba773cdecbf/src/librustc_typeck/check/compare_method.rs#L107-L171\"><code>compare_impl_method</code></a>\nin <code>librustc_typeck/check/compare_method.rs</code>, and it's well commented,\nhowever even the comments are hard to use for those that are not compiler hackers.</p>\n\n<p>I\u2019m not a compiler developer, so the following is based on my rust experience\nand interpretation!</p>\n\n<p>The declaration in the trait corresponds to a particular function type,\nand the definition in the <code>impl</code> block is parsed to its own function type.</p>\n\n<p>For this question I think only the conclusion of the type checking is important:</p>\n\n<ul>\n<li>\u201cIs the <code>impl</code> function a subtype of the trait function?\u201d</li>\n</ul>\n\n<h2>Subtyping I</h2>\n\n<blockquote>\n  <p><a href=\"https://en.wikipedia.org/wiki/Subtyping\">If S is a subtype of T</a>, the subtyping relation is often written\n  S &lt;: T, to mean that any term of type S can\n  be safely used in a context where a term of type T is expected. </p>\n</blockquote>\n\n<p>It sounds reasonable. We want the <code>impl</code> block to define a function\nthat can be used safely as if it is the function declared in the trait.</p>\n\n<h2>Case 1</h2>\n\n<p>This is the elided lifetime case, but spelled out explicitly.\nI have replaced all method bodies with just a panic to emphasize that\nfunction signature checking is completely uninfluenced by the\nbody of the function.</p>\n\n<pre><code>impl&lt;'a, 'b, T&gt; PartialEq&lt;RefEquality&lt;'b, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq&lt;'c&gt;(&amp;self, other: &amp;RefEquality&lt;'c, T&gt;) -&gt; bool {\n        panic!()\n    }\n}\n</code></pre>\n\n<p>The trait expects a function of type:</p>\n\n<pre><code>fn(&amp;RefEquality&lt;'a, T&gt;, &amp;RefEquality&lt;'b, T&gt;)\n</code></pre>\n\n<p>You provide a function of type:</p>\n\n<pre><code>fn&lt;'c&gt;(&amp;RefEquality&lt;'a, T&gt;, &amp;RefEquality&lt;'c, T&gt;)\n</code></pre>\n\n<p>It looks like the provided impl is \u201cmore general\u201d than required.\nWith <code>'c ==  'b</code>, then the function is of equal type.</p>\n\n<p>It is a subtype of the expected type, because we can always use the <code>fn&lt;'c&gt;</code> version\nsafely in its place.</p>\n\n<h2>Case 2</h2>\n\n<p>For your second example, that didn't compile:</p>\n\n<pre><code>impl&lt;'a, 'b, T&gt; PartialEq&lt;RefEquality&lt;'b, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq(&amp;self, other: &amp;RefEquality&lt;'a, T&gt;) -&gt; bool {\n        panic!()\n    }\n}\n</code></pre>\n\n<p>You can add a bound <code>'b: 'a</code> ('b outlives 'a), and then <a href=\"https://play.rust-lang.org/?gist=d048b31502c96aa88a26&amp;version=stable\">it's ok</a>:</p>\n\n<pre><code>impl&lt;'a, 'b: 'a, T&gt; PartialEq&lt;RefEquality&lt;'b, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq(&amp;self, other: &amp;RefEquality&lt;'a, T&gt;) -&gt; bool {\n        panic!()\n    }\n}\n</code></pre>\n\n<p>The trait expects a function of type:</p>\n\n<pre><code>fn(&amp;RefEquality&lt;'a, T&gt;, &amp;RefEquality&lt;'b, T&gt;)\n</code></pre>\n\n<p>You provide a function of type:</p>\n\n<pre><code>fn(&amp;RefEquality&lt;'a, T&gt;, &amp;RefEquality&lt;'a, T&gt;)\n</code></pre>\n\n<p>I think it seems logical that they are compatible if 'b outlives 'a, but let's look at it calmly.</p>\n\n<p>Let's remove the constant factors:</p>\n\n<p>The trait expects a function of type:</p>\n\n<pre><code>fn(Ref&lt;'b&gt;)\n</code></pre>\n\n<p>You provide a function of type:</p>\n\n<pre><code>fn(Ref&lt;'a&gt;)\n</code></pre>\n\n<p>We also have the information that <code>where 'b: 'a</code>. How can we see that these are compatible?</p>\n\n<h2>Subtyping II: Attack of the Variances</h2>\n\n<p><strong>Subtyping:</strong> is it safe to use <code>X</code> instead of <code>Y</code>?</p>\n\n<p><strong>Variance:</strong> <em>if</em> <code>X</code> is a subtype of <code>Y</code>, what about <code>Foo&lt;X&gt;</code> and <code>Foo&lt;Y&gt;</code>?</p>\n\n<p>See also <a href=\"https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)\">Wikipedia</a>, <a href=\"https://doc.rust-lang.org/nightly/nomicon/subtyping.html\">Rustonomicon</a> on variance.</p>\n\n<p>The subtyping definition for lifetimes is:</p>\n\n<p><code>'x &lt;: 'y</code> means that <code>'x</code> is longer than <code>'y</code>.</p>\n\n<p>Let's practice subtyping and variance with references.</p>\n\n<p>When is it safe to use <code>&amp;'x i32</code> instead of <code>&amp;'y i32</code>?</p>\n\n<p>It is when <code>'x</code> is longer lived than <code>'y</code>, then it's\nsafe to replace. <code>'x</code> living longer than <code>'y</code> implies that\n<code>&amp;'x i32</code> is a subtype of <code>&amp;'y i32</code>:</p>\n\n<p><code>'x &lt;: 'y  =&gt; &amp;'x i32 &lt;: &amp;'y i32</code></p>\n\n<p>The subtyping relation is propagated in the <em>same</em> direction,\nand this is called <strong>covariance</strong>; <code>&amp;'a i32</code> is <strong>covariant</strong> in the <code>'a</code> parameter.</p>\n\n<p>The variance behavior of a function instead is this:</p>\n\n<p><code>X &lt;: Y =&gt; fn(Y) &lt;: fn(X)</code></p>\n\n<p>Functions behave in the opposite way of their argument types. This is <strong>contravariance</strong>,\nlogically \u201ccontra\u201d since it's the <em>opposite</em> direction.</p>\n\n<h2>Computation</h2>\n\n<p>For this question we assume that <code>Ref&lt;'a&gt;</code> behaves as\nif it contains a <code>&amp;'a</code> reference, and that it has the same <em>variance</em>\nas <code>&amp;'a</code> itself has.</p>\n\n<p>We were given the bound <code>where 'b: 'a</code>, which means:</p>\n\n<p><code>'b &lt;: 'a</code></p>\n\n<p>Use the covariance rule for references and Ref:</p>\n\n<p><code>'b &lt;: 'a  =&gt;  Ref&lt;'b&gt; &lt;: Ref&lt;'a&gt;</code></p>\n\n<p>Use the <strong>contravariant</strong> rule for functions<sup>**</sup></p>\n\n<p><code>Ref&lt;'b&gt; &lt;: Ref&lt;'a&gt;  =&gt;  fn(Ref&lt;'a&gt;) &lt;: fn(Ref&lt;'b&gt;)</code></p>\n\n<p>And this was the question that rustc asked, is the <code>impl</code> function\na subtype of the trait function. It is!</p>\n\n<p>** <sup>w.r.t. function arguments</sup>:</p>\n\n<h2>What if I want the lifetimes to be equal?</h2>\n\n<p>If your goal is just to define <code>PartialEq</code> for the equal lifetime case, then yes, the elided lifetime case is fine. It provides a more general function in the impl, but the type checker determines that it is compatible.</p>\n\n<p>You can also change the variance of your <code>RefEquality</code> type with respect to the lifetime parameter.</p>\n\n<p>If you want a <code>RefEquality&lt;'a, T&gt;</code> is only subtype compatible\nwith exactly the same lifetime, that's called <strong>invariance</strong>.</p>\n\n<p>There's a primitive you can use that has invariance, <code>std::cell::Cell&lt;T&gt;</code>.\n<code>Cell&lt;T&gt;</code> is invariant in the <code>T</code> parameter.</p>\n\n<p>The usual way to accomplish this is a <code>PhantomData</code> member:</p>\n\n<pre><code>struct RefEquality&lt;'a, T: 'a&gt; {\n    ptr: &amp;'a T,\n    marker: PhantomData&lt;Cell&lt;&amp;'a ()&gt;&gt;,\n}\n</code></pre>\n\n<p>If you want to see an application of invariance, check out the\ncrossbeam crate and how <a href=\"https://github.com/aturon/crossbeam/blob/a6cebd0ead5042e1b22408a80940aa8a5f8d8d16/src/scoped.rs#L11-L13\"><code>Scope&lt;'a&gt;</code> being invariant in the <code>'a</code> \nparameter</a> is the cornerstone in its peculiar borrow rules for\nsafe scoped threads.</p>\n"}], "owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "answer_count": 1, "score": 9, "last_activity_date": 1448514219, "creation_date": 1448212302, "last_edit_date": 1495539897, "question_id": 33857631, "link": "https://stackoverflow.com/questions/33857631/does-lifetime-elision-work-for-methods-in-trait-impls", "title": "Does lifetime elision work for methods in trait impls?", "body": "<p>With this question I am looking for feedback from people who have more knowledge in this area. I am by no means an expert. So I might as well ask my question upfront: Is my reasoning correct here?</p>\n\n<h2>The problem</h2>\n\n<p>Based on the <a href=\"https://stackoverflow.com/a/33847816/929981\">answer to a question</a> here on SO, I was confused to see the lifetime elided in the implementation of a trait method:</p>\n\n<pre><code>impl&lt;'a, 'b, T&gt; PartialEq&lt;RefEquality&lt;'b, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq(&amp;self, other: &amp;RefEquality&lt;T&gt;) -&gt; bool {\n        self.0 as *const T == other.0 as *const T\n    }\n}\n</code></pre>\n\n<p>Here, in the method signature the lifetime <code>'b</code> was omitted on the type of <code>other</code>. This works and is correct. I expected it to be <code>&amp;RefEquality&lt;'b, T&gt;</code> for the type to be correct. After all, the <code>'b</code> here is essential: The lifetime has to be different from <code>'a</code>. If not, it would be too restrictive: The implementation would only work for another <code>RefEquality&lt;T&gt;</code> with the same lifetime as <code>Self</code>. So those are obviously different semantics. How can the compiler infer the correct lifetime?</p>\n\n<h2>Lifetime elision takes care of it</h2>\n\n<p>Lifetimes on function signatures can be elided but they cannot be elided on impl blocks. There, the types have to be fully specified which includes naming lifetimes.</p>\n\n<p>On the <code>eq()</code> method on the other hand, I am able to elide the lifetime in the type annotation of other. In fact, the compiler then inserts an arbitrary lifetime for it which is obviously different from <code>'a</code>. That is the reason why this works while also keeping the same semantics:</p>\n\n<pre><code>impl&lt;'a, 'b, T&gt; PartialEq&lt;RefEquality&lt;'b, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq&lt;'c&gt;(&amp;self, other: &amp;RefEquality&lt;'c, T&gt;) -&gt; bool {\n        self.0 as *const T == other.0 as *const T\n    }\n}\n</code></pre>\n\n<p>Here, I introduced an arbitrary lifetime <code>'c</code> for the method, which is basically the same the compiler does in case of lifetime elision.</p>\n\n<p>Naming a lifetime <code>'b</code> in my trait impl just stated that it has to be different from <code>'a</code> (I also not linked them in any way). It follows logically, that this does not work:</p>\n\n<pre><code>impl&lt;'a, 'b, T&gt; PartialEq&lt;RefEquality&lt;'b, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq(&amp;self, other: &amp;RefEquality&lt;'a, T&gt;) -&gt; bool {\n        self.0 as *const T == other.0 as *const T\n    }\n}\n</code></pre>\n\n<p>I said in on the impl the types would be different (based on their lifetimes) but now the actual <code>eq()</code> implementation says they are the same. This results in a type error as expected.</p>\n\n<p>What if I want the lifetimes to be equal? Can I still use lifetime elision in this case, or will the compiler insert an arbitrary lifetime and report a type error?\nIt turns out, the inference works correctly here as well:</p>\n\n<pre><code>impl&lt;'a, T&gt; PartialEq&lt;RefEquality&lt;'a, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq(&amp;self, other: &amp;RefEquality&lt;T&gt;) -&gt; bool {\n        self.0 as *const T == other.0 as *const T\n    }\n}\n</code></pre>\n\n<p>The elided lifetime will be inferred to be <code>'a</code>, keeping the desired semantics that both <code>RefEquality&lt;T&gt;</code> types have to have the same lifetime.</p>\n"}, {"tags": ["string", "vector", "rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 5591865, "user_type": "registered", "profile_image": "https://graph.facebook.com/1646727972266562/picture?type=large", "display_name": "Ri\u0161o Bal&#225;\u017e", "link": "https://stackoverflow.com/users/5591865/ri%c5%a1o-bal%c3%a1%c5%be"}, "edited": false, "score": 0, "creation_date": 1448203411, "post_id": 33855927, "comment_id": 55476160, "body": "Hello, thank you, changing String to str helped, so str has same methods as String? Am I right?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 75, "user_id": 5591865, "user_type": "registered", "profile_image": "https://graph.facebook.com/1646727972266562/picture?type=large", "display_name": "Ri\u0161o Bal&#225;\u017e", "link": "https://stackoverflow.com/users/5591865/ri%c5%a1o-bal%c3%a1%c5%be"}, "edited": false, "score": 1, "creation_date": 1448207460, "post_id": 33855927, "comment_id": 55477750, "body": "@Ri\u0161oBal&#225;\u017e, it&#39;s more like that <code>String</code> has the same methods as <code>str</code> and more, because there is a <code>Deref&lt;Target=str&gt;</code> implementation for <code>String</code>. See <a href=\"https://doc.rust-lang.org/stable/book/strings.html\" rel=\"nofollow noreferrer\">here</a> (at the bottom) and <a href=\"https://doc.rust-lang.org/stable/book/deref-coercions.html\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448214291, "post_id": 33855927, "comment_id": 55480460, "body": "Idiomatically, you wouldn&#39;t use <code>return vec</code>, you&#39;d just end the method with <code>vec</code>."}], "tags": [], "owner": {"reputation": 8775, "user_id": 821110, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/fa6fca5f613944238a91d2daeba67b9d?s=128&d=identicon&r=PG", "display_name": "W.K.S", "link": "https://stackoverflow.com/users/821110/w-k-s"}, "is_accepted": true, "score": 2, "last_activity_date": 1448214261, "last_edit_date": 1448214261, "creation_date": 1448202812, "answer_id": 33855927, "question_id": 33855809, "link": "https://stackoverflow.com/questions/33855809/strings-lifetime-when-returning-vecstr/33855927#33855927", "title": "String&#39;s lifetime when returning Vec&lt;&amp;str&gt;", "body": "<p>A <code>&amp;'static str</code> is a string literal e.g. <code>let a : &amp;'static str = \"hello world\"</code>. It exists throughout the lifetime of the application.</p>\n\n<p>If you're creating a new <code>String</code>, then that string is not static! </p>\n\n<p>Simply return a vector of <code>String</code>.</p>\n\n<pre><code>fn foo() -&gt; Vec&lt;String&gt; {\n\n    let mut vec = Vec::new();\n    let mut string = String::new();\n\n    // doing something with string...\n\n    vec.push(string);\n\n    return vec;\n}\n\nfn main() {\n    foo();\n}\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 5591865, "user_type": "registered", "profile_image": "https://graph.facebook.com/1646727972266562/picture?type=large", "display_name": "Ri\u0161o Bal&#225;\u017e", "link": "https://stackoverflow.com/users/5591865/ri%c5%a1o-bal%c3%a1%c5%be"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 0, "closed_date": 1448203614, "accepted_answer_id": 33855927, "answer_count": 1, "score": 4, "last_activity_date": 1448214261, "creation_date": 1448202032, "last_edit_date": 1448203588, "question_id": 33855809, "link": "https://stackoverflow.com/questions/33855809/strings-lifetime-when-returning-vecstr", "closed_reason": "Duplicate", "title": "String&#39;s lifetime when returning Vec&lt;&amp;str&gt;", "body": "<p>Simple code:</p>\n\n<pre><code>fn foo() -&gt; Vec&lt;&amp;'static str&gt; {\n\n    let mut vec = Vec::new();\n    let mut string = String::new();\n\n    // doing something with string...\n\n    vec.push(string.as_str());\n\n    return vector; // error here: string doesn't live long enough\n}\n</code></pre>\n\n<p>I have problem that I need to process with string and return it in <code>Vec</code> as str. Problem is that binding string doesn't live long enough, since it goes out of scope after foo. I am confused and I don't really know how to solve that. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "edited": false, "score": 1, "creation_date": 1448197913, "post_id": 33854956, "comment_id": 55474411, "body": "What you want is a work in progress known as &quot;impl specialization&quot;. I don&#39;t think it is implemented yet. <a href=\"https://github.com/rust-lang/rfcs/pull/1210\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/1210</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448310123, "post_id": 33854956, "comment_id": 55524062, "body": "You have significantly altered your question by putting in new context that you didn&#39;t originally include. That should probably be a separate question and I encourage you to use the &quot;purified&quot; example as it&#39;s easier to reason about than your original non-<a href=\"/help/mcve\">MCVE</a> example. The <a href=\"http://stackoverflow.com/a/33855136/155423\">solution provided by Jonas Tepe</a> is the current best solution, until specialization exists. <i>Just amazed how restrictive the Rust generics are</i> \u2014 they are &quot;restrictive&quot; because the compiler is preventing you from shooting your own foot."}, {"owner": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "edited": false, "score": 0, "creation_date": 1448310996, "post_id": 33854956, "comment_id": 55524629, "body": "Why do I need generics if I cannot use them in another generic context? Otherwise I could just write two functions: gemv32 and gemv64."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448323399, "post_id": 33854956, "comment_id": 55530609, "body": "Because <code>T</code> means <i>any type</i>, and your function doesn&#39;t work with any type any more, it only works with two very specific ones."}], "answers": [{"comments": [{"owner": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "edited": false, "score": 0, "creation_date": 1448198177, "post_id": 33855136, "comment_id": 55474479, "body": "Yes, I know about this crutch and I&#39;m afraid that is what I will have to do in my case."}, {"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "reply_to_user": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "edited": false, "score": 1, "creation_date": 1448198577, "post_id": 33855136, "comment_id": 55474628, "body": "If Blas has more methods, then I would separate the method gemv() into its own trait and implement this trait for CudaBlas. That way you avoid having to implement a whole bunch of other methods just for this distinction."}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1448201469, "post_id": 33855136, "comment_id": 55475542, "body": "What about making it an associated type?"}, {"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "edited": false, "score": 0, "creation_date": 1448203147, "post_id": 33855136, "comment_id": 55476067, "body": "Would it help? I am not sure, since you cannot have overlapping implementations of traits based on associated types only. That would be a conflict."}], "tags": [], "owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "is_accepted": false, "score": 3, "last_activity_date": 1448309780, "last_edit_date": 1448309780, "creation_date": 1448197930, "answer_id": 33855136, "question_id": 33854956, "link": "https://stackoverflow.com/questions/33854956/how-do-i-specialize-a-trait-function/33855136#33855136", "title": "How do I specialize a trait function?", "body": "<p>One solution would be to make your trait <code>Blas</code> generic with respect to the floating point type and then have two separate implementations of this trait for your <code>CudaBlas struct</code>:</p>\n\n<pre><code>pub trait Blas&lt;F&gt; {\n    fn gemv(&amp;self, trans: Transpose,\n               cols: usize, rows: usize, matrix: &amp;[F], matrix_factor: F,\n               vector: &amp;[F], vector_inc: usize, vector_factor: F,\n               result: &amp;[F], result_inc: usize) -&gt; Result&lt;(), Error&gt;;\n    ...\n}\n\nimpl Blas&lt;f32&gt; for CudaBlas {\n    fn gemv(&amp;self, trans: Transpose,\n            cols: usize, rows: usize, matrix: &amp;[f32], matrix_factor: f32,\n            vector: &amp;[f32], vector_inc: usize, vector_factor: f32,\n            result: &amp;[f32], result_inc: usize) -&gt; Result&lt;(), Error&gt; {\n           // implement f32 specific functionality\n     }\n}\n\nimpl Blas&lt;f64&gt; for CudaBlas {\n        fn gemv(&amp;self, trans: Transpose,\n                cols: usize, rows: usize, matrix: &amp;[f64], matrix_factor: f64,\n                vector: &amp;[f64], vector_inc: usize, vector_factor: f64,\n                result: &amp;[f64], result_inc: usize) -&gt; Result&lt;(), Error&gt; {\n               // implement f64 specific functionality\n         }\n\n}\n</code></pre>\n\n<p>After that you can call the method <code>gemv()</code> on your <code>CudaBlas</code> with <code>f32</code> or <code>f64</code> every time with the desired type specific results.</p>\n"}, {"tags": [], "owner": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "is_accepted": true, "score": 2, "last_activity_date": 1448319393, "creation_date": 1448319393, "answer_id": 33882334, "question_id": 33854956, "link": "https://stackoverflow.com/questions/33854956/how-do-i-specialize-a-trait-function/33882334#33882334", "title": "How do I specialize a trait function?", "body": "<p>All I needed is to add <code>where CudaBlas: Blas&lt;T&gt;</code>:</p>\n\n<pre><code>#![allow(dead_code, unused_variables)]\n\ntrait Blas&lt;T&gt; {\n    fn gemv(&amp;self, arg: T);\n}\n\nstruct CudaBlas {\n    field: usize,\n}\n\nimpl Blas&lt;f32&gt; for CudaBlas {\n    fn gemv(&amp;self, arg: f32) {\n        println!(\"f32\");\n    }\n}\n\nimpl Blas&lt;f64&gt; for CudaBlas {\n    fn gemv(&amp;self, arg: f64) {\n        println!(\"f64\");\n    }\n}\n\nstruct NeuralNet&lt;T&gt; {\n    field: T,\n}\n\nimpl&lt;T&gt; NeuralNet&lt;T&gt; {\n    fn process(&amp;self, arg: T) where CudaBlas: Blas&lt;T&gt; {\n        let cblas = CudaBlas{field:0};\n        cblas.gemv(arg);\n    }\n}\n\nfn main() {\n    let nn = NeuralNet{field:0f64};\n    nn.process(12f64);\n}\n</code></pre>\n"}], "owner": {"reputation": 1041, "user_id": 2772588, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/b6fb04e8ecf4cae2da6d45b813f7829c?s=128&d=identicon&r=PG", "display_name": "ababo", "link": "https://stackoverflow.com/users/2772588/ababo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 532, "favorite_count": 0, "accepted_answer_id": 33882334, "answer_count": 2, "score": 1, "last_activity_date": 1448319393, "creation_date": 1448196580, "last_edit_date": 1495535239, "question_id": 33854956, "link": "https://stackoverflow.com/questions/33854956/how-do-i-specialize-a-trait-function", "title": "How do I specialize a trait function?", "body": "<p>I have a trait for BLAS functionality:</p>\n\n<pre><code>pub trait Blas {\n    fn gemv&lt;F&gt;(&amp;self, trans: Transpose,\n               cols: usize, rows: usize, matrix: &amp;[F], matrix_factor: F,\n               vector: &amp;[F], vector_inc: usize, vector_factor: F,\n               result: &amp;[F], result_inc: usize) -&gt; Result&lt;(), Error&gt;;\n    ...\n}\n</code></pre>\n\n<p>Now I want to make a type which implements this trait:</p>\n\n<pre><code>pub struct CudaBlas {\n    ...\n}\n\nimpl Blas for CudaBlas {\n    ...\n}\n</code></pre>\n\n<p>The problem is that I need separate specialisations for <code>gemv&lt;f32&gt;</code> and <code>gemv&lt;f64&gt;</code>: each one should call a dedicated shared library function. Didn't succeed to express that without compiler complaints. How can I achieve that?</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>I tried the <a href=\"https://stackoverflow.com/a/33855136/155423\">method proposed by Jonas Tepe</a> and it doesn't seem to work. Here is the purified example:</p>\n\n<pre><code>trait Trait&lt;T&gt; {\n    fn func(&amp;self, arg: T);\n}\n\nstruct Struct {\n    field: usize,\n}\n\nimpl Trait&lt;f32&gt; for Struct {\n    fn func(&amp;self, arg: f32) {\n        println!(\"32bits: {}\", arg);    \n    }\n}\n\nimpl Trait&lt;f64&gt; for Struct {\n    fn func(&amp;self, arg: f64) {\n        println!(\"64bits: {}\", arg);\n    }\n}\n\nstruct Struct2&lt;T&gt; {\n    field2: T,\n}\n\n// yes, I plan to use my CudaBlas inside some generic NeuralNet&lt;T&gt;\nimpl&lt;T&gt; Struct2&lt;T&gt; {\n    fn func2(&amp;self, arg: T) {\n        let s = Struct{field: 1};\n        s.func(arg);\n    }\n}\n\nfn main() {\n    let s32 = Struct2::&lt;f32&gt;{field2: 1f32};\n    let s64 = Struct2::&lt;f64&gt;{field2: 2f64};\n    s32.func2(1f32);\n    s64.func2(1f64);\n}\n</code></pre>\n\n<p>I get:</p>\n\n<blockquote>\n  <p>error: the trait <code>Trait&lt;T&gt;</code> is not implemented for the type <code>Struct</code> [E0277]</p>\n</blockquote>\n\n<p>Making <code>Struct</code> to be generic doesn't solve the problem as well (the compiler complaints that <code>func</code> is not found for type <code>Struct&lt;T&gt;</code>). Just amazed how restrictive the Rust generics are.</p>\n"}, {"tags": ["io", "rust"], "answers": [{"tags": [], "owner": {"reputation": 5913, "user_id": 899752, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CzfBy.jpg?s=128&g=1", "display_name": "mdup", "link": "https://stackoverflow.com/users/899752/mdup"}, "is_accepted": false, "score": 4, "last_activity_date": 1448196193, "last_edit_date": 1448196193, "creation_date": 1448195465, "answer_id": 33854788, "question_id": 33854702, "link": "https://stackoverflow.com/questions/33854702/e0308-reading-lines-from-file-with-for-line-in-reader-lines/33854788#33854788", "title": "E0308 reading lines from file with for line in reader.lines()", "body": "<p>You shouldn't be using <code>and_then</code>, but <code>map</code>.</p>\n\n<p>Correct code:</p>\n\n<pre><code>File::open(\"./data/test\")\n    .map_err(|err| err.to_string())\n    .map(|mut dataFile| { \n         let mut reader = BufReader::new(dataFile);\n         for line in reader.lines() {\n            println!(\"{}\",line.unwrap());\n         };\n    }); \n</code></pre>\n\n<p>You can see it in both functions signatures:</p>\n\n<pre><code>fn and_then&lt;U, F: FnOnce(T) -&gt; Result&lt;U, E&gt;&gt;(self, op: F) -&gt; Result&lt;U, E&gt;\nfn map&lt;U, F: FnOnce(T) -&gt; U&gt;(self, op: F) -&gt; Result&lt;U, E&gt;\n</code></pre>\n\n<p>The key difference here is that the operation <code>op</code> must return something wrapped in a <code>Result</code> in <code>and_then</code>'s case, whereas it doesn't have to be wrapped in <code>map</code>'s case. Your closure doesn't return anything, so in Rust's view it actually returns <code>()</code>, and <code>()</code> cannot match <code>Result&lt;U, E&gt;</code>. However <code>()</code> can match <code>U</code>, which is why the second signature works.</p>\n"}, {"comments": [{"owner": {"reputation": 35, "user_id": 5591573, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aef45ac155364d606d3db265eac2be63?s=128&d=identicon&r=PG&f=1", "display_name": "James Matheson", "link": "https://stackoverflow.com/users/5591573/james-matheson"}, "edited": false, "score": 0, "creation_date": 1448358819, "post_id": 33855976, "comment_id": 55543926, "body": "I am marking this as the answer as though mdup&#39;s answer is helpful Shepmaster explains what the best way to do it is whihc is very helpful."}, {"owner": {"reputation": 35, "user_id": 5591573, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aef45ac155364d606d3db265eac2be63?s=128&d=identicon&r=PG&f=1", "display_name": "James Matheson", "link": "https://stackoverflow.com/users/5591573/james-matheson"}, "edited": false, "score": 0, "creation_date": 1448359505, "post_id": 33855976, "comment_id": 55544385, "body": "OK, just found out about the 5 min limit so apologies for the spelling above, can&#39;t corect it now. I was going to add I originally based this code on the examle in the documentation from Section 4.7 Error handling [<a href=\"https://doc.rust-lang.org/stable/book/error-handling.html#the-limits-of-combinators]\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/book/&hellip;</a>. I  see now why they were using map as they are actually chaining the output in that example. I did have a first attempt that used matches but I had how they worked wrong in my head, this has really helped. Thanks"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1448203111, "last_edit_date": 1495540760, "creation_date": 1448203111, "answer_id": 33855976, "question_id": 33854702, "link": "https://stackoverflow.com/questions/33854702/e0308-reading-lines-from-file-with-for-line-in-reader-lines/33855976#33855976", "title": "E0308 reading lines from file with for line in reader.lines()", "body": "<p>As <a href=\"https://stackoverflow.com/a/33854788/155423\">mdup explains</a>, <a href=\"http://doc.rust-lang.org/core/result/enum.Result.html#method.map\" rel=\"nofollow noreferrer\"><code>map</code></a> and <a href=\"http://doc.rust-lang.org/core/result/enum.Result.html#method.and_then\" rel=\"nofollow noreferrer\"><code>and_then</code></a> are used to <em>transform</em> a <code>Result</code> with a closure. <code>map</code> is used when you want to change the inner type, <code>and_then</code> is used when you want to chain a second thing that results in another <code>Result</code> without nesting them.</p>\n\n<p>However, <strong>neither</strong> of these is idiomatic for your case as you are <strong>not</strong> transforming the value. Instead, you want a <code>match</code> or <code>if let</code> statement. These are more appropriate for <em>side effects</em>.</p>\n\n<p>Additionally, Rust uses <code>snake_case</code> identifiers, and you don't need to have any of the variables be marked as mutable. These are all compiler warnings you would see once it compiles.</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::io::BufReader;\nuse std::fs::File;\n\nfn main() {\n    let f = File::open(\"./data/test\")\n        .map_err(|err| err.to_string());\n\n    if let Ok(data_file) = f {\n        let reader = BufReader::new(data_file);\n        for line in reader.lines() {\n            println!(\"{}\", line.unwrap());\n        };                           \n    }        \n}\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 5591573, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aef45ac155364d606d3db265eac2be63?s=128&d=identicon&r=PG&f=1", "display_name": "James Matheson", "link": "https://stackoverflow.com/users/5591573/james-matheson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 33855976, "answer_count": 2, "score": 1, "last_activity_date": 1448203156, "creation_date": 1448194931, "last_edit_date": 1448203156, "question_id": 33854702, "link": "https://stackoverflow.com/questions/33854702/e0308-reading-lines-from-file-with-for-line-in-reader-lines", "title": "E0308 reading lines from file with for line in reader.lines()", "body": "<p>I am an experienced developer currently trying to teach myself Rust and am writing a simple program to read lines from a file. I have read the Rust std:io, std:result and other documentation forward and backwards and this code is largely taken straight from the docs.  I can't understand why the following program does not compile.</p>\n\n<pre><code>use std::io;\nuse std::fs::File;\nuse std::io::BufReader;\nuse std::io::prelude::*;\n\nfn main() {\n    File::open(\"./data/test\")\n        .map_err(|err| err.to_string())\n        .and_then( |mut dataFile| { \n             let mut reader = BufReader::new(dataFile);\n             for line in reader.lines() {\n                println!(\"{}\",line.unwrap());\n\n             };                           \n        });        \n}\n</code></pre>\n\n<p>The compile error I am receiving when I run <code>cargo build</code> is</p>\n\n<pre><code>src/main.rs:10:35: 16:10 error: mismatched types:\n expected `core::result::Result&lt;_, collections::string::String&gt;`,\n    found `()`\n(expected enum `core::result::Result`,\n    found ()) [E0308]\nsrc/main.rs:10         .and_then( |mut dataFile| { \nsrc/main.rs:11              let mut reader = BufReader::new(dataFile);\nsrc/main.rs:12              for line in reader.lines() {\nsrc/main.rs:13                 println!(\"{}\",line.unwrap());\nsrc/main.rs:14    \nsrc/main.rs:15              };                           \n           ...\nsrc/main.rs:10:35: 16:10 help: run `rustc --explain E0308` to see a detailed explanation\nerror: aborting due to previous error\n</code></pre>\n\n<p>I am running Rust 1.4.0.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1448191193, "post_id": 33854083, "comment_id": 55472579, "body": "Why not just <code>Some(res)</code>?"}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1448192700, "post_id": 33854083, "comment_id": 55472933, "body": "@DK. Yeah, that made no sense. I read the <code>[..]</code> as pseudo-code for &quot;some unspecified slice into that string&quot;, instead of its literal meaning for some reason. Thanks!"}, {"owner": {"reputation": 35, "user_id": 2728022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/540e7b84906bffd829ab7edfc0923135?s=128&d=identicon&r=PG", "display_name": "sbw", "link": "https://stackoverflow.com/users/2728022/sbw"}, "edited": false, "score": 0, "creation_date": 1448193232, "post_id": 33854083, "comment_id": 55473073, "body": "fjh, ok, i will change my return type, thanks a lot!"}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": false, "score": 6, "last_activity_date": 1448192578, "last_edit_date": 1448192578, "creation_date": 1448190524, "answer_id": 33854083, "question_id": 33853990, "link": "https://stackoverflow.com/questions/33853990/return-local-string-as-an-optionstr/33854083#33854083", "title": "Return local String as an Option&lt;&amp;str&gt;", "body": "<p>You cannot return a <code>&amp;str</code> that points into a local <code>String</code> variable. Doing that would mean that you just returned a dangling pointer, as the <code>String</code> (<code>res</code>, in your code) is destroyed when the function returns.</p>\n\n<p>The best way to fix your problem is probably to return a <code>Option&lt;String&gt;</code>, i.e. return the owned string instead of a string slice. Adapting your code, you might end up with something like this:</p>\n\n<pre><code>fn f(text: &amp;str) -&gt; Option&lt;String&gt; {\n    if // some condition {\n        return None;\n    }\n\n    let mut res = String::new();\n    // write something into res.\n\n    Some(res)\n}\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 2728022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/540e7b84906bffd829ab7edfc0923135?s=128&d=identicon&r=PG", "display_name": "sbw", "link": "https://stackoverflow.com/users/2728022/sbw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 633, "favorite_count": 0, "closed_date": 1448203312, "answer_count": 1, "score": 0, "last_activity_date": 1448203255, "creation_date": 1448189725, "last_edit_date": 1448203255, "question_id": 33853990, "link": "https://stackoverflow.com/questions/33853990/return-local-string-as-an-optionstr", "closed_reason": "Duplicate", "title": "Return local String as an Option&lt;&amp;str&gt;", "body": "<p>I want to write a function that receives a <code>&amp;str</code> argument and returns <code>Option&lt;&amp;str&gt;</code>. I wrote this:</p>\n\n<pre><code>fn f(text: &amp;str) -&gt; Option&lt;&amp;str&gt; {\n    if // some condition {\n        return None;\n    }\n\n    let mut res = String::new();\n    // write something into res.\n\n    // return res\n    Some(&amp;res[..])\n}\n</code></pre>\n\n<p>but I get an error:</p>\n\n<blockquote>\n  <p><code>res</code> does not live long enough.</p>\n</blockquote>\n\n<p>What is the best solution to fix this?</p>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 0, "creation_date": 1448330593, "post_id": 33883281, "comment_id": 55532611, "body": "Thanks! That is what I was looking for and it is certainly weird. I opened <a href=\"http://stackoverflow.com/q/33884184/243712\">stackoverflow.com/q/33884184/243712</a> for the question of why the global isn&#39;t <code>Sync</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1601908544, "last_edit_date": 1601908544, "creation_date": 1448324355, "answer_id": 33883281, "question_id": 33850189, "link": "https://stackoverflow.com/questions/33850189/how-to-publish-a-constant-string-in-the-rust-ffi/33883281#33883281", "title": "How to publish a constant string in the Rust FFI?", "body": "<p>We need a public, static, unmangled pointer to some zero-terminated bytes:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[export_name = &quot;CONST_C_STR&quot;] // or #[no_mangle]\npub static CONST_C_STR: &amp;[u8; 20] = b&quot;a constant c string\\0&quot;;\n</code></pre>\n<p>This worked with a simple C program:</p>\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n\nextern char * CONST_C_STR;\n\nint main(int argc, char *argv[]) {\n  printf(&quot;%s\\n&quot;, CONST_C_STR);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 271, "user_id": 2217151, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y9UhE.jpg?s=128&g=1", "display_name": "mzabaluev", "link": "https://stackoverflow.com/users/2217151/mzabaluev"}, "is_accepted": false, "score": 1, "last_activity_date": 1511097359, "creation_date": 1511097359, "answer_id": 47377278, "question_id": 33850189, "link": "https://stackoverflow.com/questions/33850189/how-to-publish-a-constant-string-in-the-rust-ffi/47377278#47377278", "title": "How to publish a constant string in the Rust FFI?", "body": "<p>The crate <a href=\"https://crates.io/crates/c_str_macro\" rel=\"nofollow noreferrer\">c_str_macro</a> provides a convenience macro <code>c_str!</code>, which appends a 0 byte to a Rust string literal and presents it as a <code>CStr</code> reference.</p>\n\n<p>Disclaimer: I'm the author of the crate.</p>\n"}], "owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1437, "favorite_count": 1, "accepted_answer_id": 33883281, "answer_count": 2, "score": 6, "last_activity_date": 1601908544, "creation_date": 1448151128, "last_edit_date": 1448330166, "question_id": 33850189, "link": "https://stackoverflow.com/questions/33850189/how-to-publish-a-constant-string-in-the-rust-ffi", "title": "How to publish a constant string in the Rust FFI?", "body": "<p>I want to have a Rust library expose a <code>const char *</code> static string to C, to be compatible with an existing interface (specifically <a href=\"http://librsync.sourcefrog.net\" rel=\"nofollow\">librsync</a>).  That is, the C header file has</p>\n\n<pre><code>extern char const *my_string;\n</code></pre>\n\n<p>In C, the library would simply have</p>\n\n<pre><code>char const *my_string = \"hi\";\n</code></pre>\n\n<p>In Rust I've tried something like</p>\n\n<pre><code>pub static my_string: *const libc::c_char = unsafe { \"hi\\0\" as *const libc::c_char };\n</code></pre>\n\n<p>but this complains</p>\n\n<pre><code>error: casting `&amp;'static str` as `*const i8` is invalid\n</code></pre>\n\n<p>It seems like I can't use <code>CString</code> etc because they won't be a compile-time constant expression.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448207114, "post_id": 33847537, "comment_id": 55477612, "body": "Style note, you don&#39;t need the <code>: HashMap&lt;&amp;Piece, (u8, u8)&gt;</code> type specification - it can all be inferred."}], "answers": [{"comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 4, "creation_date": 1448137033, "post_id": 33847816, "comment_id": 55460849, "body": "Raw pointers won&#39;t lead to memory unsafety if you never dereference them. However, that doesn&#39;t mean keeping raw pointers to deallocated objects is a good idea: another object could be allocated at the same memory location as a previously deallocated object. I&#39;d rather wrap a <code>&amp;&#39;a T</code> in another struct that has the same identity semantics as <code>*const T</code> than have the lifetime erased."}, {"owner": {"reputation": 25907, "user_id": 509706, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yedDa.png?s=128&g=1", "display_name": "Wilfred Hughes", "link": "https://stackoverflow.com/users/509706/wilfred-hughes"}, "edited": false, "score": 0, "creation_date": 1448667679, "post_id": 33847816, "comment_id": 55689749, "body": "Thanks! I settled on using Box for my project, but it&#39;s really useful having a comparison of the different approaches possible."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1552232495, "last_edit_date": 1552232495, "creation_date": 1448135141, "answer_id": 33847816, "question_id": 33847537, "link": "https://stackoverflow.com/questions/33847537/how-do-i-make-a-pointer-hashable/33847816#33847816", "title": "How do I make a pointer hashable?", "body": "<p>There's a difference between <em>raw pointers</em> (<code>*const T</code>, <code>*mut T</code>) and <em>references</em> (<code>&amp;T</code>, <code>&amp;mut T</code>) in Rust. You have a reference.</p>\n\n<p><code>Hash</code> <a href=\"https://github.com/rust-lang/rust/blob/1.33.0/src/libcore/hash/mod.rs#L661-L673\" rel=\"nofollow noreferrer\">is defined</a> for references as delegating to the hash of the referred-to item:</p>\n\n<pre><code>impl&lt;T: ?Sized + Hash&gt; Hash for &amp;T {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        (**self).hash(state);\n    }\n}\n</code></pre>\n\n<p>However, it is <a href=\"https://github.com/rust-lang/rust/blob/1.33.0/src/libcore/hash/mod.rs#L675-L707\" rel=\"nofollow noreferrer\">defined for raw pointers</a> as you desire:</p>\n\n<pre><code>impl&lt;T: ?Sized&gt; Hash for *const T {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        if mem::size_of::&lt;Self&gt;() == mem::size_of::&lt;usize&gt;() {\n            // Thin pointer\n            state.write_usize(*self as *const () as usize);\n        } else {\n            // Fat pointer\n            let (a, b) = unsafe {\n                *(self as *const Self as *const (usize, usize))\n            };\n            state.write_usize(a);\n            state.write_usize(b);\n        }\n    }\n}\n</code></pre>\n\n<p>And that works:</p>\n\n<pre><code>let mut positions = HashMap::new();\npositions.insert(&amp;left_rook as *const Piece, (0, 0));\npositions.insert(&amp;right_rook as *const Piece, (0, 7));\n</code></pre>\n\n<p>However, using either references or raw pointers here is iffy at best.</p>\n\n<p>If you use a reference, the compiler will stop you from using the hashmap once you have moved the values you have inserted as the reference will no longer be valid.</p>\n\n<p>If you use raw pointers, the compiler <em>won't</em> stop you, but then you will have dangling pointers which can lead to memory unsafety.</p>\n\n<p>In your case, I think I'd try to restructure the code so that a piece is unique beyond the memory address. Perhaps just some incremented number:</p>\n\n<pre><code>positions.insert((left_rook, 0), (0, 0));\npositions.insert((right_rook, 1), (0, 7));\n</code></pre>\n\n<p>If that seems impossible, you can always <code>Box</code> the piece to give it a stable memory address. This latter solution is more akin to languages like Java where everything is heap-allocated by default.</p>\n\n<hr>\n\n<p>As <a href=\"https://stackoverflow.com/questions/33847537/how-do-i-make-a-pointer-hashable/33847816#comment55460849_33847816\">Francis Gagn\u00e9 says</a>:</p>\n\n<blockquote>\n  <p>I'd rather wrap a <code>&amp;'a T</code> in another struct that has the same identity semantics as <code>*const T</code> than have the lifetime erased</p>\n</blockquote>\n\n<p>You can create a struct that handles <em>reference equality</em>:</p>\n\n<pre><code>#[derive(Debug, Eq)]\nstruct RefEquality&lt;'a, T&gt;(&amp;'a T);\n\nimpl&lt;'a, T&gt; std::hash::Hash for RefEquality&lt;'a, T&gt; {\n    fn hash&lt;H&gt;(&amp;self, state: &amp;mut H)\n    where\n        H: std::hash::Hasher,\n    {\n        (self.0 as *const T).hash(state)\n    }\n}\n\nimpl&lt;'a, 'b, T&gt; PartialEq&lt;RefEquality&lt;'b, T&gt;&gt; for RefEquality&lt;'a, T&gt; {\n    fn eq(&amp;self, other: &amp;RefEquality&lt;'b, T&gt;) -&gt; bool {\n        self.0 as *const T == other.0 as *const T\n    }\n}\n</code></pre>\n\n<p>And then use that:</p>\n\n<pre><code>positions.insert(RefEquality(&amp;left_rook), (0, 0));\npositions.insert(RefEquality(&amp;right_rook), (0, 7));\n</code></pre>\n"}], "owner": {"reputation": 25907, "user_id": 509706, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yedDa.png?s=128&g=1", "display_name": "Wilfred Hughes", "link": "https://stackoverflow.com/users/509706/wilfred-hughes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1787, "favorite_count": 0, "accepted_answer_id": 33847816, "answer_count": 1, "score": 10, "last_activity_date": 1552232495, "creation_date": 1448133567, "last_edit_date": 1538436411, "question_id": 33847537, "link": "https://stackoverflow.com/questions/33847537/how-do-i-make-a-pointer-hashable", "title": "How do I make a pointer hashable?", "body": "<p>In Rust, I want to treat enums as equal, but still be able to distinguish different instances by pointer. Here's a toy example:</p>\n\n<pre><code>use self::Piece::*;\nuse std::collections::HashMap;\n\n#[derive(Eq, PartialEq)]\nenum Piece {\n    Rook,\n    Knight,\n}\n\nfn main() {\n    let mut positions: HashMap&lt;&amp;Piece, (u8, u8)&gt; = HashMap::new();\n    let left_rook = Rook;\n    let right_rook = Rook;\n\n    positions.insert(&amp;left_rook, (0, 0));\n    positions.insert(&amp;right_rook, (0, 7));\n}\n</code></pre>\n\n<p>However, the compiler wants me to define <code>Hash</code> on <code>Piece</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Piece: std::hash::Hash` is not satisfied\n  --&gt; src/main.rs:11:52\n   |\n11 |     let mut positions: HashMap&lt;&amp;Piece, (u8, u8)&gt; = HashMap::new();\n   |                                                    ^^^^^^^^^^^^ the trait `std::hash::Hash` is not implemented for `Piece`\n   |\n   = note: required because of the requirements on the impl of `std::hash::Hash` for `&amp;Piece`\n   = note: required by `&lt;std::collections::HashMap&lt;K, V&gt;&gt;::new`\n\nerror[E0599]: no method named `insert` found for type `std::collections::HashMap&lt;&amp;Piece, (u8, u8)&gt;` in the current scope\n  --&gt; src/main.rs:15:15\n   |\n15 |     positions.insert(&amp;left_rook, (0, 0));\n   |               ^^^^^^\n   |\n   = note: the method `insert` exists but the following trait bounds were not satisfied:\n           `&amp;Piece : std::hash::Hash`\n\nerror[E0599]: no method named `insert` found for type `std::collections::HashMap&lt;&amp;Piece, (u8, u8)&gt;` in the current scope\n  --&gt; src/main.rs:16:15\n   |\n16 |     positions.insert(&amp;right_rook, (0, 7));\n   |               ^^^^^^\n   |\n   = note: the method `insert` exists but the following trait bounds were not satisfied:\n           `&amp;Piece : std::hash::Hash`\n</code></pre>\n\n<p>I want equality defined on my enums so that one <code>Rook</code> is equal to another. However, I want to be able to distinguish different <code>Rook</code> instances in my <code>positions</code> hashmap.</p>\n\n<p>How do I do this? I don't want to define <code>Hash</code> on <code>Piece</code>, but surely hashing is already defined on pointers?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 618, "user_id": 10440128, "user_type": "registered", "profile_image": "https://graph.facebook.com/1167851946696270/picture?type=large", "display_name": "Mila Nautikus", "link": "https://stackoverflow.com/users/10440128/mila-nautikus"}, "edited": false, "score": 0, "creation_date": 1607069281, "post_id": 33844633, "comment_id": 115161506, "body": "related: <a href=\"https://github.com/rust-lang/rust/issues/36542\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/36542</a> -- my error was <code>cannot borrow as mutable, consider changing this to be mutable</code>"}], "answers": [{"tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 13, "last_activity_date": 1448118256, "creation_date": 1448118256, "answer_id": 33844855, "question_id": 33844633, "link": "https://stackoverflow.com/questions/33844633/how-to-pass-a-mutable-function-parameter-as-argument-to-another-function/33844855#33844855", "title": "How to pass a mutable function parameter as argument to another function?", "body": "<p>You don't need to use <code>&amp;mut</code> in this case:</p>\n\n<pre><code>let mut vec = vec![0];\n\nfn bar(vec: &amp;mut Vec&lt;i32&gt;) {\n    // some code here\n}\n\nfn foo(vec: &amp;mut Vec&lt;i32&gt;) {\n    bar(vec);\n}\n\nfoo(&amp;mut vec);\n</code></pre>\n\n<p>because <code>vec</code> is already a <code>&amp;mut Vec&lt;i32&gt;</code>.</p>\n"}], "owner": {"reputation": 2276, "user_id": 1740335, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/QHyBk.png?s=128&g=1", "display_name": "x2bool", "link": "https://stackoverflow.com/users/1740335/x2bool"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3196, "favorite_count": 1, "accepted_answer_id": 33844855, "answer_count": 1, "score": 7, "last_activity_date": 1448118256, "creation_date": 1448117074, "question_id": 33844633, "link": "https://stackoverflow.com/questions/33844633/how-to-pass-a-mutable-function-parameter-as-argument-to-another-function", "title": "How to pass a mutable function parameter as argument to another function?", "body": "<p>Why does Rust prevent this code from compiling, with the error: \"cannot borrow immutable local variable <code>arr</code> as mutable\"? How to pass the vector into another function as mutable reference?</p>\n\n<pre><code>let mut vec = vec![0];\n\nfn bar(vec: &amp;mut Vec&lt;i32&gt;) {\n    // some code here\n}\n\nfn foo(vec: &amp;mut Vec&lt;i32&gt;) {\n    bar(&amp;mut vec);\n}\n\nfoo(&amp;mut vec);\n</code></pre>\n"}, {"tags": ["xcode", "cocoa", "rust", "appkit", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "is_accepted": false, "score": 2, "last_activity_date": 1451113791, "last_edit_date": 1451113791, "creation_date": 1448113703, "answer_id": 33844080, "question_id": 33844079, "link": "https://stackoverflow.com/questions/33844079/rust-1-4-0-or-later-cargo-rustc-crashes-when-run-in-an-appkit-app-using-nstask/33844080#33844080", "title": "Rust 1.4.0 (or later) cargo/rustc crashes when run in an AppKit app using NSTask in Xcode", "body": "<h3>TL;DR</h3>\n\n<p>Before you launch <code>NSTask</code>, do this.</p>\n\n<pre><code>    var envs = NSProcessInfo.processInfo().environment;\n    envs[\"DYLD_LIBRARY_PATH\"] = nil\n    // print(NSProcessInfo.processInfo().environment[\"DYLD_LIBRARY_PATH\"])\n    _remoteTask = NSTask()\n    _remoteTask.environment = envs\n</code></pre>\n\n<h3>Explanation</h3>\n\n<p>Sometimes Xcode overrides <code>DYLD_LIBRARY_PATH</code> environment variable to a non-system directory (something like <code>\"/Users/Eonil/Workshop/Temp/Xcode/Derivations/EditorOnly-hfhkxuguvplpqvdcinldyuivhucp/Build/Products/Debug:/usr/lib/system/introspection\"</code>)</p>\n\n<p>And this environment variable is inherited as is to the <code>NSTask</code> instance because <code>.environment</code> was not set and remained as <code>nil</code>.</p>\n\n<p>The cleanest solution would be setting all needed environment variables carefully.</p>\n\n<p>I couldn't find a switch to turn off this Xcode behaviour.</p>\n"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1460755781, "creation_date": 1448113703, "last_edit_date": 1460755781, "question_id": 33844079, "link": "https://stackoverflow.com/questions/33844079/rust-1-4-0-or-later-cargo-rustc-crashes-when-run-in-an-appkit-app-using-nstask", "title": "Rust 1.4.0 (or later) cargo/rustc crashes when run in an AppKit app using NSTask in Xcode", "body": "<p>Rust 1.4.0 installation with multirust runs fine on command line, but crashes with signal 11 if it was being executed by NSTask in Apple AppKit.</p>\n\n<p>I wrote some test cases to reproduce them. Current state is;</p>\n\n<ul>\n<li>A command-line program with NSTask. This works fine.</li>\n<li>An AppKit app with NSTask. This always crashes.</li>\n<li>An AppKit app just only links to AppKit. No actuall AppKit code in app. Also crashes.</li>\n<li>AppKit app wrote in Objective-C. Also crashes.</li>\n<li>AppKit app that runs cargo with BSD level pty instead of NSTask. Works fine.</li>\n</ul>\n\n<p>This issue equally occurs Rust installation by building from source using Homebrew.\nThis issue does not occur with Rust 1.2.0 cargo and rustc. They worked fine.\nThis DOES NOT occur if the app runs out of Xcode debugger. So main reason seems to be the Xcode debugging context. It seems it is setting something wrong...\nRunning the app with command-line LLDB DOES NOT cause the issue. Ah...</p>\n\n<p>I am using Xcode 7.1.1.</p>\n\n<p>Test code can be downloaded from here: <a href=\"https://github.com/eonil/Rust140InAppKitCrashTestCases\" rel=\"nofollow\">https://github.com/eonil/Rust140InAppKitCrashTestCases</a></p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1448094528, "post_id": 33837478, "comment_id": 55447280, "body": "It is not correct to say that the <code>for</code> loop does not take ownership; it&#39;s just <code>into_iter()</code>, when invoked on a fixed-size array, returns an iterator which yields references. It seems this happens because <code>into_iter()</code>, when called on a fixed-size array, returns a slice iterator - error messages say exactly that. I believe that fixed-size arrays can&#39;t be currently iterated by value because we don&#39;t have type-level integers yet, and without them it is very difficult to write the required <code>IntoIterator</code> implementation."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1448096141, "post_id": 33837478, "comment_id": 55447632, "body": "I added an answer with a more in-depth explanation, if anyone&#39;s interested :)"}], "tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": false, "score": 4, "last_activity_date": 1448114730, "last_edit_date": 1448114730, "creation_date": 1448060424, "answer_id": 33837478, "question_id": 33836892, "link": "https://stackoverflow.com/questions/33836892/expected-ptr-found-tuple-while-iterating-over-an-array-of-tuples/33837478#33837478", "title": "Expected &amp;-ptr, found tuple while iterating over an array of tuples", "body": "<p>The error says it is expecting a pointer, so you have to use <code>&amp;</code> in the pattern:</p>\n\n<pre><code>for &amp;(i, c) in adjacent.into_iter() {\n    let (i, c) = (k.0, k.1);\n    if let Some(a) = grid.get(r+i, j+c) {\n        /* ... */\n    }\n}\n</code></pre>\n\n<p>This specific <code>for</code> loop does not take ownership of the elements, it takes ownership of the references.</p>\n\n<p>We can see a better error with the following, equivalent, code:</p>\n\n<pre><code>let mut it = adjacent.into_iter();\nloop {\n    match it.next() {\n        Some((i, c)) =&gt; println!(\"{}, {}\", i, c),\n        None =&gt; break,\n    }\n}\n\nsrc/main.rs:7:18: 7:24 error: mismatched types:\n expected `&amp;(i8, i8)`,\n    found `(_, _)`\n(expected &amp;-ptr,\n    found tuple) [E0308]\nsrc/main.rs:7             Some((i, c)) =&gt; println!(\"{}, {}\", i, c),\n                               ^~~~~~\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 8, "last_activity_date": 1448141385, "last_edit_date": 1448141385, "creation_date": 1448096086, "answer_id": 33841530, "question_id": 33836892, "link": "https://stackoverflow.com/questions/33836892/expected-ptr-found-tuple-while-iterating-over-an-array-of-tuples/33841530#33841530", "title": "Expected &amp;-ptr, found tuple while iterating over an array of tuples", "body": "<h3>The solution</h3>\n\n<p>There is quite something going on there. First the working code:</p>\n\n<pre><code>for &amp;(i, c) in &amp;adjacent { }\n</code></pre>\n\n<p>More detailed explanation follows.</p>\n\n<hr>\n\n<h3>The Problem</h3>\n\n<p>Your iterator is spitting out items of the type <code>&amp;(i8, i8)</code> which are references to the actual data. You tried to destructure it with the <code>(i, c)</code> pattern. This doesn't work because those are two different types; namely a reference to a tuple and a tuple. Hence, if you add the <code>&amp;</code> to your pattern, the type of the pattern and the item match and the compiler can happily destructure it for you.</p>\n\n<h3>How to solve this on your own the next time</h3>\n\n<p>The full error message is:</p>\n\n<pre><code>&lt;anon&gt;:11:5: 11:42 error: type mismatch resolving `&lt;core::slice::Iter&lt;'_, (i8, i8)&gt; as core::iter::Iterator&gt;::Item == (_, _)`:\n expected &amp;-ptr,\n    found tuple [E0271]\n&lt;anon&gt;:11     for (i, c) in adjacent.into_iter() {}\n              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n</code></pre>\n\n<p>This error message could actually be improved, but nevertheless: Let's dig into it. The compiler says it can't resolve an actual type (on the left, <code>core::slice::Iter&lt;'_, (i8, i8)&gt;</code>) as another type, that was somehow \"requested\" (on the right, <code>&lt;core::iter::Iterator&gt;::Item == (_, _)</code>). </p>\n\n<p>You \"requested\" an Iterator with the item type <code>(_, _)</code>, which makes sense because that's exactly what you wrote: <code>(i, c)</code>. And what about the type on the left? If we look it up <a href=\"http://doc.rust-lang.org/std/slice/struct.Iter.html\">in the documentation</a> we can see that it implements the <code>Iterator</code> trait with the <code>type Item = &amp;'a T</code>. We can ignore the explicit lifetime <code>'a</code> and just notice that it's a reference to the type parameter <code>T</code>. But we know what <code>T</code> is by looking at the error message: <code>core::slice::Iter&lt;'_, (i8, i8)&gt;</code>. So <code>T</code> is <code>(i8, i8)</code> and thus the item type of the iterator is <code>&amp;(i8, i8)</code>. </p>\n\n<h3>About <code>IntoIterator</code> and for loops</h3>\n\n<p>You used an explicit <code>.into_iterator()</code> call on the array. It's understandable why you did that: <code>for _ in adjacent</code> fails with the message </p>\n\n<pre><code>the trait `core::iter::Iterator` is not implemented for the type `[(i8, i8); 8]`\n</code></pre>\n\n<p>This is confusing: Why wouldn't you be able to iterate over an array of size 8? Indeed, to understand it, you have to know about how <code>for</code> loops work.</p>\n\n<p>The \"thing\" you want to iterate over has to either implement <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html\"><code>Iterator</code></a> directly or <a href=\"http://doc.rust-lang.org/std/iter/trait.IntoIterator.html\"><code>IntoIterator</code></a>. Most data structures (arrays, <code>Vec</code>, ...) don't implement <code>Iterator</code> directly, but <code>IntoIterator</code>. The <code>array</code> primitive does implement <code>IntoIterator</code>, too -- kinda. If we take a look at <a href=\"http://doc.rust-lang.org/std/primitive.array.html#implementations\">the documentation</a>, we can see that there are two implementations of <code>IntoIterator</code> for each array length:</p>\n\n<pre><code>impl&lt;'a, T&gt; IntoIterator for &amp;'a [T; 8]\n    type Item = &amp;'a T\n\nimpl&lt;'a, T&gt; IntoIterator for &amp;'a mut [T; 8]\n    type Item = &amp;'a mut T\n</code></pre>\n\n<p>Notice how this trait is not implemented for the array type directly, but for a reference to it. Also these implementations have a reference as the <code>Item</code> type. So why isn't <code>IntoIterator</code> implemented <code>for [T; 8]</code> directly? <strong>Because we cannot move out of an array</strong>. </p>\n\n<p>To fix this we write <code>&amp;adjacent</code> instead of <code>adjacent</code> -- a reference to the array. Then the compiler will find the correct implementation. Why does the manual <code>into_iterator</code> call work? Well... that's a whole different story, but in short: the <code>.</code> method call converts between value and reference types on it's own.</p>\n\n<p><strong>TL;DR</strong>: So if you have a data structure <code>adjacent</code> of some type (array, <code>Vec</code>, ...), you basically have three possibilities:</p>\n\n<ul>\n<li><code>for _ in &amp;adjacent</code>: You want to iterator over immutable references to the items. This is what you want most of the time!</li>\n<li><code>for _ in &amp;mut adjacent</code>: You want to iterator over mutable references in order to modify the items.</li>\n<li><code>for _ in adjacent</code>: You want to take ownership of the items and thus make the data structure unusable afterwards. The least common option! Doesn't even work for some data structures.</li>\n</ul>\n"}], "owner": {"reputation": 15257, "user_id": 1409312, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/4TCzB.jpg?s=128&g=1", "display_name": "Syntactic Fructose", "link": "https://stackoverflow.com/users/1409312/syntactic-fructose"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1944, "favorite_count": 0, "accepted_answer_id": 33841530, "answer_count": 2, "score": 4, "last_activity_date": 1448141385, "creation_date": 1448057388, "last_edit_date": 1448066796, "question_id": 33836892, "link": "https://stackoverflow.com/questions/33836892/expected-ptr-found-tuple-while-iterating-over-an-array-of-tuples", "title": "Expected &amp;-ptr, found tuple while iterating over an array of tuples", "body": "<p>I have an array:</p>\n\n<pre><code>const adjacent: [(i8, i8); 8] = \n    [(-1, -1), (-1, 0), (-1, 1), (-1, 0), (1, 0), (1, 1), (1, 0), (1, -1)];\n</code></pre>\n\n<p>This array represents all adjacent neighbors of a cell within a <em>ROW</em>x<em>COLUMN</em> grid. To iterate over this array to find all neighbors, I do</p>\n\n<pre><code>for k in adjacent.into_iter() {\n    let (i, c) = (k.0, k.1);\n    if let Some(a) = grid.get(r+i, j+c) {\n        /* ... */\n    }\n}\n</code></pre>\n\n<p>The second line seems like it could be substituted for K, but this causes an error if you write <code>for (i, c) in adjacency.into_iter() { ...</code></p>\n\n<pre><code>error: type mismatch resolving `&lt;core::slice::Iterator&gt;::Item == (_, _)`:\nexpected &amp;-ptr\nfound tuple\n</code></pre>\n\n<p>what's going on here? Can someone explain why I cannot do this? </p>\n"}, {"tags": ["file", "rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "is_accepted": true, "score": 8, "last_activity_date": 1514127372, "last_edit_date": 1514127372, "creation_date": 1448037357, "answer_id": 33831653, "question_id": 33831265, "link": "https://stackoverflow.com/questions/33831265/how-to-use-a-file-with-a-bufreader-and-still-be-able-to-write-to-it/33831653#33831653", "title": "How to use a file with a BufReader and still be able to write to it?", "body": "<p>To avoid moving a value, you can use a reference and a new scope.\nHere is how you could do this:</p>\n\n<pre><code>fn main() {\n    let filename = \"tt.txt\";\n\n    // open a tt.txt file in the local directory\n    let mut file = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(filename)\n        .unwrap();\n\n    // now read the whole file to get the latest state\n    let date_re = Regex::new(r\"^(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();\n    let time_activity_re = Regex::new(r\"^(\\d{2}):(\\d{2})\\s*(.*)\").unwrap();\n    {\n        // BufReader now borrows the value instead of taking ownership.\n        let reader = BufReader::new(&amp;mut file);\n        let mut latest_date: Option&lt;Date&lt;Local&gt;&gt; = None;\n        let mut latest_datetime: Option&lt;DateTime&lt;Local&gt;&gt; = None;\n        let mut latest_activity: Option&lt;String&gt; = None;\n\n        for wrapped_line in reader.lines() {\n            let line = wrapped_line.unwrap();\n            println!(\"line: {}\", line);\n\n            if date_re.is_match(&amp;line) {\n                let captures = date_re.captures(&amp;line).unwrap();\n                let year = captures.at(1).unwrap().parse::&lt;i32&gt;().unwrap();\n                let month = captures.at(2).unwrap().parse::&lt;u32&gt;().unwrap();\n                let day = captures.at(3).unwrap().parse::&lt;u32&gt;().unwrap();\n                latest_date = Some(Local.ymd(year, month, day));\n                latest_datetime = None;\n                latest_activity = None;\n            }\n\n            if time_activity_re.is_match(&amp;line) &amp;&amp; latest_date != None {\n                let captures = time_activity_re.captures(&amp;line).unwrap();\n                let hour = captures.at(1).unwrap().parse::&lt;u32&gt;().unwrap();\n                let minute = captures.at(2).unwrap().parse::&lt;u32&gt;().unwrap();\n                let activity = captures.at(3).unwrap();\n\n                latest_datetime = Some(latest_date.unwrap().and_hms(hour, minute, 0));\n\n                latest_activity = if activity.len() &gt; 0 {\n                    // TODO: if latest_activity already constains a string, clear it and reuse it\n                    // as per: https://stackoverflow.com/questions/33781625/how-to-allocate-a-string-before-you-know-how-big-it-needs-to-be\n                    Some(activity.to_string())\n                } else {\n                    None\n                };\n\n                println!(\"time activity: {} |{}|\", latest_datetime.unwrap(), activity);\n            }\n        }\n    }\n    // End of the scope, so now file is not borrowed anymore.\n\n    file.seek(End(0));\n\n    let now = Local::now();\n    if latest_date == None || latest_date.unwrap().year() != now.year()\n        || latest_date.unwrap().month() != now.month()\n        || latest_date.unwrap().day() != now.day()\n    {\n        if (latest_date != None) {\n            // not an empy file, as far as tt is concerned\n            file.write_all(b\"\\n\\n\");\n        }\n        file.write_all(format!(\"{}\\n\", now.format(\"%Y-%m-%d\")).as_bytes());\n        file.write_all(b\"\\n\");\n    }\n\n    let activity = env::args().skip(1).join(\" \");\n    if (activity.len() &gt; 0) {\n        file.write_all(format!(\"{} {}\\n\", now.format(\"%H:%M\"), activity).as_bytes());\n    } else {\n        // if there was no latest activity *and* there is no activity, then there's no point in writing a second blank line with just a time\n        if latest_activity == None {\n            return;\n        }\n        file.write_all(format!(\"{}\\n\", now.format(\"%H:%M\")).as_bytes());\n    }\n\n    // FIXME: we're just relying on the program exit to close the two file descriptors (which point at the same file).\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1589987265, "last_edit_date": 1589987265, "creation_date": 1514131705, "answer_id": 47962155, "question_id": 33831265, "link": "https://stackoverflow.com/questions/33831265/how-to-use-a-file-with-a-bufreader-and-still-be-able-to-write-to-it/47962155#47962155", "title": "How to use a file with a BufReader and still be able to write to it?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html#method.into_inner\" rel=\"nofollow noreferrer\"><code>BufReader::into_inner</code></a> to \"recover\" the file after it's been passed to the <code>BufReader</code>. This can be used in conjunction with <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.by_ref\" rel=\"nofollow noreferrer\"><code>Read::by_ref</code></a> to avoid giving away ownership of the <code>BufReader&lt;File&gt;</code> in the first place: </p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{BufRead, BufReader, Read, Write},\n};\n\nfn example(file: File) {\n    let mut reader = BufReader::new(file);\n    for _ in reader.by_ref().lines() {}\n\n    let mut out = reader.into_inner();\n\n    out.write_all(b\"new stuff\").unwrap();\n}\n</code></pre>\n\n<p>Here is <a href=\"https://stackoverflow.com/a/33831653/155423\">antoyo's solution</a> with similar reduced code:</p>\n\n<pre><code>use std::{\n    fs::File,\n    io::{BufRead, BufReader, Write},\n};\n\nfn example(mut file: File) {\n    let reader = BufReader::new(&amp;file);\n    for _ in reader.lines() {}\n    file.write_all(b\"new stuff\").unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 37702, "user_id": 129805, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/F1gxS.png?s=128&g=1", "display_name": "fadedbee", "link": "https://stackoverflow.com/users/129805/fadedbee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1295, "favorite_count": 3, "accepted_answer_id": 33831653, "answer_count": 2, "score": 7, "last_activity_date": 1589987265, "creation_date": 1448036124, "last_edit_date": 1514131109, "question_id": 33831265, "link": "https://stackoverflow.com/questions/33831265/how-to-use-a-file-with-a-bufreader-and-still-be-able-to-write-to-it", "title": "How to use a file with a BufReader and still be able to write to it?", "body": "<p>I want to open a file and read its contents as a <code>BufReader</code> using <code>lines()</code>. I also want to be able to seek to the end of the file and write some new lines.</p>\n\n<p>Using <code>let mut file</code> lets me write to the file, but once I've given the file to the <code>BufReader</code> I can no longer write to it, as the main function no longer owns <code>file</code>:</p>\n\n<pre><code>fn main() {\n    let filename = \"tt.txt\";\n\n    // open a tt.txt file in the local directory\n    let file = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(filename)\n        .unwrap();\n\n    // now read the whole file to get the latest state\n    let date_re = Regex::new(r\"^(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();\n    let time_activity_re = Regex::new(r\"^(\\d{2}):(\\d{2})\\s*(.*)\").unwrap();\n    let reader = BufReader::new(file);\n    let mut latest_date: Option&lt;Date&lt;Local&gt;&gt; = None;\n    let mut latest_datetime: Option&lt;DateTime&lt;Local&gt;&gt; = None;\n    let mut latest_activity: Option&lt;String&gt; = None;\n\n    for wrapped_line in reader.lines() {\n        let line = wrapped_line.unwrap();\n        println!(\"line: {}\", line);\n\n        if date_re.is_match(&amp;line) {\n            let captures = date_re.captures(&amp;line).unwrap();\n            let year = captures.at(1).unwrap().parse::&lt;i32&gt;().unwrap();\n            let month = captures.at(2).unwrap().parse::&lt;u32&gt;().unwrap();\n            let day = captures.at(3).unwrap().parse::&lt;u32&gt;().unwrap();\n            latest_date = Some(Local.ymd(year, month, day));\n            latest_datetime = None;\n            latest_activity = None;\n        }\n\n        if time_activity_re.is_match(&amp;line) &amp;&amp; latest_date != None {\n            let captures = time_activity_re.captures(&amp;line).unwrap();\n            let hour = captures.at(1).unwrap().parse::&lt;u32&gt;().unwrap();\n            let minute = captures.at(2).unwrap().parse::&lt;u32&gt;().unwrap();\n            let activity = captures.at(3).unwrap();\n\n            latest_datetime = Some(latest_date.unwrap().and_hms(hour, minute, 0));\n\n            latest_activity = if activity.len() &gt; 0 {\n                // TODO: if latest_activity already constains a string, clear it and reuse it\n                // as per: https://stackoverflow.com/questions/33781625/how-to-allocate-a-string-before-you-know-how-big-it-needs-to-be\n                Some(activity.to_string())\n            } else {\n                None\n            };\n\n            println!(\"time activity: {} |{}|\", latest_datetime.unwrap(), activity);\n        }\n    }\n\n    // FIXME: I have to open a second file descriptor to the same file, in order to be able to write to it\n    let mut out = OpenOptions::new()\n        .read(true)\n        .write(true)\n        .create(true)\n        .open(filename)\n        .unwrap();\n\n    out.seek(End(0));\n\n    let now = Local::now();\n    if latest_date == None || latest_date.unwrap().year() != now.year()\n        || latest_date.unwrap().month() != now.month()\n        || latest_date.unwrap().day() != now.day()\n    {\n        if (latest_date != None) {\n            // not an empy file, as far as tt is concerned\n            out.write_all(b\"\\n\\n\");\n        }\n        out.write_all(format!(\"{}\\n\", now.format(\"%Y-%m-%d\")).as_bytes());\n        out.write_all(b\"\\n\");\n    }\n\n    let activity = env::args().skip(1).join(\" \");\n    if (activity.len() &gt; 0) {\n        out.write_all(format!(\"{} {}\\n\", now.format(\"%H:%M\"), activity).as_bytes());\n    } else {\n        // if there was no latest activity *and* there is no activity, then there's no point in writing a second blank line with just a time\n        if latest_activity == None {\n            return;\n        }\n        out.write_all(format!(\"{}\\n\", now.format(\"%H:%M\")).as_bytes());\n    }\n\n    // FIXME: we're just relying on the program exit to close the two file descriptors (which point at the same file).\n}\n</code></pre>\n\n<p>How can I use a single file descriptor to read existing lines and append new lines?</p>\n\n<p>(Code from <a href=\"https://github.com/chrisdew/tt/blob/e899f252014391f2e01c3cc9e281cab1ab88936f/src/main.rs\" rel=\"nofollow noreferrer\">https://github.com/chrisdew/tt/blob/e899f252014391f2e01c3cc9e281cab1ab88936f/src/main.rs</a>)</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1447992372, "post_id": 33818141, "comment_id": 55403400, "body": "Where is the Rust code that doesn&#39;t work, links to documentation you don&#39;t understand, or any research whatsoever that shows that you tried to solve this problem on your own? Stack Overflow isn&#39;t intended as a &quot;write my code for me&quot; service."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1447992522, "post_id": 33818141, "comment_id": 55403457, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/32750829/passing-a-reference-to-a-stack-variable-to-a-scoped-thread\" title=\"passing a reference to a stack variable to a scoped thread\">stackoverflow.com/questions/32750829/&hellip;</a>."}], "answers": [{"comments": [{"owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "edited": false, "score": 0, "creation_date": 1542845775, "post_id": 33818407, "comment_id": 93718995, "body": "This brings up an interesting question: This solution didn&#39;t involve any atomic operators or guards. Does rust&#39;s threading model provide that all of the side effects of a thread are visible to other threads after that thread has joined? Is there a case where the worker threads could finish, but the main thread still sees the unchanged memory?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "edited": false, "score": 1, "creation_date": 1542847838, "post_id": 33818407, "comment_id": 93719423, "body": "@Lucretiel: I&#39;ve never seen an explicit guarantee written down, but threads would be horrifically broken if they didn&#39;t.  I&#39;m reasonably sure that synchronising the parent and child threads as the child threads terminate should be enough: they both need to agree that the child thread has finished, and those writes take place before said synchronisation."}, {"owner": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "edited": false, "score": 0, "creation_date": 1542847918, "post_id": 33818407, "comment_id": 93719438, "body": "Not necessarily; a lot of modern thread doctrine calls for the use of atomic data structures, like lockless queues, to communicate between threads. I believe that <code>std::thread</code> uses such a mechanism to pass return values from threads back to the <code>thread.join()</code>"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2348, "user_id": 864406, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/fd625e8a9c68a44bee8185847b7b59b0?s=128&d=identicon&r=PG", "display_name": "Lucretiel", "link": "https://stackoverflow.com/users/864406/lucretiel"}, "edited": false, "score": 2, "creation_date": 1542848103, "post_id": 33818407, "comment_id": 93719472, "body": "@Lucretiel: The main thread observing the &quot;I&#39;m done&quot; signal from the child thread implies it can also see the other writes it did <i>prior</i> to that signal.  It shouldn&#39;t matter if there&#39;s an explicit lock or not; what matters is that the two agree on what point in time they can both see.  If you&#39;re not convinced, you should open a new question: I&#39;m not an expert, and comments aren&#39;t an appropriate place for this."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 15, "last_activity_date": 1574831374, "last_edit_date": 1574831374, "creation_date": 1447989547, "answer_id": 33818407, "question_id": 33818141, "link": "https://stackoverflow.com/questions/33818141/how-do-i-pass-disjoint-slices-from-a-vector-to-different-threads/33818407#33818407", "title": "How do I pass disjoint slices from a vector to different threads?", "body": "<p>Let's start with the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// cargo-deps: crossbeam=\"0.7.3\"\nextern crate crossbeam;\n\nconst CHUNKS: usize = 10;\nconst CHUNK_SIZE: usize = 10;\n\nfn main() {\n    let mut table = [0; CHUNKS * CHUNK_SIZE];\n\n    // Scoped threads allow the compiler to prove that no threads will outlive\n    // table (which would be bad).\n    let _ = crossbeam::scope(|scope| {\n        // Chop `table` into disjoint sub-slices.\n        for slice in table.chunks_mut(CHUNK_SIZE) {\n            // Spawn a thread operating on that subslice.\n            scope.spawn(move |_| write_slice(slice));\n        }\n        // `crossbeam::scope` ensures that *all* spawned threads join before\n        // returning control back from this closure.\n    });\n\n    // At this point, all threads have joined, and we have exclusive access to\n    // `table` again.  Huzzah for 100% safe multi-threaded stack mutation!\n    println!(\"{:?}\", &amp;table[..]);\n}\n\nfn write_slice(slice: &amp;mut [i32]) {\n    for (i, e) in slice.iter_mut().enumerate() {\n        *e = i as i32;\n    }\n}\n</code></pre>\n\n<p>One thing to note is that this needs the <a href=\"https://crates.io/crates/crossbeam\" rel=\"nofollow noreferrer\"><code>crossbeam</code></a> crate.  Rust <em>used</em> to have a similar \"scoped\" construct, but a soundness hole was found <em>right</em> before 1.0, so it was deprecated with no time to replace it.  <code>crossbeam</code> is basically the replacement.</p>\n\n<p>What Rust lets you do here is express the idea that, whatever the code does, <em>none</em> of the threads created within the call to <code>crossbeam::scoped</code> will survive that scope.  As such, anything borrowed from <em>outside</em> that scope will live longer than the threads.  Thus, the threads can freely access those borrows without having to worry about things like, say, a thread outliving the stack frame that <code>table</code> is defined by and scribbling over the stack.</p>\n\n<p>So this should do more or less the same thing as the C code, though without that nagging worry that you <em>might</em> have missed something.  :)</p>\n\n<p>Finally, here's the same thing using <a href=\"https://crates.io/crates/scoped_threadpool\" rel=\"nofollow noreferrer\"><code>scoped_threadpool</code></a> instead.  The only real practical difference is that this allows us to control how many threads are used.</p>\n\n<pre><code>// cargo-deps: scoped_threadpool=\"0.1.6\"\nextern crate scoped_threadpool;\n\nconst CHUNKS: usize = 10;\nconst CHUNK_SIZE: usize = 10;\n\nfn main() {\n    let mut table = [0; CHUNKS * CHUNK_SIZE];\n\n    let mut pool = scoped_threadpool::Pool::new(CHUNKS as u32);\n\n    pool.scoped(|scope| {\n        for slice in table.chunks_mut(CHUNK_SIZE) {\n            scope.execute(move || write_slice(slice));\n        }\n    });\n\n    println!(\"{:?}\", &amp;table[..]);\n}\n\nfn write_slice(slice: &amp;mut [i32]) {\n    for (i, e) in slice.iter_mut().enumerate() {\n        *e = i as i32;\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1271, "user_id": 897956, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/910d6b81ae077c4af8d627a7cdab6520?s=128&d=identicon&r=PG", "display_name": "qinsoon", "link": "https://stackoverflow.com/users/897956/qinsoon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2579, "favorite_count": 3, "answer_count": 1, "score": 6, "last_activity_date": 1610020420, "creation_date": 1447987497, "last_edit_date": 1610020420, "question_id": 33818141, "link": "https://stackoverflow.com/questions/33818141/how-do-i-pass-disjoint-slices-from-a-vector-to-different-threads", "title": "How do I pass disjoint slices from a vector to different threads?", "body": "<p>I am new to Rust, and struggling to deal with all those wrapper types in Rust. I am trying to write code that is semantically equal to the following C code. The code tries to create a big table for book keeping, but will divide the big table so that every thread will only access their local small slices of that table. The big table will not be accessed unless other threads quit and no longer access their own slice.</p>\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n\nvoid* write_slice(void* arg) {\n    int* slice = (int*) arg;\n    int i;\n    for (i = 0; i &lt; 10; i++)\n        slice[i] = i;\n        \n    return NULL;\n}\n\nint main()\n{\n    int* table = (int*) malloc(100 * sizeof(int));\n    int* slice[10];\n    int i;\n    for (i = 0; i &lt; 10; i++) {\n      slice[i] = table + i * 10;\n    }\n    \n    // create pthread for each slice\n    pthread_t p[10];\n    for (i = 0; i &lt; 10; i++)\n        pthread_create(&amp;p[i], NULL, write_slice, slice[i]);\n    \n    for (i = 0; i &lt; 10; i++)\n        pthread_join(p[i], NULL);\n        \n    for (i = 0; i &lt; 100; i++)\n        printf(&quot;%d,&quot;, table[i]);\n}\n</code></pre>\n<p>How do I use Rust's types and ownership to achieve this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1447961951, "post_id": 33812706, "comment_id": 55391218, "body": "Why do you think the first way should be possible? A <code>BufWriterStruct&lt;W&gt;</code> return value means that the caller gets to choose what the function returns, but that&#39;s clearly not what happens in your method."}, {"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "reply_to_user": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 0, "creation_date": 1447962164, "post_id": 33812706, "comment_id": 55391358, "body": "Well in my actual case, I pass another parameter that would tell it what type to create. Like it would pass in a string like stream, file, etc, and the new would create that.  I just wanted new to do everything (create file/stream, do whatever inside it needs to, etc).  I could just move the creation of file/stream outside of new though.  But the more I think about it, I don&#39;t think the way I want to do it is possible."}], "answers": [{"comments": [{"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "edited": false, "score": 0, "creation_date": 1447962475, "post_id": 33813029, "comment_id": 55391525, "body": "Yeah. I think they way I want to do it is not possible.  I think I&#39;m just going to change it to where I pass a parameter that implements the <code>Write</code> trait. Then I can use it on <code>File</code>, <code>Stream</code>, etc."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 1, "last_activity_date": 1447981441, "last_edit_date": 1447981441, "creation_date": 1447962358, "answer_id": 33813029, "question_id": 33812706, "link": "https://stackoverflow.com/questions/33812706/creating-a-struct-with-a-generic-trait-for-field-expected-structtrait-found-s/33813029#33813029", "title": "Creating a struct with a generic trait for field. Expected struct&lt;trait&gt; found struct&lt;type that implements said trait&gt;", "body": "<pre><code>impl &lt;W: Write&gt;BufWriterStruct&lt;W&gt; {\n    pub fn new(filename: &amp;str) -&gt; BufWriterStruct&lt;W&gt;\n</code></pre>\n\n<p>This signature means that the following code would be valid:</p>\n\n<pre><code>let tmp : BufWriterStruct&lt;Stdout&gt; = BufWriterStruct::new(\"tmp.txt\");\n</code></pre>\n\n<p>However this would clearly not work with your implementation of <code>new</code>, as it produces a <code>BufWriterStruct&lt;File&gt;</code>, not <code>&lt;StdOut&gt;</code>. If you want to return a <code>BufWriterStruct&lt;File&gt;</code>, you should declare your <code>new</code> function accordingly:</p>\n\n<pre><code>pub fn new(filename: &amp;str) -&gt; BufWriterStruct&lt;File&gt;\n</code></pre>\n\n<p>However, this change alone will leave the <code>W</code> parameter on the <code>impl</code> block unconstrained, and the compiler will be unable to infer a type for it. The best solution for this would be to put the <code>new</code> method on a non-generic <code>impl</code>:</p>\n\n<pre><code>impl BufWriterStruct&lt;File&gt; {\n    pub fn new(filename: &amp;str) -&gt; BufWriterStruct&lt;File&gt; {\n        // ...\n    }\n}\n</code></pre>\n\n<p>Note that Rust doesn't support overloading (methods with the same name but different parameter lists), so if you had two <code>impl</code> blocks on the same type (disregarding generic parameters) each with a method named <code>new</code>, you'd get an error when trying to invoke one of them (as of Rust 1.4.0, merely defining methods with the same name in separate <code>impl</code> blocks is not a compile-time error). Therefore, you might wish to use a more explicit name than <code>new</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1448007966, "creation_date": 1448007966, "answer_id": 33822044, "question_id": 33812706, "link": "https://stackoverflow.com/questions/33812706/creating-a-struct-with-a-generic-trait-for-field-expected-structtrait-found-s/33822044#33822044", "title": "Creating a struct with a generic trait for field. Expected struct&lt;trait&gt; found struct&lt;type that implements said trait&gt;", "body": "<p>Your error is in mixing generic and specific:</p>\n\n<pre><code>impl &lt;W: Write&gt;BufWriterStruct&lt;W&gt; {\n    pub fn new(filename: &amp;str) -&gt; BufWriterStruct&lt;W&gt; {\n        BufWriterStruct {\n            writer: Some(BufWriter::new(File::create(filename).unwrap())),\n        }\n    }\n}\n</code></pre>\n\n<p>Here, your instance of <code>BufWriter</code> should accept a <code>W: Write</code>, which is decided <em>by the caller</em>, yet the function actually creates a <code>File</code>.</p>\n\n<p>Let the caller decide, instead:</p>\n\n<pre><code>impl &lt;W: Write&gt; BufWriterStruct&lt;W&gt; {\n    pub fn new(writer: W) -&gt; BufWriterStruct&lt;W&gt; {\n        BufWriterStruct {\n            writer: Some(BufWriter::new(writer)),\n        }\n    }\n}\n</code></pre>\n\n<p>Of course, this will change invocation a bit:</p>\n\n<pre><code>fn main() {\n    let tmp = BufWriterStruct::new(File::create(\"tmp.txt\").unwrap());\n}\n</code></pre>\n\n<p>And then <a href=\"https://play.rust-lang.org/?gist=f93dcc22f29b1bdbef4b&amp;version=stable\" rel=\"nofollow\">it'll work</a>.</p>\n"}], "owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2052, "favorite_count": 0, "accepted_answer_id": 33822044, "answer_count": 2, "score": 1, "last_activity_date": 1448007966, "creation_date": 1447961245, "last_edit_date": 1447992125, "question_id": 33812706, "link": "https://stackoverflow.com/questions/33812706/creating-a-struct-with-a-generic-trait-for-field-expected-structtrait-found-s", "title": "Creating a struct with a generic trait for field. Expected struct&lt;trait&gt; found struct&lt;type that implements said trait&gt;", "body": "<p>I'm trying to create a struct that has a <code>BufWriter</code> that uses the <code>Write</code> trait, so that this struct could have a buffered writer that can be anything that implements that trait: <code>File</code>, <code>Stream</code>, etc. But I'm having an issue in my function that creates the struct saying that I have <code>mismatched types</code>. Here is an example code with the same issue.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufWriter, Write};\n\npub struct BufWriterStruct&lt;W: Write&gt; {\n    pub writer: Option&lt;BufWriter&lt;W&gt;&gt;,\n}\n\nimpl &lt;W: Write&gt;BufWriterStruct&lt;W&gt; {\n    pub fn new(filename: &amp;str) -&gt; BufWriterStruct&lt;W&gt; {\n        BufWriterStruct {\n            writer: Some(BufWriter::new(File::create(filename).unwrap())),\n        }\n    }\n}\n\nfn main() {\n    let tmp = BufWriterStruct::new(\"tmp.txt\");\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=3cb9bffbf82c1b4ffa44&amp;version=stable\" rel=\"nofollow\">Playground</a></p>\n\n<p>with the error</p>\n\n<pre><code>error: mismatched types:\n expected `BufWriterStruct&lt;W&gt;`,\n    found `BufWriterStruct&lt;std::fs::File&gt;`\n</code></pre>\n\n<p>If instead I change my <code>new</code> function to instead take a parameter that implements the <code>Write</code> trait and use that when creating <code>BufWriter</code>, it works fine.</p>\n\n<p>I feel like the former should be possible to do somehow.</p>\n"}, {"tags": ["rust", "deadlock"], "comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1447965001, "post_id": 33809005, "comment_id": 55393042, "body": "Note: This panics even without the .unwrap() calls, so it truly panics on deadlock (not just returns error)."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1447950491, "post_id": 33809242, "comment_id": 55383904, "body": "And the reason that it is not guaranteed by the Rust language is likely that this would over-constrain some platform, at the cost of performance."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1447950678, "post_id": 33809242, "comment_id": 55384042, "body": "@MatthieuM. that sounds very reasonable. It seems that Rust is simply being pragmatic here and wrapping existing implementations instead of rewriting all of that difficult code. The designers probably had to walk a thin line between &quot;usefulness&quot; and &quot;lowest common denominator&quot;."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1447950219, "creation_date": 1447950219, "answer_id": 33809242, "question_id": 33809005, "link": "https://stackoverflow.com/questions/33809005/when-does-rwlock-panic-instead-of-doing-a-deadlock/33809242#33809242", "title": "When does RwLock panic instead of doing a deadlock?", "body": "<p>According to the <a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/libstd/sys/unix/rwlock.rs#L28-L38\" rel=\"noreferrer\">implementation</a>:</p>\n\n<pre><code>// According to the pthread_rwlock_rdlock spec, this function **may**\n// fail with EDEADLK if a deadlock is detected. On the other hand\n// pthread mutexes will *never* return EDEADLK if they are initialized\n// as the \"fast\" kind (which ours always are). As a result, a deadlock\n// situation may actually return from the call to pthread_rwlock_rdlock\n// instead of blocking forever (as mutexes and Windows rwlocks do). Note\n// that not all unix implementations, however, will return EDEADLK for\n// their rwlocks.\n//\n// We roughly maintain the deadlocking behavior by panicking to ensure\n// that this lock acquisition does not succeed.\n</code></pre>\n\n<p>Note that this comment only applies to the UNIX variants of the <code>RwLock</code> implementation, and the <a href=\"https://github.com/rust-lang/rust/blob/1.4.0/src/libstd/sys/windows/rwlock.rs\" rel=\"noreferrer\">Windows implementation</a> is allowed to differ. In fact, it has no <code>panic!</code> statements.</p>\n\n<p>Guessing a bit, I can assume that this is simply a best-effort attempt at reporting a common error case, and cannot be relied on for anything official.</p>\n"}], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 829, "favorite_count": 1, "accepted_answer_id": 33809242, "answer_count": 1, "score": 5, "last_activity_date": 1447950219, "creation_date": 1447949622, "last_edit_date": 1447950108, "question_id": 33809005, "link": "https://stackoverflow.com/questions/33809005/when-does-rwlock-panic-instead-of-doing-a-deadlock", "title": "When does RwLock panic instead of doing a deadlock?", "body": "<p>I noticed sometimes Rust panics to prevent a deadlock.\nFor instance, this code panics:</p>\n\n<pre><code>let rw_lock = RwLock::new(42);\n{\n    let data0 = rw_lock.write().unwrap();\n    let data1 = rw_lock.read().unwrap();\n    let data2 = rw_lock.read().unwrap();\n}\n</code></pre>\n\n<p>However, this does not (it causes a deadlock instead):</p>\n\n<pre><code>let rw_lock = RwLock::new(42);\n{\n    let data1 = rw_lock.read().unwrap();\n    let data2 = rw_lock.read().unwrap();\n    let data3 = rw_lock.write().unwrap();\n}\n</code></pre>\n\n<p>When does Rust panic instead of doing a deadlock?\nAnd why?</p>\n"}, {"tags": ["closures", "rust", "lifetime"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1447946041, "post_id": 33807396, "comment_id": 55380544, "body": "curious, it works if the closure is moved directly into the <code>take_while</code> call: <a href=\"http://is.gd/OgVK2i\" rel=\"nofollow noreferrer\">is.gd/OgVK2i</a>"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1447949640, "post_id": 33807396, "comment_id": 55383270, "body": "@ker, it works because you&#39;re doing a subtly different thing - you&#39;re using an implicit dereference in the pattern, which the original code does not."}], "answers": [{"comments": [{"owner": {"reputation": 2922, "user_id": 929981, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/66Mz4.png?s=128&g=1", "display_name": "jtepe", "link": "https://stackoverflow.com/users/929981/jtepe"}, "edited": false, "score": 2, "creation_date": 1448115382, "post_id": 33808821, "comment_id": 55453137, "body": "&quot;I had to add the full type of the argument too; as I said above, I think that the type inference is not powerful enough to deduce it.&quot; I ran into such errors a few times. It is always with closures in a let binding. There seems to be a difference in how they are instantiated. Not specifying the type of the parameter to be a reference then the resulting inferred reference seems to be early bound with the lifetime of the closure&#39;s scope, while specifying the type to be a reference results in a closure with the expected higher kinded lifetime."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 8, "last_activity_date": 1520345977, "last_edit_date": 1520345977, "creation_date": 1447949152, "answer_id": 33808821, "question_id": 33807396, "link": "https://stackoverflow.com/questions/33807396/type-mismatch-bound-lifetime-parameter-vs-concrete-lifetime-when-filling-a-c/33808821#33808821", "title": "Type mismatch &quot;bound lifetime parameter&quot; vs &quot;concrete lifetime&quot; when filling a collection from a closure", "body": "<p>This is in fact a borrowing error in disguise.</p>\n\n<p><a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#method.take_while\" rel=\"nofollow noreferrer\"><code>Iterator&lt;Item = T&gt;::take_while()</code></a> accepts a closure of kind <code>FnMut(&amp;T) -&gt; bool</code> - that is, it passes each element to the closure by reference. This is pretty much natural because <code>take_while()</code> must be able to yield the successfully tested element, so it can't pass it by value.</p>\n\n<p>This means that <code>insert</code> argument type is inferred to be <code>&amp;_</code>, and so <code>HashSet</code>'s generic parameter is also inferred as <code>&amp;_</code>. However, this means that you're attempting to store references to temporary values yielded by the <code>cycle()</code> iterator to a structure which lives much longer. This is not allowed by borrowing rules. Unfortunately, Rust doesn't show exactly this reasoning because for some reason it can't infer that the numeric type is <code>i32</code> and it also can't infer the correct lifetime parameter for the closure. That's what your error is about.</p>\n\n<p>Instead, your closure should dereference the argument before storing it to the set. <a href=\"https://play.rust-lang.org/?gist=03916b4611e4f7736948&amp;version=stable\" rel=\"nofollow noreferrer\">This works</a>:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let mut seq = HashSet::new();\n    let mut insert = |&amp;k: &amp;i32| seq.insert(k);\n    (1..10).cycle().take_while(insert);\n}\n</code></pre>\n\n<p>I had to add the full type of the argument too; as I said above, I think that the type inference is not powerful enough to deduce it.</p>\n\n<p>BTW, you can actually get the borrow checker error if you specify the type explicitly:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let mut seq = HashSet::new();\n    let mut insert = |k: &amp;i32| seq.insert(k);  // no dereference\n    (1..10).cycle().take_while(insert);\n}\n</code></pre>\n\n<p>The code above is equivalent to your original example except for the explicit type annotation, and it results in the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n --&gt; src/main.rs:5:43\n  |\n5 |     let mut insert = |k: &amp;i32| seq.insert(k);\n  |                                           ^\n  |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the body at 5:22...\n --&gt; src/main.rs:5:22\n  |\n5 |     let mut insert = |k: &amp;i32| seq.insert(k);\n  |                      ^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that expression is assignable (expected &amp;i32, found &amp;i32)\n --&gt; src/main.rs:5:43\n  |\n5 |     let mut insert = |k: &amp;i32| seq.insert(k);\n  |                                           ^\nnote: but, the lifetime must be valid for the block suffix following statement 1 at 5:5...\n --&gt; src/main.rs:5:5\n  |\n5 | /     let mut insert = |k: &amp;i32| seq.insert(k);\n6 | |     (1..10).cycle().take_while(insert);\n7 | | }\n  | |_^\nnote: ...so that variable is valid at time of its declaration\n --&gt; src/main.rs:5:9\n  |\n5 |     let mut insert = |k: &amp;i32| seq.insert(k);\n  |         ^^^^^^^^^^\n</code></pre>\n"}], "owner": {"reputation": 5847, "user_id": 2361316, "user_type": "registered", "accept_rate": 46, "profile_image": "https://i.stack.imgur.com/zmrBr.jpg?s=128&g=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/2361316/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 360, "favorite_count": 1, "accepted_answer_id": 33808821, "answer_count": 1, "score": 9, "last_activity_date": 1520345977, "creation_date": 1447945408, "last_edit_date": 1520345864, "question_id": 33807396, "link": "https://stackoverflow.com/questions/33807396/type-mismatch-bound-lifetime-parameter-vs-concrete-lifetime-when-filling-a-c", "title": "Type mismatch &quot;bound lifetime parameter&quot; vs &quot;concrete lifetime&quot; when filling a collection from a closure", "body": "<p>I am trying to find repetitions in an iterable sequence. Furthermore, I want to know the elements that occurred in that sequence up to that point. </p>\n\n<p>I created a <code>HashMap</code> and am trying to call <code>insert</code> on it from within a closure used by <code>take_while</code>. However, I have so far not managed to get it to compile due to type mismatches related to concrete / bound lifetimes.</p>\n\n<p>Here is a simplified version of my code which exhibits the same error:</p>\n\n<pre><code>use std::collections::HashSet;\n\nfn main() {\n    let mut seq = HashSet::new();\n    let mut insert = |k| seq.insert(k);\n    (1..10).cycle().take_while(insert);\n}\n</code></pre>\n\n<p>Here are the errors I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in closure arguments\n --&gt; src/main.rs:6:21\n  |\n5 |     let mut insert = |k| seq.insert(k);\n  |                      ----------------- found signature of `fn(_) -&gt; _`\n6 |     (1..10).cycle().take_while(insert);\n  |                     ^^^^^^^^^^ expected signature of `for&lt;'r&gt; fn(&amp;'r {integer}) -&gt; _`\n\nerror[E0271]: type mismatch resolving `for&lt;'r&gt; &lt;[closure@src/main.rs:5:22: 5:39 seq:_] as std::ops::FnOnce&lt;(&amp;'r {integer},)&gt;&gt;::Output == bool`\n --&gt; src/main.rs:6:21\n  |\n6 |     (1..10).cycle().take_while(insert);\n  |                     ^^^^^^^^^^ expected bound lifetime parameter, found concrete lifetime\n</code></pre>\n\n<p>How do I need to change the code for it to work?</p>\n"}, {"tags": ["rust", "gmp"], "comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 0, "creation_date": 1447936332, "post_id": 33802968, "comment_id": 55373408, "body": "Could you make a smaller more self contained example? E.g. <code>fn main() { let mut val = Mpf::new(...); val.set_from_si(0); println!(&quot;{}&quot;, __gmpf_cmp_ui(&amp;self.mpf, 0));</code>."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1447958419, "post_id": 33802968, "comment_id": 55389013, "body": "does the equivalent code in c work?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1448029452, "post_id": 33819536, "comment_id": 55422815, "body": "<i>on 64-bit platforms, they are typically 32-bits and 64-bits respectively</i> \u2014 that may be better stated as &quot;on 64-bit <b>Linux</b> and <b>OS X</b> platforms&quot;; Visual Studio on Windows treats <code>long</code> as 32-bit because of the previous transition from 16 to 32 bit :-)"}], "tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": true, "score": 3, "last_activity_date": 1447996825, "creation_date": 1447996825, "answer_id": 33819536, "question_id": 33802968, "link": "https://stackoverflow.com/questions/33802968/gmp-mpf-cmp-si-not-working-correctly-for-negative-values/33819536#33819536", "title": "GMP - mpf_cmp_si not working correctly for negative values", "body": "<p>The signature of <code>__gmpf_set_si</code> is incorrect. The C definition is:</p>\n\n<pre><code>void mpf_set_si (mpf_t rop, signed long int op)\n</code></pre>\n\n<p>And hence the Rust FFI declaration should use <code>c_long</code>, not <code>c_int</code>:</p>\n\n<pre><code>fn __gmpf_set_si(rop: mpf_ptr,op: c_long);\n</code></pre>\n\n<p>Making this change makes the output (plus a few extra prints) as follows:</p>\n\n<pre><code>Result of comparison of -10 (mpf) and -10 (signed int) = 0\nResult of comparison of -10 (mpf) and 0 (signed int) = -1\nResult of comparison of -10 (mpf) and 10 (signed int) = -1\nResult of comparison of 10 (mpf) and -10 (signed int) = 1\nResult of comparison of 10 (mpf) and 0 (signed int) = 1\nResult of comparison of 10 (mpf) and 10 (signed int) = 0\n</code></pre>\n\n<p>(NB. adding the comparisons against <code>-10</code>/<code>10</code> was how I got to the bottom of this: they failed for <code>-10</code> compared to <code>-10</code>.)</p>\n\n<p>The problem is <code>int</code> and <code>long</code> aren't necessarily the same: on 64-bit platforms, they are typically 32-bits and 64-bits respectively. In either case, the argument is passed in the same (64-bit) register, but the type mismatch means that the register is only initialised with a 32-bit -10, which is very different to a 64-bit one. The bit patterns of each are:</p>\n\n<pre><code>0000000000000000000000000000000011111111111111111111111111110110\n1111111111111111111111111111111111111111111111111111111111110110\n</code></pre>\n\n<p>When interpreted as a signed 64-bit integer (like <code>gmpf_set_si</code> does internally), the first one is 2<sup>32</sup> - 10 = 4294967286, which is exactly what <code>minus_ten</code> is initialised with:</p>\n\n<pre><code>extern crate libc;\nuse libc::{c_double, c_int, c_long, c_ulong, c_void,c_char};\nuse std::mem::uninitialized;\n\ntype mp_limb_t = usize; // TODO: Find a way to use __gmp_bits_per_limb instead.\ntype mp_bitcnt_t = c_ulong;\ntype mp_exp_t = c_long;\n\n#[link(name = \"gmp\")]\nextern \"C\" {\n    fn __gmpf_init2(x: mpf_ptr, prec: mp_bitcnt_t);\n    fn __gmpf_set_si(rop: mpf_ptr,op: c_int);\n    fn __gmp_printf(x: *const c_char, ...);\n}\n\n#[repr(C)]\npub struct mpf_struct {\n    _mp_prec: c_int,\n    _mp_size: c_int,\n    _mp_exp: mp_exp_t,\n    _mp_d: *mut c_void\n}\npub type mpf_ptr = *mut mpf_struct;\n\n\nfn main() {\n    unsafe{\n        let mut ten = uninitialized();\n        __gmpf_init2(&amp;mut ten,512);\n        __gmpf_set_si(&amp;mut ten,10);\n\n        let mut minus_ten = uninitialized();\n        __gmpf_init2(&amp;mut minus_ten,512);\n        __gmpf_set_si(&amp;mut minus_ten,-10);\n\n        __gmp_printf(b\"10 == %Ff\\n-10 == %Ff\\n\".as_ptr() as *const c_char,\n                     &amp;ten, &amp;minus_ten);\n    }\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>10 == 10.000000\n-10 == 4294967286.000000\n</code></pre>\n\n<p>As a final point, <a href=\"https://github.com/crabtw/rust-bindgen\" rel=\"nofollow\">rust-bindgen</a> is a great tool for avoiding errors in mechanical transcriptions like this: it will generate the right things based on a C header.</p>\n"}], "owner": {"reputation": 864, "user_id": 720223, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2468eeabd3c5c5ef41a86e79170c21e1?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/720223/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 33819536, "answer_count": 1, "score": 0, "last_activity_date": 1447996825, "creation_date": 1447933373, "last_edit_date": 1447938470, "question_id": 33802968, "link": "https://stackoverflow.com/questions/33802968/gmp-mpf-cmp-si-not-working-correctly-for-negative-values", "title": "GMP - mpf_cmp_si not working correctly for negative values", "body": "<p>I'm using the GNU multiple precision library through Rust, and I'm trying to write a wrapper for the mpf_sqrt() function.\nIn order to do so, I need to make sure the number is positive, but <code>mpf_cmp_si()</code> isn't behaving.</p>\n\n<p>EDIT: new example</p>\n\n<pre><code>extern crate libc;\nuse libc::{c_double, c_int, c_long, c_ulong, c_void,c_char};\nuse std::mem::uninitialized;\n\ntype mp_limb_t = usize; // TODO: Find a way to use __gmp_bits_per_limb instead.\ntype mp_bitcnt_t = c_ulong;\ntype mp_exp_t = c_long;\n\n#[link(name = \"gmp\")]\nextern \"C\" {\n    fn __gmpf_init2(x: mpf_ptr, prec: mp_bitcnt_t);\n    fn __gmpf_set_si(rop: mpf_ptr,op: c_int);\n    fn __gmpf_cmp_si(op1: mpf_srcptr, op2: c_long) -&gt; c_int;\n}\n\n#[repr(C)]\npub struct mpf_struct {\n    _mp_prec: c_int,\n    _mp_size: c_int,\n    _mp_exp: mp_exp_t,\n    _mp_d: *mut c_void\n}\n\npub type mpf_srcptr = *const mpf_struct;\npub type mpf_ptr = *mut mpf_struct;\n\nfn main() {\n    let mut ten:mpf_struct;\n    unsafe{\n        ten = uninitialized();\n        __gmpf_init2(&amp;mut ten,512);\n        __gmpf_set_si(&amp;mut ten,10);\n    }\n    let mut minus_ten:mpf_struct;\n    unsafe{\n        minus_ten = uninitialized();\n        __gmpf_init2(&amp;mut minus_ten,512);\n        __gmpf_set_si(&amp;mut minus_ten,-10);\n    }\n\n\n    // compare things\n    unsafe{\n        println!(\"Result of comparison of -10 (mpf) and 10 (signed int) = {}\",\n            __gmpf_cmp_si(&amp;minus_ten,10));\n        println!(\"Result of comparison of -10 (mpf) and 0 (signed int) = {}\",\n            __gmpf_cmp_si(&amp;minus_ten,0));\n        println!(\"Result of comparison of 10 (mpf) and 0 (signed int) = {}\",\n            __gmpf_cmp_si(&amp;ten,0));\n    }\n\n\n}\n</code></pre>\n\n<p>This returns:</p>\n\n<pre><code>Running `target/debug/so_test`\nResult of comparison of -10 (mpf) and 10 (signed int) = 1\nResult of comparison of -10 (mpf) and 0 (signed int) = 1\nResult of comparison of 10 (mpf) and 0 (signed int) = 1\n</code></pre>\n\n<p>According to the docs, this is the behavior:</p>\n\n<blockquote>\n<pre><code>Function: int mpf_cmp_si (const mpf_t op1, signed long int op2)\nCompare op1 and op2. Return a positive value if op1 &gt; op2, zero if op1 = op2, and a negative value if op1 &lt; op2.\n</code></pre>\n</blockquote>\n\n<p>I'm running rust 1.4.0, and GMP 6.1.0-1 on x64 Linux</p>\n\n<p>Old code:</p>\n\n<blockquote>\n<pre><code>    pub fn sqrt(self) -&gt; Mpf {\n    let mut retval:Mpf;\n    unsafe {\n        retval = Mpf::new(__gmpf_get_prec(&amp;self.mpf) as usize);\n        retval.set_from_si(0);\n        if __gmpf_cmp_ui(&amp;self.mpf,0) &gt; 0 {\n            __gmpf_sqrt(&amp;mut retval.mpf,&amp;self.mpf);\n        } else {\n            panic!(\"Square root of negative/zero\");\n        }\n    }\n    retval\n}\n</code></pre>\n  \n  <p>the mpf struct is defined like this:</p>\n\n<pre><code>#[repr(C)]\npub struct mpf_struct {\n    _mp_prec: c_int,\n    _mp_size: c_int,\n    _mp_exp: mp_exp_t,\n    _mp_d: *mut c_void\n} and the function from gmp is imported like this:\n\n#[link(name = \"gmp\")]\nextern \"C\" {\n    fn __gmpf_cmp_si(op1: mpf_srcptr, op2: c_long) -&gt; c_int;\n\n}\n</code></pre>\n  \n  <p>The problem I'm having is that <code>mpf_cmp_si</code> (which is exposed to Rust\n  as <code>__gmpf_cmp_si</code>) doesn't return negative when it should.</p>\n  \n  <p>This function should return negative if the value of my mpf is less\n  than 0. But it doesn't so the function divides by zero and crashes (an\n  \"unknown error\", not because of the panic!() call)</p>\n</blockquote>\n"}, {"tags": ["c#", ".net", "serialization", "f#", "rust"], "comments": [{"owner": {"reputation": 12857, "user_id": 1282539, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d73911f3fb624361e7d39b82f9395cc1?s=128&d=identicon&r=PG", "display_name": "SimpleVar", "link": "https://stackoverflow.com/users/1282539/simplevar"}, "edited": false, "score": 0, "creation_date": 1447920066, "post_id": 33797958, "comment_id": 55362362, "body": "If the basic types <code>int</code> <code>double</code> <code>char</code> etc are the same byte size and bit-format between the languages, everything should work as expected."}, {"owner": {"reputation": 266, "user_id": 2669614, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/c01c17d70ba9d15c84bda553e48002ba?s=128&d=identicon&r=PG", "display_name": "Bovaz", "link": "https://stackoverflow.com/users/2669614/bovaz"}, "edited": false, "score": 0, "creation_date": 1447920194, "post_id": 33797958, "comment_id": 55362429, "body": "As far as I know, BinaryWriter and BinaryReader are the most portable way to do what you describe. Serializing with the formatters from System.Runtime.Serialization is is my experience only good if you put them in their own library/dll because they bother you if you move between namespaces."}, {"owner": {"reputation": 75, "user_id": 5555910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fcef5feb50030b968104ebdeb7727f4?s=128&d=identicon&r=PG&f=1", "display_name": "whitebox", "link": "https://stackoverflow.com/users/5555910/whitebox"}, "reply_to_user": {"reputation": 12857, "user_id": 1282539, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d73911f3fb624361e7d39b82f9395cc1?s=128&d=identicon&r=PG", "display_name": "SimpleVar", "link": "https://stackoverflow.com/users/1282539/simplevar"}, "edited": false, "score": 0, "creation_date": 1447920293, "post_id": 33797958, "comment_id": 55362472, "body": "@SimpleVar Can you elaborate on the term <code>bit-format</code>?"}, {"owner": {"reputation": 12857, "user_id": 1282539, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/d73911f3fb624361e7d39b82f9395cc1?s=128&d=identicon&r=PG", "display_name": "SimpleVar", "link": "https://stackoverflow.com/users/1282539/simplevar"}, "edited": false, "score": 1, "creation_date": 1447920411, "post_id": 33797958, "comment_id": 55362526, "body": "Like for example <code>double</code> has some &quot;float&quot; bits and exp bits and sign bit and those sections have certain logic, with specific lengths and locations. Not sure if those rules might vary between languages or architectures. The safest route would be to implement your own <code>ReadBin</code> and <code>WriteBin</code> for every type, and use equivalent implementations between the different languages. Otherwise consider using Json."}, {"owner": {"reputation": 48129, "user_id": 76051, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/AGDxz.jpg?s=128&g=1", "display_name": "Carsten", "link": "https://stackoverflow.com/users/76051/carsten"}, "edited": false, "score": 0, "creation_date": 1447920425, "post_id": 33797958, "comment_id": 55362529, "body": "seems like a job for <a href=\"https://nessos.github.io/FsPickler/\" rel=\"nofollow noreferrer\">FsPickler</a> and probably a non-binary format (I am aware that it don&#39;t won&#39;t to be a cross-plattform framework - but it works anyway ;))"}], "answers": [{"tags": [], "owner": {"reputation": 13386, "user_id": 5114784, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/OcTVf.jpg?s=128&g=1", "display_name": "Gy&#246;rgy K\u0151szeg", "link": "https://stackoverflow.com/users/5114784/gy%c3%b6rgy-k%c5%91szeg"}, "is_accepted": true, "score": 5, "last_activity_date": 1447921248, "last_edit_date": 1447921248, "creation_date": 1447920604, "answer_id": 33798348, "question_id": 33797958, "link": "https://stackoverflow.com/questions/33797958/are-the-raw-bytes-written-by-net-system-io-binarywriter-readable-by-other-platf/33798348#33798348", "title": "Are the raw bytes written by .NET System.IO.BinaryWriter readable by other platforms?", "body": "<p>It depends on the types you write with the <code>BinaryWriter</code>.</p>\n\n<ul>\n<li><code>byte</code>, <code>sbyte</code> and <code>byte[]</code>: no problem.</li>\n<li><code>(U)IntXX</code>: matter of endianness. The .NET <code>BinaryWriter</code> dumps these types in little endian format.</li>\n<li><code>float</code> and <code>double</code>: If both systems use the same IEEE 754 standard, and both systems use the same endianness, then it is no problem.</li>\n<li><code>decimal</code>: This is a .NET-specific type, similar to <code>Currency</code> but uses different format. Use carefully.</li>\n<li><code>char</code> and <code>char[]</code>: Uses the current <code>Encoding</code> of the <code>BinaryWriter</code>. Use the same encoding on both sides and everything is alright.</li>\n<li><code>string</code>: The length of the string is encoded in the so-called <em>7 bit-encoded int</em> format (1 byte for up to 127 chars, etc), <em>and</em> uses the current encoding. To make things compatible maybe you should dump character arrays with manually dumped length information.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 6266, "user_id": 5497207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34e185da0f69447ef588089e15e15198?s=128&d=identicon&r=PG&f=1", "display_name": "Oguz Ozgul", "link": "https://stackoverflow.com/users/5497207/oguz-ozgul"}, "is_accepted": false, "score": 3, "last_activity_date": 1447920875, "creation_date": 1447920875, "answer_id": 33798418, "question_id": 33797958, "link": "https://stackoverflow.com/questions/33797958/are-the-raw-bytes-written-by-net-system-io-binarywriter-readable-by-other-platf/33798418#33798418", "title": "Are the raw bytes written by .NET System.IO.BinaryWriter readable by other platforms?", "body": "<p>Yes, you can.</p>\n\n<pre><code>bool     --&gt; 0 | 1\nsbyte    --&gt; x\nbyte[]   --&gt; xxxxxx\nchar[]   --&gt; encoding.getbytes(char[])\nbyte     --&gt; x\nchar     --&gt; \ndecimal  --&gt; decimal.GetBytes(), 16 bytes, should see the System.Decimal class code\ndouble   --&gt; 8 bytes, should see the System.Double class code\nshort    --&gt; 2 bytes, &lt;lsb&gt;&lt;msb&gt;\nint      --&gt; 4 byets, &lt;lsb&gt;xx&lt;msb&gt;\nlong     --&gt; 8 bytes, &lt;lsb&gt;xxxxxx&lt;msb&gt;\nfloat    --&gt; 4 bytes, should see the System.Single class code\nstring   --&gt; 7 bit encoded length (variable size) + encoding.GetBytes(), see 7 bit encoding method below\nushort   --&gt; same as short\nuint     --&gt; same as int\nulong    --&gt; same as long\n</code></pre>\n\n<p>For numeric types, data is written in <a href=\"https://en.wikipedia.org/wiki/Endianness#Endianness_in_networking\" rel=\"nofollow\">Little Endian Format</a></p>\n\n<pre><code>protected void Write7BitEncodedInt(int value)\n{\n    uint num = (uint) value;\n    while (num &gt;= 0x80)\n    {\n        this.Write((byte) (num | 0x80));\n        num = num &gt;&gt; 7;\n    }\n    this.Write((byte) num);\n}\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 5555910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fcef5feb50030b968104ebdeb7727f4?s=128&d=identicon&r=PG&f=1", "display_name": "whitebox", "link": "https://stackoverflow.com/users/5555910/whitebox"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 604, "favorite_count": 1, "accepted_answer_id": 33798348, "answer_count": 2, "score": 3, "last_activity_date": 1447921248, "creation_date": 1447919296, "question_id": 33797958, "link": "https://stackoverflow.com/questions/33797958/are-the-raw-bytes-written-by-net-system-io-binarywriter-readable-by-other-platf", "title": "Are the raw bytes written by .NET System.IO.BinaryWriter readable by other platforms?", "body": "<h1>Background</h1>\n\n<p>I am manually writing a large data block into a binary file with <code>System.IO.BinaryWriter</code>. I have chosen this due to the improved performance compared to a wide variety of other means of serialization &amp; deserialization (I am currently deserializing with <code>System.IO.BinaryReader</code>).</p>\n\n<h1>Question</h1>\n\n<p>I may need to use the serialized formats in other programming languages like <code>Java</code> and/or <code>Rust</code>. Would they be able to understand the raw binary written by <code>System.IO.BinaryWriter</code> and read it in a similar manner to .NETs 'System.IO.BinaryReader'? </p>\n\n<p>(I am assuming that the new plaforms (Java/Rust) will have implicit knowledge of the specific order in which the raw binary was written.)</p>\n\n<h1>Side Info</h1>\n\n<p>I am aware that protocol buffers is meant to be a performant and language agnostic framework for serializing/deserializing in this scenario but:\n(1) I am using F# and it struggles with the discriminated unions\n(2) It wasn't really that much effort to write my own custom serializer as my types aren't too complex</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 1, "last_activity_date": 1447918846, "last_edit_date": 1447918846, "creation_date": 1447903215, "answer_id": 33794673, "question_id": 33794138, "link": "https://stackoverflow.com/questions/33794138/is-there-any-way-cast-to-a-generic-t-where-t-is-an-arbitrary-trait-type/33794673#33794673", "title": "Is there any way cast to a generic T, where T is an arbitrary trait type?", "body": "<p>The fundamental problem here is that traits aren't types.  When you say <code>&amp;BehaviourA</code>, you're not referring to the trait, you're referring to the <em>object-safe type</em> which is <em>derived</em> from the trait.  What you need to do is tell Rust that <code>T</code> isn't a type, but a trait.</p>\n\n<p>Tragically, as of 1.6, there's still no way of doing this.</p>\n\n<p>The only way I know of to make something like this work is explicitly, <em>a-la</em> COM: you need a base interface that allows you to ask \"cast to a reference to <code>X</code>\", then implement that on each concrete type for all supported <code>X</code>.</p>\n\n<p>If you're willing to dip into unsafe, messy code, you can get something <em>vaguely</em> like what you want with some macros (<a href=\"http://is.gd/Bp3zvb\" rel=\"nofollow\">playpen</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Requires nightly compiler, since it depends on implementation details.\n#![feature(raw)]\n\nuse std::any::TypeId;\nuse std::mem::transmute;\nuse std::raw::TraitObject;\n\nmacro_rules! qi {\n    ($e:expr, $t:ty) =&gt; {\n        unsafe {\n            let iid = TypeId::of::&lt;$t&gt;();\n            let ptr = &amp;$e;\n            match ptr.query_interface(&amp;iid) {\n                Some(to) =&gt; {\n                    let tmp: &amp;$t = transmute(to);\n                    Some(tmp)\n                },\n                None =&gt; None,\n            }\n        }\n    };\n}\n\nmacro_rules! impl_unknown_for {\n    ($base:ty: $($ints:ty),*) =&gt; {\n        unsafe impl Unknown for $base {\n            fn query_interface(&amp;self, iid: &amp;TypeId) -&gt; Option&lt;TraitObject&gt; {\n                unsafe {\n                    $(\n                        if *iid == TypeId::of::&lt;$ints&gt;() {\n                            let to = transmute::&lt;&amp;$ints, _&gt;(self);\n                            return Some(to);\n                        }\n                    )*\n                    None\n                }\n            }\n        }\n    };\n}\n\nunsafe trait Unknown {\n    fn query_interface(&amp;self, iid: &amp;TypeId) -&gt; Option&lt;TraitObject&gt;;\n}\n\ntrait BehaviourA { fn a(&amp;self); }\ntrait BehaviourB { fn b(&amp;self); }\ntrait BehaviourC { fn c(&amp;self); }\n\nstruct Thingy;\n\nimpl_unknown_for!(Thingy: BehaviourA, BehaviourC);\n\nimpl BehaviourA for Thingy {\n    fn a(&amp;self) { println!(\"Thingy::a\"); }\n}\n\nimpl BehaviourC for Thingy {\n    fn c(&amp;self) { println!(\"Thingy::c\"); }\n}\n\nfn main() {\n    let obj: Box&lt;Unknown&gt; = Box::new(Thingy);\n    if let Some(ba) = qi!(obj, BehaviourA) { ba.a(); }\n    if let Some(bb) = qi!(obj, BehaviourB) { bb.b(); }\n    if let Some(bc) = qi!(obj, BehaviourC) { bc.c(); }\n}\n</code></pre>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 574, "favorite_count": 0, "accepted_answer_id": 33794673, "answer_count": 1, "score": 0, "last_activity_date": 1447918846, "creation_date": 1447899589, "last_edit_date": 1495540745, "question_id": 33794138, "link": "https://stackoverflow.com/questions/33794138/is-there-any-way-cast-to-a-generic-t-where-t-is-an-arbitrary-trait-type", "title": "Is there any way cast to a generic T, where T is an arbitrary trait type?", "body": "<p>My question title is a little vague, but in essence I want to achieve the following:</p>\n\n<ul>\n<li>struct Foo implements BehaviourA and BehaviourB and BehaviourC</li>\n<li>struct Bar implements BehaviourA </li>\n<li>Both Foo and Bar implement some Content trait</li>\n<li>From a <code>&amp;Content</code> get a reference to a behaviour, if it is implemented.</li>\n</ul>\n\n<p>This is broadly speaking possible by forcing <code>Content</code> to know explicitly about <code>BehaviourA</code>, etc. like:</p>\n\n<pre><code>fn as_a(&amp;self) -&gt; Option&lt;&amp;BehaviourA&gt;\n</code></pre>\n\n<p>However, this requires that the <code>Content</code> type explicitly knows about all behaviour types, which is not possible if <code>Content</code> is exported as an api in a crate.</p>\n\n<p>Ideally <code>Content</code> would have an api like:</p>\n\n<pre><code>fn behaviour&lt;T&gt;(&amp;self) -&gt; Option&lt;T&gt; where T: Any;\n</code></pre>\n\n<p>Which could be invoked at runtime as:</p>\n\n<pre><code>match content_item.behaviour::&lt;&amp;BehaviourA&gt;() {\n  Some(x) =&gt; { ... },\n  None =&gt; {}\n}\n</code></pre>\n\n<p>However, I cannot find any way to implement this function.</p>\n\n<p>My best attempt reads like this:</p>\n\n<pre><code>fn behaviour&lt;T&gt;(&amp;self) -&gt; Option&lt;T&gt; where T: Any {\n  let own_type = TypeId::of::&lt;T&gt;();\n  if own_type == TypeId::of::&lt;Behaviour&gt;() { return Some(self as T); }\n  return None;\n}\n</code></pre>\n\n<p>But this results in:</p>\n\n<pre><code>src/foo.rs:21:62: 21:71 error: non-scalar cast: `&amp;interface::test::Foo` as `T`\nsrc/foo.rs:21       if own_type == TypeId::of::&lt;Behaviour&gt;() { return Some(self as T); }\n</code></pre>\n\n<p>I appreciate there is no way to introspect a list of traits on an object at runtime, but here I'm explicitly casting to a known type in the implementation; it's simply that the bound T is not always satisfied. </p>\n\n<p>Is there any way of doing this at all, even unsafely?</p>\n\n<p>An example playpen showing the error is here: <a href=\"http://is.gd/fZNFA8\" rel=\"nofollow noreferrer\">http://is.gd/fZNFA8</a></p>\n\n<p>(NB. I have seen <a href=\"https://stackoverflow.com/questions/28845351/can-you-restrict-a-generic-to-t-where-t-is-a-trait-implemented-by-self\">Can you restrict a generic to T where T is a trait implemented by Self?</a>, but my question is different; in a nutshell, is there any way, even unsafely to generate a trait reference at runtime?)</p>\n"}]