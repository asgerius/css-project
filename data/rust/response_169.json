[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522876656, "post_id": 49660467, "comment_id": 86330743, "body": "I believe this question to already be answered by <a href=\"https://stackoverflow.com/q/38739088/155423\">Is it possible to declare arrays without an explicit length?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/49660467/edit\">edit</a> your question to explain the differences."}, {"owner": {"reputation": 1007, "user_id": 1492438, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/7325419e84423ed747537a35903ab237?s=128&d=identicon&r=PG", "display_name": "Astinog", "link": "https://stackoverflow.com/users/1492438/astinog"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522877671, "post_id": 49660467, "comment_id": 86331248, "body": "@Shepmaster my question is a bit different. Essentially the size of the array should be inferred by the type itself."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1522878174, "creation_date": 1522878174, "answer_id": 49660911, "question_id": 49660467, "link": "https://stackoverflow.com/questions/49660467/how-can-i-initialize-an-array-with-a-length-inferred-from-the-variables-type/49660911#49660911", "title": "How can I initialize an array with a length inferred from the variable&#39;s type?", "body": "<p>You cannot infer the length of an array because it is an expression that must be evaluated at compilation time. As far as I can figure, the concept of an \"inferred expression\" doesn't make sense.</p>\n\n<blockquote>\n  <p>I may want to change the size of my array type</p>\n</blockquote>\n\n<p>You can avoid this being a problem by introducing a constant:</p>\n\n<pre><code>const N_REGISTERS: usize = 16;\ntype Registers = [u8; N_REGISTERS];\n\nfn main() {\n    let mut registers: Registers = [0; N_REGISTERS];\n}\n</code></pre>\n\n<p>You could also use the <code>Default</code> implementation of an array, but only for <a href=\"https://doc.rust-lang.org/std/primitive.array.html#impl-Default-30\" rel=\"noreferrer\">certain sizes of array</a> and only if you want the default value of your array's element type:</p>\n\n<pre><code>type Registers = [u8; 16];\n\nfn main() {\n    let mut registers = Registers::default();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 2, "last_activity_date": 1522879555, "creation_date": 1522879555, "answer_id": 49661159, "question_id": 49660467, "link": "https://stackoverflow.com/questions/49660467/how-can-i-initialize-an-array-with-a-length-inferred-from-the-variables-type/49661159#49661159", "title": "How can I initialize an array with a length inferred from the variable&#39;s type?", "body": "<p>As long as <a href=\"https://github.com/rust-lang/rust/issues/44580\" rel=\"nofollow noreferrer\">const generics</a> are unavailable, <code>Default</code> will not be implemented for all array types. This makes array initialization not very ergonomic, as you have experienced.</p>\n\n<p>As a commonly employed alternative, you can turn the type alias into a newtype, with which you can isolate array initialization to a single point in the code.</p>\n\n<pre><code>pub struct Registers(pub [u8; 16]);\n\nimpl Default for Registers {\n    fn default() -&gt; Self {\n        Registers([0; 16])\n    }\n}\n</code></pre>\n\n<p>At this point, and depending on your use case, you can also implement other useful traits for this type, such as <code>AsRef&lt;u8&gt;</code> and <code>AsMut&lt;u8&gt;</code>.</p>\n\n<pre><code>impl AsRef&lt;[u8]&gt; for Registers {\n    fn as_ref(&amp;self) -&gt; &amp;[u8] {\n        self.0.as_ref()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1007, "user_id": 1492438, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/7325419e84423ed747537a35903ab237?s=128&d=identicon&r=PG", "display_name": "Astinog", "link": "https://stackoverflow.com/users/1492438/astinog"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 898, "favorite_count": 0, "accepted_answer_id": 49660911, "answer_count": 2, "score": 1, "last_activity_date": 1522879555, "creation_date": 1522876136, "last_edit_date": 1522878246, "question_id": 49660467, "link": "https://stackoverflow.com/questions/49660467/how-can-i-initialize-an-array-with-a-length-inferred-from-the-variables-type", "title": "How can I initialize an array with a length inferred from the variable&#39;s type?", "body": "<p>I have a custom type for an array and I want to initialize a variable of that type. It looks something like this:</p>\n\n<pre><code>type Registers = [u8; 16];\n\nfn main() {\n    let mut registers: Registers;\n}\n</code></pre>\n\n<p>I do not want to do something like the following because at some point I may want to change the size of my array type:</p>\n\n<pre><code>let mut registers: Registers = [0; 16];\n</code></pre>\n\n<p>Is there any way to use just the name of the type to initialize the variable? Am I forced to specify the initialization just like above?</p>\n\n<p>My question is a bit different from <a href=\"https://stackoverflow.com/q/40107797/155423\">Can array lengths be inferred in Rust?</a> because the size of the array should be inferred from the type itself, not the type of the array inferred from the value.</p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1522862891, "post_id": 49656792, "comment_id": 86323019, "body": "Highly relevant: <a href=\"https://stackoverflow.com/q/27043268/1233251\">stackoverflow.com/q/27043268/1233251</a> and <a href=\"https://stackoverflow.com/q/47178016/1233251\">stackoverflow.com/q/47178016/1233251</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1522864900, "post_id": 49656792, "comment_id": 86324174, "body": "It is good practice to make a reproducible example in the <a href=\"//play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>, so that it can be run by everyone."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1522864911, "post_id": 49656792, "comment_id": 86324188, "body": "Also, yes, naming conventions are in the <a href=\"https://rust-lang-nursery.github.io/api-guidelines/naming.html\" rel=\"nofollow noreferrer\">Rust API guidelines</a>."}], "answers": [{"comments": [{"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1522863979, "post_id": 49656964, "comment_id": 86323653, "body": "where can I find more info about the &quot;turbofish&quot; ::&lt;&gt; ? The parse documentation had just some light info about it and google didn&#39;t help much"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1522864317, "post_id": 49656964, "comment_id": 86323837, "body": "@OmarAbid It&#39;s just a somewhat strange syntax to pass type arguments. <code>parse</code> is defined as <code>parse&lt;T&gt;() {...}</code> and <code>parse::&lt;f32&gt;</code> is a way to explicitly say that <code>T</code> should be <code>f32</code>. The more intuitive syntax <code>parse&lt;f32&gt;</code> would have led to grammar ambiguities with the <code>&lt;</code> and <code>&gt;</code> operators, so the &quot;turbofish&quot; was introduced instead."}, {"owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1522865313, "post_id": 49656964, "comment_id": 86324412, "body": "I don&#39;t get it. parse is not getting any arguments. But we are here talking about the return type?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1522865513, "post_id": 49656964, "comment_id": 86324508, "body": "@OmarAbid The point here is that Rust can infer parameter types from its &quot;surroundings&quot;, not just from passed arguments. If we do <code>let x: i32 = &quot;5&quot;.parse()?;</code>, the compiler can infer that <code>T</code> is <code>i32</code>. Regarding the turbofish, there is a brief mention in <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>Iterator#collect</code></a>, where it is also commonly used."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "edited": false, "score": 0, "creation_date": 1522865565, "post_id": 49656964, "comment_id": 86324530, "body": "@OmarAbid It is getting type arguments. As I said <code>parse</code> is defined as <code>parse&lt;T&gt;() -&gt; T {...}</code> (except I accidentally left out the <code>-&gt; T</code> in my previous comment). So we have 0 value arguments (<code>()</code>), but one type argument <code>&lt;T&gt;</code>. Some times type arguments can be inferred, but when they can&#39;t, you&#39;ll have to supply them manually."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 8, "last_activity_date": 1522862732, "creation_date": 1522862732, "answer_id": 49656964, "question_id": 49656792, "link": "https://stackoverflow.com/questions/49656792/why-do-i-get-the-error-the-type-of-this-value-must-be-known-in-this-context-wh/49656964#49656964", "title": "Why do I get the error &quot;the type of this value must be known in this context&quot; when parsing a string to a number?", "body": "<p>The thing is that <code>parse</code> isn't just defined for <code>f32</code>. <code>parse</code> can define all kind of types (specifically any type that implements <code>FromStr</code>). So how does Rust know that <code>parse</code> should return <code>f32</code> and not for some other type?</p>\n\n<p>In your first example it knows this because <code>oneStep</code> is declared to have type <code>f32</code>, so Rust can infer that it should call <code>parse</code> with <code>f32</code> as its type argument. In the second example <code>f32</code> isn't mentioned anywhere in the code, so Rust couldn't possibly figure it out.</p>\n\n<p>Instead of inferring the type argument from the type of a variable, you can also pass it directly. That way it will work in a single step:</p>\n\n<pre><code>let singleStep: u32 = \"4.0\".parse::&lt;f32&gt;().unwrap() as u32;\n</code></pre>\n"}], "owner": {"reputation": 14666, "user_id": 12637, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2f3ca6058f9534dfed473cf31341c644?s=128&d=identicon&r=PG", "display_name": "Omar Abid", "link": "https://stackoverflow.com/users/12637/omar-abid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 49656964, "answer_count": 1, "score": 4, "last_activity_date": 1522863938, "creation_date": 1522862088, "last_edit_date": 1522863938, "question_id": 49656792, "link": "https://stackoverflow.com/questions/49656792/why-do-i-get-the-error-the-type-of-this-value-must-be-known-in-this-context-wh", "title": "Why do I get the error &quot;the type of this value must be known in this context&quot; when parsing a string to a number?", "body": "<p>I'm not trying to write sophisticated code, I just want to understand what is (or is not) going on here. I checked other questions but they all had complicated situations and I think this situation is the simplest so far.</p>\n\n<p>I have the following code:</p>\n\n<pre><code>let one_step: f32 = \"4.0\".parse().unwrap();\nlet extra_step: u32 = one_step as u32;\n\nprintln!(\"{:?}\", extra_step);\n</code></pre>\n\n<p>The way I see it, we have a <code>&amp;str</code>, we parse it to a <code>f32</code> and unwrap it. Then we convert the <code>f32</code> to a <code>u32</code>.</p>\n\n<p>Why can't I just do this? Isn't this, practically, the same thing?</p>\n\n<pre><code>let single_step: u32 = \"4.0\".parse().unwrap() as u32;\n\nprintln!(\"{:?}\", single_step);\n</code></pre>\n\n<p>If I try to run this code, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0619]: the type of this value must be known in this context\n --&gt; src/main.rs:6:27\n  |\n6 |     let single_step: u32 = \"4.0\".parse().unwrap() as u32;\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>It looks like something requires us to break the operation into two chunks.</p>\n"}, {"tags": ["c++", "function", "lambda", "rust", "closures"], "comments": [{"owner": {"reputation": 42370, "user_id": 3980929, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/xyKrD.png?s=128&g=1", "display_name": "Rakete1111", "link": "https://stackoverflow.com/users/3980929/rakete1111"}, "edited": false, "score": 0, "creation_date": 1522848115, "post_id": 49652147, "comment_id": 86312564, "body": "&quot;<i>how do they generated code at runtime</i>&quot; They don&#39;t, there is no JIT embedded within the exec."}, {"owner": {"reputation": 13016, "user_id": 8751754, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7k6Li.png?s=128&g=1", "display_name": "Ron", "link": "https://stackoverflow.com/users/8751754/ron"}, "edited": false, "score": 0, "creation_date": 1522848130, "post_id": 49652147, "comment_id": 86312579, "body": "Drawing parallels between the C++ and some managed language can prove to be counter productive."}, {"owner": {"reputation": 149509, "user_id": 4342498, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/l3j88.jpg?s=128&g=1", "display_name": "NathanOliver", "link": "https://stackoverflow.com/users/4342498/nathanoliver"}, "edited": false, "score": 1, "creation_date": 1522848131, "post_id": 49652147, "comment_id": 86312581, "body": "C++ doesn&#39;t generate any code at runtime.  It is a compiled language."}, {"owner": {"reputation": 2354, "user_id": 9428851, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-MBhDff_bdY0/AAAAAAAAAAI/AAAAAAAACAY/lx7DUTjS350/photo.jpg?sz=128", "display_name": "Victor Gubin", "link": "https://stackoverflow.com/users/9428851/victor-gubin"}, "edited": false, "score": 2, "creation_date": 1522848324, "post_id": 49652147, "comment_id": 86312742, "body": "This is just a <code>Syntactic sugar</code> for Java, C# and C++. Compiler creates a class instance or callback function at compile time, the only difference lambda is unnamed unlike callback created with another approach. And then this functional object used at run-time with the same way as normal."}, {"owner": {"reputation": 29, "user_id": 8886492, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wC-MOfTyv08/AAAAAAAAAAI/AAAAAAAAAD4/2lGJOl5Aul0/photo.jpg?sz=128", "display_name": "Tzeroxik", "link": "https://stackoverflow.com/users/8886492/tzeroxik"}, "edited": false, "score": 0, "creation_date": 1522848324, "post_id": 49652147, "comment_id": 86312743, "body": "maybe I didn&#39;t express myself well, I meant how are anonymous functions implemented in aot compiled languages?"}, {"owner": {"reputation": 149509, "user_id": 4342498, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/l3j88.jpg?s=128&g=1", "display_name": "NathanOliver", "link": "https://stackoverflow.com/users/4342498/nathanoliver"}, "edited": false, "score": 1, "creation_date": 1522848428, "post_id": 49652147, "comment_id": 86312834, "body": "That may differ from language to language.  A google search for <i>how are lambdas implemented in &lt;language&gt;</i> should answer your questions"}, {"owner": {"reputation": 29, "user_id": 8886492, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wC-MOfTyv08/AAAAAAAAAAI/AAAAAAAAAD4/2lGJOl5Aul0/photo.jpg?sz=128", "display_name": "Tzeroxik", "link": "https://stackoverflow.com/users/8886492/tzeroxik"}, "edited": false, "score": 0, "creation_date": 1522848490, "post_id": 49652147, "comment_id": 86312876, "body": "Oh I see, thanks Victor!"}, {"owner": {"reputation": 156300, "user_id": 1782465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/b45d92faaf9d122bfed585490e0bafc5?s=128&d=identicon&r=PG", "display_name": "Angew is no longer proud of SO", "link": "https://stackoverflow.com/users/1782465/angew-is-no-longer-proud-of-so"}, "edited": false, "score": 4, "creation_date": 1522848518, "post_id": 49652147, "comment_id": 86312899, "body": "I sincerely doubt that Java or C# lambdas are actually JITted any more than named functions are. A lambda is still a compile-time construct, unlike (say) <code>eval</code>-style commands."}, {"owner": {"reputation": 29, "user_id": 8886492, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wC-MOfTyv08/AAAAAAAAAAI/AAAAAAAAAD4/2lGJOl5Aul0/photo.jpg?sz=128", "display_name": "Tzeroxik", "link": "https://stackoverflow.com/users/8886492/tzeroxik"}, "edited": false, "score": 0, "creation_date": 1522848973, "post_id": 49652147, "comment_id": 86313259, "body": "So simplifying it&#39;s king of an object or a structure with a function pointer to it, whose variables/values will be allocated on either the stack or heap (depending on implementation) at runtime?"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1522849137, "post_id": 49652147, "comment_id": 86313383, "body": "C# and Java can be AOT-compiled by .NET. Under .NET they are AOT-compiled languages. And Microsoft C++ can be used in a managed mode, it&#39;s a managed language (just like Java and C#). The question seems to carry some questionable assumptions. Anonymous != JIT."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1522849691, "post_id": 49652147, "comment_id": 86313832, "body": "In Rust, the lambda is compiled (at compile time) as a method on struct containing captured variables. So there is no runtime."}, {"owner": {"reputation": 29, "user_id": 8886492, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wC-MOfTyv08/AAAAAAAAAAI/AAAAAAAAAD4/2lGJOl5Aul0/photo.jpg?sz=128", "display_name": "Tzeroxik", "link": "https://stackoverflow.com/users/8886492/tzeroxik"}, "edited": false, "score": 0, "creation_date": 1522849713, "post_id": 49652147, "comment_id": 86313851, "body": "I know that anonymous isn&#39;t the same as jit compiling, but in some places they refer that there&#39;s an anonymous class file created in java&#39;s lambda expressions that then is JIT compiled, and yes they are AOT compiled under the JVM/.Net/insertEnvHere, I might not have used the correct terms because english is not my native language, but you&#39;re not helping with all those assumptions in any way to answer this question, if I&#39;m associating rust with c++ it&#39;s obvious that I&#39;m not talking about managed c++. I welcome criticism to help me learn, but i&#39;d appreciate some focus on the core question"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1522857794, "post_id": 49652147, "comment_id": 86320146, "body": "- &quot;<i>but in some places they refer that there&#39;s an anonymous class file created in java&#39;s lambda expressions that then is JIT compiled</i>&quot; - yes, but <b>everything</b> is JIT-compiled there, not just the lambdas. - &quot;<i>and yes they are AOT compiled under the JVM/.Net/insertEnvHere</i>&quot; - no, Java is JIT on Oracle JVM, but can be AOT on .NET."}, {"owner": {"reputation": 29, "user_id": 8886492, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wC-MOfTyv08/AAAAAAAAAAI/AAAAAAAAAD4/2lGJOl5Aul0/photo.jpg?sz=128", "display_name": "Tzeroxik", "link": "https://stackoverflow.com/users/8886492/tzeroxik"}, "edited": false, "score": 0, "creation_date": 1522865694, "post_id": 49652147, "comment_id": 86324594, "body": "As far as I know usually java is aot compiled to bytecode and the bytecode is the one being jit compiled on the jvm, yes it can be done for .net aot but why assume something that isn&amp;#39;t standart, when someone says java usually it&amp;#39;s assumed to run on the jvm, not .NET."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 156300, "user_id": 1782465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/b45d92faaf9d122bfed585490e0bafc5?s=128&d=identicon&r=PG", "display_name": "Angew is no longer proud of SO", "link": "https://stackoverflow.com/users/1782465/angew-is-no-longer-proud-of-so"}, "edited": false, "score": 0, "creation_date": 1522865978, "post_id": 49652147, "comment_id": 86324768, "body": "@Angew they actually are. Java lambdas do more lifting than just some static method or anonymous class. <a href=\"https://stackoverflow.com/a/30002627/1362755\">stackoverflow.com/a/30002627/1362755</a>"}, {"owner": {"reputation": 156300, "user_id": 1782465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/b45d92faaf9d122bfed585490e0bafc5?s=128&d=identicon&r=PG", "display_name": "Angew is no longer proud of SO", "link": "https://stackoverflow.com/users/1782465/angew-is-no-longer-proud-of-so"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1522872065, "post_id": 49652147, "comment_id": 86328357, "body": "@the8472 Thanks for the info, TIL something new."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1522849830, "post_id": 49652687, "comment_id": 86313946, "body": "AFAIK, in C# a lambda is converted to a class, just as in C++. And that&#39;s the same in Rust (struct + method)."}], "tags": [], "owner": {"reputation": 233737, "user_id": 1774667, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/b6516fec2c5997b867545d285304cf12?s=128&d=identicon&r=PG", "display_name": "Yakk - Adam Nevraumont", "link": "https://stackoverflow.com/users/1774667/yakk-adam-nevraumont"}, "is_accepted": true, "score": 2, "last_activity_date": 1522850157, "last_edit_date": 1522850157, "creation_date": 1522849569, "answer_id": 49652687, "question_id": 49652147, "link": "https://stackoverflow.com/questions/49652147/how-are-anonymous-functions-implemented-in-aot-compiled-languages/49652687#49652687", "title": "How are anonymous functions implemented in AOT-compiled languages?", "body": "<pre><code>int y = 3;\nauto f = [y](int x) { return x*y; };\n</code></pre>\n\n<p>this is a C++11 lambda.  The complier (basically) converts it to:</p>\n\n<pre><code>struct __anonymous_name__ {\n  int operator()(int x) const { return x*y; }\n\n  int y;\n};\n__anonymous_name__ f = {y};\n</code></pre>\n\n<p>where everything with <code>__</code> in the name is not actually named, just given names for exposition purposes.</p>\n\n<p>At runtime, everything has a fixed type, no code is generated.</p>\n\n<p><code>std::function&lt;int(int)&gt;</code> can store a copy of <code>f</code> above, but that uses a type erasure mechanism that goes beyond the scope of this question.  Note, however, that <code>f</code> is not an object of type related to <code>std::function&lt;int(int)&gt;</code>; C++ has more than one kind of polymorphism.</p>\n\n<hr>\n\n<p>I also seriously doubt that Java/C# lambdas are JIT'd any more than the rest of your code.</p>\n"}], "owner": {"reputation": 29, "user_id": 8886492, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wC-MOfTyv08/AAAAAAAAAAI/AAAAAAAAAD4/2lGJOl5Aul0/photo.jpg?sz=128", "display_name": "Tzeroxik", "link": "https://stackoverflow.com/users/8886492/tzeroxik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "closed_date": 1522851221, "accepted_answer_id": 49652687, "answer_count": 1, "score": -2, "last_activity_date": 1522850157, "creation_date": 1522848070, "last_edit_date": 1522848446, "question_id": 49652147, "link": "https://stackoverflow.com/questions/49652147/how-are-anonymous-functions-implemented-in-aot-compiled-languages", "closed_reason": "Needs more focus", "title": "How are anonymous functions implemented in AOT-compiled languages?", "body": "<p>It is my understanding that in managed languages like C#/Java, anonymous functions are generated by the compiler at runtime and then JIT compiled into the program. </p>\n\n<p>What about in unmanaged languages like Rust and C++? How can those languages create functions at runtime? What are the lower level details of implementing a lambda expression? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1522844896, "post_id": 49650660, "comment_id": 86310144, "body": "The compiler knows that <code>P</code> has type <code>AsRef</code>, and nothing else. You must first call the <code>as_ref</code> method to have a reference to the path."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 11, "creation_date": 1522846098, "post_id": 49650920, "comment_id": 86311041, "body": "This answer would be improved if instead of only giving the solution it explained <i>why</i> the original didn&#39;t work as intended."}], "tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": true, "score": 5, "last_activity_date": 1522846173, "last_edit_date": 1522846173, "creation_date": 1522844529, "answer_id": 49650920, "question_id": 49650660, "link": "https://stackoverflow.com/questions/49650660/no-method-named-join-found-for-asrefpath/49650920#49650920", "title": "No method named `join` found for AsRef&lt;Path&gt;", "body": "<p>Try <a href=\"https://play.rust-lang.org/?gist=80c8ce4b62ad8b730958d3f13d211950&amp;version=stable\" rel=\"nofollow noreferrer\">this</a>:</p>\n\n<pre><code>path.as_ref().join(\"13123123\")\n</code></pre>\n\n<p>see:</p>\n\n<pre><code>fn main() {\n    let path = std::path::Path::new(\"./foo/bar/\");\n    test(path);\n}\n\nfn test&lt;P: AsRef&lt;std::path::Path&gt;&gt;(path: P) {\n    println!(\"{:?}\", path.as_ref().join(\"13123123\"));\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"./foo/bar/13123123\"\n</code></pre>\n\n<p>See the <a href=\"https://doc.rust-lang.org/std/convert/trait.AsRef.html\" rel=\"nofollow noreferrer\">documentation for <code>AsRef</code></a>.</p>\n"}], "owner": {"reputation": 109, "user_id": 7851861, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db1d107615eac833bc16aacf9a15bff9?s=128&d=identicon&r=PG", "display_name": "Rijenkii", "link": "https://stackoverflow.com/users/7851861/rijenkii"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 502, "favorite_count": 0, "accepted_answer_id": 49650920, "answer_count": 1, "score": 5, "last_activity_date": 1522846173, "creation_date": 1522843761, "last_edit_date": 1522846110, "question_id": 49650660, "link": "https://stackoverflow.com/questions/49650660/no-method-named-join-found-for-asrefpath", "title": "No method named `join` found for AsRef&lt;Path&gt;", "body": "<p>I have a function that takes <code>AsRef&lt;Path&gt;</code> as an argument and looks like this</p>\n\n<pre><code>fn test&lt;P: AsRef&lt;std::path::Path&gt;&gt;(path: P) {\n    path.join(\"13123123\");\n}\n</code></pre>\n\n<p>When I compile that, it gives me the following error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `join` found for type `P` in the current scope\n --&gt; src/main.rs:2:10\n  |\n2 |     path.join(\"13123123\");\n  |          ^^^^\n</code></pre>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1522791343, "post_id": 49639445, "comment_id": 86286640, "body": "You&#39;ll also need <code>--force</code> if you want to downgrade an already-installed package."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1522791459, "last_edit_date": 1522791459, "creation_date": 1522791191, "answer_id": 49639445, "question_id": 49639342, "link": "https://stackoverflow.com/questions/49639342/how-can-i-downgrade-or-install-an-older-version-of-a-tool-i-installed-with-carg/49639445#49639445", "title": "How can I downgrade or install an older version of a tool I installed with `cargo install`?", "body": "<p><code>cargo install --version 0.3.10 xargo</code></p>\n\n<p>Reading the help for the <code>cargo</code> tool is very useful:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo install --help\ncargo-install\nInstall a Rust binary\n\nUSAGE:\n    cargo install [OPTIONS] [--] [crate]...\n\nOPTIONS:\n        --version &lt;VERSION&gt;      Specify a version to install from crates.io\n\n[... snip ...]\n</code></pre>\n\n<p>If you've already installed a version of the tool, you'll need to add the <code>-f</code> / <code>--force</code> flag:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>-f, --force                  Force overwriting existing crates or binaries\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34484361/155423\">Does cargo install have an equivalent update command?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44664638/155423\">How can a binary installed with cargo install be removed?</a></li>\n</ul>\n"}], "owner": {"reputation": 543, "user_id": 6861720, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/edfbcf83eddb9c18f9ed3e6c0619ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "Dragonight", "link": "https://stackoverflow.com/users/6861720/dragonight"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2345, "favorite_count": 0, "accepted_answer_id": 49639445, "answer_count": 1, "score": 5, "last_activity_date": 1522791459, "creation_date": 1522790660, "last_edit_date": 1522791293, "question_id": 49639342, "link": "https://stackoverflow.com/questions/49639342/how-can-i-downgrade-or-install-an-older-version-of-a-tool-i-installed-with-carg", "title": "How can I downgrade or install an older version of a tool I installed with `cargo install`?", "body": "<p>I would like to install Xargo v0.3.10 on my machine. The current version of Xargo is v0.3.11 and it is installed by the <code>cargo install xargo</code> command. How can I install an older version of Xargo? </p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 5, "creation_date": 1522770463, "post_id": 49633819, "comment_id": 86275761, "body": "Does <a href=\"https://stackoverflow.com/q/33925232/155423\">How to match over self in an enum?</a> answer your question? <a href=\"https://stackoverflow.com/q/46396796/155423\">Why can&#39;t <code>Self</code> be used to refer to an enum&#39;s variant in a method body?</a> is related."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1522770687, "post_id": 49633819, "comment_id": 86275893, "body": "Bear in mind that a method can be called on an instance of an <code>enum</code> regardless of which variant it is - <code>self</code> could be <code>Quit</code>, <code>Move</code>, <code>Write</code> <i>or</i> <code>ChangeColor</code>. If you want to access what&#39;s inside a <code>Message::Write</code>, you first need to make sure that <code>self</code> actually <i>is</i> a <code>Message::Write</code>. The first code example Shepmaster linked shows one way to do this."}, {"owner": {"reputation": 1927, "user_id": 953419, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/0f79e690bef0b6c98676b5751056e0a1?s=128&d=identicon&r=PG", "display_name": "seamus", "link": "https://stackoverflow.com/users/953419/seamus"}, "edited": false, "score": 1, "creation_date": 1522770909, "post_id": 49633819, "comment_id": 86276039, "body": "Thank you. Late here. I&#39;ll take a look at this tomorrow."}], "owner": {"reputation": 1927, "user_id": 953419, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/0f79e690bef0b6c98676b5751056e0a1?s=128&d=identicon&r=PG", "display_name": "seamus", "link": "https://stackoverflow.com/users/953419/seamus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "closed_date": 1522781587, "answer_count": 0, "score": 1, "last_activity_date": 1522781598, "creation_date": 1522769281, "last_edit_date": 1522770106, "question_id": 49633819, "link": "https://stackoverflow.com/questions/49633819/how-do-i-make-use-of-the-self-data-in-a-method-implemented-on-an-enum", "closed_reason": "Duplicate", "title": "How do I make use of the `self` data in a method implemented on an enum?", "body": "<p>I am working through the docs on enums and I'm at implementing a method on an enum.  How do I make use of the <code>self</code> info passed into the method?</p>\n\n<pre><code>fn main() {\n    enum Message {\n        Quit,\n        Move { x: i32, y: i32 },\n        Write(String),\n        ChangeColor(i32, i32, i32),\n    }\n\n    impl Message {\n        fn call(&amp;self) {\n            //Want to make use of 'self'\n        }\n    }\n\n    let m = Message::Write(String::from(\"hello\"));\n    m.call();\n}\n</code></pre>\n\n<p>To get something to print I have to:</p>\n\n<pre><code>#[derive(Debug)]\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nimpl Message {\n    fn call(&amp;self) {\n        println!(\"{:?}\", self);\n    }\n}\n</code></pre>\n\n<p>If I try to make use of <code>self</code> or get only the 'Hello' string I get a:</p>\n\n<pre><code>impl Message {\n    fn call(&amp;self) {\n        println!(\"{}\", self::Write);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0425]: cannot find value `Write` in module `self`\n--&gt; src/main.rs:14:28\n   |\n14 |       println!(\"{}\", self::Write);\n   |                            ^^^^^ not found in `self`\n</code></pre>\n"}, {"tags": ["generics", "rust", "serde"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1522745303, "post_id": 49625700, "comment_id": 86258623, "body": "Have you tried just adding a lifetime parameter, e.g. <code>fn parse_cfg_file&lt;&#39;a, T: Deserialize&lt;&#39;a&gt;&gt;(path: &amp;Path) { ... }</code>?"}, {"owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1522746049, "post_id": 49625700, "comment_id": 86259092, "body": "@ljedrz Thanks. This is what I was looking for."}], "owner": {"reputation": 961, "user_id": 5920297, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/80fc64c0293ff9460b4a8f127afdb8b2?s=128&d=identicon&r=PG&f=1", "display_name": "phodina", "link": "https://stackoverflow.com/users/5920297/phodina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "closed_date": 1522757488, "answer_count": 0, "score": 1, "last_activity_date": 1538858161, "creation_date": 1522744841, "last_edit_date": 1538858161, "question_id": 49625700, "link": "https://stackoverflow.com/questions/49625700/rust-generics-on-functions", "closed_reason": "Duplicate", "title": "Rust generics on functions", "body": "<p>I'm refactoring some Rust code (see below) to parse various configuration files (in JSON) using the <code>serde</code> crate.</p>\n\n<p>Therefore I have 2 structs: <code>CfgFileWebServer</code> &amp; <code>CfgFileFtpServer</code> implementing <code>Serialize</code> &amp; <code>Deserialize</code> traits.</p>\n\n<p>For both structs I have separate parsing functions. As the parsing code is nearly identical I'd like to rewrite it using generics to get:</p>\n\n<pre><code>parse_cfg_file::&lt;CfgFileWebServer&gt;(path: &amp;Path) -&gt; Result&lt;(), Error&gt; { ... }\nparse_cfg_file::&lt;CfgFileFtpServer&gt;(path: &amp;Path) -&gt; Result&lt;(), Error&gt; { ... }\n</code></pre>\n\n<p>However I don't know how to make the deserialized variable <code>p</code> (<code>serde_json::from_str</code>) generic. I tried following:</p>\n\n<pre><code>fn parse_cfg_file&lt;T: Deserialize&gt;(path: &amp;Path) \n                     ^^^^^^^^^^^ expected lifetime parameter\n</code></pre>\n\n<p>What lifetime should I pass to the trait?</p>\n\n<p>Here is current implementation without generics:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\n\n#[macro_use]\nextern crate serde_derive;\n\nuse serde_json::Error;\n\n#[derive(Serialize, Deserialize)]\nstruct CfgFileWebServer {\n    name: String,\n    /* fields omitted */\n}\n\n#[derive(Serialize, Deserialize)]\nstruct CfgFileFtpServer {\n    name: String,\n    /* fields omitted */\n}\n\nfn parse_web_server() -&gt; Result&lt;(), Error&gt; {\n\n    let data = r#\"{\n                    \"name\": \"WebServer\",\n                  }\"#;\n\n    let p: CfgFileWebServer = serde_json::from_str(data)?;\n\n    Ok(())\n}\n\nfn parse_ftp_server() -&gt; Result&lt;(), Error&gt; {\n\n    let data = r#\"{\n                    \"name\": \"FTPServer\",\n                  }\"#;\n\n    let p: CfgFileFtpServer = serde_json::from_str(data)?;\n\n    Ok(())\n}\n\nfn main() {\n    parse_web_server().unwrap();\n    parse_ftp_server().unwrap();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1522697360, "post_id": 49617453, "comment_id": 86242032, "body": "Have you read <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"nofollow noreferrer\"><i>The Rust Programming Language</i></a>, specifically the chapter on <a href=\"https://doc.rust-lang.org/book/second-edition/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">Recoverable Errors with <code>Result</code></a>?"}, {"owner": {"reputation": 761, "user_id": 491426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fefa0ec76c08bd63c39dff52ee418f0c?s=128&d=identicon&r=PG", "display_name": "Kotte", "link": "https://stackoverflow.com/users/491426/kotte"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522734479, "post_id": 49617453, "comment_id": 86253039, "body": "Yes, but I didn&#39;t feel it really answered my question. But I found an answer in the <i>Rust proper error handling question...</i>. Seems like I need to create my own error type. Thanks :-)"}, {"owner": {"reputation": 761, "user_id": 491426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fefa0ec76c08bd63c39dff52ee418f0c?s=128&d=identicon&r=PG", "display_name": "Kotte", "link": "https://stackoverflow.com/users/491426/kotte"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522826777, "post_id": 49617453, "comment_id": 86298146, "body": "I found the Error handling chapter of the first edition covers this really well: <a href=\"https://doc.rust-lang.org/stable/book/first-edition/error-handling.html#working-with-multiple-error-types\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/book/first-edition/&hellip;</a>"}], "owner": {"reputation": 761, "user_id": 491426, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fefa0ec76c08bd63c39dff52ee418f0c?s=128&d=identicon&r=PG", "display_name": "Kotte", "link": "https://stackoverflow.com/users/491426/kotte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 343, "favorite_count": 0, "closed_date": 1522697589, "answer_count": 0, "score": 0, "last_activity_date": 1522697603, "creation_date": 1522696957, "last_edit_date": 1522697293, "question_id": 49617453, "link": "https://stackoverflow.com/questions/49617453/is-it-possible-to-mix-error-types-when-doing-early-returns-using-the-operato", "closed_reason": "Duplicate", "title": "Is it possible to mix error types when doing early returns using the `?` operator in Rust?", "body": "<p>The following code </p>\n\n<pre><code>fn get_issues(addr: &amp;str) -&gt; Result&lt;(), std::error::Error&gt; {\n    let mut result = String::new();\n    reqwest::get(&amp;format!(\"{}/issues\", addr))?.read_to_string(&amp;mut result)?;\n\n    unimplemented!();\n}\n</code></pre>\n\n<p>yields </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::error::Error + 'static: std::marker::Sized` is not satisfied                          \n  --&gt; src/main.rs:37:1        \n   |                          \n37 | / fn get_issues(addr: &amp;str) -&gt; Result&lt;(), std::error::Error&gt; {                                                       \n38 | |     let mut result = String::new();                   \n39 | |     reqwest::get(&amp;format!(\"{}/issues\", addr))?.read_to_string(&amp;mut result)?;                                       \n40 | |                        \n41 | |     unimplemented!();  \n42 | | }                      \n   | |_^ `std::error::Error + 'static` does not have a constant size known at compile-time                                \n   |                          \n   = help: the trait `std::marker::Sized` is not implemented for `std::error::Error + 'static`                            \n   = note: required by `std::result::Result`                 \n</code></pre>\n\n<p>However, <code>reqwest::get()</code> returns <code>Result&lt;.., reqwest::Error&gt;</code> and <code>read_to_string()</code> returns <code>Result&lt;.., std::io::Error&gt;</code>. I would like to use some kind of common error type to avoid type errors. </p>\n\n<p>Is there some kind of error type I can use to make <code>get_issues</code> work as-is or do I need to convert the errors to my own error type?</p>\n"}, {"tags": ["logging", "compiler-errors", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 5053, "user_id": 2421391, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/980724d5505b7c2ee035c38b8adabd54?s=128&d=identicon&r=PG", "display_name": "scnerd", "link": "https://stackoverflow.com/users/2421391/scnerd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522689837, "post_id": 49614947, "comment_id": 86238117, "body": "@Shepmaster MCVE: <code>cargo new project_name; cd project_name; echo &#39;env_logger = &quot;0.3.5&quot;&#39; &gt;&gt; Cargo.toml; cargo build</code>. The libraries&#39; source files are downloading properly and a bunch of other sub-dependencies compile correctly, so it&#39;s odd that env_logger specifically (and co-workers have reported a couple other libraries that behave similarly) fails to build. That&#39;s why I&#39;m asking for help to even figure out what else to consider trying."}, {"owner": {"reputation": 5053, "user_id": 2421391, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/980724d5505b7c2ee035c38b8adabd54?s=128&d=identicon&r=PG", "display_name": "scnerd", "link": "https://stackoverflow.com/users/2421391/scnerd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522690544, "post_id": 49614947, "comment_id": 86238486, "body": "The MCVE posted above produces exactly the error I pasted into the question. The error is produced while compiling <code>env_logger</code> as a dependency (whether implicit or explicit) of my code (which, as demonstrated by the MCVE, is nothing specific). I can&#39;t copy-paste (seeing as the computer has no internet), but give me a sec and I&#39;ll try to re-type the MCVE exact output as exactly as I can."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522690730, "post_id": 49614947, "comment_id": 86238586, "body": "The computer isn&#39;t connected to <i>another</i> computer with internet, it&#39;s completely airgapped? You can&#39;t save to a file and stick it on a USB drive? That&#39;s rough."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522690840, "post_id": 49614947, "comment_id": 86238647, "body": "How did you get the source code of all the dependencies from the internet onto this non-internet connected computer in the first place?"}, {"owner": {"reputation": 5053, "user_id": 2421391, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/980724d5505b7c2ee035c38b8adabd54?s=128&d=identicon&r=PG", "display_name": "scnerd", "link": "https://stackoverflow.com/users/2421391/scnerd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522690978, "post_id": 49614947, "comment_id": 86238739, "body": "We mirrored the cargo registry on the isolated network. With a few tweaks to <code>.cargo&#47;config</code> I can get my computer to reach to our mirror instead of trying to reach out onto the internet (which it can&#39;t). And yes, completely airgapped."}, {"owner": {"reputation": 5053, "user_id": 2421391, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/980724d5505b7c2ee035c38b8adabd54?s=128&d=identicon&r=PG", "display_name": "scnerd", "link": "https://stackoverflow.com/users/2421391/scnerd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522691684, "post_id": 49614947, "comment_id": 86239150, "body": "<code>log = { version = &quot;0.3&quot;, path = &quot;..&quot; }</code>. I&#39;ve tried removing the <code>path</code> argument with no change in behavior, and tried setting version to &quot;0.4&quot; also with no change. I also tried purging the cache directory and rebuilding from a fresh download just to make sure I didn&#39;t mess anything up."}, {"owner": {"reputation": 13169, "user_id": 967945, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/47244a17f72cee237f57f4c4b9613ea1?s=128&d=identicon&r=PG", "display_name": "Dan Hulme", "link": "https://stackoverflow.com/users/967945/dan-hulme"}, "edited": false, "score": 0, "creation_date": 1522845527, "post_id": 49614947, "comment_id": 86310581, "body": "Could you check if <code>Cargo.lock</code> is the same between the two machines? And try <code>rustup show</code> <i>in the source tree</i> on both machines to make sure there isn&#39;t a <code>rustup override</code> in effect."}], "owner": {"reputation": 5053, "user_id": 2421391, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/980724d5505b7c2ee035c38b8adabd54?s=128&d=identicon&r=PG", "display_name": "scnerd", "link": "https://stackoverflow.com/users/2421391/scnerd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 67, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1522692211, "creation_date": 1522686485, "last_edit_date": 1592644375, "question_id": 49614947, "link": "https://stackoverflow.com/questions/49614947/cannot-compile-env-logger-0-3-5-on-a-computer-without-internet-access-cannot-fi", "title": "Cannot compile env_logger 0.3.5 on a computer without Internet access: cannot find function &#39;set_logger&#39; in module &#39;log&#39;", "body": "<p>I'm attempting to compile my Rust code on an isolated network. The exact same code compiles fine on an internet-connected computer, but breaks when building <code>env_logger</code> in the isolated network:</p>\n<pre class=\"lang-none prettyprint-override\"><code>cargo new project_name; \ncd project_name; \necho 'env_logger = &quot;0.3.5&quot;' &gt;&gt; Cargo.toml; \ncargo build\n</code></pre>\n<p>Which outputs (forgive typos, I had to copy this by hand):</p>\n<pre class=\"lang-none prettyprint-override\"><code>Created library 'project_name' project\nUpdating registry 'http://registry-url/'\nCompiling winapi v0.2.8\nCompiling regex-syntax v0.3.9\nCompiling utf8-ranges v0.1.3\nCompiling cfg-if v0.1.2\nCompiling libc v0.2.36\nCompiling winapi-build v0.1.1\nCompiling log v0.4.1\nCompiling kernel32-sys v0.2.2\nCompiling log v0.3.9\nCompiling memchr v0.1.11\nCompiling aho-corasick v0.5.3\nCompiling thread-id v2.0.0\nCompiling thread_local v0.2.7\nCompiling regex v0.1.80\nCompiling env_logger v0.3.5\nerror[E0425]: cannot find function 'set_logger' in module 'log'\n--&gt; /home/username/.cargo/registry/src/registry-url-hash/env_logger-0.3.5/src/lib.rs:255:14\n    |\n255 | log::set_logger(|max_level| {\n    |      ^^^^^^^^^^ not found in 'log'\n\nerror: aborting due to previous error\n\nerror: Could not compile 'env_logger'\n</code></pre>\n<p>I've verified that log is successfully downloaded into my local .cargo registry, and if I open <code>log-0.4.1/src/lib.rs</code> I can find <code>pub fn set_logger...</code> on line 1045. If I open <code>log-0.3.9/src/lib.rs</code> I find <code>pub fn set_logger&lt;M&gt;</code> on line 701.</p>\n<p>If I look at <code>/home/username/.cargo/registry/src/registry-url-hash/env_logger-0.3.5/Cargo.toml</code>, it says this in the dependencies:</p>\n<pre><code>log = { version = &quot;0.3&quot;, path = &quot;..&quot; }.\n</code></pre>\n<p>I've tried removing the <code>path</code> argument with no change in behavior, and tried setting version to &quot;0.4&quot; also with no change. I also tried purging the cache directory and rebuilding from a fresh download just to make sure I didn't mess anything up.</p>\n<p>Here is my version info:</p>\n<blockquote>\n<p>env_logger: 0.3.5</p>\n<p>log: 0.4.1</p>\n<p>rustc: 1.24.0 (4d90ac38c 2018-02-12)</p>\n<p>cargo: 0.25.0 (8c93e0895 2018-02-01)</p>\n</blockquote>\n<p>If I add <code>set_logger</code> to the <code>use log::{...}</code> line in the <code>env_logger/src/lib.rs</code> file, I get a &quot;not found&quot; error consistent with the above compiler error.</p>\n<p>I don't know precisely how to reproduce this issue besides trying to compile a project with <code>env_logger = &quot;0.3.5&quot;</code> in your Cargo.toml (which doesn't cause any problems for me in general). Any idea what might be causing this issue? How can I troubleshoot what's going on?</p>\n<p>For background information, we mirrored the Cargo registry on the isolated network. With a few tweaks to <code>.cargo/config</code>, I can get my computer to reach to our mirror instead of trying to reach out onto the internet (which it can't). This computer is completely airgapped.</p>\n"}, {"tags": ["reference", "rust", "move-semantics"], "owner": {"reputation": 53, "user_id": 3107258, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IirlR.jpg?s=128&g=1", "display_name": "asdragnea", "link": "https://stackoverflow.com/users/3107258/asdragnea"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "closed_date": 1522681916, "answer_count": 0, "score": 2, "last_activity_date": 1522681835, "creation_date": 1522680744, "last_edit_date": 1522681835, "question_id": 49613527, "link": "https://stackoverflow.com/questions/49613527/why-does-mut-t-seem-to-behave-like-a-copy-type", "closed_reason": "Duplicate", "title": "Why does &amp;mut T seem to behave like a Copy type?", "body": "<p>I am trying to better understand move semantics and the behavior of <code>Copy</code> types in Rust.</p>\n\n<p>I know that <code>&amp;mut</code> T is not <code>Copy</code>, as explained <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html#when-cant-my-type-be-copy\" rel=\"nofollow noreferrer\">here</a>, because copying <code>&amp;mut T</code> would create an aliased mutable reference. But then I do not understand the behavior of the following program:</p>\n\n<pre><code>fn my_ref_mut(the_ref_mut: &amp;mut Vec&lt;i32&gt;) {\n    println!(\"{:?}\", the_ref_mut);\n}\n\nfn main() {\n    let mut v: Vec&lt;i32&gt; = Vec::new();\n    let r: &amp;mut Vec&lt;i32&gt; = &amp;mut v;\n    my_ref_mut(r);\n    my_ref_mut(r); // Should not this be an `use after move` error?\n}\n</code></pre>\n\n<p>I would have expected the program above not to compile because of an <a href=\"https://doc.rust-lang.org/error-index.html#E0382\" rel=\"nofollow noreferrer\">E0382</a>: <code>use of moved value</code> error. The <code>r</code> variable behaves as if it is <code>Copy</code>. I have tried to better understand the situation with the following program. It gives two different compilation errors, depending on whether the types are explicitly specified (for me to be sure I get the expected types):</p>\n\n<pre><code>fn my_ref_mut(the_ref_mut: &amp;mut Vec&lt;i32&gt;) {\n    println!(\"{:?}\", the_ref_mut);\n}\n\nfn my_ref(the_ref: &amp;Vec&lt;i32&gt;) {\n    println!(\"{:?}\", the_ref);\n}\n\nfn main() {\n    let mut v: Vec&lt;i32&gt; = Vec::new();\n    {\n        let r: &amp;mut Vec&lt;i32&gt; = &amp;mut v;\n        my_ref_mut(r);\n        my_ref_mut(r);\n    }\n    {\n        let r1: &amp;mut Vec&lt;i32&gt; = &amp;mut v;\n        my_ref_mut(r1);\n        let r2 = r1;\n        my_ref_mut(r1);\n    }\n    {\n        let r: &amp;Vec&lt;i32&gt; = &amp;v;\n        my_ref(r);\n        my_ref(r);\n    }\n    {\n        let r1: &amp;Vec&lt;i32&gt; = &amp;v;\n        my_ref(r1);\n        let r2: &amp;Vec&lt;i32&gt; = r1;\n        my_ref(r1);\n    }\n}\n</code></pre>\n\n<p>The error is self explanatory:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `*r1`\n  --&gt; src/main.rs:20:20\n   |\n19 |         let r2 = r1;\n   |             -- value moved here\n20 |         my_ref_mut(r1);\n   |                    ^^ value used here after move\n   |\n   = note: move occurs because `r1` has type `&amp;mut std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I would have expected it to be <code>use of moved value: r1</code>, not <code>*r1</code>, because I have moved the reference, not the value itself. </p>\n\n<p>By changing line 19 to <code>let r2: &amp;mut Vec&lt;i32&gt; = r1;</code>, thus specifying the type of <code>r2</code> explicitly, the error becomes <a href=\"https://doc.rust-lang.org/error-index.html#E0499\" rel=\"nofollow noreferrer\">E0499</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*r1` as mutable more than once at a time\n  --&gt; src/main.rs:20:20\n   |\n19 |         let r2: &amp;mut Vec&lt;i32&gt; = r1;\n   |                                 -- first mutable borrow occurs here\n20 |         my_ref_mut(r1);\n   |                    ^^ second mutable borrow occurs here\n21 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>This error also seems wrong to me, because the first borrow of <code>*r1</code> should be the one on line 17 (<code>let r1: &amp;mut Vec&lt;i32&gt; = &amp;mut v;</code>). I know about autoref and <code>Deref</code> coercion, but from what I believe, they are not applicable here.</p>\n\n<p>My conclusion is that <code>&amp;T</code> is <code>Copy</code>, as expected and as the second example above demonstrates, but I cannot say the same thing about <code>&amp;mut T</code>.</p>\n\n<p>I would like someone to explain to me the compilation errors and why <code>&amp;mut T</code> sometimes seems to behave like being <code>Copy</code>. Is it also possible for this to be a compiler bug? My toolchain is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>stable-x86_64-unknown-linux-gnu (default)\nrustc 1.25.0 (84203cac6 2018-03-25)\n</code></pre>\n"}, {"tags": ["rust", "deserialization", "serde", "serde-json"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522673307, "post_id": 49611026, "comment_id": 86229664, "body": "<a href=\"https://meta.stackexchange.com/questions/39223/one-post-with-multiple-questions-or-multiple-posts\">One question per post, please</a>. It&#39;s also highly recommended that you search for any error messages you receive."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522673409, "post_id": 49611026, "comment_id": 86229722, "body": "related: <a href=\"https://stackoverflow.com/q/49139196/155423\">How do I deserialize a JSON array without needing a wrapper type?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1522673476, "post_id": 49611026, "comment_id": 86229750, "body": "TL;DR: <code>let runs: Vec&lt;Run&gt; = serde_json::from_str(data).unwrap();</code>"}], "owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 257, "favorite_count": 0, "closed_date": 1522673194, "answer_count": 0, "score": 0, "last_activity_date": 1522673224, "creation_date": 1522670992, "last_edit_date": 1522673224, "question_id": 49611026, "link": "https://stackoverflow.com/questions/49611026/cannot-deserialize-with-serde-the-operator-can-only-be-used-in-a-function-t", "closed_reason": "Duplicate", "title": "Cannot deserialize with Serde: the `?` operator can only be used in a function that returns `Result`", "body": "<p>I'm trying to deserialize a json string to a struct but I'm having trouble with getting it to work. All I want to do is print out the status and or result of the first one to match <code>run[\"meta\"][\"username\"]</code> against a given username.</p>\n\n<p>However despite having followed the <a href=\"https://github.com/serde-rs/json#parsing-json-as-strongly-typed-data-structures\" rel=\"nofollow noreferrer\">given example</a> I can't seem to get it to work. Now I'd much rather do this with <a href=\"https://github.com/serde-rs/json#operating-on-untyped-json-values\" rel=\"nofollow noreferrer\">untyped values</a> as I'm not intending to store the values but when I do this I can't easily iterate over the initial array, doing <code>runs.as_array().iter()</code> seems to return a <code>Vec</code> with a single <code>String</code> element containing the entire json string, hence needing to add typing but now this isn't working either.</p>\n\n<p>The current problem I get is this:</p>\n\n<pre><code>error[E0277]: the `?` operator can only be used in a function that returns `Result` (or another type that implements `std::ops::Try`)\n  --&gt; src/main.rs:60:30\n   |\n60 |               let runs: Runs = serde_json::from_str(get_runs(&amp;mut client,\n   |  ______________________________^\n61 | |                                 &amp;settings[\"pipeline_id\"]).as_str())?;\n   | |____________________________________________________________________^ cannot use the `?` operator in a function that returns `()`\n   |\n   = help: the trait `std::ops::Try` is not implemented for `()`\n   = note: required by `std::ops::Try::from_error`\n</code></pre>\n\n<p>Which doesn't make sense, because if you remove the <code>?</code> it then complains that <code>runs</code> was expecting a <code>Runs</code> and instead received a <code>Result</code>, so I'm very confused, how can it complain that it's returning a <code>Result</code> and then complain that it's returning a <code>()</code>?</p>\n\n<p>Obviously I'm missing something and I'm just not seeing it.</p>\n\n<p>The second issue is that I can't use <code>.iter()</code> on:</p>\n\n<pre><code>struct Runs(Vec&lt;Run&gt;);\n</code></pre>\n\n<p>I know it's a wrapped Vec, but shouldn't it delegate or something automatically? Because I can't use a type alias or just do:</p>\n\n<pre><code>let runs: Vec&lt;Run&gt; = \n</code></pre>\n\n<p>because I need to have:</p>\n\n<p>#[derive(Debug,Serialize, Deserialize)]</p>\n\n<p>before it to allow it to work with serde-rs.</p>\n\n<p>So how do I solve the two issues that will allow me to get the data I need from the json?</p>\n\n<p>Here is a minimal (for rust) example:</p>\n\n<pre><code>extern crate serde_json;\n\n#[macro_use]\nextern crate serde_derive;\n\nuse std::collections::HashMap;\n\n\nuse serde_json::{Value, Error};\n\n\n#[derive(Debug,Serialize, Deserialize)]\nstruct Runs(Vec&lt;Run&gt;);\n\n#[derive(Debug,Serialize, Deserialize)]\nstruct Meta {\n    username: String\n}\n\n#[derive(Debug,Serialize, Deserialize)]\nstruct User {\n    meta: Meta,\n}\n\n#[derive(Debug,Serialize, Deserialize)]\nstruct Run {\n    status: String,\n    result: String\n    user: User,\n}\n\nfn main() {\n\n    let data = r#\"\n    [\n        {\n            \"id\": \"577a4dbc3ec144923a02b6f9\",\n            \"url\": \"https://app.wercker.com/api/v3/runs/577a4dbc3ec144923a02b6f9\",\n            \"branch\": \"master\",\n            \"commitHash\": \"cd74a9994712960f19b4b563491f860f98fa7bb5\",\n            \"createdAt\": \"2016-07-04T11:51:24.851Z\",\n            \"finishedAt\": \"2016-07-04T11:51:34.284Z\",\n            \"message\": \"My custom message!\",\n            \"progress\": 57,\n            \"result\": \"aborted\",\n            \"startedAt\": \"2016-07-04T11:51:25.996Z\",\n            \"status\": \"finished\",\n            \"user\": {\n              \"meta\": {\n                \"werckerEmployee\": true,\n                \"username\": \"tonnu\"\n              },\n              \"userId\": \"549101f36b3ba8733d88ce96\",\n              \"avatar\": {\n                \"gravatar\": \"bb95c388b227da2ce2f33c0811478095\"\n              },\n              \"name\": \"Toon\",\n              \"type\": \"wercker\"\n            },\n            \"pipeline\": {\n              \"id\": \"5751377e7e1bd5f17f050bc4\",\n              \"url\": \"https://app.wercker.com/api/v3/pipelines/5751377e7e1bd5f17f050bc4\",\n              \"createdAt\": \"2016-06-03T07:53:34.294Z\",\n              \"name\": \"initial-build\",\n              \"permissions\": \"public\",\n              \"pipelineName\": \"initial-build\",\n              \"setScmProviderStatus\": true,\n              \"type\": \"git\"\n            }\n        }\n    ]\"#;\n    let runs: Runs = serde_json::from_str(data).as_str()?;\n    for run in runs.iter() {\n        println!(\"{}\",\"------------\");\n        println!(\"{:?}\",run)\n\n    }\n}\n</code></pre>\n"}, {"tags": ["struct", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1522679685, "last_edit_date": 1522679685, "creation_date": 1522672917, "answer_id": 49611521, "question_id": 49610853, "link": "https://stackoverflow.com/questions/49610853/do-i-need-to-always-put-base-structs-outside-of-the-main-so-they-are-globals/49611521#49611521", "title": "Do I need to always put base structs outside of the main() so they are globals?", "body": "<p>You don't have to always put them outside of <em>something</em>, but you do have to declare them at a high enough level so that everything that wants to use it can see it, visibility-wise.</p>\n\n<p>By defining the type inside of the <code>main</code> function, only the body of the <code>main</code> function can access it. In this case, yes, you should put the definition of the struct outside of <code>main</code> because both <code>main</code> and <code>build_user</code> need to know of it:</p>\n\n<pre><code>struct User {\n    name: String,\n    email: String,\n}\n\nfn build_user(email: String, name: String) -&gt; User {\n    User { email, name }\n}\n</code></pre>\n\n<p>As you read on, you will discover the idiomatic way of writing this code:</p>\n\n<pre><code>fn main() {\n    let s1 = String::from(\"bob\");\n    let s2 = String::from(\"bob@aol.com\");\n\n    let user1 = User::new(s1, s2);\n}\n\nstruct User {\n    name: String,\n    email: String,\n}\n\nimpl User {\n    fn new(email: String, name: String) -&gt; User {\n        User { email, name }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1927, "user_id": 953419, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/0f79e690bef0b6c98676b5751056e0a1?s=128&d=identicon&r=PG", "display_name": "seamus", "link": "https://stackoverflow.com/users/953419/seamus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 0, "accepted_answer_id": 49611521, "answer_count": 1, "score": 0, "last_activity_date": 1522679685, "creation_date": 1522670244, "last_edit_date": 1522672661, "question_id": 49610853, "link": "https://stackoverflow.com/questions/49610853/do-i-need-to-always-put-base-structs-outside-of-the-main-so-they-are-globals", "title": "Do I need to always put base structs outside of the main() so they are globals?", "body": "<p>I am working through the Rust documentation and having a hiccup on creating a struct with a function:</p>\n\n<pre><code>fn main() {\n    let s1 = String::from(\"bob\");\n    let s2 = String::from(\"bob@aol.com\");\n\n    struct User {\n        name: String,\n        email: String,\n    }\n\n    let user1 = build_user(s1, s2); //or &amp;s1, &amp;s2\n}\n\nfn build_user(email: String, name: String) -&gt; User {\n    //or &amp;String, &amp;String\n    User { email, name }\n}\n</code></pre>\n\n<p>The error says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0412]: cannot find type `User` in this scope\n  --&gt; src/main.rs:13:47\n   |\n13 | fn build_user(email: String, name: String) -&gt; User {\n   |                                               ^^^^ not found in this scope\n\nerror[E0422]: cannot find struct, variant or union type `User` in this scope\n  --&gt; src/main.rs:15:5\n   |\n15 |     User { email, name }\n   |     ^^^^ not found in this scope\n</code></pre>\n\n<p>If I want to build a struct with a function, do I have to pass the base struct as well by reference?</p>\n"}, {"tags": ["rust", "ipc", "libc"], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 3082897, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e8e4066d863063c147f290869d8637b?s=128&d=identicon&r=PG&f=1", "display_name": "mik", "link": "https://stackoverflow.com/users/3082897/mik"}, "edited": false, "score": 0, "creation_date": 1522663551, "post_id": 49608995, "comment_id": 86224873, "body": "Wonderfull, it works. Going to try to understand what is behind the dandling pointer. Many thanks."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": false, "score": 1, "last_activity_date": 1522662679, "creation_date": 1522662679, "answer_id": 49608995, "question_id": 49608550, "link": "https://stackoverflow.com/questions/49608550/rust-shm-open-function-failed/49608995#49608995", "title": "rust shm_open() function failed", "body": "<p>Your code involves a dangling pointer:</p>\n\n<pre><code>let name = CString::new(\"/shaman\").unwrap().as_ptr();\n</code></pre>\n\n<p>The string is gone by the time <code>shm_open</code> is called.  Try this instead:</p>\n\n<pre><code>let name = CString::new(\"/shaman\").unwrap();\nlet fd = unsafe { shm_open(name.as_ptr(), O_CREAT|O_RDWR, 0o600 ) };\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 3082897, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e8e4066d863063c147f290869d8637b?s=128&d=identicon&r=PG&f=1", "display_name": "mik", "link": "https://stackoverflow.com/users/3082897/mik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1522662679, "creation_date": 1522660795, "question_id": 49608550, "link": "https://stackoverflow.com/questions/49608550/rust-shm-open-function-failed", "title": "rust shm_open() function failed", "body": "<p>this code:</p>\n\n<pre><code>extern crate libc;\nuse libc::{O_CREAT, O_RDWR, shm_open};\n\nuse std::ffi::CString;\n\nfn shm_create() {\n    let name = CString::new(\"/shaman\").unwrap().as_ptr();\n    let fd = unsafe { shm_open(name, O_CREAT|O_RDWR, 0o600 ) };\n    println!(\"shm_open: {}\", fd);\n}\n\nfn main() {\n    shm_create();\n}\n</code></pre>\n\n<p>always print:</p>\n\n<pre><code>shm_open: -1\n</code></pre>\n\n<p>the same c implementation works.</p>\n\n<p>I am a rust newbie and the problem seems to be there.</p>\n\n<p>I'm out of ideas... any suggestions on what could be going wrong?</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1522657335, "creation_date": 1522657335, "answer_id": 49607772, "question_id": 49607156, "link": "https://stackoverflow.com/questions/49607156/print-macro-gets-executed-out-of-order/49607772#49607772", "title": "print! macro gets executed out of order", "body": "<p>The problem: <strong><code>print!()</code> doesn't flush stdout!</strong></p>\n\n<p>What does <em>flushing</em> mean, you ask? When printing, you don't want to send every character to stdout on its own: this would occur a lot of overhead (think: doing a syscall, the terminal would have to update its view, ...). So instead of doing that, there is exists a buffer somewhere which holds the content which is about to be printed. To actually print, this buffer has to be <em>flushed</em>.</p>\n\n<p>The reason you hardly notice all of this is, that stdout is always flushed when a newline (<code>'\\n'</code>) is printed. Thus, <code>println!()</code> always flushes! </p>\n\n<p>Your use case is even more confusing, because you are typing into stdin. Here it works pretty much the same way: when you type, the characters are not yet send anywhere! Only the terminal/shell stores what you typed. But once you hit enter (newline), your written text is submitted and send to stdin.</p>\n\n<p>Anyway, you can <a href=\"https://doc.rust-lang.org/stable/std/io/struct.Stdout.html#method.flush\" rel=\"noreferrer\">manually flush stdout</a> without printing a newline:</p>\n\n<pre><code>use std::io::{self, BufRead, Write};\n\nfn main() {\n    println!(\"Usage instructions and stuff\");\n\n    print!(\"Command:\");\n    io::stdout().flush().expect(\"Couldn't flush stdout\");   // &lt;-- here\n\n    let stdin = io::stdin();\n    let mut line = String::new();\n    stdin.lock().read_line(&amp;mut line).expect(\"Couldn't process the command.\");\n    println!(\"{}\", line);\n}\n</code></pre>\n\n<p>This behavior was criticized before: <a href=\"https://github.com/rust-lang/rust/issues/23818\" rel=\"noreferrer\">\"<code>print!</code> should flush stdout\"</a>.</p>\n\n<hr>\n\n<p>And please note: your string <code>line</code> contains a newline character at the very end. You can remove it with <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.trim_right\" rel=\"noreferrer\"><code>trim_right()</code></a>. This has nothing to do with your original question, but you are likely to run into this problem as well ;-) </p>\n"}], "owner": {"reputation": 373, "user_id": 8399495, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7d4dcf7abc7d47d4c9e4f563f4964d0c?s=128&d=identicon&r=PG&f=1", "display_name": "Sarp Ba\u015faraner", "link": "https://stackoverflow.com/users/8399495/sarp-ba%c5%9faraner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 211, "favorite_count": 0, "closed_date": 1522672562, "accepted_answer_id": 49607772, "answer_count": 1, "score": 2, "last_activity_date": 1522657335, "creation_date": 1522654515, "last_edit_date": 1522656334, "question_id": 49607156, "link": "https://stackoverflow.com/questions/49607156/print-macro-gets-executed-out-of-order", "closed_reason": "Duplicate", "title": "print! macro gets executed out of order", "body": "<p>A portion of my code looks like this:</p>\n\n<pre><code>print_usage_instructions();\nprint!(\"Command: \");\nlet stdin = io::stdin();\nlet mut line = String::new();\nstdin.lock().read_line(&amp;mut line).expect(\"Couldn't process the command.\");\nprintln!(\"{}\", line);\n</code></pre>\n\n<p>The behaviour I expect here is something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Usage instructions and stuff\nCommand: [my command]\n[my command]\n</code></pre>\n\n<p>However, what happens is this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Usage instructions and stuff\n[my command]\nCommand: [my command]\n</code></pre>\n\n<p>Any ideas why would that happen? AFAIK, there's no reason for the compiler to change the execution order here, this part of the code is not async nor multithreaded.</p>\n"}, {"tags": ["openssl", "cryptography", "rust", "rsa"], "comments": [{"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 2, "creation_date": 1522655060, "post_id": 49607119, "comment_id": 86221099, "body": "those should be two questions. one whether such an algorithm exists (it does)/how it would work and one how it can be implemented in rust."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1522657776, "post_id": 49607119, "comment_id": 86222275, "body": "For asking whether such an algorithm exists, <a href=\"https://security.stackexchange.com/\">security.se</a> might be a better place to start. But after understanding how the algorithm works, you shouldn&#39;t just ask on StackOverflow: you should try to implement it yourself first and if you have a specific problem, then you can ask here. Just asking &quot;How would I implement this algorithm?&quot; is a bit broad and thus off-topic here on StackOverflow."}], "answers": [{"comments": [{"owner": {"reputation": 9367, "user_id": 4454124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c094d8979fb41b789a7c7f21d9329359?s=128&d=identicon&r=PG&f=1", "display_name": "mnistic", "link": "https://stackoverflow.com/users/4454124/mnistic"}, "edited": false, "score": 0, "creation_date": 1522682062, "post_id": 49611177, "comment_id": 86234147, "body": "Reason for downvote? If something&#39;s inaccurate, I&#39;d like to know it."}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1522691482, "post_id": 49611177, "comment_id": 86239026, "body": "Implementing a whole engine for these seems to be way over the top. Just write an RSA key generator (using the BN functions) and import the key. A <code>rand</code> engine is at the wrong level of abstraction because it is global and affects everything else in the process, not just generation of a single key."}, {"owner": {"reputation": 9367, "user_id": 4454124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c094d8979fb41b789a7c7f21d9329359?s=128&d=identicon&r=PG&f=1", "display_name": "mnistic", "link": "https://stackoverflow.com/users/4454124/mnistic"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1522699154, "post_id": 49611177, "comment_id": 86242896, "body": "@FlorianWeimer OK, thanks for the explanation. You&#39;re right of course. Couldn&#39;t you just execute <code>RSA_generate_key_ex</code> after seeding the PRNG though?"}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1522700171, "post_id": 49611177, "comment_id": 86243328, "body": "OpenSSL might need randomness for something else, in a non-deterministic fashion. And it won&#39;t work if the process is multi-threaded and something else calls a randomness-consuming OpenSSL function."}, {"owner": {"reputation": 9367, "user_id": 4454124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c094d8979fb41b789a7c7f21d9329359?s=128&d=identicon&r=PG&f=1", "display_name": "mnistic", "link": "https://stackoverflow.com/users/4454124/mnistic"}, "reply_to_user": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 0, "creation_date": 1522706251, "post_id": 49611177, "comment_id": 86245772, "body": "I was thinking of it as a standalone executable just to generate the key (since the larger application is Rust-based apparently) but, it&#39;s up to the OP"}], "tags": [], "owner": {"reputation": 9367, "user_id": 4454124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c094d8979fb41b789a7c7f21d9329359?s=128&d=identicon&r=PG&f=1", "display_name": "mnistic", "link": "https://stackoverflow.com/users/4454124/mnistic"}, "is_accepted": false, "score": 0, "last_activity_date": 1522706348, "last_edit_date": 1522706348, "creation_date": 1522671562, "answer_id": 49611177, "question_id": 49607119, "link": "https://stackoverflow.com/questions/49607119/is-it-possible-to-generate-a-rsa-key-pair-from-a-password-in-rust-openssl/49611177#49611177", "title": "Is it possible to generate a RSA key-pair from a password in Rust-openssl?", "body": "<p>Doing this basically boils down to using the password as input to seed a pseudo-random number generator. The same seed will yield the same pseudo-random numbers. An example of doing that to deterministically generate a prime number (which would be used to eventually generate an RSA key) can be found <a href=\"https://stackoverflow.com/a/18266448/4454124\">here</a>. If this is a single-purpose standalone executable, you could then execute <code>RSA_generate_key_ex</code>, otherwise write an RSA key generator (using the BN functions) and import the key.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 13812818, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AOh14Gi1btrX1nbq9Rd5E9m-GR919DE_OcOJg0h7dEJv=k-s128", "display_name": "Bernardo Araujo", "link": "https://stackoverflow.com/users/13812818/bernardo-araujo"}, "is_accepted": false, "score": 0, "last_activity_date": 1597447881, "creation_date": 1597447881, "answer_id": 63421160, "question_id": 49607119, "link": "https://stackoverflow.com/questions/49607119/is-it-possible-to-generate-a-rsa-key-pair-from-a-password-in-rust-openssl/63421160#63421160", "title": "Is it possible to generate a RSA key-pair from a password in Rust-openssl?", "body": "<p>Check out dOpenSSL: <a href=\"https://github.com/bernardoaraujor/dopenssl.rs\" rel=\"nofollow noreferrer\">https://github.com/bernardoaraujor/dopenssl.rs</a></p>\n<p>It consists of a deterministic implementation of some of the OpenSSL functionalities, namely:</p>\n<ul>\n<li>Deterministic Big Number Generation</li>\n<li>Deterministic Pseudo Random Number Generation</li>\n<li>Deterministic RSA Keypair Generation</li>\n</ul>\n<p>I started this repository as an exercise.\nI am also maintaining <a href=\"https://github.com/bernardoaraujor/dopenssl\" rel=\"nofollow noreferrer\">https://github.com/bernardoaraujor/dopenssl</a> (fork), which is written in C.</p>\n<p>My goal in dopenssl.rs is to use <code>bindgen</code> to autogenerate Rust Wrappers.\ndOpenSSL functionality is stable, but Rust Wrappers are a work-in-progress.</p>\n<p>Contributions are welcome.</p>\n"}], "owner": {"reputation": 608, "user_id": 8225884, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ZzuYo.png?s=128&g=1", "display_name": "\u70b8\u9c7c\u85af\u6761\u5fb7\u91cc\u514b", "link": "https://stackoverflow.com/users/8225884/%e7%82%b8%e9%b1%bc%e8%96%af%e6%9d%a1%e5%be%b7%e9%87%8c%e5%85%8b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 464, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1597447881, "creation_date": 1522654366, "question_id": 49607119, "link": "https://stackoverflow.com/questions/49607119/is-it-possible-to-generate-a-rsa-key-pair-from-a-password-in-rust-openssl", "title": "Is it possible to generate a RSA key-pair from a password in Rust-openssl?", "body": "<p>The client store its private key locally and use to sign messages send to server, the server stores the public key of the user in a database to verify messages from client.</p>\n\n<p>Here's my problem, if the client lose its private key due to some accident(like hard-disk being destroyed), it will never be able to connect to server(unless call the administrator of the server to reset his key).</p>\n\n<p>So I'm thinking, if there's an algorithm to generate a deterministic RSA key-pair from a password(which can be kept in the client's human brain), the problem mentioned above will be eliminated.</p>\n\n<p>Is that possible to implement such algorithm using Rust-openssl?</p>\n"}, {"tags": ["concurrency", "rust", "future"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522673563, "post_id": 49605033, "comment_id": 86229806, "body": "Sounds like a &quot;pool&quot; to me, e.g. a database connection pool, thread pool, etc."}, {"owner": {"reputation": 2244, "user_id": 1825860, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b9e1d70a0cbe81683a016e700d3239bf?s=128&d=identicon&r=PG", "display_name": "AlphaModder", "link": "https://stackoverflow.com/users/1825860/alphamodder"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522813143, "post_id": 49605033, "comment_id": 86292268, "body": "@Shepmaster Yeah, that&#39;s definitely what it is."}], "owner": {"reputation": 2244, "user_id": 1825860, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b9e1d70a0cbe81683a016e700d3239bf?s=128&d=identicon&r=PG", "display_name": "AlphaModder", "link": "https://stackoverflow.com/users/1825860/alphamodder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1562012306, "creation_date": 1522640657, "last_edit_date": 1562012306, "question_id": 49605033, "link": "https://stackoverflow.com/questions/49605033/how-to-share-limited-resources-between-concurrently-running-tasks-using-rust-fut", "title": "How to share limited resources between concurrently running tasks using Rust futures?", "body": "<p>I'm implementing a system that processes a certain kind of task asynchronously in Rust. In order to do this, I am using the <a href=\"https://crates.io/crates/futures\" rel=\"nofollow noreferrer\">futures</a> crate (the 0.2 beta version). </p>\n\n<p>Processing one of these tasks requires temporary but exclusive use of a certain type of resource, of which there are a fixed number of in the system. </p>\n\n<p>Keep in mind that this all takes place in a concurrent context: multiple threads may be trying to process a task at once. A simplified version of the interface I've been using is this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// A fixed number of these are held by the System, and a TaskFuture needs one to complete.\npub struct Resource;\n\npub struct System {\n    // how should the system hold Resources?\n}\n\nimpl System {\n    pub fn queue_task(&amp;self, data: TaskData) -&gt; TaskFuture {\n        TaskFuture { system: self }\n    }\n}\n\npub struct TaskFuture&lt;'a&gt; {\n    system: &amp;'a System,\n}\n\nimpl&lt;'a&gt; Future for TaskFuture&lt;'a&gt; {\n    type Item = ?;\n    type Error = ?;\n    fn poll(&amp;mut self, cx: &amp;mut Context) -&gt; Result&lt;Async&lt;Self::Item&gt;, Self::Error&gt; {\n        /* how can I implement this? */\n    }\n}\n</code></pre>\n\n<p>As can be seen, I'm not quite sure what's the best way to implement such a system. </p>\n\n<p>My first thought would be to have the <code>System</code> hold several <code>Mutex&lt;Resource&gt;</code>s, and have <code>TaskFuture::poll</code> try to get one if available, and if not return <code>NotReady</code> (though I'm not sure how I would wake the future up later in that scenario). </p>\n\n<p>At any rate, I get the feeling that maybe I should avoid using the <code>std</code> synchronization primitives in a <code>futures</code>-based context unless absolutely necessary, so is there a more idiomatic <code>futures</code>-based solution to this? </p>\n"}, {"tags": ["enums", "rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1588786257, "last_edit_date": 1588786257, "creation_date": 1522632301, "answer_id": 49604234, "question_id": 49604190, "link": "https://stackoverflow.com/questions/49604190/how-do-i-configure-serde-to-use-an-enum-variants-discriminant-rather-than-name/49604234#49604234", "title": "How do I configure Serde to use an enum variant&#39;s discriminant rather than name?", "body": "<p>The Serde website has an <a href=\"https://serde.rs/enum-number.html\" rel=\"nofollow noreferrer\">entire example on how to serialize an enum as a number</a>:</p>\n\n<blockquote>\n  <pre><code>[dependencies]\nserde = \"1.0\"\nserde_repr = \"0.1\"\n</code></pre>\n  \n  <pre class=\"lang-rust prettyprint-override\"><code>use serde_repr::*;\n\n#[derive(Serialize_repr, Deserialize_repr, PartialEq, Debug)]\n#[repr(u8)]\nenum SmallPrime {\n    Two = 2,\n    Three = 3,\n    Five = 5,\n    Seven = 7,\n}\n\nfn main() {\n    use SmallPrime::*;\n    let nums = vec![Two, Three, Five, Seven];\n\n    // Prints [2,3,5,7]\n    println!(\"{}\", serde_json::to_string(&amp;nums).unwrap());\n\n    assert_eq!(Two, serde_json::from_str(\"2\").unwrap());\n}\n</code></pre>\n</blockquote>\n\n<p>I would believe that this is the best way to do it as it's recommended by the crate authors themselves.</p>\n"}], "owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 941, "favorite_count": 0, "accepted_answer_id": 49604234, "answer_count": 1, "score": 3, "last_activity_date": 1588786257, "creation_date": 1522631822, "last_edit_date": 1522632147, "question_id": 49604190, "link": "https://stackoverflow.com/questions/49604190/how-do-i-configure-serde-to-use-an-enum-variants-discriminant-rather-than-name", "title": "How do I configure Serde to use an enum variant&#39;s discriminant rather than name?", "body": "<p>I'm parsing an INI-style file that uses integers for enumerators.</p>\n\n<pre><code>#[derive(Debug, Deserialize, Serialize)]\npub enum MyThing {\n    First = 0,\n    Second = 1,\n    Third = 2,\n}\n</code></pre>\n\n<p>In the file, the value will get serialized like so:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thing=0\n</code></pre>\n\n<p>However, Serde by default matches against the variant name rather than the discriminant. Is custom-implementing <code>Deserialize</code> the cleanest method?</p>\n"}, {"tags": ["macos", "debugging", "rust", "profiling", "dtrace"], "answers": [{"tags": [], "owner": {"reputation": 1788, "user_id": 403367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2b3a5c1fc1e8d3cf913b695d7422e2cd?s=128&d=identicon&r=PG", "display_name": "PJ.Hades", "link": "https://stackoverflow.com/users/403367/pj-hades"}, "is_accepted": false, "score": 3, "last_activity_date": 1522681586, "last_edit_date": 1522681586, "creation_date": 1522680858, "answer_id": 49613549, "question_id": 49601772, "link": "https://stackoverflow.com/questions/49601772/dtrace-pid-provider-does-not-trigger-some-return-probes/49613549#49613549", "title": "DTrace `pid` provider does not trigger some `return` probes", "body": "<p>According to <a href=\"http://dtrace.org/blogs/brendan/2011/02/14/dtrace-pid-provider-return/\" rel=\"nofollow noreferrer\">Brendan Gregg's blog post</a>, the issue may be caused by compiler optimizations, where DTrace is confused by the optimized code so that it's unable to create certain <code>return</code> probes. To turn off the optimization, we can add the following content to the <code>Cargo.toml</code> of the test program:</p>\n\n<pre><code>[profile.release]\nopt-level = 0\n</code></pre>\n\n<p>After doing this I can find the desired <code>return</code> probes with command:</p>\n\n<pre><code>sudo dtrace -l -n 'pid$target:::return' -c './path/to/test/binary'\n</code></pre>\n"}], "owner": {"reputation": 1788, "user_id": 403367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2b3a5c1fc1e8d3cf913b695d7422e2cd?s=128&d=identicon&r=PG", "display_name": "PJ.Hades", "link": "https://stackoverflow.com/users/403367/pj-hades"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1522681586, "creation_date": 1522610339, "question_id": 49601772, "link": "https://stackoverflow.com/questions/49601772/dtrace-pid-provider-does-not-trigger-some-return-probes", "title": "DTrace `pid` provider does not trigger some `return` probes", "body": "<p>I'm on OS X Yosemite 10.10.5. I have a library written in Rust and I need to measure the running time spent inside the library. I set up some <code>pid</code> probes like this (not the actual script):</p>\n\n<pre><code>pid$target::*parse*:entry\n{\n}\n\npid$target::*parse*:return\n{\n}\n\npid$target::*re_match*:entry\n{\n}\n\npid$target::*re_match*:return\n{\n}\n</code></pre>\n\n<p>The corresponding test code looks like:</p>\n\n<pre><code>let xxx = xxx_of_len(10);\nlet m = re_match(RE_XXX, &amp;xxx).unwrap();\nprintln!(\"{:?}\", m);\n</code></pre>\n\n<p>The implementation of the <code>re_match</code> function in my library is:</p>\n\n<pre><code>pub fn re_match(re: &amp;str, s: &amp;str) -&gt; Result&lt;MatchResult, Error&gt; {\n    let prog = Compiler::compile(&amp;Parser::parse(re)?)?;\n    let mut vm = Vm::new(&amp;prog);\n    if vm.run(&amp;s.chars().collect()) {\n        return Ok(MatchResult::Match(vm.groups.clone()));\n    }\n    Ok(MatchResult::NotMatch)\n}\n</code></pre>\n\n<p>The issue is, the two <code>return</code> probes cannot be triggered while the <code>entry</code> probes work normally. Also, if I set up the <code>entry</code> and <code>return</code> probes for the <code>Compile::compile</code> function in the same way, both probes work.</p>\n\n<p>So what may be the cause of this issue and how should I work around it?</p>\n"}, {"tags": ["compiler-errors", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1522621519, "last_edit_date": 1522621519, "creation_date": 1522621049, "answer_id": 49603136, "question_id": 49601527, "link": "https://stackoverflow.com/questions/49601527/why-does-including-the-same-struct-from-the-same-file-into-multiple-crates-resul/49603136#49603136", "title": "Why does including the same struct from the same file into multiple crates result in a type mismatch error?", "body": "<p>You are <em>not using the same type</em>, as far as the compiler is concerned. Rust has <em>nominal typing</em>, not <em>structural typing</em>. You may be familiar from structural typing from languages such as TypeScript.</p>\n\n<blockquote>\n  <p>except for the namespace</p>\n</blockquote>\n\n<p>The namespace, including the crate, is part of what makes a type unique. You have imported the same file multiple times in different crates. That's no different from having identical structs in different modules:</p>\n\n<pre><code>mod a {\n    struct A;\n}\n\nmod b {\n    struct A;\n}\n</code></pre>\n\n<p>These should not be the same type.</p>\n\n<p>The fact that they are the same file doesn't really matter to the compiler. If it did, there'd be really strange issues around symlinks and hardlinks...</p>\n\n<p>All that matters is where you've placed the type in a crate and module hierarchy.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://wiki.c2.com/?NominativeAndStructuralTyping\" rel=\"nofollow noreferrer\">Nominative And Structural Typing</a></li>\n</ul>\n"}], "owner": {"reputation": 125, "user_id": 5862030, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c3ea28fa33abc07ba4b55ca26c4ad35c?s=128&d=identicon&r=PG&f=1", "display_name": "KuSpa", "link": "https://stackoverflow.com/users/5862030/kuspa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 49603136, "answer_count": 1, "score": 0, "last_activity_date": 1522663969, "creation_date": 1522608729, "last_edit_date": 1522663969, "question_id": 49601527, "link": "https://stackoverflow.com/questions/49601527/why-does-including-the-same-struct-from-the-same-file-into-multiple-crates-resul", "title": "Why does including the same struct from the same file into multiple crates result in a type mismatch error?", "body": "<p>I created the following file structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>mod_test/src/\n|- main.rs\n|- a_module.rs\n|- lib.rs\n</code></pre>\n\n<p><strong>a_module.rs</strong></p>\n\n<pre><code>pub struct A {}\n</code></pre>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>mod a_module;\npub fn run(s: a_module::A) {}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate mod_test;\n\nmod a_module;\n\nfn main() {\n    let b: a_module::A b = a_module::A {};\n    mod_test::run(b);\n}\n</code></pre>\n\n<p>The parameter type of the <code>run</code> function in the lib file is obviously the same as <code>b</code> is (except for the namespace, it's the <code>A</code> struct in both cases). Since <code>run</code> is imported in another namespace, the compiler tells me that there is a type mismatch:</p>\n\n<pre><code>expected: modTest::a_module::A -- got: a_module::A\n</code></pre>\n\n<p>I know how to fix that behavior, but why is this behavior intended?</p>\n\n<p>Why can't the compiler see that the <code>A</code> struct is the exact same, since it refers to the exact same file?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1522602131, "post_id": 49600449, "comment_id": 86207979, "body": "Wouldn&#39;t this require providing dummy implementations of T&#39;s members for <code>!</code>?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1522603260, "last_edit_date": 1522603260, "creation_date": 1522601903, "answer_id": 49600449, "question_id": 49600368, "link": "https://stackoverflow.com/questions/49600368/how-do-i-write-an-unimplemented-function-that-returns-impl-trait-without-dummy-c/49600449#49600449", "title": "How do I write an unimplemented function that returns impl Trait without dummy code?", "body": "<p>This is a <a href=\"https://github.com/rust-lang/rust/issues/36375\" rel=\"nofollow noreferrer\">known issue</a>.</p>\n\n<p>The easy (cheating) answer is to implement your trait for <code>!</code>:</p>\n\n<pre><code>impl T for ! {}\n</code></pre>\n\n<p>You can see in the <a href=\"https://github.com/rust-lang/rust/issues/35121\" rel=\"nofollow noreferrer\">tracking issue for promoting <code>!</code> to a type</a> that much discussion has been around which traits to implement for a type. </p>\n\n<p>There was also <a href=\"https://github.com/rust-lang/rfcs/pull/1637\" rel=\"nofollow noreferrer\">an RFC to implement traits automatically for <code>!</code></a>, but it was not accepted. This requires \"implementing\" any methods in the trait because <a href=\"https://github.com/rust-lang/rfcs/pull/1699\" rel=\"nofollow noreferrer\">another proposed RFC</a> was also postponed:</p>\n\n<pre><code>trait T {\n    fn hello(&amp;self) -&gt; u32;\n}\n\nimpl T for ! {\n    fn hello(&amp;self) -&gt; u32 {\n        *self\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 657, "user_id": 2547570, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/66ac34b6d04aa0bf9c738ef391c8b722?s=128&d=identicon&r=PG", "display_name": "mq7", "link": "https://stackoverflow.com/users/2547570/mq7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 369, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1522603260, "creation_date": 1522601321, "last_edit_date": 1522601500, "question_id": 49600368, "link": "https://stackoverflow.com/questions/49600368/how-do-i-write-an-unimplemented-function-that-returns-impl-trait-without-dummy-c", "title": "How do I write an unimplemented function that returns impl Trait without dummy code?", "body": "<p>I tried this:</p>\n\n<pre><code>trait T {}\n\nfn f() -&gt; impl T {\n    unimplemented!();\n}\n\nfn main() {\n    f();\n}\n</code></pre>\n\n<p>But it gives this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `!: T` is not satisfied\n --&gt; src/main.rs:3:11\n  |\n3 | fn f() -&gt; impl T {\n  |           ^^^^^^ the trait `T` is not implemented for `!`\n  |\n  = note: the return type of a function must have a statically known size\n</code></pre>\n\n<p>This compiles if a branch in <code>f</code> returns something:</p>\n\n<pre><code>struct S {}\n\ntrait T {}\n\nimpl T for S {}\n\nfn f(a: u32) -&gt; impl T {\n    if a == 0 {\n        panic!();\n    } else {\n        S {}\n    }\n}\n\nfn main() {\n    f(5);\n}\n</code></pre>\n"}, {"tags": ["rust", "b-tree"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522599401, "post_id": 49599833, "comment_id": 86207129, "body": "The second half of your question already exists: <a href=\"https://stackoverflow.com/q/39121982/155423\">How to insert a value into a BTreeSet in Rust and then get an iterator beginning at its location?</a>. Please <a href=\"https://stackoverflow.com/posts/49599833/edit\">edit</a> your question to remove it as questions should focus on one specific topic."}, {"owner": {"reputation": 509, "user_id": 3806734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/58dabdd07ae894f3982e4770d8030c3c?s=128&d=identicon&r=PG&f=1", "display_name": "blacktemplar", "link": "https://stackoverflow.com/users/3806734/blacktemplar"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522599762, "post_id": 49599833, "comment_id": 86207255, "body": "Thanks for your help, I edited the question to only concern the extended api of finding the next smaller and larger element (optimally without inserting)"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522600023, "post_id": 49600137, "comment_id": 86207333, "body": "<code>map.range(..key).rev().next().unwrap()</code> or <code>map.range(..key).next_back().unwrap()</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522600341, "post_id": 49600137, "comment_id": 86207421, "body": "Why wouldn&#39;t it be? Do you believe that the Rust standard library would implement <code>DoubleEndedIterator</code> on a type if it wasn&#39;t efficient to do so?"}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522600520, "post_id": 49600137, "comment_id": 86207479, "body": "Well, it lacks an efficient implementation of <code>last()</code>, so I was worried. But the code looks okay."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522600745, "post_id": 49600137, "comment_id": 86207555, "body": "You could submit a PR that adds a specialization of <code>Iterator::last</code> to the <code>Range</code> and <code>RangeMut</code> iterators, in that case."}, {"owner": {"reputation": 509, "user_id": 3806734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/58dabdd07ae894f3982e4770d8030c3c?s=128&d=identicon&r=PG&f=1", "display_name": "blacktemplar", "link": "https://stackoverflow.com/users/3806734/blacktemplar"}, "edited": false, "score": 0, "creation_date": 1522601159, "post_id": 49600137, "comment_id": 86207683, "body": "Wow thanks for the fast help, didn&#39;t realize you can have open ranges. Is all this still in O(log(n))?"}, {"owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "edited": false, "score": 1, "creation_date": 1522601943, "post_id": 49600137, "comment_id": 86207930, "body": "Yes, these functions use the tree structure and should be fairly efficient."}], "tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 9, "last_activity_date": 1522600767, "last_edit_date": 1522600767, "creation_date": 1522599839, "answer_id": 49600137, "question_id": 49599833, "link": "https://stackoverflow.com/questions/49599833/how-to-find-next-smaller-key-in-btreemap-btreeset/49600137#49600137", "title": "How to find next smaller key in BTreeMap/BTreeSet?", "body": "<p>You can use the <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html#method.range\" rel=\"noreferrer\"><code>range</code> method</a> and the iterator methods on the returned <code>Range</code> object:</p>\n\n<pre><code>use std::collections::BTreeMap;\nlet mut map = BTreeMap::new();\nmap.insert(2, 0);\nmap.insert(3, 1);\nmap.insert(5, 2);\nmap.insert(7, 3);\nmap.insert(11, 4);\nlet key = 6;\nprintln!(\"maximum in map less than {}: {:?}\",\n         key, map.range(..key).next_back().unwrap());\nprintln!(\"minimum in map greater than {}: {:?}\",\n         key, map.range(key..).next().unwrap());\n</code></pre>\n\n<p><code>next_back()</code> and <code>next()</code> both perform tree traversals, so they are reasonably efficient.</p>\n"}], "owner": {"reputation": 509, "user_id": 3806734, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/58dabdd07ae894f3982e4770d8030c3c?s=128&d=identicon&r=PG&f=1", "display_name": "blacktemplar", "link": "https://stackoverflow.com/users/3806734/blacktemplar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1171, "favorite_count": 1, "accepted_answer_id": 49600137, "answer_count": 1, "score": 8, "last_activity_date": 1522600767, "creation_date": 1522597932, "last_edit_date": 1522599724, "question_id": 49599833, "link": "https://stackoverflow.com/questions/49599833/how-to-find-next-smaller-key-in-btreemap-btreeset", "title": "How to find next smaller key in BTreeMap/BTreeSet?", "body": "<p>If I understand b-trees correctly, it should be easy and possible in logarithmic time to search for a key. If the key is not existent, it can  return the next smaller and larger key; the neighbors of the given key if it would get inserted.</p>\n\n<p>Does this functionality already exist?</p>\n\n<p>One possible but complicated way to do it with the current API is to insert the key and then get an iterator to that key so that we can call <code>next</code> on this iterator. Although, its also not clear how to get an iterator to a newly inserted element (see <a href=\"https://stackoverflow.com/questions/39121982/how-to-insert-a-value-into-a-btreeset-in-rust-and-then-get-an-iterator-beginning\">this question</a>)</p>\n\n<p>Why are those methods missing or am I missing something?</p>\n"}, {"tags": ["graphics", "rust", "shader", "vulkan", "compute-shader"], "comments": [{"owner": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "edited": false, "score": 0, "creation_date": 1522596869, "post_id": 49599624, "comment_id": 86206467, "body": "&quot;<i>However, when I try to copy into the framebuffer, Vulkan gives an access error, saying the framebuffer is not initialised.</i>&quot; How could we know what would cause that without seeing your code? Like, <i>all of it</i>?"}, {"owner": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "edited": false, "score": 0, "creation_date": 1522597930, "post_id": 49599624, "comment_id": 86206743, "body": "Also exact error message."}, {"owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "reply_to_user": {"reputation": 374849, "user_id": 734069, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a356923f858fbe363dad1dc566837fc6?s=128&d=identicon&r=PG", "display_name": "Nicol Bolas", "link": "https://stackoverflow.com/users/734069/nicol-bolas"}, "edited": false, "score": 0, "creation_date": 1522598611, "post_id": 49599624, "comment_id": 86206905, "body": "@NicolBolas I thought I no longer had the original code (I moved to rendering a quad now), but I do happen to have the original code still! I will amend it to the answer shortly."}, {"owner": {"reputation": 5299, "user_id": 126546, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5300f94d7227aca52dfe170ce14a225c?s=128&d=identicon&r=PG", "display_name": "Jesse Hall", "link": "https://stackoverflow.com/users/126546/jesse-hall"}, "edited": false, "score": 3, "creation_date": 1522599524, "post_id": 49599624, "comment_id": 86207176, "body": "That error must be coming from the Rust bindings, not from Vulkan itself, so I&#39;m guessing a bit. But it sounds like it&#39;s complaining that you&#39;re copying to an image that is still in PRESENT_SRC layout. After acquiring a swapchain image, you need to transition it from PRESENT_SRC to an appropriate layout (GENERAL or TRANSFER_DST_OPTIMAL in this case), fill it, and then transition it back to PRESENT_SRC before presenting."}], "answers": [{"tags": [], "owner": {"reputation": 8395, "user_id": 3007154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb7293bd97c47febd218463c27b394c6?s=128&d=identicon&r=PG&f=1", "display_name": "krOoze", "link": "https://stackoverflow.com/users/3007154/krooze"}, "is_accepted": false, "score": 2, "last_activity_date": 1522601357, "last_edit_date": 1522601357, "creation_date": 1522599907, "answer_id": 49600146, "question_id": 49599624, "link": "https://stackoverflow.com/questions/49599624/access-framebuffers-from-compute-shaders/49600146#49600146", "title": "Access framebuffers from compute shaders", "body": "<p>The <a href=\"https://docs.rs/vulkano/0.9.0/vulkano/sync/enum.AccessError.html#variant.ImageNotInitialized\" rel=\"nofollow noreferrer\">doc</a> says about <code>ImageNotInitialized</code>:</p>\n\n<blockquote>\n  <p>Trying to use an image without transitionning it from the \"undefined\" or \"preinitialized\" layouts first.</p>\n</blockquote>\n"}], "owner": {"reputation": 11531, "user_id": 2558778, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/8673885f9ba1bd1424015567ef6833f5?s=128&d=identicon&r=PG&f=1", "display_name": "Jeroen", "link": "https://stackoverflow.com/users/2558778/jeroen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1522601357, "creation_date": 1522596563, "last_edit_date": 1522598772, "question_id": 49599624, "link": "https://stackoverflow.com/questions/49599624/access-framebuffers-from-compute-shaders", "title": "Access framebuffers from compute shaders", "body": "<p>I have a compute shader which renders an image. The image is basically a finished frame. </p>\n\n<p>I would like to render said image on the screen. The most obvious way to do this is to instead of rendering to this image, rendering straight to the frambuffer. I have been told however, that this requires the <code>storage</code> bit to be set on the framebuffer, which is not the case on my machine.</p>\n\n<p>The next best thing is then to copy over the image to the framebuffer. This requires the <code>target</code> bit to be set on the framebuffer image, which luckily happens to be the case on my machine.</p>\n\n<p>However, when I try to copy into the framebuffer, Vulkan gives an access error, saying the framebuffer is not initialised.</p>\n\n<pre><code>AccessError {\n    error: ImageNotInitialized { requested: PresentSrc },\n    command_name: \"vkCmdCopyImage\",\n    command_param: \"destination\", command_offset: 4\n}\n</code></pre>\n\n<p>If it matters, I am using the <a href=\"http://vulkano.rs/\" rel=\"nofollow noreferrer\">Rust bindings</a> to Vulkan. The code is quite bulky, the entire thing is available on <a href=\"https://gitlab.com/binero/wingrendering/tree/master\" rel=\"nofollow noreferrer\">GitLab</a>. The command buffer is created as follows:</p>\n\n<pre><code>let command_buffer = AutoCommandBufferBuilder::new(queue.device().clone(), queue.family())?\n    .clear_color_image(image.clone(), ClearValue::Float([1.0, 0.0, 0.0, 1.0]))?\n    .dispatch(\n    [(WIDTH / 16) as u32, (HEIGHT / 16) as u32, 1],\n    compute_pipeline.clone(),\n    set.clone(),\n    (),\n    )?\n    .copy_image(\n    image.clone(),\n    [0, 0, 0],\n    0,\n    0,\n    render_manager.images[next_image_index].clone(),\n    [0, 0, 0],\n    0,\n    0,\n    [WIDTH as u32, HEIGHT as u32, 1],\n    1,\n    )?\n    .build()?;\n</code></pre>\n\n<p><em>I know I could just render to a quad on the image, which is what I am doing now, but it's a lot of bulky code that doesn't do much.</em></p>\n"}, {"tags": ["iterator", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3480, "user_id": 2686821, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/5dd46afe4f5a75f2667569582b20ac9b?s=128&d=identicon&r=PG&f=1", "display_name": "soupybionics", "link": "https://stackoverflow.com/users/2686821/soupybionics"}, "edited": false, "score": 0, "creation_date": 1525781890, "post_id": 49599226, "comment_id": 87484249, "body": "Could you please explain about  <code>static</code> lifetime here for <code>T</code> ? If I remove that, it gives <code>T may not live long enough</code> error. I am not able to comprehend under what scenario the code would crash, had the compiler waved off that error?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1522593942, "creation_date": 1522593942, "answer_id": 49599226, "question_id": 49594732, "link": "https://stackoverflow.com/questions/49594732/how-to-return-a-boxed-clonable-iterator-in-rust/49599226#49599226", "title": "How to return a boxed clonable iterator in Rust?", "body": "<p><code>Iterator</code> is a <em>trait</em> and thus <code>Box&lt;Iterator&gt;</code> is a <em>trait object</em>.  </p>\n\n<p><code>Clone</code> cannot be made into a trait object because it requires knowledge of <code>Self</code>, so we follow the instructions in <a href=\"https://stackoverflow.com/q/30353462/155423\">How to clone a struct storing a boxed trait object?</a>:</p>\n\n<pre><code>trait CloneIterator: Iterator {\n    fn clone_box(&amp;self) -&gt; Box&lt;CloneIterator&lt;Item = Self::Item&gt;&gt;;\n}\n\nimpl&lt;T&gt; CloneIterator for T\nwhere\n    T: 'static + Iterator + Clone,\n{\n    fn clone_box(&amp;self) -&gt; Box&lt;CloneIterator&lt;Item = Self::Item&gt;&gt; {\n        Box::new(self.clone())\n    }\n}\n\nfn example(switch: bool) -&gt; Box&lt;CloneIterator&lt;Item = String&gt;&gt; {\n    let i = vec![\"a\".into(), \"b\".into()].into_iter();\n    if switch {\n        Box::new(i)\n    } else {\n        Box::new(i.take(1))\n    }\n}\n\nfn main() {\n    let i = example(true);\n    let i2 = i.clone_box();\n\n    let j = example(false);\n    let j2 = j.clone_box();\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30353462/155423\">How to clone a struct storing a boxed trait object?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a></li>\n</ul>\n"}], "owner": {"reputation": 444, "user_id": 3422156, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/29af89a0e8be5cf63546304d02c8e2fb?s=128&d=identicon&r=PG&f=1", "display_name": "spease", "link": "https://stackoverflow.com/users/3422156/spease"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 270, "favorite_count": 0, "accepted_answer_id": 49599226, "answer_count": 1, "score": 2, "last_activity_date": 1522593942, "creation_date": 1522555941, "last_edit_date": 1522592975, "question_id": 49594732, "link": "https://stackoverflow.com/questions/49594732/how-to-return-a-boxed-clonable-iterator-in-rust", "title": "How to return a boxed clonable iterator in Rust?", "body": "<p>What's the right way to return a boxed clonable iterator from an expression? For example:</p>\n\n<pre><code>fn example() -&gt; Box&lt;Iterator&lt;Item = String&gt; + Clone&gt; {\n    unimplemented!()\n}\n</code></pre>\n\n<p>This gives me an error that only automatic traits can be specified in this manner:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0225]: only auto traits can be used as additional traits in a trait object\n --&gt; src/main.rs:1:47\n  |\n1 | fn example() -&gt; Box&lt;Iterator&lt;Item = String&gt; + Clone&gt; {\n  |                                               ^^^^^ non-auto additional trait\n</code></pre>\n\n<p>This is my real code:</p>\n\n<pre><code>let my_iterator = {\n    if a {\n        Box::new(/* ... */) as Box&lt;Iterator&lt;Item = String&gt; + Clone&gt;\n    } else {\n        Box::new(/* ... */) as Box&lt;Iterator&lt;Item = String&gt; + Clone&gt;\n    }\n};\nlet pb = ProgressBar::new(my_iterator.clone().count() as u64);\n</code></pre>\n\n<p>If alternative suggestions are considered: the two branches represent one path for loading from a file, the other path for generating automatically, and I'd rather not keep things in memory if they aren't needed.</p>\n"}, {"tags": ["rust", "operator-overloading"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 454, "user_id": 1492569, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/GnbSZ.jpg?s=128&g=1", "display_name": "John Estess", "link": "https://stackoverflow.com/users/1492569/john-estess"}, "edited": false, "score": 0, "creation_date": 1522546831, "post_id": 49593827, "comment_id": 86195535, "body": "@JohnEstess that&#39;s why I linked to the extra question; it doesn&#39;t really have to do with <code>HashMap</code> (as I attempted to indicate in the parenthetical). Right now, there&#39;s no way to say <code>foo[index_not_in_collection] = new_value</code>. You can only do <code>foo[index_in_collection] = replacement_value</code>. Thus <code>IndexMut</code> returns a mutable reference that you then can use or replace, but it must already exist."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 454, "user_id": 1492569, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/GnbSZ.jpg?s=128&g=1", "display_name": "John Estess", "link": "https://stackoverflow.com/users/1492569/john-estess"}, "edited": false, "score": 2, "creation_date": 1522546960, "post_id": 49593827, "comment_id": 86195556, "body": "@JohnEstess <i>the rather obtuse example</i> \u2014 Rust strives for good documentation. I&#39;m sure that if you filed an issue explaining why the example threw you, someone would appreciate the feedback and might adjust the example accordingly."}, {"owner": {"reputation": 69, "user_id": 2245626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fadb64d123868b634eb5d9541e8d899f?s=128&d=identicon&r=PG", "display_name": "edulix", "link": "https://stackoverflow.com/users/2245626/edulix"}, "edited": false, "score": 0, "creation_date": 1567401888, "post_id": 49593827, "comment_id": 101940341, "body": "@Shepmaster not really true, you could add a new value, just modify the <code>index_mut</code> implementation to increase the size of the vector before returning."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 69, "user_id": 2245626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fadb64d123868b634eb5d9541e8d899f?s=128&d=identicon&r=PG", "display_name": "edulix", "link": "https://stackoverflow.com/users/2245626/edulix"}, "edited": false, "score": 0, "creation_date": 1568052928, "post_id": 49593827, "comment_id": 102144632, "body": "@edulix not really. <code>DerefMut</code> needs to return a <code>&amp;mut T</code>, and all references must be valid otherwise you create undefined behavior. You could increase the size of the vector, but you wouldn&#39;t have a valid value to store in that vector before returning a reference to it. Try implementing your suggestion to see the problem first-hand. ^_^"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1522544003, "creation_date": 1522544003, "answer_id": 49593827, "question_id": 49593793, "link": "https://stackoverflow.com/questions/49593793/is-there-a-way-to-overload-the-index-assignment-operator/49593827#49593827", "title": "Is there a way to overload the index assignment operator?", "body": "<p>You are using <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"noreferrer\"><code>Index</code></a>, which says this in its documentation:</p>\n\n<blockquote>\n  <p>If a mutable value is requested, <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html\" rel=\"noreferrer\"><code>IndexMut</code></a> is used instead.</p>\n</blockquote>\n\n<pre><code>use std::ops::{Index, IndexMut};\n\n#[derive(Debug, Clone, Copy)]\npub struct Vec3 {\n    e: [f32; 3],\n}\n\nimpl Index&lt;usize&gt; for Vec3 {\n    type Output = f32;\n    fn index&lt;'a&gt;(&amp;'a self, i: usize) -&gt; &amp;'a f32 {\n        &amp;self.e[i]\n    }\n}\n\nimpl IndexMut&lt;usize&gt; for Vec3 {\n    fn index_mut&lt;'a&gt;(&amp;'a mut self, i: usize) -&gt; &amp;'a mut f32 {\n        &amp;mut self.e[i]\n    }\n}\n\nfn main() {\n    let mut point = Vec3 { e: [0.0, 1.0, 3.0] };\n    point[0] = 99.9;\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30414424/155423\">Update value in mutable HashMap</a> (why you cannot <em>create</em> a new value using the <code>IndexMut</code> trait)</li>\n</ul>\n"}], "owner": {"reputation": 454, "user_id": 1492569, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/GnbSZ.jpg?s=128&g=1", "display_name": "John Estess", "link": "https://stackoverflow.com/users/1492569/john-estess"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2117, "favorite_count": 1, "accepted_answer_id": 49593827, "answer_count": 1, "score": 4, "last_activity_date": 1522544003, "creation_date": 1522543589, "last_edit_date": 1522543746, "question_id": 49593793, "link": "https://stackoverflow.com/questions/49593793/is-there-a-way-to-overload-the-index-assignment-operator", "title": "Is there a way to overload the index assignment operator?", "body": "<p>I can overload the <code>[]</code> operator with <code>Index</code> to return a ref, but I don't know if I have an overloaded operator to assign to the object. </p>\n\n<p>This is what I want to do:</p>\n\n<pre><code>point[0] = 9.9;\n</code></pre>\n\n<p>This is what I can do so far (get a value):</p>\n\n<pre><code>use std::ops::Index;\n\n#[derive(Debug, Clone, Copy)]\npub struct Vec3 {\n    e: [f32; 3],\n}\n\nimpl Index&lt;usize&gt; for Vec3 {\n    type Output = f32;\n    fn index&lt;'a&gt;(&amp;'a self, i: usize) -&gt; &amp;'a f32 {\n        &amp;self.e[i]\n    }\n}\n\nfn main() {\n    let point = Vec3 { e: [0.0, 1.0, 3.0] };\n    let z = point[2];\n    println!(\"{}\", z);\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-diesel"], "answers": [{"comments": [{"owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "edited": false, "score": 0, "creation_date": 1522624010, "post_id": 49593279, "comment_id": 86214117, "body": "That worked. Note for future people who find this question/answer: Since my schema and models were in two different files, I had to add <code>use schema::{users};</code> to the top of models.rs to get it compile."}, {"owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "edited": false, "score": 0, "creation_date": 1522624050, "post_id": 49593279, "comment_id": 86214125, "body": "Would adding the primary key in my schema definition have the same effect? Are there differences in either approach?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "edited": false, "score": 0, "creation_date": 1522627719, "post_id": 49593279, "comment_id": 86214780, "body": "@crashspringfield could you suggest how I could clarify the statement  in the answer which I thought already addressed your comment: <i>I believe you could also just change your primary key in your schema definition (<code>users (user_id)</code>)</i>?"}, {"owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "edited": false, "score": 0, "creation_date": 1522685641, "post_id": 49593279, "comment_id": 86235977, "body": "Sure. So I get that schema.rs is generated from models.rs. Does #[primary_key(user_id)] generate a schema where the primary key is <code>user_id</code> instead of <code>id</code>? I&#39;ve been manually updating my schema to represent changes I&#39;ve made to my models, so that could be where my confusion arises."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "edited": false, "score": 0, "creation_date": 1522689758, "post_id": 49593279, "comment_id": 86238077, "body": "@crashspringfield <i>I get that schema.rs is generated from models.rs</i> \u2014 it is not. Generally, the schema definition in the Rust code reflects the schema of the database. In my answer, it&#39;s the <code>table!</code> macro, which is just &quot;hard coded&quot; into the source. <a href=\"http://diesel.rs/guides/getting-started/\" rel=\"nofollow noreferrer\">You normally generate the schema from the DB: <code>diesel print-schema &gt; src&#47;schema.rs</code></a>. Your Rust structs are subordinate to the schema."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1522538131, "last_edit_date": 1522538131, "creation_date": 1522537547, "answer_id": 49593279, "question_id": 49593189, "link": "https://stackoverflow.com/questions/49593189/diesels-attribute-primary-key-is-currently-unknown-to-the-compiler/49593279#49593279", "title": "Diesel&#39;s attribute `primary_key` is currently unknown to the compiler", "body": "<p>The <code>primary_key</code> attribute is only applicable when deriving <code>Identifiable</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\n\nmod schema {\n    table! {\n        users (user_id) {\n            user_id -&gt; Int4,\n            email -&gt; Text,\n        }\n    }\n\n    #[derive(Debug, Identifiable)]\n    #[primary_key(email)]\n    pub struct User {\n        pub user_id: i32,\n        pub email: String,\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I believe you could also just change your primary key in your schema definition (<code>users (user_id)</code>).</p>\n"}], "owner": {"reputation": 825, "user_id": 6392402, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/b64863f890a4a549823ba3fa320a9869?s=128&d=identicon&r=PG&f=1", "display_name": "crash springfield", "link": "https://stackoverflow.com/users/6392402/crash-springfield"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 503, "favorite_count": 0, "accepted_answer_id": 49593279, "answer_count": 1, "score": 1, "last_activity_date": 1522538131, "creation_date": 1522536722, "last_edit_date": 1522537243, "question_id": 49593189, "link": "https://stackoverflow.com/questions/49593189/diesels-attribute-primary-key-is-currently-unknown-to-the-compiler", "title": "Diesel&#39;s attribute `primary_key` is currently unknown to the compiler", "body": "<p>I'm trying to use the <code>#[primarykey()]</code> macro in Diesel but am getting an error that it is unknown. From what I have found, adding <code>#![feature(primary_key)]</code> should solve the issue, but it doesn't.</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>#[macro_use]\nextern crate diesel;\nextern crate dotenv;\n\npub mod schema;\npub mod models;\n\nuse diesel::prelude::*;\nuse diesel::pg::PgConnection;\nuse dotenv::dotenv;\nuse std::env;\n\npub fn establish_connection() -&gt; PgConnection {\n    dotenv().ok();\n\n    let database_url = env::var(\"DATABASE_URL\")\n        .expect(\"DATABASE_URL must be set\");\n    PgConnection::establish(&amp;database_url)\n        .expect(&amp;format!(\"Error connecting to {}\", database_url))\n}\n</code></pre>\n\n<p><strong>models.rs</strong></p>\n\n<pre><code>#![feature(primary_key)]\n\nextern crate diesel;\n\n#[derive(Queryable, Debug)]\n#[primary_key(user_id)]\npub struct User {\n    pub user_id: i32,\n    pub email: String,\n    pub password: String,\n    pub bio: String,\n    pub verified: bool,\n}\n</code></pre>\n\n<p>I've also tried adding <code>#![feature(primary_key)]</code> to the top of <code>lib.rs</code> without any luck.</p>\n\n<p>Using Rust 1.26.0-nightly (80785a547 2018-03-30)</p>\n"}, {"tags": ["rust", "gitignore"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1522536566, "post_id": 49593141, "comment_id": 86193907, "body": "You could ignore everything <i>except</i> for .rs files."}, {"owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1522537287, "post_id": 49593141, "comment_id": 86194038, "body": "Jhpratt - how can is do that?"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1522537356, "post_id": 49593141, "comment_id": 86194057, "body": "In your gitignore, have two lines. One is <code>*</code>, which ignored everything. The other would be <code>!*.rs</code>, which tells git to <i>not</i> ignore .rs files."}, {"owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1522984253, "post_id": 49593141, "comment_id": 86380690, "body": "jhpratt - I tried this. that doesn&#39;t help me :("}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1522537975, "creation_date": 1522537975, "answer_id": 49593325, "question_id": 49593141, "link": "https://stackoverflow.com/questions/49593141/how-to-ignore-rust-executable-files-in-gitignore/49593325#49593325", "title": "How to ignore Rust executable files in .gitignore?", "body": "<p>If you follow the instructions in the <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"noreferrer\">official Rust book</a>, you will do all of your work using Cargo. The book <a href=\"https://doc.rust-lang.org/book/second-edition/ch01-02-hello-world.html#creating-a-project-with-cargo\" rel=\"noreferrer\">introduces Cargo in the first chapter</a>. 99.5% of Rust developers never use <code>rustc</code> directly, and doing so is simply going to lead you to pain.</p>\n\n<p>Cargo automatically sets up a directory structure where build artifacts go into the <code>target</code> directory and this directory is added to <code>.gitignore</code>. You have nothing else to do.</p>\n\n<hr>\n\n<p>You could do the same thing by hand and ignore the build output directory (you really shouldn't though, it's not worth it to avoid Cargo)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ mkdir target\n$ rustc -o target/example example.rs\n$ ./target/example\n$ echo 'target/' &gt;&gt; .gitignore\n</code></pre>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 623, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1522537975, "creation_date": 1522536361, "last_edit_date": 1522537634, "question_id": 49593141, "link": "https://stackoverflow.com/questions/49593141/how-to-ignore-rust-executable-files-in-gitignore", "title": "How to ignore Rust executable files in .gitignore?", "body": "<p>I'm learning Rust and doing small exercises following the tutorial.</p>\n\n<p>When I compile and build using <code>rustc</code>, it generates an executable file.</p>\n\n<p>I want to add only the <code>.rs</code> file under the project/chapter1, chapter2, etc. directories and ignore the executables generated by the <code>rustc</code> command.</p>\n\n<p>I don't know how to do that because the executables generated by Rust do not have any extension.</p>\n\n<p>How can I ignore these executables using .gitignore?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522536829, "post_id": 49593076, "comment_id": 86193953, "body": "Does <a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a> answer your question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1522537156, "post_id": 49593076, "comment_id": 86194021, "body": "How about <a href=\"https://stackoverflow.com/q/44928882/155423\">Why do I get the error \u201cthe trait <code>Foo</code> is not implemented for <code>&amp;mut T</code>\u201d even though T implements the trait?</a> I&#39;m guessing if you remove the <code>&amp;</code> it will work: <code>tag::table.load::&lt;Tag&gt;(db_connection)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 71, "user_id": 2028839, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92e68eff17388e59c80388fbe5d70b7d?s=128&d=identicon&r=PG", "display_name": "twhitehead", "link": "https://stackoverflow.com/users/2028839/twhitehead"}, "is_accepted": false, "score": 0, "last_activity_date": 1589474204, "last_edit_date": 1589474204, "creation_date": 1567600149, "answer_id": 57788419, "question_id": 49593076, "link": "https://stackoverflow.com/questions/49593076/the-trait-dieselconnection-is-not-implemented-for-dieselmysqlconnection/57788419#57788419", "title": "The trait diesel::Connection is not implemented for &amp;diesel::MysqlConnection", "body": "<p>In your code <code>db_connection</code> is already a reference to a <code>MysqlConnection</code>, i.e. of type <code>&amp;MysqlConnection</code>, so just pass <code>db_connection</code> and not <code>&amp;db_connection</code> like so </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let results = tag::table.load::&lt;Tag&gt;(db_connection);\n</code></pre>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1173, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1589474204, "creation_date": 1522535581, "last_edit_date": 1522536994, "question_id": 49593076, "link": "https://stackoverflow.com/questions/49593076/the-trait-dieselconnection-is-not-implemented-for-dieselmysqlconnection", "title": "The trait diesel::Connection is not implemented for &amp;diesel::MysqlConnection", "body": "<p>I'm trying to learn <a href=\"http://diesel.rs/\" rel=\"nofollow noreferrer\">Diesel</a> following <a href=\"http://spejss.com/index.php/2017/12/06/how-to-use-diesel-orm-in-rust/\" rel=\"nofollow noreferrer\">this tutorial</a>. This is the demo program I've created using Diesel:</p>\n\n<pre><code>#![recursion_limit = \"128\"]\n\n#[macro_use]\nextern crate diesel;\n#[macro_use]\nextern crate diesel_infer_schema;\n\nextern crate dotenv;\nuse diesel::mysql::MysqlConnection;\nuse diesel::prelude::*;\nuse dotenv::dotenv;\nuse std::env;\n\npub fn establish_connection() -&gt; MysqlConnection {\n    dotenv().ok();\n    let db_url: String = String::from(env::var(\"DB_URL\").expect(\"DB_URL must be set\"));\n    let db_connection =\n        MysqlConnection::establish(&amp;db_url).expect(&amp;format!(\"Error connecting to {}\", &amp;db_url));\n\n    return db_connection;\n}\n\npub mod schema {\n    infer_schema!(\"dotenv:DB_URL\");\n}\n\nuse schema::*;\n\ntable! {\n    tag {\n        id -&gt; SmallInt,\n        tag_name -&gt; Varchar,\n    }\n}\n\n#[derive(Queryable, Insertable)]\n#[table_name = \"tag\"]\npub struct Tag {\n    pub id: i16,\n    pub tag_name: String,\n}\n\nfn read_and_output(db_connection: &amp;MysqlConnection) {\n    let results = tag::table.load::&lt;Tag&gt;(&amp;db_connection).expect(\"problem\");\n    println!(\"Returned results: {}\", results.len());\n    for r in results {\n        println!(\"{} {}\", r.id, r.tag_name);\n    }\n}\n\npub fn insert_tag(db_connection: &amp;MysqlConnection, tag_id_val: i16, tag_name_val: String) {\n    let new_tag = Tag {\n        id: tag_id_val,\n        tag_name: tag_name_val,\n    };\n\n    diesel::insert_into(tag::table)\n        .values(&amp;new_tag)\n        .execute(db_connection)\n        .expect(\"Error inserting\");\n}\n\nfn main() {\n    println!(\"Hello, world!\");\n    let db_connection = establish_connection();\n\n    // 1. query data from the table\n    //read_and_output(&amp;db_connection);\n\n    // 2. insert new data into the table\n    let tag_id: i16 = 778;\n    let tag_name: String = String::from(\"educational\");\n    insert_tag(&amp;db_connection, tag_id, tag_name);\n    //read_and_output(&amp;db_connection);\n}\n</code></pre>\n\n<p>The complete code is available in <a href=\"https://github.com/rajcspsg/diesel_demo/tree/7214892deecba5847731ec17cd97b58da243ba63\" rel=\"nofollow noreferrer\">my GitHub repository</a>.</p>\n\n<p>When I compile the program using <code>cargo build</code>, I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;diesel::MysqlConnection: diesel::Connection` is not satisfied\n--&gt; src/main.rs:45:30\n   |\n45 |     let results = tag::table.load::&lt;Tag&gt;(&amp;db_connection)\n   |                              ^^^^ the trait `diesel::Connection` is not implemented for `&amp;diesel::MysqlConnection`\n   |\n= help: the following implementations were found:\n            &lt;diesel::MysqlConnection as diesel::Connection&gt;\n= note: required because of the requirements on the impl of `diesel::query_dsl::LoadQuery&lt;&amp;diesel::MysqlConnection, Tag&gt;` for `tag::table`\n</code></pre>\n\n<p>When I comment out the <code>read_and_output</code> function and its invocation, the code compiles and the records are inserted into database.</p>\n\n<p>I'm not sure how to resolve this error; it looks like I need to implement some trait but not sure how can I do that.</p>\n"}, {"tags": ["c", "rust", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": true, "score": 1, "last_activity_date": 1522531088, "last_edit_date": 1522531088, "creation_date": 1522528517, "answer_id": 49592157, "question_id": 49591678, "link": "https://stackoverflow.com/questions/49591678/is-it-possible-to-pass-arrays-from-rust-to-c/49592157#49592157", "title": "Is it possible to pass arrays from Rust to C?", "body": "<p>The C ABI does not have a concept of \"returning an array\". You should allocate a <code>Vec&lt;*const c_char&gt;</code> and return it, defining the function on the C side as <code>extern char** string_from_rust()</code>.</p>\n\n<p>Alternatively, since you are returning two pointers, use a <code>#[repr(C)]</code> struct with two members instead of array.</p>\n"}], "owner": {"reputation": 4915, "user_id": 4564432, "user_type": "registered", "accept_rate": 71, "profile_image": "https://graph.facebook.com/1012918142059352/picture?type=large", "display_name": "Carl", "link": "https://stackoverflow.com/users/4564432/carl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 840, "favorite_count": 0, "accepted_answer_id": 49592157, "answer_count": 1, "score": 3, "last_activity_date": 1522531088, "creation_date": 1522525148, "last_edit_date": 1522531072, "question_id": 49591678, "link": "https://stackoverflow.com/questions/49591678/is-it-possible-to-pass-arrays-from-rust-to-c", "title": "Is it possible to pass arrays from Rust to C?", "body": "<p>I have a very basic Rust function that compiles fine:</p>\n\n<pre><code>use std;\nuse std::ffi::CString;\nuse std::os::raw::c_char;\n\n#[no_mangle]\npub extern \"C\" fn string_from_rust() -&gt; [*const c_char; 2] {\n    let s = CString::new(\"Hello\").unwrap();\n    let t = CString::new(\"World\").unwrap();\n    let p = s.as_ptr();\n    let w = t.as_ptr();\n    std::mem::forget(s);\n    std::mem::forget(t);\n\n    [p, w]\n}\n</code></pre>\n\n<p>In my C header file I inculde</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;stdint.h&gt;\nextern char * string_from_rust();\n</code></pre>\n\n<p><code>string_from_rust()</code> only returns \"Hello\", so I am seemingly doing something wrong, presumably in C, that is allowing only the first element of the Rust array to be passed to C. </p>\n"}, {"tags": ["rust", "type-conversion"], "owner": {"reputation": 177, "user_id": 5737634, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-x7XrU_ivtm0/AAAAAAAAAAI/AAAAAAAACR8/R_hvTTY-rx8/photo.jpg?sz=128", "display_name": "Cheng-Chang Wu", "link": "https://stackoverflow.com/users/5737634/cheng-chang-wu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 524, "favorite_count": 0, "closed_date": 1526839305, "answer_count": 0, "score": 4, "last_activity_date": 1526838838, "creation_date": 1522523181, "last_edit_date": 1522524194, "question_id": 49591393, "link": "https://stackoverflow.com/questions/49591393/why-is-the-trait-stdconvertfromisize-not-implemented-for-i32", "closed_reason": "Duplicate", "title": "Why is the trait `std::convert::From&lt;isize&gt;` not implemented for `i32`?", "body": "<pre><code>use std::convert::TryFrom;\n\nfn main() {\n    let a: isize = 1;\n    let b: i32 = match TryFrom::&lt;isize&gt;::try_from(a) {\n        Ok(x) =&gt; x,\n        Err(_) =&gt; 0,\n    };\n}\n</code></pre>\n\n<p>The compiler complains with </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `i32: std::convert::From&lt;isize&gt;` is not satisfied\n --&gt; src/main.rs:5:24\n  |\n5 |     let b: i32 = match TryFrom::&lt;isize&gt;::try_from(a) {\n  |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From&lt;isize&gt;` is not implemented for `i32`\n  |\n  = help: the following implementations were found:\n            &lt;i32 as std::convert::From&lt;i8&gt;&gt;\n            &lt;i32 as std::convert::From&lt;i16&gt;&gt;\n            &lt;i32 as std::convert::From&lt;u16&gt;&gt;\n            &lt;i32 as std::convert::From&lt;u8&gt;&gt;\n  = note: required because of the requirements on the impl of `std::convert::TryFrom&lt;isize&gt;` for `i32`\n</code></pre>\n\n<p>What should I do?</p>\n"}, {"tags": ["rust", "ethereum", "smartcontracts"], "answers": [{"tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": false, "score": 1, "last_activity_date": 1522601901, "last_edit_date": 1522601901, "creation_date": 1522592429, "answer_id": 49598993, "question_id": 49588381, "link": "https://stackoverflow.com/questions/49588381/what-should-the-params-argument-to-web3contractcontractquery-look-like/49598993#49598993", "title": "What should the &quot;params&quot; argument to web3::contract::Contract::query look like?", "body": "<p>The answer lies in the <code>Tokenize</code> trait, which is implemented for vecs, arrays or tuples of <code>Tokenizable</code>s, another trait which is in turn implemented for e.g. <code>String</code>, <code>u64</code>, <code>bool</code>, etc.</p>\n\n<p>So if you have a <code>&amp;str</code>, just call <code>.to_string()</code> on it to get a <code>String</code>. Or if you have a number, <code>.try_into::&lt;u64&gt;()</code> it. Or perhaps a combination of it, e.g. <code>(\"transactions\".to_string(), 123u64)</code>.</p>\n\n<p>How I know? <code>params</code> is of type <code>P</code>, which is generic and bound by <code>Tokenize</code> (see the <code>where P: Tokenize</code>?).</p>\n"}, {"tags": [], "owner": {"reputation": 1559, "user_id": 2354162, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/07Dq3.jpg?s=128&g=1", "display_name": "Standaa - Monica side", "link": "https://stackoverflow.com/users/2354162/standaa-monica-side"}, "is_accepted": false, "score": 0, "last_activity_date": 1571218114, "creation_date": 1571218114, "answer_id": 58410055, "question_id": 49588381, "link": "https://stackoverflow.com/questions/49588381/what-should-the-params-argument-to-web3contractcontractquery-look-like/58410055#58410055", "title": "What should the &quot;params&quot; argument to web3::contract::Contract::query look like?", "body": "<p>The reason the documentation does not explain what \"params\" are, is that you can pass any function name that is defined and accessible publicly in the Smart-Contract itself.</p>\n\n<p><code>balanceOf</code> being a default function for any ERC-20 token, it is often put as an example.</p>\n\n<p>You have to check which function is called in the Python lib you are using for that call : <code>contract.call().transactions(123)</code>. You need the exact name of that function to make a call in web3-rust <code>Query()</code>.</p>\n\n<p>It might be worth having a look at the <a href=\"https://github.com/tomusdrw/rust-web3/tree/master/examples\" rel=\"nofollow noreferrer\">Github web3-rust examples</a> too if you did not see them already.</p>\n"}], "owner": {"reputation": 31, "user_id": 2175135, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7c5c8cb144e57f30b3c7fb4d560d327?s=128&d=identicon&r=PG", "display_name": "Kvakes", "link": "https://stackoverflow.com/users/2175135/kvakes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 600, "favorite_count": 1, "answer_count": 2, "score": 3, "last_activity_date": 1571218114, "creation_date": 1522503570, "last_edit_date": 1522506197, "question_id": 49588381, "link": "https://stackoverflow.com/questions/49588381/what-should-the-params-argument-to-web3contractcontractquery-look-like", "title": "What should the &quot;params&quot; argument to web3::contract::Contract::query look like?", "body": "<p>I'm trying to interact with a multisig smart contract (the Gnosis multisig) and ask for the transaction details and for the number of confirmations.</p>\n\n<p>Here's the straightforward Python code for what I want to do:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import json\nfrom web3 import Web3, HTTPProvider, IPCProvider\n\ncontractAddress = '0x...'\n\nweb3 = Web3(HTTPProvider('https://mainnet.infura.io'))\n\nwith open('contract.abi', 'r') as abi_definition:\n    abi = json.load(abi_definition)\n\ncontract = web3.eth.contract(contractAddress, abi=abi)\ntx = contract.call().transactions(123)\nconfirmations = contract.call().getConfirmations(123)\n\nprint(tx)\nprint(confirmations)\n</code></pre>\n\n<p>Here's the Rust code I came up with so far:</p>\n\n<pre><code>extern crate web3;\n\nuse web3::contract::{Contract, Options};\nuse web3::types::Address;\n\nfn main() {\n    let (_eloop, http) = web3::transports::Http::new(\"https://mainnet.infura.io\").unwrap();\n    let web3 = web3::Web3::new(http);\n\n    // The contract address.\n    let address: Address = \"0x...\".parse().unwrap();\n\n    // Access the contract\n    let contract = Contract::from_json(web3.eth(), address, include_bytes!(\"./abi.json\")).unwrap();\n\n    // Query the contract instance\n    // And this is where I'm stuck!\n    let result = contract.query(\"transactions...\");\n}\n</code></pre>\n\n<p>The <a href=\"https://docs.rs/web3/0.3.0/web3/contract/struct.Contract.html#method.query\" rel=\"nofollow noreferrer\">documentation that I found</a> doesn't explain what \"params\" are and how they should be passed into the function.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1522503223, "post_id": 49588287, "comment_id": 86184321, "body": "Does <code>X</code> derive <code>Copy</code>? Also, keep in mind that <code>Vec::last()</code> returns a reference to the element."}, {"owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "reply_to_user": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1522503508, "post_id": 49588287, "comment_id": 86184397, "body": "No, <code>X</code> does not derive <code>Copy</code>. Yes, I&#39;m using <code>Vec::last()</code> here because I want a reference."}], "answers": [{"comments": [{"owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "edited": false, "score": 0, "creation_date": 1522505691, "post_id": 49588372, "comment_id": 86185096, "body": "I have references of type <code>X</code> (that outlive my instances of type <code>Y</code>), but I also have things that can be transformed into <code>X</code>es. For the latter, I need some stable storage that is guaranteed to live as long as <code>Y</code> so that I can pass references to the to-be-<code>X</code>es and store their contents into <code>Y</code>. Trying to fiddle with the lifetime of <code>e</code> in the signature for <code>process()</code> so far seems to only make the situation worse."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "edited": false, "score": 0, "creation_date": 1522508190, "post_id": 49588372, "comment_id": 86185822, "body": "@djc why not just change it to <code>fn process(&amp;mut self, e: &amp;X)</code> or <code>e: &amp;X&lt;&#39;r&gt;</code>; why specify the lifetime of the reference at all?"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 0, "last_activity_date": 1522503504, "creation_date": 1522503504, "answer_id": 49588372, "question_id": 49588287, "link": "https://stackoverflow.com/questions/49588287/cannot-figure-out-lifetimes-for-processing-reference-after-locally-storing-objec/49588372#49588372", "title": "Cannot figure out lifetimes for processing reference after locally storing object", "body": "<pre><code>fn process(&amp;mut self, e: &amp;'r X) {\n</code></pre>\n\n<p>This signature looks very suspicious and is probably wrong. Note that you're not specifying a lifetime for <code>X</code> here, but for the reference to it. This is probably not what you want.</p>\n"}, {"tags": [], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "is_accepted": true, "score": 0, "last_activity_date": 1522582924, "creation_date": 1522582924, "answer_id": 49597657, "question_id": 49588287, "link": "https://stackoverflow.com/questions/49588287/cannot-figure-out-lifetimes-for-processing-reference-after-locally-storing-objec/49597657#49597657", "title": "Cannot figure out lifetimes for processing reference after locally storing object", "body": "<p>So it turns out that I didn't understand how lifetimes for references into <code>Vec</code> storage are supposed to work. I was incrementally trying to store stuff (instances of <code>X</code>) into <code>self</code> through a mutable reference and, at the same time, use references to those instances to store them in <code>self</code> as well. However, references into a <code>Vec</code> are only stable while the <code>Vec</code> itself is immutable.</p>\n\n<p>The solution, therefore, was to extract the <code>Vec</code> (<code>list</code>) from <code>Y</code>, initialize it fully before initializing my <code>Y</code> object, so that it is immutable throughout the lifetime of the <code>Y</code> object.</p>\n"}], "owner": {"reputation": 10895, "user_id": 158226, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/1b171ce1f20ce82a31999e843a7fe9b6?s=128&d=identicon&r=PG", "display_name": "djc", "link": "https://stackoverflow.com/users/158226/djc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 49597657, "answer_count": 2, "score": 1, "last_activity_date": 1522582924, "creation_date": 1522502926, "last_edit_date": 1522507787, "question_id": 49588287, "link": "https://stackoverflow.com/questions/49588287/cannot-figure-out-lifetimes-for-processing-reference-after-locally-storing-objec", "title": "Cannot figure out lifetimes for processing reference after locally storing object", "body": "<p>I'm trying to build something like this (<a href=\"https://play.rust-lang.org/?gist=ab216c351ce91c5ff06a75ddb069339a&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre><code>struct X&lt;'a&gt; {\n    s: &amp;'a str,\n}\n\nstruct Y&lt;'a&gt; {\n    list: Vec&lt;X&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'r&gt; Y&lt;'r&gt; {\n    fn process(&amp;mut self, e: &amp;'r X) {\n        // do stuff\n    }\n    fn add(&amp;mut self, e: X&lt;'r&gt;) {\n        self.list.push(e);\n        let new = self.list.last().unwrap();\n        self.process(new)\n    }\n}\n</code></pre>\n\n<p>Conceptually this seems okay: <code>self</code> has a list which gets one thing added to it, then I can do some further processing on that thing, in the knowledge that the thing should live as long as <code>self</code>. However, the compiler doesn't agree:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n  --&gt; src/main.rs:15:29\n   |\n15 |         let new = self.list.last().unwrap();\n   |                             ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 13:5...\n  --&gt; src/main.rs:13:5\n   |\n13 | /     fn add(&amp;mut self, e: X&lt;'r&gt;) {\n14 | |         self.list.push(e);\n15 | |         let new = self.list.last().unwrap();\n16 | |         self.process(new)\n17 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:15:19\n   |\n15 |         let new = self.list.last().unwrap();\n   |                   ^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'r as defined on the impl at 9:1...\n  --&gt; src/main.rs:9:1\n   |\n9  | impl&lt;'r&gt; Y&lt;'r&gt; {\n   | ^^^^^^^^^^^^^^\n   = note: ...so that the types are compatible:\n           expected &amp;mut Y&lt;'_&gt;\n              found &amp;mut Y&lt;'r&gt;\n</code></pre>\n\n<p>It seems to me that <code>new</code> should clearly live as long as <code>self</code> (though maybe not as long as the mutable reference <code>&amp;mut self</code>?), so I don't understand the problem here.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1522503883, "creation_date": 1522503883, "answer_id": 49588432, "question_id": 49588087, "link": "https://stackoverflow.com/questions/49588087/is-it-possible-to-write-a-test-in-rust-so-it-does-not-run-on-a-specific-operatin/49588432#49588432", "title": "Is it possible to write a test in Rust so it does not run on a specific operating system?", "body": "<p>You can choose to not compile the test at all</p>\n\n<pre><code>#[cfg(not(target_os = \"windows\"))]\n#[test]\nfn test_something() {\n    //content of test function\n}\n</code></pre>\n\n<p>Or you can choose to compile it but not run it:</p>\n\n<pre><code>#[test]\n#[cfg_attr(target_os = \"windows\", ignore)]\nfn test_something() {\n    //content of test function\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41742046/155423\">Is there a list of all cfg features?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42551113/155423\">Is it possible to conditionally derive with features?</a></li>\n</ul>\n"}], "owner": {"reputation": 33, "user_id": 7518018, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c6554d378bb5a8b20092e85d26350f5?s=128&d=identicon&r=PG&f=1", "display_name": "ka s", "link": "https://stackoverflow.com/users/7518018/ka-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 230, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1522508333, "creation_date": 1522501651, "last_edit_date": 1522508333, "question_id": 49588087, "link": "https://stackoverflow.com/questions/49588087/is-it-possible-to-write-a-test-in-rust-so-it-does-not-run-on-a-specific-operatin", "title": "Is it possible to write a test in Rust so it does not run on a specific operating system?", "body": "<p>I am writing a test:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    #[test]\n    fn test_something() {\n        //content of test function\n    }\n}\n</code></pre>\n\n<p>Is it possible to make this test not run when using Windows and only run on Linux?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 9578657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9341c983c0959524276a4af3436dae2f?s=128&d=identicon&r=PG&f=1", "display_name": "Tyrant", "link": "https://stackoverflow.com/users/9578657/tyrant"}, "edited": false, "score": 0, "creation_date": 1522512077, "post_id": 49589295, "comment_id": 86187082, "body": "Thank you for your answer. One thing I don&#39;t understand in your proposed alternative is the parameter <code>&amp;self</code> of method <code>new</code> - what is its value when calling <code>h[&quot;MyStruct&quot;].new()</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 23, "user_id": 9578657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9341c983c0959524276a4af3436dae2f?s=128&d=identicon&r=PG&f=1", "display_name": "Tyrant", "link": "https://stackoverflow.com/users/9578657/tyrant"}, "edited": false, "score": 0, "creation_date": 1522513107, "post_id": 49589295, "comment_id": 86187478, "body": "@Tyrant it&#39;s an instance of <code>MyStruct</code> or <code>MyOtherStruct</code>. The only reason that the same type can implement both traits is because there&#39;s no real unique state for the &quot;factory&quot; and the &quot;instance&quot;. In more complicated implementations, these would be two different types."}, {"owner": {"reputation": 23, "user_id": 9578657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9341c983c0959524276a4af3436dae2f?s=128&d=identicon&r=PG&f=1", "display_name": "Tyrant", "link": "https://stackoverflow.com/users/9578657/tyrant"}, "edited": false, "score": 0, "creation_date": 1522513578, "post_id": 49589295, "comment_id": 86187615, "body": "I think I got it now. I will update my post with a more complex example, using different types for &quot;factory&quot; and &quot;instance&quot;. Thank you very much!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1522514006, "last_edit_date": 1522514006, "creation_date": 1522509574, "answer_id": 49589295, "question_id": 49587949, "link": "https://stackoverflow.com/questions/49587949/storing-types-in-a-hashmap-to-dynamically-instantiate-them/49589295#49589295", "title": "Storing types in a HashMap to dynamically instantiate them", "body": "<p>This is ultimately fundamentally impossible. In Rust, local variables are stored on the stack, which means that they have to have a fixed size, <em>known at compile time</em>. Your construction requires the size of the value on the stack to be determined at runtime.</p>\n\n<p>The closest alternative is to move to <em>trait objects</em>, which introduce a layer of indirection:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntrait NewThing {\n    fn new(&amp;self) -&gt; Box&lt;Thing&gt;;\n}\ntrait Thing {}\n\nstruct MyStruct;\n\nimpl NewThing for MyStruct {\n    fn new(&amp;self) -&gt; Box&lt;Thing&gt; {\n        Box::new(Self {})\n    }\n}\nimpl Thing for MyStruct {}\n\nstruct MyOtherStruct;\n\nimpl NewThing for MyOtherStruct {\n    fn new(&amp;self) -&gt; Box&lt;Thing&gt; {\n        Box::new(Self {})\n    }\n}\nimpl Thing for MyOtherStruct {}\n\nfn main() {\n    let mut h: HashMap&lt;_, Box&lt;NewThing&gt;&gt; = HashMap::new();\n    h.insert(\"MyStruct\", Box::new(MyStruct));\n    h.insert(\"MyOtherStruct\", Box::new(MyOtherStruct));\n\n    let obj = h[\"MyStruct\"].new();\n}\n</code></pre>\n\n<p>You will find this pattern out in the world, such as in hyper's <a href=\"https://docs.rs/hyper/0.11.24/hyper/server/trait.NewService.html\" rel=\"nofollow noreferrer\"><code>NewService</code></a>.</p>\n\n<blockquote>\n  <p>what is [the value of <code>&amp;self</code> of method <code>new</code>] when calling <code>h[\"MyStruct\"].new()</code></p>\n</blockquote>\n\n<p>It's an instance of <code>MyStruct</code> or <code>MyOtherStruct</code>. The only reason that the same type can implement both traits is because there's no real unique state for the \"factory\" and the \"instance\". In more complicated implementations, these would be two different types.</p>\n\n<p>Using the same type is common for such cases as sharing a reference-counted value.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31897330/155423\">Is it possible to have a constructor function in a trait?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 23, "user_id": 9578657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9341c983c0959524276a4af3436dae2f?s=128&d=identicon&r=PG&f=1", "display_name": "Tyrant", "link": "https://stackoverflow.com/users/9578657/tyrant"}, "is_accepted": false, "score": 0, "last_activity_date": 1522514008, "creation_date": 1522514008, "answer_id": 49590032, "question_id": 49587949, "link": "https://stackoverflow.com/questions/49587949/storing-types-in-a-hashmap-to-dynamically-instantiate-them/49590032#49590032", "title": "Storing types in a HashMap to dynamically instantiate them", "body": "<p>Here is a more complex example of @Shepmaster's solution, using different types for Factories and the objects themselves:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntrait NewThing {\n    fn new(&amp;self) -&gt; Box&lt;Thing&gt;;\n}\ntrait Thing {\n    fn execute(&amp;mut self);\n}\n\n// MyStruct\nstruct MyStructFactory;\nimpl NewThing for MyStructFactory {\n    fn new(&amp;self) -&gt; Box&lt;Thing&gt; {\n        Box::new(MyStruct {test: 12, name: \"Test\".into()})\n    }\n}\n\nstruct MyStruct {\n    test: i32,\n    name: String\n}\n\nimpl Thing for MyStruct {\n    fn execute(&amp;mut self) { \n        self.test+=1;\n        println!(\"MyStruct {} {}\", self.test, self.name);\n    }\n}\n\n// MyOtherStruct\nstruct MyOtherStructFactory;\nimpl NewThing for MyOtherStructFactory {\n    fn new(&amp;self) -&gt; Box&lt;Thing&gt; {\n        Box::new(MyOtherStruct {my_member: 1})\n    }\n}\n\nstruct MyOtherStruct {\n    my_member: u32\n}\n\nimpl Thing for MyOtherStruct {\n    fn execute(&amp;mut self) { println!(\"MyOtherStruct.my_member: {}\", self.my_member); }\n}\n\nfn main() {\n    let mut h: HashMap&lt;_, Box&lt;NewThing&gt;&gt; = HashMap::new();\n    h.insert(\"MyStruct\", Box::new(MyStructFactory));\n    h.insert(\"MyOtherStruct\", Box::new(MyOtherStructFactory));\n\n    h[\"MyStruct\"].new().execute();\n    h[\"MyOtherStruct\"].new().execute();\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9578657, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9341c983c0959524276a4af3436dae2f?s=128&d=identicon&r=PG&f=1", "display_name": "Tyrant", "link": "https://stackoverflow.com/users/9578657/tyrant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1116, "favorite_count": 2, "accepted_answer_id": 49589295, "answer_count": 2, "score": 2, "last_activity_date": 1522514008, "creation_date": 1522500738, "last_edit_date": 1522513716, "question_id": 49587949, "link": "https://stackoverflow.com/questions/49587949/storing-types-in-a-hashmap-to-dynamically-instantiate-them", "title": "Storing types in a HashMap to dynamically instantiate them", "body": "<p>I am trying to store structs in a <code>HashMap</code> keyed by string so that I can later create new objects by string. Think of a REST API where clients can get the server to instantiate a specific object by supplying a name.</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct MyStruct;\n\nimpl MyStruct {\n    pub fn new() -&gt; Self {\n        Self {}\n    }\n}\n\nstruct MyOtherStruct;\n\nimpl MyOtherStruct {\n    pub fn new() -&gt; Self {\n        Self {}\n    }\n}\n\nfn main() {\n    let mut h = HashMap::new();\n    h.insert(\"MyStruct\", MyStruct);\n    h.insert(\"MyOtherStruct\", MyOtherStruct);\n\n    // This is pseudo-code\n    let obj = h.get(\"MyStruct\").unwrap()::new();\n}\n</code></pre>\n\n<p>As I expected, this doesn't work due to syntax errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected one of `.`, `;`, `?`, or an operator, found `::`\n  --&gt; src/main.rs:25:41\n   |\n25 |     let obj = h.get(\"MyStruct\").unwrap()::new();\n   |                                         ^^ expected one of `.`, `;`, `?`, or an operator here\n</code></pre>\n\n<p>My second attempt was to store a reference to the <code>new</code> method of each struct instead of the types themselves.</p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct MyStruct;\n\nimpl MyStruct {\n    pub fn new() -&gt; Self {\n        Self {}\n    }\n}\n\nstruct MyOtherStruct;\n\nimpl MyOtherStruct {\n    pub fn new() -&gt; Self {\n        Self {}\n    }\n}\n\nfn main() {\n    let mut h = HashMap::new();\n    h.insert(\"MyStruct\", &amp;MyStruct::new);\n    h.insert(\"MyOtherStruct\", &amp;MyOtherStruct::new);\n\n    let obj = h.get(\"MyStruct\").unwrap()();\n}\n</code></pre>\n\n<p>This fails because the <code>fn</code> items have different types and can't be stored in the same <code>HashMap</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:22:31\n   |\n22 |     h.insert(\"MyOtherStruct\", &amp;MyOtherStruct::new);\n   |                               ^^^^^^^^^^^^^^^^^^^ expected fn item, found a different fn item\n   |\n   = note: expected type `&amp;fn() -&gt; MyStruct {MyStruct::new}`\n              found type `&amp;fn() -&gt; MyOtherStruct {MyOtherStruct::new}`\n</code></pre>\n\n<p>Since I'm pretty new to Rust, I'm out of ideas. How can I solve this problem?</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"comments": [{"owner": {"reputation": 125, "user_id": 5862030, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c3ea28fa33abc07ba4b55ca26c4ad35c?s=128&d=identicon&r=PG&f=1", "display_name": "KuSpa", "link": "https://stackoverflow.com/users/5862030/kuspa"}, "edited": false, "score": 0, "creation_date": 1522496890, "post_id": 49587358, "comment_id": 86182455, "body": "oh! so the only case of <code>expect</code> is to add some debug information to the panic? so the proper way to handle the error is to <code>match guess.trim().parse::&lt;u32&gt;() {...}</code> ?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 125, "user_id": 5862030, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c3ea28fa33abc07ba4b55ca26c4ad35c?s=128&d=identicon&r=PG&f=1", "display_name": "KuSpa", "link": "https://stackoverflow.com/users/5862030/kuspa"}, "edited": false, "score": 0, "creation_date": 1522497238, "post_id": 49587358, "comment_id": 86182561, "body": "@KuSpa: I&#39;ve amended my answer."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1522504716, "last_edit_date": 1522504716, "creation_date": 1522496573, "answer_id": 49587358, "question_id": 49587267, "link": "https://stackoverflow.com/questions/49587267/parse-expecterr-panics-instead-of-handling-a-parse-error/49587358#49587358", "title": ".parse().expect(&quot;err&quot;) panics instead of handling a parse error", "body": "<p>It <em>did</em>.  If you change the <code>expect</code> message to <code>\"oh no i am asploded\"</code>, this is the output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'oh no i am asploded: ParseIntError { kind: InvalidDigit }', libcore/result.rs:945:5\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p><code>expect</code> is just <code>unwrap</code> with a custom message, and <code>unwrap</code> panics if it's used on a <code>None</code> or <code>Err(_)</code>.</p>\n\n<p>As for handling errors without panicking, you'll need to read the section on <a href=\"https://doc.rust-lang.org/book/second-edition/ch09-02-recoverable-errors-with-result.html\" rel=\"nofollow noreferrer\">Recoverable Errors with <code>Result</code></a> in the book.</p>\n"}], "owner": {"reputation": 125, "user_id": 5862030, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c3ea28fa33abc07ba4b55ca26c4ad35c?s=128&d=identicon&r=PG&f=1", "display_name": "KuSpa", "link": "https://stackoverflow.com/users/5862030/kuspa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1121, "favorite_count": 0, "accepted_answer_id": 49587358, "answer_count": 1, "score": 1, "last_activity_date": 1522504716, "creation_date": 1522495987, "last_edit_date": 1522504702, "question_id": 49587267, "link": "https://stackoverflow.com/questions/49587267/parse-expecterr-panics-instead-of-handling-a-parse-error", "title": ".parse().expect(&quot;err&quot;) panics instead of handling a parse error", "body": "<p>I am working my way through <a href=\"https://doc.rust-lang.org/book/second-edition/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">the Rust guessing game tutorial</a> and am stuck. The tutorial states that </p>\n\n<pre><code>let mut guess = String::new();\nlet guess = \"asdf\";\nlet guess: u32 = guess.trim().parse().expect(\"err\");\n</code></pre>\n\n<p>parses a <code>String</code> and <code>expect</code> evaluates the <code>Result</code> and stops in case of an error. So the output should be <code>err</code>, but I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'err: ParseIntError { kind: InvalidDigit }', libcore/result.rs:945:5\n</code></pre>\n\n<p>I am using Rust stable. </p>\n\n<p>Why doesn't my expect catch the error?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1522508743, "post_id": 49588451, "comment_id": 86185990, "body": "OK, thanks! I don&#39;t understand it all, but it&#39;s fixed my problem (or moved it somewhere else... :-) ), so thanks again."}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1522518562, "post_id": 49588451, "comment_id": 86189127, "body": "@AndrewMackenzie I added a more detailed explanation. It should make things clear."}], "tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 3, "last_activity_date": 1522517663, "last_edit_date": 1522517663, "creation_date": 1522504002, "answer_id": 49588451, "question_id": 49587155, "link": "https://stackoverflow.com/questions/49587155/get-a-trait-object-reference-from-a-vector/49588451#49588451", "title": "Get a trait object reference from a vector", "body": "<p>First, remove the lifetime parameter <code>'a</code> from the type of the return value of <code>get</code>:</p>\n\n<pre><code>pub trait Runnable {}\n\npub struct RunList&lt;'a&gt; {\n    runnables: Vec&lt;&amp;'a mut Runnable&gt;,\n}\n\nimpl&lt;'a&gt; RunList&lt;'a&gt; {\n    pub fn get(&amp;mut self, id: usize) -&gt; &amp;mut Runnable {\n        self.runnables[id]\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>This gets you to the underlying problem:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0389]: cannot borrow data mutably in a `&amp;` reference\n --&gt; src/main.rs:9:9\n  |\n9 |         self.runnables[id]\n  |         ^^^^^^^^^^^^^^^^^^ assignment into an immutable reference\n</code></pre>\n\n<p><code>self.runnables[id]</code> borrows <code>&amp;'a mut Runnable</code> immutably and dereferences it implicitly. You can't move <code>&amp;'a mut Runnable</code> out of this immutable borrow. Instead, you can mutably reborrow the runnable which requires a mutable borrow of <code>self</code>:</p>\n\n<pre><code>impl&lt;'a&gt; RunList&lt;'a&gt; {\n    pub fn get(&amp;mut self, id: usize) -&gt; &amp;mut Runnable {\n        &amp;mut *self.runnables[id]\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>To understand what's exactly going on here one should read up on: <a href=\"https://stackoverflow.com/q/27879161\">What is the return type of the indexing operation?</a></p>\n\n<pre><code>pub fn get(&amp;mut self, id: usize) -&gt; &amp;mut Runnable {\n    self.runnables[id]\n}\n</code></pre>\n\n<p>is equivalent to:</p>\n\n<pre><code>pub fn get(&amp;mut self, id: usize) -&gt; &amp;mut Runnable {\n    let r: &amp;&amp;mut (Runnable + 'a)  = self.runnables.index(id);\n    *r\n}\n</code></pre>\n\n<p><code>index</code> returns an immutable reference to <code>&amp;'a mut Runnable</code>, which is of type <code>&amp;&amp;mut (Runnable + 'a)</code>. Returning <code>*r</code> does not work, because you can't move the mutable reference<sup>1</sup> out of the borrowed content and also data in an immutable reference can't be borrowed mutably (<code>&amp;mut**r</code> does not work). Therefore, you need the version of <code>index</code> which grants mutable access to the indexed element: <code>index_mut</code></p>\n\n<pre><code>pub fn get(&amp;mut self, id: usize) -&gt; &amp;mut Runnable {\n    let r: &amp;mut &amp;'a mut (Runnable + 'a)  = self.runnables.index_mut(id);\n    *r\n}\n</code></pre>\n\n<p>This works, because <code>*r</code> actually reborrows the <code>Runnable</code> inside mutably (<code>&amp;mut**r</code>). In contrast to the case with the immutable reference <code>r</code> above, mutably borrowing the data inside the mutable reference <code>r</code> is perfectly fine. When performing <code>&amp;mut**r</code> the parameter <code>'a</code> gets lost in the process of dereferencing. So, returning  <code>&amp;'a mut Runnable</code> instead of <code>&amp;mut Runnable</code> does not work here.</p>\n\n<p>Finally, <code>&amp;mut *self.runnables[id]</code> tells the compiler to implicitly resolve to <code>*self.runnables.index_mut(id)</code> instead of <code>*self.runnables.index(id)</code>. <code>*&amp;mut self.runnables[id]</code> would also work.</p>\n\n<hr>\n\n<p><sup>1<sub> Mutable references are not <code>Copy</code>. If you changed all <code>&amp;'a mut Runnable</code> in your code to <code>&amp;'a Runnable</code>, it would compile, because immutable references are <code>Copy</code> </sub></sup></p>\n"}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 49588451, "answer_count": 1, "score": 2, "last_activity_date": 1522517663, "creation_date": 1522495258, "last_edit_date": 1522504959, "question_id": 49587155, "link": "https://stackoverflow.com/questions/49587155/get-a-trait-object-reference-from-a-vector", "title": "Get a trait object reference from a vector", "body": "<p>I'm struggling to get an element from a <code>Vec</code> that is a reference with a lifetime. I've simplified my code down to this:</p>\n\n<pre><code>pub trait Runnable {}\n\npub struct RunList&lt;'a&gt; {\n    runnables: Vec&lt;&amp;'a mut Runnable&gt;,\n}\n\nimpl&lt;'a&gt; RunList&lt;'a&gt; {\n    pub fn get(&amp;self, id: usize) -&gt; &amp;'a mut Runnable {\n        self.runnables[id]\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0332f027d85350e749b02d8015cb3a53&amp;version=stable\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>which produces this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n --&gt; src/main.rs:9:9\n  |\n9 |         self.runnables[id]\n  |         ^^^^^^^^^^^^^^^^^^\n  |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 8:5...\n --&gt; src/main.rs:8:5\n  |\n8 | /     pub fn get(&amp;self, id: usize) -&gt; &amp;'a mut Runnable {\n9 | |         self.runnables[id]\n10| |     }\n  | |_____^\nnote: ...so that reference does not outlive borrowed content\n --&gt; src/main.rs:9:9\n  |\n9 |         self.runnables[id]\n  |         ^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 7:1...\n --&gt; src/main.rs:7:1\n  |\n7 | impl&lt;'a&gt; RunList&lt;'a&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^\n  = note: ...so that the expression is assignable:\n          expected &amp;'a mut Runnable + 'a\n             found &amp;mut Runnable + 'a\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522503492, "post_id": 49587038, "comment_id": 86184392, "body": "@Shepmaster Why is this a duplicate of the other question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "edited": false, "score": 0, "creation_date": 1522503556, "post_id": 49587038, "comment_id": 86184410, "body": "@nbro because it explains how to implement a trait for references to a trait. Do you believe that to be in error?"}, {"owner": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522503817, "post_id": 49587038, "comment_id": 86184482, "body": "@Shepmaster I was just asking because I was not understanding (given that my knowledge of Rust is still reduced). You can delete these comments afterwards."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 12066, "user_id": 3924118, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/abb01e1c2a8e3d9e1534dca14b19b3d8?s=128&d=identicon&r=PG&f=1", "display_name": "nbro", "link": "https://stackoverflow.com/users/3924118/nbro"}, "edited": false, "score": 0, "creation_date": 1522503964, "post_id": 49587038, "comment_id": 86184529, "body": "@nbro It&#39;s <i>always</i> possible that I&#39;ve closed something as a duplicate in error, so it&#39;s always worth double-checking. Testing out the proposed solution has led to some extra errors; I&#39;m seeing if there&#39;s something fundamentally wrong with it."}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1522504810, "post_id": 49587038, "comment_id": 86184801, "body": "@Shepmaster OP posted a <a href=\"https://stackoverflow.com/q/49587155/7274990\">question</a> (which is most likely also a duplicate) very closely related to this one. I think he really only wants to return an element from the runnables vec. I can imagine <code>&amp;mut self.runnables[id]</code> is just an attempt to solve the problem in the original question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "edited": false, "score": 0, "creation_date": 1522505015, "post_id": 49587038, "comment_id": 86184883, "body": "@Calculator ah, yes, perfect. OP <b>did the right thing</b> by asking to separate questions. That means that this error can be answered here and the original problem can be answered there. Nice!"}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 42, "favorite_count": 0, "closed_date": 1522503283, "answer_count": 0, "score": 2, "last_activity_date": 1522503117, "creation_date": 1522494457, "last_edit_date": 1522503117, "question_id": 49587038, "link": "https://stackoverflow.com/questions/49587038/trait-not-implemented-for-a-reference-to-the-trait", "closed_reason": "Duplicate", "title": "Trait not implemented for a reference to the trait", "body": "<p>I'm getting this compiler error, that I don't I understand nor know how to fix:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;'a mut Runnable + 'a: Runnable` is not satisfied\n  --&gt; src/main.rs:11:9\n   |\n11 |         &amp;mut self.runnables[id]\n   |         ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Runnable` is not implemented for `&amp;'a mut Runnable + 'a`\n   |\n   = note: required for the cast to the object type `Runnable + 'a`\n</code></pre>\n\n<p>I've simplified my code down to this:</p>\n\n<pre><code>pub trait Runnable {\n    fn name(&amp;self) -&gt; &amp;str;\n}\n\npub struct RunList&lt;'a&gt; {\n    runnables: Vec&lt;&amp;'a mut Runnable&gt;,\n}\n\nimpl&lt;'a&gt; RunList&lt;'a&gt; {\n    pub fn get(&amp;self, id: usize) -&gt; &amp;'a mut Runnable {\n        &amp;mut self.runnables[id]\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d0c2bc3a16b6fa9432f89e2a6625d1c0&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["hashmap", "rust", "any"], "answers": [{"comments": [{"owner": {"reputation": 274, "user_id": 3846612, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0dcd698a20e104920c233ced4d0570f?s=128&d=identicon&r=PG&f=1", "display_name": "kameranis", "link": "https://stackoverflow.com/users/3846612/kameranis"}, "edited": false, "score": 0, "creation_date": 1522493795, "post_id": 49586039, "comment_id": 86181617, "body": "Thank you for your answer. It helped me a lot. If you post the final line of code I will also accept your answer."}], "tags": [], "owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "is_accepted": true, "score": 3, "last_activity_date": 1522504828, "last_edit_date": 1522504828, "creation_date": 1522486598, "answer_id": 49586039, "question_id": 49585951, "link": "https://stackoverflow.com/questions/49585951/check-if-any-value-in-a-rust-hashmap-is-greater-than-zero/49586039#49586039", "title": "Check if any value in a Rust HashMap is greater than zero", "body": "<p>Bad syntax. You should use <code>&amp;x</code>, which is a reference (not <code>*x</code>, which is a dereference).</p>\n\n<p>It is a <code>HashMap</code> (not a <code>Vec</code>), so to check values, you need to iterate through the values (not the entire <code>HashMap</code>). </p>\n\n<p>Example code:</p>\n\n<pre><code>let value_exists = hashmap.values().any(|&amp;x| x &gt; 0);\n</code></pre>\n\n<p>Please check out the docs:</p>\n\n<ul>\n<li><p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.any\" rel=\"nofollow noreferrer\"><code>Iterator::any</code></a></p></li>\n<li><p><a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.values\" rel=\"nofollow noreferrer\"><code>HashMap::values</code></a></p></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 274, "user_id": 3846612, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0dcd698a20e104920c233ced4d0570f?s=128&d=identicon&r=PG&f=1", "display_name": "kameranis", "link": "https://stackoverflow.com/users/3846612/kameranis"}, "is_accepted": false, "score": 0, "last_activity_date": 1522493716, "creation_date": 1522493716, "answer_id": 49586934, "question_id": 49585951, "link": "https://stackoverflow.com/questions/49585951/check-if-any-value-in-a-rust-hashmap-is-greater-than-zero/49586934#49586934", "title": "Check if any value in a Rust HashMap is greater than zero", "body": "<p>The correct answer is</p>\n\n<pre><code>let has_demand = minimums.values().any(|&amp;x| x &gt; 0);\n</code></pre>\n"}], "owner": {"reputation": 274, "user_id": 3846612, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d0dcd698a20e104920c233ced4d0570f?s=128&d=identicon&r=PG&f=1", "display_name": "kameranis", "link": "https://stackoverflow.com/users/3846612/kameranis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 742, "favorite_count": 0, "accepted_answer_id": 49586039, "answer_count": 2, "score": -1, "last_activity_date": 1522504828, "creation_date": 1522485825, "last_edit_date": 1522504754, "question_id": 49585951, "link": "https://stackoverflow.com/questions/49585951/check-if-any-value-in-a-rust-hashmap-is-greater-than-zero", "title": "Check if any value in a Rust HashMap is greater than zero", "body": "<p>I want to check if a <code>HashMap&lt;i32, i32&gt;</code> contains any values greater than zero. I have this code:</p>\n\n<pre><code>let has_demand = minimums.iter().any(|*x| x &gt; 0)\n</code></pre>\n\n<p>which fails. The problem is with <code>|*x|</code>, but I don't know what to put there.</p>\n"}, {"tags": ["string", "replace", "rust", "ownership"], "answers": [{"comments": [{"owner": {"reputation": 869, "user_id": 535761, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c77b1c62b2a5f3db01e050e59fd5280?s=128&d=identicon&r=PG", "display_name": "Boon", "link": "https://stackoverflow.com/users/535761/boon"}, "edited": false, "score": 0, "creation_date": 1522550051, "post_id": 49588741, "comment_id": 86195993, "body": "Thank you so much. This is my forth time trying to pick up Rust from Java. Thanks for your patience!"}, {"owner": {"reputation": 1527, "user_id": 5387972, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d6b6d9239d09a67878e860ac414c4970?s=128&d=identicon&r=PG&f=1", "display_name": "Jay", "link": "https://stackoverflow.com/users/5387972/jay"}, "edited": false, "score": 0, "creation_date": 1596132733, "post_id": 49588741, "comment_id": 111721139, "body": "Is this still the correct way? Will some sort of <code>.map()</code> on <code>tmp</code> perhaps be more efficient?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1527, "user_id": 5387972, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d6b6d9239d09a67878e860ac414c4970?s=128&d=identicon&r=PG&f=1", "display_name": "Jay", "link": "https://stackoverflow.com/users/5387972/jay"}, "edited": false, "score": 0, "creation_date": 1596458103, "post_id": 49588741, "comment_id": 111808493, "body": "@Jay where do you propose that <code>map</code> method is implemented?"}, {"owner": {"reputation": 1527, "user_id": 5387972, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d6b6d9239d09a67878e860ac414c4970?s=128&d=identicon&r=PG&f=1", "display_name": "Jay", "link": "https://stackoverflow.com/users/5387972/jay"}, "edited": false, "score": 0, "creation_date": 1596539050, "post_id": 49588741, "comment_id": 111837001, "body": "@Shepmaster Looking it up, looks like I got it confused with reduce. In Python it would be something like - <code>reduce(lambda orig_str, replace_pairs: orig_str.replace(*replace_pairs), [(&#39;word&#39;, new_word&#39;), (&#39;word2&#39;, &#39;new_word2&#39;)], &#39;word word2&#39;)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1527, "user_id": 5387972, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d6b6d9239d09a67878e860ac414c4970?s=128&d=identicon&r=PG&f=1", "display_name": "Jay", "link": "https://stackoverflow.com/users/5387972/jay"}, "edited": false, "score": 1, "creation_date": 1596554779, "post_id": 49588741, "comment_id": 111845310, "body": "@Jay sure, something <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=aec2e34dc06f7c29d5c136ad3802d88e\" rel=\"nofollow noreferrer\">like this</a>. I wouldn&#39;t expect any major performance differences."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1596554749, "last_edit_date": 1596554749, "creation_date": 1522505996, "answer_id": 49588741, "question_id": 49585921, "link": "https://stackoverflow.com/questions/49585921/how-to-repeatedly-perform-string-replacement-in-a-loop/49588741#49588741", "title": "How to repeatedly perform string replacement in a loop?", "body": "<p>The first problem is your return value: <code>&amp;str</code>. You are returning a reference to something, but what will <em>own</em> that value? You cannot return a reference to a local variable.</p>\n<p>The second problem is the return type of <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.replace\" rel=\"nofollow noreferrer\"><code>str::replace</code></a>, which is a <code>String</code>, not a <code>&amp;str</code>. That's the cause of your error message: you are attempting to store a <code>String</code> in a variable where only a <code>&amp;str</code> can be stored. You cannot do that.</p>\n<p>The <em>easiest</em> fix is not the most efficient; unconditionally create a <code>String</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn replace_path_name(path: &amp;str) -&gt; String {\n    let mut tmp = String::from(path);\n\n    for (from, to) in REPLACEMENTS.iter() {\n        tmp = tmp.replace(from, to);\n    }\n\n    tmp\n}\n</code></pre>\n<p>You could also use a type like <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a> to save a little bit of allocation in some cases:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::borrow::Cow;\n\nfn replace_path_name(path: &amp;str) -&gt; String {\n    let mut tmp = Cow::from(path);\n\n    for (from, to) in &amp;*REPLACEMENTS {\n        tmp = tmp.replace(from, to).into();\n    }\n\n    tmp.into()\n}\n</code></pre>\n<p>Which can even be returned so that no allocation occurs if no replacements exist:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::borrow::Cow;\n\nfn replace_path_name(path: &amp;str) -&gt; Cow&lt;str&gt; {\n    let mut tmp = Cow::from(path);\n\n    for (from, to) in &amp;*REPLACEMENTS {\n        tmp = tmp.replace(from, to).into();\n    }\n\n    tmp\n}\n</code></pre>\n<p>Or the functional equivalent using <code>Iterator::fold</code>:</p>\n<pre><code>use std::borrow::Cow;\n\nfn replace_path_name(path: &amp;str) -&gt; Cow&lt;str&gt; {\n    REPLACEMENTS\n        .iter()\n        .fold(Cow::from(path), |s, (from, to)| s.replace(from, to).into())\n}\n</code></pre>\n<p>It's unfortunate that <code>str::replace</code> doesn't return a <code>Cow&lt;str&gt;</code>. If it did, no allocations would take place if no replacements were made.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27476895/155423\">Running a number of consecutive replacements on the same string</a></li>\n</ul>\n"}], "owner": {"reputation": 869, "user_id": 535761, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c77b1c62b2a5f3db01e050e59fd5280?s=128&d=identicon&r=PG", "display_name": "Boon", "link": "https://stackoverflow.com/users/535761/boon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 552, "favorite_count": 0, "accepted_answer_id": 49588741, "answer_count": 1, "score": 2, "last_activity_date": 1596554749, "creation_date": 1522485620, "last_edit_date": 1522551339, "question_id": 49585921, "link": "https://stackoverflow.com/questions/49585921/how-to-repeatedly-perform-string-replacement-in-a-loop", "title": "How to repeatedly perform string replacement in a loop?", "body": "<p>I am writing a method to loop through a <code>(from, to)</code> of a map and perform multiple rounds of <code>tmp = tmp.replace(from, to)</code>. I am still trying to grasp the ownership concepts of Rust</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nuse std::collections::HashMap;\n\nlazy_static! {\n    static ref REPLACEMENTS: HashMap&lt;&amp;'static str, &amp;'static str&gt; = {\n        let mut m = HashMap::new();\n        m.insert(\"abc\", \"def\");\n        m.insert(\"com\", \"org\");\n        m\n    };\n}\n\nfn replace_path_name(path: &amp;str) -&gt; &amp;str {\n    let mut tmp = path;\n\n    for (from, to) in REPLACEMENTS.iter() {\n        let a = *from;\n        let b = *to;\n\n        tmp = tmp.replace(a, b);\n    }\n\n    tmp\n}\n\nfn main() {}\n</code></pre>\n\n<p>This code gets me...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:22:15\n   |\n22 |         tmp = tmp.replace(a, b);\n   |               ^^^^^^^^^^^^^^^^^\n   |               |\n   |               expected &amp;str, found struct `std::string::String`\n   |               help: consider borrowing here: `&amp;tmp.replace(a, b)`\n   |\n   = note: expected type `&amp;str`\n              found type `std::string::String`\n</code></pre>\n\n<p>The extra <code>a</code> and <code>b</code> are my attempts to get by why Rust made <code>from</code> and <code>to</code> become <code>&amp;&amp;str</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1522520591, "post_id": 49587686, "comment_id": 86189704, "body": "This looks really good. I&#39;ll give it a shot. Can you explain in a bit more detail what&#39;s happening under the hood that makes the first suggestion work compared to my attempt? The <code>map</code> seems to be the key, but I don&#39;t quite get what it&#39;s doing. Does it have something to do with b.target_id being <code>Copy</code>? Because intuitively I would expect b to still be borrowed during the entire scope where <code>subject_target_id</code> exists."}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 1, "creation_date": 1522521992, "post_id": 49587686, "comment_id": 86190150, "body": "@anderspitman b.target_id being <code>Copy</code> in combination with <code>map</code> is exactly the reason this works. The reference to the retrieved beetle gets mapped to the <code>target_id</code>, which is copied when <code>Option&lt;&amp;Beetle&gt;</code> is mapped to <code>Option&lt;f32&gt;</code>. If <code>target_id</code> was not <code>Copy</code>, this would result in a <code>cannot move out of borrowed content</code> error."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1522625623, "post_id": 49587686, "comment_id": 86214417, "body": "To make sure I understand, in <code>move_toward_target</code> in the RefCell version, if you called <code>borrow_mut</code> twice (or <code>borrow</code> and <code>borrow_mut</code>) on the same element at the same time it would panic?"}, {"owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "reply_to_user": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1522629471, "post_id": 49587686, "comment_id": 86215067, "body": "@anderspitman Yes, the borrow rules stay the same. Violating these rules results in panics instead of compile time errors when using <code>borrow</code> and <code>borrow_mut</code>. There also exist the non-panicing variants <code>try_borrow</code> and <code>try_borrow_mut</code> which allow you to recover from failed attempts to borrow a value."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1522630156, "post_id": 49587686, "comment_id": 86215168, "body": "Oh nice. That was my next question. Should have just checked the reference. Thanks for your help"}], "tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 3, "last_activity_date": 1522500788, "last_edit_date": 1522500788, "creation_date": 1522498971, "answer_id": 49587686, "question_id": 49584500, "link": "https://stackoverflow.com/questions/49584500/access-another-element-immutably-while-mutating-an-element-of-a-hashmap/49587686#49587686", "title": "Access another element immutably while mutating an element of a HashMap", "body": "<p>You could solve your specific problem by performing a double lookup for the subject. First, borrow immutably from the hash map to collect the information necessary for updating the subject. Then finally update the subject using the collected information by borrowing mutably from the hash map:</p>\n\n<pre><code>fn move_toward_target(beetles: &amp;mut Beetles, beetle_id: i32) {\n    if let Some(subject_target_id) = beetles.get(&amp;beetle_id).map(|b| b.target_id) {\n        let mut target_xy = None; // example\n        if let Some(target) = beetles.get(&amp;subject_target_id) {\n            // collect information about target relevant for updating subject\n            target_xy = Some((target.x, target.y)) // example\n        }\n        let subject = beetles.get_mut(&amp;beetle_id).unwrap();\n        // update subject using collected information about target\n        if let Some((target_x, target_y)) = target_xy{ // example\n            subject.x = target_x;\n            subject.y = target_y;\n        }\n    }\n}\n</code></pre>\n\n<p>However, it is likely that you will run in similar and more complex problems with your beetles in the future, because the beetles are your central game objects, which you will likely want to reference mutably and immutably at the same time at several places in your code.\nTherefore, it makes sense to wrap your beetles in <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>std::cell::RefCell</code></a>s, which check borrow rules dynamically at runtime. This gives you a lot flexibility when referencing beetles in your hash map:</p>\n\n<pre><code>fn main() {\n    let mut beetles: Beetles = HashMap::new();\n\n    beetles.insert(0, RefCell::new(Beetle::new()));\n    beetles.insert(1, RefCell::new(Beetle::new()));\n\n    set_target(&amp;mut beetles, 0, 1);\n    move_toward_target(&amp;mut beetles, 0);\n}\n\nfn set_target(beetles: &amp;mut Beetles, subject_id: i32, target_id: i32) {\n    if let Some(mut subject) = beetles.get_mut(&amp;subject_id).map(|b| b.borrow_mut()) {\n        subject.target_id = target_id;\n    }\n}\n\nfn move_toward_target(beetles: &amp;mut Beetles, beetle_id: i32) {\n    if let Some(mut subject) = beetles.get(&amp;beetle_id).map(|b| b.borrow_mut()) {\n        if let Some(target) = beetles.get(&amp;subject.target_id).map(|b| b.borrow()) {\n            //example for updating subject based on target\n            subject.x = target.x;\n            subject.y = target.y;\n        }\n    }\n}\n</code></pre>\n\n<p>updated <code>Beetles</code> type:</p>\n\n<pre><code>type Beetles = HashMap&lt;i32, RefCell&lt;Beetle&gt;&gt;;\n</code></pre>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 1, "accepted_answer_id": 49587686, "answer_count": 1, "score": 5, "last_activity_date": 1522504565, "creation_date": 1522473502, "last_edit_date": 1522504565, "question_id": 49584500, "link": "https://stackoverflow.com/questions/49584500/access-another-element-immutably-while-mutating-an-element-of-a-hashmap", "title": "Access another element immutably while mutating an element of a HashMap", "body": "<p>I'm working on a game that involves a bunch of <code>Beetle</code> objects stored in a <code>HashMap</code>. Each beetle has a position, and it can also have a target id which is the key for another beetle in the hash. If a beetle has a target, it needs to move toward the target each time the game loop executes. </p>\n\n<p>I can't perform the lookup of the target's current position, because you can't have a mutable and immutable borrow at the same. I get that, but any ideas how to restructure for my specific case?</p>\n\n<p>I think I'm just getting caught up in how easy this would be in pretty much any other language, I can't see the idiomatic Rust way to do it. Here's a pretty minimal but complete example:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntype Beetles = HashMap&lt;i32, Beetle&gt;;\n\nstruct Beetle {\n    x: f32,\n    y: f32,\n    target_id: i32,\n}\n\nimpl Beetle {\n    fn new() -&gt; Beetle {\n        Beetle {\n            x: 0.0,\n            y: 0.0,\n            target_id: -1,\n        }\n    }\n}\n\nfn main() {\n    let mut beetles: Beetles = HashMap::new();\n\n    beetles.insert(0, Beetle::new());\n    beetles.insert(1, Beetle::new());\n\n    set_target(&amp;mut beetles, 0, 1);\n    move_toward_target(&amp;mut beetles, 0);\n}\n\nfn set_target(beetles: &amp;mut Beetles, subject_id: i32, target_id: i32) {\n    if let Some(subject) = beetles.get_mut(&amp;subject_id) {\n        subject.target_id = target_id;\n    }\n}\n\nfn move_toward_target(beetles: &amp;mut Beetles, beetle_id: i32) {\n    if let Some(subject) = beetles.get_mut(&amp;beetle_id) {\n        if let Some(target) = beetles.get(&amp;subject.target_id) {\n            // update subject position to move closer to target...\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "atomicity"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522505220, "post_id": 49587747, "comment_id": 86184954, "body": "I find the ordering stuff complicated; do you have any citations or resources to back up this claim / to provide further reading?"}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522514558, "post_id": 49587747, "comment_id": 86187945, "body": "@Shepmaster rust uses llvm which in turn mostly bases its memory model on C/C++, so reading the C++ docs on atomics might be helpful."}], "tags": [], "owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "is_accepted": true, "score": 2, "last_activity_date": 1522499783, "last_edit_date": 1522499783, "creation_date": 1522499413, "answer_id": 49587747, "question_id": 49583363, "link": "https://stackoverflow.com/questions/49583363/can-i-safely-use-orderingrelaxed-in-single-threaded-contexts/49587747#49587747", "title": "Can I safely use Ordering::Relaxed in single-threaded contexts?", "body": "<p><code>Ordering</code> is about visibility guarantees in the presence of other threads. Memory accesses are always immediately visible within the current thread (barring noalias violations). So even the weakest ordering requirements (<code>Relaxed</code>) are still at least as strong as normal accesses such as those provided by <code>Cell</code>.</p>\n"}], "owner": {"reputation": 1434, "user_id": 3691554, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2479edc9e2237ac67d4df87105fbc656?s=128&d=identicon&r=PG&f=1", "display_name": "SoniEx2", "link": "https://stackoverflow.com/users/3691554/soniex2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 49587747, "answer_count": 1, "score": 1, "last_activity_date": 1522499783, "creation_date": 1522459999, "last_edit_date": 1522499620, "question_id": 49583363, "link": "https://stackoverflow.com/questions/49583363/can-i-safely-use-orderingrelaxed-in-single-threaded-contexts", "title": "Can I safely use Ordering::Relaxed in single-threaded contexts?", "body": "<p>I need <code>(Ref)UnwindSafe</code>ty, and <code>Cell&lt;bool&gt;</code> doesn't provide it, so I'm using <code>AtomicBool</code> instead.</p>\n\n<p>Is it guaranteed that, in a single-threaded context, updates to one <code>Rc&lt;AtomicBool&gt;</code> using <code>Relaxed</code> (store) ordering are immediately visible on other <code>Rc&lt;AtomicBool&gt;</code>s using <code>Relaxed</code> (load) ordering? (The <code>Rc</code>s point to the same <code>AtomicBool</code>.)</p>\n"}, {"tags": ["rust", "reqwest"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1522460498, "post_id": 49583320, "comment_id": 86174948, "body": "Using <code>curl -vvvvvv &quot;https:&#47;&#47;eth0.me&quot;</code> or accessing the site in a web browser has the exact same problem. Requesting <code>http:&#47;&#47;</code> works. This has nothing to do with Reqwest or even Rust. Please explore more debugging avenues in the future."}, {"owner": {"reputation": 59, "user_id": 7482754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af0e56bde7a998d705b7d2188bf6562a?s=128&d=identicon&r=PG", "display_name": "thatlittlegit", "link": "https://stackoverflow.com/users/7482754/thatlittlegit"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522461116, "post_id": 49583320, "comment_id": 86175020, "body": "Sorry about that - I just picked the first plaintext URL I could think of, and figured it&#39;d work with HTTPS. Sorry for spending your time on this; it works like a charm with HTTP."}], "owner": {"reputation": 59, "user_id": 7482754, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af0e56bde7a998d705b7d2188bf6562a?s=128&d=identicon&r=PG", "display_name": "thatlittlegit", "link": "https://stackoverflow.com/users/7482754/thatlittlegit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 354, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1522461270, "creation_date": 1522459308, "last_edit_date": 1522461270, "question_id": 49583320, "link": "https://stackoverflow.com/questions/49583320/making-a-request-to-https-eth0-me-with-reqwest-hangs-on-send", "title": "Making a request to https://eth0.me with Reqwest hangs on send()", "body": "<p><strong>Note:</strong> This issue was caused by my using HTTPS when the site only supported HTTP. Check this if you're having this issue!</p>\n\n<hr>\n\n<p>I'm trying to make a small web crawler in Rust. When I try to send a GET request using the reqwest library, the program hangs.</p>\n\n<p>My code that shows this problem:</p>\n\n<pre><code>extern crate reqwest;\n\nuse reqwest::Client;\n\nfn main() {\n    let client = Client::new();\n\n    println!(\"Checkpoint 1!\");\n    println!(\"=&gt; {:?}\", client.get(\"https://eth0.me\").send().unwrap().text());\n    println!(\"Checkpoint 2!\");\n}\n</code></pre>\n\n<p>Running in the terminal:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n  Finished dev [unoptimized + debuginfo] targets in 0.0 secs\n  Running `target/debug/crawler`\nCheckpoint 1!\n</code></pre>\n\n<p>It seems the request times out, as later (1 minute, I think):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { kind: Io(Custom { kind: WouldBlock, error: StringError(\"timed out\") }), url: Some(\"https://eth0.me/\") }', libcore/result.rs:945:5\nstack backtrace:\n   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace\n             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::_print\n             at libstd/sys_common/backtrace.rs:71\n   2: std::panicking::default_hook::{{closure}}\n             at libstd/sys_common/backtrace.rs:59\n             at libstd/panicking.rs:380\n   3: std::panicking::default_hook\n             at libstd/panicking.rs:396\n   4: std::panicking::rust_panic_with_hook\n             at libstd/panicking.rs:576\n   5: std::panicking::begin_panic\n             at libstd/panicking.rs:537\n   6: std::panicking::begin_panic_fmt\n             at libstd/panicking.rs:521\n   7: rust_begin_unwind\n             at libstd/panicking.rs:497\n   8: core::panicking::panic_fmt\n             at libcore/panicking.rs:71\n   9: core::result::unwrap_failed\n             at /checkout/src/libcore/macros.rs:23\n  10: &lt;core::result::Result&lt;T, E&gt;&gt;::unwrap\n             at /checkout/src/libcore/result.rs:782\n  11: crawler::main\n             at src/main.rs:8\n  12: std::rt::lang_start::{{closure}}\n             at /checkout/src/libstd/rt.rs:74\n  13: std::panicking::try::do_call\n             at libstd/rt.rs:59\n             at libstd/panicking.rs:479\n  14: __rust_maybe_catch_panic\n             at libpanic_unwind/lib.rs:102\n  15: std::rt::lang_start_internal\n             at libstd/panicking.rs:458\n             at libstd/panic.rs:358\n             at libstd/rt.rs:58\n  16: std::rt::lang_start\n             at /checkout/src/libstd/rt.rs:74\n  17: main\n  18: __libc_start_main\n  19: _start\n</code></pre>\n\n<p>In strace, it seems to hang on <code>futex(0x7ff6b0e2105c, FUTEX_WAIT_PRIVATE, 0, {tv_sec=29, tv_nsec=999994794}</code>. It also seems to have a missing <code>)</code>, which is revealed when ^C or timeout occurs. It equals <code>-1 ETIMEDOUT (Connection timed out</code> when it times out.</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1522449099, "post_id": 49581900, "comment_id": 86172556, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We don&#39;t know what the signature of <code>nanoid::generate</code> is for sure, or what the implementation of <code>self[]</code> is for the code presented."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522449223, "post_id": 49581901, "comment_id": 86172597, "body": "If <code>nanoid::generate</code> returns a <code>String</code>, as you say in the question, then this code cannot work because you <a href=\"https://stackoverflow.com/q/32682876/155423\">cannot return a reference to a value created in a function</a>."}], "tags": [], "owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "is_accepted": false, "score": -3, "last_activity_date": 1522449032, "last_edit_date": 1522449032, "creation_date": 1522446838, "answer_id": 49581901, "question_id": 49581900, "link": "https://stackoverflow.com/questions/49581900/how-do-i-set-the-return-values-lifetime/49581901#49581901", "title": "How do I set the return value&#39;s lifetime?", "body": "<p>You need to focus on where the variable is set, not where you actually return the variable.</p>\n\n<p>In this case, change <code>nanoid::generate(15);</code> to <code>&amp;nanoid::generate(15);</code>:</p>\n\n<pre><code>fn generate_id(&amp;self) -&gt; ID&lt;'m&gt; {\n    let id: ID&lt;'m&gt; = &amp;nanoid::generate(15);\n    while self[&amp;id].is_some() {\n        id = &amp;nanoid::generate(15);\n    };\n    id\n}\n</code></pre>\n\n<p>This ensures that the initial type of the variable has the lifetime and supplying the value as a reference ensures that the variable has the correct lifetime.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522449571, "post_id": 49582302, "comment_id": 86172687, "body": "I agree with your points, but (presumably) OP solved their case because they answered, even though you and I agree it&#39;s impossible based on the information given. The question feels like it&#39;s unanswerable (or a dupe of something)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522449662, "post_id": 49582302, "comment_id": 86172710, "body": "I&#39;d also have a minor quibble with the terminology &quot;temporary&quot;. Temporary would be the <code>String</code> in <code>String::new().trim()</code>; this would just be a local variable."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522494047, "post_id": 49582302, "comment_id": 86181674, "body": "Good point about temporary. I still think my answer is important to other readers, simply because the OPs self-answer makes no sense."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 2, "last_activity_date": 1522493974, "last_edit_date": 1522493974, "creation_date": 1522449415, "answer_id": 49582302, "question_id": 49581900, "link": "https://stackoverflow.com/questions/49581900/how-do-i-set-the-return-values-lifetime/49582302#49582302", "title": "How do I set the return value&#39;s lifetime?", "body": "<p>Lifetimes are descriptive, not prescriptive. You don't set lifetimes; they are a consequence of the program you write.</p>\n\n<p>You are trying to return a reference to a local variable. That is not valid, and there is no lifetime you can write to make it valid.</p>\n\n<p>You have an X/Y problem. The real question is why you feel the need to return a reference.</p>\n"}], "owner": {"reputation": 2184, "user_id": 3536548, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/qEPjr.png?s=128&g=1", "display_name": "Thermatix", "link": "https://stackoverflow.com/users/3536548/thermatix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 531, "favorite_count": 0, "closed_date": 1565618035, "answer_count": 2, "score": -2, "last_activity_date": 1522493974, "creation_date": 1522446838, "last_edit_date": 1522448979, "question_id": 49581900, "link": "https://stackoverflow.com/questions/49581900/how-do-i-set-the-return-values-lifetime", "closed_reason": "Not suitable for this site", "title": "How do I set the return value&#39;s lifetime?", "body": "<p>I have the following method to check if an <code>String</code> ID exists. If it doesn't, generate and then return it:</p>\n\n<pre><code>fn generate_id(&amp;self) -&gt; ID&lt;'m&gt; {\n    let id = nanoid::generate(15);\n    while self[&amp;id].is_some() {\n        id = nanoid::generate(15);\n    };\n    id\n}\n</code></pre>\n\n<p><code>ID</code> is a type alias: <code>type ID&lt;'id&gt; = &amp;'id String;</code></p>\n\n<p>The return value needs to be <code>&amp;'m std::string::String</code> but <code>id</code> is <code>std::string::String</code>.</p>\n\n<p>I have tried doing: </p>\n\n<pre><code>let id: ID&lt;'m&gt; = nanoid::generate(15);\n</code></pre>\n\n<p>but then it gives the same error that the method is giving only for <code>id</code>.</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8725011"}, "edited": false, "score": 0, "creation_date": 1522482433, "post_id": 49577243, "comment_id": 86178848, "body": "I see. The more I think about it the more I come to the conclusion that deserializing a binary message using a macro is the wrong way. Thanks for clearing this up."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1586264118, "last_edit_date": 1586264118, "creation_date": 1522424367, "answer_id": 49577243, "question_id": 49576878, "link": "https://stackoverflow.com/questions/49576878/how-do-i-evaluate-expressions-in-rusts-macro-system/49577243#49577243", "title": "How do I evaluate expressions in Rust&#39;s macro system?", "body": "<h1>Declarative macros (<code>macro_rules</code>)</h1>\n\n<p>You cannot evaluate expressions in a declarative macro. Declarative macros only create, remove, or move around parts of the input code's abstract syntax tree (AST). No evaluation occurs during macro expansion (even the name \"expansion\" is a hint).</p>\n\n<p>The best you can do is create code that can be evaluated at compile time, after the macros have been expanded. The subset of code that is valid at compile time is limited, but it will grow in the future.</p>\n\n<h1>Procedural macros</h1>\n\n<p>Procedural macros are more complicated but more powerful. These are implemented as arbitrary Rust code and they can parse arbitrary Rust code, outputting more arbitrary Rust code.</p>\n\n<p>However, there's no ability to reuse the normal ways of evaluating Rust code. You will have to accept literal values and do all the computation yourself.</p>\n\n<h1>Your specific example</h1>\n\n<p>It's unclear what you want the result of the macro to be. Remember that macros don't have the ability to \"make up\" new Rust concepts, they only allow you to express existing repeated concepts with fewer characters.</p>\n\n<p>Because of this, I always recommend that people write out the first <strong>two</strong> repeated cases fully. This forces you to write the full valid Rust code and identify the differences between them. You can then extract the commonality using any normal Rust technique. </p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://danielkeep.github.io/tlborm/book/\" rel=\"nofollow noreferrer\">The Little Book of Rust Macros</a></li>\n<li><a href=\"https://stackoverflow.com/q/33751796/155423\">Is there a way to count with macros?</a></li>\n</ul>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8725011"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 999, "favorite_count": 0, "accepted_answer_id": 49577243, "answer_count": 1, "score": 4, "last_activity_date": 1586264118, "creation_date": 1522422780, "last_edit_date": 1549023049, "question_id": 49576878, "link": "https://stackoverflow.com/questions/49576878/how-do-i-evaluate-expressions-in-rusts-macro-system", "title": "How do I evaluate expressions in Rust&#39;s macro system?", "body": "<p>I'm trying to learn the Rust macro system by writing a simple macro that generates a struct based on some unsigned integer type (<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code>). I want something like this:</p>\n\n<pre><code>bitmessage! {\n    struct Header(u16);\n    version: 8, 5; // the first number is the length, second is value\n    data: 8, 5;\n}\n</code></pre>\n\n<p>To be more specific, I'm looking for some way to store certain information in an unsigned integer type with various offsets. One use case is to read some bytes and construct some kind of \"message\":</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[ 15 14 13 12 11 10 09 08 | 07 06 05 04 03 02 01 01 ]\n</code></pre>\n\n<p>The higher part of the message contains some data/information, the lower part a versioning field. (This is just a toy example).</p>\n\n<p>This is my effort so far, but the inner repeating expansion does not compile: </p>\n\n<pre><code>macro_rules! bitmessage {\n(struct $name:ident($n:ty); \n    $($field_name:ident: $length:expr, $value:expr;)*)  =&gt; {\n         struct $name ($n);\n         $($name.1 = $name.1 | $value &lt;&lt; $length)*\n    };\n}\n</code></pre>\n\n<p>One solution could be to store the relevant bytes in a struct, implementing it directly (or with a trait) to get the appropriate fields, but this would involve too much bit-shifting logic (no problem with that, but there must be a more convenient way).</p>\n\n<p>I am aware of <a href=\"https://crates.io/crates/bitflags\" rel=\"nofollow noreferrer\">bitflags</a> and <a href=\"https://crates.io/crates/bitfield\" rel=\"nofollow noreferrer\">bitfield</a>. Neither of them matches my use case.</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 12, "last_activity_date": 1522408358, "creation_date": 1522408358, "answer_id": 49573336, "question_id": 49573335, "link": "https://stackoverflow.com/questions/49573335/what-is-the-maximum-number-of-threads-a-rust-program-can-spawn/49573336#49573336", "title": "What is the maximum number of threads a Rust program can spawn?", "body": "<p>The <a href=\"https://doc.rust-lang.org/std/thread/\" rel=\"noreferrer\">threads provided by the Rust standard library</a> are \"OS threads\", that is, they use the facilities of your operating system.</p>\n\n<p>Therefore, a Rust program has no limit imposed by Rust itself, but rather, this limit would result from whatever your OS lets you do. You'd have to know the OS to know the true answer, which would be different for a given OS. For example, see this question: <a href=\"https://stackoverflow.com/questions/344203/maximum-number-of-threads-per-process-in-linux\">\"Maximum number of threads per process in Linux?\"</a></p>\n"}], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2522, "favorite_count": 1, "accepted_answer_id": 49573336, "answer_count": 1, "score": 9, "last_activity_date": 1522408358, "creation_date": 1522408358, "question_id": 49573335, "link": "https://stackoverflow.com/questions/49573335/what-is-the-maximum-number-of-threads-a-rust-program-can-spawn", "title": "What is the maximum number of threads a Rust program can spawn?", "body": "<p>I am seeing conflicting information about the maximum number of threads that a Rust program can spawn; some suggest arbitrary numbers like \"32\", sometimes a multiple of the number of cores the CPU has.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 0, "last_activity_date": 1522407892, "creation_date": 1522407892, "answer_id": 49573231, "question_id": 49573230, "link": "https://stackoverflow.com/questions/49573230/where-do-benchmark-tests-go/49573231#49573231", "title": "Where do benchmark tests go?", "body": "<p>The <a href=\"https://doc.rust-lang.org/cargo/guide/project-layout.html\" rel=\"nofollow noreferrer\">documentation for Cargo's project layout</a> says:</p>\n\n<blockquote>\n  <p>Benchmarks go in the <code>benches</code> directory.</p>\n</blockquote>\n\n<p>That's the convention, but in your Cargo.toml <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#configuring-a-target\" rel=\"nofollow noreferrer\">you can configure targets</a>, and one of those is the <code>[[bench]]</code> target. Doing that will let you place them wherever you'd like.</p>\n"}], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 416, "favorite_count": 1, "closed_date": 1522421759, "accepted_answer_id": 49573231, "answer_count": 1, "score": 2, "last_activity_date": 1522407892, "creation_date": 1522407892, "question_id": 49573230, "link": "https://stackoverflow.com/questions/49573230/where-do-benchmark-tests-go", "closed_reason": "Duplicate", "title": "Where do benchmark tests go?", "body": "<p>Where in the project structure do benchmark tests for a library go? I tried putting them in a file in the tests folder of the library and they fail to run when running <code>cargo bench</code>.</p>\n"}, {"tags": ["mysql", "rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": true, "score": 7, "last_activity_date": 1522416379, "creation_date": 1522416379, "answer_id": 49575360, "question_id": 49569724, "link": "https://stackoverflow.com/questions/49569724/installing-the-mysqlclient-library-in-mac-os/49575360#49575360", "title": "installing the mysqlclient library in mac OS", "body": "<p><a href=\"http://formulae.brew.sh/formula/mysql-connector-c\" rel=\"noreferrer\">mysql-connector-c</a> seems to be the homebrew package you are looking for. Libmysqlclient should also be installed when installing the <a href=\"http://formulae.brew.sh/formula/mysql\" rel=\"noreferrer\">mysql</a> brew package.</p>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6278, "favorite_count": 1, "accepted_answer_id": 49575360, "answer_count": 1, "score": 3, "last_activity_date": 1531274233, "creation_date": 1522392309, "question_id": 49569724, "link": "https://stackoverflow.com/questions/49569724/installing-the-mysqlclient-library-in-mac-os", "title": "installing the mysqlclient library in mac OS", "body": "<p>I'm trying to demo rust database program using <a href=\"http://diesel.rs/\" rel=\"nofollow noreferrer\">diesel.rs</a> library.</p>\n\n<p>I'm following the getting started steps <a href=\"http://diesel.rs/guides/getting-started/\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>As mentioned in this page, I got below error while running the command <code>cargo install diesel_cli</code>.</p>\n\n<pre><code>note: ld: library not found for -lmysqlclient\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n\n<p>The solution is given in the next step as well in same page as below.</p>\n\n<pre><code>   You can resolve this issue by either installing the library (using the usual way to do this depending on your operating system) or by specifying the backends you want to install the CLI tool with.\n</code></pre>\n\n<p>But I don't know how to do this in my mac OS. I tried the below commands.</p>\n\n<pre><code>brew install mysqlclient\nbrew install lmysqlclient\n</code></pre>\n\n<p>But brew couldn't find any such repo. \nPlease help me how to resolve this error and install mysqlclient library in my mac OS.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522370594, "post_id": 49566621, "comment_id": 86142253, "body": "<i><code>fn(&amp;&#39;a T) -&gt; T</code> is not generic</i> \u2014 yes, it is. <code>&#39;a</code> is a generic lifetime parameter. Thus that line of reasoning does not seem to hold up."}], "answers": [{"comments": [{"owner": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "edited": false, "score": 0, "creation_date": 1522402019, "post_id": 49569932, "comment_id": 86151040, "body": "Wouldn&#39;t two <code>fn(&amp;T) -&gt; T</code> be <code>fn&lt;&#39;b&gt;(&amp;&#39;b T) -&gt; T</code> and <code>fn&lt;&#39;c&gt;(&amp;&#39;c T) -&gt; T</code>? And would you ever have two functions like those be different functions, i.e. wouldn&#39;t they be implemented as the same one?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "edited": false, "score": 0, "creation_date": 1522404850, "post_id": 49569932, "comment_id": 86152418, "body": "At the time you compare them they are no longer generic: all generic parameters (including lifetimes) have been resolved. If all generic parameters have been resolved to be the same, then they can be compared. Othewise it doesn&#39;t make sense to compare them (for the same reason you can&#39;t compare an <code>u8</code> and an <code>u32</code>)."}, {"owner": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "edited": false, "score": 0, "creation_date": 1522407218, "post_id": 49569932, "comment_id": 86153548, "body": "I see the point on a type theory basis, but would it ever resolve to 2 different functions? Additionally, would there be any unsafety in manually implementing <code>Eq</code> with pointer equivalence using newtypes?"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1522393432, "creation_date": 1522393432, "answer_id": 49569932, "question_id": 49566621, "link": "https://stackoverflow.com/questions/49566621/is-it-intentional-that-cmpeq-is-implemented-for-fna-t-t-but-not-fnt/49569932#49569932", "title": "Is it intentional that cmp::Eq is implemented for fn(&amp;&#39;a T) -&gt; T but not fn(&amp;T) -&gt; T?", "body": "<p>Probably because when you compare two <code>fn(&amp;T) -&gt; T</code>, you're really comparing an <code>fn(&amp;'a T) -&gt; T</code> with an <code>fn(&amp;'b T) -&gt; T</code> with no way to check that the lifetimes <code>'a</code> and <code>'b</code> are the same, whereas when you compare two <code>fn(&amp;'a T) -&gt; T</code>, you know that the lifetimes are the same.</p>\n\n<p>Note: this is only a supposition on my part, I have no authoritative information on the matter.</p>\n"}], "owner": {"reputation": 1127, "user_id": 8171453, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3ac080ba0604191f0653a8880a21cdd?s=128&d=identicon&r=PG&f=1", "display_name": "Emoun", "link": "https://stackoverflow.com/users/8171453/emoun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 197, "favorite_count": 2, "answer_count": 1, "score": 6, "last_activity_date": 1522393432, "creation_date": 1522367312, "last_edit_date": 1522370539, "question_id": 49566621, "link": "https://stackoverflow.com/questions/49566621/is-it-intentional-that-cmpeq-is-implemented-for-fna-t-t-but-not-fnt", "title": "Is it intentional that cmp::Eq is implemented for fn(&amp;&#39;a T) -&gt; T but not fn(&amp;T) -&gt; T?", "body": "<p>Take the following valid snippet in Rust 1.25.0:</p>\n\n<pre><code>use std::marker::PhantomData;\n\ntrait Foo {\n    type Eq: Eq;\n}\n\nstruct Bar&lt;'a&gt;(PhantomData&lt;&amp;'a u8&gt;);\n\nimpl&lt;'a&gt; Foo for Bar&lt;'a&gt; {\n    type Eq = fn(&amp;'a u32) -&gt; u32;\n}\n</code></pre>\n\n<p>As seen on the <a href=\"https://play.rust-lang.org/?gist=5d9ab88c05134ac95614847f7ef51f01&amp;version=undefined\" rel=\"noreferrer\">playground</a>, this shows that <code>Eq</code> is implemented for <code>fn(&amp;'a T) -&gt; T</code>. </p>\n\n<p>If we make a very small change, removing the lifetime of the associated type:</p>\n\n<pre><code>use std::marker::PhantomData;\n\ntrait Foo {\n    type Eq: Eq;\n}\n\nstruct Bar&lt;'a&gt;(PhantomData&lt;&amp;'a u8&gt;);\n\nimpl&lt;'a&gt; Foo for Bar&lt;'a&gt; {\n    type Eq = fn(&amp;u32) -&gt; u32;\n}\n</code></pre>\n\n<p>We can <a href=\"https://play.rust-lang.org/?gist=d0f40826a98e2afff0a9e52af3f15cd2&amp;version=undefined\" rel=\"noreferrer\">see</a> that <code>Eq</code> is not implemented for <code>fn(&amp;u32) -&gt; u32</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `for&lt;'r&gt; fn(&amp;'r u32) -&gt; u32: std::cmp::Eq` is not satisfied\n --&gt; src/main.rs:9:10\n  |\n9 | impl&lt;'a&gt; Foo for Bar&lt;'a&gt; {\n  |          ^^^ the trait `std::cmp::Eq` is not implemented for `for&lt;'r&gt; fn(&amp;'r u32) -&gt; u32`\n  |\n  = help: the following implementations were found:\n            &lt;extern \"C\" fn(A) -&gt; Ret as std::cmp::Eq&gt;\n            &lt;unsafe fn(A) -&gt; Ret as std::cmp::Eq&gt;\n            &lt;extern \"C\" fn(A, ...) -&gt; Ret as std::cmp::Eq&gt;\n            &lt;unsafe extern \"C\" fn(A, ...) -&gt; Ret as std::cmp::Eq&gt;\n          and 2 others\n</code></pre>\n\n<p>Is this intentional, an oversight and should be implemented, or a bug?\nIf it's the first, what are the reasons for not doing it?</p>\n\n<p>Looking at <a href=\"https://github.com/rust-lang/rust/blob/1.25.0/src/libcore/ptr.rs#L2163\" rel=\"noreferrer\">the source code for <code>fn</code></a>, we see that they implement <code>PartialEq</code> using raw pointer equivalence, i.e. if the address is the same, it must be the same function. Why would this not hold for <code>fn(&amp;T) -&gt; T</code>?</p>\n\n<p>One option that has been presented to me is that <code>fn(&amp;T) -&gt; T</code> is generic over the lifetime of the argument and cannot therefore be logically <code>Eq</code>. <code>fn(&amp;'a T) -&gt; T</code> is not generic, as the lifetime has been specified to be <code>'a</code>. I'm not quite sure I accept/understand this hypothesis so if anyone has a good argument for it I would accept that too.</p>\n"}, {"tags": ["algorithm", "rust", "geometry"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 6, "creation_date": 1522335936, "post_id": 49559359, "comment_id": 86126724, "body": "I&#39;m voting to close this question as off-topic because as a request for improvement (since the code works) it is better suited for <a href=\"https://codereview.stackexchange.com\">codereview</a>."}, {"owner": {"reputation": 134, "user_id": 3521007, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NX4gV.png?s=128&g=1", "display_name": "elsuizo", "link": "https://stackoverflow.com/users/3521007/elsuizo"}, "edited": false, "score": 0, "creation_date": 1522422037, "post_id": 49559359, "comment_id": 86160912, "body": "why not use the method <code>put_pixel()</code> ???"}], "answers": [{"tags": [], "owner": {"reputation": 3870, "user_id": 2336725, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20a0b96a26cf233d752469445595f872?s=128&d=identicon&r=PG", "display_name": "Teepeemm", "link": "https://stackoverflow.com/users/2336725/teepeemm"}, "is_accepted": true, "score": 1, "last_activity_date": 1522440906, "creation_date": 1522440906, "answer_id": 49580868, "question_id": 49559359, "link": "https://stackoverflow.com/questions/49559359/is-there-a-better-way-to-implement-the-midpoint-circle-algorithm-using-the-image/49580868#49580868", "title": "Is there a better way to implement the Midpoint Circle Algorithm using the image 0.18 crate?", "body": "<p>I don't know Rust, but you can do something like:</p>\n\n<pre><code>while x &gt;= y {\n    for xsign in [-1,1] {\n        for ysign in [-1,1] {\n            {\n                let pixel = buffer.get_pixel_mut(x0 + xsign*x as u32, y0 + ysign*y as u32);\n                pixel.data = [red, green, blue];\n            }\n            {\n                let pixel = buffer.get_pixel_mut(x0 + xsign*y as u32, y0 + ysign*x as u32);\n                pixel.data = [red, green, blue];\n            }\n        }\n    }\n</code></pre>\n\n<p>If Rust gives an easy way to say <code>for dx,dy in ( (x,y), (y,x) )</code>, that would let you combine the last two into a single loop using <code>x0+xsign*dx</code> and <code>y0+ysing*dy</code>.</p>\n\n<p>In Python, you could then consider using itertools.product to combine three for loops into a single for loop that takes <code>xsign,ysign,(dx,dy)</code> from the cartesian product <code>[-1,1]x[-1,1]x((x,y),(y,x))</code>.  In Python, this would end up being:</p>\n\n<pre><code>while x &gt;= y:\n    for xsign,ysign,(dx,dy) in itertools.product([-1,1],[-1,1],((x,y),(y,x))):\n        let pixel = buffer.get_pixel_mut(x0 + xsign*x as u32, y0 + ysign*y as u32);\n        pixel.data = [red, green, blue];\n</code></pre>\n\n<p>I don't know Rust (have I made that clear yet?), but I'd be surprised if Rust didn't have similar mechanisms.</p>\n"}], "owner": {"reputation": 61, "user_id": 8801682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2211bad38e15e5c35f048b0051ab90b?s=128&d=identicon&r=PG&f=1", "display_name": "Fensi322", "link": "https://stackoverflow.com/users/8801682/fensi322"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 49580868, "answer_count": 1, "score": 3, "last_activity_date": 1522440906, "creation_date": 1522335710, "last_edit_date": 1522336496, "question_id": 49559359, "link": "https://stackoverflow.com/questions/49559359/is-there-a-better-way-to-implement-the-midpoint-circle-algorithm-using-the-image", "title": "Is there a better way to implement the Midpoint Circle Algorithm using the image 0.18 crate?", "body": "<p>I'm trying to implement a Midpoint Circle Algorithm in Rust.\nI've rewritten the <a href=\"https://en.wikipedia.org/wiki/Midpoint_circle_algorithm#C_example\" rel=\"nofollow noreferrer\">C code from Wikipedia</a> into Rust syntax.</p>\n\n<p>I got into trouble in the \"put pixel\" part, firstly I've created:</p>\n\n<pre><code>let mut pixel = buffer.get_pixel_mut(x0 + x, y0 + y);\n</code></pre>\n\n<p>then gave it rgb value</p>\n\n<pre><code>pixel.data = [red, green, blue];\n</code></pre>\n\n<p>and tried to do same thing with next pixel</p>\n\n<pre><code>pixel = buffer.get_pixel_mut(x0 + y, y0 + x);\n</code></pre>\n\n<p>and so on;</p>\n\n<p>The problem is I'm trying to borrow <code>buffer</code> multiple times in the same scope, so I created a scope for each pixel assignment. It works, but the code looks awful. Is there a better way to do this? </p>\n\n<p>The full function:</p>\n\n<pre><code>fn draw_circle(\n    x0: u32,\n    y0: u32,\n    radius: u32,\n    buffer: &amp;mut ImageBuffer&lt;Rgb&lt;u8&gt;, Vec&lt;u8&gt;&gt;,\n    red: u8,\n    green: u8,\n    blue: u8,\n) {\n    let mut x: i32 = radius as i32;\n    let mut y: i32 = 0;\n    let mut err: i32 = 0;\n\n    while x &gt;= y {\n        {\n            let pixel = buffer.get_pixel_mut(x0 + x as u32, y0 + y as u32);\n            pixel.data = [red, green, blue];\n        }\n        {\n            let pixel = buffer.get_pixel_mut(x0 + y as u32, y0 + x as u32);\n            pixel.data = [red, green, blue];\n        }\n        {\n            let pixel = buffer.get_pixel_mut(x0 - y as u32, y0 + x as u32);\n            pixel.data = [red, green, blue];\n        }\n        {\n            let pixel = buffer.get_pixel_mut(x0 - x as u32, y0 + y as u32);\n            pixel.data = [red, green, blue];\n        }\n        {\n            let pixel = buffer.get_pixel_mut(x0 - x as u32, y0 - y as u32);\n            pixel.data = [red, green, blue];\n        }\n        {\n            let pixel = buffer.get_pixel_mut(x0 - y as u32, y0 - x as u32);\n            pixel.data = [red, green, blue];\n        }\n        {\n            let pixel = buffer.get_pixel_mut(x0 + y as u32, y0 - x as u32);\n            pixel.data = [red, green, blue];\n        }\n        {\n            let pixel = buffer.get_pixel_mut(x0 + x as u32, y0 - y as u32);\n            pixel.data = [red, green, blue];\n        }\n\n        if err &lt;= 0 {\n            y += 1;\n            err += 2 * y + 1;\n        }\n\n        if err &gt; 0 {\n            x -= 1;\n            err -= 2 * x + 1;\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["generics", "serialization", "rust", "traits", "serde"], "comments": [{"owner": {"reputation": 1455, "user_id": 6073823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iK5jZ.jpg?s=128&g=1", "display_name": "S&#248;ren Mortensen", "link": "https://stackoverflow.com/users/6073823/s%c3%b8ren-mortensen"}, "edited": false, "score": 0, "creation_date": 1522320952, "post_id": 49552876, "comment_id": 86115653, "body": "You might want to take a look at <a href=\"https://serde.rs/attr-bound.html\" rel=\"nofollow noreferrer\">serde.rs/attr-bound.html</a>"}, {"owner": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "reply_to_user": {"reputation": 1455, "user_id": 6073823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iK5jZ.jpg?s=128&g=1", "display_name": "S&#248;ren Mortensen", "link": "https://stackoverflow.com/users/6073823/s%c3%b8ren-mortensen"}, "edited": false, "score": 0, "creation_date": 1522345603, "post_id": 49552876, "comment_id": 86132472, "body": "@S&#248;renMortensen I think it&#39;s kind of similar to what I&#39;m after but I want the user to provide the de-serialize for the value and the possibility to pass different types of my generic."}, {"owner": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "reply_to_user": {"reputation": 1455, "user_id": 6073823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iK5jZ.jpg?s=128&g=1", "display_name": "S&#248;ren Mortensen", "link": "https://stackoverflow.com/users/6073823/s%c3%b8ren-mortensen"}, "edited": false, "score": 0, "creation_date": 1522346326, "post_id": 49552876, "comment_id": 86132825, "body": "@S&#248;renMortensen, or maybe better than I tough initially. But can it keep track of what type I used? Or do I need to tell rust what types like this <code>Outer&lt;u64, str&gt;</code> or can they be inferred?"}, {"owner": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522351465, "post_id": 49552876, "comment_id": 86135395, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/167836/discussion-between-drpytho-and-shepmaster\">continue this discussion in chat</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1522354484, "post_id": 49552876, "comment_id": 86136760, "body": "Does <a href=\"https://stackoverflow.com/q/42392935/155423\">How do I deserialize into trait, not a concrete type?</a> or <a href=\"https://stackoverflow.com/q/44231020/155423\">How can deserialization of polymorphic trait objects be added in Rust if at all?</a> provide information / answer your question?"}, {"owner": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "edited": false, "score": 0, "creation_date": 1522354898, "post_id": 49552876, "comment_id": 86136986, "body": "Close. That was what I first thought of, but I want the user to be able to extend the values/types possible. I want the behavior of enums, but flexibility for the user to add their own structs as possible candidates. Similar to <a href=\"https://github.com/jaysonsantos/bmemcached-rs/blob/ea627ee3456f73d39c7097b1f1647039bc74f27f/src/protocol.rs\" rel=\"nofollow noreferrer\">this code</a> but they all need unique <i>ids</i>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1554593209, "last_edit_date": 1554593209, "creation_date": 1522355441, "answer_id": 49564534, "question_id": 49552876, "link": "https://stackoverflow.com/questions/49552876/how-do-i-create-a-generic-struct-that-can-be-serialized-with-serde-and-retain-ty/49564534#49564534", "title": "How do I create a generic struct that can be serialized with Serde and retain type information?", "body": "<p>I'm pretty sure that this is completely impossible in the general sense.</p>\n\n<p>Each type is able to control its own serialization. That means that multiple types could end up serializing to <em>the same value</em>:</p>\n\n<pre><code>#[derive(Debug, Deserialize, Serialize)]\nstruct Age(i32);\n\n#[derive(Debug, Deserialize, Serialize)]\nstruct Weight(i32);\n\nfn main() {\n    let a = Age(42);\n    let a_str = serde_json::to_string(&amp;a).unwrap();\n    println!(\"{}\", a_str); // 42\n    let b: Weight = serde_json::from_str(&amp;a_str).unwrap();\n    println!(\"{:?}\", b);\n}\n</code></pre>\n\n<p>You could try to build up markers inside the serialized data that identify the type, but ultimately the same problem occurs: there's always the possibility for conflicts.</p>\n\n<p>Even more fundamentally, such a concept isn't valid in Rust where each type has to have a known size at compile time. There's no way to deserialize into a variable of <em>unknown size</em>.</p>\n\n<p>Equally fundamentally, what type would you provide for the generic <code>V</code>? You can't \"forget\" to specify all generic types when you compile your code.</p>\n\n<p>Because of this, usually such a thing doesn't even come up. If the user calls your serialization code with a concrete type, they can call your deserialization code with the same concrete type. </p>\n\n<blockquote>\n  <p>I want the behavior of enums, but flexibility for the user to add their own structs.</p>\n</blockquote>\n\n<p>That sounds like a <em>trait object</em>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42392935/155423\">How do I deserialize into trait, not a concrete type?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44231020/155423\">How can deserialization of polymorphic trait objects be added in Rust if at all?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 14193710, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AOh14GiiG5jQH73H6Gg2gM9HkI99tGOrNU97XofPdpvZ=k-s128", "display_name": "Julian Lazaras", "link": "https://stackoverflow.com/users/14193710/julian-lazaras"}, "is_accepted": false, "score": 0, "last_activity_date": 1598842112, "creation_date": 1598842112, "answer_id": 63664126, "question_id": 49552876, "link": "https://stackoverflow.com/questions/49552876/how-do-i-create-a-generic-struct-that-can-be-serialized-with-serde-and-retain-ty/63664126#63664126", "title": "How do I create a generic struct that can be serialized with Serde and retain type information?", "body": "<p>the best way of implementing such a think would be to restrict the type of V, then use the structs name as a means of identifying the type+string for module maybe.</p>\n<p>Example</p>\n<pre><code>pub struct Message&lt;V: Serialize + Deserialize&gt; {\n     key: keytype,\n     value: V,\n     crate_path: String\n}\n</code></pre>\n<p>then use something like sha to generate a hash for the struct name, Deserialize to check the struct name.</p>\n"}], "owner": {"reputation": 115, "user_id": 1949955, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9Y6hf.jpg?s=128&g=1", "display_name": "drpytho", "link": "https://stackoverflow.com/users/1949955/drpytho"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1283, "favorite_count": 0, "accepted_answer_id": 49564534, "answer_count": 2, "score": 3, "last_activity_date": 1598842112, "creation_date": 1522316820, "last_edit_date": 1522355495, "question_id": 49552876, "link": "https://stackoverflow.com/questions/49552876/how-do-i-create-a-generic-struct-that-can-be-serialized-with-serde-and-retain-ty", "title": "How do I create a generic struct that can be serialized with Serde and retain type information?", "body": "<p>I want to use Serde to serialize a data structure that is generic. </p>\n\n<p>The users of my library should be able to provide their own structure that implements <code>Serialize</code> and <code>Deserialize</code>. I should be able to get back the original type information for the value that they serialized the data with. </p>\n\n<p>How would I go about doing this?</p>\n\n<p>I have tried something like this:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\nstruct Message&lt;V&gt; {\n    key: Key,\n    value: V,\n}\n</code></pre>\n\n<p>I want to get back the type of <code>V</code> after I deserialize the data.</p>\n\n<p>Is this the way to do it or am I way off track?</p>\n\n<p>I want the user to be able to extend the possible values/types. I want the behavior of enums, but flexibility for the user to add their own structs as possible candidates. Similar to <a href=\"https://github.com/jaysonsantos/bmemcached-rs/blob/ea627ee3456f73d39c7097b1f1647039bc74f27f/src/protocol.rs\" rel=\"nofollow noreferrer\">this code</a> but they all need unique <em>ids</em>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1522301259, "post_id": 49548318, "comment_id": 86104406, "body": "You&#39;d think they&#39;d have a <code>windows_mut</code> function like <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.chunks_mut\" rel=\"nofollow noreferrer\"><code>chunks_mut</code></a> over <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.windows\" rel=\"nofollow noreferrer\">windows</a>, which would handle this quite handily, but alas."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 2, "creation_date": 1522301368, "post_id": 49548318, "comment_id": 86104454, "body": "@BHustus: They <i>can&#39;t</i>.  Iterators can&#39;t require that you drop an item before generating the next one.  Mutable references to single items is fine because you can only ever get <i>one</i> to each element."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 1, "creation_date": 1522301424, "post_id": 49548318, "comment_id": 86104475, "body": "On a more constructive note, rather than <code>if i == 0 { continue }</code>, it would be far more idiomatic to simply start at <code>1</code>: <code>for i in 1..vector.len()</code>, unless there&#39;s more operation necessary in that <code>if</code> block. This goes for the original example provided in the question as well."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1522301527, "post_id": 49548318, "comment_id": 86104515, "body": "@BHustus: Good point.  I usually translate examples like that as exactly as possible to keep a minimal number of changes... but, yeah, that case is hopefully obvious enough."}, {"owner": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1522301635, "post_id": 49548318, "comment_id": 86104559, "body": "Well, that&#39;s why I specified that it goes for the original example as well. I get the whole &quot;keep the example&quot; issue. In such cases I usually add the modification as a side note at the bottom of the actual answer."}, {"owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "edited": false, "score": 0, "creation_date": 1522303871, "post_id": 49548318, "comment_id": 86105427, "body": "Thanks, this is very helpful. I left wondering how this fits into the lifetime rules. My presumption (probably wrong) is that <code>vector[i]</code> is borrowing vector immutably and <code>vector[i - 1] +=</code> has to borrow the vector mutably at the same time so I&#39;m not sure why that is ok to do. Or does the immutable borrow end as soon as a immutable reference to the inner i32 is returned?"}, {"owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "edited": false, "score": 0, "creation_date": 1522304930, "post_id": 49548318, "comment_id": 86105894, "body": "If I try to write this out without the syntactic sugar, I get the borrowing error: <a href=\"https://play.rust-lang.org/?gist=82aaa1e6b6ae3250e5756617dfef17a5&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. Is there some compiler magic happening to allow this?"}, {"owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "edited": false, "score": 0, "creation_date": 1522305120, "post_id": 49548318, "comment_id": 86105987, "body": "Actually maybe I wrote it wrong. This works: <a href=\"https://play.rust-lang.org/?gist=2841197f9a6edc76b3f8de356c12c959&amp;version=stable\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. I guess by dereferencing the reference, the borrow ends and the rules are satisfied."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "edited": false, "score": 0, "creation_date": 1522327135, "post_id": 49548318, "comment_id": 86120005, "body": "@MattHarrison: As you appear to have realised: indexing does borrow, but it only borrows for as long as it takes to read/write the value being accessed.  An iterator borrows for as long as iteration goes on."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "reply_to_user": {"reputation": 2816, "user_id": 5402030, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/pT1Sp.png?s=128&g=1", "display_name": "MutantOctopus", "link": "https://stackoverflow.com/users/5402030/mutantoctopus"}, "edited": false, "score": 0, "creation_date": 1522337805, "post_id": 49548318, "comment_id": 86127922, "body": "@BHustus Supporting this kind of windowed iterator is the motivating example in <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">RFC-1598 generic_associated_type</a>"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1522336897, "last_edit_date": 1522336897, "creation_date": 1522299348, "answer_id": 49548318, "question_id": 49547861, "link": "https://stackoverflow.com/questions/49547861/how-to-mutate-a-vectors-elements-while-iterating-through-it/49548318#49548318", "title": "How to mutate a vector&#39;s elements while iterating through it?", "body": "<p>Use indexing.</p>\n\n<pre><code>fn main() {\n    let mut vector = vec![1, 2, 3, 4];\n\n    for i in 1..vector.len() {\n        vector[i - 1] += vector[i];\n    }\n\n    println!(\"{:?}\", vector);\n}\n</code></pre>\n"}], "owner": {"reputation": 12494, "user_id": 1402929, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/IORgE.jpg?s=128&g=1", "display_name": "Matt Harrison", "link": "https://stackoverflow.com/users/1402929/matt-harrison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2093, "favorite_count": 0, "closed_date": 1522337114, "accepted_answer_id": 49548318, "answer_count": 1, "score": 3, "last_activity_date": 1522336897, "creation_date": 1522296368, "last_edit_date": 1522336880, "question_id": 49547861, "link": "https://stackoverflow.com/questions/49547861/how-to-mutate-a-vectors-elements-while-iterating-through-it", "closed_reason": "Duplicate", "title": "How to mutate a vector&#39;s elements while iterating through it?", "body": "<p>I'm iterating through a vector and I want to change one of the elements.</p>\n\n<pre><code>fn main() {\n    let mut vector = vec![1, 2, 3, 4];\n\n    for (i, el) in vector.iter().enumerate() {\n        if i == 0 {\n            continue;\n        }\n        vector[i - 1] += el\n    }\n}\n</code></pre>\n\n<p>This gives me the compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `vector` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:8:9\n  |\n4 |     for (i, el) in vector.iter().enumerate() {\n  |                    ------ immutable borrow occurs here\n...\n8 |         vector[i - 1] += el\n  |         ^^^^^^ mutable borrow occurs here\n9 |     }\n  |     - immutable borrow ends here\n</code></pre>\n\n<p>I understand why this error occurs. I am borrowing vector as immutable for the lifetime of the enumeration scope and then trying to mutate the interior inside that scope thus breaking the borrowing rules. I just don't understand how to do this properly. I guess I need to borrow mutably for the enumeration?</p>\n\n<p>I've tried various combinations of <code>mut</code>, <code>&amp;mut</code> and I run into different compiler errors with each. I know I could make this a <code>Vec&lt;Cell&lt;i32&gt;&gt;</code> and mutate the contents that way, but this seems overkill for such a simple example.</p>\n"}]