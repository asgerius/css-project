[{"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565210281, "post_id": 57401903, "comment_id": 101285541, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/57401903/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565210457, "post_id": 57401903, "comment_id": 101285597, "body": "Attempting to guess at filling in the rest of the code yields the errors <code>cannot find type `Page` in this scope</code> and <code>this function takes 2 parameters but 1 parameter was supplied</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565210616, "post_id": 57401903, "comment_id": 101285658, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/31233938/155423\">Converting from Option&lt;String&gt; to Option&lt;&amp;str&gt;</a>; <a href=\"https://stackoverflow.com/q/22282117/155423\">How do I borrow a reference to what is inside an Option&lt;T&gt;?</a>; <a href=\"https://stackoverflow.com/q/44163624/155423\">Why does Option&lt;String&gt;.as_ref() not deref to Option&lt;&amp;str&gt;?</a>; If not, please <b><a href=\"https://stackoverflow.com/posts/57401903/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565210987, "post_id": 57401903, "comment_id": 101285788, "body": "The duplicates applied to your question: <code>let query = after.as_ref().map_or(vec![], |s| vec![(&quot;after&quot;, s.as_str())]);</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565211144, "post_id": 57401903, "comment_id": 101285833, "body": "The &quot;what&#39;s different&quot; is <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2005-match-ergonomics.md\" rel=\"nofollow noreferrer\">match ergonomics</a>. This is discussed in some duplicate answers, but see also: <a href=\"https://stackoverflow.com/q/55625001/155423\">Why does pattern matching on &amp;Option&lt;T&gt; yield something of type Some(&amp;T)?</a>; <a href=\"https://stackoverflow.com/q/43370054/155423\">Is there any difference between matching on a reference to a pattern or a dereferenced value?</a>; <a href=\"https://stackoverflow.com/q/55130932/155423\">How can the ref keyword be avoided when pattern matching in a function taking &amp;self or &amp;mut self?</a>."}], "owner": {"reputation": 1863, "user_id": 564606, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ff8d7e16c3801f7459f88b2c64acc9b1?s=128&d=identicon&r=PG", "display_name": "ciferkey", "link": "https://stackoverflow.com/users/564606/ciferkey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "closed_date": 1565211008, "answer_count": 0, "score": 0, "last_activity_date": 1565211236, "creation_date": 1565209766, "last_edit_date": 1565211236, "question_id": 57401903, "link": "https://stackoverflow.com/questions/57401903/what-is-it-about-pattern-matching-that-changes-the-lifetime-of-a-optionstring", "closed_reason": "Duplicate", "title": "What is it about pattern matching that changes the lifetime of a Option&lt;String&gt; and how can it be achieved without pattern matching?", "body": "<p>I'm using <a href=\"https://github.com/spietika/restson-rust\" rel=\"nofollow noreferrer\">restson</a> to make REST calls.</p>\n\n<p>Reston allows you to make a <code>Vec</code> of query params to pass to the REST call. This is the example they provide in their documentation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let query = vec![(\"a\",\"2\"), (\"b\",\"abcd\")];\nlet data: HttpBinAnything = client.get_with(1234, &amp;query).unwrap();\n</code></pre>\n\n<p>In my case I need to pass a parameter to deal with pagination:</p>\n\n<ul>\n<li>On the first request no parameter needs to be supplied.</li>\n<li>The response body contains an \"after\" field</li>\n<li>Requests to get the next page need to supply the after field  as a query parameter.</li>\n</ul>\n\n<p>If I have a method like this it compiles:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn fetch_page(client: &amp;mut RestClient, after: Option&lt;String&gt;) -&gt; Result&lt;Page, Error&gt; {\n   match after {\n       Some(s) =&gt; {\n           let query = vec![(\"after\", s.as_str())];\n           client.get_with(&amp;query)\n       }\n       None =&gt; {\n           let query = vec![];\n           client.get_with(&amp;query)\n       }\n   }\n}\n</code></pre>\n\n<p>If I try to use anything other than pattern matching it fails. For example the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn fetch_page(client: &amp;mut RestClient, after: Option&lt;String&gt;) -&gt; Result&lt;Page, Error&gt; {\n    let query = after.map_or(vec![], |s| vec![(\"after\", s.as_str())] );\n    client.get_with(&amp;query)\n}\n</code></pre>\n\n<p>Results in the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing function parameter `s`\n  --&gt; src/reddit_scrape.rs:53:42\n   |\n53 |     let query = after.map_or(vec![], |s| vec![(\"after\", s.as_str())] );\n   |                                          ^^^^^^^^^^^^^^^-^^^^^^^^^^^\n   |                                          |              |\n   |                                          |              `s` is borrowed here\n   |                                          returns a value referencing data owned by the current function\n</code></pre>\n"}, {"tags": ["generics", "rust", "polymorphism", "trait-objects"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1565194408, "post_id": 57398118, "comment_id": 101278530, "body": "<code>&amp;dyn Trait</code> is a fat pointer with additional dynamic dispatch information. Your <code>some_foo</code> is just a regular reference (pointer). The size of the types sheds some light on this: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5a7516a3cc71108097577c9911b9a733\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1565194566, "post_id": 57398118, "comment_id": 101278607, "body": "hmm, but it wont let you explicitly cast to an<code>&amp;dyn FooTrait</code>, which means something is going on that I don&#39;t understand."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1565194878, "post_id": 57398118, "comment_id": 101278758, "body": "I guess you can&#39;t ever do this type of cast: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=612dd8226f3fadad857f0bd668b86ad8\" rel=\"nofollow noreferrer\">see this basic example</a>. The cast can only succeed if you have a <code>Sized</code> bound (remove <code>+?Sized</code>)."}, {"owner": {"reputation": 873, "user_id": 929037, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07a2dff20933d7adaf7df4f2c32d1cdd?s=128&d=identicon&r=PG", "display_name": "w1th0utnam3", "link": "https://stackoverflow.com/users/929037/w1th0utnam3"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1565195251, "post_id": 57398118, "comment_id": 101278946, "body": "Well, whether <code>some_foo</code> is a fat or thin pointer depends on whether the actual argument <code>T</code> is sized or not. See: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=abc2b06935993e42ca44447109519145\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>  I wonder whether there is actually a reason why this cast cannot be possible."}, {"owner": {"reputation": 873, "user_id": 929037, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07a2dff20933d7adaf7df4f2c32d1cdd?s=128&d=identicon&r=PG", "display_name": "w1th0utnam3", "link": "https://stackoverflow.com/users/929037/w1th0utnam3"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 1, "creation_date": 1565195397, "post_id": 57398118, "comment_id": 101279036, "body": "Because technically, at the moment I think that <code>some_foo</code> has enough information to create a trait object from it. If it&#39;s unsized, it&#39;s a fat pointer and already contains the required vtable pointer. If it&#39;s sized, the cast can calculate the vtable pointer because it nows the concrete type during monomorphization, right?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1565195882, "post_id": 57398118, "comment_id": 101279298, "body": "Can&#39;t write an answer now, but consider <code>impl FooTrait for [i32] {...}</code>. You still couldn&#39;t cast <code>&amp;[i32]</code> to <code>&amp;dyn FooTrait</code> because <code>&amp;[i32]</code> is already a fat pointer; there&#39;s no place to put the vtable. (You&#39;d need &quot;obese pointers&quot; for that.)"}, {"owner": {"reputation": 873, "user_id": 929037, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07a2dff20933d7adaf7df4f2c32d1cdd?s=128&d=identicon&r=PG", "display_name": "w1th0utnam3", "link": "https://stackoverflow.com/users/929037/w1th0utnam3"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1565196324, "post_id": 57398118, "comment_id": 101279509, "body": "@trentcl Interesting. So this is not supported because otherwise you might get arbitrarily large pointers when you have &quot;deeper nesting&quot; of these dynamically sized types?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1565202084, "post_id": 57398118, "comment_id": 101282039, "body": "For a small but insightful comment, see the second condition of the second rule of this <a href=\"http://smallcultfollowing.com/babysteps/blog/2014/01/05/dst-take-5/#conversion-rules\" rel=\"nofollow noreferrer\">blog post</a>."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 13, "last_activity_date": 1567787893, "last_edit_date": 1567787893, "creation_date": 1565360515, "answer_id": 57432042, "question_id": 57398118, "link": "https://stackoverflow.com/questions/57398118/why-cant-sized-trait-be-cast-to-dyn-trait/57432042#57432042", "title": "Why can&#39;t `&amp;(?Sized + Trait)` be cast to `&amp;dyn Trait`?", "body": "<p>This problem can be reduced to the following simple example (thanks to <a href=\"https://stackoverflow.com/users/3022310/turbulencetoo\">turbulencetoo</a>):</p>\n\n<pre><code>trait Foo {}\n\nfn make_dyn&lt;T: Foo + ?Sized&gt;(arg: &amp;T) -&gt; &amp;dyn Foo {\n    arg\n}\n</code></pre>\n\n<p>At first glance, it really looks like this should compile, as you observed:</p>\n\n<ul>\n<li>If <code>T</code> is <code>Sized</code>, the compiler knows statically what vtable it should use to create the trait object;</li>\n<li>If <code>T</code> is <code>dyn Foo</code>, the vtable pointer is part of the reference and can just be copied to the output.</li>\n</ul>\n\n<p>But there's a third possibility that throws a wrench in the works:</p>\n\n<ul>\n<li>If <code>T</code> is some unsized type that is <em>not</em> <code>dyn Foo</code>, even though the trait is object safe, there is no vtable for <code>impl Foo for T</code>.</li>\n</ul>\n\n<p>The reason there is no vtable is because the vtable for a concrete type assumes that <code>self</code> pointers are thin pointers. When you call a method on a <code>dyn Trait</code> object, the vtable pointer is used to look up a function pointer, and only the data pointer is passed to the function.</p>\n\n<p>However, suppose you implement a(n object-safe) trait for an unsized type:</p>\n\n<pre><code>trait Bar {}\ntrait Foo {\n    fn foo(&amp;self);\n}\n\nimpl Foo for dyn Bar {\n    fn foo(&amp;self) {/* self is a fat pointer here */}\n}\n</code></pre>\n\n<p>If there <em>were</em> a vtable for this <code>impl</code>, it would have to accept <em>fat</em> pointers, because the <code>impl</code> may use methods of <code>Bar</code> which are dynamically dispatched on <code>self</code>.</p>\n\n<p>This causes two problems:</p>\n\n<ul>\n<li>There's nowhere to store the <code>Bar</code> vtable pointer in a <code>&amp;dyn Foo</code> object, which is only two pointers in size (the data pointer and the <code>Foo</code> vtable pointer).</li>\n<li>Even if you had both pointers, you can't mix and match \"fat pointer\" vtables with \"thin pointer\" vtables, because they must be called in different ways.</li>\n</ul>\n\n<p>Therefore, even though <code>dyn Bar</code> implements <code>Foo</code>, it is not possible to turn a <code>&amp;dyn Bar</code> into a <code>&amp;dyn Foo</code>.</p>\n\n<p>Although slices (the other kind of unsized type) are not implemented using vtables, pointers to them are still fat, so the same limitation applies to <code>impl Foo for [i32]</code>.</p>\n\n<p>In some cases, you can use <a href=\"https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\" rel=\"noreferrer\"><code>CoerceUnsized</code></a> (only on nightly as of Rust 1.36) to express bounds like \"must be coercible to <code>&amp;dyn FooTrait</code>\". Unfortunately, I don't see how to apply this in your case.</p>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/57754901/what-is-a-fat-pointer-in-rust\">What is a &quot;fat pointer&quot; in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/57817405/use-trait-object-to-pass-str-in-rust\">Use trait object to pass str in rust</a> has a concrete example of a reference to an unsized type (<code>str</code>) that cannot be coerced to a reference to a trait object.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "is_accepted": false, "score": 3, "last_activity_date": 1588844973, "creation_date": 1588844973, "answer_id": 61654763, "question_id": 57398118, "link": "https://stackoverflow.com/questions/57398118/why-cant-sized-trait-be-cast-to-dyn-trait/61654763#61654763", "title": "Why can&#39;t `&amp;(?Sized + Trait)` be cast to `&amp;dyn Trait`?", "body": "<p>Not sure if that solves your concrete problem, but I did solve mine with the following trick:</p>\n\n<p>I added the following method to <code>FooTrait</code>:</p>\n\n<pre><code>fn as_dyn(&amp;self) -&gt; &amp;dyn FooTrait;\n</code></pre>\n\n<p>A default impl can not be provided (because it requires that <code>Self</code> be <code>Sized</code>, but constraining <code>FooTrait</code> to be <code>Sized</code> forbids creating trait objects for it...).</p>\n\n<p>However, for all <code>Sized</code> implementations, it is trivially implemented as</p>\n\n<pre><code>fn as_dyn(&amp;self) -&gt; &amp;dyn FooTrait { self }\n</code></pre>\n\n<p>So basically it constrains all implementations of <code>FooTrait</code> to be sized, except for <code>dyn FooTrait</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9e7597305693a3dbae05dcfaaeda8b26\" rel=\"nofollow noreferrer\">Try it on the playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 1163, "user_id": 5335565, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-coM64Z-2njg/AAAAAAAAAAI/AAAAAAAAADs/r4GxkKH6FII/photo.jpg?sz=128", "display_name": "Izana", "link": "https://stackoverflow.com/users/5335565/izana"}, "is_accepted": false, "score": 1, "last_activity_date": 1591490042, "last_edit_date": 1591490042, "creation_date": 1591489184, "answer_id": 62239505, "question_id": 57398118, "link": "https://stackoverflow.com/questions/57398118/why-cant-sized-trait-be-cast-to-dyn-trait/62239505#62239505", "title": "Why can&#39;t `&amp;(?Sized + Trait)` be cast to `&amp;dyn Trait`?", "body": "<p>Referenced from this <a href=\"https://guihao-liang.github.io/2020/06/06/fat-pointer\" rel=\"nofollow noreferrer\">blog</a>, which explains the fat pointer really well.</p>\n\n<p>Thanks <a href=\"https://stackoverflow.com/users/3650362/trentcl\">trentcl</a> for simplifying the question to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Foo {}\n\nfn make_dyn&lt;T: Foo + ?Sized&gt;(arg: &amp;T) -&gt; &amp;dyn Foo {\n    arg\n}\n</code></pre>\n\n<p>This brings to how to cast between different <code>?Sized</code>?</p>\n\n<p>To answer this, let's first peek the implementation for Unsized type <code>Trait</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait Bar {\n    fn bar_method(&amp;self) {\n        println!(\"this is bar\");\n    }\n}\n\ntrait Foo: Bar {\n    fn foo_method(&amp;self) {\n        println!(\"this is foo\");\n    }\n}\n\nimpl Bar for u8 {}\nimpl Foo for u8 {}\n\nfn main() {\n    let x: u8 = 35;\n    let foo: &amp;dyn Foo = &amp;x;\n    // can I do\n    // let bar: &amp;dyn Bar = foo;\n}\n</code></pre>\n\n<p>So, can you do <code>let bar: &amp;dyn Bar = foo;</code>?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// below is all pseudo code\npub struct TraitObjectFoo {\n    data: *mut (),\n    vtable_ptr: &amp;VTableFoo,\n}\n\npub struct VTableFoo {\n    layout: Layout,\n    // destructor\n    drop_in_place: unsafe fn(*mut ()),\n    // methods shown in deterministic order\n    foo_method: fn(*mut ()),\n    bar_method: fn(*mut ()),\n}\n\n// fields contains Foo and Bar method addresses for u8 implementation\nstatic VTABLE_FOO_FOR_U8: VTableFoo = VTableFoo { ... };\n\n</code></pre>\n\n<p>From the pseudo code, we can know</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// let foo: &amp;dyn Foo = &amp;x;\nlet foo = TraitObjectFoo {&amp;x, &amp;VTABLE_FOO_FOR_U8};\n// let bar: &amp;dyn Bar = foo;\n// C++ syntax for contructor\nlet bar = TraitObjectBar(TraitObjectFoo {&amp;x, &amp;VTABLE_FOO_FOR_U8});\n</code></pre>\n\n<p>The <code>bar</code> type is <code>TraitObjectBar</code>, which is not the type <code>TraitObjectFoo</code>. That is to say, you cannot assign a struct of one type to another different type (in rust, in C++ you can use reinterpret_cast).</p>\n\n<p>What you can do it to have <strong>another level of indirection</strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Bar for dyn Foo {\n...\n}\n\nlet bar: &amp;dyn Bar = &amp;foo;\n// TraitObjectFoo {&amp;foo, &amp;VTABLE_FOO_FOR_DYN_FOO}\n</code></pre>\n\n<p>The same thing applies to Slice.</p>\n\n<p>The workaround for casting different <code>Unsized</code> can be done by this <a href=\"https://users.rust-lang.org/t/why-cant-i-do-dynamic-cast-in-rust-as-i-do-in-c/42793/10?u=jarvi-izana\" rel=\"nofollow noreferrer\">trick</a>:</p>\n\n<pre><code>// blanket impl for all sized types, this allows for a very large majority of use-cases\nimpl&lt;T: Bar&gt; AsBar for T {\n    fn as_bar(&amp;self) -&gt; &amp;dyn Bar { self }\n}\n\n// a helper-trait to do the conversion\ntrait AsBar {\n    fn as_bar(&amp;self) -&gt; &amp;dyn Bar;\n}\n\n// note that Bar requires `AsBar`, this is what allows you to call `as_bar`\n// from a trait object of something that requires `Bar` as a super-trait\ntrait Bar: AsBar {\n    fn bar_method(&amp;self) {\n        println!(\"this is bar\");\n    }\n}\n\n// no change here\ntrait Foo: Bar {\n    fn foo_method(&amp;self) {\n        println!(\"this is foo\");\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 873, "user_id": 929037, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/07a2dff20933d7adaf7df4f2c32d1cdd?s=128&d=identicon&r=PG", "display_name": "w1th0utnam3", "link": "https://stackoverflow.com/users/929037/w1th0utnam3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1245, "favorite_count": 3, "accepted_answer_id": 57432042, "answer_count": 3, "score": 13, "last_activity_date": 1591490042, "creation_date": 1565192834, "last_edit_date": 1588858412, "question_id": 57398118, "link": "https://stackoverflow.com/questions/57398118/why-cant-sized-trait-be-cast-to-dyn-trait", "title": "Why can&#39;t `&amp;(?Sized + Trait)` be cast to `&amp;dyn Trait`?", "body": "<p>In the code below it is not possible to obtain a reference to a trait object from a reference to a dynamically-sized type implementing the same trait. Why is this the case? What exactly is the difference between <code>&amp;dyn Trait</code> and <code>&amp;(?Sized + Trait)</code> if I can use both to call trait methods?</p>\n\n<p>A type implementing <code>FooTraitContainerTrait</code> might e.g. have <code>type Contained = dyn FooTrait</code> or <code>type Contained = T</code> where <code>T</code> is a concrete type that implements <code>FooTrait</code>. In both cases it's trivial to obtain a <code>&amp;dyn FooTrait</code>. I can't think of another case where this wouldn't work. Why isn't this possible in the generic case of <code>FooTraitContainerTrait</code>?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait FooTrait {\n    fn foo(&amp;self) -&gt; f64;\n}\n\n///\n\ntrait FooTraitContainerTrait {\n    type Contained: ?Sized + FooTrait;\n    fn get_ref(&amp;self) -&gt; &amp;Self::Contained;\n}\n\n///\n\nfn foo_dyn(dyn_some_foo: &amp;dyn FooTrait) -&gt; f64 {\n    dyn_some_foo.foo()\n}\n\nfn foo_generic&lt;T: ?Sized + FooTrait&gt;(some_foo: &amp;T) -&gt; f64 {\n    some_foo.foo()\n}\n\n///\n\nfn foo_on_container&lt;C: FooTraitContainerTrait&gt;(containing_a_foo: &amp;C) -&gt; f64 {\n    let some_foo = containing_a_foo.get_ref();\n    // Following line doesn't work:\n    //foo_dyn(some_foo)\n    // Following line works:\n    //some_foo.foo()\n    // As does this:\n    foo_generic(some_foo)\n}\n</code></pre>\n\n<p>Uncommenting the <code>foo_dyn(some_foo)</code> line results in the compiler error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `&lt;C as FooTraitContainerTrait&gt;::Contained` cannot be known at compilation time\n  --&gt; src/main.rs:27:22\n   |\n27 |     foo_dyn(contained)\n   |             ^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `&lt;C as FooTraitContainerTrait&gt;::Contained`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = help: consider adding a `where &lt;C as FooTraitContainerTrait&gt;::Contained: std::marker::Sized` bound\n   = note: required for the cast to the object type `dyn FooTrait`\n</code></pre>\n"}, {"tags": ["windows", "rust", "clion", "windows-subsystem-for-linux"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565183640, "post_id": 57394652, "comment_id": 101272233, "body": "There is value in being precise here. By &quot;I don&#39;t care about cross-compilation&quot; do you mean &quot;I don&#39;t care where it&#39;s <i>compiled</i>, as long as it <i>runs</i> under WSL&quot;, or &quot;I don&#39;t care where it <i>runs</i>, as long as it&#39;s <i>compiled</i> under WSL&quot;, or &quot;I don&#39;t care if it runs anywhere else, as long as it <i>is compiled and runs</i> under WSL&quot;? I&#39;m guessing the last thing."}, {"owner": {"reputation": 846, "user_id": 4284268, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/30b644609ddad0c9648857d5c04cdb3b?s=128&d=identicon&r=PG&f=1", "display_name": "usbpc102", "link": "https://stackoverflow.com/users/4284268/usbpc102"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565184010, "post_id": 57394652, "comment_id": 101272476, "body": "@trentcl The first one actually. &quot;I don&#39;t care where it&#39;s compiled, as long as it runs under WSL&quot; but with the extra qualifier that I want to be able to just click &quot;Run&quot; in CLion and it should compile &quot;somewhere&quot; and run in WSL. Since I also installed required C libraries in WSL it seems to me the best way would be the &quot;compile and run in WSL&quot; way."}], "owner": {"reputation": 846, "user_id": 4284268, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/30b644609ddad0c9648857d5c04cdb3b?s=128&d=identicon&r=PG&f=1", "display_name": "usbpc102", "link": "https://stackoverflow.com/users/4284268/usbpc102"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 421, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565182617, "creation_date": 1565181350, "last_edit_date": 1565182617, "question_id": 57394652, "link": "https://stackoverflow.com/questions/57394652/how-can-i-use-clion-with-the-windows-subsystem-for-linux-to-develop-a-linux-rust", "title": "How can I use CLion with the Windows Subsystem for Linux to develop a Linux Rust application?", "body": "<p>I have a project written in the Rust language in CLion that I want to be compiled in  the Windows Subsystem for Linux and then run there. I'm not sure at all that this is possible.</p>\n\n<p>The poster of <a href=\"https://stackoverflow.com/questions/53723438/how-to-enable-rust-debugging-when-using-wsl-toolchain-in-clion\">this question</a> apparently has it working, but <a href=\"https://github.com/intellij-rust/intellij-rust/issues/1171\" rel=\"nofollow noreferrer\">this intellij-rust issue</a> says it isn't possible. Someone in the comments <a href=\"https://github.com/philippkeller/rustup-toolchain-proxy\" rel=\"nofollow noreferrer\">wrote a workaround</a> that doesn't work for me.</p>\n\n<p>How can I setup CLion to compile Rust code in the Windows Subsystem for Linux and run it there when I click on run in CLion?</p>\n\n<p>I don't care about cross-compilation; I just want to be able to continue developing my application. In the end, I'll probably compile it in a clean Docker container on the machine where it will be executed.</p>\n"}, {"tags": ["python", "numpy", "rust", "anaconda", "pyo3"], "comments": [{"owner": {"reputation": 7646, "user_id": 809384, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2e88f031bbd7f1ece1c87da1352addd5?s=128&d=identicon&r=PG", "display_name": "Andr&#233; Puel", "link": "https://stackoverflow.com/users/809384/andr%c3%a9-puel"}, "edited": false, "score": 0, "creation_date": 1594532710, "post_id": 57393503, "comment_id": 111155494, "body": "Any luck with that?"}], "owner": {"reputation": 11, "user_id": 7575761, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b14961f58145ac8f1e16bf76e50fb00?s=128&d=identicon&r=PG&f=1", "display_name": "eypandabear", "link": "https://stackoverflow.com/users/7575761/eypandabear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 118, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565177687, "creation_date": 1565177687, "question_id": 57393503, "link": "https://stackoverflow.com/questions/57393503/problem-with-ctypes-extension-when-loading-numpy-from-rust-with-pyo3", "title": "Problem with _ctypes extension when loading Numpy from Rust with PyO3", "body": "<p>I am trying to use numpy from Rust using pyO3, all inside a conda environment.\nTo get pyO3 to link, I installed the GCC toolchain using conda as well.</p>\n\n<p>I can do simple stuff now like displaying <code>sys.path</code>. However, when I try to import numpy, like so:</p>\n\n<pre><code>use pyo3::prelude::*;\nuse pyo3::types::IntoPyDict;\n\nfn main() -&gt; PyResult&lt;()&gt; {\n    let gil = Python::acquire_gil();\n    let py = gil.python();\n\n    let r = py.import(\"numpy\");\n    match r {\n        Ok(_) =&gt; println!(\"OK\"),\n        Err(e) =&gt; e.print(py),\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>the following happens:</p>\n\n<pre><code>Traceback (most recent call last):\n  File \"&lt;HOME&gt;/anaconda3/envs/pyrust/lib/python3.7/site-packages/numpy/__init__.py\", line 140, in &lt;module&gt;\n    from . import _distributor_init\n  File \"&lt;HOME&gt;/anaconda3/envs/pyrust/lib/python3.7/site-packages/numpy/_distributor_init.py\", line 33, in &lt;module&gt;\n    with RTLD_for_MKL():\n  File \"&lt;HOME&gt;/anaconda3/envs/pyrust/lib/python3.7/site-packages/numpy/_distributor_init.py\", line 18, in __enter__\n    import ctypes\n  File \"&lt;HOME&gt;/anaconda3/envs/pyrust/lib/python3.7/ctypes/__init__.py\", line 7, in &lt;module&gt;\n    from _ctypes import Union, Structure, Array\nImportError: &lt;HOME&gt;/anaconda3/envs/pyrust/lib/python3.7/lib-dynload/_ctypes.cpython-37m-x86_64-linux-gnu.so: undefined symbol: PyUnicode_FromFormat\n</code></pre>\n\n<p>Interestingly, when I just type <code>python -c \"import numpy\"</code>, the problem does not occur.</p>\n\n<p>I use <code>RUSTFLAGS=\"-C linker=$CC\" cargo +nightly run</code> to build and run the code, if that helps.</p>\n"}, {"tags": ["rust", "closures", "immutability"], "comments": [{"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565172477, "post_id": 57391311, "comment_id": 101265798, "body": "@Stargateur If I simply remove the <code>move</code> I get an compile-time error: <code>may outlive borrowed value `router`</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565173269, "post_id": 57391311, "comment_id": 101266238, "body": "<a href=\"https://play.integer32.com/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=e9b8306053254f83f5e5aedced90fb83\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a> ?"}, {"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565173931, "post_id": 57391311, "comment_id": 101266600, "body": "Thanks a lot, this is my answer. Only now I don&#39;t understand: why does this work moving into the second closure and not into the first one ?"}], "owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 24, "favorite_count": 0, "closed_date": 1565175433, "answer_count": 0, "score": 1, "last_activity_date": 1565172297, "creation_date": 1565170614, "last_edit_date": 1565172297, "question_id": 57391311, "link": "https://stackoverflow.com/questions/57391311/passing-an-immutable-struct-to-several-closures", "closed_reason": "Duplicate", "title": "Passing an immutable struct to several closures", "body": "<p>I have a struct <code>Router</code> that, once built, never changes. I want to pass it by reference to several closures:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(trait_alias)]\nuse futures::future::{self,Future};\nuse hyper::{Body, Request,Method,Response};\nuse hyper::service::{service_fn,make_service_fn};\nuse hyper::server::conn::AddrStream;\n\n//\n\n#[cfg_attr(rustfmt, rustfmt_skip)]\npub trait RetFut = Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt;;\n\n#[derive(Debug, Clone)]\npub struct Route {\n    pub method: Method,\n}\n\n#[derive(Debug, Clone)]\npub struct Router {\n    routes: Vec&lt;Route&gt;,\n}\nimpl Router {\n    pub fn builder() -&gt; RouterBuilder {\n        RouterBuilder::new()\n    }\n\n    pub fn handle_req(&amp;self, req: Request&lt;Body&gt;) -&gt; impl RetFut {\n        match (req.method(), req.uri().path()) {\n            _ =&gt; future::ok(Response::new(Body::from(\"Hello world\"))),\n        }\n    }\n}\n\n#[derive(Debug, Default)]\npub struct RouterBuilder {\n    routes: Vec&lt;Route&gt;,\n}\nimpl RouterBuilder {\n    pub fn new() -&gt; Self {\n        RouterBuilder { routes: vec![] }\n    }\n\n    pub fn build(self) -&gt; Router {\n        Router {\n            routes: self.routes,\n        }\n    }\n}\n\n\n\nfn main() {\n    let addr = \"0.0.0.0:8080\".parse().unwrap();\n\n    let router: Router = Router::builder().build();\n\n    let make_svc = make_service_fn(move |_socket: &amp;AddrStream| {\n        let router_clone = router.clone();\n        service_fn(move |req: Request&lt;Body&gt;| {\n            router_clone.clone().handle_req(req)\n        })\n    });\n\n    let server = hyper::Server::bind(&amp;addr)\n        .serve(make_svc)\n        .map_err(|e| eprintln!(\"server error: {}\", e));\n\n    hyper::rt::run(server);\n}\n</code></pre>\n\n<p>Here I'm passing a clone of the Router for each closure to own, but it seems unnecessary.</p>\n\n<p>Instead, a reference to the Router that lives for the whole duration of the closures would probably be enough.</p>\n\n<p>How can I achieve that here ?</p>\n"}, {"tags": ["audio", "parallel-processing", "rust", "signal-processing", "channel"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565170144, "post_id": 57390968, "comment_id": 101264531, "body": "<a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.chunks_exact\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/primitive.slice.html#method.chunks_exa&zwnj;&#8203;ct</a> ? not clear what you want"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1565170168, "post_id": 57390968, "comment_id": 101264548, "body": "Since you mention parallelize and blocking calls: do you expect the &quot;iterators&quot; to be receiving data from another thread while you are pulling data from them, or is all this single-threaded?"}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1565170337, "post_id": 57390968, "comment_id": 101264631, "body": "I expect it would have to be multi-threaded, but it would be pretty cool if it could be single-threaded, assuming there is a way to peek/select at N buffers that are being populated by a hardware interrupt."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565170594, "post_id": 57390968, "comment_id": 101264776, "body": "@Stargateur I want to consolidate N channels in parallel by taking equal-sized chunks from N audio channels, map over those chunks and reduce them to a single value which gets sent off for processing elsewhere. Any concrete solution to that general problem will do. Extra bonus points if N does not need to be known at compile-time."}, {"owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "edited": false, "score": 0, "creation_date": 1565171132, "post_id": 57390968, "comment_id": 101265073, "body": "I&#39;ve now found this DSP crate, which might be more appropriate for what I&#39;m trying to do - haven&#39;t tried yet, though: <a href=\"http://rustaudio.github.io/dsp-chain/dsp/\" rel=\"nofollow noreferrer\">rustaudio.github.io/dsp-chain/dsp</a>"}, {"owner": {"reputation": 1, "user_id": 3666197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/79fc6c23061326c7e6a6f82a1663634b?s=128&d=identicon&r=PG", "display_name": "user3666197", "link": "https://stackoverflow.com/users/3666197/user3666197"}, "edited": false, "score": 0, "creation_date": 1565176568, "post_id": 57390968, "comment_id": 101268052, "body": "@PetrusTheron How about losing a bit performance, yet being able to both <b>avoid blocking</b> + <b>run concurrently</b> (a true-[PARALLEL] process-flow is not possible(or rather is an anti-pattern for cases)where asynchronous,potentially blocking inputs dis-coordinate otherwise potentially true-[PARALLEL] processes). A per-channel <i>parallel</i>, principally non-blocking loop, .poll()-only pre-testing,if anything arrived and just reading if ready-to-read input channel byte-by-byte, producing sum_squared fully <b><i>incrementally</i></b>,as the chunking logic/windowing now becomes controlled in my loop code."}, {"owner": {"reputation": 1, "user_id": 3666197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/79fc6c23061326c7e6a6f82a1663634b?s=128&d=identicon&r=PG", "display_name": "user3666197", "link": "https://stackoverflow.com/users/3666197/user3666197"}, "edited": false, "score": 0, "creation_date": 1565177023, "post_id": 57390968, "comment_id": 101268318, "body": "Not a Rust-specific approach, yet working this way in high-performance, low-latency, non-blocking multi-channel processing distributed-system designs, where each locally-processed channel has also a different priority and different payload-processing. Byte-sized reading may seem awfully on a first look, yet may help in deterministic sizing for compile-time, may help avoid both the blocking and other problems with skewed synchronicity / slippage / jitter / temporal LoS / {source|transport}-failure-detection / spurious events / flooding ingress."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565181765, "post_id": 57390968, "comment_id": 101270987, "body": "<i>especially since Rust complains about generic iterators not being sized</i> \u2014 <a href=\"https://stackoverflow.com/q/27957103/155423\">How do I create a heterogeneous collection of objects?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565184825, "post_id": 57390968, "comment_id": 101273067, "body": "<i>to another <code>core.async</code> channel</i> \u2014 are you aware that iterators are not the equivalent to this? You want <a href=\"https://rust-lang-nursery.github.io/futures-rs/\" rel=\"nofollow noreferrer\">futures</a> / streams."}], "answers": [{"tags": [], "owner": {"reputation": 193, "user_id": 5160246, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-Gtf-KeKKxJc/AAAAAAAAAAI/AAAAAAAABOA/YhZoCc76iG4/photo.jpg?sz=128", "display_name": "Danny Meyer", "link": "https://stackoverflow.com/users/5160246/danny-meyer"}, "is_accepted": false, "score": 0, "last_activity_date": 1587153428, "last_edit_date": 1587153428, "creation_date": 1587148647, "answer_id": 61278433, "question_id": 57390968, "link": "https://stackoverflow.com/questions/57390968/taking-equal-sized-chunks-from-multiple-audio-streams-in-rust-in-parallel/61278433#61278433", "title": "Taking equal-sized chunks from multiple audio streams in Rust in parallel", "body": "<p>Perhaps you can have another thread responsible for processing, rather than try to synchronize buffer reads? This seems like a nice opportunity to use <a href=\"https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html\" rel=\"nofollow noreferrer\">a mpsc channel</a>.</p>\n\n<p>Since you'll likely only be able to react to the callback from the audio scheduler being called, it's worry you'll spend a lot of time waiting/blocking for buffers to be ready if you try to for processing to happen in unison.  </p>\n"}], "owner": {"reputation": 24901, "user_id": 198927, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/eExki.jpg?s=128&g=1", "display_name": "Petrus Theron", "link": "https://stackoverflow.com/users/198927/petrus-theron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1587153428, "creation_date": 1565169432, "last_edit_date": 1565181464, "question_id": 57390968, "link": "https://stackoverflow.com/questions/57390968/taking-equal-sized-chunks-from-multiple-audio-streams-in-rust-in-parallel", "title": "Taking equal-sized chunks from multiple audio streams in Rust in parallel", "body": "<p>I'm trying to write elegant audio processing code in Rust that can consume chunks of audio from N channels (mono, stereo or surround, known at compile-time) in lock-step, reduce them and send the reduced value (or flat-mapped value) off to another stream for processing.</p>\n\n<p>In Clojure, the sequence abstractions and higher-order transducers make it easy to bite chunks off a stream and post a processed result to another <code>core.async</code> channel, but I'm struggling to get this working in Rust, especially since Rust complains about generic iterators not being sized at compile time.</p>\n\n<p>Specifically, how do I consume equal-sized chunks of audio from multiple channels in lock-step, to e.g. calculate the summed square of all values, and then do something with that value? I'm aware of crossbeam.</p>\n\n<p>Here is the pseudo-code I'm reaching for:</p>\n\n<pre><code>type AudioSample = f64;\nstruct Signal&lt;S, const N: usize&gt; {\n    sample_rate: f64,\n    channels: [Iterator&lt;S&gt;; N], // I know this won't compile\n}\n\nfn process_signal(signal: Signal&lt;AudioSample, 5&gt;) -&gt; f64 {\n    let mut sum_squared = 0.0;\n    let chunk_size = 0.1 * signal.sample_rate; // 100ms of audio from each channel\n    for channel in signal.channels {  // how to parallelize this blocking call?\n        let chunk = channel.take(chunk_size); // assuming this blocks until 100ms of signal is available\n        sum_squared += chunk.fold(|0., sample| sample * sample);\n    }\n\n    sum_squared\n}\n</code></pre>\n\n<p>Bonus points if you can show a pragmatic way to make the <strong><code>process_signal()</code></strong> function \"incremental\", i.e. asynchronous and parallelizable for N-channels.</p>\n"}, {"tags": ["rust", "serial-port", "buffer"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565165001, "post_id": 57389562, "comment_id": 101261779, "body": "It&#39;s not entirely clear to me what your problem is. Why do you need a &quot;dynamically-sized&quot; buffer? Why don&#39;t you just read 64 (arbitrary number) and push those bytes into a <code>Vec</code>?"}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565167493, "post_id": 57389562, "comment_id": 101263081, "body": "@hellow Because if the message length is above buffer size, it would end up being split into 2 or more messages and sent out individually. I imagine a more dynamic structure would handle things differently."}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565167573, "post_id": 57389562, "comment_id": 101263122, "body": "@hellow the message payload are commands that are sent out to a robot, so it is crucial to handle such cases."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1565179350, "post_id": 57389562, "comment_id": 101269633, "body": "Please edit your question to include all the crates and type definitions that are needed to compile the code. I suspect <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html#method.read_to_string\" rel=\"nofollow noreferrer\"><code>read_to_string</code></a> is what you&#39;re looking for but I don&#39;t know what <code>SystemPort</code> is. If possible, remove parts of the code that are irrelevant to your question. For instance, is <code>ws</code> really part of the problem, or could you just delete the <code>out</code> part and demonstrate the serial port problem alone?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1565180845, "post_id": 57389562, "comment_id": 101270457, "body": "<i>I&#39;m using a 128 bit u8 buffer</i> \u2014 no, you are using a 128 <b>byte</b> buffer. These two values are 8x different from each other."}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565359242, "post_id": 57389562, "comment_id": 101341398, "body": "@trentcl read_to_string is very helpful, but it introduced one problem. The read_result is always an error: Err(Custom { kind: TimedOut, error: StringError(&quot;Operation timed out&quot;) })"}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565359597, "post_id": 57389562, "comment_id": 101341621, "body": "@trentcl I&#39;ve updated the question to reflect using read_to_string."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565364870, "post_id": 57389562, "comment_id": 101344452, "body": "Is the use of WebSockets and threads <i>really necessary</i> to debug this problem, or could you reduce it to a small program that <i>only</i> tries to read from the serial port? If you can&#39;t eliminate <i>anything</i> extraneous, then in order to help us debug it, you need to provide the server code as well as the rest of whatever struct <code>on_open</code> is defined on and a <code>main</code> function or failing test that demonstrates the problem. The <a href=\"https://stackoverflow.com/questions/tagged/rust\">rust</a> <a href=\"https://stackoverflow.com/tags/rust/info\">tag wiki</a> has more suggestions for creating a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565369284, "post_id": 57389562, "comment_id": 101346309, "body": "@trentcl I&#39;ve just edited my question and added that. Please review the last code block in my question."}], "owner": {"reputation": 78, "user_id": 2625802, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ctpem.jpg?s=128&g=1", "display_name": "scorpion9979", "link": "https://stackoverflow.com/users/2625802/scorpion9979"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 469, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565382661, "creation_date": 1565164624, "last_edit_date": 1565382661, "question_id": 57389562, "link": "https://stackoverflow.com/questions/57389562/how-can-i-read-serial-port-data-into-a-dynamically-sized-buffer", "title": "How can I read serial port data into a dynamically-sized buffer?", "body": "<p>I'm using this method as part of a WebSocket client implementation to read data from a serial port and send it to the server. I had to wrap the port in <code>Arc&lt;Mutex&lt;_&gt;&gt;</code> because I needed to share it with other methods in order to write to the serial port upon receiving a WebSocket message.</p>\n\n<p>I'm using a 128 byte <code>u8</code> buffer to store the data; is there any way to make the buffer dynamically-sized? Wrapping in <code>Arc&lt;Mutex&lt;_&gt;&gt;</code> is a must.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate env_logger;\nextern crate ws;\nuse std::thread;\nuse ws::{listen, CloseCode, Handler, Handshake, Message, Result, Sender};\n\nfn on_open(&amp;mut self, _: Handshake) -&gt; Result&lt;(), ws::Error&gt; {\n    let port_handle: Arc&lt;Mutex&lt;SystemPort&gt;&gt; = self.port_handle.clone();\n    let out: Sender = self.out.clone();\n    thread::spawn(move || {\n        // read_from_serial(&amp;mut port);\n        let mut buffer = [0u8; 128];\n        let mut msg: String;\n        loop {\n            let read_result: Result&lt;usize, std::io::Error&gt;;\n            {\n                read_result = port_handle\n                    .lock()\n                    .expect(\"Access port handle\")\n                    .read(&amp;mut buffer);\n            }\n            if read_result.is_ok() {\n                msg = buffer_to_string(&amp;buffer);\n                buffer = [0u8; 128];\n                println!(\"Client sending message: '{}'\", msg);\n                out.send(msg).expect(\"Forward COM message to server\");\n            }\n        }\n    });\n    Ok(())\n}\n</code></pre>\n\n<p>Edit: This is the same code using read_to_string instead of read. The string length is completely dynamic, but the only problem is that read_result is always Err(Custom { kind: TimedOut, error: StringError(\"Operation timed out\") }) here. As a temporary fix, I decided to leave the Result unused and used msg.len() > 0 to test for a new serial message.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate env_logger;\nextern crate ws;\nuse std::thread;\nuse ws::{listen, CloseCode, Handler, Handshake, Message, Result, Sender};\n\nfn on_open(&amp;mut self, _: Handshake) -&gt; Result&lt;(), ws::Error&gt; {\n            let port_handle = self.port_handle.clone();\n            let out = self.out.clone();\n            thread::spawn(move || {\n                // read_from_serial(&amp;mut port);\n                let mut buffer = String::new();\n                let mut msg;\n                loop {\n                    {\n                        port_handle\n                            .lock()\n                            .expect(\"Access port handle\")\n                            .read_to_string(&amp;mut buffer);\n                        msg = format!(\"{}\", buffer);\n                    }\n                    if msg.len() &gt; 0 {\n                        buffer.clear();\n                        println!(\"Client sending message: '{}'\", msg);\n                        out.send(msg).expect(\"Forward COM message to server\");\n                    }\n                }\n            });\n            Ok(())\n        }\n</code></pre>\n\n<p>Edit: Ive included the following minimal example and removed all other unnecessary code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate env_logger;\nextern crate serial;\nuse serial::prelude::*;\nuse std::io::Read;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let client = thread::spawn(move || {\n        // setting up serial port\n        let mut port = serial::open(\"/dev/tnt0\").expect(\"Open serial port\");\n        let new_timeout = Duration::from_millis(1000);\n        port.set_timeout(new_timeout).expect(\"Set port timeout\");\n\n        // setting up buffer\n        let mut buffer = String::new();\n\n        // looping to continuously read serial data\n        loop {\n            // unused Result returned by read_to_string\n            // because when used, it always is an Err variant\n            // `Custom { kind: TimedOut, error: StringError(\"Operation timed out\") }`\n            port.read_to_string(&amp;mut buffer);\n            // using string length to test for valid data instead of using Ok/Err\n            if buffer.len() &gt; 0 {\n                println!(\"Client sending message: '{}'\", buffer);\n                // clearing buffer for next iteration\n                buffer.clear();\n            }\n        }\n    });\n\n    // Wait for the worker threads to finish what they are doing\n    let _ = client.join();\n    println!(\"All done.\")\n}\n</code></pre>\n"}, {"tags": ["visual-studio-code", "rust", "msbuild"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1565166733, "post_id": 57388153, "comment_id": 101262618, "body": "If msbuild is indeed installed, is it in your PATH?"}, {"owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1565166911, "post_id": 57388153, "comment_id": 101262717, "body": "@mcarton How to add msbuild to the PATH?, and doesn&#39;t &quot;GenerateFullPaths=true /t:build&quot; get msbuild placed in PATH"}, {"owner": {"reputation": 10545, "user_id": 238902, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/BRFti.png?s=128&g=1", "display_name": "Default", "link": "https://stackoverflow.com/users/238902/default"}, "edited": false, "score": 0, "creation_date": 1565194799, "post_id": 57388153, "comment_id": 101278725, "body": "can you check the tasks.json file and see which program is listed in <code>command</code>? if you want to create a rust task, shouldn&#39;t you run <code>rustc</code> or <code>cargo</code>? Can you perhaps paste the tasks.json file here?"}, {"owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "reply_to_user": {"reputation": 10545, "user_id": 238902, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/BRFti.png?s=128&g=1", "display_name": "Default", "link": "https://stackoverflow.com/users/238902/default"}, "edited": false, "score": 0, "creation_date": 1565226098, "post_id": 57388153, "comment_id": 101289343, "body": "@Default The extension used is Rust(rls) at <a href=\"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust\" rel=\"nofollow noreferrer\">marketplace.visualstudio.com/items?itemName=rust-lang.rust</a>"}, {"owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "reply_to_user": {"reputation": 10545, "user_id": 238902, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/BRFti.png?s=128&g=1", "display_name": "Default", "link": "https://stackoverflow.com/users/238902/default"}, "edited": false, "score": 0, "creation_date": 1565227032, "post_id": 57388153, "comment_id": 101289517, "body": "@Default At <a href=\"https://marketplace.visualstudio.com/items?itemName=rust-lang.rust\" rel=\"nofollow noreferrer\">marketplace.visualstudio.com/items?itemName=rust-lang.rust</a>, under quick start, how to install rustup, how to install the extension Rust(rls), and how to, create project, and add the project folder into VS Code is explained. Then, under Tasks, how to build project and run a project is explained. Why doesn&#39;t the VS Code work according to this description"}, {"owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "reply_to_user": {"reputation": 10545, "user_id": 238902, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/BRFti.png?s=128&g=1", "display_name": "Default", "link": "https://stackoverflow.com/users/238902/default"}, "edited": false, "score": 0, "creation_date": 1565227306, "post_id": 57388153, "comment_id": 101289552, "body": "@Default Here is part of tasks.jason &quot;&quot;label&quot;: &quot;build&quot;,             &quot;type&quot;: &quot;shell&quot;,             &quot;command&quot;: &quot;msbuild&quot;"}, {"owner": {"reputation": 10545, "user_id": 238902, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/BRFti.png?s=128&g=1", "display_name": "Default", "link": "https://stackoverflow.com/users/238902/default"}, "edited": false, "score": 0, "creation_date": 1565255755, "post_id": 57388153, "comment_id": 101298658, "body": "maybe <a href=\"https://stackoverflow.com/questions/46885292/how-to-launch-a-rust-application-from-visual-studio-code\">this thread</a> can help?"}], "owner": {"reputation": 1171, "user_id": 114754, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9bc0d070629e1c27f4d645e462358974?s=128&d=identicon&r=PG", "display_name": "Varuna", "link": "https://stackoverflow.com/users/114754/varuna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 668, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1565229157, "creation_date": 1565159168, "last_edit_date": 1565229157, "question_id": 57388153, "link": "https://stackoverflow.com/questions/57388153/when-running-a-rust-program-vs-code-says-msbuild-the-term-msbuild-is-not-r", "title": "When running a Rust program, VS Code says &quot;msbuild : The term &#39;msbuild&#39; is not recognized .... .&quot;?", "body": "<p>The C/C++ build tools have been installed. The program can be built, a tasks.jason file generated, But when the Rust program is run by way of Run Task, VS code says \"msbuild : The term 'msbuild' is not recognized as the name of a cmdlet,\n function, script file, or operable program.\" </p>\n\n<p>The whole message is below.</p>\n\n<p>\"msbuild : The term 'msbuild' is not recognized as the name of a cmdlet, \nfunction, script file, or operable program. Check the spelling of the name, or \nif a path was included, verify that the path is correct and try again.\nAt line:1 char:1\n+ msbuild /property:GenerateFullPaths=true /t:build \"</p>\n"}, {"tags": ["rust", "llvm", "rust-compiler-plugin"], "comments": [{"owner": {"reputation": 95, "user_id": 1510870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e95a16f622331110642ea65f3f3e848?s=128&d=identicon&r=PG", "display_name": "Mark M", "link": "https://stackoverflow.com/users/1510870/mark-m"}, "reply_to_user": {"reputation": 1283, "user_id": 3623566, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TbMBs.png?s=128&g=1", "display_name": "Lee", "link": "https://stackoverflow.com/users/3623566/lee"}, "edited": false, "score": 0, "creation_date": 1565166192, "post_id": 57387536, "comment_id": 101262363, "body": "@Lee without such injection, it&#39;s hard or ugly to implement GC, as I said in the post, this is to implement an algorithm much similar like  shadow stack"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565180639, "post_id": 57387536, "comment_id": 101270332, "body": "<i>I need to add <code>#[xxx]</code> everywhere</i> \u2014 Can&#39;t you add <code>#![xxx]</code> at each module, or maybe even just at the root module?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565185014, "post_id": 57387536, "comment_id": 101273186, "body": "You want the compiler to add code to <i>every</i> function call? Including ones outside the current crate and ones that might otherwise be inlined? What about closures, should they be included? That&#39;ll trash your performance in a lot of cases."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1565185066, "post_id": 57387536, "comment_id": 101273218, "body": "<code>-Z instrument-mcount</code> is implemented as an LLVM pass; you could look into writing a custom one."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1565189605, "post_id": 57387536, "comment_id": 101275997, "body": "One, not as great idea, but it can work pretty well if you know what you&#39;re doing, is to use a build script... Modify all files, prepend <code>#[xxx]</code> to every function declaration, and only then compile. That would not solve this if you depend on any crate though. Not sure what would be the point of this, though."}, {"owner": {"reputation": 95, "user_id": 1510870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e95a16f622331110642ea65f3f3e848?s=128&d=identicon&r=PG", "display_name": "Mark M", "link": "https://stackoverflow.com/users/1510870/mark-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565249385, "post_id": 57387536, "comment_id": 101295395, "body": "@Shepmaster indeed! that&#39;s a good workaround."}, {"owner": {"reputation": 95, "user_id": 1510870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e95a16f622331110642ea65f3f3e848?s=128&d=identicon&r=PG", "display_name": "Mark M", "link": "https://stackoverflow.com/users/1510870/mark-m"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565249613, "post_id": 57387536, "comment_id": 101295502, "body": "@trentcl thanks for clearification, I see there are [ GC specific intrinsics ](<a href=\"https://bcain-llvm.readthedocs.io/projects/llvm/en/latest/GarbageCollection/#gc-intrinsics\" rel=\"nofollow noreferrer\">bcain-llvm.readthedocs.io/projects/llvm/en/latest/&hellip;</a>)"}], "owner": {"reputation": 95, "user_id": 1510870, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e95a16f622331110642ea65f3f3e848?s=128&d=identicon&r=PG", "display_name": "Mark M", "link": "https://stackoverflow.com/users/1510870/mark-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 138, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565180591, "creation_date": 1565155919, "last_edit_date": 1565180591, "question_id": 57387536, "link": "https://stackoverflow.com/questions/57387536/is-there-any-way-to-inject-a-call-to-a-user-function-before-and-after-every-func", "title": "Is there any way to inject a call to a user function before and after every function call in Rust?", "body": "<p>How can we tell the Rust compiler to inline a special function before and after entering a function? </p>\n\n<p>I am trying to implement a method of tracing function calls and perhaps use this method to track the usage of borrowed references (pretty much like a simple <a href=\"https://llvm.org/docs/GarbageCollection.html#collector-algos\" rel=\"nofollow noreferrer\">shadow stack</a>). One alternative is to use macros but then I need to add <code>#[xxx]</code> everywhere.</p>\n\n<p>I saw that <a href=\"https://github.com/rust-lang/rust/pull/57220\" rel=\"nofollow noreferrer\">pull request 57220</a> added <code>-Z instrument-mcount</code>:</p>\n\n<p><strong>a.rs</strong></p>\n\n<pre><code>#[no_mangle]\nfn mcount() {\n    println!(\"enter function\");\n}\n\n#[no_mangle]\nfn foo(x: i32) -&gt; i32 {\n  x + 1\n}\n\nfn bar(y: i32) -&gt; i32 {\n    2 * foo(y)\n} \n\nfn main() {\n    println!(\"{}\",bar(10));\n}\n</code></pre>\n\n<p>Compiling it (<code>rustc a.rs --emit asm -Z instrument-mcount</code>) yields:</p>\n\n<pre><code>    .globl  _foo\n    .p2align    4, 0x90\n_foo:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $16, %rsp\n    movl    %edi, -4(%rbp)\n    callq   mcount\n        ^^^^^^^^^^^^^^\n    movl    -4(%rbp), %eax\n    incl    %eax\n    seto    %cl\n    testb   $1, %cl\n    movl    %eax, -8(%rbp)\n    jne LBB10_2\n    movl    -8(%rbp), %eax\n    addq    $16, %rsp\n    popq    %rbp\n    retq\nLBB10_2:\n    leaq    l___unnamed_2(%rip), %rdi\n    callq   __ZN4core9panicking5panic17had60f09514be3bbcE\n    .cfi_endproc\n\n    .globl  _mcount\n    .p2align    4, 0x90\n_mcount:\n^^^^^^^^\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $48, %rsp\n    callq   mcount\n    leaq    l___unnamed_3(%rip), %rax\n    leaq    l___unnamed_4(%rip), %rcx\n    xorl    %edx, %edx\n    movl    %edx, %r8d\n    leaq    -48(%rbp), %rdi\n    movq    %rax, %rsi\n    movl    $1, %edx\n    callq   __ZN4core3fmt9Arguments6new_v117hcdff95254bf53f10E\n    leaq    -48(%rbp), %rdi\n    callq   __ZN3std2io5stdio6_print17hec5f1d503bfcb744E\n    addq    $48, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .globl  _bar\n    .p2align    4, 0x90\n</code></pre>\n\n<p>The <code>mcount</code> function was translated to <code>_mcount</code>, but how can I call <em>my</em> <code>mcount</code> instead of some default implementation? </p>\n\n<p>It seems it is set <a href=\"https://github.com/rust-lang/rust/blob/31a5066e0b5f0e7e79b6cc04ae09166de0352c63/src/librustc_codegen_llvm/attributes.rs#L83\" rel=\"nofollow noreferrer\">here</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[inline]\npub fn set_instrument_function(cx: &amp;CodegenCx&lt;'ll, '_&gt;, llfn: &amp;'ll Value) {\n    if cx.sess().instrument_mcount() {\n        // Similar to `clang -pg` behavior. Handled by the\n        // `post-inline-ee-instrument` LLVM pass.\n        llvm::AddFunctionAttrStringValue(\n            llfn, llvm::AttributePlace::Function,\n            const_cstr!(\"instrument-function-entry-inlined\"), const_cstr!(\"mcount\"));\n    }\n}\n</code></pre>\n\n<p>A similar thing in GCC is</p>\n\n<pre class=\"lang-c prettyprint-override\"><code> void __cyg_profile_func_enter (void *, void *) __attribute__((no_instrument_function));\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "is_accepted": true, "score": 5, "last_activity_date": 1565203090, "last_edit_date": 1565203090, "creation_date": 1565166418, "answer_id": 57390054, "question_id": 57386539, "link": "https://stackoverflow.com/questions/57386539/how-is-it-that-a-generic-function-expecting-t-read-or-t-write-can-accept-a/57390054#57390054", "title": "How is it that a generic function expecting `T: Read` or `T: Write` can accept an argument `&amp;mut T`?", "body": "<p><a href=\"https://doc.rust-lang.org/1.34.0/std/io/trait.Read.html#impl-Read-14\" rel=\"nofollow noreferrer\">All <code>&amp;mut R</code> where <code>R: Read</code> implement <code>Read</code></a>:</p>\n\n<pre><code>impl&lt;R: Read + ?Sized, '_&gt; Read for &amp;'_ mut R \n</code></pre>\n\n<p>The implementations delegate all calls to <code>**self</code>, so the compiler works like this:</p>\n\n<ul>\n<li><code>&amp;mut BufReader</code> is an example of <code>&amp;mut R where R: Read</code></li>\n<li><code>&amp;mut R where R: Read</code> is an example of <code>R where R: Read</code></li>\n</ul>\n\n<p>The only magic involved is the blanket implementation that allows <code>&amp;mut R</code> to implement <code>Read</code>.</p>\n\n<p>In addition, this rule can be transitively applied, so when you pass <code>&amp;mut (&amp;mut (&amp;mut (&amp;mut buf_reader)))</code>, it still compiles and has identical semantics.</p>\n\n<p>The same <a href=\"https://doc.rust-lang.org/1.34.0/std/io/trait.Write.html#impl-Write-19\" rel=\"nofollow noreferrer\">applies to <code>Write</code></a> and <a href=\"https://doc.rust-lang.org/1.34.0/std/io/trait.Read.html#impl-Read-13\" rel=\"nofollow noreferrer\"><code>Box&lt;dyn Read&gt;</code> also works</a>.</p>\n\n<p>Note that taking <code>R: Read</code> and <code>W: Write</code> by value is recommended by the <a href=\"https://rust-lang-nursery.github.io/api-guidelines/interoperability.html#generic-readerwriter-functions-take-r-read-and-w-write-by-value-c-rw-value\" rel=\"nofollow noreferrer\">Rust API Guidelines</a>.</p>\n"}], "owner": {"reputation": 103, "user_id": 11893170, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e361bf1c6a73c76387911582a2afd269?s=128&d=identicon&r=PG&f=1", "display_name": "newbieee", "link": "https://stackoverflow.com/users/11893170/newbieee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 1, "accepted_answer_id": 57390054, "answer_count": 1, "score": 4, "last_activity_date": 1565203090, "creation_date": 1565148132, "last_edit_date": 1565192090, "question_id": 57386539, "link": "https://stackoverflow.com/questions/57386539/how-is-it-that-a-generic-function-expecting-t-read-or-t-write-can-accept-a", "title": "How is it that a generic function expecting `T: Read` or `T: Write` can accept an argument `&amp;mut T`?", "body": "<p>When a generic function needs a parameter of <code>T</code>, why does it work with an argument of <code>&amp;mut T</code>?</p>\n\n<p>I was trying to serialize a string to a file, using <code>serialize_into</code> and <code>serialize_from</code> in the <code>bincode</code> crate. The signatures are </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn serialize_into&lt;W, T: ?Sized&gt;(writer: W, value: &amp;T) -&gt; Result&lt;()&gt;\nwhere\n    W: std::io::Write,\n    T: serde::Serialize\n</code></pre>\n\n<p>and </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn deserialize_from&lt;R, T&gt;(reader: R) -&gt; Result&lt;T&gt;\nwhere\n    R: std::io::Read,\n    T: serde::de::DeserializeOwned\n</code></pre>\n\n<p>I tried to do the serializaion with <code>std::BufWriter</code> and <code>BufReader</code> but it seems only to work with a <code>&amp;mut BufWriter</code>.</p>\n\n<p>Consider this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use bincode;\nuse std::io::{BufWriter, BufReader};\nuse std::fs::File;\n\nfn main() {\n    let x = String::from(\"hello\");\n    let mut f1 = BufWriter::new(File::create(\"foo.txt\").unwrap()); \n    bincode::serialize_into( &amp;mut f1, &amp;x).unwrap();\n    let  mut f2 = BufReader::new(File::open(\"foo.txt\").unwrap());\n    let  y: bincode::Result&lt;String&gt; = bincode::deserialize_from( &amp;mut f2);\n    println!(\"{:?}\", y);\n}\n</code></pre>\n\n<p>As I need to write and read more than once, I thought a <code>&amp;BufWriter</code> and a <code>&amp;BufReader</code> would be needed, but <code>Write</code> and <code>Read</code> are not implemented for them. However, if <code>&amp;mut f1</code> and <code>&amp;mut f2</code> are used this compiles. Why can these <code>&amp;mut W</code> be used when a <code>W</code> is needed in the function signature?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565135784, "post_id": 57385016, "comment_id": 101254449, "body": "take <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a> or similar and do some proper parsing, here that a quick and dirty parsing, it&#39;s ok but no in a big or long term project."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1565140914, "post_id": 57385016, "comment_id": 101255283, "body": "There are several non-idiomatic aspects to this code, but if you are interested in a full review, then you are better off <a href=\"https://codereview.meta.stackexchange.com/questions/5777/a-guide-to-code-review-for-stack-overflow-users\">asking on code review</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1565141029, "post_id": 57385016, "comment_id": 101255301, "body": "Please don&#39;t use <code>Path::exists</code> except in rare occasions: <a href=\"https://stackoverflow.com/q/32384594/155423\">How to check whether a path exists?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "is_accepted": false, "score": 0, "last_activity_date": 1565140940, "last_edit_date": 1565140940, "creation_date": 1565134049, "answer_id": 57385177, "question_id": 57385016, "link": "https://stackoverflow.com/questions/57385016/is-using-to-string-the-cleanest-way-to-read-a-file-by-lines-and-split-by-whitesp/57385177#57385177", "title": "Is using to_string the cleanest way to read a file by lines and split by whitespace?", "body": "<p>I believe the <code>.to_string()</code> is necessary. But I would change it for clarity.</p>\n\n<p>The <code>.lines()</code> function returns an iterator with a <code>String</code>. But the function <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.split_whitespace\" rel=\"nofollow noreferrer\">split_whitespace</a> returns a <code>SplitWhiteSpace</code> struct.\nIf you look in the source code at <a href=\"https://doc.rust-lang.org/src/core/str/mod.rs.html#4212\" rel=\"nofollow noreferrer\">line 4213</a>, then you see that's iterating with <code>str</code>.</p>\n\n<p>Because your function returns a <code>String</code> and not an <code>str</code>, you need to convert it to a <code>String</code>. That can be accomplished by the <code>.to_string()</code> function, but I think it'd be cleaner if you were to use <code>String::from()</code>.</p>\n\n<p>The result would be:</p>\n\n<pre><code>.map(|x| String::from(x))\n</code></pre>\n\n<p>This step is not only necessary for the type, but also for lifetimes. The <code>str</code>'s you get back have the same lifetime as the <code>SplitWhiteSpace</code> struct. The conversion to <code>String</code> copies the values which allows them to have a different lifetime.</p>\n\n<p>(Take that explanation with a grain of salt, this is still quite new for me too)</p>\n"}, {"tags": [], "owner": {"reputation": 10345, "user_id": 4131059, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/uDaBr.jpg?s=128&g=1", "display_name": "Alexander Huszagh", "link": "https://stackoverflow.com/users/4131059/alexander-huszagh"}, "is_accepted": false, "score": 3, "last_activity_date": 1565143102, "last_edit_date": 1565143102, "creation_date": 1565135446, "answer_id": 57385314, "question_id": 57385016, "link": "https://stackoverflow.com/questions/57385016/is-using-to-string-the-cleanest-way-to-read-a-file-by-lines-and-split-by-whitesp/57385314#57385314", "title": "Is using to_string the cleanest way to read a file by lines and split by whitespace?", "body": "<p>Your code is generally idiomatic and good, I just have a few minor caveats. </p>\n\n<p>As far as the \"overwork\", I would argue modifying the string in-place is overwork, since at every removed whitespace character, you either need to do one of 3 things:</p>\n\n<ol>\n<li>Shift every character past that element down 1 (most moves, no allocations required though).</li>\n<li>Store an index of every position, iterate in reverse order and shift each element down 1 (less moves, but requires an allocation).</li>\n<li>Store an index of every position, track the index of the start current whitespace block, the end of the current whitespace block and the start of the next block,and move every element down, and then tracking these shifts (most complex, least moves required, and still more computational expensive than needed).</li>\n</ol>\n\n<p>Or.. you could allocate a new string. Sometimes simplicity is powerful.</p>\n\n<p>For the rest, one major issue is not to panic unnecessarily, especially not from failing to open a file. Unwraps, unless you can prove they shouldn't occur, are not good for production code. Specifically, the following line might induce a panic.</p>\n\n<pre><code>let f = BufReader::new(file().unwrap());\n</code></pre>\n\n<p>Better to replace that function with:</p>\n\n<pre><code>pub fn parse() -&gt; io::Result&lt;Vec&lt;Vec&lt;String&gt;&gt;&gt; {\n    let f = BufReader::new(file()?);\n    f.lines()\n        .map(|line| {\n            line.map(|x| {\n                x\n                    .split_whitespace()\n                    .map(|x| x.to_string())\n                    .collect()\n            })\n        })\n        .collect()\n}\n</code></pre>\n\n<p>This way, the caller of <code>parse</code> can appropriately handle any errors, both during BufReader creation and any errors that occur during <code>lines()</code>.</p>\n"}], "owner": {"reputation": 102358, "user_id": 15245, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9a2a53db8e9b4476038c94a64b32833f?s=128&d=identicon&r=PG", "display_name": "Ryan Bigg", "link": "https://stackoverflow.com/users/15245/ryan-bigg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 426, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1565143102, "creation_date": 1565132426, "last_edit_date": 1565140805, "question_id": 57385016, "link": "https://stackoverflow.com/questions/57385016/is-using-to-string-the-cleanest-way-to-read-a-file-by-lines-and-split-by-whitesp", "title": "Is using to_string the cleanest way to read a file by lines and split by whitespace?", "body": "<p>I'm trying to read a file that is formatted like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>ruby 2.6.2\nelixir 1.8.3\n</code></pre>\n\n<p>And convert into a two-dimensional array like this pseudocode:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[\n  [\"ruby\", \"2.6.2\"]\n  [\"elixir\", \"1.8.3\"]\n]\n</code></pre>\n\n<p>The code I have to do this in Rust is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::File;\nuse std::io::prelude::*;\nuse std::io::{self, BufReader};\n\nuse std::path::Path;\n\npub fn present() -&gt; bool {\n    path().exists()\n}\n\npub fn parse() -&gt; Vec&lt;Vec&lt;String&gt;&gt; {\n    let f = BufReader::new(file().unwrap());\n    f.lines()\n        .map(|line| {\n            line.unwrap()\n                .split_whitespace()\n                .map(|x| x.to_string())\n                .collect()\n        })\n        .collect()\n}\n\nfn file() -&gt; io::Result&lt;File&gt; {\n    let f = File::open(path())?;\n    return Ok(f);\n}\n\nfn path&lt;'a&gt;() -&gt; &amp;'a Path {\n    return Path::new(\".tool-versions\");\n}\n</code></pre>\n\n<p>What I'm unsure of here, is this line in the middle of the <code>parse</code> function:</p>\n\n<pre><code>.map(|x| x.to_string())\n</code></pre>\n\n<p>This seems like a bit of \"overwork\", but I am not sure if my feeling is correct here.</p>\n\n<p>Is there something I'm missing here, or is this the cleanest way to write this code to accomplish this particular task?</p>\n"}, {"tags": ["rust", "closures", "immutability"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565115716, "post_id": 57381861, "comment_id": 101248174, "body": "Why do you believe you should be able to mutate a variable that isn&#39;t marked <code>mut</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1565116797, "last_edit_date": 1565116797, "creation_date": 1565115889, "answer_id": 57381974, "question_id": 57381861, "link": "https://stackoverflow.com/questions/57381861/why-cant-i-mutably-move-capture-an-immutable-variable/57381974#57381974", "title": "Why can&#39;t I mutably move-capture an immutable variable?", "body": "<p>Even though the variable <code>p</code> has been moved, you didn't introduce a new variable binding. The binding <code>p</code> is not mutable, so you cannot mutate the value through <code>p</code>.</p>\n\n<p>The closure is really a struct that looks (a bit) like this:</p>\n\n<pre><code>struct MyClosure {\n    p: Position,\n}\n\nimpl FnMut&lt;usize, usize&gt; for MyClosure {\n    fn call_mut(&amp;mut self, param: usize) -&gt; usize {\n        self.p.x += 1;\n        self.p.x + p.y + param\n    }\n}\n</code></pre>\n\n<p>From this, it's definitely compelling that <code>p</code> <em>should</em> be mutable from inside the closure.</p>\n\n<p>However, Rust avoids directly exposing this implementation detail. The mutability semantics of the variable <code>p</code> are lexical, exactly as if the body of the closure was part of the outer function.</p>\n\n<p>There is nothing you can do to make this variable mutable from within the closure. You instead need to make the original <code>p</code> mutable or introduce a new mutable binding outside the closure.</p>\n"}], "owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 57381974, "answer_count": 1, "score": 1, "last_activity_date": 1565116797, "creation_date": 1565115364, "last_edit_date": 1565115664, "question_id": 57381861, "link": "https://stackoverflow.com/questions/57381861/why-cant-i-mutably-move-capture-an-immutable-variable", "title": "Why can&#39;t I mutably move-capture an immutable variable?", "body": "<p>I have a function creating a <code>FnMut</code> closure, <code>move</code>-capturing one of it's arguments. I get a compiler error because the argument isn't <code>mut</code>. I don't get what the problem is, as I <code>move</code> it and the closure isn't really using the argument itself.</p>\n\n<p>Code:</p>\n\n<pre><code>pub struct Position {\n    pub x: usize,\n    pub y: usize,\n}\n\nfn map_it(p: Position) -&gt; impl FnMut(usize) -&gt; usize {\n    move |param| {\n        p.x += 1;\n        p.x + p.y + param\n    }\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to `p.x`, as `p` is not declared as mutable\n --&gt; src/lib.rs:8:9\n  |\n6 | fn map_it(p: Position) -&gt; impl FnMut(usize) -&gt; usize {\n  |           - help: consider changing this to be mutable: `mut p`\n7 |     move |param| {\n8 |         p.x += 1;\n  |         ^^^^^^^^ cannot assign\n</code></pre>\n"}, {"tags": ["data-structures", "types", "rust"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 2, "creation_date": 1565103265, "post_id": 57378606, "comment_id": 101242173, "body": "You need a triple: a vector of pairs (A, B), an optional leftover B (as the first element) and an optional leftover A (as the last element)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565104853, "post_id": 57378606, "comment_id": 101243039, "body": "Does that mean the length of the vec can only be 3 or 4, or were those examples just illustrative of the alternation?"}, {"owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "edited": false, "score": 0, "creation_date": 1565104982, "post_id": 57378606, "comment_id": 101243122, "body": "It was only illustrative. Caring for performance with 4 elements would be over-optimizing big time."}], "answers": [{"comments": [{"owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "edited": false, "score": 0, "creation_date": 1565104315, "post_id": 57378944, "comment_id": 101242738, "body": "Thanks, that&#39;s a great way to do it! And yes, the collection is going to be created at once and then iterated over multiple time, so it should be ok from the point of view of ergonomics."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1565104687, "post_id": 57378944, "comment_id": 101242962, "body": "If A and B have  different sizes/alignment, it would be more efficient to store each in its own Vec."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565105326, "post_id": 57378944, "comment_id": 101243308, "body": "@PeterHall I think that deserves it&#39;s own answer! The downside I see to that is that the cache locality will be decreased, which the OP mentioned as a concern. However, your solution should have lower total memory usage. It&#39;d be tough to tell which is more performant without benchmarks."}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 1, "creation_date": 1565107127, "post_id": 57378944, "comment_id": 101244408, "body": "@Shepmaster: why do you think that the cache locality will be decreased? Iterating over both vectors in lockstep would still fill up the cache lines"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 0, "creation_date": 1565617410, "post_id": 57378944, "comment_id": 101398111, "body": "@VittorioRomeo I don&#39;t have a great intuition for these kinds of things, I suppose. I was mostly thinking that it would ping-pong between fetching <code>A</code> and <code>B</code>. If the prefetcher is smart enough to pull some of both, that&#39;s cool."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1565104634, "last_edit_date": 1565104634, "creation_date": 1565103774, "answer_id": 57378944, "question_id": 57378606, "link": "https://stackoverflow.com/questions/57378606/how-can-i-ensure-that-a-rust-vector-only-contains-alternating-types/57378944#57378944", "title": "How can I ensure that a Rust vector only contains alternating types?", "body": "<p>To store alternating types in a way that the type system enforces and has reasonable efficiency, you can use a tuple: <code>Vec&lt;(X, Y)&gt;</code>.</p>\n\n<p>Your situation also requires</p>\n\n<ul>\n<li>Storing an extra leading value in an <code>Option</code> to handle starting with <code>Y</code></li>\n<li>Storing an extra trailing value in an <code>Option</code> to handle ending with <code>X</code></li>\n</ul>\n\n<pre><code>use either::Either; // 1.5.2\nuse std::iter;\n\n#[derive(Debug, Default)]\nstruct Data&lt;X, Y&gt; {\n    head: Option&lt;Y&gt;,\n    pairs: Vec&lt;(X, Y)&gt;,\n    tail: Option&lt;X&gt;,\n}\n\nimpl&lt;X, Y&gt; Data&lt;X, Y&gt; {\n    fn iter(&amp;self) -&gt; impl Iterator&lt;Item = Either&lt;&amp;X, &amp;Y&gt;&gt; {\n        let head = self.head.iter().map(Either::Right);\n\n        let pairs = self.pairs.iter().flat_map(|(a, b)| {\n            let a = iter::once(Either::Left(a));\n            let b = iter::once(Either::Right(b));\n            a.chain(b)\n        });\n\n        let tail = self.tail.iter().map(Either::Left);\n\n        head.chain(pairs).chain(tail)\n    }\n}\n</code></pre>\n\n<p>That being said, you are going to have ergonomic issues <em>somewhere</em>. For example, you can't just <code>push</code> an <code>Either&lt;X, Y&gt;</code> because the previously pushed value might be of the same type. Creating the entire structure at once might be the simplest direction:</p>\n\n<pre><code>#[derive(Debug)]\nstruct A;\n#[derive(Debug)]\nstruct B;\n\nfn main() {\n    let data = Data {\n        head: Some(B),\n        pairs: vec![(A, B)],\n        tail: None,\n    };\n\n    println!(\"{:?}\", data.iter().collect::&lt;Vec&lt;_&gt;&gt;());\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 1, "last_activity_date": 1565687935, "creation_date": 1565687935, "answer_id": 57474665, "question_id": 57378606, "link": "https://stackoverflow.com/questions/57378606/how-can-i-ensure-that-a-rust-vector-only-contains-alternating-types/57474665#57474665", "title": "How can I ensure that a Rust vector only contains alternating types?", "body": "<blockquote>\n  <p>Is there a data structure that allows compile-time type verification, while maintaining cache locality and avoiding extra allocation?</p>\n</blockquote>\n\n<p>You can use Rust's type system to enforce that items of each type are added in alternating order. The general strategy is to capture the type of the first item and also the previous item in the type of the whole structure and make different methods available according to the \"current\" type. When the previous item was an <code>X</code>, only the methods for adding a <code>Y</code> will be available, and vice versa. </p>\n\n<p>I'm using two <code>Vec</code>s rather than a <code>Vec</code> of tuples. Depending on your data types, this <em>could</em> result in better memory adjacency, but that really depends on how you end up iterating.</p>\n\n<pre><code>use std::marker::PhantomData;\nuse std::fmt;\n\nstruct Left;\nstruct Right;\nstruct Empty;\n\nstruct AlternatingVec&lt;L, R, P = Empty, S = Empty&gt; {\n    lefts: Vec&lt;L&gt;,\n    rights: Vec&lt;R&gt;,\n    prev: PhantomData&lt;P&gt;,\n    start: PhantomData&lt;S&gt;,\n}\n\nimpl&lt;L, R&gt; AlternatingVec&lt;L, R, Empty, Empty&gt; {\n    pub fn new() -&gt; Self {\n        AlternatingVec {\n            lefts: Vec::new(),\n            rights: Vec::new(),\n            prev: PhantomData,\n            start: PhantomData,\n        } \n    }\n}\n</code></pre>\n\n<p>The types <code>Left</code>, <code>Right</code> and <code>Empty</code> are for \"tagging\" if the previous and start values correspond to values in the left or right collection, or if that collection is empty. Initially both collections are empty, so both <code>P</code> (the previously added value) and <code>S</code> (the start value) are <code>Empty</code>.</p>\n\n<p>Next, a utility method for changing the types. It doesn't look like it does much, but we'll use it in combination with type inference to produce copies of the data structure, but with the phantom types changed.</p>\n\n<pre><code>impl&lt;L, R, P, S&gt; AlternatingVec&lt;L, R, P, S&gt; {    \n    fn change_type&lt;P2, S2&gt;(self) -&gt; AlternatingVec&lt;L, R, P2, S2&gt; {\n        AlternatingVec {\n            lefts: self.lefts,\n            rights: self.rights,\n            prev: PhantomData,\n            start: PhantomData,\n        } \n    }\n}\n</code></pre>\n\n<p>In practice, the compiler is smart enough that this method does nothing at runtime.</p>\n\n<p>These two traits define operations on the left and right collections respectively:</p>\n\n<pre><code>trait LeftMethods&lt;L, R, S&gt; {\n    fn push_left(self, val: L) -&gt; AlternatingVec&lt;L, R, Left, S&gt;;\n}\n\ntrait RightMethods&lt;L, R, S&gt; {\n    fn push_right(self, val: R) -&gt; AlternatingVec&lt;L, R, Right, S&gt;;\n}\n</code></pre>\n\n<p>We will implement those for the times we want them to be callable: <code>RightMethods</code> should only be available if the previous item was a \"left\" or if there are no items added so far. <code>LeftMethods</code> should be implemented if the previous items was a \"right\" or if there are no items added so far.</p>\n\n<pre><code>impl&lt;L, R&gt; LeftMethods&lt;L, R, Left&gt; for AlternatingVec&lt;L, R, Empty, Empty&gt; {\n    fn push_left(mut self, val: L) -&gt; AlternatingVec&lt;L, R, Left, Left&gt; {\n        self.lefts.push(val);\n        self.change_type()\n    }\n}\n\nimpl&lt;L, R, S&gt; LeftMethods&lt;L, R, S&gt; for AlternatingVec&lt;L, R, Right, S&gt; {\n    fn push_left(mut self, val: L) -&gt; AlternatingVec&lt;L, R, Left, S&gt; {\n        self.lefts.push(val);\n        self.change_type()\n    }\n}\n\nimpl&lt;L, R&gt; RightMethods&lt;L, R, Right&gt; for AlternatingVec&lt;L, R, Empty, Empty&gt; {\n    fn push_right(mut self, val: R) -&gt; AlternatingVec&lt;L, R, Right, Right&gt; {\n        self.rights.push(val);\n        self.change_type()\n    }\n}\n\nimpl&lt;L, R, S&gt; RightMethods&lt;L, R, S&gt; for AlternatingVec&lt;L, R, Left, S&gt; {\n    fn push_right(mut self, val: R) -&gt; AlternatingVec&lt;L, R, Right, S&gt; {\n        self.rights.push(val);\n        self.change_type()\n    }\n}\n</code></pre>\n\n<p>These methods don't do much except call <code>push</code> on the correct inner <code>Vec</code>, and then use <code>change_type</code> to make the type reflect the signature.</p>\n\n<p>The compiler forces you to call <code>push_left</code> and <code>push_right</code> alternately:</p>\n\n<pre><code>fn main() {\n    let v = AlternatingVec::new()\n        .push_left(true)\n        .push_right(7)\n        .push_left(false)\n        .push_right(0)\n        .push_left(false);\n}\n</code></pre>\n\n<p>This complex structure leads to a lot more work in general. For example, <code>Debug</code> is fiddly to implement in a nice way. I made a version with a <code>Debug</code> impl, but it's getting a bit too long for Stack Overflow. You can see it here:</p>\n\n<ul>\n<li><a href=\"https://gist.github.com/peterjoel/2ffe8b7f5ad7c649f61c580ac7dabc67\" rel=\"nofollow noreferrer\">https://gist.github.com/peterjoel/2ffe8b7f5ad7c649f61c580ac7dabc67</a></li>\n</ul>\n"}], "owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 534, "favorite_count": 0, "accepted_answer_id": 57378944, "answer_count": 2, "score": 8, "last_activity_date": 1565687935, "creation_date": 1565102511, "last_edit_date": 1565103245, "question_id": 57378606, "link": "https://stackoverflow.com/questions/57378606/how-can-i-ensure-that-a-rust-vector-only-contains-alternating-types", "title": "How can I ensure that a Rust vector only contains alternating types?", "body": "<p>I have a set of data that alternates between A and B. These are all valid choices:</p>\n\n<ul>\n<li><code>A -&gt; B -&gt; A</code></li>\n<li><code>A -&gt; B -&gt; A -&gt; B</code></li>\n<li><code>B -&gt; A -&gt; B</code></li>\n<li><code>B -&gt; A -&gt; B -&gt; A</code></li>\n</ul>\n\n<p>I want to leverage the type system to make sure the alternating property is checked at compile time while maintaining good performance.</p>\n\n<h2>Solution 1: linked list</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A {\n    // data\n    next: Option&lt;B&gt;,\n}\n\nstruct B {\n    // data\n    next: Option&lt;Box&lt;A&gt;&gt;,\n}\n</code></pre>\n\n<p>The problem is that the performance of this data structure will be poor at best. Linked lists have frequent cache misses, and for iterating the data structure this is quite bad.</p>\n\n<h2>Solution 2: Vec + enum</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Types {\n    A(DataA),\n    B(DataB),\n}\n\ntype Data = Vec&lt;Types&gt;;\n</code></pre>\n\n<p>With this solution, cache locality is much better, so yay for performance. However, this does not prevent putting 2 <code>A</code>s side-by-side. There is also the fact that one needs to check the type at each iteration, while it is not needed because of the informal definition.</p>\n\n<h2>Solution 3: Combination</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A {\n    // data, default in first link = empty\n    b: Option&lt;B&gt;,\n}\n\nstruct B {\n    // data\n}\n\ntype Data = Vec&lt;A&gt;;\n</code></pre>\n\n<p>This combines the cache locality of the <code>Vec</code> with the type verification of the linked list. It is quite ugly, and one needs to check the first value to verify if it really is an <code>A</code>, or an empty container for the next <code>B</code>.</p>\n\n<h2>The question</h2>\n\n<p>Is there a data structure that allows compile-time type verification, while maintaining cache locality and avoiding extra allocation?</p>\n"}, {"tags": ["rust", "valgrind"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1565099442, "post_id": 57377324, "comment_id": 101239720, "body": "If you pass the suggested <code>--leak-check=full</code> to valgrind, it should print out the stack trace of the point where said memory was allocated, this would be quite helpful to know where it comes from. Also note that it is marked as &quot;still reachable&quot;, not &quot;lost&quot;, so it could be reclaimed."}, {"owner": {"reputation": 111, "user_id": 5474911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca60379a293390258f4f8678c4bb1ad6?s=128&d=identicon&r=PG&f=1", "display_name": "Toby Gomersall", "link": "https://stackoverflow.com/users/5474911/toby-gomersall"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565100124, "post_id": 57377324, "comment_id": 101240134, "body": "@Matthieu M. I have re run the code and passed <code>--leak-check=full --show-leak-kinds=all --track-origins=yes</code> to valgrind. My last edit added the stack trace to the question."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565101026, "post_id": 57377324, "comment_id": 101240763, "body": "Oompf. It&#39;s a bit disappointing because you get no stack trace for the leak, it just says <code>calloc</code> (which is a <code>malloc</code> returning zero-ed memory). You could try to remove <code>mio</code> from you program, compile an empty <code>main</code> with no dependencies, and see if this &quot;leak&quot; is still reported."}, {"owner": {"reputation": 111, "user_id": 5474911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca60379a293390258f4f8678c4bb1ad6?s=128&d=identicon&r=PG&f=1", "display_name": "Toby Gomersall", "link": "https://stackoverflow.com/users/5474911/toby-gomersall"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565101509, "post_id": 57377324, "comment_id": 101241093, "body": "@MatthieuM. I tried running an empty <code>main</code> after removing <code>mio</code> and there were no issues (<code>All heap blocks were freed -- no leaks are possible</code>)."}, {"owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "edited": false, "score": 0, "creation_date": 1565105790, "post_id": 57377324, "comment_id": 101243602, "body": "Unless it&#39;s hiding in another file, it looks like <code>Drop</code> isn&#39;t implemented for <code>Poll</code> and it&#39;s creating an <code>Arc</code>: <a href=\"https://github.com/tokio-rs/mio/blob/master/src/poll.rs\" rel=\"nofollow noreferrer\">github.com/tokio-rs/mio/blob/master/src/poll.rs</a>"}, {"owner": {"reputation": 14946, "user_id": 8188846, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/85a7614508b329eb4a495c59ccf64ac7?s=128&d=identicon&r=PG", "display_name": "Maximilian Burszley", "link": "https://stackoverflow.com/users/8188846/maximilian-burszley"}, "edited": false, "score": 0, "creation_date": 1565105967, "post_id": 57377324, "comment_id": 101243727, "body": "<a href=\"https://github.com/tokio-rs/mio/issues/776\" rel=\"nofollow noreferrer\">github.com/tokio-rs/mio/issues/776</a>"}], "owner": {"reputation": 111, "user_id": 5474911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca60379a293390258f4f8678c4bb1ad6?s=128&d=identicon&r=PG&f=1", "display_name": "Toby Gomersall", "link": "https://stackoverflow.com/users/5474911/toby-gomersall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 123, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1565099844, "creation_date": 1565098516, "last_edit_date": 1565099844, "question_id": 57377324, "link": "https://stackoverflow.com/questions/57377324/does-miopoll-produce-a-true-memory-leak-and-can-i-ignore-it", "title": "Does mio::poll produce a true memory leak and can I ignore it?", "body": "<p>I want to poll a character device to check for an interrupt. My code appears to work but I'm getting a memory leak when I run my code under Valgrind.</p>\n\n<p>I have reduced the code to a minimum example which still produces the memory leak:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use mio::Poll;\n\nfn main() {\n    // Construct a new `Poll` handle\n    let _poll = Poll::new().unwrap();\n}\n</code></pre>\n\n<p>I expect <code>_poll</code> to be dropped cleanly when it goes out of scope. However, when run under Valgrind, the above code produces the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>==4771== Memcheck, a memory error detector\n==4771== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\n==4771== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\n==4771== Command: ./target/debug/poll_test\n==4771== \n==4771== Syscall param epoll_ctl(event) points to uninitialised byte(s)\n==4771==    at 0x49B2BAC: epoll_ctl (syscall-template.S:78)\n==4771==    by 0x10DDC7: mio::sys::unix::epoll::Selector::register (epoll.rs:98)\n==4771==    by 0x10FA0B: &lt;mio::sys::unix::eventedfd::EventedFd&lt;'a&gt; as mio::event_imp::Evented&gt;::register (eventedfd.rs:97)\n==4771==    by 0x10FDFB: &lt;mio::sys::unix::io::Io as mio::event_imp::Evented&gt;::register (io.rs:65)\n==4771==    by 0x10E97F: &lt;mio::sys::unix::awakener::pipe::Awakener as mio::event_imp::Evented&gt;::register (awakener.rs:63)\n==4771==    by 0x10AB7F: mio::poll::Poll::new (poll.rs:665)\n==4771==    by 0x10A797: poll_test::main (main.rs:5)\n==4771==    by 0x10A62B: std::rt::lang_start::{{closure}} (rt.rs:64)\n==4771==    by 0x1190AF: {{closure}} (rt.rs:49)\n==4771==    by 0x1190AF: std::panicking::try::do_call (panicking.rs:297)\n==4771==    by 0x11B407: __rust_maybe_catch_panic (lib.rs:87)\n==4771==    by 0x119A8B: try&lt;i32,closure&gt; (panicking.rs:276)\n==4771==    by 0x119A8B: catch_unwind&lt;closure,i32&gt; (panic.rs:388)\n==4771==    by 0x119A8B: std::rt::lang_start_internal (rt.rs:48)\n==4771==    by 0x10A5FB: std::rt::lang_start (rt.rs:64)\n==4771==  Address 0xbde4b10c is on thread 1's stack\n==4771==  in frame #1, created by mio::sys::unix::epoll::Selector::register (epoll.rs:91)\n==4771==  Uninitialised value was created by a stack allocation\n==4771==    at 0x10DD40: mio::sys::unix::epoll::Selector::register (epoll.rs:91)\n==4771== \n==4771== \n==4771== HEAP SUMMARY:\n==4771==     in use at exit: 20 bytes in 1 blocks\n==4771==   total heap usage: 18 allocs, 17 frees, 2,137 bytes allocated\n==4771== \n==4771== 20 bytes in 1 blocks are still reachable in loss record 1 of 1\n==4771==    at 0x484A004: calloc (in /usr/lib/valgrind/vgpreload_memcheck-arm-linux.so)\n==4771== \n==4771== LEAK SUMMARY:\n==4771==    definitely lost: 0 bytes in 0 blocks\n==4771==    indirectly lost: 0 bytes in 0 blocks\n==4771==      possibly lost: 0 bytes in 0 blocks\n==4771==    still reachable: 20 bytes in 1 blocks\n==4771==         suppressed: 0 bytes in 0 blocks\n==4771== \n==4771== For counts of detected and suppressed errors, rerun with: -v\n==4771== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 3)\n\n</code></pre>\n\n<p>Why does this code produce a memory leak? Can I fix it? If not, can I safely ignore it?</p>\n"}, {"tags": ["vector", "rust", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 10873684, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EmQoWoEBUTo/AAAAAAAAAAI/AAAAAAAAD4k/vTu6GydS480/photo.jpg?sz=128", "display_name": "Steve Pryde", "link": "https://stackoverflow.com/users/10873684/steve-pryde"}, "edited": false, "score": 0, "creation_date": 1565096511, "post_id": 57376443, "comment_id": 101237744, "body": "Thanks. There is an additional complication I faced due to the Player struct both owning the vec and also needing a mutable borrow of self to call undo_effect(). This prevented calling self.undo_effect() during any iteration of self.effects. But since I only need to call self.undo_effect() on elements that can be (re)moved from self.effects, it is in theory possible to do. Your sort suggestion sounds like it could work"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 63, "user_id": 10873684, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EmQoWoEBUTo/AAAAAAAAAAI/AAAAAAAAD4k/vTu6GydS480/photo.jpg?sz=128", "display_name": "Steve Pryde", "link": "https://stackoverflow.com/users/10873684/steve-pryde"}, "edited": false, "score": 0, "creation_date": 1565096893, "post_id": 57376443, "comment_id": 101238005, "body": "TBH: The sort thing is just for your &quot;no additional memory&quot; requirement. I don&#39;t think that it will pay off, but I haven&#39;t measured it. Please give an update about it or ask if you have strugles (preferable with a playground link)"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 1, "last_activity_date": 1565095687, "creation_date": 1565095687, "answer_id": 57376443, "question_id": 57376222, "link": "https://stackoverflow.com/questions/57376222/how-do-i-mutate-and-optionally-remove-elements-from-a-vec-without-memory-allocat/57376443#57376443", "title": "How do I mutate and optionally remove elements from a vec without memory allocation?", "body": "<p>If I understand you correctly, you have two questions:</p>\n\n<ol>\n<li>How can I split a <code>Vec</code> into two <code>Vec</code>s (one which fulfill a predidate, the other one which doesn't)</li>\n<li>Is it possible to do without memory overhead</li>\n</ol>\n\n<hr>\n\n<p>There are multiple ways of splitting a Vec into two (or more).</p>\n\n<ul>\n<li>You could use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.partition\" rel=\"nofollow noreferrer\"><code>Iteratator::partition</code></a> which will give you two distinct Iterators which can be used further.</li>\n<li>There is the unstable <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.drain_filter\" rel=\"nofollow noreferrer\"><code>Vec::drain_filter</code></a> function which does the same but on a <code>Vec</code> itself</li>\n<li>Use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.splitn\" rel=\"nofollow noreferrer\"><code>splitn</code></a> (or <code>splitn_mut</code>) which will split your Vec/slice into <code>n</code> (2 in your case) Iterators</li>\n</ul>\n\n<p>Depending on what you want to do, all solutions are applicable and good to use.</p>\n\n<hr>\n\n<p>Is it possible without memory overhead? Not with the solutions above, because you need to create a second <code>Vec</code> which can hold the filtered items. But there is a solution, namely you can \"sort\" the Vec where the first half will contain all the items that fulfill the predicate (e.g. are not expired) and the second half that will fail the predicate (are expired). You just need to count the amount of items that fulfill the predicate.</p>\n\n<p>Then you can use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at\" rel=\"nofollow noreferrer\"><code>split_at</code></a> (or <code>split_at_mut</code>) to split the Vec/slice into two distinct slices. Afterwards you can resize the Vec to the length of the good items and the other ones will be dropped.</p>\n"}, {"comments": [{"owner": {"reputation": 63, "user_id": 10873684, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EmQoWoEBUTo/AAAAAAAAAAI/AAAAAAAAD4k/vTu6GydS480/photo.jpg?sz=128", "display_name": "Steve Pryde", "link": "https://stackoverflow.com/users/10873684/steve-pryde"}, "edited": false, "score": 2, "creation_date": 1565099208, "post_id": 57376901, "comment_id": 101239548, "body": "I didn&#39;t know about std::mem::replace. That looks super useful. Also wasn&#39;t aware that the default constructor of Vec does not allocate - double win! Thanks!"}, {"owner": {"reputation": 63, "user_id": 10873684, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EmQoWoEBUTo/AAAAAAAAAAI/AAAAAAAAD4k/vTu6GydS480/photo.jpg?sz=128", "display_name": "Steve Pryde", "link": "https://stackoverflow.com/users/10873684/steve-pryde"}, "edited": false, "score": 0, "creation_date": 1565129800, "post_id": 57376901, "comment_id": 101253366, "body": "As I think about this more, this solution could break if undo_effect() for whatever reason tried to add another effect to the player (since the self.effects it sees is the temporary vec). The double-vec solution would support this. Still, I liked this answer because it seemed straightforward and easy to read and reason about. There are ways to work around the side effect mentioned above."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 63, "user_id": 10873684, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EmQoWoEBUTo/AAAAAAAAAAI/AAAAAAAAD4k/vTu6GydS480/photo.jpg?sz=128", "display_name": "Steve Pryde", "link": "https://stackoverflow.com/users/10873684/steve-pryde"}, "edited": false, "score": 0, "creation_date": 1565158639, "post_id": 57376901, "comment_id": 101259002, "body": "@StevePryde: Ah yes indeed, this was made under the assumption that <code>undo_effect</code> would not use <code>effects</code>, as it&#39;s impossible to have a stable reference in <code>effects</code> and at the same time modify it."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1565097167, "creation_date": 1565097167, "answer_id": 57376901, "question_id": 57376222, "link": "https://stackoverflow.com/questions/57376222/how-do-i-mutate-and-optionally-remove-elements-from-a-vec-without-memory-allocat/57376901#57376901", "title": "How do I mutate and optionally remove elements from a vec without memory allocation?", "body": "<p>The main issue is that you are borrowing a field (<code>effects</code>) of <code>Player</code> and trying to call <code>undo_effect</code> while this field is borrowed. As you noted, this does not work.</p>\n\n<p>You already realized that you could juggle <em>two</em> vectors, but you could actually only juggle <em>one</em> (permanent) vector:</p>\n\n<pre><code>struct Player {\n    effects: Vec&lt;Effect&gt;\n}\n\nimpl Player {\n    fn update(&amp;mut self, delta_time: f32) {\n        for effect in &amp;mut self.effects {\n            effect.remaining -= delta_time;\n            if effect.remaining &lt;= 0.0 {\n                effect.active = false;\n            }\n        }\n\n        //  Temporarily remove effects from Player.\n        let mut effects = std::mem::replace(&amp;mut self.effects, vec!());\n\n        //  Call Player::undo_effects (no outstanding borrows).\n        //  `drain_filter` could also be used, for better efficiency.\n        for effect in effects.iter_mut().filter(|e| !e.active) {\n            self.undo_effect(effect);\n        }\n\n        //  Restore effects\n        self.effects = effects;\n\n        self.effects.retain(|e| e.active);\n    }\n}\n</code></pre>\n\n<p>This will not allocate because the default constructor of <code>Vec</code> does not allocate.</p>\n\n<p>On the other hand, the double-vector solution might be more efficient as it allows a single pass over <code>self.effects</code> rather than two. YMMV.</p>\n"}, {"tags": [], "owner": {"reputation": 131, "user_id": 4492422, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-hbWz8DRYJrw/AAAAAAAAAAI/AAAAAAAAOsU/i9YYnpAnzx4/photo.jpg?sz=128", "display_name": "Robert Jacobson", "link": "https://stackoverflow.com/users/4492422/robert-jacobson"}, "is_accepted": false, "score": 0, "last_activity_date": 1596769518, "creation_date": 1596769518, "answer_id": 63294593, "question_id": 57376222, "link": "https://stackoverflow.com/questions/57376222/how-do-i-mutate-and-optionally-remove-elements-from-a-vec-without-memory-allocat/63294593#63294593", "title": "How do I mutate and optionally remove elements from a vec without memory allocation?", "body": "<p>The best answer is <a href=\"https://stackoverflow.com/a/7572023/4492422\">this one in C++</a>.</p>\n<blockquote>\n<p>[O]rder the indices vector, create two iterators into the data vector, one for reading and one for writing. Initialize the writing iterator to the first element to be removed, and the reading iterator to one beyond that one. Then in each step of the loop increment the iterators to the next value (writing) and next value not to be skipped (reading) and copy/move the elements. At the end of the loop call erase to discard the elements beyond the last written to position.</p>\n</blockquote>\n<p>The Rust adaptation to your specific problem is to move the removed items out of the vector instead of just writing over them.</p>\n<p>An alternative is to use a linked list instead of a vector to hold your Effect instances.</p>\n"}], "owner": {"reputation": 63, "user_id": 10873684, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EmQoWoEBUTo/AAAAAAAAAAI/AAAAAAAAD4k/vTu6GydS480/photo.jpg?sz=128", "display_name": "Steve Pryde", "link": "https://stackoverflow.com/users/10873684/steve-pryde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 960, "favorite_count": 0, "accepted_answer_id": 57376901, "answer_count": 3, "score": 0, "last_activity_date": 1596769518, "creation_date": 1565094920, "last_edit_date": 1582447809, "question_id": 57376222, "link": "https://stackoverflow.com/questions/57376222/how-do-i-mutate-and-optionally-remove-elements-from-a-vec-without-memory-allocat", "title": "How do I mutate and optionally remove elements from a vec without memory allocation?", "body": "<p>I have a Player struct that contains a vec of Effect instances. I want to iterate over this vec, decrease the remaining time for each Effect, and then remove any effects whose remaining time reaches zero. So far so good. However, for any effect removed, I also want to pass it to Player's undo_effect() method, before destroying the effect instance.</p>\n\n<p>This is part of a game loop, so I want to do this <strong>without any additional memory allocation</strong> if possible.</p>\n\n<p>I've tried using a simple for loop and also iterators, drain, retain, and filter, but I keep running into issues where self (the Player) would be mutably borrowed more than once, because modifying self.effects requires a mutable borrow, as does the undo_effect() method. The drain_filter() in nightly looks useful here but it was first proposed in 2017 so not holding my breath on that one.</p>\n\n<p>One approach that did compile (see below), was to use two vectors and alternate between them on each frame. Elements are pop()'ed from vec 1 and either push()'ed to vec 2 or passed to undo_effect() as appropriate. On the next game loop iteration, the direction is reversed. Since each vec will not shrink, the only allocations will be if they grow larger than before.\nI started abstracting this as its own struct but want to check if there is a better (or easier) way.</p>\n\n<p>This one won't compile. The self.undo_effect() call would borrow self as mutable twice.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Player {\n    effects: Vec&lt;Effect&gt;\n}\n\nimpl Player {\n    fn update(&amp;mut self, delta_time: f32) {\n        for effect in &amp;mut self.effects {\n            effect.remaining -= delta_time;\n            if effect.remaining &lt;= 0.0 {\n                effect.active = false;\n            }\n        }\n\n        for effect in self.effects.iter_mut().filter(|e| !e.active) {\n            self.undo_effect(effect);\n        }\n\n        self.effects.retain(|e| e.active);\n    }\n}\n</code></pre>\n\n<p>The below compiles ok - but is there a better way?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Player {\n    effects: [Vec&lt;Effect&gt;; 2],\n    index: usize\n}\n\nimpl Player {\n    fn update(&amp;mut self, delta_time: f32) {\n        let src_index = self.index;\n        let target_index = if self.index == 0 { 1 } else { 0 };\n\n        self.effects[target_index].clear(); // should be unnecessary.\n        while !self.effects[src_index].is_empty() {\n            if let Some(x) = self.effects[src_index].pop() {\n                if x.active {\n                    self.effects[target_index].push(x);\n                } else {\n                    self.undo_effect(&amp;x);\n                }\n            }\n        }\n\n        self.index = target_index;\n    }\n}\n</code></pre>\n\n<p>Is there an iterator version that works without unnecessary memory allocations? I'd be ok with allocating memory only for the removed elements, since this will be much rarer.</p>\n\n<p>Would an iterator be more efficient than the pop()/push() version?</p>\n\n<p>EDIT 2020-02-23:\nI ended up coming back to this and I found a slightly more robust solution, similar to the above but without the danger of requiring a <code>target_index</code> field.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>std::mem::swap(&amp;mut self.effects, &amp;mut self.effects_cache);\nself.effects.clear();\nwhile !self.effects_cache.is_empty() {\n    if let Some(x) = self.effects_cache.pop() {\n        if x.active {\n            self.effects.push(x);\n        } else {\n            self.undo_effect(&amp;x);\n        }\n    }\n}\n</code></pre>\n\n<p>Since <code>self.effects_cache</code> is unused outside this method and does not require <code>self.effects_cache</code> to have any particular value beforehand, the rest of the code can simply use <code>self.effects</code> and it will always be current.</p>\n"}, {"tags": ["pointers", "reference", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1565089185, "post_id": 57374414, "comment_id": 101233549, "body": "It does not belong to anything. <code>&amp;4</code> is just a reference to something. In this case a reference to some memory location where a 4 is."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1565089263, "post_id": 57374414, "comment_id": 101233598, "body": "It is static. There is no owner because it is in static memory so exists for the duration of the application."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 3, "creation_date": 1565089622, "post_id": 57374414, "comment_id": 101233812, "body": "Alternatively, you could think of it as being &#39;owned&#39; by the program itself."}, {"owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "edited": false, "score": 0, "creation_date": 1565136169, "post_id": 57374414, "comment_id": 101254491, "body": "all above make senses, and being &#39;owned&#39; by the program itself makes me clear. Thanks all."}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 1, "last_activity_date": 1565096661, "creation_date": 1565096661, "answer_id": 57376758, "question_id": 57374414, "link": "https://stackoverflow.com/questions/57374414/what-is-the-owner-of-literal-reference-such-as-4-in-rust/57376758#57376758", "title": "What is the owner of literal reference such as &amp;4 in Rust?", "body": "<p>Literals, be they:</p>\n\n<ul>\n<li>number literals, like <code>4</code></li>\n<li>string literals, like <code>\"Hello, World\"</code></li>\n</ul>\n\n<p>Have a <code>'static</code> lifetime as their value is hard-coded into the library or executable itself. For example, on Linux, they would be found either in the <code>.text</code> segment or the <code>.rodata</code> segment of the ELF binary.</p>\n\n<p>In that sense, you can think of them as being owned by the program itself.</p>\n"}], "owner": {"reputation": 105, "user_id": 8923382, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MzKnrPp4Viw/AAAAAAAAAAI/AAAAAAAAAEg/yLooe0LF9Bk/photo.jpg?sz=128", "display_name": "\uc8fc\ud53c\ud130", "link": "https://stackoverflow.com/users/8923382/%ec%a3%bc%ed%94%bc%ed%84%b0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 0, "closed_date": 1565097926, "accepted_answer_id": 57376758, "answer_count": 1, "score": 0, "last_activity_date": 1565100108, "creation_date": 1565088813, "last_edit_date": 1565090080, "question_id": 57374414, "link": "https://stackoverflow.com/questions/57374414/what-is-the-owner-of-literal-reference-such-as-4-in-rust", "closed_reason": "Duplicate", "title": "What is the owner of literal reference such as &amp;4 in Rust?", "body": "<p>Normally, there is only one owner for a specific value (except for things like <code>Rc&lt;T&gt;</code>). Then what is the owner of the value <code>4</code> below since the variable <code>myVar</code> borrows it from something? I want to know what is that something.</p>\n\n<pre><code>let myVar = &amp;4;\n</code></pre>\n"}, {"tags": ["module", "rust", "private", "class-visibility"], "comments": [{"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1565086174, "post_id": 57373374, "comment_id": 101232081, "body": "Seems that modules in one file always see each other. For modules in separate files, you can try to restrict visibility using <code>pub (super)</code> syntax."}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1565086422, "post_id": 57373374, "comment_id": 101232206, "body": "@Zefick Thanks for the tip, will try it out! The modules are actually in separate files, just put them in one to make the question clearer."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1565086517, "post_id": 57373374, "comment_id": 101232247, "body": "To the best of my knowledge, file structure does not affect the way Rust sees your program&#39;s module structure. e.g. <code>mod breakfast { ... }</code> and <code>mod breakfast;</code> with a seperate file will always function exactly the same."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 5, "creation_date": 1565086520, "post_id": 57373374, "comment_id": 101232251, "body": "@Zefick it has nothing to do with separate files actually -- modeling modules the way Anders did, and splitting them into separate files are the exact same thing."}, {"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 1, "creation_date": 1565086900, "post_id": 57373374, "comment_id": 101232432, "body": "Now I see. <code>pub(super)</code> makes a module visible in a supermodule and all its submodules."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1565089143, "post_id": 57373886, "comment_id": 101233530, "body": "Interestingly, in C++ and Java, child classes have access to everything their parent class can access, so the Rust rule seems consistent with C++ and Java in this regard. I wonder if there are languages behaving differently."}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 2, "last_activity_date": 1565087445, "last_edit_date": 1565087445, "creation_date": 1565086922, "answer_id": 57373886, "question_id": 57373374, "link": "https://stackoverflow.com/questions/57373374/how-to-hide-sibling-modules-from-each-other-in-rust/57373886#57373886", "title": "How to hide sibling modules from each other in Rust?", "body": "<p>This is by design:</p>\n\n<blockquote>\n  <p>Rust's name resolution operates on a global hierarchy of namespaces. Each level in the hierarchy can be thought of as some item. The items are one of those mentioned above, but also include external crates. Declaring or defining a new module can be thought of as inserting a new tree into the hierarchy at the location of the definition. [...]</p>\n  \n  <p>By default, everything in Rust is private, with two exceptions: Associated items in a pub Trait are public by default; Enum variants in a pub enum are also public by default. When an item is declared as pub, it can be thought of as being accessible to the outside world.</p>\n  \n  <p>With the notion of an item being either public or private, Rust allows item accesses in two cases:</p>\n  \n  <ul>\n  <li><strong>If an item is public, then it can be accessed externally from some module <code>m</code> if you can access all the item's parent modules from <code>m</code>.</strong> You can also potentially be able to name the item through re-exports. [...]</li>\n  <li>If an item is private, it may be accessed by the current module and its descendants.</li>\n  </ul>\n</blockquote>\n\n<p>For further information on this, please consult the relevant chapter of <a href=\"https://doc.rust-lang.org/reference/visibility-and-privacy.html\" rel=\"nofollow noreferrer\">The Reference</a></p>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 255, "favorite_count": 0, "accepted_answer_id": 57373886, "answer_count": 1, "score": 4, "last_activity_date": 1565099850, "creation_date": 1565085129, "last_edit_date": 1565099850, "question_id": 57373374, "link": "https://stackoverflow.com/questions/57373374/how-to-hide-sibling-modules-from-each-other-in-rust", "title": "How to hide sibling modules from each other in Rust?", "body": "<p>I have a Rust module <code>breakfast</code> containing two sub modules <code>egg</code> and <code>bacon</code>. The <code>breakfast</code> module must know about <code>egg</code> and <code>bacon</code>, but the two children do not need to and therefore should not know about each other.</p>\n\n<p>This is what my code looks like now. The breakfast gets made, but unfortunately <code>egg</code> and <code>bacon</code> can access each other.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod breakfast {\n    pub fn make_breakfast() -&gt; String {\n        format!(\"{} and {}\", egg::EGG, bacon::BACON)\n    }\n\n    mod egg {\n        pub const EGG: &amp;'static str = \"egg\";\n    }\n\n    mod bacon {\n        pub const BACON: &amp;'static str = \"bacon\";\n\n        // Oh no! The bacon knows about the egg!\n        // I want this to be a compile error.\n        use super::egg::EGG;\n    }\n}\n</code></pre>\n\n<p>Can I hide the siblings from each other somehow, perhaps by using visibility modifiers or by restructuring the modules? Or is the unneeded visibility something I should accept?</p>\n\n<p>In reality, the modules are in separate files, but I put them in one here to make a clearer example.</p>\n"}, {"tags": ["http", "rust", "aws-lambda"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565083599, "post_id": 57372760, "comment_id": 101230633, "body": "Which macro? Can you please be more specific about what you are actually asking? I don&#39;t get it, sorry."}, {"owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565084300, "post_id": 57372760, "comment_id": 101231018, "body": "Have you seen the link in the question?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1565085124, "post_id": 57372760, "comment_id": 101231459, "body": "<a href=\"https://stackoverflow.com/help/how-to-ask\">stackoverflow.com/help/how-to-ask</a> : <i>&quot;but also copy the code into the question itself. Not everyone can access external sites, and the links may break over time&quot;</i> Please do that. Also you linked to the documentation of the macro, not the code itself."}], "answers": [{"comments": [{"owner": {"reputation": 5207, "user_id": 10950867, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7gDBg.jpg?s=128&g=1", "display_name": "Thales Minussi", "link": "https://stackoverflow.com/users/10950867/thales-minussi"}, "edited": false, "score": 0, "creation_date": 1565088633, "post_id": 57373377, "comment_id": 101233254, "body": "K Mo&#39;s answer is very accurate. DynamoDB is just a service. All the low level calls (data being physically inserted to the disk) are handled by AWS. The SDK you use is just an API that will connect internally to their services, so you don&#39;t need to worry about it. Also, if both Lambda and the DynamoDB table are in the same region, saving/fetching data to/from it should be relatively fast (under 100ms). Even if there was some gain in using <code>http keepAlive=true</code> it would be irrelevant in most cases."}, {"owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "edited": false, "score": 0, "creation_date": 1565090389, "post_id": 57373377, "comment_id": 101234206, "body": "Maybe DynamoDB is not the right example, but in general I just want to have a stateful connection that I would like to pass in all the way to the rest of the code. Thanks for the help though."}, {"owner": {"reputation": 5207, "user_id": 10950867, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7gDBg.jpg?s=128&g=1", "display_name": "Thales Minussi", "link": "https://stackoverflow.com/users/10950867/thales-minussi"}, "edited": false, "score": 1, "creation_date": 1565090961, "post_id": 57373377, "comment_id": 101234484, "body": "The easiest way is to cache the connection rather than injecting it around. I am not looking for any upvotes, but I have answered a question around caching connections in Lambda functions in the past. It is here: <a href=\"https://stackoverflow.com/questions/54947095/aws-lambda-mysql-caching/54947780#54947780\" title=\"aws lambda mysql caching\">stackoverflow.com/questions/54947095/aws-lambda-mysql-cachin&zwnj;&#8203;g/&hellip;</a>"}, {"owner": {"reputation": 5207, "user_id": 10950867, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/7gDBg.jpg?s=128&g=1", "display_name": "Thales Minussi", "link": "https://stackoverflow.com/users/10950867/thales-minussi"}, "edited": false, "score": 0, "creation_date": 1565091200, "post_id": 57373377, "comment_id": 101234609, "body": "Long story short: open database connections outside your function&#39;s handler so they can be reused in warm starts."}, {"owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "edited": false, "score": 1, "creation_date": 1565092179, "post_id": 57373377, "comment_id": 101235186, "body": "This is exactly what I would like to do, but Rust is not too friendly in this regard. I guess I will just use Arc and reference it."}], "tags": [], "owner": {"reputation": 1814, "user_id": 4193581, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/K7o5b.jpg?s=128&g=1", "display_name": "K Mo", "link": "https://stackoverflow.com/users/4193581/k-mo"}, "is_accepted": false, "score": 2, "last_activity_date": 1565085137, "creation_date": 1565085137, "answer_id": 57373377, "question_id": 57372760, "link": "https://stackoverflow.com/questions/57372760/how-to-pass-in-stateful-client-to-lambda-function/57373377#57373377", "title": "How to pass in stateful client to lambda function?", "body": "<p>DynamoDB is a web service, each request to it is treated as a distinct API call.</p>\n\n<p>There is no functionality to keep a client connection alive in the same way you would with a regular database connection (e.g. MySQL).</p>\n\n<p>My rust knowledge is a little lacking, so I don't know if http keepalive is set by default with the DynamoDBClient, but making sure http keepalive is set will help performance.</p>\n"}, {"tags": [], "owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "is_accepted": true, "score": 0, "last_activity_date": 1565093868, "creation_date": 1565093868, "answer_id": 57375880, "question_id": 57372760, "link": "https://stackoverflow.com/questions/57372760/how-to-pass-in-stateful-client-to-lambda-function/57375880#57375880", "title": "How to pass in stateful client to lambda function?", "body": "<p>After considering all the options I decided to implement this with lazy_static.</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nlazy_static! {\n    static ref DYNAMODB_CLIENT: DynamoDbClient = DynamoDbClient::new(Region::EuCentral1);\n}\n</code></pre>\n\n<p>This is getting instantiated at run time and can be used internally in the module without any problems.</p>\n"}], "owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 57375880, "answer_count": 2, "score": 1, "last_activity_date": 1565093868, "creation_date": 1565083001, "question_id": 57372760, "link": "https://stackoverflow.com/questions/57372760/how-to-pass-in-stateful-client-to-lambda-function", "title": "How to pass in stateful client to lambda function?", "body": "<p>I am working on a simple Lambda function and I was wondering if I could pass in client (dynamodb this time) to the handler, so we do not re-connect for every request.</p>\n\n<p>The macro is defined here:</p>\n\n<p><a href=\"https://docs.rs/lambda_http/0.1.1/lambda_http/macro.lambda.html\" rel=\"nofollow noreferrer\">https://docs.rs/lambda_http/0.1.1/lambda_http/macro.lambda.html</a> 3</p>\n\n<p>My function so far:</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    simple_logger::init_with_level(log::Level::Debug)?;\n    info!(\"Starting up...\");\n    let dynamodb_client = DynamoDbClient::new(Region::EuCentral1);\n    lambda!(router);\n    return Ok(());\n}\n\nfn router(req: Request, ctx: Context) -&gt; Result&lt;impl IntoResponse, HandlerError&gt; {\nlet h_req = HReq {\n    http_path: req.uri().path(),\n    http_method: req.method(),\n};\n\nmatch h_req {\n    HReq {\n        http_path: \"/login\",\n        http_method: &amp;Method::POST,\n    } =&gt; user_login(req, ctx),\n\n    _ =&gt; {\n        error!(\n            \"Not supported http method or path {}, {}\",\n            h_req.http_path, h_req.http_method\n        );\n        let mut resp = Response::default();\n        *resp.status_mut() = StatusCode::METHOD_NOT_ALLOWED;\n        Ok(resp)\n    }\n}\n</code></pre>\n\n<p>}</p>\n\n<p>Is it possible to extend this macro to have a second option so I can add the client all the way down to the functions which are actually talking to the database?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565083687, "post_id": 57372517, "comment_id": 101230691, "body": "Then please accept the suggested duplicate :)"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1565083693, "post_id": 57372517, "comment_id": 101230698, "body": "What would be an actual use case of this that is justifiable and impossible to do in any other way? Normally traits are used exactly when you <i>don&#39;t care</i> about the type of whatever struct that still requires <i>functionality</i> that you expect. I&#39;d suggest using enums and have each type stored in it&#39;s own variant. More/less typing isn&#39;t really an argument as you type more by checking for types and trying to downcast..."}, {"owner": {"reputation": 1098, "user_id": 989615, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bdaff808be1ee4e0378cda9412401af2?s=128&d=identicon&r=PG", "display_name": "krojew", "link": "https://stackoverflow.com/users/989615/krojew"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1565083818, "post_id": 57372517, "comment_id": 101230766, "body": "@Sahsahae one use case is using mocks in tests, where I&#39;m sure what object I&#39;m expecting, but I have to deal with boxes and dyn traits."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565083944, "post_id": 57372517, "comment_id": 101230834, "body": "I think you should provide a minimal example in your question, that reflects your actual problem, it will be easier for people to answer for that specific issue."}], "owner": {"reputation": 1098, "user_id": 989615, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/bdaff808be1ee4e0378cda9412401af2?s=128&d=identicon&r=PG", "display_name": "krojew", "link": "https://stackoverflow.com/users/989615/krojew"}, "delete_vote_count": 1, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 403, "favorite_count": 0, "closed_date": 1565083766, "answer_count": 0, "score": 0, "last_activity_date": 1565082181, "creation_date": 1565082181, "question_id": 57372517, "link": "https://stackoverflow.com/questions/57372517/rust-downcast-dyn-trait", "closed_reason": "Duplicate", "title": "Rust - downcast dyn trait", "body": "<p>I have a Box I would like to downcast to specific struct. I know it's possible for Box, but since I don't use Any, I can't do that. Is there a way to downcast dyn?</p>\n"}, {"tags": ["mongodb", "rust", "rust-actix"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565082070, "post_id": 57372294, "comment_id": 101229800, "body": "Maybe you are just missing an <code>unwrap</code> (better: proper error handling)? <code>conn.unwrap().collections...</code>"}, {"owner": {"reputation": 2589, "user_id": 1571361, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/oEJ1d.png?s=128&g=1", "display_name": "ToBe", "link": "https://stackoverflow.com/users/1571361/tobe"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565082275, "post_id": 57372294, "comment_id": 101229919, "body": "<code>No method named &#39;unwrap&#39; found</code> Didnt help. Im pretty new to rust, i have to admit ;). Proper error handling and much more architecture would follow after this poc works."}], "answers": [{"comments": [{"owner": {"reputation": 2589, "user_id": 1571361, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/oEJ1d.png?s=128&g=1", "display_name": "ToBe", "link": "https://stackoverflow.com/users/1571361/tobe"}, "edited": false, "score": 0, "creation_date": 1567417093, "post_id": 57739818, "comment_id": 101945756, "body": "In my case, the compiler already seems to knopw what type <code>coll</code>is. Sadly it&#39;s not <code>ThreadedDatabase</code> but <code>r2d2::PooledConnection&lt;r2d2_mongodb::MongodbConnectionManage&zwnj;&#8203;r&gt;</code>. Adding the use didnt change that."}, {"owner": {"reputation": 418, "user_id": 537711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22acf55bf0f9b45765cb1672fa3157b8?s=128&d=identicon&r=PG", "display_name": "sigurdga", "link": "https://stackoverflow.com/users/537711/sigurdga"}, "reply_to_user": {"reputation": 2589, "user_id": 1571361, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/oEJ1d.png?s=128&g=1", "display_name": "ToBe", "link": "https://stackoverflow.com/users/1571361/tobe"}, "edited": false, "score": 1, "creation_date": 1567764459, "post_id": 57739818, "comment_id": 102070120, "body": "Adding <code>use mongodb::db::ThreadedDatabase</code> worked fine for me :) My mongodb was newer and wanted <code>find_one</code> instead of <code>findOne</code>. @ToBe: it was also <code>collection</code> and not <code>collections</code> to get it working for me."}, {"owner": {"reputation": 2589, "user_id": 1571361, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/oEJ1d.png?s=128&g=1", "display_name": "ToBe", "link": "https://stackoverflow.com/users/1571361/tobe"}, "edited": false, "score": 0, "creation_date": 1568035450, "post_id": 57739818, "comment_id": 102136061, "body": "That was it, tnx!"}], "tags": [], "owner": {"reputation": 36, "user_id": 12003663, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/d07e855cf81d2969733c889cf9286ea3?s=128&d=identicon&r=PG", "display_name": "kuma", "link": "https://stackoverflow.com/users/12003663/kuma"}, "is_accepted": true, "score": 2, "last_activity_date": 1567269096, "creation_date": 1567269096, "answer_id": 57739818, "question_id": 57372294, "link": "https://stackoverflow.com/questions/57372294/how-to-use-mongodb-with-r2d2-and-actix-in-rust/57739818#57739818", "title": "How to use MongoDB with r2d2 and actix in rust", "body": "<pre><code>10 |     let coll = conn.collection(\"simulations\");\n   |                     ^^^^^^^^^^\n   |\n   = help: items from traits can only be used if the trait is in scope\n   = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n           `use crate::mongodb::db::ThreadedDatabase;`\n</code></pre>\n\n<p>my compiler told me to add <code>mongodb::db::ThreadedDatabase</code> in scope.</p>\n"}], "owner": {"reputation": 2589, "user_id": 1571361, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/oEJ1d.png?s=128&g=1", "display_name": "ToBe", "link": "https://stackoverflow.com/users/1571361/tobe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1075, "favorite_count": 0, "accepted_answer_id": 57739818, "answer_count": 1, "score": 2, "last_activity_date": 1567269096, "creation_date": 1565081487, "question_id": 57372294, "link": "https://stackoverflow.com/questions/57372294/how-to-use-mongodb-with-r2d2-and-actix-in-rust", "title": "How to use MongoDB with r2d2 and actix in rust", "body": "<p>I am trying to make a basic web application with the <strong>rust</strong> language, using the <strong>actix</strong> framework and <strong>r2d2</strong> with <strong>mongodb</strong> as the database. I could not find any complete and working documentation on how to archive this. Maybe someone can help me out here.</p>\n\n<p>The problem is, that i can't seem to get a mongodb connection from the r2d2 connection pool. Sadly this part isnt covered in any documentation i found.</p>\n\n<p>Some links i found:</p>\n\n<ul>\n<li>Using r2d2 with actix: <a href=\"https://github.com/actix/examples/blob/master/r2d2/src/main.rs\" rel=\"nofollow noreferrer\">https://github.com/actix/examples/blob/master/r2d2/src/main.rs</a></li>\n<li>Using mongodb with r2d2: <a href=\"https://docs.rs/r2d2-mongodb/0.2.2/r2d2_mongodb/\" rel=\"nofollow noreferrer\">https://docs.rs/r2d2-mongodb/0.2.2/r2d2_mongodb/</a></li>\n</ul>\n\n<hr>\n\n<p>This part creates the connection pool and hands it to actix.</p>\n\n<pre><code>fn main() {\n    std::env::set_var(\"RUST_LOG\", \"actix_web=info\");\n    env_logger::init();\n\n    let manager = MongodbConnectionManager::new(\n        ConnectionOptions::builder()\n            .with_host(\"localhost\", 27017)\n            .with_db(\"mydatabase\")\n            .build()\n    );    \n\n    let pool = Pool::builder()\n        .max_size(16)\n        .build(manager)\n        .unwrap();\n\n    HttpServer::new( move || {\n        App::new()\n            // enable logger\n            .wrap(middleware::Logger::default())\n            // store db pool in app state\n            .data(pool.clone())\n            // register simple handler, handle all methods\n            .route(\"/view/{id}\", web::get().to(view))\n    })\n    .bind(\"127.0.0.1:8080\")\n    .expect(\"Can not bind to port 8080\")\n    .run()\n    .unwrap();\n}\n</code></pre>\n\n<p>This is the handler function trying to access the connection pool</p>\n\n<pre><code>fn view(req: HttpRequest, \n        pool: web::Data&lt;Pool&lt;MongodbConnectionManager&gt;&gt;) -&gt; impl Responder {\n\n    let id = req.match_info().get(\"id\").unwrap_or(\"unknown\");\n    let conn = pool.get().unwrap();\n    let result = conn.collections(\"content\").findOne(None, None).unwrap();\n\n   // HERE BE CODE ...\n\n    format!(\"Requested id: {}\", &amp;id)\n}\n</code></pre>\n\n<hr>\n\n<p>This is the error showing my problem. The conn variable doesnt seem to be a propper mongodb connection.</p>\n\n<pre><code>error[E0599]: no method named `collections` found for type `std::result::Result&lt;r2d2::PooledConnection&lt;r2d2_mongodb::MongodbConnectionManager&gt;, r2d2::Error&gt;` in the current scope  --&gt; src\\main.rs:29:23\n   |\n29 |     let result = conn.collections(\"content\").findOne(None, None).unwrap();\n   |   \n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565078037, "post_id": 57371318, "comment_id": 101227788, "body": "Can you try to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>? E.g. what is <code>RenderableIterator</code>, what is <code>renderables</code>, <code>stacking_order</code>, <code>translate</code> and so on? Please go to <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">the playground</a> and try to create a example that reproduces your problem. Then copy and paste the code into your question (after hitting <code>rustfmt</code> in the upper right corner) by <a href=\"https://stackoverflow.com/posts/57371318/edit\">edit</a>ing your question."}, {"owner": {"reputation": 11, "user_id": 11888228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d156f9e093ea6ce9f38174f064ecd74e?s=128&d=identicon&r=PG&f=1", "display_name": "fdasfdsafsdaf", "link": "https://stackoverflow.com/users/11888228/fdasfdsafsdaf"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565079901, "post_id": 57371318, "comment_id": 101228647, "body": "Added a link to the playgroud"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565080338, "post_id": 57371318, "comment_id": 101228869, "body": "Please read: <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-or\" title=\"why is it discouraged to accept a reference to a string string vec vec or\">stackoverflow.com/questions/40006219/&hellip;</a>"}, {"owner": {"reputation": 11, "user_id": 11888228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d156f9e093ea6ce9f38174f064ecd74e?s=128&d=identicon&r=PG&f=1", "display_name": "fdasfdsafsdaf", "link": "https://stackoverflow.com/users/11888228/fdasfdsafsdaf"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565082405, "post_id": 57371318, "comment_id": 101230004, "body": "@hellow That looks like a good idea - I&#39;ll look into it! Thanks (but my issue is still there)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565128901, "post_id": 57371318, "comment_id": 101253148, "body": "Iterators are really not convenient for this kind of thing. I don&#39;t think you&#39;ll be able to be more concise than your original code, which seems perfectly fine."}], "owner": {"reputation": 11, "user_id": 11888228, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d156f9e093ea6ce9f38174f064ecd74e?s=128&d=identicon&r=PG&f=1", "display_name": "fdasfdsafsdaf", "link": "https://stackoverflow.com/users/11888228/fdasfdsafsdaf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 79, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565081587, "creation_date": 1565077878, "last_edit_date": 1565081587, "question_id": 57371318, "link": "https://stackoverflow.com/questions/57371318/rust-shared-reference-between-iterator-and-iteratee", "title": "Rust shared reference between iterator and iteratee", "body": "<p>I'm operating f32 array that represents multiple drawable elements (like SVG paths). Each drawable can indicate how many elements in the array it takes up, and then each drawable occurs immediately after the previous.</p>\n\n<p>I want to mutate parts of the array whilst iterating over it. I did this as a while loop, which worked. But I wanted to clean it up and make an iterator for this, which makes the borrow checker complain</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn translate_original(renderables: &amp;mut Vec&lt;f32&gt;, tx: f32, ty: f32) {\n    // This works\n    let mut i = 0;\n    while i &lt; renderables.len() {\n        translate_renderable(renderables, i, tx, ty);\n        i = next_renderable(renderables, i);\n    }\n}\n\nfn translate_iterator(renderables: &amp;mut Vec&lt;f32&gt;, tx: f32, ty: f32) {\n    // This fails\n    RenderableIterator::new(renderables)\n        .for_each(|i| translate_renderable(renderables, i, tx, ty));\n}\n\nfn main() {\n    let mut data_1: Vec&lt;f32&gt; = vec![\n        // renderable 1\n        2., 10., 10., 20., 20.,\n        // renderable 2\n        3., 30., 30., 40., 40., 50., 50.\n    ];\n    let mut data_2 = data_1.clone();\n    translate_original(&amp;mut data_1, 5., 5.);\n    translate_iterator(&amp;mut data_2, 5., 5.);\n}\n\n// Set up\nfn next_renderable(renderables: &amp;Vec&lt;f32&gt;, i: usize) -&gt; usize {\n    i + 1 + (renderables[i] as usize)\n}\n\nfn translate_renderable(renderables: &amp;mut Vec&lt;f32&gt;, i: usize, tx: f32, ty: f32) {\n    let from = i + 1;\n    let to = next_renderable(renderables, i);\n    for i in (from..to).step_by(2) {\n        renderables[i] += tx;\n        renderables[i + 1] += ty;\n    }\n}\n\npub struct RenderableIterator&lt;'a&gt; {\n    renderables: &amp;'a Vec&lt;f32&gt;,\n    i: usize,\n}\n\nimpl RenderableIterator&lt;'_&gt; {\n    pub fn new(renderables: &amp;Vec&lt;f32&gt;) -&gt; RenderableIterator {\n        RenderableIterator { renderables, i: 0 }\n    }\n}\n\nimpl Iterator for RenderableIterator&lt;'_&gt; {\n    type Item = usize;\n\n    fn next(&amp;mut self) -&gt; Option&lt;usize&gt; {\n        if self.i &lt; self.renderables.len() {\n            let out = Some(self.i);\n            self.i = next_renderable(&amp;self.renderables, self.i);\n            out\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>I sort of understand why it's complaining - but to me it doesn't look any less safe than the while loop version. Is there a way to get the iterator version to work?</p>\n\n<p>Edit: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=57ef5939d5a1600b49207105c290f5f1\" rel=\"nofollow noreferrer\">Playground link, as requested</a></p>\n"}, {"tags": ["http", "service", "rust", "future", "hyper"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565077795, "post_id": 57371130, "comment_id": 101227671, "body": "Please try to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> next time, e.g. it is not necessary to define the <code>call</code> body. Just use <code>unimplemented!()</code>. Also make sure &quot;it compiles&quot;, e.g. there are no other errors (in your case it was that <code>Future</code> was imported twice). Also please use <code>rustfmt</code> to make sure, that your code is properly formatted. Last but not least, include the <b>full</b> error message, not just a snippet. But apart from that, well done ;)"}, {"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1565077959, "post_id": 57371130, "comment_id": 101227745, "body": "Will pay more attention next time. I noticed the double import and was editing but you were quicker. Thanks for the edit"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1565078366, "post_id": 57371130, "comment_id": 101227932, "body": "It seems that <a href=\"https://github.com/hyperium/hyper/tree/master/examples\" rel=\"nofollow noreferrer\">all examples</a> are now using <code>async fn</code> and not a struct. Also <a href=\"https://docs.rs/hyper/0.12.33/hyper/service/index.html\" rel=\"nofollow noreferrer\">the doc</a> states: <i>&quot;While it&#39;s possible to implement Service for a type manually, the helpers service_fn and service_fn_ok should be sufficient for most cases.&quot;</i> and <i>&quot;Resources that need to be shared by all Services can be put into a MakeService, and then passed to individual Services when make_service is called.&quot;</i>"}], "owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 366, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1565077702, "creation_date": 1565077160, "last_edit_date": 1565077702, "question_id": 57371130, "link": "https://stackoverflow.com/questions/57371130/hyper-0-12-x-implementing-service-for-a-struct", "title": "Hyper 0.12.x : Implementing Service for a struct", "body": "<p>In hyper 0.12.33, how do I implement <code>hyper::service::Service</code> for a struct ?</p>\n\n<p>I have tried the following but it is not sufficient as it seems that in 0.12 the <code>Future</code> trait is not provided automatically anymore for a struct that implements <code>Service</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::Future;\nuse hyper::{Body, Request, Response};\n\nstruct MyStruct;\n\nimpl MyStruct {\n    pub fn new() -&gt; Self {\n        MyStruct\n    }\n}\n\nimpl hyper::service::Service for MyStruct {\n    type ReqBody = Body;\n    type ResBody = Body;\n    type Error = hyper::Error;\n    type Future = Box&lt;Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt;&gt;;\n\n    fn call(&amp;mut self, req: Request&lt;Body&gt;) -&gt; Self::Future {\n        unimplemented!()\n    }\n}\n\nfn main() {\n    let addr = \"0.0.0.0:8080\".parse().unwrap();\n    let server = hyper::Server::bind(&amp;addr)\n        .serve(|| MyStruct::new())\n        .map_err(|e| eprintln!(\"server error: {}\", e));\n\n    hyper::rt::run(server);\n}\n</code></pre>\n\n<p>gives me the build error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Standard Error\n\n   Compiling playground v0.0.1 (/playground)\nerror[E0277]: the trait bound `MyStruct: futures::future::Future` is not satisfied\n  --&gt; src/main.rs:26:10\n   |\n26 |         .serve(|| MyStruct::new())\n   |          ^^^^^ the trait `futures::future::Future` is not implemented for `MyStruct`\n   |\n   = note: required because of the requirements on the impl of `hyper::service::make_service::MakeServiceRef&lt;hyper::server::tcp::addr_stream::AddrStream&gt;` for `[closure@src/main.rs:26:16: 26:34]`\n\nerror[E0599]: no method named `map_err` found for type `hyper::server::Server&lt;hyper::server::tcp::AddrIncoming, [closure@src/main.rs:26:16: 26:34]&gt;` in the current scope\n  --&gt; src/main.rs:27:10\n   |\n27 |         .map_err(|e| eprintln!(\"server error: {}\", e));\n   |          ^^^^^^^\n   |\n   = note: the method `map_err` exists but the following trait bounds were not satisfied:\n           `&amp;mut hyper::server::Server&lt;hyper::server::tcp::AddrIncoming, [closure@src/main.rs:26:16: 26:34]&gt; : futures::future::Future`\n           `hyper::server::Server&lt;hyper::server::tcp::AddrIncoming, [closure@src/main.rs:26:16: 26:34]&gt; : futures::future::Future`\n</code></pre>\n"}, {"tags": ["rust", "future"], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1565100160, "post_id": 57377607, "comment_id": 101240159, "body": "<i>It&#39;s true, Receiver does not implement Future; only Pin&lt;&amp;mut Receiver&gt; does.</i> In this case using <code>poll_unpin</code> would be a quicker solution but not sure is there any pitfall using <code>poll_unpin</code> or not. I would like to know if it is applicable for this problem ?"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1565117148, "post_id": 57377607, "comment_id": 101248763, "body": "@&#214;merErden In this specific situation, that certainly seems to be the simpler solution, and avoids using <code>unsafe</code> (at least directly). Thanks for that!"}, {"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1565225977, "post_id": 57377607, "comment_id": 101289326, "body": "For future reference for myself and anyone else: Keep in mind that you may get this error even if you&#39;re implementing the trait, as there&#39;s currently a transition from 0.1 to 0.3 Futures. Hopefully this transition period will be relatively short, but this is due to the same reason linked in the answer."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1565100999, "last_edit_date": 1565100999, "creation_date": 1565099384, "answer_id": 57377607, "question_id": 57369123, "link": "https://stackoverflow.com/questions/57369123/no-method-named-poll-found-for-a-type-that-implements-future/57377607#57377607", "title": "No method named `poll` found for a type that implements `Future`", "body": "<p>It's true, <code>Receiver</code> does not implement <code>Future</code>; only <strong><code>Pin&lt;&amp;mut Receiver&gt;</code></strong> does. You need to <em>project</em> the pinning from your type to the field.</p>\n\n<h2>When the underlying type may not implement <code>Unpin</code></h2>\n\n<pre><code>impl Future for ShutdownHandle {\n    type Output = ();\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        // I copied this code from Stack Overflow without reading the text that\n        // told me how to verify that this code uses `unsafe` correctly.\n        unsafe { self.map_unchecked_mut(|s| &amp;mut s.receiver) }.poll(cx).map(|_| ())\n    }\n}\n</code></pre>\n\n<p>You must read the <a href=\"https://doc.rust-lang.org/std/pin/index.html#projections-and-structural-pinning\" rel=\"noreferrer\"><code>pin</code> module</a> to thoroughly understand the requirements to use <code>unsafe</code> here.</p>\n\n<h3>A cleaner solution</h3>\n\n<p>I like to use a helper library, such as <a href=\"https://docs.rs/pin-project/0.3.4/pin_project/\" rel=\"noreferrer\">pin_project</a>, to handle more complicated types of projection:</p>\n\n<pre><code>#[unsafe_project(Unpin)]\npub struct ShutdownHandle {\n    #[pin]\n    sender: oneshot::Sender&lt;()&gt;,\n    #[pin]\n    receiver: oneshot::Receiver&lt;()&gt;,\n}\n\nimpl Future for ShutdownHandle {\n    type Output = ();\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        let this = self.project();\n        this.receiver.poll(cx).map(|_| ())\n    }\n}\n</code></pre>\n\n<h2>When the underlying type implements <code>Unpin</code></h2>\n\n<p><a href=\"https://stackoverflow.com/questions/57369123/no-method-named-poll-found-for-a-type-that-implements-future/57377607?noredirect=1#comment101240159_57377607\">\u00d6mer Erden points out</a> that the futures-preview crate provides <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.17/futures/future/trait.FutureExt.html#method.poll_unpin\" rel=\"noreferrer\"><code>FutureExt::poll_unpin</code></a>. This method takes a mutable reference to a type that implements <a href=\"https://doc.rust-lang.org/std/marker/trait.Unpin.html\" rel=\"noreferrer\"><code>Unpin</code></a> and creates a brand new <code>Pin</code> with it. </p>\n\n<p>Since <code>oneshot::Receiver</code> does implement <code>Unpin</code>, this can be used here:</p>\n\n<pre><code>impl Future for ShutdownHandle {\n    type Output = ();\n\n    fn poll(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        self.receiver.poll_unpin(cx).map(|_| ())\n    }\n}\n</code></pre>\n\n<h2>See also</h2>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/56058494/155423\">When is it safe to move a member value out of a pinned future?</a></li>\n<li><a href=\"https://stackoverflow.com/q/44437123/155423\">Why is a trait not implemented for a type that clearly has it implemented?</a></li>\n</ul>\n"}], "owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3512, "favorite_count": 1, "accepted_answer_id": 57377607, "answer_count": 1, "score": 11, "last_activity_date": 1565100999, "creation_date": 1565066986, "last_edit_date": 1565099601, "question_id": 57369123, "link": "https://stackoverflow.com/questions/57369123/no-method-named-poll-found-for-a-type-that-implements-future", "title": "No method named `poll` found for a type that implements `Future`", "body": "<p>I am attempting to create a struct that will allow someone to call <code>.shutdown()</code>, which will resolve a future (that is otherwise pending). It can only be called once. In the implementation of the <code>Future</code> trait, I receive an error that <code>poll</code> is not defined, despite it being present in <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.17/futures/channel/oneshot/struct.Receiver.html#implementations\" rel=\"noreferrer\">the documentation</a> (under <code>impl Future</code>).</p>\n\n<p>Though I am using <code>std::future::Future</code> as the <code>impl</code>, I tried adding <code>use futures::prelude::*</code>, which would bring the preview trait into scope. Both RLS and rustc inform me that the import is unused, so that's not the issue.</p>\n\n<p>Note that I am <em>not</em> using a simple boolean flag, as I intend for this to be able to be callable from any thread \u2014 that's an implementation detail that is irrelevant here.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::channel::oneshot; // futures-preview@0.3.0-alpha.17\nuse std::{\n    future::Future,\n    pin::Pin,\n    task::{Context, Poll},\n};\n\npub struct ShutdownHandle {\n    sender: oneshot::Sender&lt;()&gt;,\n    receiver: oneshot::Receiver&lt;()&gt;,\n}\n\nimpl ShutdownHandle {\n    pub fn new() -&gt; Self {\n        let (sender, receiver) = oneshot::channel();\n        Self { sender, receiver }\n    }\n\n    pub fn shutdown(self) -&gt; Result&lt;(), ()&gt; {\n        self.sender.send(())\n    }\n}\n\nimpl Future for ShutdownHandle {\n    type Output = ();\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        self.receiver.poll(&amp;mut cx).map(|_| ())\n    }\n}\n\nfn main() {\n    let runner = ShutdownHandle::new();\n    assert!(runner.shutdown().is_ok());\n}\n</code></pre>\n\n<p>I receive the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `poll` found for type `futures_channel::oneshot::Receiver&lt;()&gt;` in the current scope\n  --&gt; src/main.rs:28:23\n   |\n28 |         self.receiver.poll(&amp;mut cx).map(|_| ())\n   |                       ^^^^\n</code></pre>\n\n<p>What am I missing? Surely there's some way to \"pass through\" the polling. I am using nightly (2019-07-18).</p>\n"}, {"tags": ["rust", "smart-pointers", "interior-mutability"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1565049806, "post_id": 57367092, "comment_id": 101220622, "body": "<i>which I am now encountering</i> \u2014 where are you encountering such a strange type?"}, {"owner": {"reputation": 5405, "user_id": 4619958, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/cVA9W.png?s=128&g=1", "display_name": "ch271828n", "link": "https://stackoverflow.com/users/4619958/ch271828n"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1599919861, "post_id": 57367092, "comment_id": 112927607, "body": "@Shepmaster I see it (and then see this question) in the BOOK! I am astonished when I see it in the book. Hope I misunderstand something <a href=\"https://doc.rust-lang.org/book/ch15-06-reference-cycles.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch15-06-reference-cycles.html</a>"}, {"owner": {"reputation": 5405, "user_id": 4619958, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/cVA9W.png?s=128&g=1", "display_name": "ch271828n", "link": "https://stackoverflow.com/users/4619958/ch271828n"}, "edited": false, "score": 0, "creation_date": 1599921636, "post_id": 57367092, "comment_id": 112928074, "body": "Ok I do know it. In that example the (uncommon) usage is correct and non replaceable."}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "edited": false, "score": 0, "creation_date": 1565049386, "post_id": 57367267, "comment_id": 101220571, "body": "I see. Does that mean RefCell&lt;Rc is when you want to be able to mutate whatever Rc is pointing to?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "edited": false, "score": 3, "creation_date": 1565049454, "post_id": 57367267, "comment_id": 101220582, "body": "It would be for when you have one Rc and I want to replace it with a different one. None of the clones of the original Rc would be affected."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 13, "last_activity_date": 1565050014, "last_edit_date": 1565050014, "creation_date": 1565048860, "answer_id": 57367267, "question_id": 57367092, "link": "https://stackoverflow.com/questions/57367092/what-is-the-difference-between-rcrefcellt-and-refcellrct/57367267#57367267", "title": "What is the difference between Rc&lt;RefCell&lt;T&gt;&gt; and RefCell&lt;Rc&lt;T&gt;&gt;?", "body": "<blockquote>\n  <p>Do these effectively give the same result?</p>\n</blockquote>\n\n<p>They are very different.</p>\n\n<p><code>Rc</code> is a pointer with shared ownership while <code>RefCell</code> provides interior mutability. The order in which they are composed makes a big difference to how they can be used.</p>\n\n<p>Usually, you compose them as <code>Rc&lt;RefCell&lt;T&gt;&gt;</code>; the whole thing is shared and each shared owner gets to mutate the contents. The effect of mutating the contents will be seen by all of the shared owners of the outer <code>Rc</code> because the inner data is shared.</p>\n\n<p>You can't share a <code>RefCell&lt;Rc&lt;T&gt;&gt;</code> except by reference, so this configuration is more limited in how it can be used.  In order to mutate the inner data, you would need to mutably borrow from the outer <code>RefCell</code>, but then you'd have access to an <em>immutable</em> <code>Rc</code>. The only way to mutate it would be to replace it with a completely different <code>Rc</code>. For example:</p>\n\n<pre><code>let a = Rc::new(1);\nlet b = Rc::new(2);\n\nlet c = RefCell::new(Rc::clone(&amp;a));\nlet d = RefCell::new(Rc::clone(&amp;a));\n\n*d.borrow_mut() = Rc::clone(&amp;b); // this doesn't affect c\n</code></pre>\n\n<p>There is no way to mutate the values in <code>a</code> and <code>b</code>. This seems far less useful than <code>Rc&lt;RefCell&lt;T&gt;&gt;</code>.</p>\n"}], "owner": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2435, "favorite_count": 3, "answer_count": 1, "score": 10, "last_activity_date": 1565050014, "creation_date": 1565047070, "last_edit_date": 1565049768, "question_id": 57367092, "link": "https://stackoverflow.com/questions/57367092/what-is-the-difference-between-rcrefcellt-and-refcellrct", "title": "What is the difference between Rc&lt;RefCell&lt;T&gt;&gt; and RefCell&lt;Rc&lt;T&gt;&gt;?", "body": "<p>The Rust documentation covers <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> pretty extensively but doesn't go into <code>RefCell&lt;Rc&lt;T&gt;&gt;</code>, which I am now encountering.</p>\n\n<p>Do these effectively give the same result? Is there an important difference between them?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1565045782, "post_id": 57366914, "comment_id": 101219970, "body": "That&#39;s how I&#39;d do it \u2014 it&#39;s clear what is being performed. You could do <code>result.map(|_| 1).map_err(|_| -1).unwrap()</code>, but then you&#39;re creating needless closures."}], "answers": [{"comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1565046567, "post_id": 57367019, "comment_id": 101220103, "body": "Why is <code>#[repr(transparent)]</code> necessary? It wouldn&#39;t affect how you&#39;d write the code, and I&#39;m fairly certain the compiler makes that optimization anyways."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 1, "creation_date": 1565046701, "post_id": 57367019, "comment_id": 101220126, "body": "@jhpratt Because it would be UB without <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1758-repr-transparent.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a>"}, {"owner": {"reputation": 11609, "user_id": 233944, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/231ea4f1017c30d4fabcda7671c91f27?s=128&d=identicon&r=PG", "display_name": "TheNextman", "link": "https://stackoverflow.com/users/233944/thenextman"}, "edited": false, "score": 0, "creation_date": 1565110261, "post_id": 57367019, "comment_id": 101245847, "body": "Thanks for the detailed answer. I had not thought of creating an enum but it&#39;s a very neat solution. I marked @shepmaster response as the answer, because it is closest in spirit to what I&#39;m trying to achieve."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1565050906, "last_edit_date": 1565050906, "creation_date": 1565046401, "answer_id": 57367019, "question_id": 57366914, "link": "https://stackoverflow.com/questions/57366914/how-can-i-map-result-e-into-a-numeric-error-code/57367019#57367019", "title": "How can I map Result&lt;(), E&gt; into a numeric error code?", "body": "<p>You could use <a href=\"https://doc.rust-lang.org/nomicon/other-reprs.html#reprtransparent\" rel=\"nofollow noreferrer\"><code>repr(transparent)</code></a> to create a type where you could implement <a href=\"https://doc.rust-lang.org/std/convert/trait.From.html\" rel=\"nofollow noreferrer\"><code>From</code></a> and that still represent a <code>i32</code>, this allow to compile check that you transform your result correctly assuming you didn't have bug in your <code>from()</code> implementation so maybe add some unit tests.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type MyResult = Result&lt;(), ()&gt;;\n\nfn my_rust_function() -&gt; MyResult {\n    Ok(())\n}\n\n#[repr(transparent)]\npub struct CResult {\n    code: i32,\n//    code: libc::c_int, // if your C lib expect a `c_int` and not a `i32`\n}\n\nimpl From&lt;MyResult&gt; for CResult {\n    fn from(result: MyResult) -&gt; Self {\n        let code = match result {\n            Ok(_) =&gt; 1,\n            Err(_) =&gt; -1,\n        };\n        Self { code }\n    }\n}\n\n#[allow(non_snake_case)]\npub extern \"C\" fn Called_From_C() -&gt; CResult {\n    let result = my_rust_function();\n\n    result.into()\n}\n</code></pre>\n\n<hr>\n\n<p>You could also use <code>enum</code> with <a href=\"https://doc.rust-lang.org/nomicon/other-reprs.html#repru-repri\" rel=\"nofollow noreferrer\"><code>repr(i32)</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(i32)]\npub enum CResult {\n    NoError = 1,\n    Error = -1,\n}\n\nimpl From&lt;MyResult&gt; for CResult {\n    fn from(result: MyResult) -&gt; Self {\n        match result {\n            Ok(_) =&gt; CResult::NoError,\n            Err(_) =&gt; CResult::Error,\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>In nightly, you could also implement <a href=\"https://doc.rust-lang.org/std/ops/trait.Try.html\" rel=\"nofollow noreferrer\"><code>Try</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(try_trait)]\nuse std::ops::Try;\n\ntype MyResult = Result&lt;(), ()&gt;;\n\nfn my_rust_function() -&gt; MyResult {\n    Ok(())\n}\n\n#[repr(i32)]\npub enum CResult {\n    NoError = 1,\n    Error = -1,\n}\n\nimpl From&lt;MyResult&gt; for CResult {\n    fn from(result: MyResult) -&gt; Self {\n        match result {\n            Ok(_) =&gt; CResult::NoError,\n            Err(_) =&gt; CResult::Error,\n        }\n    }\n}\n\nimpl From&lt;CResult&gt; for MyResult {\n    fn from(cresult: CResult) -&gt; Self {\n        match cresult {\n            CResult::NoError =&gt; Ok(()),\n            CResult::Error =&gt; Err(()),\n        }\n    }\n}\n\nimpl Try for CResult {\n    type Ok = ();\n    type Error = ();\n\n    fn into_result(self) -&gt; MyResult {\n        self.into()\n    }\n\n    fn from_ok(_: &lt;Self as Try&gt;::Ok) -&gt; Self {\n        Self::NoError\n    }\n\n    fn from_error(_: &lt;Self as Try&gt;::Error) -&gt; Self {\n        Self::Error\n    }\n}\n\n#[allow(non_snake_case)]\npub extern \"C\" fn Called_From_C() -&gt; CResult {\n    let _ = my_rust_function()?;\n\n    CResult::NoError\n}\n</code></pre>\n\n<hr>\n\n<p>Note: Be careful with the enumeration one, make sure your implementation is compatible. <code>#[repr(libc::c_int)]</code> is what we really want but I don't know any way to express this in Rust. So maybe a structure with <code>repr(transparent)</code> is more safe if the lib expect a <code>c_int</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1565051547, "creation_date": 1565051547, "answer_id": 57367493, "question_id": 57366914, "link": "https://stackoverflow.com/questions/57366914/how-can-i-map-result-e-into-a-numeric-error-code/57367493#57367493", "title": "How can I map Result&lt;(), E&gt; into a numeric error code?", "body": "<p>I'd create an <em>extension trait</em>:</p>\n\n<pre><code>trait FfiError {\n    fn as_c_error(&amp;self) -&gt; i32;\n}\n\nimpl&lt;T, E&gt; FfiError for Result&lt;T, E&gt; {\n    fn as_c_error(&amp;self) -&gt; i32 {\n        match self {\n            Ok(_) =&gt; 1,\n            Err(_) =&gt; -1,\n        }\n    }\n}\n</code></pre>\n\n<p>Once it's brought into scope, you can call it like any other method:</p>\n\n<pre><code>pub extern \"C\" fn called_from_c() -&gt; i32 {\n    my_rust_function().as_c_error()\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/33376486/155423\">Is there a way other than traits to add methods to a type I don&#39;t own?</a></li>\n</ul>\n"}], "owner": {"reputation": 11609, "user_id": 233944, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/231ea4f1017c30d4fabcda7671c91f27?s=128&d=identicon&r=PG", "display_name": "TheNextman", "link": "https://stackoverflow.com/users/233944/thenextman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 57367493, "answer_count": 2, "score": 2, "last_activity_date": 1565051547, "creation_date": 1565045388, "last_edit_date": 1565051340, "question_id": 57366914, "link": "https://stackoverflow.com/questions/57366914/how-can-i-map-result-e-into-a-numeric-error-code", "title": "How can I map Result&lt;(), E&gt; into a numeric error code?", "body": "<p>I have a bunch of FFI functions that I call using C. The caller expects 1 for success, or -1 on failure. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Error;\n\nfn my_rust_function() -&gt; Result&lt;(), Error&gt; {\n    Ok(())\n}\n\n#[allow(non_snake_case)]\npub extern \"C\" fn Called_From_C() -&gt; i32 {\n    let result = my_rust_function();\n\n    match result {\n        Ok(_) =&gt; 1,\n        Err(_) =&gt; -1,\n    }\n}\n</code></pre>\n\n<p>Is there a more idiomatic way of converting my <code>Result&lt;(), Error&gt;</code> into the 1 / -1 return code?</p>\n"}, {"tags": ["generics", "reference", "rust", "dynamic-sizing"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1565038405, "post_id": 57365603, "comment_id": 101218166, "body": "Minimal example in the playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ef397fa4b13d4836f47fbc67659ccf1b\" rel=\"nofollow noreferrer\">Link</a>"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1565039789, "creation_date": 1565039789, "answer_id": 57366189, "question_id": 57365603, "link": "https://stackoverflow.com/questions/57365603/why-is-sized-required-to-pass-a-reference-to-a-generic-type-parameter/57366189#57366189", "title": "Why is ?Sized required to pass a reference to a generic type parameter?", "body": "<p>Most places where you use a type parameter, Rust will implicitly insert an additional <code>Sized</code> bound. That's because it is the most common case - if it didn't behave that way then you'd have to write the bound yourself <em>everywhere</em> and it would get repetitive and noisy.</p>\n\n<p>For example, your <code>take_part</code> function is exactly equivalent to this:</p>\n\n<pre><code>fn take_part_2&lt;'a, T: 'a + AsRef&lt;str&gt; + Sized&gt;(s: &amp;'a T) -&gt; &amp;'a str {\n    let b = s.as_ref().split(':').next().unwrap();\n    b\n}\n</code></pre>\n\n<p>However, your function's <em>implementation</em> does not require <code>T</code> to be <code>Sized</code> because it only ever uses it by reference. Adding <code>: ?Sized</code> effectively removes that implicit bound, communicating to the type checker that the size of <code>T</code> doesn't need to be known, so your function is as general as possible. In this case, making it more general allows it to be called with <code>T</code> as <code>str</code>, a dynamically sized type.</p>\n"}], "owner": {"reputation": 6982, "user_id": 909944, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/64f6310eff4faf9ecfd0567b94896d11?s=128&d=identicon&r=PG", "display_name": "slipheed", "link": "https://stackoverflow.com/users/909944/slipheed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 1, "accepted_answer_id": 57366189, "answer_count": 1, "score": 2, "last_activity_date": 1565056185, "creation_date": 1565036430, "last_edit_date": 1565056185, "question_id": 57365603, "link": "https://stackoverflow.com/questions/57365603/why-is-sized-required-to-pass-a-reference-to-a-generic-type-parameter", "title": "Why is ?Sized required to pass a reference to a generic type parameter?", "body": "<p>When I run the following code on Rust playground...</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn take_part_1&lt;'a&gt;(s: &amp;'a str) -&gt; &amp;'a str {\n    s.split(':').next().unwrap()\n}\n\nfn take_part_2&lt;'a, T: 'a + AsRef&lt;str&gt;&gt;(s: &amp;'a T) -&gt; &amp;'a str {\n    let b = s.as_ref().split(':').next().unwrap();\n    b\n}\n\nfn main() {\n    println!(\"{}\", take_part_1(\"a:b\"));\n    println!(\"{}\", take_part_2(\"a:b\"));\n}\n</code></pre>\n\n<p>... the compiler returns an error that doesn't make sense:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>12 |     println!(\"{}\", take_part_2(\"a:b\"));\n   |                    ^^^^^^^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `str`\n</code></pre>\n\n<p>I can fix it by adding <code>?Sized</code> like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn take_part_2&lt;'a, T: 'a + AsRef&lt;str&gt; + ?Sized&gt;(s: &amp;'a T) -&gt; &amp;'a str {\n</code></pre>\n\n<p>Why is this <code>?Sized</code> required (and why does the compiler point the error at the function call)? What does it do? Shouldn't I be able to pass the reference to an unsized object and have it just work?</p>\n\n<p>What confuses me is that the non-generic implementation works as you'd expect, with no requirements for <code>?Sized</code> (even though the compiler has pointed out that str isn't <code>Sized</code>!)</p>\n"}, {"tags": ["rust", "undefined-behavior", "unsafe"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 3, "creation_date": 1565034221, "post_id": 57364654, "comment_id": 101216595, "body": "You can create aliased mutable pointers without any <code>unsafe</code>, so just creating them must be safe, by definition. Using them is another matter, of course..."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565034912, "post_id": 57364654, "comment_id": 101216866, "body": "Your second example doesn&#39;t do what you think: <code>p1</code> and <code>p2</code> don&#39;t alias. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1ae3b9b8ef4c532dd4d5b2910ac4503d\" rel=\"nofollow noreferrer\">proof</a>"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565035444, "post_id": 57364654, "comment_id": 101217074, "body": "@trentcl Does that imply that it&#39;s indeed UB?  Because I just tried the obvious way, which is <code>p2 = p1</code> like you would do naturally... And then they point to the same memory location, like expected.  I don&#39;t really understand <i>that</i> low level kind of stuff, but this is completely wrong. It copies the value and then...?"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565035896, "post_id": 57364654, "comment_id": 101217236, "body": "... It actually copies value when dereferencing, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=940eacb177193d32041b717b49b1f992\" rel=\"nofollow noreferrer\">I changed it</a>, and it complains about moving out.  Is this a gotcha of unsafe Rust and is intended, or part of UB? Assigning a pointer directly (which does not move/copy value), shows same address. I also almost understand why it behaves like that, but also it is what I fear the most, if this is UB, then p2 = p1 will be too, and playing with raw pointers is impossible."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565037175, "post_id": 57364654, "comment_id": 101217704, "body": "It&#39;s not UB. It&#39;s temporary lvalue-promotion -- see <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">Why is it legal to borrow a temporary?</a> <code>unsafe { *p1 }</code> returns a copied <code>u8</code> and <code>&amp;mut</code> takes a reference to the copy. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c8d3c74b94cfa92dd377c1e2d3df5296\" rel=\"nofollow noreferrer\">You could write the same thing with no <code>unsafe</code> or raw pointers at all, although it&#39;s obviously not what you intended</a>."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565037507, "post_id": 57364654, "comment_id": 101217834, "body": "I see, that was just a bad example by me then. I wrote that part without thinking about Rust&#39;s move semantics that do not disappear just because code is unsafe.  And the safe version makes that mistake perfectly clear, I indeed would expect it to be copied in there. I&#39;ll edit my question with this. Sadly, the question remains the same for values that have really aliased raw pointers."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1565037581, "post_id": 57364654, "comment_id": 101217858, "body": "The first example is still UB because the compiler needs to take a <code>&amp;mut</code> reference to <code>*p</code> in order to perform <code>+=</code> on it. And yeah, you can&#39;t &quot;just&quot; move a (non-<code>Copy</code>) type out of a <code>*mut</code> pointer, because doing so is even <i>more</i> unsafe than just dereferencing the thing -- you need to use <code>ptr::read</code> for that."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565038150, "post_id": 57364654, "comment_id": 101218069, "body": "Using multiple mutable raw pointers to change the same memory location is not UB in Rust, even if these pointers have different types, which would be UB in C++. In a way, you get even more power in Rust than in C++. However, you need to be very careful to never create multiple mutable references at the same time. (I don&#39;t have time to expand this to a proper answer and find references, so leaving this as a comment.)"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1565038560, "post_id": 57364654, "comment_id": 101218217, "body": "@SvenMarnach when you do have time though, could you expand on it, possibly in form of the answer, so whoever finds this can have a clear answer?  And yes, multiple references  or references alongside pointers, aren&#39;t something that should ever happen, that part is clear now. That&#39;s why my question is split into 2 parts, one for <code>&amp;mut and *mut</code>, and one for <code>*mut and *mut</code>.  Also, strict aliasing wasn&#39;t on my mind at all, but if what you say is true, although it&#39;s not something I&#39;d be willing to use, especially after learning not to break it in C++, I&#39;m happy to learn that it&#39;s an option."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1565039082, "post_id": 57364654, "comment_id": 101218374, "body": "@trentcl The surprising bit in the first version of the second example is that <code>unsafe { &amp;mut *p1 }</code> is different from <code>&amp;mut unsafe { *p1 }</code>. The unsafe block turns the place expression into a value expression, thereby triggering a move."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565051228, "post_id": 57364654, "comment_id": 101220850, "body": "See also <a href=\"https://stackoverflow.com/q/30406852/155423\">How to use (unsafe) aliasing?</a>; <a href=\"https://stackoverflow.com/q/55664870/155423\">What are the differences between <code>*const T</code> and *mut T` raw pointers?</a>."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565074107, "post_id": 57364654, "comment_id": 101225867, "body": "@SvenManarch I found why it behaves like that. Dereference of a pointer must be contained inside unsafe {}, otherwise the value is attempted to be &quot;moved out&quot; into safe code for safety reasons. This in turn puts all the work on you, which is unsurprisingly the point of using unsafe. <a href=\"https://stackoverflow.com/a/47879906/11877195\">source</a>"}], "answers": [{"comments": [{"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1565039519, "post_id": 57366017, "comment_id": 101218510, "body": "Thank you. In the last part you mention that in multithreaded case this does not hold (due to data races), I think it&#39;s worth mentioning that it, as far as I understand, is cimcurvented by using <code>AtomicPtr&lt;T&gt;</code>, as that structure, I&#39;m quoting, <code>has the same in-memory representation as a *mut T</code>, and is worth a mention in the answer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1565040141, "post_id": 57366017, "comment_id": 101218696, "body": "@Sahsahae <code>AtomicPtr&lt;T&gt;</code> actually solves a different problem: how to synchronize access to the pointer itself (it doesn&#39;t synchronize the <code>T</code>). But perhaps I conveyed the wrong impression: it&#39;s still fine to use <code>*mut T</code> in multithreaded contexts, as long as the rules of references are preserved. Synchronizing access requires either atomicity (might as well use <code>AtomicU8</code>), or runtime checks (might as well use <code>Mutex&lt;u8&gt;</code> or <code>RwLock&lt;u8&gt;</code>). Both atomics and <code>Mutex</code>/<code>RwLock</code> are implemented using raw pointers."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1565083095, "post_id": 57366017, "comment_id": 101230360, "body": "As much as I&#39;d like to upvote, I am afraid that this is a tad simplistic. The rule <i>&quot;At any given time, you can have either one mutable reference or any number of immutable references.&quot;</i> does not rule out having multiple mutable references <b>in scope</b>. After all, when borrowing, the original mutable reference is still in scope, you&#39;re just not allowed to use it for the time of the borrow."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565093661, "post_id": 57366017, "comment_id": 101236049, "body": "@Matthieu I agree. I&#39;m not sure I can make it less simplistic, though, without trying to define in exact terms what&#39;s meant by &quot;aliasing&quot; and &quot;liveness&quot;, which are pretty poorly defined (at least in official sources). The rule you quote is straight from TRPL."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565095486, "post_id": 57366017, "comment_id": 101237141, "body": "@trentcl: I agree, I think we&#39;re hitting the limits of Ralf&#39;s work here. I don&#39;t necessarily see <code>*r += 1; unsafe { *p += 1; } *r += 1;</code> as problematic, as it could be argued that <code>*p</code> borrowed <code>r</code> for the duration of the statement, then released the borrow before the second increment of <code>r</code>. In practice, this seems impractical as the analysis required would be too complicated, but from a temporal point of view it&#39;s arguably possible. I think it&#39;d be rejected by Ralf&#39;s Stacked Borrows, due the lack of causality, but..."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565105288, "post_id": 57366017, "comment_id": 101243293, "body": "@MatthieuM.: I don&#39;t see why there should be any practical difficulty with having a construct which says &quot;a compiler should behave as though the actions of entering or leaving this block might arbitrarily affect any object whose address has ever escaped&quot;.  Any loop containing such a construct or calls to a function that contains such a construct would likely perform badly, but if a function performs three loops in sequence and one of them calls a function containing such a construct, that shouldn&#39;t affect the performance of the other two.  If programmers only use such a construct when..."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "edited": false, "score": 0, "creation_date": 1565105352, "post_id": 57366017, "comment_id": 101243325, "body": "...there would be no other practical way to do what needs to be done, then the only programs where the performance costs of the construct would be relevant would be those which wouldn&#39;t be practical at all in its absence."}, {"owner": {"reputation": 69012, "user_id": 363751, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/135a97c4150691234931a93f3a27a52f?s=128&d=identicon&r=PG", "display_name": "supercat", "link": "https://stackoverflow.com/users/363751/supercat"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565105671, "post_id": 57366017, "comment_id": 101243527, "body": "@MatthieuM.: Among other things, when doing systems programming, it may be necessary to do things like change memory mappings, etc. and ensure that operations which were relevant under one memory mapping don&#39;t get reordered across operations that change mappings.  Actually, an even stronger directive that applies to all static objects could be helpful in systems that allow linker control of static object placement."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 9, "last_activity_date": 1565048211, "last_edit_date": 1565048211, "creation_date": 1565038680, "answer_id": 57366017, "question_id": 57364654, "link": "https://stackoverflow.com/questions/57364654/do-aliasing-mutable-raw-pointers-mut-t-cause-undefined-behaviour/57366017#57366017", "title": "Do aliasing mutable raw pointers (*mut T) cause undefined behaviour?", "body": "<blockquote>\n  <p>Author's note: The following is an intuitive explanation, not a rigorous one. I don't believe there is a rigorous definition of \"aliasing\" in Rust right now, but you may find it helpful to read the Rustonomicon chapters on <a href=\"https://doc.rust-lang.org/nomicon/references.html\" rel=\"noreferrer\">references</a> and <a href=\"https://doc.rust-lang.org/nomicon/aliasing.html\" rel=\"noreferrer\">aliasing</a>.</p>\n</blockquote>\n\n<p>The <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"noreferrer\">rules of references</a> (<code>&amp;T</code> and <code>&amp;mut T</code>) are simple:</p>\n\n<blockquote>\n  <ul>\n  <li>At any given time, you can have either one mutable reference or any number of immutable references.</li>\n  <li>References must always be valid.</li>\n  </ul>\n</blockquote>\n\n<p>There are no \"rules of raw pointers\". Raw pointers (<code>*const T</code> and <code>*mut T</code>) can alias anything, anywhere, or they can point to nothing at all.</p>\n\n<p>Undefined behavior can happen when you <em>dereference</em> a raw pointer, implicitly or explicitly turning it into a reference. This reference <em>still must obey the rules of references</em>, even when the <code>&amp;</code> isn't explicit in the source code.</p>\n\n<p>In your first example,</p>\n\n<pre><code>unsafe { *p += 1; }\n</code></pre>\n\n<p><code>*p += 1;</code> takes a <code>&amp;mut</code> reference to <code>*p</code> in order to use the <code>+=</code> operator, as if you had written</p>\n\n<pre><code>unsafe { AddAssign::add_assign(&amp;mut *p, 1); }\n</code></pre>\n\n<p>(The compiler does not actually use <code>AddAssign</code> to implement <code>+=</code> for <code>u8</code>, but the semantics are the same.)</p>\n\n<p>Because <code>&amp;mut *p</code> is aliased by another reference, namely <code>r</code>, the first rule of references is violated, causing undefined behavior.</p>\n\n<p>Your second example (since editing) is different because there is no <em>reference</em> to alias, only another <em>pointer</em>, and there are no aliasing rules that govern pointers. Therefore, this</p>\n\n<pre><code>let p1: *mut u8 = &amp;mut value;\nlet p2: *mut u8 = p1;\n\nunsafe {\n    *p1 += 1;\n    *p2 += 1;\n    *p1 -= 1;\n    *p2 -= 1;\n}\n</code></pre>\n\n<p>in the absence of any other references to <code>value</code>, is perfectly sound.</p>\n"}], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 537, "favorite_count": 1, "accepted_answer_id": 57366017, "answer_count": 1, "score": 10, "last_activity_date": 1565051138, "creation_date": 1565031692, "last_edit_date": 1565051138, "question_id": 57364654, "link": "https://stackoverflow.com/questions/57364654/do-aliasing-mutable-raw-pointers-mut-t-cause-undefined-behaviour", "title": "Do aliasing mutable raw pointers (*mut T) cause undefined behaviour?", "body": "<p><code>&amp;mut T</code> and <code>&amp;mut T</code> results in a compilation error; this is great, it's objectively wrong to borrow mutably twice.</p>\n\n<p>Is <code>*mut T</code> and<code>*mut T</code> undefined behaviour or is this a perfectly valid thing to do? That is, is mutable pointer aliasing valid?</p>\n\n<p>What makes it even worse is that <code>&amp;mut T</code> and <code>*mut T</code> actually compiles and works as intended, I can modify a value through the reference, the pointer, and then the reference again... but I've seen someone say that it's undefined behaviour. Yeah, \"someone said so\" is the only information I have.</p>\n\n<p>Here's what I tested:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut value: u8 = 42;\n\n    let r: &amp;mut u8 = &amp;mut value;\n    let p: *mut u8 = r as *mut _;\n\n    *r += 1;\n\n    unsafe { *p += 1; }\n\n    *r -= 1;\n\n    unsafe { *p -= 1; }\n\n    println!(\"{}\", value);\n}\n</code></pre>\n\n<p>and of course, the main point of question:</p>\n\n<p><strong>Note</strong> \u2014 Thanks to trentcl for <a href=\"https://stackoverflow.com/questions/57364654/is-mut-t-aliasing-in-rust-ub#comment101216866_57364654\">pointing out this example actually causes a copy when creating <code>p2</code></a>. This can be confirmed by replacing <code>u8</code> with a non-<code>Copy</code> type. The compiler then complains about a move.  Sadly, this does not get me closer to the answer, only reminds me that I can get unintended behaviour without it being  undefined behaviour, simply because of Rust's move semantics.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut value: u8 = 42;\n\n    let p1: *mut u8 = &amp;mut value as *mut _;\n    // this part was edited, left in so it's easy to spot\n    // it's not important how I got this value, what's important is that it points to same variable and allows mutating it\n    // I did it this way, hoping that trying to access real value then grab new pointer again, would break something, if it was UB to do this\n    //let p2: *mut u8 = &amp;mut unsafe { *p1 } as *mut _;\n    let p2: *mut u8 = p1;\n\n    unsafe {\n        *p1 += 1;\n        *p2 += 1;\n        *p1 -= 1;\n        *p2 -= 1;\n    }\n\n    println!(\"{}\", value);\n}\n</code></pre>\n\n<p>Both yield:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>42\n</code></pre>\n\n<p>Does this imply that two mutable pointers pointing to the same location and being dereferenced at different times is not undefined behaviour?</p>\n\n<p>I don't think testing this on compiler is a good idea to begin with, as undefined behaviour could have anything happen, even printing <code>42</code> as if nothing is wrong. I mention it anyway as this is one of things I tried, hoping to get an objective answer.</p>\n\n<p>I have no clue how to write a test that could force erratic behaviour that would make it dead obvious that this doesn't work because it's not used as intended, if that's even possible to do so.</p>\n\n<p>I'm aware that this is very likely to be undefined behaviour and break in a multithreaded environment no matter what. I would expect a more detailed answer than that, though, especially if mutable pointer aliasing IS NOT undefined behaviour. (This would in fact be awesome, because while I use Rust for reasons like everyone else - memory safety, to say the least... I expect to still retain a shotgun that I could point anywhere, without it being locked onto my feet. I can have aliased \"mutable pointers\" without blowing my feet off in C.)</p>\n\n<p>This is a question about whether I <strong>can</strong>, not about whether I <strong>should</strong>. I want to dive head-on into unsafe Rust, just to learn about it, but it feels like there's not enough information unlike in \"horrible\" languages like C about what's undefined behaviour and what's not.</p>\n"}, {"tags": ["rust", "sdl-2"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565045242, "post_id": 57364551, "comment_id": 101219883, "body": "your code don&#39;t make any sense, you have a infinite recursive call."}, {"owner": {"reputation": 2014, "user_id": 2138219, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/KNoxN.jpg?s=128&g=1", "display_name": "francium", "link": "https://stackoverflow.com/users/2138219/francium"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1565048207, "post_id": 57364551, "comment_id": 101220372, "body": "@Stargateur Must be a typo, I was not getting any such issues in my real code. Where is the recursive call? Do note that <code>texture_creator.load_texture</code> is different from <code>res_man.load_texture</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1565050371, "post_id": 57364551, "comment_id": 101220705, "body": "See also <a href=\"https://stackoverflow.com/q/56051593/155423\">Is there a way to store a texture inside a struct using rust-sdl2?</a>; <a href=\"https://stackoverflow.com/q/56080861/155423\">Rust - cannot infer an appropriate lifetime for autoref due to conflicting requirements</a>."}], "owner": {"reputation": 2014, "user_id": 2138219, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/KNoxN.jpg?s=128&g=1", "display_name": "francium", "link": "https://stackoverflow.com/users/2138219/francium"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 790, "favorite_count": 0, "closed_date": 1565050328, "answer_count": 0, "score": 1, "last_activity_date": 1565050342, "creation_date": 1565031242, "question_id": 57364551, "link": "https://stackoverflow.com/questions/57364551/managing-sdl2-rust-texture-lifetime", "closed_reason": "Duplicate", "title": "Managing SDL2 (rust) Texture lifetime", "body": "<p>I'm going in circles trying to figure out how to properly manage the setup of textures.\nI'm using <a href=\"https://github.com/Rust-SDL2/rust-sdl2/\" rel=\"nofollow noreferrer\">https://github.com/Rust-SDL2/rust-sdl2/</a>. I've tired to extract out a minimal\nexample from my whole codebase, so hopefully I haven't missed any details in the\ntranslation. This is a simple game FYI.</p>\n\n<p>What I'm trying to do is store a <code>TextureCreator</code>[1] and <code>Texture</code>[2] in the same\nstruct. What's happening here is SDL makes <code>TextureCreator</code> the owner of every <code>Texture</code>\ncreated with it, which means I have to use explicit lifetimes. I've got it setup so that I\ncan create a new <code>Engine</code> instance with the <code>'a</code> lifetime for the <code>ResMan</code> struct. But as\nsoon as I define and call the <code>res_man.load_texture</code> method, things go bonkers and I\nhaven't been able to figure out how to properly do it in a way the borrowchecker doesn't\nmake me run around in circles. You will notice I used a <code>RefCell</code> to try and attempt to\nfix it, but the borrowchecker seems to want some explicit lifetimes specified in the\nload_texture function.</p>\n\n<p><a href=\"https://proxy.duckduckgo.com/iu/?u=http%3A%2F%2Fwww.veritasprep.com%2Fblog%2Fwp-content%2Fuploads%2F2015%2F09%2Fi-have-no-idea-what-im-doing-science-dog1-e1441990266456.jpg&amp;f=1\" rel=\"nofollow noreferrer\">I'm open to scrapping all of\nthis</a>\nfor something more rustic if you can enlighten me.</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::collections::HashMap;\n\nuse sdl2::image::{LoadTexture};\nuse sdl2::render::{Canvas, Texture, TextureCreator};\nuse sdl2::video::{Window, WindowContext};\nuse sdl2::{Sdl, VideoSubsystem};\n\nconst BLOCK_TEXTURE_PATH: &amp;str = \"../assets/block.png\";\n\nfn main() {\n    let engine = Engine::new();\n    engine.start();\n}\n\npub struct ResMan&lt;'a&gt; {\n    texture_creator: RefCell&lt;TextureCreator&lt;WindowContext&gt;&gt;,\n    res_map: HashMap&lt;&amp;'static str, Texture&lt;'a&gt;&gt;,\n}\n\nimpl&lt;'a&gt; ResMan&lt;'a&gt; {\n    pub fn new(canvas: &amp;Canvas&lt;Window&gt;) -&gt; ResMan&lt;'a&gt; {\n\n        ResMan {\n            texture_creator: RefCell::new(canvas.texture_creator()),\n            res_map: HashMap::with_capacity(10),\n        }\n    }\n\n    // here's horrible code that's on fire, \ud83d\udd25 \ud83d\udd25 \ud83d\udd25\n    pub fn load_texture(&amp;self, path: &amp;'static str) {\n        let texture_creator = self.texture_creator.borrow_mut();\n        let block_texture = texture_creator.load_texture(path).unwrap();\n        self.res_map.insert(path, block_texture);\n    }\n}\n\npub struct Engine&lt;'a&gt; {\n    sdl_context: Sdl,\n    video_subsystem: VideoSubsystem,\n    canvas: Canvas&lt;Window&gt;,\n    res_man: ResMan&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Engine&lt;'a&gt; {\n    pub fn new() -&gt; Engine&lt;'a&gt; {\n        let sdl_context = sdl2::init().unwrap();\n        let video_subsystem = sdl_context.video().unwrap();\n        let window = Engine::open_window(&amp;video_subsystem).unwrap();\n        let canvas = Engine::create_canvas(window).unwrap();\n        let mut res_man = ResMan::new(&amp;canvas);\n        res_man.load_texture(BLOCK_TEXTURE_PATH);\n\n        Engine {\n            sdl_context,\n            video_subsystem,\n            canvas,\n            res_man,\n        }\n    }\n\n    fn open_window(video_subsystem: &amp;VideoSubsystem) -&gt; Result&lt;Window, String&gt; {\n        video_subsystem\n            .window(\"rust-sdl2 demo\", 10 * 32, 20 * 32)\n            .position_centered()\n            .build()\n            .map_err(|e| e.to_string())\n    }\n\n    fn create_canvas(window: Window) -&gt; Result&lt;Canvas&lt;Window&gt;, String&gt; {\n        window\n            .into_canvas()\n            .accelerated()\n            .build()\n            .map_err(|e| e.to_string())\n    }\n\n    pub fn start(&amp;self) {\n        // main loop\n    }\n}\n</code></pre>\n\n<p>1: <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/render/struct.TextureCreator.html\" rel=\"nofollow noreferrer\">https://docs.rs/sdl2/0.32.2/sdl2/render/struct.TextureCreator.html</a></p>\n\n<p>2: <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/render/struct.Texture.html\" rel=\"nofollow noreferrer\">https://docs.rs/sdl2/0.32.2/sdl2/render/struct.Texture.html</a></p>\n\n<hr>\n\n<p>Error message,</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/main.rs:31:52\n   |\n31 |         let texture_creator = self.texture_creator.borrow_mut();\n   |                                                    ^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 30:5...\n  --&gt; src/main.rs:30:5\n   |\n30 | /     pub fn load_texture(&amp;self, path: &amp;'static str) {\n31 | |         let texture_creator = self.texture_creator.borrow_mut();\n32 | |         let block_texture = texture_creator.load_texture(path).unwrap();\n33 | |         self.res_map.insert(path, block_texture);\n34 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:31:31\n   |\n31 |         let texture_creator = self.texture_creator.borrow_mut();\n   |                               ^^^^^^^^^^^^^^^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 21:6...\n  --&gt; src/main.rs:21:6\n   |\n21 | impl&lt;'a&gt; ResMan&lt;'a&gt; {\n   |      ^^\n   = note: ...so that the expression is assignable:\n           expected sdl2::render::Texture&lt;'a&gt;\n              found sdl2::render::Texture&lt;'_&gt;\n\nerror: aborting due to previous error\n\nerror: Could not compile `ffs`.\n</code></pre>\n"}, {"tags": ["rust", "locking", "readerwriterlock"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565030294, "post_id": 57364313, "comment_id": 101214891, "body": "I advice you to read the answer to that question of mine to have the full picture: <a href=\"https://stackoverflow.com/a/45674912/4498831\">stackoverflow.com/a/45674912/4498831</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1565031564, "post_id": 57364313, "comment_id": 101215447, "body": "I thought this was a duplicate (of the Q linked above), but on reflection I&#39;m less sure. I think this question is actually too broad to answer, as posed -- can you elaborate on what you mean by &quot;concurrently modify [...] via <code>Rc&lt;RefCell&gt;</code>&quot;? Or does the question linked by @FrenchBoiethios answer your question as well?"}, {"owner": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565032613, "post_id": 57364313, "comment_id": 101215901, "body": "@trentcl I mean to have threads modifying the friends and index fields at the same time. One set of threads to modify friends at the same time the index friend is modified by another thread."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1565036582, "post_id": 57364313, "comment_id": 101217482, "body": "@Gmanman Well, you just have to fine-grain your locks. Don&#39;t put the whole community inside a RwLock, but put the friends and index into separate RwLocks"}], "answers": [{"tags": [], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "is_accepted": false, "score": 1, "last_activity_date": 1565088561, "creation_date": 1565088561, "answer_id": 57374336, "question_id": 57364313, "link": "https://stackoverflow.com/questions/57364313/does-an-arc-allow-an-rwlock-to-have-more-than-one-writer/57374336#57374336", "title": "Does an Arc allow an RwLock to have more than one writer?", "body": "<p>No.</p>\n\n<p><code>Arc</code> does not allow mutation of the type it holds. Only immutable references can be shared, and <code>Arc</code> is no different.</p>\n\n<p>From <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> docs:</p>\n\n<blockquote>\n  <p>Shared references in Rust disallow mutation by default, and Arc is no exception: you cannot generally obtain a mutable reference to something inside an Arc. If you need to mutate through an Arc, use Mutex, RwLock, or one of the Atomic types.</p>\n</blockquote>\n\n<p>That means that you must store a type that has interior mutability... <code>RwLock</code> is one of those types, and it behaves identically, no matter whether it's wrapped in <code>Arc</code> or not.</p>\n\n<p>From <a href=\"https://doc.rust-lang.org/std/sync/struct.RwLock.html\" rel=\"nofollow noreferrer\"><code>RwLock</code></a> docs:</p>\n\n<blockquote>\n  <p>This type of lock allows a number of readers or at most one writer at any point in time.</p>\n</blockquote>\n\n<p>It's impossible to obtain mutable reference in two different places using safe Rust no matter what you do, the only way is using <code>unsafe {}</code>, which results in undefined behaviour anyway, types like <code>RwLock</code> do use <code>unsafe {}</code>, but, they guarantee that the write (mutable access) is exclusive, in fact, it cannot be read if someone is writing to it, and it cannot be written to if someone is reading it, that's what that sentence means.</p>\n"}], "owner": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 231, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1565088561, "creation_date": 1565030174, "last_edit_date": 1565050058, "question_id": 57364313, "link": "https://stackoverflow.com/questions/57364313/does-an-arc-allow-an-rwlock-to-have-more-than-one-writer", "title": "Does an Arc allow an RwLock to have more than one writer?", "body": "<p>I have this toy structure I'm playing around with:</p>\n\n<pre><code>pub struct Community {\n    pub community_contents: RwLock&lt;CommunityContents&gt;,\n}\n\npub struct CommunityContents {\n    pub friends: RefCell&lt;HashMap&lt;FriendID, FriendData&gt;&gt;, \n    pub index: RefCell&lt;HashMap&lt;u64, BTreeMap&lt;FriendID, FriendData&gt;&gt;&gt;, \n    pub authenticated: bool,\n    pub age: u64,     \n    pub height: u64,\n}\n</code></pre>\n\n<p>My theory was to have an <code>Arc</code> around the <code>RwLock</code> of <code>Community</code> and then I could have multiple writers to the <code>RwLock</code> and these writers could independently/concurrently modify the <code>friends</code> and <code>index</code> fields of <code>CommunityContents</code> via <code>Rc&lt;RefCell</code>.</p>\n\n<p>Is this even <em>possible</em>? Will <code>RwLock</code> just not allow more than one writer at a time no matter what - in which case I should just remove the <code>RefCells</code> and simplify the whole structure?</p>\n"}, {"tags": ["generics", "rust", "move-semantics", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565018189, "post_id": 57360826, "comment_id": 101209766, "body": "tl;dr: the compiler reborrows <code>&amp;mut</code> references with a shorter lifetime. Usually this makes things more convenient. You can achieve the same thing explicitly by calling <code>generic_arg(&amp;mut *reference)</code>."}], "owner": {"reputation": 153, "user_id": 1068630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3f4a76dd0fa4148700ff02a94e0fe3e8?s=128&d=identicon&r=PG", "display_name": "Edward Peek", "link": "https://stackoverflow.com/users/1068630/edward-peek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 90, "favorite_count": 0, "closed_date": 1565019297, "answer_count": 0, "score": 2, "last_activity_date": 1565018485, "creation_date": 1565015883, "last_edit_date": 1565018485, "question_id": 57360826, "link": "https://stackoverflow.com/questions/57360826/how-does-the-rust-compiler-decide-between-borrowing-and-moving-for-generic-funct", "closed_reason": "Duplicate", "title": "How does the Rust compiler decide between borrowing and moving for generic function arguments?", "body": "<p>I'm trying to understand how Rust decides between moving and borrowing references when they are given as arguments to a generic function.</p>\n\n<p>I think my confusion comes what appears to be a contradiction in whether a generic type <code>T</code> binds to the value or reference type, as in the example below. If it's the value then it should be able to successfully copy it, or if it's the reference it should be able to borrow it, however the results make it seem like neither of these are the case.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::borrow::BorrowMut;\n\nfn main() {\n    let mut value: u32 = 0;\n    let reference: &amp;mut u32 = &amp;mut value;\n\n    // Okay, function borrows the reference.\n    reference_arg(reference);\n\n    // Okay, should be exactly the same as above.\n    generic_arg::&lt;&amp;mut u32&gt;(reference);\n\n    // Not okay, tries to move the reference, but why?\n    // generic_arg(reference);\n\n    // Okay, but why is it different from the above?\n    generic_arg(reference.borrow_mut());\n\n    // Check original reference hasn't been moved from.\n    *reference = 1;\n}\n\nfn reference_arg(_arg: &amp;mut u32) {\n    // NOOP\n} \n\nfn generic_arg&lt;T&gt;(_arg: T) {\n    // NOOP\n} \n</code></pre>\n"}, {"tags": ["timer", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 2, "last_activity_date": 1589901783, "last_edit_date": 1589901783, "creation_date": 1565010511, "answer_id": 57359284, "question_id": 57357978, "link": "https://stackoverflow.com/questions/57357978/how-do-i-spawn-many-cancellable-timers-using-tokio/57359284#57359284", "title": "How do I spawn many cancellable timers using Tokio?", "body": "<p>You can use the <code>Select</code> combinator from futures-rs with Tokio. It returns the result of the first completed future then ignores/stops polling the other one.</p>\n\n<p>As a second future, we can use a receiver from <code>oneshot::channel</code> to create a signal to finish our combinator future.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::sync::oneshot;\nuse futures::*;\nuse std::thread;\nuse std::time::{Duration, Instant};\nuse tokio::timer::Delay;\n\nfn main() {\n    let (interrupter, interrupt_handler) = oneshot::channel::&lt;()&gt;();\n\n    //signal to cancel delayed call\n    thread::spawn(move || {\n        thread::sleep(Duration::from_millis(500)); //increase this value more than 1000ms to see is delayed call is working or not.\n        interrupter\n            .send(())\n            .expect(\"Not able to cancel delayed future\");\n    });\n\n    let delayed = Delay::new(Instant::now() + Duration::from_millis(1000))\n        .map_err(|e| panic!(\"timer failed; err={:?}\", e))\n        .and_then(|_| {\n            println!(\"Delayed Call Executed!\");\n\n            Ok(())\n        });\n\n    tokio::run(delayed.select(interrupt_handler).then(|_| Ok(())));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f0c36eb1975c65ed3d6f2b8ce2c4ef3f\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 103, "user_id": 2883940, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/edb5f6ac5a83aee6204eb20060f8bbe1?s=128&d=identicon&r=PG&f=1", "display_name": "Cshark", "link": "https://stackoverflow.com/users/2883940/cshark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1052, "favorite_count": 0, "accepted_answer_id": 57359284, "answer_count": 1, "score": 3, "last_activity_date": 1589901783, "creation_date": 1565005635, "last_edit_date": 1589901743, "question_id": 57357978, "link": "https://stackoverflow.com/questions/57357978/how-do-i-spawn-many-cancellable-timers-using-tokio", "title": "How do I spawn many cancellable timers using Tokio?", "body": "<p>How do I use Tokio to implement a fixed number of timers that are regularly reset and canceled across threads? When a timer expires, a callback will be executed.</p>\n\n<p>An API similar to that of Go's <code>time.AfterFunc</code> is essentially what I desire:</p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    t := time.AfterFunc(time.Hour, func() {\n        // happens every 2 seconds with 1 second delay\n        fmt.Println(\"fired\")\n    })\n\n    for {\n        t.Reset(time.Second)\n        time.Sleep(time.Second * 2)\n    }\n}\n</code></pre>\n\n<p>The only crate I've found that implements a (sufficiently) similar API is <a href=\"https://docs.rs/timer/0.2.0/timer/\" rel=\"nofollow noreferrer\">timer</a> and it does so in a very naive fashion, by spawning 2 threads. This quickly becomes prohibitive when the timers are reset often.</p>\n\n<p>The obvious answer is to use Tokio, the question is how to do this elegantly. </p>\n\n<p>One option is to spawn a new green thread every time a timer is updated and cancel the previous timer using an atomic, by conditioning the execution of the callback on this atomic, such as this pseudo-Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>tokio::run({\n    // for every timer spawn with a new \"cancel\" atomic\n    tokio::spawn({\n        Delay::new(Instant::now() + Duration::from_millis(1000))\n            .map_err(|e| panic!(\"timer failed; err={:?}\", e))\n            .and_then(|_| {\n                if !cancelled.load(Ordering::Acquire) {\n                    println!(\"fired\");\n                }\n                Ok(())\n            })\n    })\n})\n</code></pre>\n\n<p>The problem is that I maintain state for timers which are already canceled, potentially for minutes. In addition, it does not seem elegant.</p>\n\n<p>Besides <code>tokio::time::Delay</code>, <a href=\"https://docs.rs/tokio/0.1.22/tokio/timer/struct.DelayQueue.html\" rel=\"nofollow noreferrer\"><code>tokio::time::DelayQueue</code></a> also seemed applicable. In particular, the ability to reset and cancel timers by referencing them with the <code>Key</code> returned from \"insert\".</p>\n\n<p>It is unclear how to use this library in a multi-threaded application, namely:</p>\n\n<blockquote>\n  <p>The return value represents the insertion and is used at an argument to remove and reset. Note that Key is token and is reused once value is removed from the queue either by calling poll after when is reached or by calling remove. At this point, the caller must take care to not use the returned Key again as it may reference a different item in the queue.</p>\n</blockquote>\n\n<p>Which would create a race-condition between a task canceling the timer by its key and the task consuming timer events from the <code>DelayQueue</code> stream \u2014 resulting in a panic or canceling of an unrelated timer.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1565004060, "post_id": 57357506, "comment_id": 101201925, "body": "&quot;doesn&#39;t violate anything&quot; \u2192 If you where allowed to do this, what would prevent you from using <code>&amp;mut self.a</code> in <code>write</code> and then get <i>another</i> mutable reference to <code>self.a</code>, violating Rust&#39;s aliasing rules?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565004166, "post_id": 57357506, "comment_id": 101201976, "body": "as mcarton says, you already have a mutable reference to <code>self</code> which could give you <code>self.a</code> as well. It&#39;s not possible. I think the error message is pretty clear here, isn&#39;t it?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565004209, "post_id": 57357506, "comment_id": 101201994, "body": "Please always show the <i>complete</i> error message, not just a snippet"}], "owner": {"reputation": 2337, "user_id": 930169, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/be36a036900e8c4a2d810db772e43280?s=128&d=identicon&r=PG", "display_name": "JACK M", "link": "https://stackoverflow.com/users/930169/jack-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 29, "favorite_count": 0, "closed_date": 1565007133, "answer_count": 0, "score": 0, "last_activity_date": 1565004072, "creation_date": 1565003893, "last_edit_date": 1565004072, "question_id": 57357506, "link": "https://stackoverflow.com/questions/57357506/changing-some-mutable-fields-in-a-mutable-method", "closed_reason": "Duplicate", "title": "changing some mutable fields in a mutable method", "body": "<p>I dont understand why this doesn't work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Test {\n    pub a: Vec&lt;u8&gt;,\n    pub b: Vec&lt;u8&gt;,\n}\n\nimpl Test {\n    pub fn hi(&amp;mut self) {\n        self.write(&amp;mut self.a, &amp;mut self.b);\n    }\n\n    fn write(&amp;mut self, _a: &amp;mut Vec&lt;u8&gt;, _b: &amp;mut Vec&lt;u8&gt;) {}\n}\n\nfn main() {\n    let mut test = Test {\n        a: Vec::new(),\n        b: Vec::new(),\n    };\n    test.hi();\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n --&gt; src/main.rs:8:9\n  |\n8 |         self.write(&amp;mut self.a, &amp;mut self.b);\n  |         ^^^^^-----^-----------^^^^^^^^^^^^^^\n  |         |    |     |\n  |         |    |     first mutable borrow occurs here\n  |         |    first borrow later used by call\n  |         second mutable borrow occurs here\n\nerror[E0499]: cannot borrow `self.a` as mutable more than once at a time\n --&gt; src/main.rs:8:20\n  |\n8 |         self.write(&amp;mut self.a, &amp;mut self.b);\n  |         ---- ----- ^^^^^^^^^^^ second mutable borrow occurs here\n  |         |    |\n  |         |    first borrow later used by call\n  |         first mutable borrow occurs here\n\nerror[E0499]: cannot borrow `self.b` as mutable more than once at a time\n --&gt; src/main.rs:8:33\n  |\n8 |         self.write(&amp;mut self.a, &amp;mut self.b);\n  |         ---- -----              ^^^^^^^^^^^ second mutable borrow occurs here\n  |         |    |\n  |         |    first borrow later used by call\n  |         first mutable borrow occurs here\n</code></pre>\n\n<p>I use a mutable method of <code>test</code>, which is <code>hi</code>. The mutable method <code>hi</code>may change some field of <code>test</code>. It means that <code>a</code> or <code>b</code> of <code>test</code> may be written. So I pass <code>a</code> and <code>b</code>'s mutable reference doesn't violate anything. Because <code>a</code> and <code>b</code> live inside <code>test</code>.</p>\n"}, {"tags": ["curl", "types", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1565002476, "post_id": 57357119, "comment_id": 101201091, "body": "Is that the complete error message?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1565009322, "post_id": 57357119, "comment_id": 101204828, "body": "you should add a <code>println!(&quot;{:?}&quot;, r);</code> just before the <code>H512</code> creation and post the output. Chances are that you are actually getting <code>X=&quot;hash-in-hexadecimal&quot;</code> or something like that."}, {"owner": {"reputation": 101, "user_id": 4604062, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/Br5nS.jpg?s=128&g=1", "display_name": "hphex", "link": "https://stackoverflow.com/users/4604062/hphex"}, "edited": false, "score": 0, "creation_date": 1565014251, "post_id": 57357119, "comment_id": 101207646, "body": "Just <code>println!(&quot;{:?}&quot;, r)&quot; before the </code>H512` it shows hex string <code>&quot;0xce4b857efc938874ff4af01258f01e35fd892f6d16e48f9eff3580960&zwnj;&#8203;db58a890795d69bba43c&zwnj;&#8203;ffbda9df70f30fc1bb79&zwnj;&#8203;2ba2aad6aa4bdd236714&zwnj;&#8203;fc04b2b8fa8\\&quot;&quot;</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565014268, "post_id": 57357119, "comment_id": 101207657, "body": "<code>H512</code> is a newtype wrapper for a <code>[u8; 64]</code>, which presumably is where the 64 is coming from in that assertion. It seems like <code>from_slice</code> is asserting that the length of the slice is exactly 64, but your slice is too big."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565014659, "post_id": 57357119, "comment_id": 101207874, "body": "You have a string, including a leading <code>0x</code> and trailing <code>\\&quot;</code>. That&#39;s an extra 4 characters, so the &quot;actual&quot; data is 128 characters long. This is just 64 bytes in hex. So you need to convert it to bytes before <code>H512::from_slice</code> can handle it."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565015159, "post_id": 57357119, "comment_id": 101208150, "body": "Or just avoid converting your raw data to a UTF8 string in the first place? Use a <code>Vec&lt;u8&gt;</code> instead of a <code>String</code> would be a good start."}], "answers": [{"tags": [], "owner": {"reputation": 101, "user_id": 4604062, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/Br5nS.jpg?s=128&g=1", "display_name": "hphex", "link": "https://stackoverflow.com/users/4604062/hphex"}, "is_accepted": true, "score": 0, "last_activity_date": 1565079316, "creation_date": 1565079316, "answer_id": 57371701, "question_id": 57357119, "link": "https://stackoverflow.com/questions/57357119/why-i-cannot-change-slice-to-h512/57371701#57371701", "title": "Why I cannot change slice to H512?", "body": "<p>Just worked out this way :</p>\n\n<pre><code>pub fn hoge() -&gt; std::io::Result&lt;(H512)&gt; {\n    let param = \"http://someurl.com/api/\";\n    let mut handle = Easy::new();\n    let mut r = String::new();\n    handle.url(&amp;param.to_string()).unwrap();\n    handle.post(true).unwrap();\n    {\n        let mut transfer = handle.transfer();\n        transfer.write_function(|new_data| {\n            r = String::from_utf8(Vec::from(new_data)).unwrap();\n            Ok(new_data.len())\n        }).unwrap();\n        transfer.perform().unwrap();\n    }\n    let r = r.replace(\"\\\"\",\"\").replacen(\"0x\", \"\", 1);\n    let result = H512::from_slice(&amp;hex::decode(&amp;r).expect(\"decode failed\"));\n    Ok(result)\n}\n</code></pre>\n\n<p>is there any better ways?</p>\n"}], "owner": {"reputation": 101, "user_id": 4604062, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/Br5nS.jpg?s=128&g=1", "display_name": "hphex", "link": "https://stackoverflow.com/users/4604062/hphex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 57371701, "answer_count": 1, "score": 0, "last_activity_date": 1565079316, "creation_date": 1565002392, "last_edit_date": 1565014037, "question_id": 57357119, "link": "https://stackoverflow.com/questions/57357119/why-i-cannot-change-slice-to-h512", "title": "Why I cannot change slice to H512?", "body": "<p>I am using <code>primitive_type</code> crate and make a post Http request using <code>rust-curl</code>.</p>\n\n<p><a href=\"https://docs.rs/primitive-types/0.3.0/primitive_types/struct.H512.html\" rel=\"nofollow noreferrer\">https://docs.rs/primitive-types/0.3.0/primitive_types/struct.H512.html</a>\n<a href=\"https://docs.rs/curl/0.5.0/curl/easy/struct.Easy.html\" rel=\"nofollow noreferrer\">https://docs.rs/curl/0.5.0/curl/easy/struct.Easy.html</a></p>\n\n<pre><code>pub fn hoge() {\n    let param = \"http://someurl.com/api/\";\n    let mut handle = Easy::new();\n    let mut r = String::new(); \n    handle.url(&amp;param.to_string()).unwrap();\n    handle.post(true).unwrap();\n    {\n        let mut transfer = handle.transfer();\n        transfer.write_function(|new_data| {\n            r = String::from_utf8(Vec::from(new_data)).unwrap(); \n            Ok(stdout().write(new_data).unwrap())\n        }).unwrap();\n        transfer.perform().unwrap();\n    }\n    let b = H512::from_slice(&amp;r.as_bytes());\n}\n</code></pre>\n\n<p>and it becomes error :</p>\n\n<pre><code>thread 'main' panicked at 'assertion failed: `(left == right)`\nleft: `132`,\nright: `64`', /Users/hogehoge/.cargo/registry/src/github.com-1ecc6299db9ec823/primitive-types-0.3.0/src/lib.rs:68:1\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>looks like param length does not match however is there any best way to return H512 type?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564987553, "post_id": 57353387, "comment_id": 101194203, "body": "Do you want to link at it during compile time or runtime, e.g. via <code>dlopen</code>?"}, {"owner": {"reputation": 1209, "user_id": 10900170, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-d9yRNhZNJA0/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcb_cfrFaWHy-0QkxZKntrgwwZ44xQ/mo/photo.jpg?sz=128", "display_name": "MK Patel", "link": "https://stackoverflow.com/users/10900170/mk-patel"}, "edited": false, "score": 0, "creation_date": 1564987676, "post_id": 57353387, "comment_id": 101194259, "body": "I found one resource which will help you. <a href=\"https://blog.jfo.click/calling-a-c-function-from-rust/\" rel=\"nofollow noreferrer\">blog.jfo.click/calling-a-c-function-from-rust</a> so, please read it and try to solve on your way."}, {"owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "edited": false, "score": 0, "creation_date": 1564988004, "post_id": 57353387, "comment_id": 101194396, "body": "It&#39;s even explained in the <a href=\"https://rust-embedded.github.io/book/interoperability/c-with-rust.html\" rel=\"nofollow noreferrer\">rust book</a>.  <code>&#39;m trying to call Rust function in my application and the rust function also need call C functions</code> - do you want to call a C code from rust or rust code from C?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564989773, "post_id": 57353387, "comment_id": 101195069, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/24105186/can-i-call-c-or-c-functions-from-rust-code\">Can I call C or C++ functions from Rust code?</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564989868, "post_id": 57353387, "comment_id": 101195107, "body": "to be able to call symbol in a lib from main exe you need special flag, and this is a very strange thing to do."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": false, "score": 1, "last_activity_date": 1613983997, "last_edit_date": 1613983997, "creation_date": 1566552419, "answer_id": 57623379, "question_id": 57353387, "link": "https://stackoverflow.com/questions/57353387/how-to-call-c-function-in-rust/57623379#57623379", "title": "How to call C function in Rust", "body": "<p>You're on the right track. You can auto-generate C header from the Rust program with <a href=\"https://lib.rs/cbindgen\" rel=\"nofollow noreferrer\"><code>cbindgen</code></a>, and the other way, Rust bindings with <a href=\"https://lib.rs/bindgen\" rel=\"nofollow noreferrer\"><code>bindgen</code></a>.</p>\n<p>Add <code>crate-type = [&quot;lib&quot;, &quot;staticlib&quot;, &quot;cdylib&quot;]</code> to <code>Cargo.toml</code> to generate <code>.a</code> and <code>.so</code>/<code>.dylib</code>/<code>.dll</code> versions of the Rust library that you can link with the C program.</p>\n"}], "owner": {"reputation": 107, "user_id": 10074970, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-GrqWPrB0l3A/AAAAAAAAAAI/AAAAAAAAAHQ/-WCSqySvcA0/photo.jpg?sz=128", "display_name": "Nail Jay", "link": "https://stackoverflow.com/users/10074970/nail-jay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 848, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1613983997, "creation_date": 1564987363, "last_edit_date": 1564987764, "question_id": 57353387, "link": "https://stackoverflow.com/questions/57353387/how-to-call-c-function-in-rust", "title": "How to call C function in Rust", "body": "<p>I'm a C programmer and I'm trying to call Rust function in my application and  the rust function also need call C functions which exist at my application.  </p>\n\n<p>I know that if I want call C function in Rust I have to do like this</p>\n\n<pre><code>#[link(name = \"mylib\")]\nextern \"C\" {\n    pub fn c_function();\n}\n</code></pre>\n\n<p>But the c_function doesn't exist in any lib but only in my application env now.  </p>\n\n<p>For example:\nMy C code is </p>\n\n<pre class=\"lang-c prettyprint-override\"><code>void c_function()\n{\n    return 1;\n}\n\nvoid main()\n{\n    rust_function();\n}\n</code></pre>\n\n<p>My Rust code is(cargo new --lib myrustlib)  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub unsafe extern \"C\" fn  rust_function() {\n    //If I want to call c_function which is in C world here, How could I do this?\n    //I have tried using extern \"C\" {pub fn c_function();} but faild.  \n    //And an error is outputted like this \"undefined reference to `c_function'\"\n}\n\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "is_accepted": false, "score": 1, "last_activity_date": 1564986355, "creation_date": 1564986355, "answer_id": 57353175, "question_id": 57352413, "link": "https://stackoverflow.com/questions/57352413/how-to-ensure-end-of-immutable-borrow-after-function-call-in-order-to-enable-mut/57353175#57353175", "title": "How to ensure end of immutable borrow after function call in order to enable mutable borrow?", "body": "<p>The Solution I found is not to use <code>std::iter::Sum</code> and rewrite the <code>sum</code> call using <code>fold</code>:</p>\n\n<pre><code>fn compute_mean_of_vec&lt;T&gt;(input_vec: &amp;[T]) -&gt; T\nwhere\n    T: Copy\n        + num::Zero\n        + std::ops::Add&lt;T, Output = T&gt;\n        + std::ops::Div&lt;T, Output = T&gt;\n        + num::FromPrimitive,\n{\n    let sum: T = input_vec.into_iter().fold(T::zero(), |acc, &amp;item| acc + item);\n    sum / num::FromPrimitive::from_usize(input_vec.len()).unwrap()\n}\n</code></pre>\n\n<p>So you do not bind a mean value to the lifetime of input vec and compiler is happy.</p>\n"}, {"comments": [{"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 1, "creation_date": 1565039102, "post_id": 57353197, "comment_id": 101218385, "body": "I have selected another answer as &#39;the solution&#39; because it lets me continue using <code>sum</code>, which I prefer, but I <i>very</i> much appreciate your clear explanation of the issue and suggestion.  Thank you @hellow! :)"}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 3, "last_activity_date": 1564986942, "last_edit_date": 1564986942, "creation_date": 1564986456, "answer_id": 57353197, "question_id": 57352413, "link": "https://stackoverflow.com/questions/57352413/how-to-ensure-end-of-immutable-borrow-after-function-call-in-order-to-enable-mut/57353197#57353197", "title": "How to ensure end of immutable borrow after function call in order to enable mutable borrow?", "body": "<p>The problem is the <code>Sum</code> trait, let's look at its <a href=\"https://doc.rust-lang.org/std/iter/trait.Sum.html\" rel=\"nofollow noreferrer\">declaration</a>:</p>\n\n<blockquote>\n<pre><code>pub trait Sum&lt;A = Self&gt; {\n    fn sum&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: Iterator&lt;Item = A&gt;;\n}\n</code></pre>\n</blockquote>\n\n<p>This means, that there is a reference bound to the function, that is valid to live even after the functions ends (theoretically). Therefore you get a <em>\"also borrowed as immutable\"</em> error.</p>\n\n<p>The solution to this is now instead of using the <code>Sum</code> trait, you can use <code>fold</code>, because you already have a default value (<code>num::Zero</code>) and the <code>Add</code> trait required for your T.</p>\n\n<pre><code>fn compute_mean_of_vec&lt;'g, T&gt;(input_vec: &amp;'g [T]) -&gt; T\nwhere\n    T: Copy\n        + num::Zero\n        + std::ops::Add&lt;T, Output = T&gt;\n        + std::ops::Div&lt;T, Output = T&gt;\n        + num::FromPrimitive,\n{\n    let sum: T = input_vec.iter().fold(T::zero(), |a, e| a + *e);\n    sum / num::FromPrimitive::from_usize(input_vec.len()).unwrap()\n}\n\nfn normalise_cost_vec&lt;'a, T&gt;(cost_vec: &amp;'a mut Vec&lt;T&gt;)\nwhere\n    T: std::ops::SubAssign\n        + Copy\n        + num::traits::identities::Zero\n        + std::ops::Div&lt;Output = T&gt;\n        + num::traits::cast::FromPrimitive,\n{\n    let mean = compute_mean_of_vec(cost_vec);\n    for c in cost_vec.iter_mut() {\n        *c -= mean;\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=994d89ebdcf8b9aa7da61946d9df8881\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n"}, {"comments": [{"owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "edited": false, "score": 0, "creation_date": 1565038982, "post_id": 57353240, "comment_id": 101218352, "body": "This is <i>exactly</i> what I thinking along the lines of, and hoping would be possible.  Thank you very much, this has solved my problem in precisely the way I was hoping for! :)"}], "tags": [], "owner": {"reputation": 124, "user_id": 11882755, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-aYcOuhoU5BA/AAAAAAAAAAI/AAAAAAAAAAc/FT37Y35HapM/photo.jpg?sz=128", "display_name": "Phosphorus15", "link": "https://stackoverflow.com/users/11882755/phosphorus15"}, "is_accepted": true, "score": 3, "last_activity_date": 1564986810, "last_edit_date": 1564986810, "creation_date": 1564986650, "answer_id": 57353240, "question_id": 57352413, "link": "https://stackoverflow.com/questions/57352413/how-to-ensure-end-of-immutable-borrow-after-function-call-in-order-to-enable-mut/57353240#57353240", "title": "How to ensure end of immutable borrow after function call in order to enable mutable borrow?", "body": "<p>It seems that the problem was with the <code>Sum</code> trait's lifetime parameter, and here is a solution without removing this trait</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn compute_mean_of_vec&lt;'g, T&gt;(input_vec: &amp;'g Vec&lt;T&gt;) -&gt; T\nwhere\n    for&lt;'x&gt; T: Copy\n        + num::Zero\n        + std::ops::Add&lt;T, Output = T&gt;\n        + std::ops::Div&lt;T, Output = T&gt;\n        + num::FromPrimitive\n        + std::iter::Sum&lt;&amp;'x T&gt;,\n{\n    let sum: T = input_vec.iter().sum();\n    sum / num::FromPrimitive::from_usize(input_vec.len()).unwrap()\n}\n\nfn normalise_cost_vec&lt;'a, T&gt;(cost_vec: &amp;'a mut Vec&lt;T&gt;)\nwhere\n    for&lt;'x&gt; T: std::ops::SubAssign\n        + Copy\n        + num::traits::identities::Zero\n        + std::ops::Div&lt;Output = T&gt;\n        + num::traits::cast::FromPrimitive\n        + std::iter::Sum&lt;&amp;'x T&gt;,\n{\n    let mean = compute_mean_of_vec(cost_vec);\n    for c in cost_vec.iter_mut() {\n        *c -= mean;\n    }\n}\n\nfn main() {\n    let mut my_vec = vec![5.0f32; 5];\n    normalise_cost_vec(&amp;mut my_vec);\n    for e in my_vec.iter() {\n        println!(\"{}\", e);\n    }\n}\n</code></pre>\n\n<p>i.e., by specifying an standalone lifetime parameter for the trait <code>Sum</code>, the parameter <code>'g</code> won't be assumed to be carried along the whole function.</p>\n"}], "owner": {"reputation": 912, "user_id": 6792709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e86a4cf40fa66135705468f335a88e?s=128&d=identicon&r=PG&f=1", "display_name": "Jarak", "link": "https://stackoverflow.com/users/6792709/jarak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 1, "accepted_answer_id": 57353240, "answer_count": 3, "score": 4, "last_activity_date": 1564986942, "creation_date": 1564981251, "last_edit_date": 1564985448, "question_id": 57352413, "link": "https://stackoverflow.com/questions/57352413/how-to-ensure-end-of-immutable-borrow-after-function-call-in-order-to-enable-mut", "title": "How to ensure end of immutable borrow after function call in order to enable mutable borrow?", "body": "<p>I have come across a borrowchecker problem using Rust 2018 that I cannot find the solution to.  Basically, I have a function that takes a mutable reference to a vec, and as the first part of its execution passes that same vec into another function as an immutable reference.  The latter function returns a new owned value - or at least I intend it to.  The problem for me is that the compiler seems to regard the immutable borrow for the function call as lasting until the end of the outer function.</p>\n\n<p>Unfortunately, this isn't a problem that is solved simply by putting braces around things (it shouldn't be anyway since I'm using Rust 2018).  Moreover, while I have found a number of SO questions that appear to touch on similar matters (e.g. <a href=\"https://stackoverflow.com/questions/38713228/cannot-borrow-variable-when-borrower-scope-ends\">this</a>, <a href=\"https://stackoverflow.com/questions/57074508/why-does-this-immutability-error-only-happens-if-declaration-is-outside-the-loop\">this</a>, <a href=\"https://stackoverflow.com/questions/30273850/linking-the-lifetimes-of-self-and-a-reference-in-method\">this</a> and <a href=\"https://stackoverflow.com/questions/44414539/why-does-a-call-to-fn-popmut-self-resultt-str-continue-to-borrow-my?rq=1\">this</a>), I haven't been able to find anything else that directly addresses this problem.  Or at least, nothing where I have been able to work out what I should do from it.  Crucially, most other similar questions either seem to involve a reference as the return type or were only an issue before non-lexical lifetimes.</p>\n\n<p>I have created an executable MVE in the <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c95d6ac462c69d186907e4dfcab0de7b\" rel=\"nofollow noreferrer\">Rust Playground</a>, and the <a href=\"https://github.com/jcoo092/stereo-matching-practice/tree/rust_bp1/rust/src\" rel=\"nofollow noreferrer\">full program</a> in case it helps. I post the code below, for reference:</p>\n\n<pre><code>// This function was blatantly borrowed from a Stack Overflow post\n// but unfortunately I lost track of which one.\nfn compute_mean_of_vec&lt;'g, T&gt;(input_vec: &amp;'g [T]) -&gt; T\nwhere\n    T: Copy\n        + num::Zero\n        + std::ops::Add&lt;T, Output = T&gt;\n        + std::ops::Div&lt;T, Output = T&gt;\n        + num::FromPrimitive\n        + std::iter::Sum&lt;&amp;'g T&gt;,\n{\n    let sum: T = input_vec.iter().sum();\n    sum / num::FromPrimitive::from_usize(input_vec.len()).unwrap()\n}\n\nfn normalise_cost_vec&lt;'a, T&gt;(cost_vec: &amp;'a mut Vec&lt;T&gt;)\nwhere\n    T: std::ops::SubAssign\n        + Copy\n        + num::traits::identities::Zero\n        + std::ops::Div&lt;Output = T&gt;\n        + num::traits::cast::FromPrimitive\n        + std::iter::Sum&lt;&amp;'a T&gt;,\n{\n    let mean = compute_mean_of_vec(cost_vec);\n    for c in cost_vec.iter_mut() {\n        *c -= mean;\n    }\n}\n\nfn main() {\n    let mut my_vec = vec![5.0f32; 5];\n    normalise_cost_vec(&amp;mut my_vec);\n    for e in my_vec.iter() {\n        println!(\"{}\", e);\n    }\n}\n</code></pre>\n\n<p>The error message the compiler produces is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*cost_vec` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:26:14\n   |\n16 | fn normalise_cost_vec&lt;'a, T&gt;(cost_vec: &amp;'a mut Vec&lt;T&gt;)\n   |                       -- lifetime `'a` defined here\n...\n25 |     let mean = compute_mean_of_vec(cost_vec);\n   |                -----------------------------\n   |                |                   |\n   |                |                   immutable borrow occurs here\n   |                argument requires that `*cost_vec` is borrowed for `'a`\n26 |     for c in cost_vec.iter_mut() {\n   |              ^^^^^^^^ mutable borrow occurs here\n</code></pre>\n\n<p>Looking at the error message, it looks to me like there is probably some issue with the lifetimes specified on the two functions.  I have to admit that the ones I included were pretty much just put there according to the suggestions from the compiler and Clippy, I don't <em>fully</em> understand them.  Best as I can tell, the compiler somehow thinks that the immutable borrow in the call to <code>compute_mean_of_vec</code> should last for the entirety of the remainder of the call to <code>normalise_cost_vec</code>.</p>\n\n<p>What have I done wrong, and how can I make the compiler happy?  I guess it has something to do with specifying another lifetime, but I haven't been able to work out the correct approach, despite looking at The Book and a number of online resources.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564996381, "post_id": 57352387, "comment_id": 101198037, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/27219258/in-rust-how-do-you-explicitly-tie-the-lifetimes-of-two-objects-together-withou\">In Rust, how do you explicitly tie the lifetimes of two objects together, without referencing eachother?</a>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user5770298"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565022231, "post_id": 57352387, "comment_id": 101211561, "body": "@trentctl The way I see it, I&#39;m not just trying to tie the lifetimes together, I&#39;m also trying to take advantage of the mutable / immutable borrow shennanigans from the borrow checker."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1564988542, "creation_date": 1564988542, "answer_id": 57353642, "question_id": 57352387, "link": "https://stackoverflow.com/questions/57352387/zero-width-reference-for-borrow-checking-only/57353642#57353642", "title": "Zero width reference for borrow checking only?", "body": "<p>You can use <code>PhantomData</code> to have an empty type with a lifetime:</p>\n\n<pre><code>use core::marker::PhantomData;\n\n/// Example struct.\nstruct Obj&lt;'a&gt;(PhantomData&lt;&amp;'a ()&gt;);\n\n/// A struct that lets you build new `Obj`s\nstruct ObjFactory;\n\nimpl ObjFactory {\n    /// makes a new object\n    fn make(&amp;self) -&gt; Obj&lt;'_&gt; {\n        Obj(PhantomData) // the PhantomData has the same lifetime as `self`\n    }\n\n    /// enforce that there are no objects from this ObjFactory\n    fn recall(&amp;mut self) {}\n}\n\nfn main() {\n    // make factory\n    let mut obj_factory = ObjFactory;\n\n    // create an object\n    let obj = obj_factory.make();\n\n    // uh oh! no objects are allowed!\n    obj_factory.recall();\n\n    // obj lasts until the end of the function\n    core::mem::drop(obj);\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user5770298"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 57353642, "answer_count": 1, "score": 1, "last_activity_date": 1564988542, "creation_date": 1564981068, "question_id": 57352387, "link": "https://stackoverflow.com/questions/57352387/zero-width-reference-for-borrow-checking-only", "title": "Zero width reference for borrow checking only?", "body": "<p>My goal is to enforce an invariant in my code using the borrow checker at zero-cost. However, to make it zero-cost, it seems like I'd need to have a zero-width reference. Here's the context:</p>\n\n<p>I want to make make a factory for some objects, with a way to invalidate all the objects at once.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Example struct.\n/// In my real code, there's stuff in here,\n/// but its unnecessary for the question I'm asking.\nstruct Obj;\n\n/// A struct that lets you build new `Obj`s\nstruct ObjFactory;\n\nimpl ObjFactory {\n    /// makes a new object\n    fn make(&amp;self) -&gt; Obj {\n        Obj\n    }\n\n    /// enforce that there are no objects from this ObjFactory\n    fn recall(&amp;self) {\n        // ?????\n    }\n}\n</code></pre>\n\n<p>The rules I want are the same as the rules that the borrow checker enforces, so I added some dummy references that make the borrow checker follow the invariant at compile time.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// new placeholder struct that should take up no space\nstruct Dummy;\n\n/// Example struct.\n/// Now has a dummy reference so the compiler knows when to get mad\nstruct Obj&lt;'a&gt;(&amp;'a Dummy);\n\n/// A struct that lets you build new `Obj`s\nstruct ObjFactory {dummy: Dummy}\n\nimpl ObjFactory {\n\n    /// makes a new object\n    fn make(&amp;self) -&gt; Obj {\n        // let the `Obj` immutably borrow the dummy\n        Obj(&amp;self.dummy)\n    }\n\n    /// enforce that there are no objects from this ObjFactory\n    fn recall(&amp;mut self) {\n        // mutably borrow `dummy`, which means that Obj's can't borrow it anymore.\n        let _borrow = &amp;mut self.dummy;\n    }\n}\n</code></pre>\n\n<p>Now, the compiler can detect when the invariant is broken:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n\n    // make factory\n    let mut obj_factory = ObjFactory{dummy: Dummy};\n\n    // create an object\n    let obj = obj_factory.make();\n\n    // uh oh! no objects are allowed!\n    obj_factory.recall();\n\n    // obj lasts until the end of the function\n    core::mem::drop(obj);\n\n}\n</code></pre>\n\n<p>The compiler correctly detects that there's an object that exists when <code>recall</code> happens.</p>\n\n<pre><code>error[E0502]: cannot borrow `obj_factory` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:4:5\n  |\n3 |     let obj = obj_factory.make();\n  |               ----------- immutable borrow occurs here\n4 |     obj_factory.recall();\n  |     ^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n5 |     core::mem::drop(obj);\n  |                     --- immutable borrow later used here\n</code></pre>\n\n<p>This works exactly the way I want; however, it isn't zero cost. Even though each <code>Obj</code>'s dummy is zero width, it still takes up space in the <code>Obj</code>:</p>\n\n<pre><code>print!(\"{}\", std::mem::size_of::&lt;Obj&gt;()); // 8\n</code></pre>\n\n<p>How should I go about getting the space usage of <code>Obj</code> down to <code>0</code>, while also making the borrow-checker enforce the <code>ObjFactory</code> invariants?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1564967511, "post_id": 57351171, "comment_id": 101190350, "body": "I notice your loop never terminates so <code>old_contents</code> is never used outside the <code>loop</code>. Is that relevant?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 2, "creation_date": 1564977844, "post_id": 57351171, "comment_id": 101191824, "body": "What do you mean by &quot;their own version of variables and such&quot;?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1564985805, "post_id": 57351171, "comment_id": 101193606, "body": "I think you should read <a href=\"https://doc.rust-lang.org/book\" rel=\"nofollow noreferrer\">the book</a> to understand and learn the language Rust properly. Loops will be explained there as well and it might help you to avoid some sciolism about Rust. Please read it :)"}, {"owner": {"reputation": 34, "user_id": 5518771, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce51585add9b7ab425c9ffcad0656165?s=128&d=identicon&r=PG&f=1", "display_name": "Harold Schreckengost", "link": "https://stackoverflow.com/users/5518771/harold-schreckengost"}, "reply_to_user": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1565045201, "post_id": 57351171, "comment_id": 101219876, "body": "@Schwern It&#39;s used inside the loop, which is the sole point - I really just want it to watch for a change each loop and do something if it changes."}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1565047354, "post_id": 57351171, "comment_id": 101220231, "body": "@HaroldSchreckengost Your example isn&#39;t Rust, but the basic idea will work. <code>let mut new = 42; let mut old_contents = value; loop { ... }</code> What have you tried?"}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564985892, "post_id": 57351241, "comment_id": 101193634, "body": "<i>&quot;This is not so for a simple loop&quot;</i>: this is not true for every construct in Rust. Rust has no implicit variables somwhere declared."}], "tags": [], "owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "is_accepted": false, "score": 1, "last_activity_date": 1564967598, "creation_date": 1564967598, "answer_id": 57351241, "question_id": 57351171, "link": "https://stackoverflow.com/questions/57351171/how-can-i-watch-something-for-a-change-in-rust/57351241#57351241", "title": "How can I watch something for a change in Rust?", "body": "<blockquote>\n  <p><em>because loops get their own version of variables and such</em></p>\n</blockquote>\n\n<p>This is not so for a simple <code>loop</code>. Here's a demo.</p>\n\n<pre><code>fn main() {\n    let mut outer = 42;\n\n    loop {\n        println!(\"Outer in loop: {}\", outer);\n        outer = 23;\n        break;\n    }\n\n    println!(\"Outer after loop: {}\", outer);\n}\n</code></pre>\n\n<p>Alternatively, you can <a href=\"https://doc.rust-lang.org/book/ch03-05-control-flow.html#returning-values-from-loops\" rel=\"nofollow noreferrer\">return a value from a loop</a>.</p>\n\n<pre><code>fn main() {\n    let outer = loop {\n        println!(\"In the loop.\");\n        break 23;\n    };\n\n    println!(\"Outer after loop: {}\", outer);\n}\n</code></pre>\n"}], "owner": {"reputation": 34, "user_id": 5518771, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ce51585add9b7ab425c9ffcad0656165?s=128&d=identicon&r=PG&f=1", "display_name": "Harold Schreckengost", "link": "https://stackoverflow.com/users/5518771/harold-schreckengost"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1564967598, "creation_date": 1564966417, "question_id": 57351171, "link": "https://stackoverflow.com/questions/57351171/how-can-i-watch-something-for-a-change-in-rust", "title": "How can I watch something for a change in Rust?", "body": "<p>I'm trying to set up a clipboard watcher.  In most languages, the usual path for this is something like:</p>\n\n<pre><code>func main() {\n  old_contents\n  loop {\n    new = get_clipboard()\n    if new != old_contents {\n      old_contents = new\n      do_something\n    }\n  }\n</code></pre>\n\n<p>This doesn't immediately work in Rust, because loops get their own version of variables and such.  Just in a general sense, how should I be going about this?</p>\n"}, {"tags": ["import", "module", "rust", "rust-cargo", "rust-crates"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 1, "creation_date": 1564957597, "post_id": 57350520, "comment_id": 101189010, "body": "What happens if you remove <code>self</code>? Note that it&#39;s not really needed anyways, since it&#39;s already in scope (at least in Rust 2018)."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1564958480, "post_id": 57350520, "comment_id": 101189152, "body": "If you don&#39;t want to specify <code>extern crate</code> you need to use the 2018 edition and add <code>edition = &quot;2018&quot;</code> to your <code>Cargo.toml</code>."}], "answers": [{"comments": [{"owner": {"reputation": 12790, "user_id": 1767106, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0065eca502a4a798607e38cefc1ca2ed?s=128&d=identicon&r=PG", "display_name": "clay", "link": "https://stackoverflow.com/users/1767106/clay"}, "edited": false, "score": 0, "creation_date": 1564965547, "post_id": 57350891, "comment_id": 101190105, "body": "wow, that was it :) with no other changes, it worked! Thanks!"}], "tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 3, "last_activity_date": 1564961768, "creation_date": 1564961768, "answer_id": 57350891, "question_id": 57350520, "link": "https://stackoverflow.com/questions/57350520/rust-unresolved-import-on-third-party-library-newbie-issue/57350891#57350891", "title": "Rust `unresolved import` on third party library. Newbie Issue", "body": "<p>The example you copied uses a syntax that works in the most recent edition of Rust, but you've accidentally set your Rust to emulate an old \"2015\" version of the language.</p>\n\n<p>You must add:</p>\n\n<pre><code>edition = \"2018\"\n</code></pre>\n\n<p>to your <code>Cargo.toml</code>'s <code>[package]</code> section.</p>\n\n<p>When starting new projects, always use <code>cargo new</code>. It will ensure the latest edition flag is set correctly.</p>\n"}], "owner": {"reputation": 12790, "user_id": 1767106, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0065eca502a4a798607e38cefc1ca2ed?s=128&d=identicon&r=PG", "display_name": "clay", "link": "https://stackoverflow.com/users/1767106/clay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1661, "favorite_count": 0, "accepted_answer_id": 57350891, "answer_count": 1, "score": 3, "last_activity_date": 1564963551, "creation_date": 1564956368, "last_edit_date": 1564963551, "question_id": 57350520, "link": "https://stackoverflow.com/questions/57350520/rust-unresolved-import-on-third-party-library-newbie-issue", "title": "Rust `unresolved import` on third party library. Newbie Issue", "body": "<p>I want to compile a simple rust program using a third party library named warp:</p>\n\n<pre><code>[package]\nname = \"hello-world-warp\"\nversion = \"0.1.0\"\n\n[dependencies]\nwarp = \"0.1.18\"\n</code></pre>\n\n<p>In <code>src/main.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use warp::{self, path, Filter};\n\nfn main() {\n    // GET /hello/warp =&gt; 200 OK with body \"Hello, warp!\"\n    let hello = warp::path!(\"hello\" / String)\n        .map(|name| format!(\"Hello, {}!\", name));\n\n    warp::serve(hello)\n        .run(([127, 0, 0, 1], 3030));\n}\n</code></pre>\n\n<p>When I run <code>cargo build</code> I see it download warp and lots of transitive dependencies, then I get the errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling hello-world-warp v0.1.0 (&lt;path&gt;) error[E0432]: unresolved import `warp`\n --&gt; src/main.rs:3:12\n  |\n3 | use warp::{self, path, Filter};\n  |            ^^^^ no `warp` in the root\n\nerror: cannot find macro `path!` in this scope\n</code></pre>\n\n<p>I've gone through various docs on modules and crates. What am I doing wrong in this simple scenario?</p>\n"}, {"tags": ["rust", "string-conversion"], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 7804422, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ygpQ-JOrXI0/AAAAAAAAAAI/AAAAAAAAABM/bSHvAu5Szng/photo.jpg?sz=128", "display_name": "Shashi Raz", "link": "https://stackoverflow.com/users/7804422/shashi-raz"}, "edited": false, "score": 0, "creation_date": 1564954803, "post_id": 57350190, "comment_id": 101188514, "body": "it gives error that the trait <code>std::fmt::LowerHex</code> is not implemented for <code>std::string::String</code>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 21, "user_id": 7804422, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ygpQ-JOrXI0/AAAAAAAAAAI/AAAAAAAAABM/bSHvAu5Szng/photo.jpg?sz=128", "display_name": "Shashi Raz", "link": "https://stackoverflow.com/users/7804422/shashi-raz"}, "edited": false, "score": 0, "creation_date": 1564955227, "post_id": 57350190, "comment_id": 101188590, "body": "Have you called <code>to_string</code> on your hash? Note that I have also edited it out of your question, because it is never necessary to call <code>to_string</code> with the <code>format!</code> family of macro. <code>to_string</code> is always equivalent to <code>Display</code>, but calling <code>to_string</code> and then passing the result to a <code>format!</code> macro is less efficient. It also prevents you from using traits other than <code>Display</code>."}, {"owner": {"reputation": 21, "user_id": 7804422, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ygpQ-JOrXI0/AAAAAAAAAAI/AAAAAAAAABM/bSHvAu5Szng/photo.jpg?sz=128", "display_name": "Shashi Raz", "link": "https://stackoverflow.com/users/7804422/shashi-raz"}, "edited": false, "score": 0, "creation_date": 1564956180, "post_id": 57350190, "comment_id": 101188755, "body": "yes, I have used <code>to_string</code> . My  final aim is to convert <code>s</code> to string and write it into .csv file but when i did it write   <code>&quot;0x0000\u20260000&quot;</code> to my file."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 21, "user_id": 7804422, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ygpQ-JOrXI0/AAAAAAAAAAI/AAAAAAAAABM/bSHvAu5Szng/photo.jpg?sz=128", "display_name": "Shashi Raz", "link": "https://stackoverflow.com/users/7804422/shashi-raz"}, "edited": false, "score": 0, "creation_date": 1564958055, "post_id": 57350190, "comment_id": 101189082, "body": "I suggest your read <a href=\"https://doc.rust-lang.org/std/fmt/index.html\" rel=\"nofollow noreferrer\">the documentation of the <code>fmt</code> module</a>. You do not need to use <code>to_string</code>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 2, "last_activity_date": 1565044508, "last_edit_date": 1565044508, "creation_date": 1564952462, "answer_id": 57350190, "question_id": 57350082, "link": "https://stackoverflow.com/questions/57350082/to-convert-a-ethereum-typesh256-to-string-in-rust/57350190#57350190", "title": "To convert a ethereum_types::H256 to String in Rust", "body": "<p>This (weird) behaviour comes from the <code>fixed-hash</code> crate.</p>\n\n<p>It implements several formatting traits:</p>\n\n<ul>\n<li><code>Display</code> <a href=\"https://github.com/paritytech/parity-common/blob/cd0fe159c8cb26b1c855e9f110aecd4bf4a40a24/fixed-hash/src/hash.rs#L231\" rel=\"nofollow noreferrer\">which always elides the middle of the hash</a>.</li>\n<li><code>Debug</code> <a href=\"https://github.com/paritytech/parity-common/blob/cd0fe159c8cb26b1c855e9f110aecd4bf4a40a24/fixed-hash/src/hash.rs#L221\" rel=\"nofollow noreferrer\">which is equivalent to <code>LowerHex</code> alternate mode</a>.</li>\n<li><code>LowerHex</code> and <code>UpperHex</code> <a href=\"https://github.com/paritytech/parity-common/blob/cd0fe159c8cb26b1c855e9f110aecd4bf4a40a24/fixed-hash/src/hash.rs#L239-L261\" rel=\"nofollow noreferrer\">which never elide</a>\n.</li>\n</ul>\n\n<p>Therefore, to get the output you want, use <code>LowerHex</code> with alternate mode:</p>\n\n<pre><code>    println!(\"{:#x}\", s);\n</code></pre>\n\n<p>(alternatively you can use <code>Debug</code>, but the output of <code>Debug</code> should generally not be relied upon)</p>\n"}], "owner": {"reputation": 21, "user_id": 7804422, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ygpQ-JOrXI0/AAAAAAAAAAI/AAAAAAAAABM/bSHvAu5Szng/photo.jpg?sz=128", "display_name": "Shashi Raz", "link": "https://stackoverflow.com/users/7804422/shashi-raz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1565044508, "creation_date": 1564951244, "last_edit_date": 1564952024, "question_id": 57350082, "link": "https://stackoverflow.com/questions/57350082/to-convert-a-ethereum-typesh256-to-string-in-rust", "title": "To convert a ethereum_types::H256 to String in Rust", "body": "<p>when I tried to convert  <strong>ethereum_types::H256</strong> to <strong>String</strong> by using to_string() </p>\n\n<pre><code>use ethereum_types::H256;\n\nfn main() {   \n    let s = H256::zero();\n    println!(\"{}\", s);\n}\n</code></pre>\n\n<p>I expect output to be</p>\n\n<pre><code>\"0x0000000000000000000000000000000000000000000000000000000000000000\" \n</code></pre>\n\n<p>but output is </p>\n\n<pre><code>\"0x0000\u20260000\"\n</code></pre>\n"}, {"tags": ["collections", "rust", "mutable", "borrowing"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564961187, "post_id": 57350068, "comment_id": 101189502, "body": "Please provide the exact error. Also consider removing fields and types that are not relevant to the problem, to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "edited": false, "score": 0, "creation_date": 1564997290, "post_id": 57350911, "comment_id": 101198496, "body": "That makes perfect sense and thanks for the explanation to clarify. One other quick thing if you don&#39;t mind, do you think the RwLock on the struct makes the RefCells unnecessary? I wonder if I went overkill there."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1564962029, "creation_date": 1564962029, "answer_id": 57350911, "question_id": 57350068, "link": "https://stackoverflow.com/questions/57350068/how-to-delete-item-from-hashmap-inside-a-refcell-within-an-rwlock-ed-struct/57350911#57350911", "title": "How to delete item from Hashmap inside a RefCell within an RwLock-ed Struct", "body": "<p>After making some guesses about the missing types from your example code, I see two errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n  --&gt; src/lib.rs:37:21\n   |\n37 |         let mut a = g.index.borrow_mut().get(&amp;friend_key);\n   |                     ^^^^^^^^^^^^^^^^^^^^                 - temporary value is freed at the end of this statement\n   |                     |\n   |                     creates a temporary which is freed while still in use\n38 |         let mut c = a.unwrap();\n   |                     - borrow later used here\n   |\n   = note: consider using a `let` binding to create a longer lived value\n\nerror[E0596]: cannot borrow `*c` as mutable, as it is behind a `&amp;` reference\n  --&gt; src/lib.rs:39:9\n   |\n38 |         let mut c = a.unwrap();\n   |             ----- help: consider changing this to be a mutable reference: `&amp;mut std::collections::BTreeMap&lt;u64, FriendData&gt;`\n39 |         c.remove(&amp;friend_key);\n   |         ^ `c` is a `&amp;` reference, so the data it refers to cannot be borrowed as mutable\n</code></pre>\n\n<p>The first one can be fixed by following the suggestion - use a new variable to ensure that the temporary value (underlined in the error message) lives long enough:</p>\n\n<pre><code>let mut tmp = g.index.borrow_mut();\nlet mut a = tmp.get(&amp;friend_key);\n</code></pre>\n\n<p>Now the borrowed value, <code>tmp</code> lives right to the end of the function, outliving <code>a</code> which needs to borrow from it.</p>\n\n<p>The second error and suggestion might be harder to understand. <code>a</code> is an <code>Option&lt;&amp;BTreeMap&gt;</code> but after unwrapping it you are trying to mutate it, so that reference needs to be mutable. The <code>Option&lt;&amp;BTreeMap&gt;</code> comes from the call to <code>get</code>, so you need to find a way to get a mutable reference instead. you can do that with a different method, <code>get_mut</code>, which will return the <code>Option&lt;&amp;mut BTreeMap&gt;</code> that you need:</p>\n\n<pre><code>let mut tmp = g.index.borrow_mut();\nlet mut a = tmp.get_mut(&amp;friend_key);\n</code></pre>\n"}], "owner": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 57350911, "answer_count": 1, "score": 0, "last_activity_date": 1564962134, "creation_date": 1564951050, "last_edit_date": 1564962134, "question_id": 57350068, "link": "https://stackoverflow.com/questions/57350068/how-to-delete-item-from-hashmap-inside-a-refcell-within-an-rwlock-ed-struct", "title": "How to delete item from Hashmap inside a RefCell within an RwLock-ed Struct", "body": "<p>I have a struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct CommunityContents {\n    pub friends: RefCell&lt;HashMap&lt;FriendID, FriendData&gt;&gt;, \n    pub index: RefCell&lt;HashMap&lt;u64, BTreeMap&lt;FriendID, FriendData&gt;&gt;&gt;, \n    pub authenticated: bool,\n    pub age: u64,     \n    pub height: u64,\n}\n</code></pre>\n\n<p>Which is protected with a RwLock with a parent struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Community {\n    pub community_contents: RwLock&lt;CommunityContents&gt;,\n}\n\npub struct FriendData {\n    pointer: Rc&lt;Data&gt;,\n}\n\npub struct Data {\n    pub key: Key,\n    pub friend_ids: Vec&lt;FriendID&gt;,\n}\n</code></pre>\n\n<p>I want to be able to modify the data inside <code>index</code>. I have no problems inserting data into index doing <code>write()</code> to <code>CommunityContents</code> and a <code>borrow_mut().insert(\u2026)</code> for the <code>BtreeMap</code> inside <code>index</code>.</p>\n\n<p>My problem is deleting elements from <code>BtreeMap</code>, given <code>FriendID</code>. My rough attempt is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn delete_family(community: &amp;Self, friend_id: FriendID) {\n    //get community contents\n    let mut g = community.community_contents.write().expect(\"Lock is poisoned\");\n    //get friend from inside friends name of community contents\n    let mut friend = g.friends.borrow_mut().get(&amp;friend_id).unwrap().pointer.clone();\n    // get id attri\n    let mut friend_key = friend.key;\n    let mut a = g.index.borrow_mut().get(&amp;friend_key);\n    let mut c = a.unwrap();\n    c.remove(&amp;friend_id);\n}\n</code></pre>\n\n<p>And I get the error cannot borrow as mutable. I've tried various things which has made my code above a bit messy.</p>\n\n<p>Edit: sorry I missed out the <code>FriendData</code> and <code>Data</code> structs in my question.</p>\n"}, {"tags": ["rust", "minidom"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 6, "creation_date": 1564949609, "post_id": 57349817, "comment_id": 101187560, "body": "What did you try? Did you look at Rust&#39;s <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\"><code>std::fs::File</code></a> or <a href=\"https://doc.rust-lang.org/std/fs/fn.read_to_string.html\" rel=\"nofollow noreferrer\"><code>std::fs::read_to_string</code></a>?"}, {"owner": {"reputation": 1, "user_id": 5704451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56f608d029e69410934a9d2bf90ce3af?s=128&d=identicon&r=PG&f=1", "display_name": "Kisho", "link": "https://stackoverflow.com/users/5704451/kisho"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1565085382, "post_id": 57349817, "comment_id": 101231620, "body": "I wonder if you have to make the detour with string instead of reading &quot;somehow&quot; directly from the file"}], "answers": [{"tags": [], "owner": {"reputation": 1072, "user_id": 1664943, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a97abe3e4f823885e76bf85df9cd142d?s=128&d=identicon&r=PG", "display_name": "ThorstenC", "link": "https://stackoverflow.com/users/1664943/thorstenc"}, "is_accepted": false, "score": 1, "last_activity_date": 1565017020, "creation_date": 1565017020, "answer_id": 57361184, "question_id": 57349817, "link": "https://stackoverflow.com/questions/57349817/how-can-i-get-a-dom-from-a-file-with-rust/57361184#57361184", "title": "How can I get a DOM from a file with Rust?", "body": "<p>From the examples in <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\">std::fs::file</a></p>\n\n<pre><code>let mut file = File::open(\"foo.xml\")?;\nlet mut contents = String::new();\nfile.read_to_string(&amp;mut contents)?;\n</code></pre>\n\n<p>Now you should use contents as a parameter for the minimum parser.</p>\n"}], "owner": {"reputation": 1, "user_id": 5704451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56f608d029e69410934a9d2bf90ce3af?s=128&d=identicon&r=PG&f=1", "display_name": "Kisho", "link": "https://stackoverflow.com/users/5704451/kisho"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1565017020, "creation_date": 1564948780, "question_id": 57349817, "link": "https://stackoverflow.com/questions/57349817/how-can-i-get-a-dom-from-a-file-with-rust", "title": "How can I get a DOM from a file with Rust?", "body": "<p>I want to read a XML file with Rust to get a DOM. I'm learning Rust and I tried <a href=\"https://docs.rs/minidom/0.11.0/minidom/index.html\" rel=\"nofollow noreferrer\">minidom</a>.</p>\n\n<p>With <a href=\"https://docs.rs/minidom/0.11.0/minidom/index.html\" rel=\"nofollow noreferrer\">minidom</a> I can get a DOM from a \"String/str\". </p>\n\n<p>But how do I get a DOM from a file with Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564948640, "post_id": 57349574, "comment_id": 101187357, "body": "&quot;I&#39;m currently learning Rust&quot; do yourself a favor and don&#39;t do linked list in Rust."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1564949025, "post_id": 57349574, "comment_id": 101187432, "body": "<i>&quot;As far as I know, I&#39;m moving T around, I&#39;m not borrowing anything...&quot;</i> \u2014 Your function needs to work for <i>any</i> <code>T</code>, including  types that hold references."}], "owner": {"reputation": 21716, "user_id": 2401769, "user_type": "registered", "accept_rate": 68, "profile_image": "https://i.stack.imgur.com/wkEbw.jpg?s=128&g=1", "display_name": "Matias Cicero", "link": "https://stackoverflow.com/users/2401769/matias-cicero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 29, "favorite_count": 0, "closed_date": 1564949050, "answer_count": 0, "score": 0, "last_activity_date": 1564946734, "creation_date": 1564946423, "last_edit_date": 1564946734, "question_id": 57349574, "link": "https://stackoverflow.com/questions/57349574/parameter-t-might-not-live-long-enough", "closed_reason": "Duplicate", "title": "Parameter T might not live long enough", "body": "<p>I'm currently learning Rust and I'm struggling with something I cannot manage to understand.</p>\n\n<p>Consider the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cmp::{Ordering, Ord};\n\npub enum Error {\n    ItemAlreadyExists,\n}\n\npub trait BinaryTree&lt;T: Ord&gt; {\n    fn insert(&amp;mut self, value: T) -&gt; Result&lt;(), Error&gt;;\n}\n\npub struct TreeNode&lt;T&gt; {\n    data: T,\n    left: Option&lt;Box&lt;BinaryTree&lt;T&gt;&gt;&gt;,\n    right: Option&lt;Box&lt;BinaryTree&lt;T&gt;&gt;&gt;,\n}\n\nimpl&lt;T&gt; TreeNode&lt;T&gt; {\n    pub fn new(data: T) -&gt; Self {\n        TreeNode {\n            data,\n            left: None,\n            right: None,\n        }\n    }\n}\n\nimpl&lt;T: Ord&gt; BinaryTree&lt;T&gt; for TreeNode&lt;T&gt; {\n    fn insert(&amp;mut self, value: T) -&gt; Result&lt;(), Error&gt; {\n        match value.cmp(&amp;self.data) {\n            Ordering::Less =&gt; match self.left.as_mut() {\n                Some(left) =&gt; left.insert(value),\n                None =&gt; Ok({ self.left = Some(Box::new(TreeNode::new(value))) }),\n            },\n            Ordering::Greater =&gt; match self.right.as_mut() {\n                Some(right) =&gt; right.insert(value),\n                None =&gt; Ok({ self.right= Some(Box::new(TreeNode::new(value))) }),\n            },\n            Ordering::Equal =&gt; Err(Error::ItemAlreadyExists),\n        }\n    }\n}\n</code></pre>\n\n<p>This is a basic implementation of inserting a value in a binary tree.</p>\n\n<p>The error I'm getting is the following:</p>\n\n<pre><code>error[E0310]: the parameter type `T` may not live long enough\n  --&gt; src\\main.rs:35:47\n   |\n30 | impl&lt;T: Ord&gt; BinaryTree&lt;T&gt; for TreeNode&lt;T&gt; {\n   |      -- help: consider adding an explicit lifetime bound `T: 'static`...\n...\n35 |                 None =&gt; Ok({ self.left = Some(Box::new(TreeNode::new(value))) }),\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What does it mean by parameter <code>T</code> might not live enough? As far as I know, I'm moving <code>T</code> around, I'm not borrowing anything so I shouldn't worry about lifetimes, as everything's owned.</p>\n\n<p>What am I missing here?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1564946738, "post_id": 57349512, "comment_id": 101186903, "body": "Based on the naming of <code>into_url</code>, I would guess it consumes <code>self</code>. I don&#39;t really understand why you have introduced a <code>RefCell</code>. It seems like you just need to clone the url at that point rather than earlier. ie. <code>url.clone().into_url().origin()</code>."}], "answers": [{"tags": [], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "is_accepted": true, "score": 2, "last_activity_date": 1564965262, "creation_date": 1564965262, "answer_id": 57351097, "question_id": 57349512, "link": "https://stackoverflow.com/questions/57349512/how-to-fix-cannot-move-out-of-dereference-of-stdcellref-servo-urlser/57351097#57351097", "title": "How to fix &quot;cannot move out of dereference of `std::cell::Ref&lt;&#39;_, servo_url::ServoUrl&gt;`&quot; compile error with closure", "body": "<p><code>into_*()</code> functions, such as <code>into_url()</code> by convention take ownership of <code>self</code>, which means they destroy (or recycle) their input, leaving nothing behind.</p>\n\n<p>With <code>.borrow()</code> you're only allowed to see the value, but not destroy it. </p>\n\n<p>So either call <code>.clone()</code> to obtain your own copy to pass to <code>into_url()</code>, or if you can work with borrowed values, try <code>as_url()</code> that borrows instead of destroying the original.</p>\n"}], "owner": {"reputation": 3, "user_id": 11881552, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3700dd1b4fc25c599d6210e0e0e718bf?s=128&d=identicon&r=PG&f=1", "display_name": "restitutorOrbis", "link": "https://stackoverflow.com/users/11881552/restitutororbis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 1, "accepted_answer_id": 57351097, "answer_count": 1, "score": 0, "last_activity_date": 1564965262, "creation_date": 1564945970, "last_edit_date": 1564946425, "question_id": 57349512, "link": "https://stackoverflow.com/questions/57349512/how-to-fix-cannot-move-out-of-dereference-of-stdcellref-servo-urlser", "title": "How to fix &quot;cannot move out of dereference of `std::cell::Ref&lt;&#39;_, servo_url::ServoUrl&gt;`&quot; compile error with closure", "body": "<p>I'm working on a PR for Servo and I'm trying to determine whether or not the request URL shares an origin with a list of URLs provided in a response header. I'm trying to determine this using a closure run inside a fold call on the list of URLs. The closure needs to use the request URL but rustc is complaining that the request URL doesn't have the copy trait.</p>\n\n<p>To resolve this, I tried to clone the URL and then put it in a RefCell, and then borrow it from there but now I'm getting the current error and I have no idea how to resolve it.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let url = request.current_url();\n//res is the response\nlet cloned_url = RefCell::new(url.clone());\nlet req_origin_in_timing_allow = res\n    .headers()\n    .get_all(\"Timing-Allow-Origin\")\n    .iter()\n    .map(|header_value| {\n        ServoUrl::parse(header_value.to_str().unwrap())\n            .unwrap()\n            .into_url()\n    })\n    .fold(false, |acc, header_url| {\n        acc || header_url.origin() == cloned_url.borrow().into_url().origin()\n    });\n</code></pre>\n\n<p>Exact compiler error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of dereference of `std::cell::Ref&lt;'_, servo_url::ServoUrl&gt;`\n    --&gt; components/net/http_loader.rs:1265:70\n     |\n1265 |         .fold(false, |acc, header_url| acc || header_url.origin() == cloned_url.borrow().into_url().origin());\n     |                                                                      ^^^^^^^^^^^^^^^^^^^ move occurs because value has type `servo_url::ServoUrl`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["enums", "rust", "yaml", "deserialization", "serde"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1564945962, "post_id": 57349241, "comment_id": 101186728, "body": "I think this structure is different enough from the derived <code>Deserialize</code> and <code>Serialize</code> impls that you can&#39;t just fix it up with attributes. You almost certainly need to implement those traits manually."}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564946591, "post_id": 57349241, "comment_id": 101186874, "body": "@PeterHall Thanks for the input! I fear you are correct... I really have no clue how to, though."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564950944, "post_id": 57349241, "comment_id": 101187854, "body": "Please provide more exemple, it&#39;s unclear what format you want."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565055553, "post_id": 57349241, "comment_id": 101221547, "body": "Why must your Rust structure be as you have specified? Why not follow the pattern laid out in the YAML?"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565084287, "post_id": 57349241, "comment_id": 101231010, "body": "@Shepmaster Because there is some common behaviour related to the member I called <code>common</code> here (in reality, there are more common ones). I want the struct <code>Foo</code> to first take care of the common behaviour, and then pass on to the different <code>Bar</code> for the specifics. Did not include everything in the question in an attempt to keep it &quot;minimal&quot;. If you want to, I can update with more code that makes this clearer?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565098142, "post_id": 57349241, "comment_id": 101238834, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=493a0d3e111d62fe60c943d5330c5b0e\" rel=\"nofollow noreferrer\">You can embed the complex logic and still use it from outside</a>"}, {"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565164602, "post_id": 57349241, "comment_id": 101261615, "body": "@Shepmaster Thanks - interesting idea! I remember reading somewhere that using the Deref trait for anything but smart pointers is an anti pattern, but I can&#39;t really see why so... Anyways, I think this reallu does solve my problem and will be easier than trying to implement Deserialize, so feel free to post it as an answer if you want to."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1565184327, "post_id": 57349241, "comment_id": 101272701, "body": "<i>so feel free to post it as an answer</i> \u2014 that code snippet doesn&#39;t answer the question that you&#39;ve asked (&quot;Deserialize struct with serde when a members enum tag is at the outermost level?&quot;), so it&#39;s wouldn&#39;t be appropriate to post it as such."}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 178, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1565054946, "creation_date": 1564943503, "last_edit_date": 1565054946, "question_id": 57349241, "link": "https://stackoverflow.com/questions/57349241/deserialize-struct-with-serde-when-a-members-enum-tag-is-at-the-outermost-level", "title": "Deserialize struct with serde when a members enum tag is at the outermost level?", "body": "<p>I have a struct containing an enum that I am trying to deserialize from YAML using serde:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::Deserialize;\n\n#[derive(Deserialize, Debug, PartialEq)]\nstruct Foo {\n    common: String,\n    #[serde(flatten)]\n    bar: Bar,\n}\n\n#[derive(Deserialize, Debug, PartialEq)]\n#[serde(rename_all = \"snake_case\")]\nenum Bar {\n    BarA(BarA),\n    BarB(BarB),\n}\n\n#[derive(Deserialize, Debug, PartialEq)]\nstruct BarA {\n    a: String,\n}\n\n#[derive(Deserialize, Debug, PartialEq)]\nstruct BarB {\n    b: String,\n}\n</code></pre>\n\n<pre><code>[dependencies]\nserde = { version = \"1\", features = [\"derive\"] }\nserde_yaml = \"0.8\"\n</code></pre>\n\n<p>The code compiles, but for it to deserialize properly, the YAML needs to look like this:</p>\n\n<pre><code>common: Hello\nbar_a:\n  a: World\n</code></pre>\n\n<p>The problem is that my YAML looks like this:</p>\n\n<pre><code>bar_a:\n  common: Hello\n  a: World\n</code></pre>\n\n<p>Note that the enum tag is at the outermost level, outside the struct. How can I deserialize from that format? My enum is rather long (20+ variants), so I would prefer to avoid anything that would require more boilerplate code.</p>\n\n<p>To be clear, I am looking for something that pass the following test:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(test)]\n#[test]\nfn test() {\n    let input = r#\"\n        bar_a:\n          common: Hello\n          a: World\n    \"#;\n\n    let foo: Foo = serde_yaml::from_str(&amp;input).unwrap();\n\n    assert_eq!(\n        foo,\n        Foo {\n            common: \"Hello\".to_string(),\n            bar: Bar::BarA(BarA {\n                a: \"World\".to_string()\n            })\n        }\n    );\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dc0ad7794f3f25df161a5cfd959df403\" rel=\"nofollow noreferrer\">Here</a> it is on the Rust Playground.</p>\n"}, {"tags": ["rust", "traits", "type-inference", "generic-programming"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564942557, "post_id": 57348872, "comment_id": 101186011, "body": "It&#39;s very unclear what you are trying to do here. The code doesn&#39;t make much sense.  I strongly suspect that you need to include <code>self</code>, <code>&amp;self</code> or <code>&amp;mut self</code> in the method signatures. Or perhaps <code>data</code> should be <code>self</code>?"}, {"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564943701, "post_id": 57348872, "comment_id": 101186254, "body": "I don&#39;t want to include self. Its just a funny theoretical example. Assume I&#39;m an extremist who doesn&#39;t want to use dot notation and keep anemic distinction between functions and data. Can you try to find a solution under these weird constraints?"}, {"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564943946, "post_id": 57348872, "comment_id": 101186290, "body": "Maybe what im trying is not possible im not sure"}], "answers": [{"comments": [{"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "edited": false, "score": 0, "creation_date": 1564944234, "post_id": 57349299, "comment_id": 101186347, "body": "I just realized it, so I modified my question a little bit. What if I have a default method implementation in the trait. Can I still refer to it? without creating a struct"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "edited": false, "score": 0, "creation_date": 1564944313, "post_id": 57349299, "comment_id": 101186368, "body": "@J.M. No. Rust still needs to know which concrete type - in case that concrete type has its own implementation instead of the default."}, {"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "edited": false, "score": 0, "creation_date": 1564944427, "post_id": 57349299, "comment_id": 101186397, "body": "Is there a way in Rust to explicitly say, I want to use the default implementation in the trait definition rather than any concrete implementation? Is there a way to make the default implementation &quot;final&quot; ?"}, {"owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "edited": false, "score": 0, "creation_date": 1564944508, "post_id": 57349299, "comment_id": 101186430, "body": "Well I suppose then I don&#39;t need a trait anymore I can just use a regular function"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "edited": false, "score": 0, "creation_date": 1564944561, "post_id": 57349299, "comment_id": 101186437, "body": "@J.M. Exactly, If you know which function you want to call then call it. What&#39;s the use of traits in that situation?"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1564944259, "last_edit_date": 1564944259, "creation_date": 1564944125, "answer_id": 57349299, "question_id": 57348872, "link": "https://stackoverflow.com/questions/57348872/in-rust-why-are-type-annotations-required-even-if-they-are-explicitly-specified/57349299#57349299", "title": "In rust why are type annotations required even if they are explicitly specified in a generic trait", "body": "<p><code>AAA</code> is a trait but, when a method is called, Rust needs to have enough information to determine which type's implementation to use. In this case it needs to know which implementation of <code>AAA</code> to use when calling <code>aaa</code>.</p>\n\n<p>However, there is nothing in the signature of <code>BBB</code> to say <em>which</em> implementation of <code>AAA</code> to use.</p>\n\n<p>It's very hard to know what you are trying to do, but something like this would provide the information:</p>\n\n<pre><code>pub trait BBB&lt;T, Data, Functions: X&lt;Data&gt;&gt; \nwhere\n    T: AAA&lt;Data, Functions&gt;\n{\n    fn bbb(data: &amp;mut Data) {\n        T::aaa(data);\n    }\n}\n</code></pre>\n\n<p>This is saying that, when the concrete type of the implementor of <code>BBB</code> is known then we'll also know the concrete type of <code>T</code>, which will provide the implementation of <code>AAA</code>.</p>\n"}], "owner": {"reputation": 743, "user_id": 7058336, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/8ab015fdc364a6f1fc3c17e888495568?s=128&d=identicon&r=PG&f=1", "display_name": "jam", "link": "https://stackoverflow.com/users/7058336/jam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 57349299, "answer_count": 1, "score": 0, "last_activity_date": 1564959861, "creation_date": 1564940525, "last_edit_date": 1564959861, "question_id": 57348872, "link": "https://stackoverflow.com/questions/57348872/in-rust-why-are-type-annotations-required-even-if-they-are-explicitly-specified", "title": "In rust why are type annotations required even if they are explicitly specified in a generic trait", "body": "<p>How can I make this code compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait X&lt;ApplyData&gt; {\n    fn apply(data: &amp;mut ApplyData);\n}\n\npub trait AAA&lt;ApplyData, Functions: X&lt;ApplyData&gt;&gt; {\n    fn aaa(data: &amp;mut ApplyData) {\n        //...default code that may use Functions...and call X::apply()\n    }\n}\n\npub trait BBB&lt;Data, Functions: X&lt;Data&gt;&gt; {\n    fn bbb(data: &amp;mut Data) {\n        AAA::&lt;Data, Functions&gt;::aaa(data); // I want to call the default aaa fn defined in the trait BBB\n    }\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `_: AAA&lt;Data, Functions&gt;`\n  --&gt; src/lib.rs:11:9\n   |\n11 |         AAA::&lt;Data, Functions&gt;::aaa(data);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: required by `AAA::aaa`\n  --&gt; src/lib.rs:6:5\n   |\n6  |     fn aaa(data: &amp;mut ApplyData);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Before rustc was complaining it could not infer type of Functions when I was only writing <code>AAA::aaa(data);</code> in <code>BBB</code> trait which I think makes sense.\nNow I explicitly give the compiler <code>Functions</code> but the error I get is cryptic to me.</p>\n"}, {"tags": ["generics", "rust", "traits", "type-inference"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1564939859, "post_id": 57348707, "comment_id": 101185269, "body": "Do you actually mean for <code>function</code> to be generic? Seems like you want <code>T</code> to be <code>Self</code>."}, {"owner": {"reputation": 123, "user_id": 7450567, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PiYHC.png?s=128&g=1", "display_name": "Ardakaniz", "link": "https://stackoverflow.com/users/7450567/ardakaniz"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1564941150, "post_id": 57348707, "comment_id": 101185629, "body": "@mcarton well, indeed, thank you! Still learning Rust and still have some troubles to do what I want. Let&#39;s say that I come from C++ and it&#39;s quite a different way of thinking :D"}], "answers": [{"comments": [{"owner": {"reputation": 123, "user_id": 7450567, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PiYHC.png?s=128&g=1", "display_name": "Ardakaniz", "link": "https://stackoverflow.com/users/7450567/ardakaniz"}, "edited": false, "score": 0, "creation_date": 1564941268, "post_id": 57348982, "comment_id": 101185668, "body": "Thank you, like answered to mcarton, I&#39;m still learning Rust and still have some troubles to do what I want. Let&#39;s say that I come from C++ and it&#39;s quite a different way of thinking"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1564951128, "last_edit_date": 1564951128, "creation_date": 1564941164, "answer_id": 57348982, "question_id": 57348707, "link": "https://stackoverflow.com/questions/57348707/type-annotation-required-even-when-provided/57348982#57348982", "title": "Type annotation required even when provided", "body": "<p>The trait doesn't mention <code>self</code> or <code>Self</code>, but it seems like you are expecting it to somehow infer which instance you intended.</p>\n\n<p>Suppose you had another implementation of <code>Trait</code>:</p>\n\n<pre><code>struct Struct2;\nimpl Trait for Struct2 {\n    type Type = u32;\n}\n</code></pre>\n\n<p>Then, even though you are passing a <code>Struct</code> reference as the first argument, it would make sense for either implementation. This is ok:</p>\n\n<pre><code>let val = Struct;\n&lt;Struct as Trait&gt;::function(&amp;val, 5u32);\n</code></pre>\n\n<p>And this is ok:</p>\n\n<pre><code>let val = Struct;\n&lt;Struct2 as Trait&gt;::function(&amp;val, 5u32);\n</code></pre>\n\n<p>If you intended for the type passed to <code>function</code> to determine the instance, then the argument should be typed as <code>Self</code> instead of <code>T</code>:</p>\n\n<pre><code>trait Trait {\n    type Type;\n\n    fn function(&amp;self, ty: Self::Type) {}\n}\n</code></pre>\n\n<p>Now, it will correctly infer the instance without additional type annotations.</p>\n"}], "owner": {"reputation": 123, "user_id": 7450567, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PiYHC.png?s=128&g=1", "display_name": "Ardakaniz", "link": "https://stackoverflow.com/users/7450567/ardakaniz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 57348982, "answer_count": 1, "score": 0, "last_activity_date": 1564959941, "creation_date": 1564939107, "last_edit_date": 1564959941, "question_id": 57348707, "link": "https://stackoverflow.com/questions/57348707/type-annotation-required-even-when-provided", "title": "Type annotation required even when provided", "body": "<p>I want to do something like this:</p>\n\n<pre><code>trait Trait {\n    type Type;\n\n    fn function&lt;T&gt;(val1: &amp;T, ty: T::Type)\n        where T: Trait\n    {}\n}\n\nstruct Struct;\nimpl Trait for Struct {\n    type Type = u32;\n}\n\nfn main() {\n    let val = Struct;\n    Trait::function(&amp;val, 5u32);\n}\n</code></pre>\n\n<p>And I got the error: <code>error[E0284]: type annotations required: cannot resolve `&lt;_ as Trait&gt;::Type == _`</code>\n(c.f <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=60ca0bf085645278298c8be07e170f50\" rel=\"nofollow noreferrer\">rust playground</a>)</p>\n\n<p>But even when I add type annotation (<code>Trait::function::&lt;Struct&gt;(&amp;val, 5u32)</code>), I have the same error.</p>\n\n<p>Any clue about the reason of this error?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564986663, "post_id": 57347728, "comment_id": 101193882, "body": "Instead of using <code>#[allow(unused)]</code> you could just remove the unused variables in your post ;) Please do that next time and use <code>rustfmt</code> to format your code according to the guidelines of Rust."}], "answers": [{"tags": [], "owner": {"reputation": 1224, "user_id": 4950659, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/ygz0E.jpg?s=128&g=1", "display_name": "AdminXVII", "link": "https://stackoverflow.com/users/4950659/adminxvii"}, "is_accepted": false, "score": 0, "last_activity_date": 1564932973, "creation_date": 1564932973, "answer_id": 57347911, "question_id": 57347728, "link": "https://stackoverflow.com/questions/57347728/how-to-return-a-struct-from-inside-an-rc/57347911#57347911", "title": "How to return a struct from inside an Rc?", "body": "<p>If you want to remove the Rc, <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html#method.try_unwrap\" rel=\"nofollow noreferrer\"><code>try_unwrap</code></a> might be worth taking a look at. You can unwrap the result if you are sure that no other reference will exist.</p>\n"}, {"tags": [], "owner": {"reputation": 1730, "user_id": 573791, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1a286a392ecc96e9cb40c03134b96841?s=128&d=identicon&r=PG", "display_name": "bosgood", "link": "https://stackoverflow.com/users/573791/bosgood"}, "is_accepted": true, "score": 1, "last_activity_date": 1564939109, "creation_date": 1564939109, "answer_id": 57348708, "question_id": 57347728, "link": "https://stackoverflow.com/questions/57347728/how-to-return-a-struct-from-inside-an-rc/57348708#57348708", "title": "How to return a struct from inside an Rc?", "body": "<p>From the docs, <code>Rc</code> is a <a href=\"https://doc.rust-lang.org/std/rc/index.html\" rel=\"nofollow noreferrer\">reference-counted pointer</a>. It is used for sharing data between different sections of code without needing to have a single owner. However, this also hints at the reason your code is unable to directly return a <code>Data</code>: in order to return that, it must first find a way to satisfy the borrow checker's notion of data ownership.</p>\n\n<p>The options are generally to take sole ownership of the data, or clone it. In the edited code included below, I've changed <code>get_data</code> to first get access to <code>Data</code> by dereferencing the pointer (<code>Rc</code> implements the <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code> trait</a>), and then cloning the struct before returning it. Because the return type is <code>Data</code> (and not <code>&amp;Data</code>) this means that this value is now owned by the caller. Because it was cloned, any mutations will not be visible to any code still referring to the <code>Rc&lt;Data&gt;</code>. Note that I needed to derive the <code>Clone</code> trait on <code>Data</code> before the <code>clone</code> method was available.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![allow(unused)]\nuse std::rc::Rc;\nuse std::error;\nuse std::error::Error;\nfn main() {\n    #[derive(Clone)]\n    pub struct Data {\n        pub tag: Vec&lt;u8&gt;,\n        pub bytes: [u8; 32], \n        pub length: u8,\n    }\n\n    pub struct SharedData {\n        pointer: Rc&lt;Data&gt;,\n    }\n\n    pub fn get_data(shared: SharedData) -&gt; Data {\n        // Dereference the pointer, and then return\n        // a copy of its data\n        (*shared.pointer).clone()\n    }\n\n    pub fn get_data_length(shared: SharedData) -&gt; u8 {\n        // For simpler types, you can just access the fields inside\n        // Data directly\n        shared.pointer.length\n    }\n}\n</code></pre>\n\n<p>I've also included a <code>get_data_length</code> to demonstrate that individual members of the shared data can also be returned without formally cloning.</p>\n\n<p>Finally, if you intend to have shared <em>mutable</em> access to data, a <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> might be a more appropriate choice than an <code>Rc</code>.</p>\n"}], "owner": {"reputation": 115, "user_id": 11881000, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-2iO0iyvFT4U/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf-9Kr7-k7MDFKuEITEck3ca_UyIw/photo.jpg?sz=128", "display_name": "Gman man", "link": "https://stackoverflow.com/users/11881000/gman-man"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 57348708, "answer_count": 2, "score": 1, "last_activity_date": 1593032625, "creation_date": 1564931448, "last_edit_date": 1593032625, "question_id": 57347728, "link": "https://stackoverflow.com/questions/57347728/how-to-return-a-struct-from-inside-an-rc", "title": "How to return a struct from inside an Rc?", "body": "<p>I have a struct wrapped in a <code>Rc</code> called <code>Data</code>. I want to create a function that returns the <code>Data</code> inside the <code>Rc</code>:</p>\n<pre><code>use std::rc::Rc;\n\nfn main() {\n    pub struct Data {\n        pub tag: Vec&lt;u8&gt;,\n        pub bytes: [u8; 32],\n        pub length: u8,\n    }\n\n    pub struct SharedData {\n        pointer: Rc&lt;Data&gt;,\n    }\n\n    pub fn get_data(shared: SharedData) -&gt; Data {\n        shared.pointer\n    }\n}\n</code></pre>\n<p>In this contrived example I have stripped away a lot of my surrounding code so the idea might look strange.</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564929881, "post_id": 57347289, "comment_id": 101182728, "body": "Please post the exact error message!"}, {"owner": {"reputation": 41, "user_id": 11880820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f52d179ed3204f3ec6652b8e5ff6c4c4?s=128&d=identicon&r=PG&f=1", "display_name": "BitMender", "link": "https://stackoverflow.com/users/11880820/bitmender"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564933945, "post_id": 57347289, "comment_id": 101183720, "body": "I added the error message."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564942915, "post_id": 57347289, "comment_id": 101186095, "body": "The first part of the error should be clear. <code>load</code> takes 1 type parameter, but you are providing two..."}, {"owner": {"reputation": 41, "user_id": 11880820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f52d179ed3204f3ec6652b8e5ff6c4c4?s=128&d=identicon&r=PG&f=1", "display_name": "BitMender", "link": "https://stackoverflow.com/users/11880820/bitmender"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1565003997, "post_id": 57347289, "comment_id": 101201893, "body": "Thanks. I finally figured this one out by myself. <code>let result =  match contacts::table             .inner_join(emails::table)             .load::&lt;(models::Contact, models::Email)&gt;(&amp;self.conn) {                 Ok(rows) =&gt; rows,                 Err(_) =&gt; return Err(io::Error::new(io::ErrorKind::Other, &quot;Database error&quot;)),         }; </code> The type definition must be a tuple. Only the grouping to get a nice result is now missing. Thanks."}], "owner": {"reputation": 41, "user_id": 11880820, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f52d179ed3204f3ec6652b8e5ff6c4c4?s=128&d=identicon&r=PG&f=1", "display_name": "BitMender", "link": "https://stackoverflow.com/users/11880820/bitmender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 504, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1564942681, "creation_date": 1564928104, "last_edit_date": 1564942681, "question_id": 57347289, "link": "https://stackoverflow.com/questions/57347289/how-to-fetch-associations-with-diesel", "title": "How to fetch associations with diesel", "body": "<p>I'm learning Rust and I'm trying to load an association from a database using Diesel. I have the following models defined:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Identifiable, Queryable, PartialEq, Debug)]\n#[table_name = \"contacts\"]\npub struct Contact {\n    pub id: i32,\n    pub firstname: String,\n    pub lastname: String,\n}\n\n#[derive(Identifiable, Queryable, Associations, PartialEq, Debug)]\n#[belongs_to(Contact)]\n#[table_name = \"emails\"]\npub struct Email {\n    pub id: i32, \n    pub contact_id: i32,\n    pub label: String,\n    pub email: String,\n}\n</code></pre>\n\n<p>Now I'm trying to fetch all contacts with their associated emails using the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result = match contacts::table\n    .inner_join(emails::table)\n    .load::&lt;models::Contact, Vec&lt;models::Email&gt;&gt;(&amp;self.conn)\n{\n    Ok(rows) =&gt; rows,\n    Err(_) =&gt; return Err(io::Error::new(io::ErrorKind::Other, \"Database error\")),\n};\n</code></pre>\n\n<p>But this is not working. What am I missing? The error is something about a trait bound that is not satisfied.</p>\n\n<p>Complete error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0107]: wrong number of type arguments: expected 1, found 2\n  --&gt; src/db.rs:44:38\n   |\n44 |             .load::&lt;models::Contact, Vec&lt;models::Email&gt;&gt;(&amp;self.conn) {\n   |                                      ^^^^^^^^^^^^^^^^^^ unexpected type argument\n\nerror[E0277]: the trait bound `(i32, std::string::String, std::string::String): diesel::Queryable&lt;((diesel::sql_types::Integer, diesel::sql_types::Text, diesel::sql_types::Text), (diesel::sql_types::Integer, diesel::sql_types::Nullable&lt;diesel::sql_types::Integer&gt;, diesel::sql_types::Text, diesel::sql_types::Text)), _&gt;` is not satisfied\n  --&gt; src/db.rs:44:14\n   |\n44 |             .load::&lt;models::Contact, Vec&lt;models::Email&gt;&gt;(&amp;self.conn) {\n   |              ^^^^ the trait `diesel::Queryable&lt;((diesel::sql_types::Integer, diesel::sql_types::Text, diesel::sql_types::Text), (diesel::sql_types::Integer, diesel::sql_types::Nullable&lt;diesel::sql_types::Integer&gt;, diesel::sql_types::Text, diesel::sql_types::Text)), _&gt;` is not implemented for `(i32, std::string::String, std::string::String)`\n   |\n   = help: the following implementations were found:\n             &lt;(A, B, C) as diesel::Queryable&lt;(SA, SB, SC), __DB&gt;&gt;\n             &lt;(A, B, C) as diesel::Queryable&lt;diesel::sql_types::Record&lt;(SA, SB, SC)&gt;, diesel::pg::Pg&gt;&gt;\n   = note: required because of the requirements on the impl of `diesel::Queryable&lt;((diesel::sql_types::Integer, diesel::sql_types::Text, diesel::sql_types::Text), (diesel::sql_types::Integer, diesel::sql_types::Nullable&lt;diesel::sql_types::Integer&gt;, diesel::sql_types::Text, diesel::sql_types::Text)), _&gt;` for `models::Contact`\n   = note: required because of the requirements on the impl of `diesel::query_dsl::LoadQuery&lt;_, models::Contact&gt;` for `diesel::query_builder::SelectStatement&lt;diesel::query_source::joins::JoinOn&lt;diesel::query_source::joins::Join&lt;schema::contacts::table, schema::emails::table, diesel::query_source::joins::Inner&gt;, diesel::expression::operators::Eq&lt;diesel::expression::nullable::Nullable&lt;schema::emails::columns::contact_id&gt;, diesel::expression::nullable::Nullable&lt;schema::contacts::columns::id&gt;&gt;&gt;&gt;`\n</code></pre>\n"}, {"tags": ["rust", "closures", "move-semantics", "lifetime", "borrowing"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1564927084, "post_id": 57347091, "comment_id": 101182090, "body": "Note that using <code>self.member</code> in the closure will use the value of <code>member</code> at the time of calling the closure while using a temporary variable will use the value of member at the time of calling <code>func</code>. This is a big semantic difference and the compiler is not allowed to change that just to allow you to avoid adding one line of code to create a temporary."}, {"owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1564928778, "post_id": 57347091, "comment_id": 101182485, "body": "@mcarton Just a thought: As much as I understand, Rust ownership rules prohibit mutation of immutably-referenced data. Couldn&#39;t that prevent the semantic difference between the two? Anyway, I get it. but isn&#39;t there a way for me to signal I want to <code>move</code> the member itself?"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1564928649, "creation_date": 1564928649, "answer_id": 57347357, "question_id": 57347091, "link": "https://stackoverflow.com/questions/57347091/could-not-work-out-a-closure-returned-from-a-method-capturing-a-member-variable/57347357#57347357", "title": "Could not work out a closure returned from a method capturing a member variable", "body": "<blockquote>\n  <p>The first, why does the function closure restricting my closure?</p>\n</blockquote>\n\n<p>Inside the method, <code>self</code> is actually a reference, due to it being declared as <code>&amp;self</code> in the method signature. Using a reference inside a <code>move</code> closure will move the reference, but not the underlying value.</p>\n\n<p>The immediate errors that you are seeing are because the <code>Box</code> returned from the method contains a reference to the struct, but could outlive the struct. If this were allowed, the closure could access a dangling pointer, which Rust forbids.</p>\n\n<blockquote>\n  <p>The second, how can I force the move of a struct member without copying it to a temp variable</p>\n</blockquote>\n\n<p>In order to avoid referencing <code>self</code> in the closure, this is what you will have to do. You cannot move a struct member <em>without</em> copying (or cloning) it - otherwise the struct would be left incomplete. This is a completely normal thing to do in Rust. For example:</p>\n\n<pre><code>impl Struct {\n    fn func(&amp;self) -&gt; Box&lt;dyn Fn(usize) -&gt; usize&gt; {\n        let temp = self.member;\n        Box::new(move |argument| {\n            temp + argument\n        })\n    }\n}\n</code></pre>\n\n<p>If you don't need the struct again after calling <code>func</code> then you can take <code>self</code> by value instead:</p>\n\n<pre><code>impl Struct {\n    fn func(self) -&gt; Box&lt;dyn Fn(usize) -&gt; usize&gt; {\n        Box::new(move |argument| {\n            self.member + argument\n        })\n    }\n}\n</code></pre>\n\n<p>This works because <code>self</code> is moved into the closure. It is no longer usable anywhere else however.</p>\n"}], "owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1564960053, "creation_date": 1564926490, "last_edit_date": 1564960053, "question_id": 57347091, "link": "https://stackoverflow.com/questions/57347091/could-not-work-out-a-closure-returned-from-a-method-capturing-a-member-variable", "title": "Could not work out a closure returned from a method capturing a member variable", "body": "<p>I am trying to implement a method for a struct which returns a closure <code>move</code>-capturing one of its members. The rationale is that the member is <code>Copy</code> and so the closure could copy it and shouldn't be tied to the struct lifetime. However, it doesn't compile.</p>\n\n<p>I was hoping Rust won't insist on <code>copy</code>ing the <code>&amp;self</code> reference, and by that keeping the reference to the struct tying the closure lifetime to the struct lifetime. When it didn't compile I expected this in the error message, but - somewhat surprisingly - I am not sure that's the exact problem.<br>\nThe anonymous lifetime which restricts the closure is the function lifetime, which is the lifetime of <code>&amp;self</code> - not of <code>self</code>. As I <code>move</code> it, I really don't get what's the problem.</p>\n\n<p>I actually have two questions:<br>\nThe first, why does the function lifetime restrict my closure? (Could be a misunderstanding of the error message on my side, which I'd love pointed out).<br>\nThe second, how can I force the <code>move</code> of a struct member without copying it to a <code>temp</code> variable (just before returning the closure) and inside the closure using this <code>temp</code> (which works, but is inelegant in my eyes).</p>\n\n<p>Here's a simplified version of my code:</p>\n\n<pre><code>struct Struct {\n    member: usize\n}\n\nimpl Struct {\n    fn func(&amp;self) -&gt; Box&lt;dyn Fn(usize)-&gt;usize&gt; {\n        Box::new(move |argument: usize| {\n            self.member + argument\n        })\n    }\n}\n\nfn main() {\n    let s = Struct { member: 4 };\n    println!(\"{}\", s.func()(5));\n}\n</code></pre>\n\n<p>This, when compiled, gives this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n --&gt; src\\main.rs:7:18\n  |\n7 |           Box::new(move |argument: usize| {\n  |  __________________^\n8 | |             self.member + argument\n9 | |         })\n  | |_________^\n  |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 6:5...\n --&gt; src\\main.rs:6:5\n  |\n6 | /     fn func(&amp;self) -&gt; Box&lt;dyn Fn(usize)-&gt;usize&gt; {\n7 | |         Box::new(move |argument: usize| {\n8 | |             self.member + argument\n9 | |         })\n10| |     }\n  | |_____^\n  = note: ...so that the types are compatible:\n          expected &amp;Struct\n             found &amp;Struct\n  = note: but, the lifetime must be valid for the static lifetime...\n  = note: ...so that the expression is assignable:\n          expected std::boxed::Box&lt;(dyn std::ops::Fn(usize) -&gt; usize + 'static)&gt;\n             found std::boxed::Box&lt;dyn std::ops::Fn(usize) -&gt; usize&gt;\n\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 731, "user_id": 1501994, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4c6150255566bbfd0a093239cd04da05?s=128&d=identicon&r=PG&f=1", "display_name": "bluefoggy", "link": "https://stackoverflow.com/users/1501994/bluefoggy"}, "edited": false, "score": 0, "creation_date": 1564909414, "post_id": 57345197, "comment_id": 101178433, "body": "Thanks for the edit, enclosing the code in main fn."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564910124, "post_id": 57345197, "comment_id": 101178575, "body": "Do you know beforehand which is longest?"}, {"owner": {"reputation": 731, "user_id": 1501994, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4c6150255566bbfd0a093239cd04da05?s=128&d=identicon&r=PG&f=1", "display_name": "bluefoggy", "link": "https://stackoverflow.com/users/1501994/bluefoggy"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564910259, "post_id": 57345197, "comment_id": 101178602, "body": "Well, i can at least find out, and call iter on the longest.  And the other thing is even if i make the iter call on num2 instead of num1,  it stops when any one of the iterator gets exhausted."}], "answers": [{"tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 8, "last_activity_date": 1564910216, "creation_date": 1564910216, "answer_id": 57345334, "question_id": 57345197, "link": "https://stackoverflow.com/questions/57345197/how-to-zip-two-iterators-of-unequal-length-with-a-default/57345334#57345334", "title": "How to zip two iterators of unequal length with a default?", "body": "<p>You could use the <code>zip_longest</code> provided by the <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.zip_longest\" rel=\"noreferrer\"><code>itertools</code></a> crate.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::{\n    Itertools,\n    EitherOrBoth::*,\n};\n\nfn main() {\n    let num1 = vec![1, 2];\n    let num2 = vec![3];\n\n    for pair in num1.iter().rev().zip_longest(num2.iter().rev()) {\n        match pair {\n            Both(l, r) =&gt; println!(\"({:?}, {:?})\", l, r),\n            Left(l) =&gt; println!(\"({:?}, 0)\", l),\n            Right(r) =&gt; println!(\"(0, {:?})\", r),\n        }\n    }\n}\n</code></pre>\n\n<p>Which would produce the following output:</p>\n\n<pre><code>(2, 3)\n(1, 0)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 731, "user_id": 1501994, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4c6150255566bbfd0a093239cd04da05?s=128&d=identicon&r=PG&f=1", "display_name": "bluefoggy", "link": "https://stackoverflow.com/users/1501994/bluefoggy"}, "edited": false, "score": 2, "creation_date": 1564911105, "post_id": 57345349, "comment_id": 101178792, "body": "Both the answers were good. And your answer work for me, loved it because it does work without using any external crate. But for now, I am accepting @Peter Varo &#39;s answer."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 9, "last_activity_date": 1564910368, "creation_date": 1564910368, "answer_id": 57345349, "question_id": 57345197, "link": "https://stackoverflow.com/questions/57345197/how-to-zip-two-iterators-of-unequal-length-with-a-default/57345349#57345349", "title": "How to zip two iterators of unequal length with a default?", "body": "<p>Zip will stop as soon as one of iterators stops producing values. If you know which is the longest, you can pad the shorter one with your default value:</p>\n\n<pre><code>use std::iter;\n\nfn main() {\n    let longer = vec![1, 2];\n    let shorter = vec![3];\n\n    for i in longer\n        .iter()\n        .rev()\n        .zip(shorter.iter().rev().chain(iter::repeat(&amp;0)))\n    {\n        println!(\"{:?}\", i);\n    }\n}\n</code></pre>\n\n<p>If you don't know which is longest, you should use itertools, as <a href=\"https://stackoverflow.com/a/57345334/493729\">Peter Varo suggests</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 731, "user_id": 1501994, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4c6150255566bbfd0a093239cd04da05?s=128&d=identicon&r=PG&f=1", "display_name": "bluefoggy", "link": "https://stackoverflow.com/users/1501994/bluefoggy"}, "edited": false, "score": 3, "creation_date": 1564911421, "post_id": 57345426, "comment_id": 101178846, "body": "wow, thanks a ton for such a detailed code. Am new to Rust coming from a dynamic language and really loving it."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 6, "last_activity_date": 1564912002, "last_edit_date": 1564912002, "creation_date": 1564911108, "answer_id": 57345426, "question_id": 57345197, "link": "https://stackoverflow.com/questions/57345197/how-to-zip-two-iterators-of-unequal-length-with-a-default/57345426#57345426", "title": "How to zip two iterators of unequal length with a default?", "body": "<p>The key is to detect that one iterator is shorter then the other, you could do it before before in your case vector implement <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"noreferrer\"><code>ExactSizeIterator</code></a> but a general solution would be to have a custom <code>.zip()</code>.</p>\n\n<p><a href=\"https://crates.io/crates/itertools\" rel=\"noreferrer\">itertools</a> already offer a general solution, <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.zip_longest\" rel=\"noreferrer\"><code>.zip_longest()</code></a>:</p>\n\n<pre><code>use itertools::EitherOrBoth::{Both, Left, Right};\nuse itertools::Itertools;\n\nfn main() {\n    let num1 = vec![1, 2];\n    let num2 = vec![3];\n\n    for i in num1\n        .iter()\n        .rev()\n        .zip_longest(num2.iter().rev())\n        .map(|x| match x {\n            Both(a, b) =&gt; (a, b),\n            Left(a) =&gt; (a, &amp;0),\n            Right(b) =&gt; (&amp;0, b),\n        })\n    {\n        println!(\"{:?}\", i);\n    }\n}\n</code></pre>\n\n<p>This require you write the closure everytime, if you need this feature a lot maybe implement a custom trait on iterator with <code>.zip_default()</code> where <code>A</code> and <code>B</code> implement <a href=\"https://doc.rust-lang.org/std/default/trait.Default.html\" rel=\"noreferrer\"><code>Default</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::default::Default;\nuse std::iter::Fuse;\n\npub trait MyIterTools: Iterator {\n    fn zip_default&lt;J&gt;(self, other: J) -&gt; ZipDefault&lt;Self, J::IntoIter&gt;\n    where\n        J: IntoIterator,\n        Self: Sized,\n    {\n        ZipDefault::new(self, other.into_iter())\n    }\n}\n\n#[derive(Clone, Debug)]\npub struct ZipDefault&lt;I, J&gt; {\n    i: Fuse&lt;I&gt;,\n    j: Fuse&lt;J&gt;,\n}\n\nimpl&lt;I, J&gt; ZipDefault&lt;I, J&gt;\nwhere\n    I: Iterator,\n    J: Iterator,\n{\n    fn new(i: I, j: J) -&gt; Self {\n        Self {\n            i: i.fuse(),\n            j: j.fuse(),\n        }\n    }\n}\n\nimpl&lt;T, U, A, B&gt; Iterator for ZipDefault&lt;T, U&gt;\nwhere\n    T: Iterator&lt;Item = A&gt;,\n    U: Iterator&lt;Item = B&gt;,\n    A: Default,\n    B: Default,\n{\n    type Item = (A, B);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match (self.i.next(), self.j.next()) {\n            (Some(a), Some(b)) =&gt; Some((a, b)),\n            (Some(a), None) =&gt; Some((a, B::default())),\n            (None, Some(b)) =&gt; Some((A::default(), b)),\n            (None, None) =&gt; None,\n        }\n    }\n}\n\nimpl&lt;T: ?Sized&gt; MyIterTools for T where T: Iterator {}\n\nfn main() {\n    let num1 = vec![1, 2];\n    let num2 = vec![3];\n\n    for i in num1\n        .iter()\n        .copied()\n        .rev()\n        .zip_default(num2.iter().copied().rev())\n    {\n        println!(\"{:?}\", i);\n    }\n}\n</code></pre>\n\n<p>Using itertools we can delegate some logic:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::default::Default;\nuse itertools::Itertools;\nuse itertools::ZipLongest;\nuse itertools::EitherOrBoth::{Both, Left, Right};\n\npub trait MyIterTools: Iterator {\n    fn zip_default&lt;J&gt;(self, j: J) -&gt; ZipDefault&lt;Self, J::IntoIter&gt;\n    where\n        Self: Sized,\n        J: IntoIterator,\n    {\n        ZipDefault::new(self, j.into_iter())\n    }\n}\n\n#[derive(Clone, Debug)]\npub struct ZipDefault&lt;I, J&gt; {\n    inner: ZipLongest&lt;I, J&gt;,\n}\n\nimpl&lt;I, J&gt; ZipDefault&lt;I, J&gt;\nwhere\n    I: Iterator,\n    J: Iterator,\n{\n    fn new(i: I, j: J) -&gt; Self {\n        Self {\n            inner: i.zip_longest(j),\n        }\n    }\n}\n\nimpl&lt;T, U, A, B&gt; Iterator for ZipDefault&lt;T, U&gt;\nwhere\n    T: Iterator&lt;Item = A&gt;,\n    U: Iterator&lt;Item = B&gt;,\n    A: Default,\n    B: Default,\n{\n    type Item = (A, B);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.inner.next()? {\n            Both(a, b) =&gt; Some((a, b)),\n            Left(a) =&gt; Some((a, B::default())),\n            Right(b) =&gt; Some((A::default(), b)),\n        }\n    }\n\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        self.inner.size_hint()\n    }\n}\n\nimpl&lt;T: ?Sized&gt; MyIterTools for T where T: Iterator {}\n\nfn main() {\n    let num1 = vec![1, 2];\n    let num2 = vec![3];\n\n    for i in num1\n        .iter()\n        .copied()\n        .rev()\n        .zip_default(num2.iter().copied().rev())\n    {\n        println!(\"{:?}\", i);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 392, "user_id": 12425329, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SBtVX.jpg?s=128&g=1", "display_name": "Tianyi Shi", "link": "https://stackoverflow.com/users/12425329/tianyi-shi"}, "is_accepted": false, "score": 1, "last_activity_date": 1604768897, "last_edit_date": 1604768897, "creation_date": 1604766250, "answer_id": 64729879, "question_id": 57345197, "link": "https://stackoverflow.com/questions/57345197/how-to-zip-two-iterators-of-unequal-length-with-a-default/64729879#64729879", "title": "How to zip two iterators of unequal length with a default?", "body": "<p>If you can get the length of the iterators, as is in this case, a quick and dirty way could be:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::iter::repeat;\n\nfn main() {\n    let a = vec![1, 2, 3];\n    let b = vec![4, 5, 6, 7];\n\n    for i in a\n        .iter()\n        .rev()\n        .chain(repeat(&amp;0).take(b.len().saturating_sub(a.len())))\n        .zip(\n            b.iter()\n                .rev()\n                .chain(repeat(&amp;0).take(a.len().saturating_sub(b.len()))),\n        )\n    {\n        println!(&quot;{:?}&quot;, i);\n    }\n}\n</code></pre>\n<p>You can also implement a trait containing a <code>zip_default()</code> using this approach:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>\npub trait MyIterTools&lt;X: Default + Clone&gt;: ExactSizeIterator&lt;Item = X&gt; {\n    fn zip_default&lt;J, Y&gt;(self, j: J) -&gt; ZipDefault&lt;Self, J::IntoIter, X, Y&gt;\n    where\n        Self: Sized,\n        J: IntoIterator&lt;Item = Y&gt;,\n        J::IntoIter: ExactSizeIterator,\n        Y: Default + Clone,\n    {\n        ZipDefault::new(self, j.into_iter())\n    }\n}\n\n#[derive(Clone, Debug)]\npub struct ZipDefault&lt;\n    I: ExactSizeIterator&lt;Item = X&gt;,\n    J: ExactSizeIterator&lt;Item = Y&gt;,\n    X: Default + Clone,\n    Y: Default + Clone,\n&gt; {\n    inner: Zip&lt;Chain&lt;I, Take&lt;Repeat&lt;X&gt;&gt;&gt;, Chain&lt;J, Take&lt;Repeat&lt;Y&gt;&gt;&gt;&gt;,\n}\n\nimpl&lt;\n        I: ExactSizeIterator&lt;Item = X&gt;,\n        J: ExactSizeIterator&lt;Item = Y&gt;,\n        X: Default + Clone,\n        Y: Default + Clone,\n    &gt; ZipDefault&lt;I, J, X, Y&gt;\n{\n    fn new(a: I, b: J) -&gt; Self {\n        let a_len = a.len();\n        let b_len = b.len();\n        Self {\n            inner: a\n                .chain(repeat(X::default()).take(b_len.saturating_sub(a_len)))\n                .zip(b.chain(repeat(Y::default()).take(a_len.saturating_sub(b_len)))),\n        }\n    }\n}\n\nimpl&lt;\n        I: ExactSizeIterator&lt;Item = X&gt;,\n        J: ExactSizeIterator&lt;Item = Y&gt;,\n        X: Default + Clone,\n        Y: Default + Clone,\n    &gt; Iterator for ZipDefault&lt;I, J, X, Y&gt;\n{\n    type Item = (X, Y);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.inner.next()\n    }\n\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        self.inner.size_hint()\n    }\n}\n\nimpl&lt;T: ExactSizeIterator&lt;Item = X&gt;, X: Default + Clone&gt; MyIterTools&lt;X&gt; for T {}\n</code></pre>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a = vec![1, 2, 3];\n    let b = vec![4, 5, 6, 7];\n\n    a.into_iter()\n        .zip_default(b.into_iter())\n        .for_each(|i| println!(&quot;{:?}&quot;, i));\n}\n</code></pre>\n"}], "owner": {"reputation": 731, "user_id": 1501994, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4c6150255566bbfd0a093239cd04da05?s=128&d=identicon&r=PG&f=1", "display_name": "bluefoggy", "link": "https://stackoverflow.com/users/1501994/bluefoggy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1583, "favorite_count": 0, "accepted_answer_id": 57345334, "answer_count": 4, "score": 8, "last_activity_date": 1604768897, "creation_date": 1564908826, "last_edit_date": 1564960085, "question_id": 57345197, "link": "https://stackoverflow.com/questions/57345197/how-to-zip-two-iterators-of-unequal-length-with-a-default", "title": "How to zip two iterators of unequal length with a default?", "body": "<p>I'm trying to zip two iterators of unequal length, it only returns when when there is value in both and ignores the rest in the longest iterator.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let num1 = vec![1, 2];\n    let num2 = vec![3];\n\n    for i in num1.iter().rev().zip(num2.iter().rev()) {\n        println!(\"{:?}\", i);\n    }\n}\n</code></pre>\n\n<p>This returns <code>(2, 3)</code>.  How do i make it return:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(2, 3)\n(1, 0) // default is the 0 here.\n</code></pre>\n\n<p>Is there any other way to do it?</p>\n"}, {"tags": ["methods", "reference", "rust"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1564874601, "creation_date": 1564874601, "answer_id": 57342743, "question_id": 57342676, "link": "https://stackoverflow.com/questions/57342676/calling-method-on-subslice-without-reference/57342743#57342743", "title": "Calling method on subslice without reference", "body": "<p>This is due to Rust's auto-ref rules. When you call a method that takes <code>&amp;self</code> (such as <code>to_owned</code>) on a value  instead of a reference, Rust will automatically take a reference in order to call the method.</p>\n\n<p>The code compiles because there is never a time that the unsized type is accessed except via a reference.</p>\n"}], "owner": {"reputation": 4849, "user_id": 3234803, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/FEjsw.png?s=128&g=1", "display_name": "Zizheng Tai", "link": "https://stackoverflow.com/users/3234803/zizheng-tai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "accepted_answer_id": 57342743, "answer_count": 1, "score": 2, "last_activity_date": 1564874847, "creation_date": 1564873755, "last_edit_date": 1564874847, "question_id": 57342676, "link": "https://stackoverflow.com/questions/57342676/calling-method-on-subslice-without-reference", "title": "Calling method on subslice without reference", "body": "<p>Normally in Rust, you can't assign a (sub)slice of something to a local variable without taking its reference since a <code>str</code> has unknown size:</p>\n\n<pre><code>let s = \"hello\";\nlet x = s[..]; // doesn't compile\nlet y = &amp;s[..]; // ok\n</code></pre>\n\n<p>However, I noticed you can call a method directly on a slice:</p>\n\n<pre><code>let x = s[..].to_owned(); // ok\nlet y = (&amp;s[..]).to_owned(); // ok\n</code></pre>\n\n<p>Is there any difference between the two ways, in terms of semantics and performance?</p>\n"}, {"tags": ["rust", "macros", "rust-proc-macros"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1564868352, "post_id": 57342132, "comment_id": 101172792, "body": "&quot;<i>that comes from the definition of a Rust function</i>&quot; -- to be clear here: the token stream contains tokens which define a Rust function? For example, if you attach a custom <code>#[my_attr]</code> to a function. Is my understanding correct? Maybe you could rephrase the sentence a bit to make this more clear. Thanks!"}, {"owner": {"reputation": 576, "user_id": 3623290, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ed4ff1d9e2be2b4a7f4511af9045a6f9?s=128&d=identicon&r=PG&f=1", "display_name": "Stephane Bersier", "link": "https://stackoverflow.com/users/3623290/stephane-bersier"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1564879619, "post_id": 57342132, "comment_id": 101174200, "body": "@LukasKalbertodt Yes, correct."}], "answers": [{"comments": [{"owner": {"reputation": 576, "user_id": 3623290, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ed4ff1d9e2be2b4a7f4511af9045a6f9?s=128&d=identicon&r=PG&f=1", "display_name": "Stephane Bersier", "link": "https://stackoverflow.com/users/3623290/stephane-bersier"}, "edited": false, "score": 0, "creation_date": 1564880162, "post_id": 57342193, "comment_id": 101174245, "body": "Thanks! Would there have been an easy way for me to figure out that <code>syn::FnDecl</code> is the type associated with function declaration syntax trees? Assuming I didn&#39;t have the links you gave me, how could I have found this information?"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1564869026, "last_edit_date": 1564869026, "creation_date": 1564867362, "answer_id": 57342193, "question_id": 57342132, "link": "https://stackoverflow.com/questions/57342132/how-to-find-the-correct-return-type-for-synparse/57342193#57342193", "title": "How to find the correct return type for syn::parse?", "body": "<p>The <a href=\"https://docs.rs/syn/0.15.42/syn/fn.parse.html\" rel=\"nofollow noreferrer\"><code>syn::parse</code></a> function tries to parse a <code>TokenStream</code> into whatever <em>you</em> expect it to be.  As the documentation says:</p>\n\n<blockquote>\n  <p>Parse tokens of source code into the chosen syntax tree node.</p>\n</blockquote>\n\n<p>It takes a type parameter, which you usually provide using type inference. For example, if you were expecting to parse a function declaration:</p>\n\n<pre><code>let fn_decl: syn::FnDecl = syn::parse(token_stream).unwrap();\n</code></pre>\n\n<p>This would panic if it was unable to parse a <code>fn</code> declaration.</p>\n\n<hr>\n\n<p>If you don't know exactly what to expect then you can be more general, matching a set of possibilities and then inspecting what you find. There are some enums provided for groups of syntax that can appear in the same places. For example, if you are parsing code in a context where you expect to find a function declaration <em>or</em> some other declarations on the same level, you probably need to parse an <a href=\"https://docs.rs/syn/0.15.42/syn/enum.Item.html\" rel=\"nofollow noreferrer\"><code>Item</code></a> and then match on all of the possible types of item:</p>\n\n<pre><code>use syn::Item;\n\nlet item: Item = syn::parse(token_stream).unwrap();\nmatch item {\n    Item::Fn(fn_decl) =&gt; {}\n    Item::Mod(mod_item) =&gt; {}\n    Item::Struct(struct_item) =&gt; {}\n    Item::Enum(enum_item) =&gt; {}\n    _ =&gt; {}\n}\n</code></pre>\n\n<p>Note that <code>syn::Item</code> has 18 variants to match, and <code>syn::Expr</code> has 40! It's definitely worth narrowing down the possibilities and choosing the type to parse into that is the most specific for your needs. You might also consider defining your own type, representing the various syntactic constructs that you expect to find, and then implementing the <a href=\"https://docs.rs/syn/0.15.42/syn/parse/trait.Parse.html\" rel=\"nofollow noreferrer\"><code>syn::Parse</code></a> trait manually.</p>\n"}], "owner": {"reputation": 576, "user_id": 3623290, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ed4ff1d9e2be2b4a7f4511af9045a6f9?s=128&d=identicon&r=PG&f=1", "display_name": "Stephane Bersier", "link": "https://stackoverflow.com/users/3623290/stephane-bersier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 491, "favorite_count": 0, "accepted_answer_id": 57342193, "answer_count": 1, "score": 3, "last_activity_date": 1564869026, "creation_date": 1564866691, "last_edit_date": 1564867569, "question_id": 57342132, "link": "https://stackoverflow.com/questions/57342132/how-to-find-the-correct-return-type-for-synparse", "title": "How to find the correct return type for syn::parse?", "body": "<p>I have a <code>TokenStream</code> that comes from the definition of a Rust function. I want to parse it with <code>syn::parse</code> (and <code>.unrwap()</code>). However, I don't know what the return type is supposed to be:</p>\n\n<pre><code>let ast: ??? = syn::parse(token_stream_from_function_definition).unwrap();\n</code></pre>\n\n<p>What should the type of <code>ast</code> be?</p>\n"}, {"tags": ["error-handling", "rust", "glob", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "is_accepted": true, "score": 1, "last_activity_date": 1564858316, "creation_date": 1564858316, "answer_id": 57341264, "question_id": 57341010, "link": "https://stackoverflow.com/questions/57341010/how-do-i-turn-a-globgloberror-into-an-ioerror-in-rust/57341264#57341264", "title": "How do I turn a glob::GlobError into an io::Error in Rust?", "body": "<p>You're looking at outdated documentation.</p>\n\n<p>Go to the latest version, there's a <a href=\"https://docs.rs/glob/0.3.0/glob/struct.GlobError.html\" rel=\"nofollow noreferrer\"><code>pub fn into_error(self) -&gt; Error</code></a>.</p>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 45, "favorite_count": 0, "accepted_answer_id": 57341264, "answer_count": 1, "score": 0, "last_activity_date": 1564858316, "creation_date": 1564856218, "question_id": 57341010, "link": "https://stackoverflow.com/questions/57341010/how-do-i-turn-a-globgloberror-into-an-ioerror-in-rust", "title": "How do I turn a glob::GlobError into an io::Error in Rust?", "body": "<p>I have a <a href=\"https://docs.rs/glob/0.2.11/glob/struct.GlobError.html\" rel=\"nofollow noreferrer\"><code>glob::GlobError</code></a> from the <a href=\"https://docs.rs/glob/0.2.11/glob/index.html\" rel=\"nofollow noreferrer\">glob crate</a>. There's an underlying <a href=\"https://doc.rust-lang.org/std/io/struct.Error.html\" rel=\"nofollow noreferrer\"><code>io::Error</code></a> that I need. How do I get it? There's a few methods available, such as this one:</p>\n\n<pre><code>fn error(&amp;self) -&gt; &amp;io::Error\n</code></pre>\n\n<p>However, it just returns a reference. I need to own it, since I want to put it into another error struct that requires ownership.</p>\n\n<p>An other options is this:</p>\n\n<pre><code>fn cause(&amp;self) -&gt; Option&lt;&amp;std::error::Error&gt;\n</code></pre>\n\n<p>Same problem with the reference, and on top it's the wrong error type.</p>\n\n<p>It it possible to get an <code>io::Error</code> somehow?</p>\n"}, {"tags": ["rust", "x86-64", "bigint", "int128", "llvm-codegen"], "comments": [{"owner": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 59, "creation_date": 1564888414, "post_id": 57340308, "comment_id": 101175123, "body": "exactly the same way 64-bit types are stored in 32-bit computers or 32-bit types are stored in 16-bit computers <a href=\"https://stackoverflow.com/q/28977587/995714\">Is it ok to use 64bit integers in a 32bit application?</a>, <a href=\"https://stackoverflow.com/q/3190143/995714\">How is 64-bit math accomplished on a 32-bit machine?</a>, <a href=\"https://stackoverflow.com/q/5530906/995714\">Do I need to have 64 bit Processor to use 64 bit data type</a>, <a href=\"https://stackoverflow.com/q/6414605/995714\">128 bit integer with c</a>, <a href=\"https://stackoverflow.com/q/23038451/995714\">How does a 32 bit processor support 64 bit integers?</a>"}, {"owner": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 57, "creation_date": 1564902006, "post_id": 57340308, "comment_id": 101177084, "body": "How does a two-digit integer work when you only have 10 fingers?"}, {"owner": {"reputation": 45031, "user_id": 213136, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0b84a36c241e04175fcec402dac43018?s=128&d=identicon&r=PG", "display_name": "Bob Jarvis - Reinstate Monica", "link": "https://stackoverflow.com/users/213136/bob-jarvis-reinstate-monica"}, "reply_to_user": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 30, "creation_date": 1564934469, "post_id": 57340308, "comment_id": 101183859, "body": "@JorgWMittag: Ah - the old &quot;two digit number with only ten fingers&quot; ploy. Heh-heh. Thought you could fool me with that old one, eh? Well, my friend, as any second-grader could tell you - THAT is what the toes are for! (<a href=\"https://www.youtube.com/watch?v=O-LGISfFS4Y\" rel=\"nofollow noreferrer\">With abject apologies to Peter Sellers...and Lady Lytton :-)</a>"}, {"owner": {"reputation": 9291, "user_id": 13189, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/tKLRf.jpg?s=128&g=1", "display_name": "eckes", "link": "https://stackoverflow.com/users/13189/eckes"}, "edited": false, "score": 0, "creation_date": 1564976057, "post_id": 57340308, "comment_id": 101191558, "body": "Just to state the obvious, if you talk 64Bit systems you mean address bus width, there might be bigger registers than that. Like the 512bit register extensions on x64."}, {"owner": {"reputation": 222, "user_id": 9976397, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d118cb3717c972fc611c8947544155c9?s=128&d=identicon&r=PG&f=1", "display_name": "Wassinger", "link": "https://stackoverflow.com/users/9976397/wassinger"}, "edited": false, "score": 0, "creation_date": 1564976938, "post_id": 57340308, "comment_id": 101191690, "body": "If you think this is confusing, I wonder what you&#39;ll think of infinite precision number types..."}, {"owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "reply_to_user": {"reputation": 9291, "user_id": 13189, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/tKLRf.jpg?s=128&g=1", "display_name": "eckes", "link": "https://stackoverflow.com/users/13189/eckes"}, "edited": false, "score": 1, "creation_date": 1564986424, "post_id": 57340308, "comment_id": 101193808, "body": "FWIW most x86 machines have some special 128-bit or larger registers for SIMD operations. See <a href=\"https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Streaming_SIMD_Extensions</a> Edit: I somehow missed @eckes&#39;s comment"}, {"owner": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "reply_to_user": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 1, "creation_date": 1565009209, "post_id": 57340308, "comment_id": 101204768, "body": "@phuclv You missed how &quot;16-bit types are stored in 8-bit computers&quot; :-)"}, {"owner": {"reputation": 26945, "user_id": 771073, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/412bf39694cbe9d1fc0374deda225b18?s=128&d=identicon&r=PG", "display_name": "Martin Bonner supports Monica", "link": "https://stackoverflow.com/users/771073/martin-bonner-supports-monica"}, "reply_to_user": {"reputation": 9291, "user_id": 13189, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/tKLRf.jpg?s=128&g=1", "display_name": "eckes", "link": "https://stackoverflow.com/users/13189/eckes"}, "edited": false, "score": 1, "creation_date": 1565009329, "post_id": 57340308, "comment_id": 101204835, "body": "@eckes Although &quot;8-bit computer&quot; referred to the data bus - the address bus was usually larger, and also &quot;16-bit computer&quot; (although a 16-bit computer often had a 16-bit address bus too)."}, {"owner": {"reputation": 50650, "user_id": 3182664, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/2s35X.png?s=128&g=1", "display_name": "Marco13", "link": "https://stackoverflow.com/users/3182664/marco13"}, "reply_to_user": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 4, "creation_date": 1565011818, "post_id": 57340308, "comment_id": 101206169, "body": "@J&#246;rgWMittag Nah, computer scientists count in binary by lowering or extending individual fingers. And now, 132 y&#39;all, I&#39;m going home ;-D"}, {"owner": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "reply_to_user": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 1, "creation_date": 1565108769, "post_id": 57340308, "comment_id": 101245185, "body": "@Ryan1729 SIMD is not supposed for 128-bit arithmetic. They can only operate on multiple smaller integers/floating-point values. See <a href=\"https://stackoverflow.com/q/27923192/995714\">practical BigNum AVX/SSE possible?</a>, <a href=\"https://stackoverflow.com/q/34234407/995714\">Is there hardware support for 128bit integers in modern processors?</a>"}, {"owner": {"reputation": 957, "user_id": 303101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f32f048f8797ae7bd26ca524b440842?s=128&d=identicon&r=PG", "display_name": "Reversed Engineer", "link": "https://stackoverflow.com/users/303101/reversed-engineer"}, "edited": false, "score": 1, "creation_date": 1565109550, "post_id": 57340308, "comment_id": 101245539, "body": "<a href=\"https://retrocomputing.stackexchange.com/questions/6640/how-did-8-bit-processors-perform-16-bit-arithmetic\">How did 8 bit processors perform 16 bit arithmetic?</a>"}, {"owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "reply_to_user": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 1, "creation_date": 1565159571, "post_id": 57340308, "comment_id": 101259343, "body": "@phuclv There are a limited amount of operations for 128 ints on many x86-64 machines, including addition and subtraction, as well as bitwise operations. This is mentioned in a comment on one of the answers you mentioned <a href=\"https://stackoverflow.com/questions/34234407#comment56228798_34239917\">stackoverflow.com/questions/34234407#comment56228798_3423991&zwnj;&#8203;7</a> But admittedly, 128-bit multiplication, or anything more complicated than that does not seem to be supported even on newer processors. At least I couldn\u2019t find a 128-bit mul on this page: <a href=\"https://software.intel.com/sites/landingpage/IntrinsicsGuide/\" rel=\"nofollow noreferrer\">software.intel.com/sites/landingpage/IntrinsicsGuide</a>"}, {"owner": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "reply_to_user": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 1, "creation_date": 1565160203, "post_id": 57340308, "comment_id": 101259611, "body": "@Ryan1729 those are integer instructions and <b>not</b> SIMD instructions. Currently no architecture I know supports integer registers wider than 64 bits. SIMD is &quot;Single instruction, <b>multiple data</b>&quot; so they&#39;re used for processing multiple data at once and not quite useful for big int operations"}, {"owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "reply_to_user": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 0, "creation_date": 1565162295, "post_id": 57340308, "comment_id": 101260549, "body": "@phuclv It is true that SSE etc. are not designed for big int operations and I am struggling to find the actual instructions mentioned in the comment I linked to, unless they meant that it would not be that difficult to do the carry yourself after adding a pair of 64 bit ints with an SSE2 <code>_mm_add_epi64</code> instruction. But, technically, the SSE XMM registers are 128-bits wide, they just don&#39;t have the same set of operations available on them as &quot;real&quot; registers, and as you said, those operations are not particularly useful for operations on numbers larger than 64 bits."}], "answers": [{"comments": [{"owner": {"reputation": 2729, "user_id": 2287805, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2f33628a6e99fb59e296782c776dc5ef?s=128&d=identicon&r=PG", "display_name": "Anush", "link": "https://stackoverflow.com/users/2287805/anush"}, "edited": false, "score": 0, "creation_date": 1564903035, "post_id": 57340591, "comment_id": 101177282, "body": "Is the top example 128 bit addition on a 32 bit machine?"}, {"owner": {"reputation": 101, "user_id": 11880757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87fddd4c76006aff211b7f7ec9a90768?s=128&d=identicon&r=PG&f=1", "display_name": "ManfP", "link": "https://stackoverflow.com/users/11880757/manfp"}, "reply_to_user": {"reputation": 2729, "user_id": 2287805, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2f33628a6e99fb59e296782c776dc5ef?s=128&d=identicon&r=PG", "display_name": "Anush", "link": "https://stackoverflow.com/users/2287805/anush"}, "edited": false, "score": 5, "creation_date": 1564926562, "post_id": 57340591, "comment_id": 101181943, "body": "@Anush No, rax/rsp/... are 64-bit registers. Each 128-bit number is stored in two registers/memory locations, which results in the two 64-bit additions."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 2729, "user_id": 2287805, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2f33628a6e99fb59e296782c776dc5ef?s=128&d=identicon&r=PG", "display_name": "Anush", "link": "https://stackoverflow.com/users/2287805/anush"}, "edited": false, "score": 5, "creation_date": 1564949548, "post_id": 57340591, "comment_id": 101187547, "body": "@Anush: no, it&#39;s just using so many instructions because it&#39;s compiled with optimization disabled.  You&#39;d see <i>much</i> simpler code (like just the add/adc) if you compiled a function that took two <code>u128</code> args and returned a value (like this <a href=\"https://godbolt.org/z/6JBza0\" rel=\"nofollow noreferrer\">godbolt.org/z/6JBza0</a>), instead of disabling optimization to stop the compiler from doing constant-propagation on compile-time-constant args."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1564950332, "post_id": 57340591, "comment_id": 101187731, "body": "Cheers :)  I&#39;d read that the LLVM-IR Rustcc sends to the optimizer is sometimes over-complicated and in need of a lot of optimization.  I think this is an example, and the extra copying in the un-optimized x86-64 asm are probably a direct result of that.  :/  (specifically, storing the high/low half to tmp locations before copying them to <code>b</code>, and the extra copy of the low half to another register and then to another stack slot.)"}, {"owner": {"reputation": 990, "user_id": 3019990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/3rUcM.png?s=128&g=1", "display_name": "CAD97", "link": "https://stackoverflow.com/users/3019990/cad97"}, "edited": false, "score": 0, "creation_date": 1564974005, "post_id": 57340591, "comment_id": 101191274, "body": "Actually, I&#39;m 99% sure that optimizations in release mode have to allow for wrapping. It&#39;d be UB to overflow elsewise, which is not allowed in safe code. With use of iterators over C style loops, though, the main reason for overflow UB in C/C++ is no longer present, anyway."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 990, "user_id": 3019990, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/3rUcM.png?s=128&g=1", "display_name": "CAD97", "link": "https://stackoverflow.com/users/3019990/cad97"}, "edited": false, "score": 3, "creation_date": 1565005676, "post_id": 57340591, "comment_id": 101202728, "body": "@CAD97 Release mode <i>uses</i> wrapping arithmetic but does not check for overflow and panic like debug mode does. This behavior was defined by <a href=\"https://github.com/rust-lang/rfcs/pull/560\" rel=\"nofollow noreferrer\">RFC 560</a>. It&#39;s not UB."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1565042543, "post_id": 57340591, "comment_id": 101219305, "body": "@trentcl: thanks; I&#39;m casually interested in Rust but don&#39;t use it regularly.  I was assuming that optimized Rust math was like C/C++ signed math, so that wrong claim in this answer is from my edit.  I guess it should just be removed if there&#39;s no need to go into any detail about it here?  (Am I understanding correctly that making regular <code>+</code> detect overflow in debug mode is only useful for catching unexpected integer-wrapping bugs, not for allowing any optimization based on overflow not happening?)"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1565043295, "post_id": 57340591, "comment_id": 101219499, "body": "@PeterCordes What wrong claim? ;-) Yes, as far as I understand it, Rust doesn&#39;t allow that particular class of integer optimizations (precisely because it would lead to UB)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 3, "creation_date": 1565088540, "post_id": 57340591, "comment_id": 101233200, "body": "@PeterCordes: Specifically, Rust the language specifies that overflow is unspecified, and rustc (the only compiler) specifies two behaviors to choose from: Panic or Wrap. Ideally, Panic would be used by default. In practice, due to sub-optimal code-generation, in Release mode the default is Wrap, and a long-term goal is to move to Panic when (if ever) code-generation is &quot;good enough&quot; for mainstream use. Also, all Rust integral types support named operations to pick a behavior: checked, wrapping, saturating, ... so you can override the selected behavior on a per operation basis."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1565089408, "post_id": 57340591, "comment_id": 101233673, "body": "@MatthieuM.: Yes, I love the wrapping vs. checked vs. saturating add/sub/shift/whatever methods on primitive types.  So much better than C&#39;s wrapping unsigned, UB signed forcing you to pick based on that.  Anyway, some ISAs could provide efficient support for Panic, e.g. a sticky flag you can check after a whole sequence of operations.  (Unlike x86&#39;s OF or CF which are overwritten with 0 or 1.)  e.g. Agner Fog&#39;s proposed ForwardCom ISA (<a href=\"https://www.agner.org/optimize/blog/read.php?i=421#478\" rel=\"nofollow noreferrer\">agner.org/optimize/blog/read.php?i=421#478</a>) But that still constrains optimization to never do any calculation the Rust source didn&#39;t do. :/"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565089790, "post_id": 57340591, "comment_id": 101233898, "body": "@MatthieuM.: So I think long term you&#39;re always going to want an option to not actually enforce Panic because for most operations on most ISAs there&#39;s no efficient way to check.  (Exceptions include MIPS&#39;s faulting-<code>add</code> instruction, <code>add</code> instead of <code>addu</code>, that faults on signed overflow).  Some future x86 extension could add a &quot;sticky overflow&quot; flag in one of the otherwise-reserved bits of EFLAGS, and an instruction to clear it or branch on it being set.  (Or just to read it or something.)  Otherwise on x86 using <code>jo</code> or <code>into</code> after every add/sub/shift is going to suck.  And no SIMD."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1565090841, "post_id": 57340591, "comment_id": 101234422, "body": "@PeterCordes: The best ISA I&#39;ve seen for this is the &quot;vaporware&quot; Mill ISA which poisons the value and carries on, both in scalar and SIMD. This means you just perform the whole chain of operations on your vector, and at the end you can check each element to see if any is poisoned. And of course, it also allows speculative computations. At the moment, though, I&#39;m afraid the first hurdle is at the compiler level; panic on under/overflow prevents reordering: <code>5 + x - 3</code> does not have the same domain as <code>x - 3 + 5</code>, you lose commutativity!"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1565091507, "post_id": 57340591, "comment_id": 101234783, "body": "@MatthieuM.: I wonder if there&#39;s some way to define integer overflow that sidesteps that, like only if the result of an entire expression differs from the non-wrapped result.  Otherwise programmers are going to have to learn that integer operations are non-commutative, just like FP operations, so putting constants together is important.  (And I guess first if they have different signs, otherwise you still have to do <code>x - 3 + 5</code> in 2 steps instead of <code>x + 2</code> if you insist on panic on x&lt;3.)  If overflow is only checked per-expression, you could choose <code>tmp=x-3 ; tmp + 5</code> to request both checks."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1565095220, "post_id": 57340591, "comment_id": 101236992, "body": "@PeterCordes: It seems like you&#39;d need some sign of &quot;overflow counter&quot; which is incremented on overflow, decremented on underflow, and should be 0 when you wish to use the number... but even it&#39;s weird..."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 60, "last_activity_date": 1565043175, "last_edit_date": 1565043175, "creation_date": 1564852951, "answer_id": 57340591, "question_id": 57340308, "link": "https://stackoverflow.com/questions/57340308/how-does-rusts-128-bit-integer-i128-work-on-a-64-bit-system/57340591#57340591", "title": "How does Rust&#39;s 128-bit integer `i128` work on a 64-bit system?", "body": "<p>The compiler will store these in multiple registers and use multiple instructions to do arithmetic on those values if needed.  Most ISAs have an add-with-carry instruction like <a href=\"https://www.felixcloutier.com/x86/adc\" rel=\"noreferrer\">x86's <code>adc</code></a> which makes it fairly efficient to do extended-precision integer add/sub.</p>\n\n<p>For example, given</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a = 42u128;\n    let b = a + 1337;\n}\n</code></pre>\n\n<p>the compiler generates the following when compiling for x86-64 without optimization:<br>\n(comments added by @PeterCordes)</p>\n\n<pre><code>playground::main:\n    sub rsp, 56\n    mov qword ptr [rsp + 32], 0\n    mov qword ptr [rsp + 24], 42         # store 128-bit 0:42 on the stack\n                                         # little-endian = low half at lower address\n\n    mov rax, qword ptr [rsp + 24]\n    mov rcx, qword ptr [rsp + 32]        # reload it to registers\n\n    add rax, 1337                        # add 1337 to the low half\n    adc rcx, 0                           # propagate carry to the high half. 1337u128 &gt;&gt; 64 = 0\n\n    setb    dl                           # save carry-out (setb is an alias for setc)\n    mov rsi, rax\n    test    dl, 1                        # check carry-out (to detect overflow)\n    mov qword ptr [rsp + 16], rax        # store the low half result\n    mov qword ptr [rsp + 8], rsi         # store another copy of the low half\n    mov qword ptr [rsp], rcx             # store the high half\n                             # These are temporary copies of the halves; probably the high half at lower address isn't intentional\n    jne .LBB8_2                       # jump if 128-bit add overflowed (to another not-shown block of code after the ret, I think)\n\n    mov rax, qword ptr [rsp + 16]\n    mov qword ptr [rsp + 40], rax     # copy low half to RSP+40\n    mov rcx, qword ptr [rsp]\n    mov qword ptr [rsp + 48], rcx     # copy high half to RSP+48\n                  # This is the actual b, in normal little-endian order, forming a u128 at RSP+40\n    add rsp, 56\n    ret                               # with retval in EAX/RAX = low half result\n</code></pre>\n\n<p>where you can see that the value <code>42</code> is stored in <code>rax</code> and <code>rcx</code>.</p>\n\n<p>(editor's note: x86-64 C calling conventions return 128-bit integers in RDX:RAX.  But this <code>main</code> doesn't return a value at all.  All the redundant copying is purely from disabling optimization, and that Rust actually checks for overflow in debug mode.)</p>\n\n<p>For comparison, here is the asm for Rust 64-bit integers on x86-64 where no add-with-carry is needed, just a single register or stack-slot for each value.</p>\n\n<pre><code>playground::main:\n    sub rsp, 24\n    mov qword ptr [rsp + 8], 42           # store\n    mov rax, qword ptr [rsp + 8]          # reload\n    add rax, 1337                         # add\n    setb    cl\n    test    cl, 1                         # check for carry-out (overflow)\n    mov qword ptr [rsp], rax              # store the result\n    jne .LBB8_2                           # branch on non-zero carry-out\n\n    mov rax, qword ptr [rsp]              # reload the result\n    mov qword ptr [rsp + 16], rax         # and copy it (to b)\n    add rsp, 24\n    ret\n\n.LBB8_2:\n    call panic function because of integer overflow\n</code></pre>\n\n<p>The setb / test is still totally redundant: <code>jc</code> (jump if CF=1) would work just fine.</p>\n\n<p>With optimization enabled, the Rust compiler doesn't check for overflow so <code>+</code> works like <code>.wrapping_add()</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 5760, "user_id": 1863564, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/XU4XS.png?s=128&g=1", "display_name": "Fund Monica&#39;s Lawsuit", "link": "https://stackoverflow.com/users/1863564/fund-monicas-lawsuit"}, "edited": false, "score": 2, "creation_date": 1564928265, "post_id": 57340670, "comment_id": 101182371, "body": "Huh, I wonder why it&#39;s 2^23 instead of the more typical 2^32 (well, speaking broadly in terms of how often those numbers appear, not in terms of maximum bit widths of integers supported by compiler backends...)"}, {"owner": {"reputation": 1390, "user_id": 5517612, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9311c4cfa84f7914806dfb88a75ee219?s=128&d=identicon&r=PG&f=1", "display_name": "Todd Sewell", "link": "https://stackoverflow.com/users/5517612/todd-sewell"}, "reply_to_user": {"reputation": 5760, "user_id": 1863564, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/XU4XS.png?s=128&g=1", "display_name": "Fund Monica&#39;s Lawsuit", "link": "https://stackoverflow.com/users/1863564/fund-monicas-lawsuit"}, "edited": false, "score": 27, "creation_date": 1564952496, "post_id": 57340670, "comment_id": 101188132, "body": "@NicHartley Some of LLVM&#39;s baseclasses have a field where subclasses can store data. For the <code>Type</code> class this means there are 8 bits to store what kind of type it is (function, block, integer, ...) and 24 bits for subclass data. The <code>IntegerType</code> class then uses those 24 bits to store the size, allowing instances to neatly fit in 32 bits!"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 158, "last_activity_date": 1565614928, "last_edit_date": 1565614928, "creation_date": 1564853696, "answer_id": 57340670, "question_id": 57340308, "link": "https://stackoverflow.com/questions/57340308/how-does-rusts-128-bit-integer-i128-work-on-a-64-bit-system/57340670#57340670", "title": "How does Rust&#39;s 128-bit integer `i128` work on a 64-bit system?", "body": "<p>All Rust's integer types are compiled to <a href=\"https://llvm.org/docs/LangRef.html#integer-type\" rel=\"noreferrer\">LLVM integers</a>. The LLVM abstract machine allows integers of any bit width from 1 to 2^23 - 1.* LLVM <a href=\"https://llvm.org/docs/LangRef.html#binary-operations\" rel=\"noreferrer\">instructions</a> typically work on integers of any size.</p>\n\n<p>Obviously, there aren't many 8388607-bit architectures out there, so when the code is compiled to native machine code, LLVM has to decide how to implement it. The semantics of an abstract instruction like <a href=\"https://llvm.org/docs/LangRef.html#add-instruction\" rel=\"noreferrer\"><code>add</code></a> are defined by LLVM itself. Typically, abstract instructions that have a single-instruction equivalent in native code will be compiled to that native instruction, while those that don't will be emulated, possibly with multiple native instructions. <a href=\"https://stackoverflow.com/a/57340591/3650362\">mcarton's answer</a> demonstrates how LLVM compiles both native and emulated instructions.</p>\n\n<p>(This doesn't only apply to integers that are larger than the native machine can support, but also to those that are smaller. For example, modern architectures might not support native 8-bit arithmetic, so an <code>add</code> instruction on two <code>i8</code>s may be emulated with a wider instruction, the extra bits discarded.)</p>\n\n<blockquote>\n  <p>Does the compiler somehow use 2 registers for one <code>i128</code> value? Or are they using some kind of big integer struct to represent them?</p>\n</blockquote>\n\n<p>At the level of LLVM IR, the answer is neither: <code>i128</code> fits in a single register, just like every other <a href=\"https://llvm.org/docs/LangRef.html#single-value-types\" rel=\"noreferrer\">single-valued type</a>. On the other hand, once translated to machine code, there isn't really a difference between the two, because structs may be decomposed into registers just like integers. When doing arithmetic, though, it's a pretty safe bet that LLVM will just load the whole thing into two registers.</p>\n\n<hr>\n\n<p>* However, not all LLVM backends are created equal. This answer relates to x86-64. I understand that backend support for sizes larger than 128 and non-powers of two is spotty (which may partly explain why Rust only exposes 8-, 16-, 32-, 64-, and 128-bit integers). <a href=\"https://www.reddit.com/r/rust/comments/cm4qf9/how_does_rusts_128bit_integer_i128_work_on_a/ew0bpwt/\" rel=\"noreferrer\">According to est31 on Reddit</a>, rustc implements 128 bit integers in software when targeting a backend that doesn't support them natively.</p>\n"}, {"tags": [], "owner": {"reputation": 185753, "user_id": 152948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/194ef8f807c34a9d7aab0e11a8674768?s=128&d=identicon&r=PG", "display_name": "hobbs", "link": "https://stackoverflow.com/users/152948/hobbs"}, "is_accepted": false, "score": 33, "last_activity_date": 1564894827, "creation_date": 1564894827, "answer_id": 57343936, "question_id": 57340308, "link": "https://stackoverflow.com/questions/57340308/how-does-rusts-128-bit-integer-i128-work-on-a-64-bit-system/57343936#57343936", "title": "How does Rust&#39;s 128-bit integer `i128` work on a 64-bit system?", "body": "<p>Yes, just the same way as 64-bit integers on 32-bit machines were handled, or 32-bit integers on 16-bit machines, or even 16- and 32-bit integers on 8-bit machines (still applicable to microcontrollers!). Yes, you store the number in two registers, or memory locations, or whatever (it doesn't really matter). Addition and subtraction are trivial, taking two instructions and using the carry flag. Multiplication requires three multiplies and some additions (it's common for 64-bit chips to already have a 64x64->128 multiply operation that outputs to two registers). Division... requires a subroutine and is quite slow (except in some cases where division by a constant can be transformed into a shift or a multiply), but it still works. Bitwise and/or/xor merely have to be done on the top and bottom halves separately. Shifts can be accomplished with rotation and masking. And that pretty much covers things.</p>\n"}, {"comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1566921707, "post_id": 57347028, "comment_id": 101803802, "body": "last paragraph: To detect which of two <i>unsigned</i> numbers is greater by looking at the high bit of a <code>sub</code> result, you need an <code>n+1</code> bit sub result for <code>n</code> bit inputs.  i.e. you need to look at the carry-out, not the sign bit of the same-width result.  That&#39;s why x86 unsigned branch conditions are based on CF (bit 64 or 32 of the full logical result), not SF (bit 63 or 31)."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1566943177, "post_id": 57347028, "comment_id": 101811880, "body": "@PeterCordes Thanks again for noticing the mistake so promptly! I\u2019m grateful. Corrected."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1566973259, "post_id": 57347028, "comment_id": 101817547, "body": "I recently wrote an answer about designing a toy CPU and using its ALU to do signed comparison.  So I noticed it easily when looking at the diff of your edit.  (I tend to look at most edits in the <code>[assembly]</code> and <code>[x86]</code> and some other tags I watch since they&#39;re low-traffic enough for me to not go insane doing that.)  But I can&#39;t find that answer anymore with search; possibly it got deleted :("}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1566974575, "post_id": 57347028, "comment_id": 101818021, "body": "@PeterCordes I was actually thinking about the same problem myself recently, which is why that slip-up was so embarrassing. (The 128-bit integers are signed, but the lower 64 bits must be treated as unsigned here.) My understanding is that adding state like a carry flag would complicate the pipeline of an out-of-order implementation, and RISC ISAs have been moving away from adding dependencies on flags, but I&#39;d been wondering whether a requirement that the instructions generating and using the carry be consecutive would ameliorate that. I\u2019m not aware of any ISAs that use such a solution."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1566974735, "post_id": 57347028, "comment_id": 101818097, "body": "@PeterCordes Some modern architectures do fuse consecutive div and mod instructions in a similar way, rather than use a visible register such as <code>%hi</code> on MIPS or <code>%y</code> on SPARC."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1566974900, "post_id": 57347028, "comment_id": 101818167, "body": "Yes exactly.  In an extended-precision integer, only the top chunk contains the sign bit.  For 2&#39;s complement, the rest all have standard power-of-2 place-values.  2&#39;s complement addition/subtraction is the same binary operation as for unsigned, including software extended-precision implementations."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 0, "creation_date": 1566974963, "post_id": 57347028, "comment_id": 101818197, "body": "@PeterCordes Yes, exactly."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1566975083, "post_id": 57347028, "comment_id": 101818254, "body": "re: divmod: AArch64&#39;s approach is to provide division and an instruction that does integer <code>x - (a*b)</code>, computing the remainder from the dividend, quotient, and divisor.  (That is useful even for constant divisors using a multiplicative inverse for the division part).  I hadn&#39;t read about ISAs that fuse div+mod instructions into a single divmod operation; that&#39;s neat."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1566975335, "post_id": 57347028, "comment_id": 101818367, "body": "re: flags: yes, a flag output is a 2nd output that OoO exec + register-renaming has to handle somehow.  x86 CPUs handle it by keeping a few extra bits with the integer result that FLAGS value is based on, so probably ZF, SF, and PF are generated on the fly when needed.  I think there&#39;s an Intel patent about this.  So that reduces the number of outputs that have to be tracked separately back to 1.  (In Intel CPUs, no uop can ever write more than 1 integer register; e.g. <code>mul r64</code> is 2 uops, with the 2nd one writing the RDX high half)."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1566975644, "post_id": 57347028, "comment_id": 101818501, "body": "But for efficient extended-precision, flags are very good.  The main problem is <i>without</i> register renaming for superscalar in-order execution.  flags are a WAW hazard (write after write).  Of course, add-with-carry instructions are 3-input, and that&#39;s also a significant problem to track.  Intel before Broadwell decoded <code>adc</code>, <code>sbb</code>, and <code>cmov</code> to 2 uops each.  (Haswell introduced 3-input uops for FMA, Broadwell extended that to integer.)"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1566975815, "post_id": 57347028, "comment_id": 101818580, "body": "RISC ISAs with flags usually make flag-setting optional, controlled by an extra bit.  e.g. ARM and SPARC are like this.  PowerPC as usual makes everything more complicated: it has 8 condition-code registers (packed together into one 32-bit register for save/restore) so you can compare into cc0 or into cc7 or whatever.  And then AND or OR condition-codes together!  Branch and cmov instructions can choose which CR register to read.  So this gives you the ability to have multiple flags dep chains in flight at once, like x86 ADCX / ADOX.  <a href=\"http://alanclements.org/power%20pc.html\" rel=\"nofollow noreferrer\">alanclements.org/power%20pc.html</a>"}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": false, "score": 28, "last_activity_date": 1566922035, "last_edit_date": 1566922035, "creation_date": 1564925989, "answer_id": 57347028, "question_id": 57340308, "link": "https://stackoverflow.com/questions/57340308/how-does-rusts-128-bit-integer-i128-work-on-a-64-bit-system/57347028#57347028", "title": "How does Rust&#39;s 128-bit integer `i128` work on a 64-bit system?", "body": "<p>To provide perhaps a clearer example, on x86_64, compiled with the <code>-O</code> flag, the function</p>\n\n<pre><code>pub fn leet(a : i128) -&gt; i128 {\n    a + 1337\n}\n</code></pre>\n\n<p>compiles to</p>\n\n<pre><code>example::leet:\n  mov rdx, rsi\n  mov rax, rdi\n  add rax, 1337\n  adc rdx, 0\n  ret\n</code></pre>\n\n<p>(My original post had <code>u128</code> rather than the <code>i128</code> you asked about.  The function compiles the same code either way, a good demonstration that signed and unsigned addition are the same on a modern CPU.)</p>\n\n<p>The other listing produced unoptimized code.  It\u2019s safe to step through in a debugger, because it makes sure you can put a breakpoint anywhere and inspect the state of any variable at any line of the program.  It\u2019s slower and harder to read.  The optimized version is much closer to the code that will actually run in production.</p>\n\n<p>The parameter <code>a</code> of this function  is passed in a pair of 64-bit registers, rsi:rdi.  The result is returned in another pair of registers, rdx:rax.  The first two lines of code initialize the sum to <code>a</code>.</p>\n\n<p>The third line adds 1337 to the low word of the input.  If this overflows, it carries the 1 in the CPU\u2019s carry flag.  The fourth line adds zero to the high word of the input\u2014plus the 1 if it got carried.</p>\n\n<p>You can think of this as simple addition of a one-digit number to a two-digit number</p>\n\n<pre><code>  a  b\n+ 0  7\n______\n\u00a0\n</code></pre>\n\n<p>but in base 18,446,744,073,709,551,616.  You\u2019re still adding the lowest \u201cdigit\u201d first, possibly carrying a 1 to the next column, then adding the next digit plus the carry.  Subtraction is very similar.</p>\n\n<p>Multiplication must use the identity (2\u2076\u2074a + b)(2\u2076\u2074c + d) = 2\u00b9\u00b2\u2078ac + 2\u2076\u2074(ad+bc) + bd, where each of these multiplications returns the upper half of the product in one register and the lower half of the product in another.  Some of those terms will be dropped, because bits above the 128th don\u2019t fit into a <code>u128</code> and are discarded.  Even so, this takes a number of machine instructions. Division also takes several steps.  For a signed value, multiplication and division would additionally need to convert the signs of the operands and the result.  Those operations are not very efficient at all.</p>\n\n<p>On other architectures, it gets easier or harder.  RISC-V defines a 128-bit instruction-set extension, although to my knowledge no one has implemented it in silicon.  Without this extension, <a href=\"https://riscv.org/wp-content/plugins/pdf-viewer/stable/web/viewer.html?file=https://content.riscv.org/wp-content/uploads/2019/06/riscv-spec.pdf#section.2.4\" rel=\"noreferrer\">the RISC-V architecture manual recommends</a> a conditional branch: <code>addi t0, t1, +imm; blt t0, t1, overflow</code></p>\n\n<p>SPARC has control codes like the control flags of x86, but you have to use a special instruction, <code>add,cc</code>, to set them.  MIPS, on the other hand, <a href=\"https://stackoverflow.com/questions/2683292/multi-precision-arithmetic-on-mips\">requires you to check whether the sum of two unsigned integers is strictly less than one of the operands.</a>  If so, the addition overflowed.  At least you\u2019re able to set another register to the value of the carry bit without a conditional branch.</p>\n"}], "owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 18522, "favorite_count": 14, "protected_date": 1613641621, "accepted_answer_id": 57340670, "answer_count": 4, "score": 141, "last_activity_date": 1599842438, "creation_date": 1564850646, "last_edit_date": 1565685674, "question_id": 57340308, "link": "https://stackoverflow.com/questions/57340308/how-does-rusts-128-bit-integer-i128-work-on-a-64-bit-system", "title": "How does Rust&#39;s 128-bit integer `i128` work on a 64-bit system?", "body": "<p>Rust has 128-bit integers, these are denoted with the data type <code>i128</code> (and <code>u128</code> for unsigned ints):</p>\n\n<pre><code>let a: i128 = 170141183460469231731687303715884105727;\n</code></pre>\n\n<p>How does Rust make these <code>i128</code> values work on a 64-bit system; e.g. how does it do arithmetic on these?</p>\n\n<p>Since, as far as I know, the value cannot fit in one register of a x86-64 CPU, does the compiler somehow use 2 registers for one <code>i128</code> value? Or are they instead using some kind of big integer struct to represent them?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1564845673, "post_id": 57339599, "comment_id": 101167677, "body": "Hi there! Could you please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>? This makes it easier to answer this question. Shouldn&#39;t be very hard to create the minimal example here. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "edited": false, "score": 0, "creation_date": 1564847130, "post_id": 57339751, "comment_id": 101168057, "body": "@Sahsahe Thanks but then the problem I have is value is a reference (&amp;[u8; 32]) and tx.id is not ([u8; 32]). If I write &amp;tx.id == value will Rust automatically check the values?"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "edited": false, "score": 0, "creation_date": 1564847674, "post_id": 57339751, "comment_id": 101168192, "body": "When you&#39;re matching references, then you should use <code>&amp;value</code>, when you want to dereference something, you should dereference it using <code>*</code>, it&#39;s not clear what your problem is, since you haven&#39;t shown us what tx is so I cannot answer your question, but for example, to match values to be plain <code>[u8; 32]</code>, you&#39;d iterate over it like this: <code>for (index, &amp;value) in things.iter().enumerate() { ... }</code> This is known as reference patterns: <a href=\"https://doc.rust-lang.org/reference/patterns.html#reference-patterns\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/patterns.html#reference-patterns</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "edited": false, "score": 1, "creation_date": 1564848355, "post_id": 57339751, "comment_id": 101168361, "body": "@JamesSmith I would write <code>tx.id == *value</code> for the condition instead, which works for non-<code>Copy</code> types. (The <code>==</code> operator takes its arguments by reference implicitly, so <code>*value</code> in this context does not move out of <code>value</code>.)"}], "tags": [], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "is_accepted": true, "score": 2, "last_activity_date": 1564846503, "creation_date": 1564846503, "answer_id": 57339751, "question_id": 57339599, "link": "https://stackoverflow.com/questions/57339599/how-to-iterate-over-a-vector-and-compare-the-elements-without-using-a-clone-to-p/57339751#57339751", "title": "How to iterate over a vector and compare the elements without using a clone to prevent a borrow error", "body": "<p>Use <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.iter\" rel=\"nofollow noreferrer\"><code>iter</code></a>, not <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>into_iter</code></a>, the former returns iterator that iterates over existing vector by borrowing it, the latter consumes data - takes ownership of the object, and directly turns it into iterator, which is not what you want.</p>\n"}], "owner": {"reputation": 69, "user_id": 9692781, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "James Smith", "link": "https://stackoverflow.com/users/9692781/james-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 57339751, "answer_count": 1, "score": 0, "last_activity_date": 1564846503, "creation_date": 1564845428, "last_edit_date": 1564845683, "question_id": 57339599, "link": "https://stackoverflow.com/questions/57339599/how-to-iterate-over-a-vector-and-compare-the-elements-without-using-a-clone-to-p", "title": "How to iterate over a vector and compare the elements without using a clone to prevent a borrow error", "body": "<p>This is my working code where <code>things</code> is a <code>Vec&lt;[u8 ; 32]&gt;</code></p>\n\n<pre><code>let t_copy = tx.things.clone();\n\nfor (index, value) in tx.things.into_iter().enumerate() {\n    if tx.id == value {\n        return Err(CustomError);\n    }\n    if t_copy[index].max(t_copy[index+1]) == t_copy[index]  {\n        return Err(CustomError);\n    }\n\n}\n</code></pre>\n\n<p>I use <code>into_iter</code> rather than <code>iter</code> as I compare the values here:  <code>tx.id == tx_parent</code> </p>\n\n<p>The above works but only because I clone the vector first which doesn't seem ideal to me. Is there a better way to achieve my goal here? Without the clone.</p>\n\n<p>The purpose of the above code is to check the elements are in a certain order.</p>\n"}, {"tags": ["reference", "rust", "pattern-matching", "destructuring", "ampersand"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1564845169, "post_id": 57339201, "comment_id": 101167560, "body": "Unrelated to your question, but the function can be rewritten as <code>list.iter().copied().max().expect(&quot;empty list&quot;)</code>. Might be useful to you."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1564848707, "post_id": 57339201, "comment_id": 101168441, "body": "<a href=\"https://stackoverflow.com/q/50644111/3650362\">Does this error message mean I can use pattern matching in for loops?</a> is related."}], "answers": [{"tags": [], "owner": {"reputation": 15754, "user_id": 9835872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PN0Lq.jpg?s=128&g=1", "display_name": "ruohola", "link": "https://stackoverflow.com/users/9835872/ruohola"}, "is_accepted": true, "score": 11, "last_activity_date": 1581614952, "last_edit_date": 1581614952, "creation_date": 1564843061, "answer_id": 57339297, "question_id": 57339201, "link": "https://stackoverflow.com/questions/57339201/what-is-the-purpose-of-before-the-loop-variable/57339297#57339297", "title": "What is the purpose of `&amp;` before the loop variable?", "body": "<p>So normally when you use <code>for i in list</code>, the loop variable <code>i</code> would be of type <code>&amp;i32</code>.</p>\n\n<p>But when instead you use <code>for &amp;i in list</code>, you are not <em>dereferencing</em> anything, but instead <strong>you are using pattern matching to explicitly <em>destructure</em> the reference</strong> and that will make <code>i</code> just be of type <code>i32</code>.</p>\n\n<p>See the Rust docs about the for-loop loop variable <a href=\"https://doc.rust-lang.org/reference/expressions/loop-expr.html#iterator-loops\" rel=\"noreferrer\">being a pattern</a> and the <a href=\"https://doc.rust-lang.org/reference/patterns.html#reference-patterns\" rel=\"noreferrer\">reference pattern</a> that we are using here. See also the Rust By Example chapter on <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/match/destructuring/destructure_pointers.html\" rel=\"noreferrer\">destructuring pointers</a>.</p>\n\n<p>&nbsp;</p>\n\n<p>An other way to solve this, would be to just keep <code>i</code> as it is and then comparing <code>i</code> to a reference to <code>largest</code>, and then dereferencing <code>i</code> before assigning to <code>largest</code>:</p>\n\n<pre><code>fn largest(list: &amp;[i32]) -&gt; i32 {\n    println!(\"{:?}\", list);\n    let mut largest = list[0];\n    for i in list {\n        if i &gt; &amp;largest {\n            largest = *i;\n        }\n    }\n    largest\n}\n</code></pre>\n\n<p>&nbsp;</p>\n\n<hr>\n\n<blockquote>\n<pre><code>fn main() {\n    let mut hey: i32 = 32;\n    let x: i32 = 2;\n    hey = &amp;&amp;x;\n}\n</code></pre>\n</blockquote>\n\n<p>This simply doesn't work, because here you are assigning <code>hey</code>, which is an <code>i32</code>, to a reference to a reference to an <code>i32</code>. This is quite unrelated to the pattern matching and destructuring in the loop variable case.</p>\n"}, {"comments": [{"owner": {"reputation": 436, "user_id": 3145261, "user_type": "registered", "accept_rate": 71, "profile_image": "https://graph.facebook.com/1342020060/picture?type=large", "display_name": "navkast", "link": "https://stackoverflow.com/users/3145261/navkast"}, "edited": false, "score": 0, "creation_date": 1594042205, "post_id": 57339533, "comment_id": 110979389, "body": "Thank you for such a clear answer. I think it might be helpful to view the destructuring as an algebra &#39;cancellation&#39; operation. For example, in <code>let &amp;c = &amp;foo</code> - if you &#39;cancel&#39; the <code>&amp;</code>, the <code>c</code> is set to <code>foo</code>. &quot;Reference of c is set to reference of foo&quot;, so <code>c</code> is set to <code>foo</code>."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 10, "last_activity_date": 1564844918, "creation_date": 1564844918, "answer_id": 57339533, "question_id": 57339201, "link": "https://stackoverflow.com/questions/57339201/what-is-the-purpose-of-before-the-loop-variable/57339533#57339533", "title": "What is the purpose of `&amp;` before the loop variable?", "body": "<p><strong>This is the effect of <em>destructuring</em></strong>. I won't completely describe that feature here, but in short:</p>\n\n<p>In many syntax contexts (<code>let</code> bindings, <code>for</code> loops, function arguments, ...) , Rust expects a \"pattern\". This pattern can be a simple variable name, but it can also contain some \"destructuring elements\", like <code>&amp;</code>. Rust will then bind a value to this pattern. A simple example would be something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let (a, b) = ('x', true);\n</code></pre>\n\n<p>On the right hand side there is a value of type <code>(char, bool)</code> (a tuple). This value is bound to the left hand pattern (<code>(a, b)</code>). As there is already a \"structure\" defined in the pattern (specifically, the tuple), that structure is removed and <code>a</code> und <code>b</code> bind to the tuple's elements. Thus, the type of <code>a</code> is <code>char</code> and the type of <code>b</code> is <code>bool</code>.</p>\n\n<p>This works with a couple of structures, including arrays:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let [x] = [true];\n</code></pre>\n\n<p>Again, on the right side we have a value of type <code>[bool; 1]</code> (an array) and on the left side we have a pattern in the form of an array. The single array element is bound to <code>x</code>, meaning that the type of <code>x</code> is <code>bool</code> and <em>not</em> <code>[bool; 1]</code>!</p>\n\n<p>And unsurprisingly, this also works for references!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let foo = 0u32;\nlet r = &amp;foo;\nlet &amp;c = &amp;foo;\n</code></pre>\n\n<p>Here, <code>foo</code> has the type <code>u32</code> and consequently, the expression <code>&amp;foo</code> has the type <code>&amp;u32</code>. The type of <code>r</code> is also <code>&amp;u32</code>, as it is a simple <code>let</code> binding. The type of <code>c</code> is <code>u32</code> however! That is because the \"reference was destructured/removed\" by the pattern.</p>\n\n<p><strong>A common misunderstanding is that syntax in patterns has exactly the opposite effect of what the same syntax would have in expressions!</strong> If you have a variable <code>a</code> of type <code>[T; 1]</code>, then the expression <code>[a]</code> has the type <code>[[T; 1]; 1]</code> \u2192 it <em>adds</em> stuff. However, if you bind <code>a</code> to the pattern <code>[c]</code>, then \u00b4y<code>has the type</code>T` \u2192 it <em>removes</em> stuff.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a = [true];    // type of `a`: `[bool; 1]`\nlet b = [a];       // type of `b`: `[[bool; 1]; 1]`\nlet [c] = a;       // type of `c`: `bool`\n</code></pre>\n\n<p>This also explains your question:</p>\n\n<blockquote>\n  <p>It seems like it is somehow dereferencing, but then why in the below code, it is not working?</p>\n  \n  <pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n   let mut hey:i32 = 32;\n   let x:i32 = 2;\n   hey = &amp;&amp;x;\n}\n</code></pre>\n</blockquote>\n\n<p>Because you use <code>&amp;</code> on the expression side, where it <em>adds</em> a layer of references.</p>\n\n<hr>\n\n<p>So finally about your loop: when iterating over a slice (as you do here), the iterator yields reference to the slice's elements. So in the case <code>for i in list {}</code>, <code>i</code> has the type <code>&amp;i32</code>. But the assignment <code>largest = i;</code> requires a <code>i32</code> on the right hand side. You can achieve this in two ways: either dereference <code>i</code> via the dereference operator <code>*</code> (i.e. <code>largest = *i;</code>) or destructure the reference in the loop pattern (i.e. <code>for &amp;i in list {}</code>). </p>\n\n<hr>\n\n<p><em>Related questions</em>:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/40613725/iterating-over-a-slices-values-instead-of-references-in-rust\">Iterating over a slice's values instead of references in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/28405400/why-is-needed-to-destructure-a-list-of-tuples-during-iteration\">Why is <code>&amp;</code> needed to destructure a list of tuples during iteration?</a></li>\n</ul>\n"}], "owner": {"reputation": 1384, "user_id": 10240085, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HBxgL.jpg?s=128&g=1", "display_name": "Muhammad Naufil", "link": "https://stackoverflow.com/users/10240085/muhammad-naufil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 984, "favorite_count": 2, "accepted_answer_id": 57339297, "answer_count": 2, "score": 9, "last_activity_date": 1581614952, "creation_date": 1564842335, "last_edit_date": 1564925537, "question_id": 57339201, "link": "https://stackoverflow.com/questions/57339201/what-is-the-purpose-of-before-the-loop-variable", "title": "What is the purpose of `&amp;` before the loop variable?", "body": "<p>What is the purpose of <code>&amp;</code> in the code <code>&amp;i in list</code>? If I remove the <code>&amp;</code>, it produces an error in <code>largest = i</code>, since they have mismatched types (where <code>i</code> is <code>&amp;32</code> and <code>i</code> is <code>i32</code>). But how does <code>&amp;i</code> convert <code>i</code> into <code>i32</code>?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn largest(list: &amp;[i32]) -&gt; i32 {\n    println!(\"{:?}\", list);\n    let mut largest = list[0];\n    for &amp;i in list {\n        if i &gt; largest {\n            largest = i;\n        }\n    }\n    largest\n}\n\nfn main() {\n    let hey = vec![1, 3, 2, 6, 90, 67, 788, 12, 34, 54, 32];\n    println!(\"The largest number is: {}\", largest(&amp;hey));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b5fb13521615b3b55c9f6dbaba49870c\" rel=\"noreferrer\"><strong>Playground</strong></a></p>\n\n<p>It seems like it is somehow dereferencing, but then why in the below code, is it not working?</p>\n\n<pre><code>fn main() {\n    let mut hey: i32 = 32;\n    let x: i32 = 2;\n    hey = &amp;&amp;x;\n}\n</code></pre>\n\n<p>It says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>4 |     hey = &amp;&amp;x;\n  |           ^^^ expected i32, found &amp;&amp;i32\n  |\n  = note: expected type `i32`\n             found type `&amp;&amp;i32`\n</code></pre>\n"}, {"tags": ["rust", "conditional-compilation"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user8725011"}, "edited": false, "score": 1, "creation_date": 1564838535, "post_id": 57338478, "comment_id": 101165924, "body": "According to <a href=\"https://stackoverflow.com/questions/34777302/example-of-how-to-use-conditional-compilation-macros-in-rust\">this answer</a> I have to use features. Is that correct?"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1564840301, "post_id": 57338478, "comment_id": 101166335, "body": "Why do you need to do this?  Is there any reason you cannot expect user to pass a slice as a buffer instead of this Buffer object? This looks very cumbersome, especially when you might want to have two different buffer sizes at once."}, {"owner": {"user_type": "does_not_exist", "display_name": "user8725011"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1564841690, "post_id": 57338478, "comment_id": 101166718, "body": "There are multiple factors at play here: first <code>Buffer</code>is just a wrapper for a statically sized array. I could have used a type alias eg. <code>type Buffer = [f32; 256]</code> and implement the necessary methods on it. The <code>Buffer</code> will eventually be used in some concurrent context / will be processed in multiple threads. Working with correct lifetimes seems to be more cumbersome here, but I get your point, that the provided example is not very elegant."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1564843549, "post_id": 57338478, "comment_id": 101167150, "body": "That&#39;s fair, what about multiple buffer size problem? I&#39;d suggest just going with multiple structs, or a generic struct and let user choose what size they need before creating the buffer, not at compile time, even if they will ever need a single buffer type. (user is general, even if you&#39;re writing code just for yourself)"}], "answers": [{"tags": [], "owner": {"reputation": 8777, "user_id": 3102264, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/G69VV.jpg?s=128&g=1", "display_name": "mpromonet", "link": "https://stackoverflow.com/users/3102264/mpromonet"}, "is_accepted": true, "score": 4, "last_activity_date": 1565342547, "last_edit_date": 1565342547, "creation_date": 1565283999, "answer_id": 57417589, "question_id": 57338478, "link": "https://stackoverflow.com/questions/57338478/how-to-set-cfg-options-to-compile-conditionally/57417589#57417589", "title": "How to set cfg options to compile conditionally?", "body": "<p>You can set the environnment variable <code>RUSTFLAGS</code> or set <code>rustflags</code> variable in <code>.cargo/config</code>.<br>\nFrom <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"nofollow noreferrer\">environment-variables</a></p>\n\n<blockquote>\n  <p>RUSTFLAGS \u2014 A space-separated list of custom flags to pass to all\n  compiler invocations that Cargo performs. In contrast with cargo\n  rustc, this is useful for passing a flag to all compiler instances.</p>\n</blockquote>\n\n<p>In your example, you could use :</p>\n\n<pre><code>RUSTFLAGS='--cfg buffersize=\"32\"' cargo build\n</code></pre>\n"}, {"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user8725011"}, "is_accepted": false, "score": 0, "last_activity_date": 1587548701, "creation_date": 1587548701, "answer_id": 61361983, "question_id": 57338478, "link": "https://stackoverflow.com/questions/57338478/how-to-set-cfg-options-to-compile-conditionally/61361983#61361983", "title": "How to set cfg options to compile conditionally?", "body": "<p>I want to post an update to my question as an additional option on how to pass (numeric) configuration values at compile time, that's possible through a build script.</p>\n\n<p>Suppose you have following build script inside your project:</p>\n\n<pre><code>use std::env;\nuse std::fs::File;\nuse std::io::Write;\nuse std::path::Path;\n\nfn main() {\n    println!(\"cargo:rerun-if-env-changed=SIZE\");\n    let out_dir = env::var(\"OUT_DIR\").unwrap();\n    let dest = Path::new(&amp;out_dir).join(\"consts.rs\");\n\n    let mut out_file = File::create(&amp;dest).expect(\"Cannot create file\");\n    let size: usize = env!(\"SIZE\").parse().unwrap();\n\n    write!(&amp;out_file, \"pub const S : usize = {};\", size);\n}\n</code></pre>\n\n<p>It reads an environment variable at compile time, parses it as <code>usize</code> and writes a rust file (<code>consts.rs</code>) containing only the constant. Now, in your application code you can include this file and use the constant to eg. allocate memory on the stack:</p>\n\n<pre><code>include!(concat!(env!(\"OUT_DIR\"), \"/consts.rs\"));\n\nfn main() {\n    let array = [0.0f32; S];\n    println!(\"array len= {:?}\", array.len());\n}\n</code></pre>\n\n<p>The downside of this trick is, that you have to recompile the whole project (or parts of it) whenever the value of the environment variable changes, since <code>cargo:rerun-if-env-changed=SIZE</code> doesn't get captured. It also implies to always keep knowledge of this configuration option, but this could be wrapped in an additional build script like a makefile. Even if this is not the most elegant path to choose, it might be an option on certain occasions. </p>\n\n<p>It would be nice to have this as macro option, though.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user8725011"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1265, "favorite_count": 0, "accepted_answer_id": 57417589, "answer_count": 2, "score": 2, "last_activity_date": 1587548701, "creation_date": 1564836679, "last_edit_date": 1565285451, "question_id": 57338478, "link": "https://stackoverflow.com/questions/57338478/how-to-set-cfg-options-to-compile-conditionally", "title": "How to set cfg options to compile conditionally?", "body": "<p>I am working on some code where a buffer is backed by a statically sized array. Since Rust and the build tools provided by it offer the possibilities to compile conditionally, I can do something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Buffer {\n    // default case, if none is set\n    #[cfg(not(buffersize))]\n    buffer: [f32; 16],\n\n    #[cfg(buffersize = \"32\")]\n    buffer: [f32; 32],\n\n    #[cfg(buffersize = \"64\")]\n    buffer: [f32; 64],\n}\n\nimpl Buffer {\n    fn new() -&gt; Buffer {\n        Buffer {\n            #[cfg(not(buffersize))]\n            buffer: [0.0; 16],\n\n            #[cfg(buffersize = \"32\")]\n            buffer: [0.0; 32],\n\n            #[cfg(buffersize = \"64\")]\n            buffer: [0.0; 64],\n        }\n    }\n}\n</code></pre>\n\n<p>There is <a href=\"https://stackoverflow.com/questions/27632660/how-do-i-use-conditional-compilation-with-cfg-and-cargo\">another question</a> that uses features to compile the code conditionally. Using features alone, I would have to combine <code>buffersize</code> and the actual value e.g. <code>buffersize16</code>. Is it possible to provide the <code>cfg</code> flags to Cargo, or would I need to provide them directly to <code>rustc</code>? </p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 11836252, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68a88bee7c05075b355e2f97114dfe58?s=128&d=identicon&r=PG&f=1", "display_name": "owl", "link": "https://stackoverflow.com/users/11836252/owl"}, "edited": false, "score": 2, "creation_date": 1564831240, "post_id": 57337200, "comment_id": 101164476, "body": "thanks for the first paragraph, i was not aware about the importance of isolated package. And following your steps i can do what i wanted to do. but at step 2, cargo build produced some error about locating <code>crates.io~index</code>. After searching about it i found that, removing ~/.cargo/registry will solve the problem. Thanks for your great answer. <a href=\"https://github.com/rust-lang/cargo/issues/4245\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/4245</a>"}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 7, "last_activity_date": 1564827330, "last_edit_date": 1564827330, "creation_date": 1564825847, "answer_id": 57337200, "question_id": 57336771, "link": "https://stackoverflow.com/questions/57336771/how-do-i-use-cargo-to-build-a-project-while-offline/57337200#57337200", "title": "How do I use Cargo to build a project while offline?", "body": "<p>Even in modern Python, one wouldn't just use the globally available <code>site_packages</code> directory and \"pollute\" the globally available packages, but one would use <a href=\"https://docs.python.org/3/library/venv.html#creating-virtual-environments\" rel=\"noreferrer\">virtual environments</a> to maintain proper versioning per project -- similar to what <code>cargo</code> does.</p>\n\n<p>With <code>cargo</code>, once all the packages downloaded and their versions specified explicitly in a project, one can pass the new\n<code>--offline</code> flag while one compiles one's project, in which case <code>cargo</code> <em>runs without accessing the network</em>:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo build --offline\n</code></pre>\n\n<p>That being said, doing something of what you described is of course perfectly possible:</p>\n\n<ol>\n<li>Create a directory, where your dependencies go:\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ mkdir offline_resources\n$ cd offline_resources\n</code></pre></li>\n<li>Download the repository you need and build it (this is the last point where you need to use the network):\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ git clone https://github.com/rust-random/rand.git\n$ cd rand\n$ cargo build\n</code></pre></li>\n<li>Create a new project:\n\n<pre><code>$ cd ../..\n$ cargo new use_offline\n$ cd use_offline\n</code></pre></li>\n<li>Edit <code>Cargo.toml</code>:\n\n<pre><code>[dependencies]\nrand = { path=\"../offline_resources/rand\", version=\"0.7.0\" }\n</code></pre></li>\n<li>Build your project:\n\n<pre><code>$ cargo build --offline\n</code></pre></li>\n<li>Follow the steps from 3 to 5 to create another project which will use the same <code>rand</code> dependency.</li>\n</ol>\n"}], "owner": {"reputation": 43, "user_id": 11836252, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68a88bee7c05075b355e2f97114dfe58?s=128&d=identicon&r=PG&f=1", "display_name": "owl", "link": "https://stackoverflow.com/users/11836252/owl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1012, "favorite_count": 0, "accepted_answer_id": 57337200, "answer_count": 1, "score": 3, "last_activity_date": 1564827330, "creation_date": 1564821462, "last_edit_date": 1564821691, "question_id": 57336771, "link": "https://stackoverflow.com/questions/57336771/how-do-i-use-cargo-to-build-a-project-while-offline", "title": "How do I use Cargo to build a project while offline?", "body": "<p>I am practicing rust (1.36) by creating small program using <code>rand</code> crate. but the problem is whenever i create new project using <code>cargo new</code> and then add <code>rand</code> dependency in <code>cargo.toml</code>. it connects to internet and download same <code>rand</code> package again. </p>\n\n<p>In contrast to Python, installed packages go to site_package folder and become available for import/use to any program. Don't required to download again.</p>\n\n<p>My question is, how do I tell cargo to look for already installed local crate rather than downloading again?</p>\n"}, {"tags": ["go", "rust"], "comments": [{"owner": {"reputation": 5151, "user_id": 4466350, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/cd5606b873067472e30c5ef5bc2ac5bf?s=128&d=identicon&r=PG&f=1", "display_name": "mh-cbon", "link": "https://stackoverflow.com/users/4466350/mh-cbon"}, "edited": false, "score": 0, "creation_date": 1564833121, "post_id": 57336638, "comment_id": 101164830, "body": "for the readers, keyword tricolor algorithm, <a href=\"https://blog.golang.org/ismmkeynote\" rel=\"nofollow noreferrer\">blog.golang.org/ismmkeynote</a> <a href=\"https://www.youtube.com/watch?v=n59VtiRx34s\" rel=\"nofollow noreferrer\">youtube.com/watch?v=n59VtiRx34s</a>"}], "answers": [{"tags": [], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "is_accepted": false, "score": 2, "last_activity_date": 1564831198, "last_edit_date": 1564831198, "creation_date": 1564821039, "answer_id": 57336731, "question_id": 57336638, "link": "https://stackoverflow.com/questions/57336638/go-vs-rust-garbage-collector-performance-and-type/57336731#57336731", "title": "Go vs Rust garbage collector performance and type", "body": "<p>This question is based on wrong assumption that Rust has managed memory. It does not. Besides an allocator, and tools in std that you can use, compiler does not do anything without being asked to.</p>\n\n<p>Rust uses <a href=\"https://en.wikipedia.org/wiki/Resource_acquisition_is_initialization\" rel=\"nofollow noreferrer\">RAII (Resource acquisition is initialization)</a> and unless you specifically create <code>std::rc::Rc&lt;T&gt;</code>, for example</p>\n\n<pre><code>fn main() {\n    let my_rc = std::rc::Rc::new(5);\n    let my_rc_cloned = my_rc.clone();\n\n    println!(\"original: {}, cloned: {}\", my_rc, my_rc_cloned);\n} // both Rc's are dropped, refcount is 0, and 5 is dropped too\n</code></pre>\n\n<p>There's no reference counting involved. Ever. Values are pushed and popped off current thread stack like in any low level programming language, such as C.</p>\n\n<p><code>let rc = Rc::new(value: T);</code>, creates a new struct, on the stack, C++ uses RAII too, and <code>std::shared_ptr&lt;int&gt; rc(new int(5));</code> is how you create reference counting pointer in it.</p>\n\n<p>Both <code>rc</code>'s are on the stack and are dropped/destructed once particular block is popped off the stack. That's how RAII works, without going into any minor details.</p>\n"}], "owner": {"reputation": 9, "user_id": 7183516, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e7d9aae8745751ceb0ab5e7935bbec3?s=128&d=identicon&r=PG", "display_name": "JARVISAI", "link": "https://stackoverflow.com/users/7183516/jarvisai"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1238, "favorite_count": 0, "closed_date": 1564832586, "answer_count": 1, "score": -5, "last_activity_date": 1564831551, "creation_date": 1564819932, "last_edit_date": 1564831551, "question_id": 57336638, "link": "https://stackoverflow.com/questions/57336638/go-vs-rust-garbage-collector-performance-and-type", "closed_reason": "Needs details or clarity", "title": "Go vs Rust garbage collector performance and type", "body": "<p>I read in some stack-overflow about Go's GC.</p>\n\n<p>Stack and heap models in Go Garbage collector \nI want to know that if a variable needs to be defined in heap or stack in Go and then if GC want to collect it, what algorithm is used for this?</p>\n\n<p>If we assume that in languages that have GC that heap is more efficient, but what about Rust and how does rust handle this in compare to Go?</p>\n\n<p>Especially about reference counter in Go that we have no choice in most of times to ask compiler but such a tool exist and it does its job on its own way!</p>\n\n<p>I read this :\n<a href=\"https://stackoverflow.com/questions/10866195/stack-vs-heap-allocation-of-structs-in-go-and-how-they-relate-to-garbage-collec\">Stack vs heap allocation of structs in Go, and how they relate to garbage collection</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 4, "creation_date": 1564801332, "post_id": 57335103, "comment_id": 101159769, "body": "<code>Option&lt;Box&lt;ListNode&gt;&gt;</code> sounds plausible as part of a linked list in Rust, but you&#39;ll need to show some code if you want help debugging whatever problem you ran into. Be aware that linked lists are not trivial and Rust will force you to justify yourself in a lot of ways that C# doesn&#39;t; see <a href=\"https://rust-unofficial.github.io/too-many-lists/#learn-rust-with-entirely-too-many-linked-lists\" rel=\"nofollow noreferrer\">rust-unofficial.github.io/too-many-lists/&hellip;</a> for detailed instructions and explanations."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1564919679, "post_id": 57335103, "comment_id": 101180545, "body": "Recursive types are tricky in Rust because of borrowing issues, as you noted. If the type does not provide iterators or other helper types, you have two options that I know of: unsafe code or recursive functions."}], "answers": [{"tags": [], "owner": {"reputation": 410, "user_id": 2968044, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1e154edcb237830401dc1ea3f3ff1bc3?s=128&d=identicon&r=PG", "display_name": "comphilip", "link": "https://stackoverflow.com/users/2968044/comphilip"}, "is_accepted": true, "score": 1, "last_activity_date": 1564990950, "creation_date": 1564990950, "answer_id": 57354198, "question_id": 57335103, "link": "https://stackoverflow.com/questions/57335103/listnodes-next-field-type-to-optionboxlistnode-is-it-correct/57354198#57354198", "title": "ListNode&#39;s next field type to Option&lt;Box&lt;ListNode&gt;&gt;, is it correct?", "body": "<p>According to @rodrigo suggestion. I finally resolve the problem in recursive function way.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn internal_add_two_number(\n    mut l1: &amp;Option&lt;Box&lt;ListNode&gt;&gt;,\n    mut l2: &amp;Option&lt;Box&lt;ListNode&gt;&gt;,\n    mut carry: i32,\n) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n    let mut sum = carry;\n    if l1.is_none() &amp;&amp; l2.is_none() {\n        if carry &gt; 0 {\n            return Some(Box::new(ListNode::new(carry)));\n        }\n        return None;\n    }\n    if let Some(p) = l1 {\n        sum += p.val;\n        l1 = &amp;p.next;\n    }\n    if let Some(p) = l2 {\n        sum += p.val;\n        l2 = &amp;p.next;\n    }\n    carry = sum / 10;\n    sum = sum % 10;\n\n    Some(Box::new(ListNode {\n        val: sum,\n        next: internal_add_two_number(l1, l2, carry),\n    }))\n}\n\nimpl Solution {\n    pub fn add_two_numbers(\n        l1: Option&lt;Box&lt;ListNode&gt;&gt;,\n        l2: Option&lt;Box&lt;ListNode&gt;&gt;,\n    ) -&gt; Option&lt;Box&lt;ListNode&gt;&gt; {\n        internal_add_two_number(&amp;l1, &amp;l2, 0)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 410, "user_id": 2968044, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1e154edcb237830401dc1ea3f3ff1bc3?s=128&d=identicon&r=PG", "display_name": "comphilip", "link": "https://stackoverflow.com/users/2968044/comphilip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 57354198, "answer_count": 1, "score": 0, "last_activity_date": 1564990950, "creation_date": 1564800470, "question_id": 57335103, "link": "https://stackoverflow.com/questions/57335103/listnodes-next-field-type-to-optionboxlistnode-is-it-correct", "title": "ListNode&#39;s next field type to Option&lt;Box&lt;ListNode&gt;&gt;, is it correct?", "body": "<p>I tried to resolve <a href=\"https://leetcode.com/problems/add-two-numbers\" rel=\"nofollow noreferrer\">https://leetcode.com/problems/add-two-numbers</a>, this problem is easy while I cannot finish it in rust because of borrow problem. I tried several 3 hours and I doubt <code>ListNode</code>'s <code>next</code> field type to <code>Option&lt;Box&lt;ListNode&gt;&gt;</code> is not properly.</p>\n\n<p>When I switch to c#, I finish the problem quickly. Following is c# version solution. I am unable to translate it to rust.</p>\n\n<pre class=\"lang-cs prettyprint-override\"><code>public class Solution {\n    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {\n        ListNode re = null;\n        ListNode next = null;\n        int carry = 0;\n        while(l1 != null || l2 != null) {\n            var val = (l1 != null ? l1.val : 0) + (l2 != null ? l2.val : 0) + carry;\n            carry = val / 10;\n            val %= 10;\n            if (re != null){\n                next.next = new ListNode(val);\n                next = next.next;\n            } else {\n                re = new ListNode(val);\n                next = re;\n            }\n            if (l1 != null) {\n                l1 = l1.next;\n            }\n            if (l2 != null) {\n                l2 = l2.next;\n            }\n        }\n        if (carry &gt; 0) {\n            next.next = new ListNode(carry);\n        }\n        return re;\n    }\n}\n</code></pre>\n"}, {"tags": ["c", "memory", "struct", "rust"], "comments": [{"owner": {"reputation": 194515, "user_id": 379897, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/73c5967cf90e62b10d34b1d2d0ad3aae?s=128&d=identicon&r=PG", "display_name": "R.. GitHub STOP HELPING ICE", "link": "https://stackoverflow.com/users/379897/r-github-stop-helping-ice"}, "edited": false, "score": 0, "creation_date": 1564798219, "post_id": 57334966, "comment_id": 101159475, "body": "My guess would be no, since <code>unsafe</code> code can still see the difference and since you need particular layout to interface with functions written in other languages, which Rust supports linking with. But I&#39;m not sufficiently familiar with Rust to know for sure."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 4, "creation_date": 1564798419, "post_id": 57334966, "comment_id": 101159491, "body": "Unlike in C, Rust structure fields order is not guaranteed, unless it is <code>repr(C)</code>. Read more <a href=\"https://doc.rust-lang.org/nomicon/repr-rust.html\" rel=\"nofollow noreferrer\">here</a>"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1564828049, "post_id": 57335005, "comment_id": 101163857, "body": "Could you also mention <code>repr(C)</code>, in which case the field order does indeed matter? I think that&#39;s an important detail."}, {"owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1564829760, "post_id": 57335005, "comment_id": 101164202, "body": "? It&#39;s right there in the quote <code>but it [the memory layout of a struct] can be fixed with the repr attribute</code>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1564831651, "post_id": 57335005, "comment_id": 101164559, "body": "Yes I saw that, but I think it would still be beneficial to explicitly explain <code>repr(C)</code>. I also think the second sentence in the quote is a bit confusing :/"}], "tags": [], "owner": {"reputation": 66560, "user_id": 9072753, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EPmGy.jpg?s=128&g=1", "display_name": "KamilCuk", "link": "https://stackoverflow.com/users/9072753/kamilcuk"}, "is_accepted": true, "score": 8, "last_activity_date": 1564798478, "creation_date": 1564798478, "answer_id": 57335005, "question_id": 57334966, "link": "https://stackoverflow.com/questions/57334966/does-struct-field-declaration-order-matter-in-rust/57335005#57335005", "title": "Does struct field declaration order matter in Rust?", "body": "<p>From the <a href=\"https://github.com/rust-lang-nursery/reference/blob/8e7d614303b0dec7492e048e63855fcd3b944ec8/src/types/struct.md\" rel=\"noreferrer\">rust reference struct.md</a>:</p>\n\n<blockquote>\n  <p>The memory layout of a <code>struct</code> is undefined by default to allow for compiler optimizations like field reordering, but it can be fixed with the <code>repr</code> attribute. In either case, fields may be given in any order in a corresponding struct expression; the resulting <code>struct</code> value will always have the same memory layout.</p>\n</blockquote>\n"}], "owner": {"reputation": 53, "user_id": 10865585, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/os1Hd.jpg?s=128&g=1", "display_name": "xvrqt", "link": "https://stackoverflow.com/users/10865585/xvrqt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 761, "favorite_count": 0, "accepted_answer_id": 57335005, "answer_count": 1, "score": 5, "last_activity_date": 1564798478, "creation_date": 1564797841, "question_id": 57334966, "link": "https://stackoverflow.com/questions/57334966/does-struct-field-declaration-order-matter-in-rust", "title": "Does struct field declaration order matter in Rust?", "body": "<p>I know that in C the compiler is not allowed to reorder struct fields and that this is important to the memory layout and alignment of the struct.</p>\n\n<p>I am a beginner in Rust, and since it seems that for the most part raw pointers are hidden (I know you can still use them) if rustc is allowed to reorder the fields from their declared order in a struct.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564778386, "post_id": 57332016, "comment_id": 101156251, "body": "The linked page says <i>Edition changes only affect the way the compiler initially parses the code.</i> This suggests the difference probably goes no farther than the AST."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 5, "last_activity_date": 1564783769, "creation_date": 1564783769, "answer_id": 57333962, "question_id": 57332016, "link": "https://stackoverflow.com/questions/57332016/what-is-the-exact-mechanism-that-allows-source-code-targeting-different-editions/57333962#57333962", "title": "What is the exact mechanism that allows source code targeting different Editions to interoperate?", "body": "<p>The editions only affect the syntax and do not change how the compiler will compile the code. The parser is pretty much the only edition-aware component of the compiler, with a few checks for the edition to decide how to parse stuffs. The AST is identical for both editions, although spans are aware of their editions and a few things in the compiler check which edition they were using. HIR and MIR do not need to know about editions.</p>\n\n<p>Eg. for <a href=\"https://github.com/rust-lang/rust/blob/cf048cc115860cc110865f460f3f2b9b4308ad92/src/libsyntax_pos/symbol.rs#L1096-L1101\" rel=\"noreferrer\">new keywords</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Returns `true` if the token is a keyword used in the language.\n    pub fn is_used_keyword(self) -&gt; bool {\n    // Note: `span.edition()` is relatively expensive, don't call it unless necessary.\n    self.name &gt;= kw::As &amp;&amp; self.name &lt;= kw::While ||\n    self.name.is_used_keyword_2018() &amp;&amp; self.span.rust_2018()\n}\n</code></pre>\n\n<p>The extra <code>self.name.is_used_keyword_2018() &amp;&amp; self.span.rust_2018()</code> will check whether the keyword is a keyword added in the 2018 edition (eg. <code>dyn</code>), and for 2015, it will be considered as a regular symbol.</p>\n\n<p>Another example is that in 2015, it was possible to omit parameter names in trait declaration, which is now forbidden. This is <a href=\"https://github.com/rust-lang/rust/blob/cf048cc115860cc110865f460f3f2b9b4308ad92/src/libsyntax/parse/parser.rs#L1206-L1208\" rel=\"noreferrer\">handled transparently as well</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// We don't allow argument names to be left off in edition 2018.\nlet is_name_required = p.token.span.rust_2018();\np.parse_arg_general(true, false, |_| is_name_required)\n</code></pre>\n\n<p>Then another piece of code <a href=\"https://github.com/rust-lang/rust/blob/cf048cc115860cc110865f460f3f2b9b4308ad92/src/libsyntax/parse/diagnostics.rs#L1238\" rel=\"noreferrer\">will emit an error in this case, but only for 2018</a>:</p>\n\n<pre><code>if require_name &amp;&amp; (\n    is_trait_item ||\n    self.token == token::Comma ||\n    self.token == token::CloseDelim(token::Paren)\n) { // `fn foo(a, b) {}` or `fn foo(usize, usize) {}`\n    err.span_suggestion(\n        pat.span,\n        \"if this was a parameter name, give it a type\",\n        format!(\"{}: TypeName\", ident),\n        Applicability::HasPlaceholders,\n    );\n    err.span_suggestion(\n        pat.span,\n        \"if this is a type, explicitly ignore the parameter name\",\n        format!(\"_: {}\", ident),\n        Applicability::MachineApplicable,\n    );\n    err.note(\"anonymous parameters are removed in the 2018 edition (see RFC 1685)\");\n    return Some(ident);\n}\n</code></pre>\n\n<p>and for 2015, <a href=\"https://github.com/rust-lang/rust/blob/cf048cc115860cc110865f460f3f2b9b4308ad92/src/libsyntax/parse/parser.rs#L1539\" rel=\"noreferrer\">a dummy name is created instead</a>:</p>\n\n<pre><code>let ident = Ident::new(kw::Invalid, self.prev_span);\nlet pat = P(Pat {\n    id: ast::DUMMY_NODE_ID,\n    node: PatKind::Ident(\n        BindingMode::ByValue(Mutability::Immutable), ident, None),\n    span: ty.span,\n});\n</code></pre>\n\n<p>The rest of the compiler doesn't need to know whether the user actually provided a name or not.</p>\n"}], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "accepted_answer_id": 57333962, "answer_count": 1, "score": 4, "last_activity_date": 1564783769, "creation_date": 1564771837, "question_id": 57332016, "link": "https://stackoverflow.com/questions/57332016/what-is-the-exact-mechanism-that-allows-source-code-targeting-different-editions", "title": "What is the exact mechanism that allows source code targeting different Editions to interoperate?", "body": "<p>I understand the goal of Editions and how to use them, but <a href=\"https://doc.rust-lang.org/edition-guide/editions/index.html\" rel=\"nofollow noreferrer\">the documentation</a> does not shed any light on their inner workings. </p>\n\n<p>Assume that I have two source files:</p>\n\n<ul>\n<li><p><code>old.rs</code>, targeting Rust 2015;</p></li>\n<li><p><code>new.rs</code>, targeting Rust 2018.</p></li>\n</ul>\n\n<p>I want to build an application that consumes both of them. What mechanism is being used to ensure they can interoperate?</p>\n\n<p>Do both <code>old.rs</code> and <code>new.rs</code> get translated to the same HIR model? Or does the homogenisation happen before (e.g. AST level) or after (e.g. MIR level) that?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1979, "user_id": 1634531, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/02fc16c85eab4a8e38f1c5ac1ae92a17?s=128&d=identicon&r=PG", "display_name": "weltensturm", "link": "https://stackoverflow.com/users/1634531/weltensturm"}, "edited": false, "score": 4, "creation_date": 1564773288, "post_id": 57331903, "comment_id": 101154446, "body": "Don&#39;t worry too much about <code>unsafe</code> in the background. If you don&#39;t need to wrap it in <code>unsafe</code>, it is safe to use."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1564778368, "post_id": 57331903, "comment_id": 101156249, "body": "If you implement data structures in Rust, chances are you need unsafe code to get optimal performance, or in many cases to make them work at all. All collections in the standard library extensively use unsafe code, and mutable iterators over <i>any</i> collection can only be implemented using unsafe code. There is nothing wrong with this. The important point is that the external API is safe. Whether the API internally uses unsafe code is an implementation detail you don&#39;t need to worry about. It doesn&#39;t matter for the user of the safe API."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1564778715, "post_id": 57331903, "comment_id": 101156347, "body": "That said, I&#39;m not sure this question is a good fit for the QA format on Stack Overflow. It&#39;s rather broad, and contains a lot of hypothetical assumptions \u2013 we can&#39;t have <i>any</i> performance overhead, not even <code>RefCell</code>, it needs to work for <i>all</i> collections etc. SO works best for concrete, practical problems, and if the combination of these assumptions should really occur in a practical problem, then hey, it&#39;s really an extremely exceptional case, so let&#39;s use some unsafe code."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1564782135, "post_id": 57331903, "comment_id": 101157257, "body": "Note that you shouldn&#39;t be afraid to use functions just because they are implemented with <code>unsafe</code>. <code>unsafe</code> does not mean that the code is unsafe, it means that the code cannot be proven to be safe automatically by the simple rules the compilers knows about. In a well tested, well maintained, and well reviewed library (and especially in the standard library), <code>unsafe</code> behind the scene are not a problem."}], "answers": [{"comments": [{"owner": {"reputation": 64, "user_id": 7201688, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/83iZ3.jpg?s=128&g=1", "display_name": "Swordelf", "link": "https://stackoverflow.com/users/7201688/swordelf"}, "edited": false, "score": 0, "creation_date": 1564785440, "post_id": 57333226, "comment_id": 101157931, "body": "Thank you for your answer. Yes, that does solve my first problem but as I explain in the edit that is not the real problem I&#39;ve encountered which raised the whole question. I&#39;m sorry for misleading you."}], "tags": [], "owner": {"reputation": 6434, "user_id": 602340, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/c813559e4994a45eb8eedca722399fa0?s=128&d=identicon&r=PG", "display_name": "matiu", "link": "https://stackoverflow.com/users/602340/matiu"}, "is_accepted": false, "score": 2, "last_activity_date": 1564783302, "last_edit_date": 1564783302, "creation_date": 1564778706, "answer_id": 57333226, "question_id": 57331903, "link": "https://stackoverflow.com/questions/57331903/how-to-hold-multiple-references-to-different-elements-inside-a-container/57333226#57333226", "title": "How to hold multiple references to different elements inside a container?", "body": "<p>So the goal is to overwrite vec[0] with vec[0] + vec[1] ?</p>\n\n<p>I think the trick is to use indexes into the Vec, instead of holding the references open.</p>\n\n<p>Does this meet the goal ?</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![\n        vec![1, 2, 3],\n        vec![10, 20, 30],\n    ];\n    let ln = vec[0].len();\n    for i in 0..ln {\n        vec[0][i] += vec[1][i];\n    }\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ea1900726ff07b5d2bd0ad39f15e1bba\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ea1900726ff07b5d2bd0ad39f15e1bba</a></p>\n\n<hr>\n\n<p>I also wanted to test if doing it in place was actually faster than creating a new array. \"Perhaps the compiler is smart enough to do internal memory re-use\" I thought. Turns out the compiler is not that smart.</p>\n\n<p>The for loop with indexes is the fastest way.</p>\n\n<p>Code: <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=1d57a0e5bbb21b3bb87dfc5a7735335f\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=nightly&amp;mode=release&amp;edition=2018&amp;gist=1d57a0e5bbb21b3bb87dfc5a7735335f</a></p>\n\n<p>Results (on my laptop):</p>\n\n<pre><code>running 7 tests\ntest bench_create_new_array   ... bench:         230 ns/iter (+/- 0)\ntest bench_for_indexes        ... bench:         174 ns/iter (+/- 0)\ntest bench_new_array_borrow   ... bench:         231 ns/iter (+/- 0)\ntest bench_to_owned1          ... bench:       1,097 ns/iter (+/- 4)\ntest bench_to_owned_in_place  ... bench:         240 ns/iter (+/- 1)\ntest bench_to_owned_in_place2 ... bench:       1,080 ns/iter (+/- 159)\ntest bench_to_owned_in_place3 ... bench:       1,037 ns/iter (+/- 2)\n</code></pre>\n"}], "owner": {"reputation": 64, "user_id": 7201688, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/83iZ3.jpg?s=128&g=1", "display_name": "Swordelf", "link": "https://stackoverflow.com/users/7201688/swordelf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1593028957, "creation_date": 1564771251, "last_edit_date": 1593028957, "question_id": 57331903, "link": "https://stackoverflow.com/questions/57331903/how-to-hold-multiple-references-to-different-elements-inside-a-container", "title": "How to hold multiple references to different elements inside a container?", "body": "<p>Consider this simple example: Having <code>v: Vec&lt;Vec&lt;i32&gt;&gt;</code> I want to add <code>v[1]</code> to <code>v[0]</code>.</p>\n<p>I'm not even considering sacrificing performance, so cloning any of the vectors is not an option. Thus, no matter how exactly we are going to implement the addition of the vectors, we would need simultaneous references inside <code>v</code>: <code>&amp;mut v[0]</code> and <code>&amp;v[1]</code>. Obviously the problem here is that indexing borrows <code>v</code> and indexing in mutable context borrows <code>v</code> mutably so the borrow checker would not allow this.</p>\n<p>This example leads to a more general problem: how can we hold simultaneous references to <em>different</em> elements of a container if all methods that return (mutable) references to elements (mutably) borrow the container itself?</p>\n<p>Note that I do understand the origin of the problem and why in compile time the borrow checker cannot see that we are referencing different elements. The question is how do we tell the compiler we are doing the right thing without sacrificing performance and/or safety?</p>\n<p>Currently I'm aware of 3 possible solutions without a noticeable performance overhead:</p>\n<ol>\n<li><code>slice::split_at_mut</code> is a decent workaround but unfortunately works only for sequential/slice-like containers. Note that this function utilizes unsafe code in the implementation.</li>\n<li>Using iterators: yes, we can hold simultaneous references returned from an iterator, but in many cases using an iterator is not correct, for example, <code>map: HashMap&lt;i32, Vec&lt;i32&gt;&gt;</code> and I again want to add <code>map[1]</code> to <code>map[0]</code>.  Note that (to my knowledge) iterators also use unsafe code (directly or indirectly).</li>\n<li>And finally the solution that works for every container: <code>RefCell&lt;T&gt;</code>, that is, wrapping elements of containers in a <code>RefCell</code>. (Well, or <code>Cell&lt;T&gt;</code> in some cases). There are two problems with this one though. The first is the slight performance overhead for runtime borrow checking. The second one is that if, for example, I'm writing a function which returns a container, I would either have to make the caller use my <code>RefCell</code>-wrapped container or have the whole container essentially copied in order to remove the <code>RefCell</code> wrapping (Is there a way to unwrap a <code>RefCell</code> inside a container for free?) And yet again, <code>RefCell</code> uses unsafe code.</li>\n</ol>\n<p>All of these solutions use unsafe code. Is it really the only way? I'm also quite sure there is a solution that uses unsafe code directly, but as a beginner I'm a little afraid to delve into unsafe Rust yet. Though, if it happens to be a good solution, please point me to the topics I would need to study.</p>\n<p>Are there any other solutions and which one is more practical? Please correct me wherever I don't understand something or understand it wrong.</p>\n<p><strong>Edit:</strong> As Sven Marnach pointed out, my question is too broad, so I'm narrowing the problem down.<br />\nI have a <code>map: HashMap&lt;i32, Vec&lt;i32&gt;&gt;</code> and I want to assign <code>map[0] + map[1]</code> (element-wise addition) to <code>map[0]</code> with zero performance overhead. Here, repetitive indexing as suggested by matiu would not be optimal because it would involve multiple searches on the same key. So, is it possible? If not, what is the best solution for this case?</p>\n"}, {"tags": ["google-api", "rust", "grpc"], "answers": [{"tags": [], "owner": {"reputation": 1632, "user_id": 2115619, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e900cac2280abc17b7c26fe6a613b840?s=128&d=identicon&r=PG", "display_name": "Mihail Malostanidis", "link": "https://stackoverflow.com/users/2115619/mihail-malostanidis"}, "is_accepted": false, "score": 0, "last_activity_date": 1564792290, "creation_date": 1564792290, "answer_id": 57334675, "question_id": 57330063, "link": "https://stackoverflow.com/questions/57330063/is-it-possible-to-use-grpc-google-apis-from-rust-today/57334675#57334675", "title": "Is it possible to use gRPC Google APIs from Rust today?", "body": "<p>Still not sure what exactly the authorization constitutes on the wire, but\n<code>google_default_credentials</code> successfully allows me to call Google APIs.\nIn fact, it not only works with <code>GOOGLE_APPLICATION_CREDENTIALS</code> env var pointing to the service account key <code>.json</code> but even magically uses my signed in google account from <code>gcloud</code> cli.</p>\n\n<p>For example with <code>pingcap/grpc-rs</code> aka <code>grpcio = \"0.5.0-alpha.3\"</code> all it took was</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let env = Arc::from(EnvBuilder::new().build());\n    let creds = ChannelCredentials::google_default_credentials().unwrap();\n    let ch = ChannelBuilder::new(env).secure_connect(\"firestore.googleapis.com\", creds);\n    let client = FirestoreClient::new(ch);\n</code></pre>\n"}], "owner": {"reputation": 1632, "user_id": 2115619, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e900cac2280abc17b7c26fe6a613b840?s=128&d=identicon&r=PG", "display_name": "Mihail Malostanidis", "link": "https://stackoverflow.com/users/2115619/mihail-malostanidis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 341, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1564792290, "creation_date": 1564762032, "last_edit_date": 1564773604, "question_id": 57330063, "link": "https://stackoverflow.com/questions/57330063/is-it-possible-to-use-grpc-google-apis-from-rust-today", "title": "Is it possible to use gRPC Google APIs from Rust today?", "body": "<p>There is a <a href=\"https://github.com/googleapis/googleapis.github.io/blob/0c60b8c7ca1bf52a35b3e9e6d88cfbd463d226c7/examples/rpc/rust/src/main.rs\" rel=\"nofollow noreferrer\">prehistoric example</a> where <code>protobuf</code> crate is used with <code>reqwest</code>  HTTP client to call one of the few <a href=\"https://cloud.google.com/docs/authentication/api-keys\" rel=\"nofollow noreferrer\">whitelisted services</a> that can used with permanent API keys instead of OAuth / service accounts. This doesn't work with most of the <a href=\"https://github.com/googleapis/googleapis/blob/master/google/firestore/v1beta1/firestore.proto\" rel=\"nofollow noreferrer\">googleapis</a> zoo.</p>\n\n<p>Furthermore, using OAuth with gRPC doesn't seem as simple as attaching a <code>Authorization: Bearer</code><em><code>SIGNED_JWT</code></em> to the request. As seen in all the <a href=\"https://grpc.io/docs/guides/auth/\" rel=\"nofollow noreferrer\"><em>Authenticate with Google</em> examples</a> on grpc.io, this requires calling the <code>grpc_composite_channel_credentials_create</code> function in <a href=\"https://github.com/grpc/grpc/blob/db96d5d6ed5bb92651612c5a3d9110eb17d3df8d/src/core/lib/security/credentials/composite/composite_credentials.cc#L198-L209\" rel=\"nofollow noreferrer\">the C core library</a>.</p>\n\n<p>It looks like <code>pingcap/grpc-rs</code> doesn't <a href=\"https://github.com/pingcap/grpc-rs/blob/94fcfbc74f155efaefd37dbda819bccdd8f47f80/grpc-sys/grpc_wrap.cc\" rel=\"nofollow noreferrer\">wrap</a> or <a href=\"https://github.com/pingcap/grpc-rs/blob/1147191fdbd702458c63450dfb217c73659f78bb/src/credentials.rs\" rel=\"nofollow noreferrer\">use</a> this function. However, it does <a href=\"https://github.com/pingcap/grpc-rs/blob/1147191fdbd702458c63450dfb217c73659f78bb/src/credentials.rs#L227\" rel=\"nofollow noreferrer\">mention Google OAuth</a> suddenly.</p>\n\n<p>What is the truth?</p>\n"}, {"tags": ["json", "rust", "pretty-print", "serde"], "comments": [{"owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "edited": false, "score": 0, "creation_date": 1564753117, "post_id": 57327660, "comment_id": 101145220, "body": "Related to this question: <a href=\"https://stackoverflow.com/questions/42722169/generate-pretty-indented-json-with-serde/49087292#49087292\" title=\"generate pretty indented json with serde\">stackoverflow.com/questions/42722169/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 2, "last_activity_date": 1564756937, "creation_date": 1564756937, "answer_id": 57328741, "question_id": 57327660, "link": "https://stackoverflow.com/questions/57327660/pretty-print-json-without-linebreaks-with-serde/57328741#57328741", "title": "Pretty print JSON without linebreaks with serde?", "body": "<p>Under the hood, <code>to_string_pretty</code> calls <code>Serializer::with_formatter</code>, using the built-in <code>PrettyFormatter</code>.</p>\n\n<p>Your options are either:</p>\n\n<ul>\n<li>Create a custom implementation of <code>Formatter</code> to output the JSON in the format you want. Copying and pasting <code>PrettyFormatter</code> would probably be a good start!</li>\n<li>Amend <code>PrettyFormatter</code> to offer this as an option and submit a pull request. It already allows you to customize the string used for indenting, so I don't think allowing the removal of new-lines would be much of a stretch!</li>\n</ul>\n"}], "owner": {"reputation": 7411, "user_id": 2200659, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/ImYIK.jpg?s=128&g=1", "display_name": "Anders", "link": "https://stackoverflow.com/users/2200659/anders"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 484, "favorite_count": 0, "accepted_answer_id": 57328741, "answer_count": 1, "score": 0, "last_activity_date": 1564756937, "creation_date": 1564753093, "question_id": 57327660, "link": "https://stackoverflow.com/questions/57327660/pretty-print-json-without-linebreaks-with-serde", "title": "Pretty print JSON without linebreaks with serde?", "body": "<p>I want to pretty print some JSON using the serde crate for Rust. Using <a href=\"https://docs.serde.rs/serde_json/fn.to_string.html\" rel=\"nofollow noreferrer\"><code>serde_json::to_string</code></a> I can get this:</p>\n\n<pre><code>{\"foo\":1,\"bar\":2}\n</code></pre>\n\n<p>If I switch to <a href=\"https://docs.serde.rs/serde_json/fn.to_string_pretty.html\" rel=\"nofollow noreferrer\"><code>serde_json::to_string_pretty</code></a> I get this:</p>\n\n<pre><code>{\n  \"foo\": 1,\n  \"bar\": 2\n}\n</code></pre>\n\n<p>However, I want something inbetween with spaces to make it easier on the eye, but no linebreak so it stays on one row:</p>\n\n<pre><code>{\"foo\": 1, \"bar\": 2}\n</code></pre>\n\n<p>How can I achieve this? Note that the actual JSON being stringified might be more complex containing unkown levels of nesting. So just pretty printing and then stripping out the line breaks will not work.</p>\n"}, {"tags": ["enums", "rust", "memory-layout"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 3, "creation_date": 1564750014, "post_id": 57326734, "comment_id": 101143409, "body": "This has been discussed before. I guess the answer is the compiler isn&#39;t smart enough (yet)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1564750188, "post_id": 57326734, "comment_id": 101143489, "body": "@DenysS&#233;guret: The layout would be that <code>Rational::numerator</code> and <code>FixedPoint</code> overlap, and <code>Rational::denominator</code> does not overlap with anything. If the memory occupied at <code>Rational::denominator</code> is 0, then it&#39;s a <code>FixedPoint</code>, and otherwise it&#39;s a <code>Rational</code>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1564750374, "post_id": 57326734, "comment_id": 101143603, "body": "related : <a href=\"https://stackoverflow.com/questions/16504643/what-is-the-overhead-of-rusts-option-type\" title=\"what is the overhead of rusts option type\">stackoverflow.com/questions/16504643/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564750557, "post_id": 57326734, "comment_id": 101143703, "body": "This is <a href=\"https://github.com/rust-lang/rust/issues/46213\" rel=\"nofollow noreferrer\">issue #46213</a>. I took a stab at implementing it myself a couple years back but did not succeed. However, things have changed in rustc in the meantime in such a way that I think it may be easier now."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1564751147, "creation_date": 1564751147, "answer_id": 57327116, "question_id": 57326734, "link": "https://stackoverflow.com/questions/57326734/why-is-this-rust-enum-not-smaller/57327116#57327116", "title": "Why is this Rust enum not smaller?", "body": "<p>Although simple cases like <code>Option&lt;&amp;T&gt;</code> <a href=\"https://stackoverflow.com/questions/46557608/what-is-the-null-pointer-optimization-in-rust\">can be handled without reserving space for the tag</a>, the layout calculator in rustc is still not clever enough to optimize the size of enums with multiple non-empty variants.</p>\n\n<p>This is <a href=\"https://github.com/rust-lang/rust/issues/46213\" rel=\"nofollow noreferrer\">issue #46213</a> on GitHub.</p>\n\n<p>The case you ask about is pretty clear-cut, but there are similar cases where an enum <em>looks</em> like it should be optimized, but in fact can't be because the optimization would preclude taking internal references; for example, see <a href=\"https://stackoverflow.com/q/54499156/3650362\">Why does Rust use two bytes to represent this enum when only one is necessary?</a></p>\n"}], "owner": {"reputation": 42755, "user_id": 116639, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/30700279c97553494d9479ec7d667483?s=128&d=identicon&r=PG", "display_name": "Tom Anderson", "link": "https://stackoverflow.com/users/116639/tom-anderson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 303, "favorite_count": 0, "accepted_answer_id": 57327116, "answer_count": 1, "score": 4, "last_activity_date": 1564751147, "creation_date": 1564749788, "last_edit_date": 1564749825, "question_id": 57326734, "link": "https://stackoverflow.com/questions/57326734/why-is-this-rust-enum-not-smaller", "title": "Why is this Rust enum not smaller?", "body": "<p>Consider this silly enum:</p>\n\n<pre><code>enum Number {\n    Rational {\n        numerator: i32,\n        denominator: std::num::NonZeroU32,\n    },\n    FixedPoint {\n        whole: i16,\n        fractional: u16,\n    },\n}\n</code></pre>\n\n<p>The data in the Rational variant takes up 8 bytes, and the data in the FixedPoint variant takes up 4 bytes. The Rational variant has a field which must be nonzero, so i would hope that the enum layout rules would use that as a discriminator, with zero indicating the presence of the FixedPoint variant.</p>\n\n<p>However, this:</p>\n\n<pre><code>fn main() {\n    println!(\"Number = {}\", std::mem::size_of::&lt;Number&gt;(),);\n}\n</code></pre>\n\n<p>Prints:</p>\n\n<pre><code>Number = 12\n</code></pre>\n\n<p>So, the enum gets space for an explicit discriminator, rather than exploiting the presence of the nonzero field.</p>\n\n<p>Why isn't the compiler able to make this enum smaller?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1564731935, "post_id": 57321971, "comment_id": 101134684, "body": "<i>nobody will try to mutate things inside filter</i>: So that is not allowed. Maybe something like <code>.map(|x| *x = 3).filter(|x| *x == 2)</code>?"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1564732010, "post_id": 57321971, "comment_id": 101134709, "body": "@rodrigo I&#39;m trying to understand why that is not allowed. I though you can do mutation with <code>FnMut</code>."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564732151, "post_id": 57321971, "comment_id": 101134774, "body": "@Stargateur But I&#39;m able to mutate with <code>map</code>, for which the type is <code>Self::Item</code> which is not <code>mut</code>."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564732799, "post_id": 57321971, "comment_id": 101135081, "body": "@Stargateur Thanks, that kind of helps! But I think the <code>rust-lang</code> link is broken. Can you add this as an answer with the fixed link ?"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564733029, "post_id": 57321971, "comment_id": 101135193, "body": "@Stargateur Changing your last example to <code>(a: &amp;mut &amp;mut i32)</code> makes it work as opposed to <code>(a : &amp;&amp;mut i32)</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1564733602, "post_id": 57321971, "comment_id": 101135440, "body": "<a href=\"https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.filter_map\" rel=\"nofollow noreferrer\"><code>filter_map</code></a>?"}], "answers": [{"comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1564734511, "post_id": 57322562, "comment_id": 101135851, "body": "I think in the first function you mean <code>iter_mut</code> and not <code>into_iter</code>..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1564734656, "post_id": 57322562, "comment_id": 101135907, "body": "This doesn&#39;t change anything"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1564735401, "post_id": 57322562, "comment_id": 101136210, "body": "Why so ? Doesn&#39;t with <code>into_iter</code> it iterates over <code>T</code> and hence for map case the real type will be <code>Map&lt;Item=i32&gt;</code> as opposed to <code>Map&lt;Item=&amp;mut i32&gt;</code> in the <code>iter_mut</code> case ?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1564735589, "post_id": 57322562, "comment_id": 101136291, "body": "Yes but in <code>filter()</code>, <code>T</code> will still be behind a reference so <code>&amp;T</code> so not mutable. <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4a2593d6b5b3c7c56f82ef85b8801935\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 6, "last_activity_date": 1564738391, "last_edit_date": 1564738391, "creation_date": 1564734311, "answer_id": 57322562, "question_id": 57321971, "link": "https://stackoverflow.com/questions/57321971/mutate-vector-within-filter/57322562#57322562", "title": "Mutate vector within filter", "body": "<p>You are confusing two concepts: <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"nofollow noreferrer\"><code>FnMut</code></a> means that a function can change its captured variables, like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let v1 = vec![1, 2, 3];\n    let mut i = 0usize;\n    let v2: Vec&lt;_&gt; = v1\n        .into_iter()\n        .filter(|x| {\n            i = i + 1;\n            *x == 2\n        })\n        .collect();\n    println!(\"We iterate {} times and produce {:?}\", i, v2);\n}\n</code></pre>\n\n<p>This doesn't mean that every parameter of a function will be mutable.</p>\n\n<p>In your code, <code>filter()</code> takes a <code>&amp;Self::Item</code>, which is very different from the <code>map()</code> one that takes <code>Self::Item</code>. Because the real type will translate to <code>Map&lt;Item=&amp;mut i32&gt;</code> and <code>Filter&lt;Item=&amp;&amp;mut i32&gt;</code>. Rust forbids you from mutating a reference if it's behind a non mutable reference:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn test(a: &amp;&amp;mut i32) {\n    **a = 5;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to `**a` which is behind a `&amp;` reference\n</code></pre>\n\n<p>This is because Rust follows the <a href=\"https://doc.rust-lang.org/stable/book/ch04-02-references-and-borrowing.html#the-rules-of-references\" rel=\"nofollow noreferrer\">the-rules-of-references</a>:</p>\n\n<blockquote>\n  <ul>\n  <li>At any given time, you can have either one mutable reference or any number of immutable references.</li>\n  <li>References must always be valid.</li>\n  </ul>\n</blockquote>\n\n<p>This means you can have more than one <code>&amp;&amp;mut</code> but only one <code>&amp;mut &amp;mut</code>. If Rust didn't stop you, you could mutate a <code>&amp;&amp;mut</code> and that would poison any other <code>&amp;&amp;mut</code>.</p>\n\n<p>Unfortunately the full error description of <a href=\"https://doc.rust-lang.org/stable/error-index.html#E0594\" rel=\"nofollow noreferrer\"><code>E0594</code></a> is still not available, see <a href=\"https://github.com/rust-lang/rust/issues/61137\" rel=\"nofollow noreferrer\">#61137</a>.</p>\n\n<p>Note: Avoid side effects when you use the iterator API, I think it's OK to mutate your <code>FnMut</code> state but not the item, you should do this in a for loop, like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut v1 = vec![1, 2, 3];\n    for x in v1.iter_mut().filter(|x| **x == 2) {\n        *x = 1;\n    }\n    println!(\"{:?}\", v1);\n}\n</code></pre>\n"}], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 179, "favorite_count": 0, "accepted_answer_id": 57322562, "answer_count": 1, "score": 0, "last_activity_date": 1564738391, "creation_date": 1564731792, "question_id": 57321971, "link": "https://stackoverflow.com/questions/57321971/mutate-vector-within-filter", "title": "Mutate vector within filter", "body": "<p>So, I have the following code successfully performing filter in vector:</p>\n\n<pre><code>let mut v1 : Vec&lt;i32&gt; = vec!(1,2,3);\nlet v2 : Vec&lt;&amp;mut i32&gt; = v1.iter_mut().filter(|x| {**x == 2}).collect();\nprintln!(\"{:?}\", v2);\n</code></pre>\n\n<p>Since the type signature of the predicate in the filter function is\n<code>FnMut(&amp;Self::Item) -&gt; bool</code>, I was assuming that that mutation inside\nthe closure will work:</p>\n\n<pre><code>let mut v1 : Vec&lt;i32&gt; = vec!(1,2,3);\nlet v2 : Vec&lt;&amp;mut i32&gt; = v1.iter_mut().filter(|x| {**x = 3; **x == 2}).collect();\nprintln!(\"{:?}\", v2);\n</code></pre>\n\n<p>But the above code results in a compile error. How to fix that ? Note\nthat I'm playing with rust to get a better understanding, so the abpve\nexample doesn't make sense (usually, nobody will try to mutate\nthings inside filter).</p>\n"}, {"tags": ["rust", "console-application"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1564726804, "post_id": 57320645, "comment_id": 101132553, "body": "Please don&#39;t do this. I&#39;d be very pissed at a program that would dare clearing my terminal. Have you considered using the <a href=\"https://docs.rs/termion/1.5.3/termion/screen/index.html\" rel=\"nofollow noreferrer\">alternate screen buffers</a> instead?"}, {"owner": {"reputation": 23, "user_id": 11826156, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-9kdhtYwRueQ/AAAAAAAAAAI/AAAAAAAAAAc/PIqPjDiY5PI/photo.jpg?sz=128", "display_name": "Krey Lazory", "link": "https://stackoverflow.com/users/11826156/krey-lazory"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1564727281, "post_id": 57320645, "comment_id": 101132727, "body": "@mcarton Ohh, that&#39;s nice. I&#39;ll try that."}], "owner": {"reputation": 23, "user_id": 11826156, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-9kdhtYwRueQ/AAAAAAAAAAI/AAAAAAAAAAc/PIqPjDiY5PI/photo.jpg?sz=128", "display_name": "Krey Lazory", "link": "https://stackoverflow.com/users/11826156/krey-lazory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 204, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1564725201, "creation_date": 1564725201, "question_id": 57320645, "link": "https://stackoverflow.com/questions/57320645/how-to-reset-the-console-output-clearing-just-shifts-the-output-back", "title": "How to reset the console output? Clearing just shifts the output back", "body": "<p>My console application needs to clear the screen. How do I truly clear the screen, like the reset command in Linux?</p>\n\n<p>I tried using methods I found on Google, like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>print!(\"{}[2J\", 27 as char); // First attempt\nprint!(\"{}\", termion::clear::All); // 'termion' crate, version 1.5.3\n</code></pre>\n\n<p>They all just scroll down, leaving the previous output behind.  I thought of executing the reset command through Rust, but there must be some other way, right?</p>\n"}, {"tags": ["rust", "optional"], "answers": [{"comments": [{"owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 0, "creation_date": 1564699377, "post_id": 57317786, "comment_id": 101127033, "body": "I previously (before the version I give in my question) was using the <code>match</code> keyword as such <a href=\"https://pastebin.com/dk1n48Lb\" rel=\"nofollow noreferrer\">pastebin.com/dk1n48Lb</a> . I suppose this does the same thing but more elegantly? Also could <code>if let</code> be used for a <code>&gt;</code> comparison?"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 1, "creation_date": 1564699587, "post_id": 57317786, "comment_id": 101127078, "body": "@JonathanWoollett-light in The Book there&#39;s a very good explanation of the <code>if let</code>, when to use it over <code>match</code> or when to prefer the latter over the former, <a href=\"https://doc.rust-lang.org/book/ch06-03-if-let.html\" rel=\"nofollow noreferrer\">an entire dedicated chapter</a>"}, {"owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 0, "creation_date": 1564700076, "post_id": 57317786, "comment_id": 101127178, "body": "I edited by above comment not sure if you saw my edit (sorry about that) to ask if <code>if let</code> could be used with a <code>&gt;</code> or similar condition."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 1, "creation_date": 1564701133, "post_id": 57317786, "comment_id": 101127381, "body": "@JonathanWoollett-light well, you could use a pattern like <code>Some(0..=3)</code> or even <code>Some(12..=&lt;T as MaxValue&gt;::MAX)</code> (or use the <code>MIN</code> depending on the type and your comparison <code>&lt;</code> or <code>&gt;</code>).  You could also use a <code>match</code> with an extra <code>if</code> filter as part of its pattern, or even <code>if option.map_or(false, |i| i &gt; 2)</code>.  Look into the reference I linked in my answer."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "edited": false, "score": 0, "creation_date": 1564704645, "post_id": 57317786, "comment_id": 101128028, "body": "@JonathanWoollett-light simpler <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=a0c0a6829c3049d49289b67a09ec16ae\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 7, "last_activity_date": 1564698829, "creation_date": 1564698829, "answer_id": 57317786, "question_id": 57317716, "link": "https://stackoverflow.com/questions/57317716/best-way-to-check-if-option-contains-a-specific-some-value/57317786#57317786", "title": "Best way to check if Option contains a specific Some value?", "body": "<p>Pattern matching is a powerful tool, use it!  Instead of a regular <code>if</code>, use an <code>if let</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if let Some(1) = option {\n    // --snip--\n}\n</code></pre>\n\n<p>For more information about pattern matching, please consult <a href=\"https://doc.rust-lang.org/reference/patterns.html\" rel=\"noreferrer\">The Rust Reference</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1564734566, "creation_date": 1564734566, "answer_id": 57322630, "question_id": 57317716, "link": "https://stackoverflow.com/questions/57317716/best-way-to-check-if-option-contains-a-specific-some-value/57322630#57322630", "title": "Best way to check if Option contains a specific Some value?", "body": "<p>The pattern matching is the right solution, but if you want a <code>bool</code>, you can use the equality operator:</p>\n\n<pre><code>fn main() {\n    let maybe_int = Some(123);\n    let contains_123: bool = maybe_int == Some(123);\n\n    assert!(contains_123);\n}\n</code></pre>\n"}], "owner": {"reputation": 1447, "user_id": 4301453, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/dTvct.png?s=128&g=1", "display_name": "Jonathan Woollett-light", "link": "https://stackoverflow.com/users/4301453/jonathan-woollett-light"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 346, "favorite_count": 0, "accepted_answer_id": 57317786, "answer_count": 2, "score": 1, "last_activity_date": 1593029508, "creation_date": 1564698395, "last_edit_date": 1593029508, "question_id": 57317716, "link": "https://stackoverflow.com/questions/57317716/best-way-to-check-if-option-contains-a-specific-some-value", "title": "Best way to check if Option contains a specific Some value?", "body": "<p>You can't do something such as:</p>\n<pre><code>if option.is_some() &amp;&amp; option == 1 {\n    // ...\n}\n</code></pre>\n<p>Since if <code>option.is_some() == false</code> the 2nd comparison would error.</p>\n<p>What is the best way to do something such as this?</p>\n<p>What I'm doing right now:</p>\n<pre><code>if option.is_some() {\n    if option == 1 {\n        // ...\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1564695964, "post_id": 57317068, "comment_id": 101126197, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e9212045865e02eacbdd6df0e0e7c9a9\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 139, "user_id": 9142706, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d1ebd8fa4e141995af189aab8d5283f?s=128&d=identicon&r=PG", "display_name": "mrFoobles", "link": "https://stackoverflow.com/users/9142706/mrfoobles"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564699524, "post_id": 57317068, "comment_id": 101127066, "body": "That is a much more elegant design, thank you."}, {"owner": {"reputation": 139, "user_id": 9142706, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d1ebd8fa4e141995af189aab8d5283f?s=128&d=identicon&r=PG", "display_name": "mrFoobles", "link": "https://stackoverflow.com/users/9142706/mrfoobles"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564700258, "post_id": 57317068, "comment_id": 101127216, "body": "@Stargateur  I am still confused as to how this doesn&#39;t cause the same lifetime errors that my design produced (that show up if you take away the pointer casting)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1564703007, "post_id": 57317068, "comment_id": 101127727, "body": "all is on the Option, we <code>take</code> it from <code>self</code> so self is free to be mutate because cur is no longer bound to self lifetime. This is an advanced lifetime thing, like always why newbie in rust always want to implement linked list, Rust is not build to make your life easy with linked list. You start by the nightmare mode of Rust here"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1564741848, "post_id": 57317068, "comment_id": 101139457, "body": "@PeterHall Let&#39;s just close as dup; I need to start have a dup list for linked list :p"}, {"owner": {"reputation": 139, "user_id": 9142706, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d1ebd8fa4e141995af189aab8d5283f?s=128&d=identicon&r=PG", "display_name": "mrFoobles", "link": "https://stackoverflow.com/users/9142706/mrfoobles"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1564752209, "post_id": 57317068, "comment_id": 101144649, "body": "@Stargateur Linked list was just an example though. I really appreciate your help with the design, but my question about unbounding references still stands."}], "owner": {"reputation": 139, "user_id": 9142706, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d1ebd8fa4e141995af189aab8d5283f?s=128&d=identicon&r=PG", "display_name": "mrFoobles", "link": "https://stackoverflow.com/users/9142706/mrfoobles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 0, "closed_date": 1564791324, "answer_count": 0, "score": 1, "last_activity_date": 1564752166, "creation_date": 1564694016, "last_edit_date": 1564752166, "question_id": 57317068, "link": "https://stackoverflow.com/questions/57317068/what-is-the-most-idiomatic-way-to-unbound-a-reference-in-rust", "closed_reason": "Duplicate", "title": "What is the most idiomatic way to unbound a reference in Rust?", "body": "<p>I need to return multiple mutable references to different elements of a data structure. Because the compiler can't check my logic that the references don't alias, I have to use unsafe code to unbound my references so that they can be cast to the correct return lifetime. </p>\n\n<p>So far, the best solution I've discovered is, in an <code>unsafe</code> block:</p>\n\n<ul>\n<li>Casting the reference to a raw pointer</li>\n<li>Dereference the pointer and immediately take a mutable reference to the result.</li>\n</ul>\n\n<pre><code>struct Node&lt;T&gt; {\n    item: T,\n    next: NodeRef&lt;T&gt;,\n}\n\n\ntype NodeRef&lt;T&gt; = Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;;\n\npub struct ListIterMut&lt;'a, T&gt; {\n    cur: &amp;'a mut NodeRef&lt;T&gt;\n}\n\nimpl&lt;'a, T&gt; Iterator for ListIterMut&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let cur = unsafe {&amp;mut *(self.cur as *mut NodeRef&lt;T&gt;)}; // Super ugly!\n        cur.as_mut().map(|node| {\n            self.cur = &amp;mut node.next;\n            &amp;mut node.item\n        })\n    }\n}\n</code></pre>\n\n<p>I have been shown more correct ways of solving this issue, where there is no need for <code>unsafe</code> at all, but regardless--in some case where you do have to unbound a reference, is there a more clean way of doing so than the method I described above? Or was it intentionally made clunky to discourage programmers from doing it? </p>\n"}, {"tags": ["generics", "types", "enums", "rust", "polymorphism"], "comments": [{"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "edited": false, "score": 1, "creation_date": 1564742755, "post_id": 57316518, "comment_id": 101139912, "body": "What is the purpose of the generic parameter in <code>MyTrait&lt;T=Self&gt;</code>? Where are you using T in the trait?"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1564745934, "post_id": 57316518, "comment_id": 101141361, "body": "The edit suggests you have a problem in mind, but you are not explaining that, just showing specific, failing, attempt to solve it. Try to describe the higher level problem so we can try to guide you to whatever is preferred solution for that. <code>dyn Trait</code> and <code>enum</code>s have their own advantages and disadvantages and which you should use depends on the wider requirements you have."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1564773536, "post_id": 57316518, "comment_id": 101154524, "body": "Ad edit: but implementation <i>of what?</i> Mixing static (generics) and dynamic (trait objects, enums) polymorphism does not work well. You need to come up with another representation, and nobody can help you if they don&#39;t know representation of what it is supposed to be."}], "answers": [{"tags": [], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "is_accepted": true, "score": 1, "last_activity_date": 1564745605, "creation_date": 1564745605, "answer_id": 57325692, "question_id": 57316518, "link": "https://stackoverflow.com/questions/57316518/vector-of-generic-trait-objects/57325692#57325692", "title": "Vector of generic trait objects", "body": "<p>Generic things\u2014does not matter whether traits, types or functions\u2014are not code that can be addressed, but merely templates for code to be generated when you substitute them. So they are not \u201cobject-safe\u201d, i.e. you can't use them for types of dynamic references and smart pointers. You can only use their specific instances.</p>\n\n<p><code>MyTrait</code> is generic, so you can't have <code>&amp;dyn MyTrait</code> or <code>Box&lt;dyn MyTrait&gt;</code>. You can only have <code>&amp;dyn MyTrait&lt;Impl1&gt;</code> or <code>Box&lt;dyn MyTrait&lt;Impl1&gt;&gt;</code>.</p>\n\n<p>You do have a default value for the parameter, but <code>Self</code> is special, because <code>Self</code> is the type that implements the trait, and as such only makes sense in the <code>impl</code> definition. But not in the free function where you are trying to declare <code>Vec&lt;Box&lt;MyTrait&gt;&gt;</code>. That's why it can't be compiled.</p>\n\n<p>Also due to how special <code>Self</code> is, <code>impl MyTrait for Impl1</code> gets desugared to <code>impl MyTrait&lt;Impl1&gt; for Impl1</code> and <code>impl MyTrait for Impl2</code> gets desugared to <code>impl MyTrait&lt;Impl2&gt; for Impl2</code>. Since <code>MyTrait&lt;Impl1&gt;</code> is a different trait from <code>MyTrait&lt;Impl2&gt;</code>, there is no common trait for <code>Impl1</code> and <code>Impl2</code> that you could use to box them and put them in a common vector.</p>\n\n<p>You need a <em>concrete</em>, that is non-generic, trait for dynamic polymorphism.</p>\n"}], "owner": {"reputation": 678, "user_id": 6094756, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-hQ5QCAvBEoE/AAAAAAAAAAI/AAAAAAAAABE/sAfws5YX9HQ/photo.jpg?sz=128", "display_name": "piegames", "link": "https://stackoverflow.com/users/6094756/piegames"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 57325692, "answer_count": 1, "score": 0, "last_activity_date": 1564765731, "creation_date": 1564691055, "last_edit_date": 1564765731, "question_id": 57316518, "link": "https://stackoverflow.com/questions/57316518/vector-of-generic-trait-objects", "title": "Vector of generic trait objects", "body": "<p><em>(This is my second try to track down my exact problem. See the edit history)</em></p>\n\n<p>I have a simple generic Trait and two different implementations:</p>\n\n<pre><code>pub trait MyTrait&lt;T=Self&gt; where T: MyTrait {\n}\n\nstruct Impl1;\nimpl MyTrait for Impl1 {\n}\n\nstruct Impl2;\nimpl MyTrait for Impl2 {\n}\n</code></pre>\n\n<p>I now want a vector that contains elements of both implementations. As I learned <a href=\"https://stackoverflow.com/a/25819164/6094756\">here</a>, I do:</p>\n\n<pre><code>fn foo() {\n    let mut traits: Vec&lt;Box&lt;MyTrait&gt;&gt; = Vec::new();\n    traits.push(Box::new(Impl1{}));\n    traits.push(Box::new(Impl2{}));\n}\n</code></pre>\n\n<p>But the compiler doesn't agree:</p>\n\n<pre><code>error[E0393]: the type parameter `T` must be explicitly specified\n  --&gt; src/main.rs:25\n   |\n25 |     let mut traits: Vec&lt;Box&lt;MyTrait&gt;&gt; = Vec::new();\n   |                             ^^^^^^^ missing reference to `T`\n   |\n   = note: because of the default `Self` reference, type parameters must be specified on object types\n</code></pre>\n\n<p>On the one hand, that makes sense. On the other hand, what should I put for <code>T</code>? I want this to be generic, so I can't simply put there <code>Impl1</code> or <code>Impl2</code>. I could do <code>Vec&lt;Box&lt;MyTrait&lt;MyTrait&gt;&gt;&gt;</code>, but this will only move the error, not resolve it.</p>\n\n<hr>\n\n<p><strong>Edit</strong></p>\n\n<p>The code above is the minimal failing one, here's a slightly less minimal implementation:</p>\n\n<pre><code>enum MyEnum&lt;T: MyTrait&gt; {\n    A(T),\n    B\n}\n\npub trait MyTrait&lt;T=Self&gt; where T: MyTrait {\n    fn do_stuff(self) -&gt; MyEnum&lt;T&gt;;\n}\n\nstruct Impl1;\nimpl MyTrait for Impl1 {\n    fn do_stuff(self) -&gt; MyEnum&lt;Impl1&gt; {\n        MyEnum::A(self)\n    }\n}\n\nstruct Impl2;\nimpl MyTrait for Impl2 {\n    fn do_stuff(self) -&gt; MyEnum&lt;Impl2&gt; {\n        MyEnum::B\n    }\n}\n</code></pre>\n\n<p>Each <code>MyTrait</code> object consumes itself and can either result in a <code>MyEnum::A</code> containing another <code>MyTrait</code> object or a <code>MyEnum::B</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1564688097, "post_id": 57315616, "comment_id": 101123563, "body": "Why <code>&amp;&quot;price&quot;.to_string()</code> and not just <code>&quot;price&quot;</code> ?"}], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 0, "last_activity_date": 1564688281, "last_edit_date": 1564688281, "creation_date": 1564687923, "answer_id": 57315882, "question_id": 57315616, "link": "https://stackoverflow.com/questions/57315616/how-to-convert-between-equivalent-enum-types/57315882#57315882", "title": "How to convert between equivalent enum types?", "body": "<p>The <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/if_let.html\" rel=\"nofollow noreferrer\"><code>if let</code> pattern</a> helps you replace the whole with</p>\n\n<pre><code>if let Some(Double(p)) = recmap.get(\"price\") {\n    let price = influx_db_client::Value::Float(*p);\n    point.add_field(\"price\", price);\n}\n</code></pre>\n\n<p>Most usually you would also have a few <code>use</code> statement to avoid having <code>influx_db_client::Value::Float</code> in the middle of the code.</p>\n\n<p>Side note: a difference here is that if <code>recmap.get</code> returns <code>None</code>, your code crashes with <code>unwrap()</code> while mine ignores it.</p>\n"}], "owner": {"reputation": 326, "user_id": 5508224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d96850e5453c958c1ed31d93c5ccbbf?s=128&d=identicon&r=PG&f=1", "display_name": "tmx", "link": "https://stackoverflow.com/users/5508224/tmx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1608756609, "creation_date": 1564686597, "last_edit_date": 1608756609, "question_id": 57315616, "link": "https://stackoverflow.com/questions/57315616/how-to-convert-between-equivalent-enum-types", "title": "How to convert between equivalent enum types?", "body": "<p>I have an <code>avro_rs::types::Value::Double(f64)</code> and need an <code>influx_db_client::Value::Float(f64)</code>. I'm converting between the two using the following code:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let pr = recmap.get(&amp;&quot;price&quot;.to_string()).unwrap();\nmatch pr {\n    Double(p) =&gt; {\n        let price = influx_db_client::Value::Float(*p);\n        point.add_field(&quot;price&quot;, price);\n    },\n    _ =&gt; ()\n}\n</code></pre>\n<p>Is there a shorter or more idiomatic way to achieve the same result?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4654, "user_id": 332733, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/BR7yE.jpg?s=128&g=1", "display_name": "Mgetz", "link": "https://stackoverflow.com/users/332733/mgetz"}, "edited": false, "score": 0, "creation_date": 1564684220, "post_id": 57314776, "comment_id": 101121961, "body": "<a href=\"https://github.com/rust-lang/rust/blob/master/src/libstd/macros.rs#L147\" rel=\"nofollow noreferrer\">The sources are usually a good place to start looking</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1564688449, "post_id": 57314776, "comment_id": 101123693, "body": "@Sven I don&#39;t think that&#39;s true. <a href=\"https://doc.rust-lang.org/src/std/macros.rs.html#115-117\" rel=\"nofollow noreferrer\"><code>print!</code></a> calls <a href=\"https://doc.rust-lang.org/src/std/io/stdio.rs.html#801-803\" rel=\"nofollow noreferrer\"><code>io::print_</code></a>, which calls <a href=\"https://doc.rust-lang.org/src/std/io/stdio.rs.html#771-794\" rel=\"nofollow noreferrer\"><code>stdio::print_to&lt;Stdout&gt;</code></a>, which calls <a href=\"https://doc.rust-lang.org/src/std/io/stdio.rs.html#532-534\" rel=\"nofollow noreferrer\"><code>Stdout::write_fmt</code></a>, which defers to <code>StdoutLock::write_fmt</code>, which is provided in <code>Write</code> and calls <code>fmt::write</code>, not <code>fmt::format</code>. If calling <code>print!</code> or <code>write!</code> results in a <code>String</code> allocation I find that surprising."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564690635, "post_id": 57314776, "comment_id": 101124491, "body": "@trentcl You are right -- I misread the code, specifically the call to <code>format_args_nl!()</code>. I&#39;m on my phone, so following macro expansions is a bit awkward."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564712572, "post_id": 57319140, "comment_id": 101129321, "body": "(I&#39;m not sure what I could add to this answer in the way of references... I considered putting links to the implementations of the various functions, as I did in the question comments, but putting that kind of thing in an answer makes me nervous because std will eventually be updated and make it obsolete.)"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1564740335, "post_id": 57319140, "comment_id": 101138718, "body": "You could add links to sources with a specific commit hash on GitHub? And it is maybe worth mentioning that Rust does not guarantee that no heap allocation is happening (AFAIK) but that in the current implementations for main operating systems, no allocation is happening."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1564712463, "creation_date": 1564712463, "answer_id": 57319140, "question_id": 57314776, "link": "https://stackoverflow.com/questions/57314776/does-the-println-macro-allocate-heap-memory/57319140#57319140", "title": "Does the println macro allocate heap memory?", "body": "<p>No, <code>print!</code>, <code>write!</code> and other similar macros that do not return a <code>String</code> do not need to allocate memory; they call <code>format_args!</code> (which is a compiler built-in) to process the arguments and ultimately use <code>std::fmt::write</code> to write data directly to its destination, without preparing a temporary <code>String</code>.</p>\n\n<p>Note that this does not mean these macros are unbuffered; in many cases \"directly to its destination\" means to an intermediate buffer somewhere, not immediately to a file or to stdout. But this buffer may be on the stack and does not need to be reallocated with each call.</p>\n"}], "owner": {"reputation": 63, "user_id": 11798312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d08c5c705a2397bea4ebbcfb2eec3f7c?s=128&d=identicon&r=PG&f=1", "display_name": "Jakub Alba", "link": "https://stackoverflow.com/users/11798312/jakub-alba"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 347, "favorite_count": 0, "accepted_answer_id": 57319140, "answer_count": 1, "score": 4, "last_activity_date": 1564712463, "creation_date": 1564683031, "question_id": 57314776, "link": "https://stackoverflow.com/questions/57314776/does-the-println-macro-allocate-heap-memory", "title": "Does the println macro allocate heap memory?", "body": "<p>Does the <code>println</code> macro allocate heap memory? I.e. What's the difference (in terms of memory allocation) between calling the <code>format</code> macro to create a string to be printed by <code>println</code> and just formatting things in the <code>println</code> macro?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1564673702, "post_id": 57311728, "comment_id": 101117153, "body": "Note that <code>FnBox</code> is a workaround for a limitation of older versions of Rust. In modern Rust, you can just call <code>job()</code> normally (which is, I believe, the only reason turbulencetoo&#39;s answer compiles). The book has not been updated yet."}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564675486, "post_id": 57311728, "comment_id": 101118153, "body": "@trentcl I was actually kind of surprised to see the <code>(self)()</code> bit work after I removed the <code>*self</code> part. Is it correct to say that the code OP is trying to write used to be impossible to express correctly in old versions of Rust (without using nightly FnBox), but is now basically a no-op in newer Rust?"}, {"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1564676655, "post_id": 57311728, "comment_id": 101118691, "body": "The implementation of <code>FnOnce()</code> is currently above my understanding of my language with <code>extern &quot;rust-call&quot;</code> and all. But I am looking to it. But I am surprised at the way <code>self()</code> actually works here. I am assuming it doesnt have anything to do with  deref coercion. An unsized call be invoked in such a way is surprising."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1564679217, "post_id": 57311728, "comment_id": 101119827, "body": "@turbulencetoo Yes, exactly."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564679521, "post_id": 57311728, "comment_id": 101119951, "body": "@raj You are right, deref coercion doesn&#39;t come into it: <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html#implementors\" rel=\"nofollow noreferrer\"><code>Box&lt;dyn FnOnce()&gt;</code> <i>itself</i> implements <code>FnOnce()</code></a> (there&#39;s no [src] link because it&#39;s implemented by a compiler hook, not in the library). Unfortunately this is not the kind of thing you can do with your own type, at least not without <code>feature(unsized_locals)</code> on nightly, but it works fine with <code>Box</code>."}], "answers": [{"comments": [{"owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "edited": false, "score": 0, "creation_date": 1564676860, "post_id": 57312149, "comment_id": 101118775, "body": "yes you are right. Size is implemented silently which i missed. But the fact that <code>self()</code> works is little surprising to me."}], "tags": [], "owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "is_accepted": true, "score": 1, "last_activity_date": 1564672513, "creation_date": 1564672513, "answer_id": 57312149, "question_id": 57311728, "link": "https://stackoverflow.com/questions/57311728/why-is-trait-implemented-on-a-type-with-some-trait-bound-not-accepting-functions/57312149#57312149", "title": "Why is trait implemented on a type with some trait bound not accepting functions implemented on them?", "body": "<p>I think the problem is the implicit <code>Sized</code> bound on <code>F</code> in the <code>impl</code> for your <code>FnBox</code> trait, which makes a <code>Box&lt;dyn T&gt;</code> not covered under that <code>impl</code>.</p>\n\n<p>You say</p>\n\n<blockquote>\n  <p>The trait FnBox has been implemented on all the types with FnOnce() trait.</p>\n</blockquote>\n\n<p>But actually the trait FnBox has been implemented for only all <em>Sized</em> types with FnOnce() trait. <a href=\"https://doc.rust-lang.org/std/marker/trait.Sized.html\" rel=\"nofollow noreferrer\">The docs for Sized</a> have more info about this.</p>\n\n<p>A working example is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait FnBox {\n    fn call_box(self: Box&lt;Self&gt;);\n}\n\nimpl&lt;F: FnOnce() + ?Sized&gt; FnBox for F {\n    fn call_box(self: Box&lt;F&gt;) {\n        (self)()\n    }\n}\ntype Job = Box&lt;dyn FnOnce() + Send + 'static&gt;;\n\nlet job: Job = Box::new(|| println!(\"gwahhh\"));\njob.call_box();\n</code></pre>\n\n<p>Note that I had to remove the <code>(*self)()</code> in favor of <code>(self)()</code> because you cant move an unsized type out of a <code>Box</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=03e09ba30547b438934815768437278e\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 5463, "user_id": 4695064, "user_type": "registered", "accept_rate": 55, "profile_image": "https://lh3.googleusercontent.com/-KpAhKljoGO4/AAAAAAAAAAI/AAAAAAAAAHU/fb44qBeaDww/photo.jpg?sz=128", "display_name": "raj", "link": "https://stackoverflow.com/users/4695064/raj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "closed_date": 1564676221, "accepted_answer_id": 57312149, "answer_count": 1, "score": 2, "last_activity_date": 1564672513, "creation_date": 1564671083, "question_id": 57311728, "link": "https://stackoverflow.com/questions/57311728/why-is-trait-implemented-on-a-type-with-some-trait-bound-not-accepting-functions", "closed_reason": "Duplicate", "title": "Why is trait implemented on a type with some trait bound not accepting functions implemented on them?", "body": "<p>I am working on the setting up a server example from the rust book. I will add the relevant parts here.</p>\n\n<pre><code>trait FnBox {\n    fn call_box(self: Box&lt;Self&gt;);\n}\n\nimpl&lt;F: FnOnce()&gt; FnBox for F {\n    fn call_box(self: Box&lt;F&gt;) {\n        (*self)()\n    }\n}\ntype Job = Box&lt;dyn FnOnce() + Send + 'static&gt;;\n</code></pre>\n\n<p>my implementation which is slightly changed from the book. It is <code>FnBox</code> in book rather than <code>FnOnce()</code>. And I call </p>\n\n<pre><code>job.call_box()\n</code></pre>\n\n<p>Here <code>job</code> is of the type <code>Job</code>. But this throws an error.</p>\n\n<pre><code>   |             job.call_box();\n   |                 ^^^^^^^^\n   |\n   = note: job is a function, perhaps you wish to call it\n   = note: the method `call_box` exists but the following trait bounds were not satisfied:\n           `dyn std::ops::FnOnce() + std::marker::Send : FnBox`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `call_box`, perhaps you need to implement it:\n           candidate #1: `FnBox`\n</code></pre>\n\n<p>The trait <code>FnBox</code> has been implemented on all the types with <code>FnOnce()</code> trait. So I do not understand why it says <code>dyn std::ops::FnOnce() + std::marker::Send : FnBox</code> is not satisfied.</p>\n\n<p>What am I missing here?</p>\n"}, {"tags": ["rust", "npm-install"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1564669010, "post_id": 57310019, "comment_id": 101114417, "body": "<code>node</code> is an executable, <code>npm</code> is either a shell script or a batch file, depending on your OS - this has caused <a href=\"https://github.com/rust-lang/rust/issues/42791\" rel=\"nofollow noreferrer\">issues with <code>Command</code> on Windows</a> before. Does it work if your <code>Command</code> launches <code>npm</code> through a call to <code>bash</code>/<code>cmd</code> instead of directly passing in <code>npm</code> as the command name?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1564679259, "post_id": 57310019, "comment_id": 101119844, "body": "in case it&#39;s not clear do <code>process::Command::new(&quot;bash&quot;)             .arg(&quot;-c&quot;).arg(&quot;npm install puppeteer&quot;)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1408, "user_id": 8869277, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ijyzD.jpg?s=128&g=1", "display_name": "Jared Forth", "link": "https://stackoverflow.com/users/8869277/jared-forth"}, "is_accepted": true, "score": 1, "last_activity_date": 1565097730, "creation_date": 1565097730, "answer_id": 57377088, "question_id": 57310019, "link": "https://stackoverflow.com/questions/57310019/installing-npm-package-with-rust-stdprocesscommand/57377088#57377088", "title": "Installing NPM package with Rust std::process::Command", "body": "<p>I was able to fix the issue by changing the working directory to <code>C:\\Program Files\\nodejs</code> prior to  to running the command with: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let npm = Path::new(\"C:\\Program Files\\nodejs\");\nassert!(env::set_current_dir(&amp;npm).is_ok());\n</code></pre>\n\n<p>After changing the working directory to my Node install path, I was able to successfully run:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code> let npm = process::Command::new(\"npm.cmd\")\n      .arg(\"install\")\n      .arg(\"-g\")\n      .arg(\"puppeteer\")\n      .status()?;\n</code></pre>\n\n<p>I am on Windows, but to make this answer cross platform the following code could be used: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(windows)]\npub const NPM: &amp;'static str = \"npm.cmd\";\n\n#[cfg(not(windows))]\npub const NPM: &amp;'static str = \"npm\";\n\n...\n\n let npm = process::Command::new(NPM)\n      .arg(\"install\")\n      .arg(\"-g\")\n      .arg(\"puppeteer\")\n      .status()?;\n</code></pre>\n"}], "owner": {"reputation": 1408, "user_id": 8869277, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ijyzD.jpg?s=128&g=1", "display_name": "Jared Forth", "link": "https://stackoverflow.com/users/8869277/jared-forth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 57377088, "answer_count": 1, "score": 0, "last_activity_date": 1565097861, "creation_date": 1564665733, "last_edit_date": 1565097861, "question_id": 57310019, "link": "https://stackoverflow.com/questions/57310019/installing-npm-package-with-rust-stdprocesscommand", "title": "Installing NPM package with Rust std::process::Command", "body": "<p>I am trying to programmatically install an NPM package as part of a Rust program. </p>\n\n<p>I am using the <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\"><code>std::process::Command</code></a> struct, and can successfully run Node with: </p>\n\n<pre><code>pub fn check_for_node(&amp;mut self) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    println!(\"Node Version: \");\n    let node = process::Command::new(\"node\")\n        .arg(\"-v\")\n        .status()?;\n\n    self.node_is_installed = node.success();\n    Ok(())\n}\n</code></pre>\n\n<p>The code above returns: </p>\n\n<pre><code>Node Version:\nv10.15.1\n</code></pre>\n\n<p>with no error. </p>\n\n<p>However, when I run: </p>\n\n<pre><code>pub fn install_puppeteer(&amp;mut self) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    if self.node_is_installed {\n        let npm = process::Command::new(\"npm\")\n            .arg(\"install\")\n            .arg(\"puppeteer\")\n            .status()?;\n        self.puppeteer_is_installed = npm.success();\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>I get the error: </p>\n\n<blockquote>\n  <p>thread 'main' panicked at 'called <code>Result::unwrap()</code> on an <code>Err</code> value: Os { code: 2, kind: NotFound, message: \"The system cannot find the file specified.\" }', src\\libcore\\result.rs:999:5</p>\n</blockquote>\n\n<p>If I run <code>npm -v</code> manually, I get <code>6.4.1</code> printed, so I know that NPM is installed. </p>\n\n<p>Is there any reason that <code>std::process::Command</code> would work for Node and not for NPM, and is there any way to fix it?  </p>\n"}, {"tags": ["async-await", "rust", "http2", "rust-tokio", "hyper"], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 11239050, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Qe7Bu_aeqjU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdjsP4rEzTI0W_6j2JcqRQZwnKIjw/mo/photo.jpg?sz=128", "display_name": "DevQps", "link": "https://stackoverflow.com/users/11239050/devqps"}, "is_accepted": false, "score": 1, "last_activity_date": 1564823346, "creation_date": 1564823346, "answer_id": 57336946, "question_id": 57307892, "link": "https://stackoverflow.com/questions/57307892/how-to-do-an-http2-request-with-h2-using-the-new-async-await-syntax-in-rust/57336946#57336946", "title": "How to do an HTTP2 request with H2 using the new async-await syntax in Rust?", "body": "<p>I forgot to spawn the connection on a new thread as well:</p>\n\n<pre><code>tokio::spawn(h2.map_err(|_| panic!(\"connection failed\")));\n</code></pre>\n\n<p>For more information see:</p>\n\n<p><a href=\"https://github.com/hyperium/h2/issues/390\" rel=\"nofollow noreferrer\">https://github.com/hyperium/h2/issues/390</a></p>\n\n<p><a href=\"https://github.com/hyperium/h2/issues/391\" rel=\"nofollow noreferrer\">https://github.com/hyperium/h2/issues/391</a></p>\n"}], "owner": {"reputation": 31, "user_id": 11239050, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Qe7Bu_aeqjU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdjsP4rEzTI0W_6j2JcqRQZwnKIjw/mo/photo.jpg?sz=128", "display_name": "DevQps", "link": "https://stackoverflow.com/users/11239050/devqps"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 596, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1564823346, "creation_date": 1564658477, "last_edit_date": 1564658910, "question_id": 57307892, "link": "https://stackoverflow.com/questions/57307892/how-to-do-an-http2-request-with-h2-using-the-new-async-await-syntax-in-rust", "title": "How to do an HTTP2 request with H2 using the new async-await syntax in Rust?", "body": "<p>The problem I run into is that I tried to convert the <a href=\"https://github.com/hyperium/h2/blob/master/examples/akamai.rs\" rel=\"nofollow noreferrer\">H2 Akamai example</a> into code using Rust's new async-await syntax.</p>\n\n<p>I have been able to produce the following code, but it hangs on <code>let response = response.compat().await;</code> without me able to understand why.</p>\n\n<pre><code>#![feature(async_await)]\n\nuse tokio::net::TcpStream;\nuse std::sync::Arc;\nuse webpki::DNSNameRef;\nuse futures::compat::Future01CompatExt;\nuse futures::future::{FutureExt, TryFutureExt};\nuse h2::client;\nuse rustls::ClientConfig;\nuse tokio_rustls::ClientConfigExt;\n\nuse rustls::Session;\n\nuse std::net::ToSocketAddrs;\nuse hyper::{Method, Request};\n\npub fn setup_config() -&gt; Arc&lt;ClientConfig&gt;\n{\n    std::sync::Arc::new({\n        let mut c = rustls::ClientConfig::new();\n        c.root_store\n            .add_server_trust_anchors(&amp;webpki_roots::TLS_SERVER_ROOTS);\n        c.alpn_protocols.push(\"h2\".to_owned());\n        c\n    })\n}\n\npub async fn worker()\n{\n    // Set the address to run our socket on.\n    let address = \"http2.akamai.com:443\"\n        .to_socket_addrs()\n        .unwrap()\n        .next()\n        .unwrap();\n\n    let config = setup_config();\n\n    let dns_name = DNSNameRef::try_from_ascii_str(\"http2.akamai.com\").unwrap();\n\n    // Open a TCP connection.\n    let tcp = TcpStream::connect(&amp;address).compat().await.unwrap();\n    ;\n\n    let tls = config.connect_async(dns_name, tcp).compat().await.unwrap();\n\n    let (_, session) = tls.get_ref();\n    let negotiated_protocol = session.get_alpn_protocol();\n    assert_eq!(Some(\"h2\"), negotiated_protocol.as_ref().map(|x| &amp;**x));\n\n    let res = client::handshake(tls).compat().await;\n\n    let (client, h2) = res.unwrap();\n\n    println!(\"Test5\");\n    let request = Request::builder()\n        .method(Method::GET)\n        .uri(\"https://http2.akamai.com/\")\n        .body(())\n        .unwrap();\n\n    println!(\"Test6\");\n\n    let (response, x) = client.ready().compat().await.unwrap().send_request(request, true).unwrap();\n    println!(\"Test7\");\n\n    let response = response.compat().await;\n    println!(\"Test8\");\n}\n\nfn main()\n{\n    // Call our `run_server` function, which returns a future.\n    // As with every `async fn`, for `run_server` to do anything,\n    // the returned future needs to be run. Additionally,\n    // we need to convert the returned future from a futures 0.3 future into a\n    // futures 0.1 future.\n    let futures_03_future = worker();\n    let futures_01_future = futures_03_future.unit_error().boxed().compat();\n\n    // Finally, we can run the future to completion using the `run` function\n    // provided by Hyper.\n    tokio::run(futures_01_future);\n}\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[dependencies]\n# The latest version of the \"futures\" library, which has lots of utilities\n# for writing async code. Enable the \"compat\" feature to include the\n# functions for using futures 0.3 and async/await with the Hyper library,\n# which use futures 0.1.\nfutures-preview = { version = \"=0.3.0-alpha.16\", features = [\"compat\"] }\n\n# Hyper is an asynchronous HTTP library. We'll use it to power our HTTP\n# server and to make HTTP requests.\nhyper = \"0.12.9\"\n\n# Tokio\ntokio = \"0.1.22\"\nh2 = \"0.1.26\"\n\n# RustTLS\nrustls = \"0.12\"\ntokio-rustls = \"0.5.0\"\nwebpki = \"0.18\"\nwebpki-roots = \"0.14\"\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Test5\nTest6\nTest7\n</code></pre>\n\n<p>I hope you're able to help me on why it hangs during this request.</p>\n\n<p>EDIT: I checked Wireshark as well, and the HTTP2 connection has been opened, but the request inside the connection is not being sent. But I still don't understand why.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 57, "user_id": 6250700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a42d4fbfa8b5a0f69242c6b56010151?s=128&d=identicon&r=PG&f=1", "display_name": "Night Str", "link": "https://stackoverflow.com/users/6250700/night-str"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1564659196, "post_id": 57307747, "comment_id": 101108554, "body": "Hm, no i don&#39;t think so. It is seems like a other problem not a like i mine. Maybe i mistake, i don&#39;t sure exactly."}], "answers": [{"tags": [], "owner": {"reputation": 57, "user_id": 6250700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a42d4fbfa8b5a0f69242c6b56010151?s=128&d=identicon&r=PG&f=1", "display_name": "Night Str", "link": "https://stackoverflow.com/users/6250700/night-str"}, "is_accepted": false, "score": 0, "last_activity_date": 1564659317, "last_edit_date": 1564659317, "creation_date": 1564658388, "answer_id": 57307878, "question_id": 57307747, "link": "https://stackoverflow.com/questions/57307747/why-do-i-get-a-borrow-error-when-returning-result-of-a-child-structures-method/57307878#57307878", "title": "Why do I get a borrow error when returning result of a child structure&#39;s method?", "body": "<p>I found a solution: you need use <code>Some(ref child)</code> instead of <code>Some(child)</code> because the <code>Some(child)</code> takes the borrow of a child.</p>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 3, "last_activity_date": 1564659630, "creation_date": 1564659630, "answer_id": 57308228, "question_id": 57307747, "link": "https://stackoverflow.com/questions/57307747/why-do-i-get-a-borrow-error-when-returning-result-of-a-child-structures-method/57308228#57308228", "title": "Why do I get a borrow error when returning result of a child structure&#39;s method?", "body": "<p>Several things:</p>\n\n<ul>\n<li>If you want to return a \"static <code>str</code>\" as you said, change <code>&amp;str</code> to <code>&amp;'static str</code>. Otherwise the compiler assumes that the <code>str</code> is borrowed from <code>self</code>. This is due to \"lifetime elision\"; see <a href=\"https://stackoverflow.com/questions/40325690/what-is-lifetime-elision-in-very-simple-terms\">this Q&amp;A</a> for example.</li>\n<li><code>match self.child { Some(child) =&gt; /* ... */ }</code> tries to move the <code>self.child</code> field which is not possible because <code>self</code> itself is borrowed. The idiomatic/modern way of dealing with this is simply saying <code>match &amp;self.child</code> (notice the <code>&amp;</code>). The <code>Some(ref child)</code> way is the old way of dealing with this.</li>\n<li>The <code>return</code> in <code>get_child_value</code> is not needed: the <code>match</code> expression is the last expression in the function and automatically returns.</li>\n</ul>\n"}], "owner": {"reputation": 57, "user_id": 6250700, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5a42d4fbfa8b5a0f69242c6b56010151?s=128&d=identicon&r=PG&f=1", "display_name": "Night Str", "link": "https://stackoverflow.com/users/6250700/night-str"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "closed_date": 1564659763, "accepted_answer_id": 57308228, "answer_count": 2, "score": 1, "last_activity_date": 1564659630, "creation_date": 1564657992, "last_edit_date": 1564659269, "question_id": 57307747, "link": "https://stackoverflow.com/questions/57307747/why-do-i-get-a-borrow-error-when-returning-result-of-a-child-structures-method", "closed_reason": "Duplicate", "title": "Why do I get a borrow error when returning result of a child structure&#39;s method?", "body": "<p>I have structure that contains another structure and which calls a method of said child structure. But when I call this method, I receive a borrow error.</p>\n\n<p>If I change the return type from <code>&amp;str</code> to <code>String</code> it's working fine, but I want return a static <code>str</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d55790840097869f819f99ff0b6c7196\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Child {\n    v: Option&lt;i32&gt;,\n}\n\nimpl Child {\n    fn get_value(&amp;self) -&gt; Result&lt;i32, &amp;str&gt; {\n        match self.v {\n            Some(v) =&gt; Ok(v),\n            None =&gt; Err(\"Values is undefined\")\n        }\n    }\n}\n\nstruct Parent {\n    child: Option&lt;Child&gt;,\n}\n\nimpl Parent {\n    fn get_child_value(&amp;self) -&gt; Result&lt;i32, &amp;str&gt; {\n        return match self.child {\n            Some(child) =&gt; child.get_value(),\n            None =&gt; Err(\"Child is undefined\")\n        }\n    }\n}\n\nfn main() {\n    let ch = Child{v: Some(2)};\n    let parent = Parent{child: Some(ch)};\n    parent.get_child_value();\n}\n</code></pre>\n\n<p>Error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:20:22\n   |\n20 |         return match self.child {\n   |                      ^^^^^^^^^^\n   |                      |\n   |                      cannot move out of borrowed content\n   |                      help: consider borrowing here: `&amp;self.child`\n21 |             Some(child) =&gt; child.get_value(),\n   |                  ----- data moved here\n   |\nnote: move occurs because `child` has type `Child`, which does not implement the `Copy` trait\n  --&gt; src/main.rs:21:18\n   |\n21 |             Some(child) =&gt; child.get_value(),\n   |                  ^^^^^\n\nerror[E0515]: cannot return value referencing local variable `child`\n  --&gt; src/main.rs:21:28\n   |\n21 |             Some(child) =&gt; child.get_value(),\n   |                            -----^^^^^^^^^^^^\n   |                            |\n   |                            returns a value referencing data owned by the current function\n   |                            `child` is borrowed here\n</code></pre>\n"}, {"tags": ["struct", "rust", "hashset", "borrowing"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1564654271, "post_id": 57306568, "comment_id": 101105842, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/32401857/how-can-i-keep-a-reference-to-a-key-after-it-has-been-inserted-into-a-hashmap\">How can I keep a reference to a key after it has been inserted into a HashMap?</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1564654481, "post_id": 57306568, "comment_id": 101105940, "body": "TL;DR: you cannot as is, you must use a <code>Rc</code>."}], "answers": [{"tags": [], "owner": {"reputation": 125, "user_id": 5163269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba934bc9b125cefa0539d1ee6e3398f8?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas Hurst", "link": "https://stackoverflow.com/users/5163269/thomas-hurst"}, "is_accepted": true, "score": 1, "last_activity_date": 1564678414, "creation_date": 1564678414, "answer_id": 57313694, "question_id": 57306568, "link": "https://stackoverflow.com/questions/57306568/borrowing-problem-when-inserting-struct-in-hashset/57313694#57313694", "title": "Borrowing problem when inserting struct in HashSet", "body": "<p>On nightly you can enable <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html#method.get_or_insert\" rel=\"nofollow noreferrer\"><code>hash_set_entry</code></a> and do:</p>\n\n<pre><code>let s1 = set.get_or_insert(s1);\n</code></pre>\n\n<p>Which will return a <code>&amp;MyStruct</code> referencing the now-moved value.</p>\n\n<p>Otherwise, as mentioned, you can use an <code>Rc</code>, with the refcounting overhead that entails:</p>\n\n<pre><code>use std::rc::Rc;\n\nlet s1 = Rc::new(MyStruct{ s: \"aaa\".to_string(), n: 50 });\nlet mut set: HashSet&lt;Rc&lt;MyStruct&gt;&gt; = HashSet::new();\nset.insert(s1.clone());\n// s1 still works\n</code></pre>\n\n<p>Or you could make a <code>HashSet&lt;&amp;MyStruct&gt;</code> and insert <code>&amp;s1</code> instead - of course you'd need to keep <code>s1</code> alive for the duration of the <code>HashSet</code>.</p>\n"}], "owner": {"reputation": 165, "user_id": 853682, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/abd14eba46548063eb58d2b5f64c1563?s=128&d=identicon&r=PG", "display_name": "dacanalr", "link": "https://stackoverflow.com/users/853682/dacanalr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 242, "favorite_count": 0, "accepted_answer_id": 57313694, "answer_count": 1, "score": 1, "last_activity_date": 1564678414, "creation_date": 1564653877, "question_id": 57306568, "link": "https://stackoverflow.com/questions/57306568/borrowing-problem-when-inserting-struct-in-hashset", "title": "Borrowing problem when inserting struct in HashSet", "body": "<p>The code is pretty simple: insert a struct in a HashSet and then try use it. I understand the error I get (value borrowed after move) but I can't get a solution.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashSet;\n\n#[derive(PartialEq, Hash)]\nstruct MyStruct {\n   s: String,\n   n: i32\n}\n\nimpl Eq for MyStruct {}\n\nimpl MyStruct {\n   fn to_string(&amp;self) -&gt; String {\n      format!(\"[s: {}, n: {}]\", self.s, self.n)\n   } \n}\n\nfn main() {\n   let s1 = MyStruct{ s: \"aaa\".to_string(), n: 50 };\n   let s2 = MyStruct{ s: \"bbb\".to_string(), n: 100 };\n\n   println!(\"s1 = {}\", s1.to_string());\n\n   let mut set: HashSet&lt;MyStruct&gt; = HashSet::new();\n   set.insert(s1);\n\n   // Here I get the error \"Value borrowed after move\"...\n   // How can I use s1 or call its method to_string ?\n   println!(\"s1 = {}\", s1.to_string());\n}\n</code></pre>\n\n<p>The compiler outputs:</p>\n\n<pre><code>  --&gt; src\\main.rs:28:24\n   |\n18 |    let s1 = MyStruct{ s: \"aaa\".to_string(), n: 50 };\n   |        -- move occurs because `s1` has type `MyStruct`, which does not implement the `Copy` trait\n...\n24 |    set.insert(s1);\n   |               -- value moved here\n...\n28 |    println!(\"s1 = {}\", s1.to_string());\n   |                        ^^ value borrowed here after move\n</code></pre>\n\n<p>Can you suggest how to store structs in HashSet and continue to use them after the insert?</p>\n\n<p>Thank you</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "answers": [{"tags": [], "owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "is_accepted": true, "score": 0, "last_activity_date": 1569820626, "creation_date": 1569820626, "answer_id": 58161855, "question_id": 57305617, "link": "https://stackoverflow.com/questions/57305617/alternative-to-return-optionboxboxjsvalue-from-rust-fn-to-wasm/58161855#58161855", "title": "Alternative to return Option&lt;Box&lt;[Box&lt;[JsValue]&gt;]&gt;&gt; from Rust fn to Wasm", "body": "<p>For those who are looking for an answer, I managed to return <code>Option&lt;js_sys::Array&gt;</code> to solve this. I know it is not exactly the same what I was looking for but it works for me.</p>\n"}], "owner": {"reputation": 1508, "user_id": 1304519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8850b692b1c4e1d6439f002846a2df8?s=128&d=identicon&r=PG", "display_name": "Kajal Sinha", "link": "https://stackoverflow.com/users/1304519/kajal-sinha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 58161855, "answer_count": 1, "score": 1, "last_activity_date": 1569820626, "creation_date": 1564650910, "question_id": 57305617, "link": "https://stackoverflow.com/questions/57305617/alternative-to-return-optionboxboxjsvalue-from-rust-fn-to-wasm", "title": "Alternative to return Option&lt;Box&lt;[Box&lt;[JsValue]&gt;]&gt;&gt; from Rust fn to Wasm", "body": "<p>I am trying to return <code>std::boxed::Box&lt;[std::boxed::Box&lt;[wasm_bindgen::JsValue]&gt;]&gt;</code>\nin my Rust code to Wasm but getting this error.</p>\n\n<p>I understand the trait is not implemented, but is there a workaround to it?</p>\n\n<h2>Raw Error</h2>\n\n<p>#[wasm_bindgen]</p>\n\n<p>| ^^^^^^^^^^^^^^^ the trait <code>wasm_bindgen::convert::traits::OptionIntoWasmAbi</code> is not implemented for <code>std::boxed::Box&lt;[std::boxed::Box&lt;[wasm_bindgen::JsValue]&gt;]&gt;</code></p>\n"}, {"tags": ["rust", "quote", "rust-proc-macros", "syn"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1564646464, "post_id": 57304048, "comment_id": 101101603, "body": "This has <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7638ef7b828950991b75da7c11d1db7e\" rel=\"nofollow noreferrer\">nothing to do with macros</a>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1564646578, "post_id": 57304048, "comment_id": 101101669, "body": "You can make your trait work by <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=024fa70253de0de29bf83675141cc525\" rel=\"nofollow noreferrer\">adding a <code>: Sized</code> bound on its declaration</a>."}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1564647917, "post_id": 57304048, "comment_id": 101102411, "body": "@mcarton Yeah, you are right."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1564658497, "post_id": 57304048, "comment_id": 101108147, "body": "@hxpax in this situation, will you close the question or self answer it or waiting for someone to write answer to approve?"}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1564658806, "post_id": 57304048, "comment_id": 101108319, "body": "@Websterix Tried to close, but could not find out a proper reason item. Will anwser it myself if mcarton do not."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1564670540, "post_id": 57304048, "comment_id": 101115359, "body": "This strikes me as a &quot;can not be reproduced&quot; kind of question because, although not a typo, it&#39;s based on a mistaken premise (that the error has something to do with macros) and was resolved in a way unlikely to help future readers. It could probably be marked instead as a dupe of some other question, possibly <a href=\"https://stackoverflow.com/q/54465400/3650362\">this one</a>."}, {"owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "edited": false, "score": 0, "creation_date": 1564729093, "post_id": 57304048, "comment_id": 101133500, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/54465400/why-does-returning-self-in-trait-work-but-returning-optionself-requires\">Why does returning `Self` in trait work, but returning `Option&lt;Self&gt;` requires `Sized`?</a>"}], "owner": {"reputation": 845, "user_id": 4077574, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/orn50.png?s=128&g=1", "display_name": "Galaxy", "link": "https://stackoverflow.com/users/4077574/galaxy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 133, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1564658655, "creation_date": 1564645220, "last_edit_date": 1564658655, "question_id": 57304048, "link": "https://stackoverflow.com/questions/57304048/how-to-handle-self-in-rust-procedual-macros", "title": "How to handle `Self` in Rust procedual macros?", "body": "<p>I'm trying to create a derive macro in Rust to create instances, as an example, which should implement following trait:</p>\n\n<pre><code>pub trait MyTrait {\n    fn my_default() -&gt; Option&lt;Self&gt;;\n}\n</code></pre>\n\n<p>I use <code>syn</code> and <code>quote</code> to parse and generate the AST, as following:</p>\n\n<pre><code>#[proc_macro_derive(MyTrait)]\npub fn my_default_derive(input: TokenStream) -&gt; TokenStream {\n    // Use `syn` to parse\n    // ...\n\n    let gen = quote! {\n        impl #impl_generics_strait::MyTrait for #name #ty_generics #where_clause {\n            fn my_default() -&gt; Option&lt;Self&gt;{\n                // ...\n            }\n        }\n    };\n\n    gen.into()\n}\n</code></pre>\n\n<p>As the compiler doest not know what <code>Self</code> is at compile time, foregoing will cause error:</p>\n\n<pre><code>the size for values of type `Self` cannot be known at compilation time\n</code></pre>\n\n<p>My questions are:</p>\n\n<ul>\n<li>Is it possible to use Self in <code>proc_macro_derive</code>?</li>\n<li>How?</li>\n</ul>\n\n<p>BTW, I'm trying to use ident instead, and will post progress here later.</p>\n\n<p><strong>Update</strong>:</p>\n\n<ul>\n<li>It turns out, the error is caused by the trait declaration, not the <code>proc_macro_derive</code>. To fix, <code>Sized</code> should be added to the trait name.</li>\n</ul>\n"}]