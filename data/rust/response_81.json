[{"tags": ["mongodb", "rust", "gridfs"], "answers": [{"comments": [{"owner": {"reputation": 131, "user_id": 4948836, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mSQYM.jpg?s=128&g=1", "display_name": "kuttifunk", "link": "https://stackoverflow.com/users/4948836/kuttifunk"}, "edited": false, "score": 0, "creation_date": 1469727925, "post_id": 38637448, "comment_id": 64669796, "body": "interrupted... Thank you really much for taking the time and help me getting on with everything. Like: editing stack overflow questions: i&#39;m a totally noob here, quite monadic error handling with try!: i&#39;m still learning and most importantly my asked problem: i thought when i use file.close() then afterwords i am not allowed to access file.doc.id which is not true. Read the source over and over. Thanks again, good work!! I really appreciate that!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1469711535, "creation_date": 1469711535, "answer_id": 38637448, "question_id": 38616053, "link": "https://stackoverflow.com/questions/38616053/how-to-get-id-from-file-added-to-gridfs-with-the-rust-mongodb-driver/38637448#38637448", "title": "How to get ID from file added to GridFS with the Rust MongoDB driver?", "body": "<p>I don't have MongoDB running and I don't really know anything about it, but this at least has the right signature and compiles.</p>\n\n<pre><code>extern crate bson;\nextern crate mongodb;\n\nuse mongodb::gridfs::{Store,ThreadedStore};\nuse mongodb::error::Result as MongoResult;\nuse std::{fs, io};\n\nfn my_put(store: &amp;Store, name: String) -&gt; MongoResult&lt;bson::oid::ObjectId&gt; {\n    let mut f = try!(fs::File::open(&amp;name));\n    let mut file = try!(store.create(name));\n    try!(io::copy(&amp;mut f, &amp;mut file));\n    try!(file.close());\n    Ok(file.doc.id.clone())\n}\n</code></pre>\n\n<p>Recall that most Rust libraries are open-source and you can even browse the source directly from the documentation. This function is basically just a hacked version of the existing <code>put</code>.</p>\n"}], "owner": {"reputation": 131, "user_id": 4948836, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mSQYM.jpg?s=128&g=1", "display_name": "kuttifunk", "link": "https://stackoverflow.com/users/4948836/kuttifunk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "accepted_answer_id": 38637448, "answer_count": 1, "score": 0, "last_activity_date": 1469711535, "creation_date": 1469630161, "last_edit_date": 1469633631, "question_id": 38616053, "link": "https://stackoverflow.com/questions/38616053/how-to-get-id-from-file-added-to-gridfs-with-the-rust-mongodb-driver", "title": "How to get ID from file added to GridFS with the Rust MongoDB driver?", "body": "<p>The <a href=\"https://crates.io/crates/mongodb\" rel=\"nofollow\">mongodb 0.1.4 bindings for Rust</a> provide a GridFS implementation.\nAs from the code and the examples there is a <code>put</code>, but it doesn't return an object ID.</p>\n\n<p>My workaround is to put the file into GridFS and then open it again to retrieve the ID:</p>\n\n<pre><code>fn file_to_mongo(gridfs: &amp;Store, fpath: &amp;PathBuf) -&gt; bson::oid::ObjectId {\n    gridfs.put(fpath.to_str().unwrap().to_owned());\n    let mut file = gridfs.open(fpath.to_str().unwrap().to_owned()).unwrap();\n    let id = file.doc.id.clone();\n    file.close().unwrap();\n    id\n}\n</code></pre>\n\n<p>Is there a better way?</p>\n"}, {"tags": ["macros", "rust", "glium"], "comments": [{"owner": {"reputation": 7671, "user_id": 515279, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/c5ea3b30be6f62c5a96ccb58320e7f1f?s=128&d=identicon&r=PG", "display_name": "jz87", "link": "https://stackoverflow.com/users/515279/jz87"}, "edited": false, "score": 0, "creation_date": 1472250302, "post_id": 38612392, "comment_id": 65693038, "body": "I&#39;m having trouble with the same problem, also with glium, but trying to apply the solution below doesn&#39;t work. I keep getting the macro undefined error. My directory structure is [main.rs, lib.rs, tutorial: [ mod.rs, draw_triangle.rs ]] where the implement_vertex! is being used in draw_triangle.rs"}], "answers": [{"comments": [{"owner": {"reputation": 153, "user_id": 6644576, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3oGGkFkFz3M/AAAAAAAAAAI/AAAAAAAABLo/nsh_QGAB8JI/photo.jpg?sz=128", "display_name": "Adityo Pratomo", "link": "https://stackoverflow.com/users/6644576/adityo-pratomo"}, "edited": false, "score": 0, "creation_date": 1469623764, "post_id": 38613199, "comment_id": 64613069, "body": "but then I got errors like this <code>failed to resolve. Use of undeclared type or module </code>glium::glutin::WindowBuilder`   is that namespace related? I&#39;ve also added <code>use glium::*;</code> but still doesn&#39;t work"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1469623824, "post_id": 38613199, "comment_id": 64613117, "body": "Sounds like a brittle macro.  Try adding <code>use glium;</code> to the top of <code>part01drawtriangle.rs</code>."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1469623909, "post_id": 38613199, "comment_id": 64613176, "body": "You might want to open an issue with the crate; the solution is to use <code>$crate::</code> instead of <code>glium::</code> in the macro definition."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 18, "last_activity_date": 1469623040, "creation_date": 1469623040, "answer_id": 38613199, "question_id": 38612392, "link": "https://stackoverflow.com/questions/38612392/how-to-import-macros-in-rust/38613199#38613199", "title": "How to import macros in Rust?", "body": "<p><code>#[macro_use]</code>, not <code>#![macro_use]</code>.</p>\n\n<p><code>#[..]</code> applies an attribute to the thing after it (in this case, the <code>extern crate</code>).  <code>#![..]</code> applies an attribute to the <em>containing</em> thing (in this case, the root module).</p>\n"}, {"tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": false, "score": 5, "last_activity_date": 1591636484, "last_edit_date": 1591636484, "creation_date": 1591636310, "answer_id": 62267586, "question_id": 38612392, "link": "https://stackoverflow.com/questions/38612392/how-to-import-macros-in-rust/62267586#62267586", "title": "How to import macros in Rust?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/macros/macro-changes.html\" rel=\"noreferrer\">the Rust Edition Guide</a>:</p>\n\n<blockquote>\n  <p>In Rust 2018, you can import specific macros <strong>from external crates</strong> via <code>use</code> statements, rather than the old <code>#[macro_use]</code> attribute.</p>\n</blockquote>\n\n<pre><code>// in a `bar` crate's lib.rs:\n#[macro_export]\nmacro_rules! baz {\n    () =&gt; ()\n}\n\n// in your crate:\nuse bar::baz;\n\n// Rather than:\n//\n// #[macro_use]\n// extern crate bar;\n</code></pre>\n\n<blockquote>\n  <p>This only works for macros defined in external crates. For macros defined locally, <code>#[macro_use] mod foo;</code> is still required, as it was in Rust 2015.</p>\n</blockquote>\n"}], "owner": {"reputation": 153, "user_id": 6644576, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-3oGGkFkFz3M/AAAAAAAAAAI/AAAAAAAABLo/nsh_QGAB8JI/photo.jpg?sz=128", "display_name": "Adityo Pratomo", "link": "https://stackoverflow.com/users/6644576/adityo-pratomo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8893, "favorite_count": 1, "accepted_answer_id": 38613199, "answer_count": 2, "score": 12, "last_activity_date": 1591636484, "creation_date": 1469620934, "last_edit_date": 1469801823, "question_id": 38612392, "link": "https://stackoverflow.com/questions/38612392/how-to-import-macros-in-rust", "title": "How to import macros in Rust?", "body": "<p>I'm struggling with how to import macros from an external crate. In my main.rs I'm importing the Glium crate:</p>\n\n<pre><code>#![macro_use]\nextern crate glium;\n\npub use glium::*;\n\n// where my actual main function will be done from\nmod part01drawtriangle;\n\nfn main() {\n    part01drawtriangle::main();\n}\n</code></pre>\n\n<p>In my other file, where my main function is coming from, I call one of the macros from that crate:</p>\n\n<pre><code>pub fn main() {\n    implement_vertex!(Vertex, position);\n}\n</code></pre>\n\n<p>When building, I get the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: macro undefined: 'implement_vertex!'\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "is_accepted": false, "score": 0, "last_activity_date": 1469615624, "last_edit_date": 1469615624, "creation_date": 1469607217, "answer_id": 38607404, "question_id": 38606608, "link": "https://stackoverflow.com/questions/38606608/unable-to-find-unsafe-trait-implementation/38607404#38607404", "title": "Unable to find unsafe trait implementation", "body": "<p>The problem was that there seemed to be a mismatched version that cargo uses from crates.io. Pointing every dependency to <code>.git</code> works.</p>\n\n<pre><code>[package]\nname = \"examples\"\nversion = \"0.1.0\"\nbuild = \"build.rs\"\n\n[dependencies]\nvulkano = { git = \"https://github.com/tomaka/vulkano\" }\nvulkano-win = { git = \"https://github.com/tomaka/vulkano\" }\ncgmath = \"0.7.0\"\nimage = \"0.6.1\"\nwinit = \"0.5.1\"\n\n[build-dependencies]\nvk-sys = { git = \"https://github.com/tomaka/vulkano\" }\nvulkano-shaders = { git = \"https://github.com/tomaka/vulkano\" }\n</code></pre>\n"}], "owner": {"reputation": 13772, "user_id": 944430, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/4d2b181af01c96927ac05eb864d6b7b6?s=128&d=identicon&r=PG", "display_name": "Maik Klein", "link": "https://stackoverflow.com/users/944430/maik-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1469623524, "creation_date": 1469604813, "last_edit_date": 1469623524, "question_id": 38606608, "link": "https://stackoverflow.com/questions/38606608/unable-to-find-unsafe-trait-implementation", "title": "Unable to find unsafe trait implementation", "body": "<p>I wanted to use <a href=\"https://github.com/tomaka/vulkano\" rel=\"nofollow\">vulkano</a> which has all the examples in <a href=\"https://github.com/tomaka/vulkano/tree/master/examples\" rel=\"nofollow\">a new crate</a>. I copied the folder <code>examples</code> out and changed the Cargo.toml to</p>\n\n<pre><code>[package]\nname = \"examples\"\nversion = \"0.1.0\"\nbuild = \"build.rs\"\n\n[dependencies]\nvulkano = \"0.1.0\"\nvulkano-win = \"0.1.0\"\ncgmath = \"0.7.0\"\nimage = \"0.6.1\"\nwinit = \"0.5.1\"\n\n[build-dependencies]\nvk-sys = \"0.1.1\"\nvulkano-shaders = \"0.1.0\"\n</code></pre>\n\n<p>When I try to build I get:</p>\n\n<pre><code>error: the trait bound `(f32, f32, f32): vulkano::pipeline::vertex::VertexMember` is not satisfied [E0277]\n) { T :: format (  ) } let dummy = 0usize as * const $ out ; f (\n                                                             ^\nnote: in this expansion of impl_vertex! (defined in &lt;vulkano macros&gt;)\nhelp: run `rustc --explain E0277` to see a detailed explanation\nnote: required by `&lt;Vertex as vulkano::pipeline::vertex::Vertex&gt;::member::f`\n</code></pre>\n\n<p>The error is located <a href=\"https://github.com/tomaka/vulkano/blob/451fb9c70f64505deddb2fa6ee28c42b68ade56b/examples/src/lib.rs#L18\" rel=\"nofollow\">here</a> and the trait is <a href=\"https://github.com/tomaka/vulkano/blob/451fb9c70f64505deddb2fa6ee28c42b68ade56b/vulkano/src/pipeline/vertex.rs#L570-L578\" rel=\"nofollow\">implemented here</a>. </p>\n\n<p>Why do I get this error? Why does Rust tell me that the trait <code>VertexMember</code> is not satisfied?</p>\n"}, {"tags": ["iterator", "rust", "ownership"], "comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 1, "creation_date": 1469524516, "post_id": 38585599, "comment_id": 64559703, "body": "I think you need <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.IntoIter.html\" rel=\"nofollow noreferrer\"><code>std::vec::IntoIter</code></a>: <a href=\"https://play.rust-lang.org/?gist=0e6c171c08fc7a314c44ac98f3dd398e&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> But then you could also use <code>IntoIter</code> directly instead."}, {"owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1469525039, "post_id": 38585599, "comment_id": 64560085, "body": "While that would compile, <code>IntoIter</code> moves the values. The receiving end of the <code>Iterator</code> expects references to the values. I&#39;ll update my question accordingly"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 3, "creation_date": 1469530353, "post_id": 38585599, "comment_id": 64563856, "body": "I fear you&#39;ve somehow run into the <a href=\"http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY Problem</a>... Why do you need references to the values, if you don&#39;t need the values afterwards? The entire point of borrowing is so you keep ownership, but apparently you don&#39;t want to keep the ownership."}, {"owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "edited": false, "score": 0, "creation_date": 1469537130, "post_id": 38585599, "comment_id": 64568694, "body": "Thought about that. Problem is: Retriever can be implemented in many different ways. In Memory Storage, Distributed Network Storage or as in my question: File Storage. To be able to conveniently do this, it would be prefferable for the trait to define that iterators over references are returned (especially for the in-memory storage). Also I need to be able to <code>peek</code>.  Is there no cache implemented in rust that droppes data as soon as it is not used anymore? It does not feel like an unsolvable problem."}, {"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 1, "creation_date": 1469537747, "post_id": 38585599, "comment_id": 64569179, "body": "References require strictly less ownership than... well, owning something. So if you have ownership, you can hand out references. You could e.g. write a wrapper around the <code>IntoIter</code> that hands out references to the callback, and provide the same interface for the in-memory storage."}, {"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 1, "creation_date": 1469537929, "post_id": 38585599, "comment_id": 64569340, "body": "A &quot; cache [...] that droppes data as soon as it is not used anymore&quot; would be a garbage collected heap. That&#39;s indeed not an unsolvable problem, but in this context the <code>IntoIter</code> solution looks like a better fit. <code>Rc</code> could work too, but doesn&#39;t seem necessary."}, {"owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "reply_to_user": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1469966375, "post_id": 38585599, "comment_id": 64746634, "body": "@Thierry Sorry for the late reply. Could you please elaborate on your idea. References to what callback? How would the Interface look like?"}, {"owner": {"reputation": 889, "user_id": 1879192, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54f9ed64051a86b03fe99f82805ac6d5?s=128&d=identicon&r=PG", "display_name": "Thierry", "link": "https://stackoverflow.com/users/1879192/thierry"}, "edited": false, "score": 0, "creation_date": 1470148316, "post_id": 38585599, "comment_id": 64822659, "body": "@JDemler: Your current solution is much cleaner than what I was proposing. My approaches required either a <code>Vec&lt;Rc&lt;T&gt;&gt;</code> instead of your <code>Rc&lt;Vec&lt;T&gt;&gt;</code>, or providing an API that doesn&#39;t look like <code>IntoIter</code>&#39;s at all."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1469575473, "last_edit_date": 1495540846, "creation_date": 1469575473, "answer_id": 38601419, "question_id": 38585599, "link": "https://stackoverflow.com/questions/38585599/iterate-over-collection-drop-it-as-soon-as-iterator-is-dropped/38601419#38601419", "title": "Iterate over collection. Drop it as soon as Iterator is dropped", "body": "<blockquote>\n  <p>The Iterator owns the collection. [or joint ownership via reference-counting]</p>\n\n<pre><code>ContainerIterator { \n    data: data,\n    iter: data.iter(),\n}\n</code></pre>\n</blockquote>\n\n<p>No, you <a href=\"https://stackoverflow.com/q/32300132/155423\">cannot have a value and a reference to that value in the same struct</a>.</p>\n\n<blockquote>\n  <p>Letting the retriever own the collection and handing out a reference to it.</p>\n</blockquote>\n\n<p>No, you <a href=\"https://stackoverflow.com/q/25702909/155423\">cannot return references to items owned by the iterator</a>.</p>\n\n<p>As commenters have said, use <code>IntoIter</code> to transfer ownership of the items to the iterator and then hand them out as the iterated values:</p>\n\n<pre><code>use std::vec::IntoIter;\n\nstruct ContainerIterator {\n    iter: IntoIter&lt;usize&gt;,\n}\n\nimpl Iterator for ContainerIterator {\n    type Item = usize;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.iter.next()\n    }\n}\n\nfn main() {\n    let data = vec![0, 1, 2, 3];\n    let cont = ContainerIterator { iter: data.into_iter() };\n\n    for x in cont {\n        println!(\"Hi {}\", x)\n    }\n}\n</code></pre>\n\n<p>If you <em>must</em> return references... then you need to keep the thing that owns them around for the entire time that all the references might be around.</p>\n\n<blockquote>\n  <p>How can I drop the data when the iterator is out of range?</p>\n</blockquote>\n\n<p>By not using the value any more:</p>\n\n<pre><code>fn main() {\n    {\n        let loaded_from_disk = vec![0, 1, 2, 3];\n        for i in &amp;loaded_from_disk {\n            println!(\"{}\", i)\n        }\n        // loaded_from_disk goes out of scope and is dropped. Nothing to *do*, per se.\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>How do I tell the borrow-checker that I will own the collection long enough?</p>\n</blockquote>\n\n<p>By owning the collection long enough. There's no secret handshake that the Rust Illuminati use with the borrow checker. The code only needs to be structured such that the thing that is borrowed doesn't become invalid while the borrow is outstanding. You can't move it (changing the memory address) or drop it (changing the memory address).</p>\n"}, {"tags": [], "owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "is_accepted": true, "score": 1, "last_activity_date": 1470084265, "last_edit_date": 1470084265, "creation_date": 1470082766, "answer_id": 38707406, "question_id": 38585599, "link": "https://stackoverflow.com/questions/38585599/iterate-over-collection-drop-it-as-soon-as-iterator-is-dropped/38707406#38707406", "title": "Iterate over collection. Drop it as soon as Iterator is dropped", "body": "<p>I was now finally able to implement a relatively statisfying solution:</p>\n\n<p>Hiding the mutability of iterators inside <code>Cell</code>s: </p>\n\n<pre><code>pub trait OwningIterator&lt;'a&gt; {\n    type Item;\n    fn next(&amp;'a self) -&gt; Option&lt;Self::Item&gt;;\n}\n</code></pre>\n\n<p>A struct now needs a <code>Cell</code>d position to allow iteration without mutation.\nAs an example here is the implementation of a struct that both owns and can iterate over a <code>Arc&lt;Vec&lt;T&gt;&gt;</code>:</p>\n\n<pre><code>pub struct ArcIter&lt;T&gt; {\n    data: Arc&lt;Vec&lt;T&gt;&gt;,\n    pos: Cell&lt;usize&gt;,\n}\n\nimpl&lt;'a, T: 'a&gt; OwningIterator&lt;'a&gt; for ArcIter&lt;T&gt; {\n    type Item = &amp;'a T;\n\n    fn next(&amp;'a self) -&gt; Option&lt;Self::Item&gt; {\n        if self.pos.get() &lt; self.data.len() {\n            self.pos.set(self.pos.get() + 1);\n            return Some(&amp;self.data[self.pos.get() - 1]);\n        }  \n        None\n    }\n}\n</code></pre>\n\n<p>As I was able to hide these kind of iterators behind interfaces and let the user only handle \"real\" iterators I feel this is an acceptable deviation from the standard. </p>\n\n<p>Thanks to everyone who contributed with ideas that ultimately helped me to find that solution.</p>\n"}], "owner": {"reputation": 978, "user_id": 6426219, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9qNtI.jpg?s=128&g=1", "display_name": "JDemler", "link": "https://stackoverflow.com/users/6426219/jdemler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 533, "favorite_count": 0, "accepted_answer_id": 38707406, "answer_count": 2, "score": 5, "last_activity_date": 1470084265, "creation_date": 1469524090, "last_edit_date": 1469552923, "question_id": 38585599, "link": "https://stackoverflow.com/questions/38585599/iterate-over-collection-drop-it-as-soon-as-iterator-is-dropped", "title": "Iterate over collection. Drop it as soon as Iterator is dropped", "body": "<p>I have collections dumped on disk. When requested, these collections should be retrieved (no problem) and an <code>iterator</code> should be build for it that returns references to the retrieved values.</p>\n\n<p>After the <code>iterator</code> is dropped, I do not need the collection anymore. I want it to be dropped, too.</p>\n\n<p>What I have tried so far:</p>\n\n<ol>\n<li><p>The <code>Iterator</code> owns the collection. This made the most sense for me, but it is not possible; I am not quite sure why. Some say the <code>Iterator</code> traits' method signature for <code>next</code> is the problem. (<a href=\"https://play.rust-lang.org/?gist=01b6b223585da3cc1d684a20e9e6e74d&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">example</a>)</p></li>\n<li><p>Reference Counting: The <code>Retriever</code> returns a <code>Rc&lt;Vec&lt;usize&gt;&gt;</code>. I ran into the same problems as in the owning iterator. (<a href=\"https://play.rust-lang.org/?gist=ad015dc049eb1d8fb6894106785004bf&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">example</a>)</p></li>\n<li><p>Letting the retriever own the collection and handing out a reference to it. I tried to implement the retriever with interior mutability (<code>RefCell&lt;HashMap&gt;</code>), but I cannot return references into the <code>HashMap</code> with long enough lifetimes.</p></li>\n</ol>\n\n<p>I see two basic possibilities with this.</p>\n\n<ol>\n<li><p>The retriever transfers ownership. Then the <code>Iterator</code> would need to own the data. Something in the lines of: </p>\n\n<pre><code>use std::slice::Iter;\n\nfn retrieve(id: usize) -&gt; Vec&lt;usize&gt; {\n    //Create Data out of the blue (or disk, or memory, or network. I dont care)\n    //Move the data out. Transfer ownership\n    let data = vec![0, 1, 2, 3];\n    data\n}\n\nfn consume_iterator&lt;'a, TIterator: Iterator&lt;Item=&amp;'a usize&gt;&gt;(iterator: TIterator) {\n    for i in iterator {\n        println!(\"{}\", i);\n    }\n}\n\nfn handler&lt;'a&gt;(id: usize) -&gt; Iter&lt;'a, usize&gt; {\n    //handle_request now owns the vector.\n    //I now want to build an owning iterator..\n    //This does of course not compile as vector will be dropped at the end of this method\n    retrieve(id).iter()\n}\n\nfn main() {\n    consume_iterator(handler(0))\n}\n</code></pre></li>\n<li><p>The retriever owns the collection. But then two new problems arise:</p>\n\n<ol>\n<li>How can I drop the data when the iterator is out of range?</li>\n<li>How do I tell the borrow-checker that I will own the collection long enough?</li>\n</ol>\n\n<p></p>\n\n<pre><code>use std::cell::{Ref, RefCell};\n\nstruct Retriever {\n    //Own the data. But I want it to be dropped as soon as the references to it go out of scope.\n    data: RefCell&lt;Vec&lt;usize&gt;&gt;\n}\n\nimpl Retriever{\n\n    fn retrieve&lt;'a&gt;(&amp;'a self, id: usize) -&gt; Ref&lt;'a, Vec&lt;usize&gt;&gt; {\n        //Create Data out of the blue (or disk, or memory, or network. I dont care)\n        //Now data can be stored internally and a referece to it can be supplied.\n        let mut data = self.data.borrow_mut();\n        *data = vec![0, 1, 2, 3];\n        self.data.borrow()\n    }\n\n}\n\nfn consume_iterator&lt;'a, TIterator: Iterator&lt;Item=&amp;'a usize&gt;&gt;(iterator: TIterator) {\n    for i in iterator {\n        println!(\"{}\", i);\n    }\n}\n\n\nfn handler&lt;'a&gt;(ret: &amp;'a Retriever, id: usize) -&gt; IterWrapper&lt;'a&gt; {\n    //andle_request now has a reference to the collection\n    //So just call iter()? Nope. Lifetime issues.\n    ret.retrieve(id).iter()        \n}\n\nfn main() {\n    let retriever = Retriever{data: RefCell::new(Vec::new())};\n    consume_iterator(handler(&amp;retriever, 0))\n}\n</code></pre></li>\n</ol>\n\n<p>I feel a bit lost here and am overlooking something obvious.</p>\n"}, {"tags": ["struct", "rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469545761, "post_id": 38585449, "comment_id": 64575362, "body": "You may also be interested in <a href=\"http://stackoverflow.com/q/32298278/155423\">Rust: ssh2::Session lifetime error</a> and <a href=\"http://stackoverflow.com/q/29428227/155423\">Return local String as a slice (&amp;str)</a>."}, {"owner": {"reputation": 95, "user_id": 4777440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6a90e9f5af1e931f26cf7ec7598d1a87?s=128&d=identicon&r=PG&f=1", "display_name": "vessd", "link": "https://stackoverflow.com/users/4777440/vessd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469568789, "post_id": 38585449, "comment_id": 64588360, "body": "@Shepmaster Thank you, but I haven&#39;t found a solution of my problem. I know that the code that I gave as an example is incorrect. I thought about the possibility of creating Sftp object just before use, and came to the conclusion that in my case it is not optimal, because I have to create it before each call to open the file. It is planned to open at least a few thousand files."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469573006, "post_id": 38585449, "comment_id": 64589788, "body": "Perhaps you can rephrase your question to explain what parts of the three linked questions are confusing? You may also want to consider showing how you attempted to solve the problem using the linked solutions and how those attempts have failed. I would also include the profiling you have done that shows that creating thousands of <code>Sftp</code> objects is not performant enough. <a href=\"https://play.rust-lang.org/?gist=32d1c4c976b4306d6fd86537e5b4377c\" rel=\"nofollow noreferrer\">I&#39;d probably just pass in a reference to the <code>Sftp</code> object</a>."}, {"owner": {"reputation": 95, "user_id": 4777440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6a90e9f5af1e931f26cf7ec7598d1a87?s=128&d=identicon&r=PG&f=1", "display_name": "vessd", "link": "https://stackoverflow.com/users/4777440/vessd"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469641460, "post_id": 38585449, "comment_id": 64625414, "body": "@Shepmaster updated"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469659081, "post_id": 38585449, "comment_id": 64634245, "body": "The question is indeed updated, but it doesn&#39;t <i>explain what parts of the three linked questions are confusing</i> or <i>show how you attempted to solve the problem using the linked solutions</i> or <i>include the profiling</i>. No one will be able to give you better help than the 3 linked questions until we understand what the problem with them is. Otherwise, we&#39;d just copy and paste the answer directly from those to here which helps no one."}], "owner": {"reputation": 95, "user_id": 4777440, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6a90e9f5af1e931f26cf7ec7598d1a87?s=128&d=identicon&r=PG&f=1", "display_name": "vessd", "link": "https://stackoverflow.com/users/4777440/vessd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 95, "favorite_count": 0, "closed_date": 1469545658, "answer_count": 0, "score": 0, "last_activity_date": 1469641414, "creation_date": 1469523701, "last_edit_date": 1469641414, "question_id": 38585449, "link": "https://stackoverflow.com/questions/38585449/how-to-pass-a-structure-between-functions-which-depends-on-another-structure", "closed_reason": "Duplicate", "title": "How to pass a structure between functions which depends on another structure?", "body": "<p>I want to pass a <a href=\"http://alexcrichton.com/ssh2-rs/ssh2/struct.Sftp.html\" rel=\"nofollow\"><code>ssh2::Sftp</code></a> struct between functions. This structure depends on the <code>ssh2::Session</code>, which in turn depends on the <code>std::net::TcpStream</code>.</p>\n\n<pre><code>extern crate ssh2;\n\nuse std::path::Path;\nuse std::net::TcpStream;\n\nfn new_sftp&lt;'a&gt;() -&gt; ssh2::Sftp&lt;'a&gt; {\n    let tcp = TcpStream::connect(\"localhost\").unwrap();\n    let mut session = ssh2::Session::new().unwrap();\n    session.handshake(&amp;tcp).unwrap();\n    session.userauth_pubkey_file(\"user\", None, Path::new(\"/home/user/.ssh/id_rsa\"), None)\n           .unwrap();\n    session.sftp().unwrap()\n}\n\nfn main() {\n    let sftp = new_sftp();\n}\n</code></pre>\n\n<p>error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `session` does not live long enough\n    session.sftp().unwrap()\n    ^~~~~~~\n</code></pre>\n\n<p>I tried to do in this way, but I don't understand which option lifetime pass for the <code>ssh2::Sftp</code>:</p>\n\n<pre><code>extern crate ssh2;\n\nuse std::path::Path;\nuse std::net::TcpStream;\n\nstruct Sftp {\n    tcp: TcpStream,\n    session: ssh2::Session,\n    sftp: ssh2::Sftp,\n}\n\nfn main() {\n    let tcp = TcpStream::connect(\"localhost\").unwrap();\n    let mut session = ssh2::Session::new().unwrap();\n    session.handshake(&amp;tcp).unwrap();\n    session.userauth_pubkey_file(\"user\", None, Path::new(\"/home/user/.ssh/id_rsa\"), None)\n           .unwrap();\n    let sftp = session.sftp().unwrap();\n\n    let sftp = Sftp {\n        tcp: tcp,\n        session: session,\n        sftp: sftp,\n    };\n}\n</code></pre>\n\n<p><strong>Update</strong><br>\nI have several functions which work with files. I want to create a new type, which would have a function \"open\", which returns a file descriptor, regardless of where the file (on the local computer or on the remote). Now I'm trying to figure out how do I keep <code>ssh::Sftp</code> within this new type. I think it is not the best to create a new structure every time I call function \"open\", because the creation of something new always requires resources. Perhaps the compiler understands what I want and optimize this place, but I'm not sure.</p>\n"}, {"tags": ["rust", "containers"], "answers": [{"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1469480815, "post_id": 38577218, "comment_id": 64544000, "body": "I&#39;d definitely +1 if you included working examples."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 4, "last_activity_date": 1469479898, "creation_date": 1469479898, "answer_id": 38577218, "question_id": 38576895, "link": "https://stackoverflow.com/questions/38576895/what-ways-exist-to-create-containers-of-several-types/38577218#38577218", "title": "What ways exist to create containers of several types?", "body": "<p>1) You can store references or pointers to trait objects.</p>\n\n<p>2) You can create an enum over the things you want to store.</p>\n"}], "owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "closed_date": 1469492536, "accepted_answer_id": 38577218, "answer_count": 1, "score": 1, "last_activity_date": 1469492510, "creation_date": 1469478566, "last_edit_date": 1469492510, "question_id": 38576895, "link": "https://stackoverflow.com/questions/38576895/what-ways-exist-to-create-containers-of-several-types", "closed_reason": "Duplicate", "title": "What ways exist to create containers of several types?", "body": "<p>I would like to know the ways to have a container containing several types. I know that:</p>\n\n<ul>\n<li>A tuple can contain several types</li>\n<li>If I create an enumeration <code>E</code>, I can create a <code>Vec&lt;E&gt;</code>.</li>\n</ul>\n\n<p>In C++, we can create a <code>Vec&lt;A*&gt;</code> containing both <code>B*</code> and <code>C*</code> elements if <code>B</code> and <code>C</code> inherit from <code>A</code>. Can we do something similar in Rust? For instance, if several types implement the same trait?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 2, "creation_date": 1469490813, "post_id": 38574874, "comment_id": 64547234, "body": "This might be worth creating an issue <a href=\"https://github.com/rust-lang/cargo/issues\" rel=\"nofollow noreferrer\">here</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1469492919, "post_id": 38574874, "comment_id": 64547701, "body": "I second the comment from @squiguy; create an issue. However, make sure you <b>provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a></b> when filing the issue. And here."}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "edited": false, "score": 0, "creation_date": 1469495985, "post_id": 38574874, "comment_id": 64548448, "body": "Thanks for the comments. I&#39;ve tried to clarify my questions a little bit"}, {"owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "edited": false, "score": 0, "creation_date": 1469550224, "post_id": 38574874, "comment_id": 64578332, "body": "I think this is related to <a href=\"https://github.com/rust-lang/cargo/issues/2164\" rel=\"nofollow noreferrer\">Cargo issue 2164</a>, and I&#39;ve added a comment on that issue."}], "answers": [{"tags": [], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "is_accepted": false, "score": 6, "last_activity_date": 1469628527, "creation_date": 1469628527, "answer_id": 38615349, "question_id": 38574874, "link": "https://stackoverflow.com/questions/38574874/consolidating-cargo-dependencies/38615349#38615349", "title": "Consolidating cargo dependencies", "body": "<p>Reading through the comments of <a href=\"https://github.com/rust-lang/cargo/issues/2064\" rel=\"noreferrer\">cargo/issues/2064</a>, I realized that a more robust way of resolving these types of dependencies is to use the <code>--precise</code> flag. For my example,</p>\n\n<pre><code>cargo update -p iron:0.4.0 --precise 0.3.0\n</code></pre>\n\n<p>removes the unnecessary dependency. This requires one to dig into <code>Cargo.lock</code> and manually determine where dependencies can converge, but is far better than running <code>cargo update -p &lt;pkg&gt;</code> and hoping for the best, or manually editing <code>Cargo.lock</code>.</p>\n"}], "owner": {"reputation": 6531, "user_id": 1614607, "user_type": "registered", "accept_rate": 59, "profile_image": "https://i.stack.imgur.com/j5OdR.jpg?s=128&g=1", "display_name": "Jacob Brown", "link": "https://stackoverflow.com/users/1614607/jacob-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 646, "favorite_count": 1, "answer_count": 1, "score": 12, "last_activity_date": 1469628527, "creation_date": 1469470836, "last_edit_date": 1495541896, "question_id": 38574874, "link": "https://stackoverflow.com/questions/38574874/consolidating-cargo-dependencies", "title": "Consolidating cargo dependencies", "body": "<p>I have a project that has a dependency (a cookie utility) that has a dependency on <a href=\"https://github.com/iron/iron/\" rel=\"nofollow noreferrer\">iron</a> <code>&gt;= 0.3, &lt;= 0.4</code>.</p>\n\n<p>My project has a dependency on iron <code>0.3</code> (so I can use the <code>router</code> middleware that hasn't yet been updated to the latest iron).</p>\n\n<p>When I try to compile my project, the cookie utility pulls the <code>0.4</code> version of iron, and I get errors since different versions of iron are being used.</p>\n\n<p>However, I can do:</p>\n\n<pre><code>cargo update -p &lt;cookie utility&gt;\n</code></pre>\n\n<p>which (usually) changes that package's dependency on iron to match the one I am using, and removes the extraneous dependency on iron <code>0.4</code>. (Bizarrely, I sometimes have to run that command a couple of times before it updates.)</p>\n\n<p>Apparently I can't specify the dependency version of a dependency: <a href=\"https://stackoverflow.com/questions/27770031/set-specific-version-of-the-dependency-of-a-projects-dependency-in-cargo-toml-o\">Set specific version of the dependency of a project&#39;s dependency in Cargo.toml or Cargo.lock</a>.</p>\n\n<p>It would be nice if cargo could guess that I want to use a single version of iron, but I understand why it can't. However, I'm confused about why <code>cargo update -p &lt;package&gt;</code> actually works; it seems non-intuitive that it would update a dependency for the package. </p>\n\n<hr/>\n\n<p>I guess my first real question is: how can I specify the dependency versions of dependencies (when and only when the version I want is within the supported version range of that library)? I don't think the solutions suggested in the question linked above are ideal. I feel like it would be better if Cargo could support this well, so that libraries could leave their dependency version ranges as open as their functionality allows.</p>\n\n<p>At the same time, I found this \"trick\" that seems to do what I want (<code>cargo update -p &lt;pkg&gt;</code>). I haven't looked super hard, but this behavior doesn't seem to be described in any obvious place. My second question is: is this a valid way to coalesce dependencies? Is there any place I can find more information about this?</p>\n\n<hr/>\n\n<p>And steps to reproduce:</p>\n\n<ol>\n<li>Create a new project: <code>cargo new --bin ironapp</code>; <code>cd ironapp</code>.</li>\n<li>Create the cookie dependency: <code>cargo new cookie_util</code>.</li>\n<li>In <code>cookie_util/Cargo.toml</code> add one dependency: <code>iron = \"&gt;= 0.3, &lt;= 0.4\"</code>.</li>\n<li>In <code>Cargo.toml</code> add two dependencies: <code>iron = \"0.3.0\"</code> and <code>cookie_util = { path = \"cookie_util\"}</code>.</li>\n<li><code>cargo build</code>. Confirm that two versions of iron are required in <code>Cargo.lock</code>.</li>\n<li>Run <code>cargo update -p cookie_util</code> anywhere between 1 and 4 (or more) times. Eventually it will remove the dependency on <code>iron 0.4.0</code>.</li>\n</ol>\n\n<p>I just tested this on rustc-1.10.0/cargo-0.11.0. I made sure <code>target</code> and <code>Cargo.lock</code> were both absent at the start of step 1.</p>\n"}, {"tags": ["rust", "move-semantics", "llvm-codegen"], "comments": [{"owner": {"reputation": 10840, "user_id": 1198729, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0a3069491bfded90cdf623341cadc1d1?s=128&d=identicon&r=PG", "display_name": "Manishearth", "link": "https://stackoverflow.com/users/1198729/manishearth"}, "edited": false, "score": 20, "creation_date": 1469464657, "post_id": 38571270, "comment_id": 64535326, "body": "Rustc does optimize moves. It isn&#39;t doing so in this case, probably because llvm didn&#39;t inline bar. This might even be because you are trying to observe the pointer values, and llvm isn&#39;t sure if that&#39;s safe to optimize. I tried it without the <code>:p</code> prints and used test::black_box instead, and the copy vanishes from the assembly."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 10840, "user_id": 1198729, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0a3069491bfded90cdf623341cadc1d1?s=128&d=identicon&r=PG", "display_name": "Manishearth", "link": "https://stackoverflow.com/users/1198729/manishearth"}, "edited": false, "score": 0, "creation_date": 1469485879, "post_id": 38571270, "comment_id": 64545813, "body": "@Manishearth <code>bar</code> is getting inlined. LLVM is just bad at removing moves of large arrays."}, {"owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "edited": false, "score": 0, "creation_date": 1603085562, "post_id": 38571270, "comment_id": 113913540, "body": "The issues with <code>NRVO</code> tag are related to this: <a href=\"https://github.com/rust-lang/rust/labels/A-mir-opt-nrvo\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/labels/A-mir-opt-nrvo</a>"}, {"owner": {"reputation": 1307, "user_id": 5006880, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/fb0bf399baa2aa2a9ba96fa05cecb74b?s=128&d=identicon&r=PG&f=1", "display_name": "Mergasov", "link": "https://stackoverflow.com/users/5006880/mergasov"}, "edited": false, "score": 0, "creation_date": 1616696579, "post_id": 38571270, "comment_id": 118091278, "body": "Is <code>o</code> dropping guaranteed in this case? In view of it was moved out to <code>bar()</code>, what&#39;s the point where the <code>o</code> memory would free up?"}], "answers": [{"comments": [{"owner": {"reputation": 723, "user_id": 431056, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-hMZ64wPE1ds/AAAAAAAAAAI/AAAAAAAAACk/09SSkGPaJFE/photo.jpg?sz=128", "display_name": "eddyb", "link": "https://stackoverflow.com/users/431056/eddyb"}, "edited": false, "score": 5, "creation_date": 1469466337, "post_id": 38571602, "comment_id": 64536230, "body": "Speaking of MIR optimization passes, the first one would be a simple move destination propagation pass: <a href=\"https://github.com/rust-lang/rust/pull/34693\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/34693</a>. The tracking issue is <a href=\"https://github.com/rust-lang/rust/issues/32966\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/32966</a>."}, {"owner": {"reputation": 618, "user_id": 371553, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae9a752a5fd9bf94a3f9e9dfc39fea0c?s=128&d=identicon&r=PG", "display_name": "Michael Younkin", "link": "https://stackoverflow.com/users/371553/michael-younkin"}, "edited": false, "score": 1, "creation_date": 1469501288, "post_id": 38571602, "comment_id": 64549581, "body": "Instead of just avoiding stack allocation, it would be better to assume the move will be optimized and only box things later if it wasn&#39;t. Most of the time in Rust you shouldn&#39;t be thinking about trying to avoid copying things."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 618, "user_id": 371553, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae9a752a5fd9bf94a3f9e9dfc39fea0c?s=128&d=identicon&r=PG", "display_name": "Michael Younkin", "link": "https://stackoverflow.com/users/371553/michael-younkin"}, "edited": false, "score": 0, "creation_date": 1469529076, "post_id": 38571602, "comment_id": 64563041, "body": "@MichaelYounkin: I partially agree. The problem is that large objects copied a few times on the stack easily lead to stack-overflow, especially with Debug targets where optimizations do not occur. If the buffer is very large, the cost of the dynamic allocation should be dwarfed by the cost of initializing the buffer itself anyway."}, {"owner": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 1, "creation_date": 1513927794, "post_id": 38571602, "comment_id": 82844074, "body": "@MatthieuM allocating it on the heap is very well, but in my experience, even writing Box::new(BigStruct::new()) first allocates the BigStruct in the stack (in BigStruct::new), then copies it in the heap (in Box::new). Or am I missing something?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1523, "user_id": 1235487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c586f2d0682c9f919da29b520347a5e?s=128&d=identicon&r=PG", "display_name": "Pierre-Antoine", "link": "https://stackoverflow.com/users/1235487/pierre-antoine"}, "edited": false, "score": 0, "creation_date": 1514200564, "post_id": 38571602, "comment_id": 82905631, "body": "@Pierre-Antoine: In Debug, yes, for now; this is why <a href=\"https://github.com/rust-lang/rust/issues/27779\" rel=\"nofollow noreferrer\">placement new</a> is so sought after. In Release, the stack copy should hopefully be optimized out anyway, but this may lead to Stack Overflows in Debug that prevent you from testing your code :("}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 23, "last_activity_date": 1469459940, "creation_date": 1469459940, "answer_id": 38571602, "question_id": 38571270, "link": "https://stackoverflow.com/questions/38571270/can-rust-optimise-away-the-bit-wise-copy-during-move-of-an-object-someday/38571602#38571602", "title": "Can Rust optimise away the bit-wise copy during move of an object someday?", "body": "<p>Given that in Rust (unlike C or C++) the address of a value is not considered to matter, there is nothing in terms of <em>language</em> that prevents the elision of the copy.</p>\n\n<p>However, today rustc does not optimize anything: all optimizations are delegated to LLVM, and it seems you have hit a limitation of the LLVM optimizer here (it's unclear whether this limitation is due to LLVM being close to C's semantics or is just an omission).</p>\n\n<p>So, there are two avenues of improving code generation for this:</p>\n\n<ul>\n<li>teaching LLVM to perform this optimization (if possible)</li>\n<li>teaching rustc to perform this optimization (optimization passes are coming to rustc now that it has MIR)</li>\n</ul>\n\n<p>but for now you might simply want to avoid such large objects from being allocated on the stack, you can <code>Box</code> it for example.</p>\n"}], "owner": {"reputation": 41983, "user_id": 866732, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09f0253204000d6083ed1de21afc6fd?s=128&d=identicon&r=PG", "display_name": "WiSaGaN", "link": "https://stackoverflow.com/users/866732/wisagan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3230, "favorite_count": 2, "accepted_answer_id": 38571602, "answer_count": 1, "score": 22, "last_activity_date": 1564862399, "creation_date": 1469459038, "last_edit_date": 1564862399, "question_id": 38571270, "link": "https://stackoverflow.com/questions/38571270/can-rust-optimise-away-the-bit-wise-copy-during-move-of-an-object-someday", "title": "Can Rust optimise away the bit-wise copy during move of an object someday?", "body": "<p>Consider the snippet</p>\n\n<pre><code>struct Foo {\n    dummy: [u8; 65536],\n}\n\nfn bar(foo: Foo) {\n    println!(\"{:p}\", &amp;foo)\n}\n\nfn main() {\n    let o = Foo { dummy: [42u8; 65536] };\n    println!(\"{:p}\", &amp;o);\n    bar(o);\n}\n</code></pre>\n\n<p>A typical <a href=\"https://play.rust-lang.org/?gist=cfb02304ff465361d0dd59141bb13667&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">result</a> of the program is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0x7fffc1239890\n0x7fffc1229890\n</code></pre>\n\n<p>where the addresses are different.</p>\n\n<p>Apparently, the large array <code>dummy</code> has been copied, as expected in the compiler's move implementation. Unfortunately, this can have non-trivial performance impact, as <code>dummy</code> is a very large array. This impact can force people to choose passing argument by reference instead, even when the function actually \"consumes\" the argument conceptually.</p>\n\n<p>Since <code>Foo</code> does not derive <code>Copy</code>, object <code>o</code> is moved. Since Rust forbids the access of moved object, what is preventing <code>bar</code> to \"reuse\" the original object <code>o</code>, forcing the compiler to generate a potentially expensive bit-wise copy? Is there a fundamental difficulty, or will we see the compiler someday optimise away this bit-wise copy?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 6977, "user_id": 15127, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/89061a4464c9f4770092a4941aee72b2?s=128&d=identicon&r=PG", "display_name": "Andrew Backer", "link": "https://stackoverflow.com/users/15127/andrew-backer"}, "edited": false, "score": 0, "creation_date": 1469433378, "post_id": 38559715, "comment_id": 64515307, "body": "The story sounds a little mean spirited, until you read it as the rust compiler thinking!  I <b>assumed</b> that the type would be inferred from first assignment, <i>not</i> from later use of a derived variable.  First assignment is a i32.  Then the use of a loop variable changes that <i>outside</i> variable type to a compatible one. That seems really odd to me, very confusing at least, but as always there is probably a &quot;very good reason&quot; (tm).   Ok... off to figure out lifetimes!"}, {"owner": {"reputation": 6977, "user_id": 15127, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/89061a4464c9f4770092a4941aee72b2?s=128&d=identicon&r=PG", "display_name": "Andrew Backer", "link": "https://stackoverflow.com/users/15127/andrew-backer"}, "edited": false, "score": 0, "creation_date": 1469433635, "post_id": 38559715, "comment_id": 64515447, "body": "To clarify, everywhere i&#39;ve worked something like &quot;var x = 3;&quot; would make X the integer type, same as a textual substitution to &quot;int x = 3;&quot;.  The inferrence is a convenience.  I guess that rustc is doing a lot more work and this method enables other more complcated use cases (hence the <code>very good reason</code>).  I tend to reason about lines in isolation (&quot;what is this statement doing&quot;, &quot;what did that expression evaluate to&quot;) and I think thats the source of confusion.  I&#39;m still having trouble wrapping my head around why this is good, but just knowing is 1/2 the battle."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 6977, "user_id": 15127, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/89061a4464c9f4770092a4941aee72b2?s=128&d=identicon&r=PG", "display_name": "Andrew Backer", "link": "https://stackoverflow.com/users/15127/andrew-backer"}, "edited": false, "score": 2, "creation_date": 1469434778, "post_id": 38559715, "comment_id": 64516027, "body": "@AndrewBacker In Rust, type information can flow &quot;backwards&quot; through the code.  To put it another way: the type of something can be inferred based on how it&#39;s <i>used</i>.  This is why Rust can have return type deduction, where something like C++ can&#39;t."}, {"owner": {"reputation": 6977, "user_id": 15127, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/89061a4464c9f4770092a4941aee72b2?s=128&d=identicon&r=PG", "display_name": "Andrew Backer", "link": "https://stackoverflow.com/users/15127/andrew-backer"}, "edited": false, "score": 0, "creation_date": 1469437797, "post_id": 38559715, "comment_id": 64517778, "body": "Ok, that is cool.  And it explains some other very strange looking behavior I am having why trying to copy a function out of one context and into another.  It knows what the return type of the function is, so its inferring the type parameters of the final expression... wow.  And ouch.  Lots to think about now."}, {"owner": {"reputation": 20407, "user_id": 1017941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/yocPw.jpg?s=128&g=1", "display_name": "Hauleth", "link": "https://stackoverflow.com/users/1017941/hauleth"}, "reply_to_user": {"reputation": 6977, "user_id": 15127, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/89061a4464c9f4770092a4941aee72b2?s=128&d=identicon&r=PG", "display_name": "Andrew Backer", "link": "https://stackoverflow.com/users/15127/andrew-backer"}, "edited": false, "score": 0, "creation_date": 1469544525, "post_id": 38559715, "comment_id": 64574392, "body": "@AndrewBacker if you want to learn more about type deducing system (Rust uses the same as, e.g. Haskell) there is good article on Wikipedia: <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"nofollow noreferrer\">Hindley\u2013Milner type system</a>"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 11, "last_activity_date": 1469420798, "creation_date": 1469420798, "answer_id": 38559715, "question_id": 38559644, "link": "https://stackoverflow.com/questions/38559644/using-loop-variable-from-loop-causes-type-conversion/38559715#38559715", "title": "Using loop variable from &quot;..&quot; loop causes type conversion?", "body": "<p>What type is <code>x</code>?</p>\n\n<pre><code>let iters = 2;\n</code></pre>\n\n<p>Well, the <code>let</code> doesn't <em>specify</em> a type, and a bare <code>2</code> could be <em>any</em> kind of integer, so... <em>I dunno.</em></p>\n\n<pre><code>0..iters\n</code></pre>\n\n<p>Well, a bare <code>0</code> could be <em>any</em> kind of integer, so... <em>I dunno.</em></p>\n\n<pre><code>all_data[x]\n</code></pre>\n\n<p><em>A-ha!</em>  There's only <em>one</em> implementation of <code>Index</code> usable on a <code>Vec</code>, and it's <code>Index&lt;usize&gt;</code>, which means <code>x</code> <strong>must</strong> be a <code>usize</code>, which means <code>0..iters</code> <strong>must</strong> be a <code>Range&lt;usize&gt;</code>, which means <code>iters</code> <strong>must</strong> be a <code>usize</code>!</p>\n\n<hr>\n\n<p>(But if you don't use it...)</p>\n\n<p>Well, I never got any indication as to what the type of <code>x</code> was, and it must <em>have</em> a type, so... <code>i32</code>?  *<em>shrug</em>*</p>\n\n<hr>\n\n<p>Integer types default to <code>i32</code> in the absence of more conclusive inference information.  By using it to index a <code>Vec</code>, you told Rust that it's supposed to be a <code>usize</code>.</p>\n"}], "owner": {"reputation": 6977, "user_id": 15127, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/89061a4464c9f4770092a4941aee72b2?s=128&d=identicon&r=PG", "display_name": "Andrew Backer", "link": "https://stackoverflow.com/users/15127/andrew-backer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1383, "favorite_count": 0, "accepted_answer_id": 38559715, "answer_count": 1, "score": 0, "last_activity_date": 1469498747, "creation_date": 1469420290, "last_edit_date": 1469498747, "question_id": 38559644, "link": "https://stackoverflow.com/questions/38559644/using-loop-variable-from-loop-causes-type-conversion", "title": "Using loop variable from &quot;..&quot; loop causes type conversion?", "body": "<p>I have a really simple timing loop that users <code>..</code> up to a maximum.  However, when I <strong>use</strong> the loop variable inside the block (here as an index) it appears to cause the variable type to change.  If I <em>do not</em> touch the loop variable then the stopwatch has no issue.  </p>\n\n<pre><code>let sw = Stopwatch::start_new();\nlet all_data = vec![\"a\", \"b\", \"c\", \"d\", \"e\"];\nlet iters = 2;\nfor x in 0..iters {\n    println!(\"Message: {:?}\", all_data[x]);\n}\nprintln!(\"Thing took {}ms per\", sw.elapsed_ms() / iters);\n</code></pre>\n\n<p>This give me a type error when printing out the elapsed time.  It appears to have changed to a <code>usize</code>?</p>\n\n<p>I can fix this by using <code>all_data[x as usize]</code> though.  Is Rust actually changing the actual variable somehow, or is the type inference just taking the very last usage and assuming that type? </p>\n\n<pre><code>src/main.rs:95:55: 95:58 error: mismatched types [E0308]\nsrc/main.rs:95     println!(\"Thing took {}ms per\", sw.elapsed_ms() / iters);\n                                                                     ^~~\n&lt;std macros&gt;:2:27: 2:58 note: in this expansion of format_args!\n&lt;std macros&gt;:3:1: 3:54 note: in this expansion of print! (defined in &lt;std macros&gt;)\nsrc/main.rs:95:5: 95:60 note: in this expansion of println! (defined in &lt;std macros&gt;)\nsrc/main.rs:95:55: 95:58 help: run `rustc --explain E0308` to see a detailed explanation\nsrc/main.rs:95:55: 95:58 note: expected type `i64`\nsrc/main.rs:95:55: 95:58 note:    found type `usize`\nsrc/main.rs:95:37: 95:58 error: the trait bound `i64: std::ops::Div&lt;usize&gt;` is not satisfied [E0277]\nsrc/main.rs:95     println!(\"Thing took {}ms per\", sw.elapsed_ms() / iters);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 8, "creation_date": 1469393138, "post_id": 38556455, "comment_id": 64504218, "body": "There are <a href=\"http://stackoverflow.com/search?q=%5Brust%5D+%22does+not+live+long+enough%22+is%3Aq\"><b>84 questions tagged rust</b></a> with the exact string <code>does not live long enough</code>. As a Stack Overflow user with 18k+ reputation, you should <a href=\"http://meta.stackoverflow.com/q/261592/155423\">know to show the research you have performed before asking the question</a> to set a good example for people new to the site."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1469450599, "post_id": 38556455, "comment_id": 64525870, "body": "As Shepmaster said, there are already 84 questions explaining this very error message; could you explain what detail they lacked for your situation so that the answer can be tailored to your case instead of being a generic &quot;that&#39;s just how it is&quot;?"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1469394273, "post_id": 38556628, "comment_id": 64504546, "body": "See also <a href=\"http://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str\">Return local String as a slice (&amp;str)</a> - <code>Chars</code> <a href=\"https://github.com/rust-lang/rust/blob/1.10.0/src/libcore/str/mod.rs#L326-L328\" rel=\"nofollow noreferrer\">contains a slice</a>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 5, "last_activity_date": 1469393318, "creation_date": 1469393318, "answer_id": 38556628, "question_id": 38556455, "link": "https://stackoverflow.com/questions/38556455/can-not-return-a-chars-iterator-because-it-does-not-live-long-enough/38556628#38556628", "title": "Can not return a Chars iterator because it &quot;does not live long enough&quot;", "body": "<p>You can't. <code>Chars</code> does not take ownership of the string, so once you go out of <code>Foo::new</code>, the string does not exist anymore. You need to store the string itself. <code>Chars</code> really is just a small utility type that's meant to be used on site, not stored somewhere to be used later.</p>\n"}], "owner": {"reputation": 33244, "user_id": 13379, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/13379/michael"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1469393422, "creation_date": 1469391959, "last_edit_date": 1469393422, "question_id": 38556455, "link": "https://stackoverflow.com/questions/38556455/can-not-return-a-chars-iterator-because-it-does-not-live-long-enough", "title": "Can not return a Chars iterator because it &quot;does not live long enough&quot;", "body": "<p>I want to be able to assign a <code>Chars</code> iterator to a struct, whose <code>String</code> was created inside of the struct's \"constructor\" method.  How do I do this?</p>\n\n<p>Code (<a href=\"https://play.rust-lang.org/?code=use%20std%3A%3Astr%3A%3AChars%3B%0A%0Afn%20main()%20%7B%0A%20%20%20%20let%20foo%20%3D%20Foo%3A%3Anew()%3B%0A%7D%0A%0Astruct%20Foo%3C%27a%3E%20%7B%0A%20%20%20%20chars%3A%20Chars%3C%27a%3E%0A%7D%0Aimpl%3C%27a%3E%20Foo%3C%27a%3E%20%7B%0A%20%20%20%20pub%20fn%20new()%20-%3E%20Self%20%7B%0A%20%20%20%20%20%20%20%20let%20s%20%3D%20%22value%22.to_string()%3B%0A%20%20%20%20%20%20%20%20Foo%20%7B%20chars%3A%20s.chars()%20%7D%0A%20%20%20%20%7D%0A%7D%0A&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">run it</a>):</p>\n\n<pre><code>use std::str::Chars;\n\nfn main() {\n    let foo = Foo::new();\n}\n\nstruct Foo&lt;'a&gt; {\n    chars: Chars&lt;'a&gt;\n}\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    pub fn new() -&gt; Self {\n        let s = \"value\".to_string();\n        Foo { chars: s.chars() }\n    }\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `s` does not live long enough\n  --&gt; &lt;anon&gt;:13:22\n13 |&gt;         Foo { chars: s.chars() }\n   |&gt;                      ^\nnote: reference must be valid for the lifetime 'a as defined on the block at 11:25...\n  --&gt; &lt;anon&gt;:11:26\n11 |&gt;     pub fn new() -&gt; Self {\n   |&gt;                          ^\nnote: ...but borrowed value is only valid for the block suffix following statement 0 at 12:36\n  --&gt; &lt;anon&gt;:12:37\n12 |&gt;         let s = \"value\".to_string();\n   |&gt;        \n</code></pre>\n\n<p>(In my real code, the constructor reads text from a file)</p>\n"}, {"tags": ["rust", "rustc-serialize"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1469390084, "post_id": 38556003, "comment_id": 64503294, "body": "Which tutorial? You need to add <code>#[derive(RustcEncodable)]</code> on <code>Greeting</code>"}], "answers": [{"comments": [{"owner": {"reputation": 300, "user_id": 1637272, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0a43579cbf6aea51bbd0f9ebfd4f21ba?s=128&d=identicon&r=PG", "display_name": "Maz", "link": "https://stackoverflow.com/users/1637272/maz"}, "edited": false, "score": 0, "creation_date": 1469393553, "post_id": 38556148, "comment_id": 64504327, "body": "Oh okay. Is there a reason why structs aren&#39;t encodable by default? Is it an overhead thing?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 300, "user_id": 1637272, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0a43579cbf6aea51bbd0f9ebfd4f21ba?s=128&d=identicon&r=PG", "display_name": "Maz", "link": "https://stackoverflow.com/users/1637272/maz"}, "edited": false, "score": 1, "creation_date": 1469394049, "post_id": 38556148, "comment_id": 64504480, "body": "@Maz essentially nothing is done &quot;by default&quot; in Rust. One of the benefits of a systems language is that you are aware of all the details of the code you are writing. You may <i>not</i> want to make a given struct serializable. A given struct may not be able to be serialized - should that prevent compilation? Give a warning? Fail silently? You can see why opting in is much simpler."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1469390134, "creation_date": 1469390134, "answer_id": 38556148, "question_id": 38556003, "link": "https://stackoverflow.com/questions/38556003/cant-encode-struct-into-json-in-rust/38556148#38556148", "title": "Can&#39;t encode struct into JSON in Rust", "body": "<p>You didn't provide the actual tutorial that you are using, but it appears to match <a href=\"https://github.com/brson/httptest\" rel=\"nofollow\">this one from brson</a>.</p>\n\n<pre><code>extern crate iron;\nextern crate rustc_serialize;\n\nuse iron::prelude::*;\nuse iron::status;\nuse rustc_serialize::json;\n\n#[derive(RustcEncodable)]\nstruct Greeting {\n    msg: String\n}\n\nfn main() {\n    fn hello_world(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n        let greeting = Greeting { msg: \"Hello, World\".to_string() };\n        let payload = json::encode(&amp;greeting).unwrap();\n        Ok(Response::with((status::Ok, payload)))\n    }\n\n    Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n    println!(\"On 3000\");\n}\n</code></pre>\n\n<p>Notice anything different between the two?</p>\n\n<pre><code>#[derive(RustcEncodable)]\nstruct Greeting {\n    msg: String\n}\n</code></pre>\n\n<p>You have to specify that the <code>Encodable</code> trait is implemented. In this case, you can do so by deriving <code>RustcEncodable</code>.</p>\n"}], "owner": {"reputation": 300, "user_id": 1637272, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0a43579cbf6aea51bbd0f9ebfd4f21ba?s=128&d=identicon&r=PG", "display_name": "Maz", "link": "https://stackoverflow.com/users/1637272/maz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 546, "favorite_count": 0, "accepted_answer_id": 38556148, "answer_count": 1, "score": -1, "last_activity_date": 1469390134, "creation_date": 1469389113, "last_edit_date": 1469389913, "question_id": 38556003, "link": "https://stackoverflow.com/questions/38556003/cant-encode-struct-into-json-in-rust", "title": "Can&#39;t encode struct into JSON in Rust", "body": "<p>I'm following an Iron web framework tutorial, which seemed pretty simple, but I can't seem to encode a struct as JSON.</p>\n\n<pre><code>extern crate iron;\nextern crate rustc_serialize;\n\nuse iron::prelude::*;\nuse iron::status;\nuse rustc_serialize::json;\n\nstruct Greeting {\n    msg: String,\n}\n\nfn main() {\n    fn hello_world(_: &amp;mut Request) -&gt; IronResult&lt;Response&gt; {\n        let greeting = Greeting { msg: \"hello_world\".to_string() };\n        let payload = json::encode(&amp;greeting).unwrap();\n        // Ok(Response::with((status::Ok,payload)))\n    }\n\n    // Iron::new(hello_world).http(\"localhost:3000\").unwrap();\n}\n</code></pre>\n\n<p>My Cargo.toml</p>\n\n<pre><code>[package]\nname = \"iron_init\"\nversion = \"0.1.0\"\nauthors = [\"mazbaig\"]\n\n[dependencies]\niron = \"*\"\nrustc-serialize = \"*\"\n</code></pre>\n\n<p>And my error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the trait bound `Greeting: rustc_serialize::Encodable` is not satisfied [E0277]\n        let payload = json::encode(&amp;greeting).unwrap();\n                      ^~~~~~~~~~~~\nhelp: run `rustc --explain E0277` to see a detailed explanation\nnote: required by `rustc_serialize::json::encode`\n</code></pre>\n\n<p>I kinda get that the right types aren't getting passed into the <code>json.encode()</code> function, but I'm having trouble figuring out what it wants from me. I'm probably missing something really basic.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 33244, "user_id": 13379, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/13379/michael"}, "edited": false, "score": 0, "creation_date": 1469374477, "post_id": 38553683, "comment_id": 64498259, "body": "That worked, thank you!  I&#39;ve never seen &quot;ref&quot; before.  Can that only be used in &quot;match&quot; blocks?  What&#39;s the difference between &quot;ref&quot; and &quot;&amp;&quot;?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 33244, "user_id": 13379, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/13379/michael"}, "edited": false, "score": 2, "creation_date": 1469374837, "post_id": 38553683, "comment_id": 64498385, "body": "@Michael <a href=\"https://doc.rust-lang.org/book/patterns.html#ref-and-ref-mut\" rel=\"nofollow noreferrer\"><code>ref</code> is used in patterns</a> to bind to a position by reference.  <code>&amp;</code> in pattern position is used to <i>deconstruct</i> a reference, allowing you to access or bind to the position <i>behind</i> it."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1469381879, "post_id": 38553683, "comment_id": 64500646, "body": "<a href=\"http://xion.io/post/code/rust-patterns-ref.html\" rel=\"nofollow noreferrer\">This article</a> might help understand the difference."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 8, "last_activity_date": 1469374128, "creation_date": 1469374128, "answer_id": 38553683, "question_id": 38553513, "link": "https://stackoverflow.com/questions/38553513/use-of-partially-moved-value-error-in-match-statement/38553683#38553683", "title": "&quot;use of partially moved value&quot; error in &quot;match&quot; statement", "body": "<p>Bind to the <code>message</code> field by-reference instead of by-value.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    match msg {\n        Message::Write{ref message} =&gt; println!(\"{}\", message),\n    };\n</code></pre>\n"}], "owner": {"reputation": 33244, "user_id": 13379, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/29d7c49f6f174710788c79011219bae1?s=128&d=identicon&r=PG", "display_name": "Michael", "link": "https://stackoverflow.com/users/13379/michael"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2353, "favorite_count": 0, "accepted_answer_id": 38553683, "answer_count": 1, "score": 3, "last_activity_date": 1469389654, "creation_date": 1469373052, "last_edit_date": 1469389654, "question_id": 38553513, "link": "https://stackoverflow.com/questions/38553513/use-of-partially-moved-value-error-in-match-statement", "title": "&quot;use of partially moved value&quot; error in &quot;match&quot; statement", "body": "<p>My code:</p>\n\n<pre><code>fn main() {\n    let mut messages = vec![];\n\n    let msg = Message::Write{message: \"msg\".to_string()};\n    match msg {\n        Message::Write{message} =&gt; println!(\"{}\", message),\n    };\n\n    messages.push(msg);\n}\n\nenum Message {\n    Write{message: String},\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: use of partially moved value: `msg` [--explain E0382]\n   --&gt; &lt;anon&gt;:9:19\n6   |&gt;         Message::Write{message} =&gt; println!(\"{}\", message),\n    |&gt;                        ------- value moved here\n...\n9   |&gt;     messages.push(msg);\n    |&gt;                   ^^^ value used here after move\nnote: move occurs because `msg.message` has type `std::string::String`, which does not implement the `Copy` trait\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>It looks like the ownership of the <code>message</code> field changes in the <code>match</code> block.  I just want to be able to output the value of the enum before adding it to the <code>Vec</code>.  How do I make this compile?</p>\n"}, {"tags": ["process", "rust", "output", "exec"], "comments": [{"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1469360436, "post_id": 38551500, "comment_id": 64493854, "body": "What do you mean by &quot;and to be able to read input as well&quot;?"}, {"owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "reply_to_user": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1469360627, "post_id": 38551500, "comment_id": 64493901, "body": "I mean, if you launch a program from the command line : <code>.&#47;myprog</code>, very often the program waits for you to enter some data, for instance, if its a command line game, it may ask a number. When I use Command::new(), it instantly terminates it if they is a rust <code>read_line</code> for example. No time to enter anything. I mean I really want to act like I executed the program from the command line."}], "answers": [{"comments": [{"owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "edited": false, "score": 0, "creation_date": 1469361716, "post_id": 38551671, "comment_id": 64494178, "body": "Thank you, I commented the lines containing <code>piped()</code> or <code>null()</code> because I want to use the parent&#39;s file descriptors."}, {"owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 1, "creation_date": 1469458289, "post_id": 38551671, "comment_id": 64531323, "body": "Since <code>Command</code> follows the builder pattern, it&#39;s a bit more idiomatic to structure it like this: <a href=\"https://play.rust-lang.org/?gist=37194d432ecb64c32d5fc5e59937570e&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 0, "creation_date": 1469458723, "post_id": 38551671, "comment_id": 64531608, "body": "@NateMara Actually I initially wrote <a href=\"https://gist.github.com/2c21ce9e7b919b30cb1444548dc897d9\" rel=\"nofollow noreferrer\">gist.github.com/2c21ce9e7b919b30cb1444548dc897d9</a>, and was quite surprised it takes <code>&amp;mut self</code> instead of <code>self</code>. Anyway you are right, I&#39;ll edit my answer, thanks."}, {"owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 0, "creation_date": 1469458831, "post_id": 38551671, "comment_id": 64531682, "body": "I think most builders use <code>&amp;mut self</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469459284, "post_id": 38551671, "comment_id": 64531952, "body": "Maybe, I haven&#39;t really been paying attention to that. With <code>self</code> there is a huge possibility that people not paying attention would write <code>builder.foo(); builder.bar();</code> ignoring the result so that might be the reason. This could be solved with a <code>must_use</code> annotation though. Don&#39;t know, I was just surprised there for a moment."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 4, "last_activity_date": 1469458818, "last_edit_date": 1469458818, "creation_date": 1469360897, "answer_id": 38551671, "question_id": 38551500, "link": "https://stackoverflow.com/questions/38551500/execute-any-bash-command-get-the-results-of-stdout-stderr-immediatly-and-use-st/38551671#38551671", "title": "Execute any bash command, get the results of stdout/stderr immediatly and use stdin", "body": "<p><code>Command::new</code> is indeed the way to go, but it is meant to execute a program. <code>ls ; sleep 1; ls</code> is not a program, it's instructions for some shell. If you want to execute something like that, you would need to ask a shell to interpret that for you:</p>\n\n<pre><code>Command::new(\"/usr/bin/sh\").args(&amp;[\"-c\", \"ls ; sleep 1; ls\"])\n// your complex command is just an argument for the shell\n</code></pre>\n\n<p>To get the output, there are two ways:</p>\n\n<ul>\n<li>the <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.output\" rel=\"nofollow\"><code>output</code></a> method is blocking and returns the outputs and the exit status of the command.</li>\n<li>the <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html#method.spawn\" rel=\"nofollow\"><code>spawn</code></a> method is non-blocking, and returns a handle containing the child's process <code>stdin</code>, <code>stdout</code> and <code>stderr</code> so you can communicate with the child, and a <a href=\"https://doc.rust-lang.org/std/process/struct.Child.html#method.wait\" rel=\"nofollow\"><code>wait</code></a> method to wait for it to cleanly exit. Note that by default the child inherits its parent file descriptor and you might want to set up pipes instead:</li>\n</ul>\n\n<p>You should use something like:</p>\n\n<pre><code>let child = Command::new(\"/usr/bin/sh\")\n                .args(&amp;[\"-c\", \"ls  sleep 1 ls\"])\n                .stderr(std::process::Stdio::null()) // don't care about stderr\n                .stdout(std::process::Stdio::piped()) // set up stdout so we can read it\n                .stdin(std::process::Stdio::piped()) // set up stdin so we can write on it\n                .spawn().expect(\"Could not run the command\"); // finally run the command\n\nwrite_something_on(child.stdin);\nread(child.stdout);\n</code></pre>\n"}], "owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1207, "favorite_count": 0, "accepted_answer_id": 38551671, "answer_count": 1, "score": 1, "last_activity_date": 1469458818, "creation_date": 1469359422, "last_edit_date": 1469389606, "question_id": 38551500, "link": "https://stackoverflow.com/questions/38551500/execute-any-bash-command-get-the-results-of-stdout-stderr-immediatly-and-use-st", "title": "Execute any bash command, get the results of stdout/stderr immediatly and use stdin", "body": "<p>I would like to execute any bash command. I found <code>Command::new</code> but I'm unable to execute \"complex\" commands such as <code>ls ; sleep 1; ls</code>. Moreover, even if I put this in a bash script, and execute it, I will only have the result at the end of the script (as it is explain in the process doc). I would like to get the result as soon as the command prints it (and to be able to read input as well) the same way we can do it in bash.</p>\n"}, {"tags": ["closures", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1469359451, "post_id": 38551294, "comment_id": 64493644, "body": "<a href=\"https://doc.rust-lang.org/book/closures.html#closures-and-their-environment\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/&hellip;</a>  In short closures borrows its environment by default. With <code>move</code> it take ownership of the environment. If value copyable it can not be moved and will be copied."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 7, "last_activity_date": 1469638534, "last_edit_date": 1469638534, "creation_date": 1469361673, "answer_id": 38551773, "question_id": 38551294, "link": "https://stackoverflow.com/questions/38551294/why-nested-iterator-closures-wont-copy-values-from-outer-scope/38551773#38551773", "title": "Why nested iterator closures won&#39;t copy values from outer scope", "body": "<p>Both <code>flat_map</code> and <code>map</code> are lazy. The inner <code>map</code> does not use <code>a</code> immediately but tries to \u201csave\u201d it for when it will be needed later thus borrows <code>a</code>. But since <code>a</code> is local to the outer closure and you return <code>map</code>'s result, that borrow would become invalid. You would need to consume the inner iterator:</p>\n\n<pre><code>vec![0;10].iter().flat_map(|&amp;a| {\n    (0..10).map(|b|{\n        a + b\n    }).collect::&lt;Vec&lt;_&gt;&gt;()\n});\n</code></pre>\n\n<p>Of course that's not efficient, and it would be much better for the inner closure to \"keep\" <code>a</code>. You would do this by marking the inner closure as <code>move</code>:</p>\n\n<pre><code>vec![0;10].iter().flat_map(|&amp;a| {\n    (0..10).map(move |b|{\n        a + b\n    })\n});\n</code></pre>\n\n<p>Normally, the compiler would not let you do this, because the <code>flat_map</code> closure does not own <code>a</code>, it merely has a reference to it. However,\nsince the numeric types in Rust (like <code>isize</code>) implement the <code>Copy</code> trait, the compiler will copy <code>a</code> instead of trying to move it, giving the behavior you want. Note that this is also the reason why you are allowed to dereference <code>a</code> (using <code>|&amp;a|</code>) in the <code>flat_map</code>; normally that would have required owning <code>a</code>, not merely a reference to it (which is what <code>.iter()</code> yields).</p>\n"}], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 1, "accepted_answer_id": 38551773, "answer_count": 1, "score": 8, "last_activity_date": 1469638534, "creation_date": 1469357896, "last_edit_date": 1469359942, "question_id": 38551294, "link": "https://stackoverflow.com/questions/38551294/why-nested-iterator-closures-wont-copy-values-from-outer-scope", "title": "Why nested iterator closures won&#39;t copy values from outer scope", "body": "<p>I'm trying to use nested iterators, where the inner iterator uses value from the outer iterator.</p>\n\n<pre><code>vec![0;10].iter().flat_map(|&amp;a| {\n    (0..10).map(|b|{\n        a + b\n    })\n});\n</code></pre>\n\n<blockquote>\n  <p>error: <code>a</code> does not live long enough</p>\n\n<pre><code>    (0..10).map(|b|{\n                ^^^\n</code></pre>\n  \n  <p>note: reference must be valid for the method call...</p>\n</blockquote>\n\n<p>This compiles if I move the inner closure (<code>move |b|{</code>), but I don't understand why it is necessary, given that <code>a</code> is an integer and could have been copied instead of moved.</p>\n"}, {"tags": ["ftp", "rust", "rust-crates"], "comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1469355631, "post_id": 38550790, "comment_id": 64492742, "body": "Try <code>ftp_stream.transfer_type(::ftp::types::FileType::Binary)</code>."}, {"owner": {"reputation": 3, "user_id": 6630988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f52505bc437a114ea8135095b70be2e5?s=128&d=identicon&r=PG&f=1", "display_name": "Anton", "link": "https://stackoverflow.com/users/6630988/anton"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1469356692, "post_id": 38550790, "comment_id": 64493001, "body": "It&#39;s works! Thank you very much. Can you add this info to the answer?"}], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 0, "last_activity_date": 1469358638, "last_edit_date": 1469358638, "creation_date": 1469357580, "answer_id": 38551245, "question_id": 38550790, "link": "https://stackoverflow.com/questions/38550790/unresolved-name-binary-when-using-the-ftp-crate/38551245#38551245", "title": "Unresolved name `Binary` when using the ftp crate", "body": "<p>This is just a name resolution issue.</p>\n\n<p>You have declared a dependency on an external crate:</p>\n\n<pre><code>extern crate ftp;\n</code></pre>\n\n<p>And then imported <em>one</em> symbol from this crate:</p>\n\n<pre><code>use ftp::FtpStream;\n</code></pre>\n\n<p>Therefore, the symbol <code>::ftp::types::FileType::Binary</code> is not in scope.</p>\n\n<p>You can either use the full name, or modify your import:</p>\n\n<ul>\n<li><code>use ftp::{FtpStream, types}</code> means you can write <code>types::FileType::Binary</code></li>\n<li><code>use ftp::types::FileType</code> means you can write <code>FileType::Binary</code></li>\n<li><code>use ftp::types::FileType::Binary</code> means you can write <code>Binary</code></li>\n</ul>\n\n<p>It's really a matter of taste.</p>\n\n<p>Also note that if you wish you can put the <code>use</code> statement in the only function using <code>Binary</code> to tighten the scope of the import; it's something I like to make it clearer where the imports are used (and where they are not).</p>\n"}], "owner": {"reputation": 3, "user_id": 6630988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f52505bc437a114ea8135095b70be2e5?s=128&d=identicon&r=PG&f=1", "display_name": "Anton", "link": "https://stackoverflow.com/users/6630988/anton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 38551245, "answer_count": 1, "score": -1, "last_activity_date": 1469389499, "creation_date": 1469354261, "last_edit_date": 1469389499, "question_id": 38550790, "link": "https://stackoverflow.com/questions/38550790/unresolved-name-binary-when-using-the-ftp-crate", "title": "Unresolved name `Binary` when using the ftp crate", "body": "<p>I am downloading a file from a FTP server using \n<a href=\"https://crates.io/crates/ftp\" rel=\"nofollow\">the ftp crate</a>:</p>\n\n<pre><code>extern crate ftp;\nextern crate chrono;\n\nuse std::env;\nuse std::fs::File;\nuse std::str;\nuse std::io::{Result, Write};\nuse ftp::FtpStream;\nuse chrono::*;\n\n\nfn main() {\n\n    let args: Vec&lt;String&gt; = env::args().collect();\n    ftpgp(&amp;args[1], &amp;args[2], &amp;args[3], &amp;args[4]).unwrap_or_else(|err|\n        panic!(\"{}\", err)\n    );\n\n}\n\nfn ftpgp(addr: &amp;str, user: &amp;str, pass: &amp;str, remote_path: &amp;str,) -&gt; Result&lt;()&gt; {\n    let dt = Local::now();\n    let now = dt.format(\"%Y-%m-%d %H:%M:%S\").to_string();\n\n    let mut ftp_stream = try!(FtpStream::connect((addr, 21)));\n    try!(ftp_stream.login(user, pass));\n\n    ftp_stream.cwd(remote_path).unwrap();\n    let file_list = try!(ftp_stream.nlst(None));\n\n    let files: Vec&lt;String&gt; = file_list.into_iter()\n        .filter(|name| name.ends_with(\".zip\"))\n        .collect();\n\n    for file in files {\n        try!(ftp_stream.retr(file.as_str(), |stream| {\n            let mut file = File::create(file.clone()).unwrap();\n            let mut buf = [0; 2048];\n\n            loop {\n              match stream.read(&amp;mut buf) {\n                Ok(0) =&gt; break,\n                Ok(n) =&gt; file.write_all(&amp;buf[0..n]).unwrap(),\n                Err(err) =&gt; return Err(err)\n              };\n            }\n\n            Ok(())\n        }));\n        println!(\"{} Saving: {}\", now, file);\n\n        ftp_stream.rm(file.as_str()).unwrap();\n        println!(\"{} Delete from ftp: {}\", now, file);\n    }\n\n    ftp_stream.quit()\n}\n</code></pre>\n\n<p>But zip files are corrupt after downloading:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   unzip -t sample.zip \n   Archive:  sample.zip\n   warning [sample.zip]:  252314 extra bytes at beginning or within zipfile\n      (attempting to process anyway)\n   file #1:  bad zipfile offset (local header sig):  252314\n      (attempting to re-compensate)\n   testing: sample.pdf  \n      error:  invalid compressed data to inflate\n   file #2:  bad zipfile offset (local header sig):  67841095\n      (attempting to re-compensate)\n   file #2:  bad zipfile offset (local header sig):  67841095\n   file #3:  bad zipfile offset (local header sig):  68093906\n</code></pre>\n\n<p>I have <a href=\"http://mattnenterprise.github.io/rust-ftp/ftp/types/enum.FormatControl.html\" rel=\"nofollow\">set the type of file to be transferred</a>, but I don't know how.</p>\n\n<p>Like this:</p>\n\n<pre><code>ftp_stream.transfer_type(Binary);\n</code></pre>\n\n<p>is not working.</p>\n\n<pre><code>error: unresolved name `Binary`\n</code></pre>\n"}, {"tags": ["json", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1054, "user_id": 187769, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9d0faacd977c18b42da378bcfe38927c?s=128&d=identicon&r=PG", "display_name": "RandomInsano", "link": "https://stackoverflow.com/users/187769/randominsano"}, "edited": false, "score": 0, "creation_date": 1469370059, "post_id": 38548315, "comment_id": 64496796, "body": "Very good answer! I did noticed the stack while digging though but didn&#39;t spend the time to check how pulling data out multiple times or throwing errors would affect it. One problem though: This forces me into nightly mode because of serde_macros. Is there a way around that?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 1054, "user_id": 187769, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9d0faacd977c18b42da378bcfe38927c?s=128&d=identicon&r=PG", "display_name": "RandomInsano", "link": "https://stackoverflow.com/users/187769/randominsano"}, "edited": false, "score": 2, "creation_date": 1469387906, "post_id": 38548315, "comment_id": 64502675, "body": "See <a href=\"https://github.com/serde-rs/serde#using-serde-with-stable-rust-and-serde_codegen\" rel=\"nofollow noreferrer\">Using Serde with Stable Rust and serde_codegen</a>."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1469329101, "creation_date": 1469329101, "answer_id": 38548315, "question_id": 38547475, "link": "https://stackoverflow.com/questions/38547475/rustc-serialize-custom-enum-decoding/38548315#38548315", "title": "rustc-serialize custom enum decoding", "body": "<p><code>rustc-serialize</code>, or at least its JSON decoder, doesn't support that use case. If you look at the <a href=\"https://github.com/rust-lang-nursery/rustc-serialize/blob/08503bd31d02deb53e1c799bfd362b83708da3f6/src/json.rs#L2245-L2271\">implementation of <code>read_struct_field</code></a> (or any other method), you can see why: it uses a stack, but when it encounters an error, it doesn't bother to restore the stack to its original state, so when you try to decode the same thing differently, the decoder is operating on an inconsistent stack, eventually leading to an unexpected EOF value.</p>\n\n<p>I would recommend you look into <a href=\"https://serde-rs.github.io/serde/serde/index.html\">Serde</a> instead. Deserializing in Serde is different: instead of telling the decoder what type you're expecting, and having no clear way to recover if a value is of the wrong type, Serde calls into a <a href=\"https://serde-rs.github.io/serde/serde/de/trait.Visitor.html\">visitor</a> that can handle any of the types that Serde supports in the way it wants. This means that Serde will call different methods on the visitor depending on the actual type of the value it parsed. For example, we can handle integers to return an <code>OCar::Id</code> and objects to return an <code>OCar::Car</code>.</p>\n\n<p>Here's a full example:</p>\n\n<pre><code>#![feature(custom_derive, plugin)]\n#![plugin(serde_macros)]\n\nextern crate serde;\nextern crate serde_json;\n\nuse serde::de::{Deserialize, Deserializer, Error, MapVisitor, Visitor};\nuse serde::de::value::MapVisitorDeserializer;\n\n#[derive(Deserialize, Debug)]\nstruct Car {\n    id: u64,\n    color: String\n}\n\n#[derive(Debug)]\nenum OCar {\n    Id(u64),\n    Car(Car),\n}\n\nstruct OCarVisitor;\n\n#[derive(Deserialize, Debug)]\nstruct Person {\n    name: String,\n    car: OCar,\n}\n\nimpl Deserialize for OCar {\n    fn deserialize&lt;D&gt;(deserializer: &amp;mut D) -&gt; Result&lt;Self, D::Error&gt; where D: Deserializer {\n        deserializer.deserialize(OCarVisitor)\n    }\n}\n\nimpl Visitor for OCarVisitor {\n    type Value = OCar;\n\n    fn visit_u64&lt;E&gt;(&amp;mut self, v: u64) -&gt; Result&lt;Self::Value, E&gt; where E: Error {\n        Ok(OCar::Id(v))\n    }\n\n    fn visit_map&lt;V&gt;(&amp;mut self, visitor: V) -&gt; Result&lt;Self::Value, V::Error&gt; where V: MapVisitor {\n        Ok(OCar::Car(try!(Car::deserialize(&amp;mut MapVisitorDeserializer::new(visitor)))))\n    }\n}\n\nfn main() {\n    // Vector of both forms\n    let input = \"[{\\\"name\\\":\\\"pebbles\\\",\\\"car\\\":1},{\\\"name\\\":\\\"pebbles\\\",\\\"car\\\":{\\\"id\\\":1,\\\"color\\\":\\\"green\\\"}}]\";\n\n    let output: Vec&lt;Person&gt; = serde_json::from_str(input).unwrap();\n\n    println!(\"Debug: {:?}\", output);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Debug: [Person { name: \"pebbles\", car: Id(1) }, Person { name: \"pebbles\", car: Car(Car { id: 1, color: \"green\" }) }]\n</code></pre>\n\n<hr>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[dependencies]\nserde = \"0.7\"\nserde_json = \"0.7\"\nserde_macros = \"0.7\"\n</code></pre>\n"}], "owner": {"reputation": 1054, "user_id": 187769, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9d0faacd977c18b42da378bcfe38927c?s=128&d=identicon&r=PG", "display_name": "RandomInsano", "link": "https://stackoverflow.com/users/187769/randominsano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 269, "favorite_count": 0, "accepted_answer_id": 38548315, "answer_count": 1, "score": 4, "last_activity_date": 1469329101, "creation_date": 1469318549, "last_edit_date": 1469322079, "question_id": 38547475, "link": "https://stackoverflow.com/questions/38547475/rustc-serialize-custom-enum-decoding", "title": "rustc-serialize custom enum decoding", "body": "<p>I have a JSON structure where one of the fields of a struct could be either an object, or that object's ID in the database. Let's say the document looks like this with both possible formats of the struct:</p>\n\n<pre><code>[\n   {\n      \"name\":\"pebbles\",\n      \"car\":1\n   },\n   {\n      \"name\":\"pebbles\",\n      \"car\":{\n         \"id\":1,\n         \"color\":\"green\"\n      }\n   }\n]\n</code></pre>\n\n<p>I'm trying to figure out the best way to implement a custom decoder for this. So far, I've tried a few different ways, and I'm currently stuck here:</p>\n\n<pre><code>extern crate rustc_serialize;\n\nuse rustc_serialize::{Decodable, Decoder, json};\n\n#[derive(RustcDecodable, Debug)]\nstruct Car {\n  id: u64,\n  color: String\n}\n\n#[derive(Debug)]\nenum OCar {\n  Id(u64),\n  Car(Car)\n}\n\n#[derive(Debug)]\nstruct Person {\n  name: String,\n  car: OCar\n}\n\nimpl Decodable for Person {\n  fn decode&lt;D: Decoder&gt;(d: &amp;mut D) -&gt; Result&lt;Person, D::Error&gt; {\n    d.read_struct(\"root\", 2, |d| {\n      let mut car: OCar;\n\n      // What magic must be done here to get the right OCar?\n\n      /* I tried something akin to this:\n      let car = try!(d.read_struct_field(\"car\", 0, |r| {\n        let r1 = Car::decode(r);\n        let r2 = u64::decode(r);\n\n        // Compare both R1 and R2, but return code for Err() was tricky\n      }));\n      */\n\n      /* And this got me furthest */\n      match d.read_struct_field(\"car\", 0, u64::decode) {\n        Ok(x) =&gt; {\n          car = OCar::Id(x);\n        },\n        Err(_) =&gt; {\n          car = OCar::Car(try!(d.read_struct_field(\"car\", 0, Car::decode)));\n        }\n      }\n\n\n      Ok(Person {\n        name: try!(d.read_struct_field(\"name\", 0, Decodable::decode)),\n        car: car\n      })\n    })\n  }\n}\n\nfn main() {\n  // Vector of both forms\n  let input = \"[{\\\"name\\\":\\\"pebbles\\\",\\\"car\\\":1},{\\\"name\\\":\\\"pebbles\\\",\\\"car\\\":{\\\"id\\\":1,\\\"color\\\":\\\"green\\\"}}]\";\n\n  let output: Vec&lt;Person&gt; = json::decode(&amp;input).unwrap();\n\n  println!(\"Debug: {:?}\", output);\n}\n</code></pre>\n\n<p>The above panics with an EOL which is a sentinel value rustc-serialize uses on a few of its error enums. Full line is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread '&lt;main&gt;' panicked at 'called `Result::unwrap()` on an `Err` value: EOF', src/libcore/result.rs:785\n</code></pre>\n\n<p>What's the right way to do this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469307585, "post_id": 38546277, "comment_id": 64484528, "body": "No. Or maybe. Does writing <code>let a = f(); let b = c;</code> on one line count? Does writing <code>let c = f(); let (a, b) = (c, c);</code> on one line count? What would the advantage of <code>let in</code> or <code>where</code> be in Rust?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469307695, "post_id": 38546277, "comment_id": 64484555, "body": "(actually those would be useful as expressions as in <code>f(let a = g() in h(a, a))</code> or whatever, but used as statements like you want to use them, they don&#39;t have any advantage)"}, {"owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469307773, "post_id": 38546277, "comment_id": 64484571, "body": "It is a more a style question, I wanted to know if there was something similar in Rust. Here it&#39;s pure style because it won&#39;t change anything. However, as you said, it might be useful in some other cases."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 0, "last_activity_date": 1469309157, "creation_date": 1469309157, "answer_id": 38546561, "question_id": 38546277, "link": "https://stackoverflow.com/questions/38546277/local-let-like-in-caml/38546561#38546561", "title": "Local let like in caml", "body": "<p>Somehow, but don't do it.</p>\n\n<ul>\n<li><p>If your goal really is to write it on one line, just write <code>let a = f(); let b = a;</code> on one line.</p></li>\n<li><p>If your goal is to have a <code>let in</code> expression, you can do that with a block:</p></li>\n</ul>\n\n<p><pre><code>f({ let a = g(); h(a, a) });</pre></code></p>\n\n<p>would be equivalent to ocaml:</p>\n\n<pre><code>f(let a = g() in h(a, a));\n</code></pre>\n\n<p>None of them are really idiomatic though.</p>\n"}, {"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469310015, "post_id": 38546621, "comment_id": 64485091, "body": "Why use a trait for that? You could as well have written <code>as_2tuple(get_value())</code> with <code>fn as_2tuple&lt;T&gt;(v: T) -&gt; (T, T) { (v, v) }</code>."}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469310282, "post_id": 38546621, "comment_id": 64485151, "body": "A trait allows to use method syntax call"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469310832, "post_id": 38546621, "comment_id": 64485258, "body": "if I understand your point correctly, you never write any free function and always make dummy traits just to use method call syntax?"}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469342532, "post_id": 38546621, "comment_id": 64490103, "body": "@mcarton It seems I do not understand your point of view. Which traits are &quot;dummy&quot; and which are not?  This particular trait does exactly what Traits are used. It provides new functionality for the type for which it is implemented. Of course pointless to make a fuss if you need to copy a value once. However syntactically this method is much more convenient."}], "tags": [], "owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "is_accepted": false, "score": 1, "last_activity_date": 1469343905, "last_edit_date": 1469343905, "creation_date": 1469309623, "answer_id": 38546621, "question_id": 38546277, "link": "https://stackoverflow.com/questions/38546277/local-let-like-in-caml/38546621#38546621", "title": "Local let like in caml", "body": "<p>You can define trait that converts value to a tuple and implement it for all copyable types:</p>\n\n<pre><code>trait AsTuple where Self:Copy{\n    #[inline]\n    fn as_tuple(self) -&gt; (Self, Self) {(self, self)}\n}\n\nimpl&lt;T:Copy&gt; AsTuple for T {}\n\n\n\nfn get_value() -&gt; u32{\n    42\n}\n\nfn main() {\n    let (a, b) = get_value().as_tuple();\n    println!(\"{} {}\", a,b);\n}\n</code></pre>\n\n<p>Similarly, you can make a trait to call a function with the same arguments:</p>\n\n<pre><code>trait ApplySame where Self:Copy{\n    #[inline]\n    fn apply_same&lt;R, F: Fn(Self, Self) -&gt; R&gt;(self, f:F) -&gt; R {f(self,self)}\n}\n\nimpl&lt;T:Copy&gt; ApplySame for T {}\n\nfn sum_it(a:u16, b: u16) -&gt; u16 { a + b }\n\nfn print_me(a:u8, b:u8){\n    println!(\"a:{}, b:{}\", a, b);\n}\n\nfn get_value() -&gt; u16 { 21 }\n\nfn main() {\n    println!(\"{}\", get_value().apply_same(sum_it));\n    1u8.apply_same(print_me);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 8, "last_activity_date": 1469315537, "creation_date": 1469315537, "answer_id": 38547216, "question_id": 38546277, "link": "https://stackoverflow.com/questions/38546277/local-let-like-in-caml/38547216#38547216", "title": "Local let like in caml", "body": "<p>You can use a block to introduce a variable with a restricted scope.</p>\n\n<pre><code>let (mut a, mut b) = { let c = f(); (c, c) };\n</code></pre>\n\n<p>Or, more legibly:</p>\n\n<pre><code>let (mut a, mut b) = {\n    let c = f();\n    (c, c)\n};\n</code></pre>\n\n<p>Blocks are expressions that evaluate to the last expression in their body, unless that expression is followed by a semicolon, in which case the block evaluates to <code>()</code>.</p>\n"}], "owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1469343905, "creation_date": 1469306787, "last_edit_date": 1469315586, "question_id": 38546277, "link": "https://stackoverflow.com/questions/38546277/local-let-like-in-caml", "title": "Local let like in caml", "body": "<p>I am trying to learn the Rust language and its coding style. I want to use several variables which are independent, but are initialized with the same value which come from a function <code>f</code>:</p>\n\n<pre><code>let (mut a, mut b) = (f(), f());\n</code></pre>\n\n<p>However, it calls f two times, so it is better to do this:</p>\n\n<pre><code>let mut a = f()\nlet mut b = a\n</code></pre>\n\n<p>Is it possible to do it in one line like in caml?</p>\n\n<pre class=\"lang-ml prettyprint-override\"><code>let (a,b) = (c,c) where c = f()\n(* or *)\nlet c = f() in let (a,b) = c;\n</code></pre>\n"}, {"tags": ["rust", "matching"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1469301782, "post_id": 38545609, "comment_id": 64483006, "body": "as described in the error the syntax is experimental, so you&#39;d better not use it for now. Why you want to use the slice pattern?"}, {"owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1469302313, "post_id": 38545609, "comment_id": 64483160, "body": "Does it mean it is not implemented yet? I turns out that I don&#39;t need to do it anymore because I found a better solution for my problem. However, I was still curious about why it is not working. And I might need to use it some day."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1469302550, "post_id": 38545609, "comment_id": 64483226, "body": "@x4rkz: Experimental means that it is not yet decided whether it would be implemented as is, implemented in another way, or not implemented at all. It&#39;s in flux."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1469302564, "post_id": 38545609, "comment_id": 64483229, "body": "It is implemented but the semantics could change anytime. To prevent accidentally breaking your code, you need to explicitly tell the compiler to opt-in for these unstable features to use it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469315489, "post_id": 38545609, "comment_id": 64486263, "body": "Did you go look at <a href=\"https://github.com/rust-lang/rust/issues/23121\" rel=\"nofollow noreferrer\">issue 23121</a>, as the error message says?"}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 6, "last_activity_date": 1575905195, "last_edit_date": 1575905195, "creation_date": 1469303700, "answer_id": 38545898, "question_id": 38545609, "link": "https://stackoverflow.com/questions/38545609/pattern-matching-on-slices/38545898#38545898", "title": "Pattern matching on slices", "body": "<p>As the error tells you, slice pattern syntax is experimental. This means either the semantics are not clear or the syntax might change in the future. As a result, you need a nightly version of the compiler and to explicitly request that feature:</p>\n\n<pre><code>#![feature(slice_patterns)]\n\nfn main() {\n    match \" \\\"\".as_bytes() {\n        &amp;[space, quote] =&gt; println!(\"space: {:?}, quote: {:?}\", space, quote),\n        _ =&gt; println!(\"the slice lenght is not 2!\"),\n    }\n}\n</code></pre>\n\n<p>Also note that you can't just write <code>&amp;[space, quote] = whatever</code> anyway because there is a possibility that <code>whatever</code> is not the right length. To make the pattern matching exhaustive, you need a <code>_</code> case or a case with <code>..</code>. What you tried would give another error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0005]: refutable pattern in local binding: `&amp;[]`, `&amp;[_]` and `&amp;[_, _, _, ..]` not covered\n --&gt; src/main.rs:4:9\n  |\n4 |     let &amp;[space, quote] = \" \\\"\".as_bytes();\n  |         ^^^^^^^^^^^^^^^ patterns `&amp;[]`, `&amp;[_]` and `&amp;[_, _, _, ..]` not covered\n  |\n  = note: `let` bindings require an \"irrefutable pattern\", like a `struct` or an `enum` with only one variant\n  = note: for more information, visit https://doc.rust-lang.org/book/ch18-02-refutability.html\nhelp: you might want to use `if let` to ignore the variant that isn't matched\n  |\n4 |     if let &amp;[space, quote] = \" \\\"\".as_bytes() { /* */ }\n</code></pre>\n\n<hr>\n\n<p>As of <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1260-2018-05-100\" rel=\"nofollow noreferrer\">Rust 1.26</a> you <em>can</em> pattern match on an array instead of a slice. If you <a href=\"https://stackoverflow.com/q/48129565/155423\">convert the slice to an array</a>, you can then match on it:</p>\n\n<pre><code>use std::convert::TryInto;\n\nfn main() {\n    let bytes = \" \\\"\".as_bytes();\n\n    let bytes: &amp;[_; 2] = bytes.try_into().expect(\"Must have exactly two bytes\");\n    let &amp;[space, quote] = bytes;\n\n    println!(\"space: {:?}, quote: {:?}\", space, quote);\n}\n</code></pre>\n"}], "owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2446, "favorite_count": 0, "accepted_answer_id": 38545898, "answer_count": 1, "score": 3, "last_activity_date": 1575905195, "creation_date": 1469301556, "last_edit_date": 1469444252, "question_id": 38545609, "link": "https://stackoverflow.com/questions/38545609/pattern-matching-on-slices", "title": "Pattern matching on slices", "body": "<p>I did something like this, which works:</p>\n\n<pre><code>let s = \" \\\"\".as_bytes();\nlet (space, quote) = (s[0], s[1]);\n</code></pre>\n\n<p>I wanted to do something like this</p>\n\n<pre><code>&amp;[space, quote] = \" \\\"\".as_bytes();\n</code></pre>\n\n<p>But it gives me the error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>slice pattern syntax is experimental (see issue #23121)\n</code></pre>\n\n<p>Is it possible to do something similar?</p>\n"}, {"tags": ["size", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1469297126, "post_id": 38544917, "comment_id": 64481596, "body": "Interesting issue, however diagnosing this would be easier with a breakdown of <i>what</i> is taking the space here, and this is not apparent in the question (then again, I suppose if you had the breakdown the question would be quite different). As a result, it&#39;s unclear to me what kind of answer you are hoping for."}, {"owner": {"reputation": 307, "user_id": 1018314, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/EBFNH.jpg?s=128&g=1", "display_name": "sourtin", "link": "https://stackoverflow.com/users/1018314/sourtin"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1469297489, "post_id": 38544917, "comment_id": 64481712, "body": "@MatthieuM. I guess I was wondering if there are any unexpected things that might happen behind the scenes to increase the space used. I noticed in a <a href=\"https://github.com/huonw/unicode_names\" rel=\"nofollow noreferrer\">similar library</a> that he used <code>#[inline(never)]</code> on his data, but this is not legal syntax anymore. Would it be possible that rust might inline this data into each function I use it in? What tools/approaches can I use to diagnose space breakdown in a library? Sorry if the question is too unclear to be answered!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1469297732, "post_id": 38544917, "comment_id": 64481788, "body": "On linux I would use <a href=\"http://www.thegeekstuff.com/2012/03/linux-nm-command\" rel=\"nofollow noreferrer\">nm</a>, however it would need some scripting on the output to get the size of each symbol and grouping the symbols per source."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1469312354, "post_id": 38544917, "comment_id": 64485623, "body": "Is this a standard Rust rlib?  Some other things to try (on Linux): <code>ar tv foo.rlib</code> show the archive members including sizes, and <code>objdump -wh foo.rlib</code> will show the summary information for the contained object file(s)."}, {"owner": {"reputation": 307, "user_id": 1018314, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/EBFNH.jpg?s=128&g=1", "display_name": "sourtin", "link": "https://stackoverflow.com/users/1018314/sourtin"}, "edited": false, "score": 0, "creation_date": 1469313306, "post_id": 38544917, "comment_id": 64485842, "body": "Thank you both for all your help, nm and ar have helped me to explain everything about where the extra space comes from!"}], "answers": [{"tags": [], "owner": {"reputation": 307, "user_id": 1018314, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/EBFNH.jpg?s=128&g=1", "display_name": "sourtin", "link": "https://stackoverflow.com/users/1018314/sourtin"}, "is_accepted": true, "score": 0, "last_activity_date": 1469314794, "last_edit_date": 1592644375, "creation_date": 1469314794, "answer_id": 38547134, "question_id": 38544917, "link": "https://stackoverflow.com/questions/38544917/static-data-heavy-rust-library-seems-bloated/38547134#38547134", "title": "Static data-heavy Rust library seems bloated", "body": "<p><em>Thanks to Matthieu M. and Chris Emerson for pointing me towards the solution. This is a summary of the updates in the question, sorry for the duplication!</em></p>\n<p>It seems that there are two reasons for the supposed bloat:</p>\n<ol>\n<li><p>The <code>.rlib</code> file outputted is not a pure object file, but is an <code>ar</code> archive file. Usually such a file would consist entirely of one or more object files, but rust also includes metadata. Part of the reason for this seems to be to obviate the need for separate header files. This accounted for around 40% of the final filesize.</p>\n</li>\n<li><p>My calculations turned out to not be accurate for some of the tables, which also happened to be the largest ones. Using <code>nm</code> I was able to find that for normal tables such as <code>UCD_CAT: &amp;'static [((u8,u8,u8), (u8,u8,u8), UnicodeCategory)]</code>, the size was 7 bytes for each item (which is actually <em>less</em> than I originally anticipated, assuming 8 bytes for alignment). The total of all these tables was about 230kB, and the object file including just these came in at 260kB (after extraction), so this was all consistent.</p>\n<p>However, examining the <code>nm</code> output more closely for the other tables (such as <code>UCD_DECOMP_MAP: &amp;'static [((u8,u8,u8),&amp;'static [(u8,u8,u8)])]</code>) was more difficult because they appear as anonymous borrowed objects. Nevertheless, it turned out that each <code>((u8,u8,u8),&amp;'static [(u8,u8,u8)])</code> actually takes up 24 bytes: 3 bytes for the first tuple, 5 bytes of padding, and an unexpected 16 bytes for the pointer. I believe this is because the pointer also includes the size of the referenced array. This added around a megabyte of bloat to the library, but does seem to account for the entire filesize.</p>\n</li>\n</ol>\n"}], "owner": {"reputation": 307, "user_id": 1018314, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/EBFNH.jpg?s=128&g=1", "display_name": "sourtin", "link": "https://stackoverflow.com/users/1018314/sourtin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 148, "favorite_count": 0, "accepted_answer_id": 38547134, "answer_count": 1, "score": 2, "last_activity_date": 1469315775, "creation_date": 1469296831, "last_edit_date": 1469315775, "question_id": 38544917, "link": "https://stackoverflow.com/questions/38544917/static-data-heavy-rust-library-seems-bloated", "title": "Static data-heavy Rust library seems bloated", "body": "<p>I've been developing a Rust library recently to try to provide fast access to a large database (the Unicode character database, which as a flat XML file is 160MB). I also want it to have a small footprint so I've used various approaches to reduce the size. The end result is that I have a series of static slices that look like:</p>\n\n<pre><code>#[derive(Clone,Copy,Eq,PartialEq,Debug)]\npub enum UnicodeCategory {\n    UppercaseLetter,\n    LowercaseLetter,\n    TitlecaseLetter,\n    ModifierLetter,\n    OtherLetter,\n    NonspacingMark,\n    SpacingMark,\n    EnclosingMark,\n    DecimalNumber,\n    // ...\n}\n\npub static UCD_CAT: &amp;'static [((u8, u8, u8), (u8, u8, u8), UnicodeCategory)] =\n    &amp;[((0, 0, 0), (0, 0, 31), UnicodeCategory::Control),\n      ((0, 0, 32), (0, 0, 32), UnicodeCategory::SpaceSeparator),\n      ((0, 0, 33), (0, 0, 35), UnicodeCategory::OtherPunctuation),\n      /* ... */];\n\n// ...\n\npub static UCD_DECOMP_MAP: &amp;'static [((u8, u8, u8), &amp;'static [(u8, u8, u8)])] =\n    &amp;[((0, 0, 160), &amp;[(0, 0, 32)]),\n      ((0, 0, 168), &amp;[(0, 0, 32), (0, 3, 8)]),\n      ((0, 0, 170), &amp;[(0, 0, 97)]),\n      ((0, 0, 175), &amp;[(0, 0, 32), (0, 3, 4)]),\n      ((0, 0, 178), &amp;[(0, 0, 50)]),\n      /* ... */];\n</code></pre>\n\n<p>In total, all the data should only take up around 600kB max (assuming extra space for alignment etc), but the library produced is 3.3MB in release mode. The source code itself (almost all data) is 2.6MB, so I don't understand why the result would be more. I don't think the extra size is intrinsic as the size was &lt;50kB at the beginning of the project (when I only had ~2kB of data). If it makes a difference, I'm also using the <code>#![no_std]</code> feature.</p>\n\n<p>Is there any reason for the extra binary bloat, and is there a way to reduce the size? In theory I don't see why I shouldn't be able to reduce the library to a megabyte or less.</p>\n\n<p>As per Matthieu's suggestion, I tried analysing the binary with <code>nm</code>.</p>\n\n<p>Because all my tables were represented as borrowed slices, this wasn't very useful for calculating table sizes as they were all in anonymous <code>_ref</code>s. What I could determine was the maximum address, 0x1208f8, which would be consistent with a filesize of ~1MB rather than 3.3MB. I also looked through the hex dump to see if there were any null blocks that might explain it, but there weren't.</p>\n\n<p>To see if it was the borrowed slices that were the problem, I turned them into non-borrowed slices (<code>[T; N]</code> form). The filesize didn't change much, but now I could interpret the <code>nm</code> data quite easily. Weirdly, the tables took up exactly how much I expected them to (even more weirdly, they matched my lower bounds when not accounting for alignment, and there was no space between the tables).</p>\n\n<p>I also looked at the tables with nested borrowed slices, e.g. <code>UCD_DECOMP_MAP</code> above. When I removed all of these (about 2/3 of the data), the filesize was ~1MB when it should have only been ~250kB (by my calculations and the highest <code>nm</code> address, 0x3d1d0), so it doesn't look like these tables were the problem either.</p>\n\n<p>I tried extracting the individual files from the .rlib file (which is a simple ar-format archive). It turns out that 40% of the library is just metadata files, and that the actual object file is 1.9MB. Further, when I do this to the library without the borrowed references the object file is 261kB! I then went back to the original library and looked at the sizes of the individual <code>_ref</code>s and found that for a table like <code>UCD_DECOMP_MAP: &amp;'static [((u8,u8,u8),&amp;'static [(u8,u8,u8)])]</code>, each value of type <code>((u8,u8,u8),&amp;'static [(u8,u8,u8)])</code> takes up 24 bytes (3 bytes for the u8 triplet, 5 bytes of padding and 16 bytes for the pointer), and that as a result these tables take up a lot more room than I would have thought. I think I can now fully account for all the filesize.</p>\n\n<p>Of course, 3MB is still quite small, I just wanted to keep the file as small as possible!</p>\n"}, {"tags": ["rust", "expression"], "answers": [{"comments": [{"owner": {"reputation": 327, "user_id": 4549287, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a31748d17948cce3da5972f46ab40613?s=128&d=identicon&r=PG&f=1", "display_name": "darthfather", "link": "https://stackoverflow.com/users/4549287/darthfather"}, "edited": false, "score": 0, "creation_date": 1469287216, "post_id": 38543302, "comment_id": 64478469, "body": "But b will have the value of 7, what happens to a ?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 327, "user_id": 4549287, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a31748d17948cce3da5972f46ab40613?s=128&d=identicon&r=PG&f=1", "display_name": "darthfather", "link": "https://stackoverflow.com/users/4549287/darthfather"}, "edited": false, "score": 2, "creation_date": 1469287570, "post_id": 38543302, "comment_id": 64478565, "body": "Assignment expressions evaluate to <code>()</code>. <code>b = n</code> is an assignment expression. Therefore, the value of <code>a</code> is <code>()</code>."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 3, "last_activity_date": 1469287077, "creation_date": 1469287077, "answer_id": 38543302, "question_id": 38543288, "link": "https://stackoverflow.com/questions/38543288/rust-empty-value-for-expression/38543302#38543302", "title": "Rust empty value for expression", "body": "<p>Unlike other languages like C, an assignment expression does not evaluate to the assigned value; assignments always evaluate to <code>()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 5, "last_activity_date": 1469287236, "creation_date": 1469287236, "answer_id": 38543324, "question_id": 38543288, "link": "https://stackoverflow.com/questions/38543288/rust-empty-value-for-expression/38543324#38543324", "title": "Rust empty value for expression", "body": "<p>Unlike C and some other languages, the assignment expression (<code>b = n</code> here) returns <code>()</code> in Rust.</p>\n\n<p>Also note that <code>let a = ...;</code> does not actually mutate <code>a</code> but instead creates a new <code>a</code> which shadows the previous one and is assigned <code>()</code>.</p>\n"}], "owner": {"reputation": 327, "user_id": 4549287, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/a31748d17948cce3da5972f46ab40613?s=128&d=identicon&r=PG&f=1", "display_name": "darthfather", "link": "https://stackoverflow.com/users/4549287/darthfather"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 708, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1469315387, "creation_date": 1469286962, "last_edit_date": 1469315387, "question_id": 38543288, "link": "https://stackoverflow.com/questions/38543288/rust-empty-value-for-expression", "title": "Rust empty value for expression", "body": "<p>Why am I getting an empty value in variable <code>a</code> with this code? \nAlso, without the <code>{:?}</code> formatting this does not compile?</p>\n\n<pre><code>fn main() {\n    let mut a = 5;\n    let mut b = 6;\n    let n = 7;\n    let a = b = n;\n    println!(\"{:?}\", a);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1469274862, "last_edit_date": 1469274862, "creation_date": 1469274366, "answer_id": 38541427, "question_id": 38541122, "link": "https://stackoverflow.com/questions/38541122/similar-implementations-of-one-trait-for-many-structs/38541427#38541427", "title": "Similar implementations of one trait for many structs", "body": "<p>You could pass the \"conditional\" parts to your macros as separate parameters. Along the lines of:</p>\n\n<pre><code>struct S1 {n1 : isize}\nstruct S2 {n2 : isize}\n\ntrait T {\n    fn print_me(self);\n}\n\nmacro_rules! doit {\n    ($t: ty, $member: ident) =&gt; (\n        impl T for $t {\n            fn print_me(self) {\n                println!(\"{}\", self.$member);\n            }\n        }\n    )\n}\n\ndoit!(S1, n1);\ndoit!(S2, n2);\n\nfn main() {\n    let s1 = S1 {n1: 1};\n    let s2 = S2 {n2: 2};\n    s1.print_me();\n    s2.print_me();\n}\n</code></pre>\n\n<p>If the \"custom part\" is bigger than some simple statements, you may consider extracting the custom part into an own trait, as suggested by @Chris Emerson.</p>\n\n<p>Alternatively, you might try to write a generic function taking a something satisfying your trait and the custom part as a closure. This, however, may involve modifying your trait.</p>\n"}, {"comments": [{"owner": {"reputation": 61, "user_id": 3920439, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e188dbadbd868a4b49e7d553e3fa6649?s=128&d=identicon&r=PG&f=1", "display_name": "ThePianoDentist", "link": "https://stackoverflow.com/users/3920439/thepianodentist"}, "edited": false, "score": 0, "creation_date": 1469311750, "post_id": 38541476, "comment_id": 64485490, "body": "thanks. this seems very sensible.  I could also add the print something function, to the Change Decision trait and call it.  This would mean I wouldnt need to add a new trait for it, however I&#39;m not sure if multiple functions for one trait is good practice/easy to read"}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 2, "last_activity_date": 1469274647, "creation_date": 1469274647, "answer_id": 38541476, "question_id": 38541122, "link": "https://stackoverflow.com/questions/38541122/similar-implementations-of-one-trait-for-many-structs/38541476#38541476", "title": "Similar implementations of one trait for many structs", "body": "<p>The way I would handle this is to use another trait to handle the differing parts.  Something like:</p>\n\n<pre><code>trait PrintSomething {\n    fn print_something(&amp;self, action: Action);\n}\n\nimpl PrintSomething for Hero {\n    fn print_something(&amp;self, action: Action) {\n        println!(\"{}: {:?}\", self.name, action);\n    }\n}\n\nimpl PrintSomething for Team {\n    fn print_something(&amp;self, action: Action) {\n        println!(\"{}: {:?}\", self.side, action);\n    }\n}\n\n// Now the macro would expand to:\nimpl ChangeDecision for Hero {\n    fn change_decision(&amp;mut self){\n        self.should_change_decision = false;\n        let rand_num = rand::thread_rng().gen_range(1, 101) as f32 / 100.;\n        let mut prob_counter = 0.0;\n        for (action, prob) in &amp;mut self.decisions.iter(){\n            prob_counter += *prob;\n            match prob_counter{\n                p if rand_num &gt; p =&gt; {},\n                _ =&gt; {\n                    self.print_something(action);\n                    self.current_decision = *action;\n                    break\n                 },\n            }\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 61, "user_id": 3920439, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e188dbadbd868a4b49e7d553e3fa6649?s=128&d=identicon&r=PG&f=1", "display_name": "ThePianoDentist", "link": "https://stackoverflow.com/users/3920439/thepianodentist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 33, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1469315337, "creation_date": 1469272421, "last_edit_date": 1469315337, "question_id": 38541122, "link": "https://stackoverflow.com/questions/38541122/similar-implementations-of-one-trait-for-many-structs", "title": "Similar implementations of one trait for many structs", "body": "<p>In the below code the only different in implementation is in the <code>println!</code>.</p>\n\n<p>It feels like there should be a way for me not to have to write out two completely different implementations, however I have not found a way.</p>\n\n<pre><code>pub trait ChangeDecision{\n    fn change_decision(&amp;mut self);\n}\n\nimpl ChangeDecision for Hero{\n    fn change_decision(&amp;mut self){\n        self.should_change_decision = false;\n        let rand_num = rand::thread_rng().gen_range(1, 101) as f32 / 100.;\n        let mut prob_counter = 0.0;\n        for (action, prob) in &amp;mut self.decisions.iter(){\n            prob_counter += *prob;\n            match prob_counter{\n                p if rand_num &gt; p =&gt; {},\n                _ =&gt; {println!(\"{}: {:?}\", self.name, action); self.current_decision = *action; break},\n            }\n        }\n    }\n}\n\nimpl ChangeDecision for Team{\n    fn change_decision(&amp;mut self){\n        self.should_change_decision = false;\n        let rand_num = rand::thread_rng().gen_range(1, 101) as f32 / 100.;\n        let mut prob_counter = 0.0;\n        for (action, prob) in &amp;mut self.decisions.iter(){\n            prob_counter += *prob;\n            match prob_counter{\n                p if rand_num &gt; p =&gt; {},\n                _ =&gt; {println!(\"{:?}: {:?}\", self.side, action); self.current_decision = *action; break},\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>When the implementations are exactly identical I can use a macro to implement for both. i.e.</p>\n\n<pre><code>macro_rules! impl_SimilarStuff {\n    ($T:ident) =&gt; {\n        impl SimilarStuff for $T{\n            fn my_func(&amp;mut self){\n                true\n            }\n        }\n     }\n}\n\nimpl_SimilarStuff!(ThingOne);\nimpl_SimilarStuff!(ThingTwo);\n</code></pre>\n\n<p>However I could not find any examples of 'macro conditionality'</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 6949, "user_id": 2019689, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/qqIhq.jpg?s=128&g=1", "display_name": "NoNameProvided", "link": "https://stackoverflow.com/users/2019689/nonameprovided"}, "edited": false, "score": 1, "creation_date": 1469267629, "post_id": 38540327, "comment_id": 64473467, "body": "Thanks! I understand the purpose of using <code>::</code> to access functions in a namespace. But I don&#39;t exactly understand the reason of using <code>:</code>. I googled type ascription and I roughly understand what it means, but could you provide some example here to show what would be the purpose of using one semicolon in Rust?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 6949, "user_id": 2019689, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/qqIhq.jpg?s=128&g=1", "display_name": "NoNameProvided", "link": "https://stackoverflow.com/users/2019689/nonameprovided"}, "edited": false, "score": 2, "creation_date": 1469267976, "post_id": 38540327, "comment_id": 64473541, "body": "@NoNameProvided Sometime a type can&#39;t be inferred. Type ascription makes it easier to specify. <a href=\"https://play.rust-lang.org/?gist=5306c9bb7e2c83070b5dcd48be7d4eb2&amp;version=nightly&amp;backtrace=0\" rel=\"nofollow noreferrer\">Here&#39;s an example.</a>"}, {"owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 0, "creation_date": 1469459766, "post_id": 38540327, "comment_id": 64532260, "body": "@Veedrac what&#39;s the difference between that and <code>default::Default::&lt;String&gt;()</code>?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 0, "creation_date": 1469464875, "post_id": 38540327, "comment_id": 64535443, "body": "@NateMara Using <code>::&lt;String&gt;</code> specifies the template parameters of <code>Default::default</code>, whereas <code>: Default</code> specifies the return type. In this trivial case those happen to be one and the same, but that&#39;s not always the case. Type ascription also looks nicer, IMO."}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 6, "last_activity_date": 1469266824, "creation_date": 1469266824, "answer_id": 38540327, "question_id": 38540276, "link": "https://stackoverflow.com/questions/38540276/how-to-assign-function-return-value-to-a-variable-in-rust/38540327#38540327", "title": "How to assign function return value to a variable in Rust?", "body": "<p>You're looking for</p>\n\n<pre><code>let arguments: Args = env::args();\n</code></pre>\n\n<p>Using a single colon in an expression is type ascription, and currently you can only specify types on variable bindings. Note that the <code>: Args</code> annotation on this line is optional.</p>\n\n<p>Using two colons allows you to access items within a namespace, so one wants <code>env::args</code>, not <code>env:args</code>.</p>\n"}], "owner": {"reputation": 6949, "user_id": 2019689, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/qqIhq.jpg?s=128&g=1", "display_name": "NoNameProvided", "link": "https://stackoverflow.com/users/2019689/nonameprovided"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1164, "favorite_count": 0, "accepted_answer_id": 38540327, "answer_count": 1, "score": 1, "last_activity_date": 1469315300, "creation_date": 1469266381, "last_edit_date": 1469315300, "question_id": 38540276, "link": "https://stackoverflow.com/questions/38540276/how-to-assign-function-return-value-to-a-variable-in-rust", "title": "How to assign function return value to a variable in Rust?", "body": "<p>I just started to play around with Rust. Trying to run the code snippet below will result in a compile time error with the message: <code>type ascription is experimental</code>.</p>\n\n<pre><code>use std::env;\n\nfn main() {\n    let arguments: Args = env:args();\n}\n</code></pre>\n\n<p>The docs for <a href=\"https://doc.rust-lang.org/std/env/fn.args.html\" rel=\"nofollow\"><code>env:args</code></a> shows that the function returns an <code>Args</code> struct and the <a href=\"https://doc.rust-lang.org/book/variable-bindings.html#type-annotations\" rel=\"nofollow\">Variable Binding section</a> shows that I can set type of the variables with <code>let varname: type = value</code>. How I can properly assign a return value of a function to a variable? </p>\n"}, {"tags": ["documentation", "rust"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469265399, "post_id": 38536883, "comment_id": 64472912, "body": "If you want the documentation separate, can&#39;t you just write it separately in a non-Rust-specific tool?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6597987"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469275038, "post_id": 38536883, "comment_id": 64475386, "body": "I can. Do you know a good tool for that?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469280143, "post_id": 38536883, "comment_id": 64476666, "body": "There are lots of good tools, but they&#39;re highly specific to personal taste - it isn&#39;t really a Rust question anymore.  :-)"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469286131, "post_id": 38536883, "comment_id": 64478159, "body": "@NorabX If you want to write your doc in markdown files, there is <a href=\"https://github.com/brson/rust-skeptic\" rel=\"nofollow noreferrer\">rust-skeptic</a> to test them."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6597987"}, "edited": false, "score": 1, "creation_date": 1469238387, "post_id": 38537068, "comment_id": 64468047, "body": "That&#39;s a real shame! Because I like to separate all coding elements, like tests, code and documentation. I don&#39;t understand the convention to write the documentation in the code. Comments for complex functions are helpful, but not the documention comments. I think it makes the code unreadable. Nevertheless , much thanks."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1469270720, "post_id": 38537068, "comment_id": 64474209, "body": "@NarabX Having the documentation near what it documents also helps keeping it up-to-date. I can very easily imagine someone change the signature of a function and forget to update it in the doc. This problem is mitigated when the doc is 2 lines before the function. And if you find the code unreadable with too much doc, just configure you text editor to fold documentation comments by default :)"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6597987"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469274948, "post_id": 38537068, "comment_id": 64475359, "body": "@mcarton I understand what you mean, but as far as my experience goes, people ignore the doc even if it is before the function ;) and sometimes I have no access to my favorite and configured text editor. So, to fold the comments is a good workaround, but it is not what I want. Thank you for your feedback."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1469286869, "post_id": 38537068, "comment_id": 64478385, "body": "@NorabX: Note that Rust has a specific trick to help avoiding out-dated code samples =&gt; code samples are compiled and tested along the rest of the code."}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1469489127, "post_id": 38537068, "comment_id": 64546847, "body": "There have been plans to let <code>cargo doc</code> generate arbitrary markdown, but nobody has been able to land the PR yet."}], "tags": [], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "is_accepted": false, "score": 3, "last_activity_date": 1469259714, "last_edit_date": 1469259714, "creation_date": 1469234895, "answer_id": 38537068, "question_id": 38536883, "link": "https://stackoverflow.com/questions/38536883/is-it-possible-to-separate-source-code-from-documentation-comments-in-rust/38537068#38537068", "title": "Is it possible to separate source code from documentation comments in Rust?", "body": "<p>I'm afraid there's none. I am following Rust ecosystem and I have never seen even a mention of anything like that. On related note, I think the comments should be in the code, and if you writing open source code in Rust I'd advise to stick with the standard ways of doing things, just for the sake of other people. Eg. I am a vivid advocate of tab indentation as opposed to spaces (\"Indent with tabs, align with spaces\"), yet because Rust community settled on (clearly inferior :) ) spaces, I use spaces in my Rust projects. It doesn't fit my preferences, but after getting over it, it makes mine and other people lives easier when cooperating.</p>\n\n<p>As a workaround, I would suggest making your editor just aggressively fold comments.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6597987"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "closed_date": 1515541947, "answer_count": 1, "score": 2, "last_activity_date": 1469259714, "creation_date": 1469232763, "last_edit_date": 1469236686, "question_id": 38536883, "link": "https://stackoverflow.com/questions/38536883/is-it-possible-to-separate-source-code-from-documentation-comments-in-rust", "closed_reason": "Not suitable for this site", "title": "Is it possible to separate source code from documentation comments in Rust?", "body": "<p>I like good documentations for source code, but I hate the documentation comments in the code. I found solutions to separate the code from the documentation for other languages, but not for Rust. So, is any solution to separate the source code from the documentation in Rust out there?</p>\n"}, {"tags": ["string", "vector", "rust"], "comments": [{"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1469235380, "post_id": 38536207, "comment_id": 64467622, "body": "Just another example how Rust makes people better programmers. I just don&#39;t understand the downvotes. It&#39;s a legitimate question and common misconception."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1469315572, "post_id": 38536207, "comment_id": 64486276, "body": "It wouldn&#39;t hurt for this question to be improved a bit, perhaps rephrasing it from &quot;how does the Rust [] operator work with strings&quot; to &quot;how are Rust strings sliced and how are their characters indexed&quot;. There are also a few statements that contradict the given link and would easily attract downvotes."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1469315889, "post_id": 38536207, "comment_id": 64486338, "body": "@dpc.pw maybe because there are many questions already asked here on SO that explain this if the OP could search a bit harder, or show any amount of the effort that they put in before asking the question."}], "answers": [{"comments": [{"owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "edited": false, "score": 0, "creation_date": 1469259074, "post_id": 38536587, "comment_id": 64471444, "body": "Ah ok, I understood: strings cannot be arrays because each letter can be either a c++ char (1 byte) or a Unicode character (4 bytes). So it is a sequence (a linked list ?). str.chars() is also a sequence, but str.bytes() is an array. What if I would like to use a string as an array, can I use UTF-8 arrays ?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 3, "creation_date": 1469264182, "post_id": 38536587, "comment_id": 64472601, "body": "UTF-8 is a variable-length encoding of Unicode codepoints into bytes.  Each codepoint can end up as 1, 2, 3, or 4 bytes.  It happens that ASCII characters (as mostly used in English) end up as 1 byte (which is the same value as ASCII)."}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1469390523, "post_id": 38536587, "comment_id": 64503441, "body": "A minor nitpick: Unicode scalar values cannot be variable-sized, because they are just numbers, they do not have a defined representation in computers. It&#39;s UTF-8 <i>code points</i> which are variable-sized, each code point encoding one Unicode scalar value. For example, <code>char</code>, being a UTF-32 code point, is fixed-sized, but it still does encode one Unicode scalar value."}, {"owner": {"reputation": 16527, "user_id": 3124288, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/6fa5b34aa1b0d8508347f48a8d596399?s=128&d=identicon&r=PG&f=1", "display_name": "JKillian", "link": "https://stackoverflow.com/users/3124288/jkillian"}, "edited": false, "score": 0, "creation_date": 1469590592, "post_id": 38536587, "comment_id": 64593880, "body": "Strange that the docs state: &quot;Iteration over grapheme clusters may be what you actually want&quot; but Rust provides no way to do it. Or is this not actually a common thing to do?"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1543498880, "last_edit_date": 1543498880, "creation_date": 1469230118, "answer_id": 38536587, "question_id": 38536207, "link": "https://stackoverflow.com/questions/38536207/operator-for-strings-link-with-slices-for-vectors/38536587#38536587", "title": "[] operator for strings, link with slices for vectors", "body": "<p><strong>Note:</strong> The second edition of The Rust Programming Language has an improved and smooth explanation to <a href=\"https://doc.rust-lang.org/stable/book/second-edition/ch08-02-strings.html#indexing-into-strings\" rel=\"nofollow noreferrer\">Strings in Rust</a>, which you might wish to read as well. The answer below, although still accurate, quotes from the first edition of the book.</p>\n\n<hr>\n\n<p>I will try to clarify these misconceptions about strings in Rust by quoting from the book (<a href=\"https://doc.rust-lang.org/book/strings.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/strings.html</a>).</p>\n\n<blockquote>\n  <p>A \u2018string\u2019 is a sequence of Unicode scalar values encoded as a stream of UTF-8 bytes. All strings are guaranteed to be a valid encoding of UTF-8 sequences.</p>\n</blockquote>\n\n<p>With this in mind, plus that UTF-8 code points are variably sized (1 to 4 bytes depending on the character), all strings in Rust, whether they are <code>&amp;str</code> or <code>String</code>, are not arrays of characters, and can not be treated like such. It is further explained why on Slicing:</p>\n\n<blockquote>\n  <p>Because strings are valid UTF-8, they do not support indexing:</p>\n\n<pre><code>let s = \"hello\";\n\nprintln!(\"The first letter of s is {}\", s[0]); // ERROR!!!\n</code></pre>\n  \n  <p>Usually, access to a vector with [] is very fast. But, because each character in a UTF-8 encoded string can be multiple bytes, you have to walk over the string to find the n\u1d57\u02b0 letter of a string. This is a significantly more expensive operation, and we don\u2019t want to be misleading.</p>\n</blockquote>\n\n<p>Unlike what was mentioned in the question, one cannot do <code>s[n]</code>, because although in theory this would allows us to fetch the nth byte in constant time, that byte is not guaranteed to make any sense on its own.</p>\n\n<p><strong>What is the cost of v[i..j] ?</strong></p>\n\n<p>The cost of slicing is actually constant, because it is done at byte-level:</p>\n\n<blockquote>\n  <p>You can get a slice of a string with slicing syntax:</p>\n\n<pre><code>let dog = \"hachiko\";\nlet hachi = &amp;dog[0..5];\n</code></pre>\n  \n  <p>But note that these are byte offsets, not character offsets. So this will fail at runtime:</p>\n\n<pre><code>let dog = \"\u5fe0\u72ac\u30cf\u30c1\u516c\";\nlet hachi = &amp;dog[0..2];\n</code></pre>\n  \n  <p>with this error:</p>\n  \n  <p>thread '' panicked at 'index 0 and/or 2 in <code>\u5fe0\u72ac\u30cf\u30c1\u516c</code> do not lie on\n  character boundary'</p>\n</blockquote>\n\n<p>Basically, slicing is acceptable and will yield a new view of that string, so no copies are made. However, it should only be used when you are completely sure that the offsets are right in terms of character boundaries.</p>\n\n<p>In order to iterate over each character of a string, you may instead call <code>chars()</code>:</p>\n\n<pre><code>let c = s.chars().nth(n);\n</code></pre>\n\n<p>Even with that in mind, note that handling Unicode character might not be exactly what you want if you wish to handle character modifiers in UTF-8 (which are scalar values by themselves but should not be treated individually either). Quoting now from the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.chars\" rel=\"nofollow noreferrer\"><code>str</code> API</a>:</p>\n\n<blockquote>\n  <p><code>fn chars(&amp;self) -&gt; Chars</code></p>\n  \n  <p>Returns an iterator over the chars of a string slice.</p>\n  \n  <p>As a string slice consists of valid UTF-8, we can iterate through a string slice by char. This method returns such an iterator.</p>\n  \n  <p>It's important to remember that char represents a Unicode Scalar Value, and may not match your idea of what a 'character' is. Iteration over grapheme clusters may be what you actually want.</p>\n  \n  <p>Remember, chars may not match your human intuition about characters:</p>\n\n<pre><code>let y = \"y\u0306\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y\u0306'\nassert_eq!(Some('\\u{0306}'), chars.next());\nassert_eq!(None, chars.next());\n</code></pre>\n</blockquote>\n\n<p>The <a href=\"https://crates.io/crates/unicode-segmentation\" rel=\"nofollow noreferrer\">unicode_segmentation</a> crate provides a means to define grapheme cluster boundaries:</p>\n\n<pre><code>extern crate unicode_segmentation;\n\nuse unicode_segmentation::UnicodeSegmentation;\n\nlet s = \"a\u0310e\u0301o\u0308\u0332\\r\\n\";\nlet g = UnicodeSegmentation::graphemes(s, true).collect::&lt;Vec&lt;&amp;str&gt;&gt;();\nlet b: &amp;[_] = &amp;[\"a\u0310\", \"e\u0301\", \"o\u0308\u0332\", \"\\r\\n\"];\nassert_eq!(g, b);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1469266620, "post_id": 38540066, "comment_id": 64473229, "body": "Indeed, that is one possibility. I just chose to mention <code>chars()</code> because it&#39;s lazy and more memory efficient. :)"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1469266763, "post_id": 38540066, "comment_id": 64473257, "body": "Agreed! Sometimes it&#39;s useful having O(1) indexing, other times (maybe most times) <code>chars()</code> or <code>char_indices()</code> are right."}, {"owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "edited": false, "score": 0, "creation_date": 1469272539, "post_id": 38540066, "comment_id": 64474684, "body": "Thanks. A char is 4 bytes in rust right ? So, if I am using only extended ASCII characters, I can use bytes() to retrieve the table of bytes (and so the table of C++ charcters) ?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469273931, "post_id": 38540066, "comment_id": 64475071, "body": "Depends what you mean by &quot;extended ASCII characters&quot;.  Only actual ASCII characters (code points 0-127) are one byte in UTF-8."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469273998, "post_id": 38540066, "comment_id": 64475098, "body": "...but I would strongly suggest that you do it properly; it&#39;s not that hard!  :-)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469315957, "post_id": 38540066, "comment_id": 64486357, "body": "<code>(&quot;v[2] = {}&quot;, v[5]);</code> ? Maybe one of those numbers should be changed?"}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 4, "last_activity_date": 1469347717, "last_edit_date": 1469347717, "creation_date": 1469264812, "answer_id": 38540066, "question_id": 38536207, "link": "https://stackoverflow.com/questions/38536207/operator-for-strings-link-with-slices-for-vectors/38540066#38540066", "title": "[] operator for strings, link with slices for vectors", "body": "<p>If you do want to treat the string as an array of codepoints (which isn't strictly the same as characters; there are combining marks, emoji with separate skin-tone modifiers, etc.), you can collect it into a <code>Vec</code>:</p>\n\n<pre><code>fn main() {\n    let s = \"\u00a310 \ud83d\ude43!\";\n    for (i,c) in s.char_indices() {\n        println!(\"{} {}\", i, c);\n    }\n    let v: Vec&lt;char&gt; = s.chars().collect();\n    println!(\"v[5] = {}\", v[5]);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=160b5b99d66acf017f1da90e90438bc4&amp;version=stable&amp;backtrace=0\" rel=\"nofollow\">Play link</a></p>\n\n<p>With bonus demonstration of some varying character widths, this outputs:</p>\n\n<pre><code>0 \u00a3\n2 1\n3 0\n4  \n5 \ud83d\ude43\n9 !\nv[5] = !\n</code></pre>\n"}], "owner": {"reputation": 455, "user_id": 5252811, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/25f4662cd8d11abc2110cad00a9e2b52?s=128&d=identicon&r=PG&f=1", "display_name": "x4rkz", "link": "https://stackoverflow.com/users/5252811/x4rkz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 1, "accepted_answer_id": 38536587, "answer_count": 2, "score": 0, "last_activity_date": 1543498880, "creation_date": 1469227173, "last_edit_date": 1469315806, "question_id": 38536207, "link": "https://stackoverflow.com/questions/38536207/operator-for-strings-link-with-slices-for-vectors", "title": "[] operator for strings, link with slices for vectors", "body": "<p>Why do you have to walk over the string to find the n\u1d57\u02b0 letter of a string when you do s[n] where s is a string. (According to <a href=\"https://doc.rust-lang.org/book/strings.html\" rel=\"nofollow\">https://doc.rust-lang.org/book/strings.html</a>)</p>\n\n<p>From what I understood, a string is an array of chars and a char is an array of 4 bytes or a number of 4 bytes. So is getting the nth letter would be similar as doing this : v[4*n..4*n+4] where v is a vector ?</p>\n\n<p>What is the cost of v[i..j] ?</p>\n\n<p>I would assume that the cost of v[i..j] is j-i and so that the cost of s[n] should be 4.</p>\n"}, {"tags": ["utf-8", "rust", "bytebuffer"], "comments": [{"owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1469211915, "post_id": 38533055, "comment_id": 64459870, "body": "Can you give an url that generates this error?"}, {"owner": {"reputation": 11081, "user_id": 2019265, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f9c70a7369fe207ce55298b73026dde4?s=128&d=identicon&r=PG", "display_name": "Robert Rossmann", "link": "https://stackoverflow.com/users/2019265/robert-rossmann"}, "reply_to_user": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "edited": false, "score": 0, "creation_date": 1469211979, "post_id": 38533055, "comment_id": 64459897, "body": "<code>http:&#47;&#47;www.google.com</code>."}], "answers": [{"comments": [{"owner": {"reputation": 11081, "user_id": 2019265, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f9c70a7369fe207ce55298b73026dde4?s=128&d=identicon&r=PG", "display_name": "Robert Rossmann", "link": "https://stackoverflow.com/users/2019265/robert-rossmann"}, "edited": false, "score": 0, "creation_date": 1469215677, "post_id": 38533718, "comment_id": 64461703, "body": "Bad Google! And I thought it must be the codez. Next time I&#39;ll remember to try multiple sites, it indeed works for others. Thanks! And also thanks for the note about return value."}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 5, "last_activity_date": 1469214442, "creation_date": 1469214442, "answer_id": 38533718, "question_id": 38533055, "link": "https://stackoverflow.com/questions/38533055/how-can-i-properly-read-the-sequence-of-bytes-from-a-hyperclientrequest-and/38533718#38533718", "title": "How can I properly read the sequence of bytes from a hyper::client::Request and print it to the console as a UTF-8 string?", "body": "<p>We can confirm with the <code>iconv</code> command that the data returned from <code>http://www.google.com</code> is not valid UTF-8:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ wget http://google.com -O page.html\n$ iconv -f utf-8 page.html &gt; /dev/null\niconv: illegal input sequence at position 5591\n</code></pre>\n\n<p>For some other urls (like <code>http://www.reddit.com</code>) the code works fine.</p>\n\n<p>If we assume that the most part of the data is valid UTF-8, we can use <a href=\"https://doc.rust-lang.org/stable/std/string/struct.String.html#method.from_utf8_lossy\" rel=\"noreferrer\"><code>String::from_utf8_lossy</code></a> to workaround the problem:</p>\n\n<pre><code>pub fn print_html(url: &amp;str) {\n    let client = Client::new();\n    let req = client.get(url).send();\n\n    match req {\n        Ok(mut res) =&gt; {\n            println!(\"{}\", res.status);\n\n            let mut body = Vec::new();\n\n            match res.read_to_end(&amp;mut body) {\n                Ok(_) =&gt; println!(\"{:?}\", String::from_utf8_lossy(&amp;*body)),\n                Err(why) =&gt; panic!(\"String conversion failure: {:?}\", why),\n            }\n        }\n        Err(why) =&gt; panic!(\"{:?}\", why),\n    }\n}\n</code></pre>\n\n<p>Note that that <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.read_to_string\" rel=\"noreferrer\"><code>Read::read_to_string</code></a> and <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.read_to_end\" rel=\"noreferrer\"><code>Read::read_to_end</code></a>  return <code>Ok</code> with the number of read bytes on success, not the read data.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1469220793, "last_edit_date": 1495541788, "creation_date": 1469220793, "answer_id": 38535060, "question_id": 38533055, "link": "https://stackoverflow.com/questions/38533055/how-can-i-properly-read-the-sequence-of-bytes-from-a-hyperclientrequest-and/38535060#38535060", "title": "How can I properly read the sequence of bytes from a hyper::client::Request and print it to the console as a UTF-8 string?", "body": "<p>If you actually look at the headers that Google returns:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>HTTP/1.1 200 OK\nDate: Fri, 22 Jul 2016 20:45:54 GMT\nExpires: -1\nCache-Control: private, max-age=0\nContent-Type: text/html; charset=ISO-8859-1\nP3P: CP=\"This is not a P3P policy! See https://www.google.com/support/accounts/answer/151657?hl=en for more info.\"\nServer: gws\nX-XSS-Protection: 1; mode=block\nX-Frame-Options: SAMEORIGIN\nSet-Cookie: NID=82=YwAD4Rj09u6gUA8OtQH73BUz6UlNdeRc9Z_iGjyaDqFdRGMdslypu1zsSDWQ4xRJFyEn9-UtR7U6G7HKehoyxvy9HItnDlg8iLsxzlhNcg01luW3_-HWs3l9S3dmHIVh; expires=Sat, 21-Jan-2017 20:45:54 GMT; path=/; domain=.google.ca; HttpOnly\nAlternate-Protocol: 443:quic\nAlt-Svc: quic=\":443\"; ma=2592000; v=\"36,35,34,33,32,31,30,29,28,27,26,25\"\nAccept-Ranges: none\nVary: Accept-Encoding\nTransfer-Encoding: chunked\n</code></pre>\n\n<p>You can see </p>\n\n<blockquote>\n  <p>Content-Type: text/html; <strong>charset=ISO-8859-1</strong></p>\n</blockquote>\n\n<p>Additionally</p>\n\n<blockquote>\n  <p>Therefore, the error must be caused by me incorrectly converting the byte sequence into an UTF-8 string.</p>\n</blockquote>\n\n<p>There <em>is no conversion to UTF-8 happening</em>. <code>read_to_string</code> simply ensures that the data <strong>is</strong> UTF-8.</p>\n\n<p>Simply put, assuming that an arbitrary HTML page is encoded in UTF-8 is completely incorrect. At best, you have to parse the headers to find the encoding and then convert the data. This is complicated because <a href=\"https://stackoverflow.com/questions/4400678/what-character-encoding-should-i-use-for-a-http-header\">there's no real definition for what encoding the headers are in</a>.</p>\n\n<p>Once you have found the correct encoding, you can use a crate such as <a href=\"https://crates.io/crates/encoding\" rel=\"nofollow noreferrer\">encoding</a> to properly transform the result into UTF-8, if the result is even text! Remember that HTTP can return binary files such as images.</p>\n"}], "owner": {"reputation": 11081, "user_id": 2019265, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/f9c70a7369fe207ce55298b73026dde4?s=128&d=identicon&r=PG", "display_name": "Robert Rossmann", "link": "https://stackoverflow.com/users/2019265/robert-rossmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1262, "favorite_count": 0, "accepted_answer_id": 38533718, "answer_count": 2, "score": 3, "last_activity_date": 1469220909, "creation_date": 1469211728, "last_edit_date": 1469220909, "question_id": 38533055, "link": "https://stackoverflow.com/questions/38533055/how-can-i-properly-read-the-sequence-of-bytes-from-a-hyperclientrequest-and", "title": "How can I properly read the sequence of bytes from a hyper::client::Request and print it to the console as a UTF-8 string?", "body": "<p>I am exploring Rust and trying to make a simple HTTP request (using the hyper crate) and print the response body to the console. The response implements <code>std::io::Read</code>. Reading various documentation sources and basic tutorials, I have arrived at the following code, which I compile &amp; execute using <code>RUST_BACKTRACE=1 cargo run</code>:</p>\n\n<pre><code>use hyper::client::Client;\nuse std::io::Read;\n\npub fn print_html(url: &amp;str) {\n    let client = Client::new();\n    let req = client.get(url).send();\n\n    match req {\n        Ok(mut res) =&gt; {\n            println!(\"{}\", res.status);\n\n            let mut body = String::new();\n\n            match res.read_to_string(&amp;mut body) {\n                Ok(body) =&gt; println!(\"{:?}\", body),\n                Err(why) =&gt; panic!(\"String conversion failure: {:?}\", why)\n            }\n        },\n        Err(why) =&gt; panic!(\"{:?}\", why)\n    }\n}\n</code></pre>\n\n<h3>Expected:</h3>\n\n<p>A nice, human-readable HTML content of the body, as delivered by the HTTP server, is printed to the console.</p>\n\n<h3>Actual:</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>200 OK\nthread '&lt;main&gt;' panicked at 'String conversion failure: Error { repr: Custom(Custom { kind: InvalidData, error: StringError(\"stream did not contain valid UTF-8\") }) }', src/printer.rs:16\nstack backtrace:\n   1:        0x109e1faeb - std::sys::backtrace::tracing::imp::write::h3800f45f421043b8\n   2:        0x109e21565 - std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::h0ef6c8db532f55dc\n   3:        0x109e2119e - std::panicking::default_hook::hf3839060ccbb8764\n   4:        0x109e177f7 - std::panicking::rust_panic_with_hook::h5dd7da6bb3d06020\n   5:        0x109e21b26 - std::panicking::begin_panic::h9bf160aee246b9f6\n   6:        0x109e18248 - std::panicking::begin_panic_fmt::haf08a9a70a097ee1\n   7:        0x109d54378 - libplayground::printer::print_html::hff00c339aa28fde4\n   8:        0x109d53d76 - playground::main::h0b7387c23270ba52\n   9:        0x109e20d8d - std::panicking::try::call::hbbf4746cba890ca7\n  10:        0x109e23fcb - __rust_try\n  11:        0x109e23f65 - __rust_maybe_catch_panic\n  12:        0x109e20bb1 - std::rt::lang_start::hbcefdc316c2fbd45\n  13:        0x109d53da9 - main\nerror: Process didn't exit successfully: `target/debug/playground` (exit code: 101)\n</code></pre>\n\n<h3>Thoughts</h3>\n\n<p>Since I received <code>200 OK</code> from the server, I believe I have received a valid response from the server (I can also empirically prove this by doing the same request in a more familiar programming language). Therefore, the error must be caused by me incorrectly converting the byte sequence into an UTF-8 string.</p>\n\n<h3>Alternatives</h3>\n\n<p>I also attempted the following solution, which gets me to a point where I can print the bytes to the console as a series of hex strings, but I know that this is fundamentally wrong because a UTF-8 character can have 1-4 bytes. Therefore, attempting to convert individual bytes into UTF-8 characters in this example will work only for a very limited (255, to be exact) subset of UTF-8 characters.</p>\n\n<pre><code>use hyper::client::Client;\nuse std::io::Read;\n\npub fn print_html(url: &amp;str) {\n    let client = Client::new();\n    let req = client.get(url).send();\n\n    match req {\n        Ok(res) =&gt; {\n            println!(\"{}\", res.status);\n\n            for byte in res.bytes() {\n                print!(\"{:x}\", byte.unwrap());\n            }\n        },\n        Err(why) =&gt; panic!(\"{:?}\", why)\n    }\n}\n</code></pre>\n"}, {"tags": ["generics", "rust", "dynamic-dispatch"], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 6574841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a16e6eaaef459b5c58733d86dd4247cd?s=128&d=identicon&r=PG&f=1", "display_name": "H.B.", "link": "https://stackoverflow.com/users/6574841/h-b"}, "edited": false, "score": 0, "creation_date": 1469609437, "post_id": 38527653, "comment_id": 64602952, "body": "Thanks for your hints. Adding a function to <code>GetInter</code> to return <code>inter_value</code> from <code>Wrapper&lt;T&gt;</code> requires a generic function or trait. Latter one is not possible. It would break the <code>ColumnWrapper</code> idea of un-generic data. Only the generic function remains. How it must be implemented and can you please paste a code snippet to solve the problem?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 33, "user_id": 6574841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a16e6eaaef459b5c58733d86dd4247cd?s=128&d=identicon&r=PG&f=1", "display_name": "H.B.", "link": "https://stackoverflow.com/users/6574841/h-b"}, "edited": false, "score": 0, "creation_date": 1469609708, "post_id": 38527653, "comment_id": 64603157, "body": "If you&#39;re hiding behind a generic trait (which is not parameterised), the calling code can&#39;t use the actual type - it&#39;s not available at compile time anymore.  You could implement a <code>get_float() -&gt; Option&lt;f64&gt;</code>, <code>get_int() -&gt; Option&lt;i32&gt;</code> etc., which will fail if called on an underlying type which doesn&#39;t support it, but if you have something like <code>fn get&lt;T&gt;() -&gt; T</code>, every implementer has to work with any type."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 4, "last_activity_date": 1469221203, "last_edit_date": 1469221203, "creation_date": 1469193945, "answer_id": 38527653, "question_id": 38526842, "link": "https://stackoverflow.com/questions/38526842/hiding-and-receiving-generic-t-objects/38527653#38527653", "title": "Hiding and receiving generic T objects", "body": "<p>There are a couple of problems here.</p>\n\n<p>The first error:</p>\n\n<blockquote>\n  <p>error: conflicting implementations of trait Foo&lt;<em>> for type Inter&lt;</em>>:\n  [E0119]</p>\n</blockquote>\n\n<p>actually refers to these:</p>\n\n<pre><code>impl&lt;i32&gt; Foo&lt;i32&gt; for Inter&lt;i32&gt; { ... }\nimpl&lt;f64&gt; Foo&lt;f64&gt; for Inter&lt;f64&gt; { ... }\n</code></pre>\n\n<p>Since <code>i32</code> and <code>f64</code> are parameters, those are both equivalent to:</p>\n\n<pre><code>impl&lt;T&gt; Foo&lt;T&gt; for Inter&lt;T&gt; { ... }\n</code></pre>\n\n<p>That is, the implementation of <code>Foo&lt;T&gt;</code> for <code>Inter&lt;T&gt;</code> <em>for any T</em> hence the conflicting implementations.  The fix is to write them as:</p>\n\n<pre><code>impl Foo&lt;i32&gt; for Inter&lt;i32&gt; { ... }\n</code></pre>\n\n<p>The next problem is that you're not actually doing dynamic dispatch.  Your <code>dyn_dispatch</code> function would have to have <code>T</code> specified or inferred at compile time; it can't return a different type each time; similarly you can't just downcast from <code>GetInter</code> to <code>Inter&lt;T&gt;</code> like that.  You need to do it in the same way as you've done <code>GetInter::get_count</code>.</p>\n"}], "owner": {"reputation": 33, "user_id": 6574841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a16e6eaaef459b5c58733d86dd4247cd?s=128&d=identicon&r=PG&f=1", "display_name": "H.B.", "link": "https://stackoverflow.com/users/6574841/h-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 413, "favorite_count": 0, "accepted_answer_id": 38527653, "answer_count": 1, "score": 2, "last_activity_date": 1469221203, "creation_date": 1469191549, "last_edit_date": 1469221148, "question_id": 38526842, "link": "https://stackoverflow.com/questions/38526842/hiding-and-receiving-generic-t-objects", "title": "Hiding and receiving generic T objects", "body": "<p>The following Rust code is given:</p>\n\n<pre><code>struct Wrapper&lt;T&gt; {\n    data: Vec&lt;T&gt;, // more attributes...\n}\n\ntrait DataWrapper&lt;T&gt; {\n    fn get_column(&amp;self) -&gt; &amp;Vec&lt;T&gt;;\n    fn get_data(&amp;self, row: usize) -&gt; &amp;T;\n}\n\nimpl&lt;T&gt; DataWrapper&lt;T&gt; for Wrapper&lt;T&gt; {\n    fn get_column(&amp;self) -&gt; &amp;Vec&lt;T&gt; {\n        &amp;self.data\n    }\n\n    fn get_data(&amp;self, row: usize) -&gt; &amp;T {\n        &amp;self.data[row]\n    }\n}\n\nstruct Inter&lt;T&gt; {\n    inter_value: Wrapper&lt;T&gt;,\n}\n\ntrait GetInter {\n    fn get_count(&amp;self) -&gt; &amp;str;\n}\n\nimpl GetInter for Inter&lt;i32&gt; {\n    fn get_count(&amp;self) -&gt; &amp;str {\n        \"i32\"\n    }\n}\n\nimpl GetInter for Inter&lt;f64&gt; {\n    fn get_count(&amp;self) -&gt; &amp;str {\n        \"f64\"\n    }\n}\n\nfn create_vector() -&gt; Vec&lt;Box&lt;GetInter&gt;&gt; {\n    // Add some sample data\n    let x = Wrapper { data: vec![1, 2, 3] };\n    let y = Wrapper { data: vec![1.1, 2.2, 3.3] };\n\n    let mut vec: Vec&lt;Box&lt;GetInter&gt;&gt; = Vec::new();\n\n    let m = Inter { inter_value: x };\n    let m = Box::new(m);\n    let m = m as Box&lt;GetInter&gt;;\n    vec.push(m);\n\n    let n = Inter { inter_value: y };\n    let n = Box::new(n);\n    let n = n as Box&lt;GetInter&gt;;\n    vec.push(n);\n\n    vec\n}\n\nstruct ColumnWrapper {\n    columns: Vec&lt;Box&lt;GetInter&gt;&gt;, // more attributes\n}\n\nfn create_column_wrapper() -&gt; ColumnWrapper {\n    let result = create_vector();\n\n    ColumnWrapper { columns: result }\n}\n\nfn main() {\n    let result = create_column_wrapper();\n\n    for iter1 in result.columns {\n        println!(\"1: {}\", iter1.get_count());\n    }\n}\n</code></pre>\n\n<p><code>Wrapper&lt;T&gt;</code> stores a generic <code>Vec</code>, in detail a data column from an column store. The corresponding implementation returns the <code>Vec</code> or a specific element as reference.</p>\n\n<p>The idea of the <code>Inter&lt;T&gt;</code> and <code>GetInter</code> traits is to hide the generic <code>T</code> object, which comes from the Wrapper's <code>Vec&lt;T&gt;</code> generic data type. The <code>get_count()</code> method is only for test purposes.</p>\n\n<p><code>create_vector()</code> creates two new <code>Vec</code>s with some sample data. The result is cast to <code>GetInter</code>, wrapped into a <code>Box</code> and stored in a <code>Vec&lt;Box&lt;GetInter&gt;&gt;</code>. Finally the caller will create a new <code>ColumnWrapper</code> element. Now a generic data representation is given.</p>\n\n<p>After compiling and running the correct result is given: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>i32 \nf64\n</code></pre>\n\n<p>Now the real problem starts. I try to access the original data, which are stored in <code>Wrapper&lt;T&gt;</code>. </p>\n\n<p>My first idea was to use the dynamic dispatching feature from Rust. It should detect the real data type during runtime.</p>\n\n<p>The <code>main()</code> function is modified:</p>\n\n<pre><code>fn main() { \n    let result = create_column_wrapper();\n\n    for iter1 in result.columns {\n        println!(\"1: {}\", iter1.get_count());\n\n        for iter2 in dyn_dispatch(*iter1) {\n            println!(\"2: {}\", iter2);\n        }\n    }\n}\n</code></pre>\n\n<p>The corresponding and not tested <code>dyn_dispatch()</code> function:</p>\n\n<pre><code>trait Foo&lt;T&gt; {\n    fn method(x: &amp;Inter&lt;T&gt;) -&gt; &amp;Vec&lt;T&gt;;\n}\n\nimpl&lt;i32&gt; Foo&lt;i32&gt; for Inter&lt;i32&gt; {\n    fn method(x: &amp;Inter&lt;i32&gt;) -&gt; &amp;Vec&lt;i32&gt; {\n        &amp;x.inter_value.data\n    }\n}\n\nimpl&lt;f64&gt; Foo&lt;f64&gt; for Inter&lt;f64&gt; {\n    fn method(x: &amp;Inter&lt;f64&gt;) -&gt; &amp;Vec&lt;f64&gt; {\n        &amp;x.inter_value.data\n    }\n}\n\nfn dyn_dispatch&lt;T&gt;(x: &amp;GetInter) -&gt; &amp;Vec&lt;T&gt; {\n    Foo::method(&amp;x as &amp;Inter&lt;T&gt;)\n}\n</code></pre>\n\n<p>The compilation fails and an error is thrown:</p>\n\n<blockquote>\n  <p>85:2 error: conflicting implementations of trait <code>Foo&lt;_&gt;</code> for type <code>Inter&lt;_&gt;</code>: [E0119]</p>\n</blockquote>\n\n<p>Any idea how to fix the compilation error or another and <em>more</em> easy idea to hide and access the generic <code>T</code> object?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 6, "last_activity_date": 1469182296, "last_edit_date": 1469182296, "creation_date": 1469180550, "answer_id": 38523198, "question_id": 38522870, "link": "https://stackoverflow.com/questions/38522870/are-nested-matches-a-bad-practice-in-idiomatic-rust/38523198#38523198", "title": "Are nested matches a bad practice in idiomatic Rust?", "body": "<p><code>Result</code> and <code>Option</code> have some great methods for making code like that simpler.</p>\n\n<pre><code>fn get_url_content(url: &amp;str) -&gt; Option&lt;String&gt; {\n    let client = Client::new();\n\n    let res = client.get(url)\n                    .send()\n                    .ok()  // Convert to Option, discarding error\n                    .and_then(|mut res| {\n                        let mut s = String::new();\n                        let result = res.read_to_string(&amp;mut s);\n                        result.ok().map(|_| s)\n                     }\n           })\n}\n</code></pre>\n\n<p>I recommend looking through the documentation for <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\" rel=\"noreferrer\">Result</a> and <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html\" rel=\"noreferrer\">Option</a>; there are methods for most combinations of conversions between them, and acting on either the success or error half.</p>\n\n<p>If you can change <code>get_url_content</code> to return a <code>Result</code>, I would recommend that (see <a href=\"https://doc.rust-lang.org/book/error-handling.html\" rel=\"noreferrer\">the error handling documentation</a>.  With your own error type and some implementations of <code>From</code>, the function then becomes (</p>\n\n<pre><code>fn get_url_content(url: &amp;str) -&gt; Result&lt;String, MyError&gt; {\n    let client = Client::new();\n    let mut s = String::new();\n\n    let got = try!(client.get(url));\n    let sent = try!(got.send());\n    try!(sent.read_to_string(s));\n    Ok(s)\n}\n</code></pre>\n\n<p>And probably even simpler with the new <code>?</code> operator.</p>\n"}, {"comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469182407, "post_id": 38523776, "comment_id": 64442302, "body": "Doesn&#39;t the <code>.map(|mut res| res.read_to_string(&amp;mut s).ok().map(|_| s))</code> fail because <code>s</code> is borrowed mutably and returned in the same expression?"}, {"owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1469185847, "post_id": 38523776, "comment_id": 64444245, "body": "It works. Thx for this step by step answer, it helps me to understand better Rust."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469193804, "post_id": 38523776, "comment_id": 64449263, "body": "@ChrisEmerson No, since the output&#39;s lifetime doesn&#39;t depend on the borrow."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "edited": false, "score": 0, "creation_date": 1469193992, "post_id": 38523776, "comment_id": 64449386, "body": "@rap-2-h I should probably mention that my favourite is the second version - the last one just replaces two <code>match</code> branches with two function calls."}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": true, "score": 12, "last_activity_date": 1548102424, "last_edit_date": 1548102424, "creation_date": 1469182211, "answer_id": 38523776, "question_id": 38522870, "link": "https://stackoverflow.com/questions/38522870/are-nested-matches-a-bad-practice-in-idiomatic-rust/38523776#38523776", "title": "Are nested matches a bad practice in idiomatic Rust?", "body": "<p>The easiest way to make things a bit cleaner is to drop some braces:</p>\n\n<pre><code>match client.get(url).send() {\n    Ok(mut res) =&gt;\n        match res.read_to_string(&amp;mut s) {\n            Ok(_) =&gt; Some(s),\n            Err(_) =&gt; None,\n        },\n    Err(_) =&gt; None,\n}\n</code></pre>\n\n<p>The inner match can be expressed a little cleaner perhaps as</p>\n\n<pre><code>match client.get(url).send() {\n    Ok(mut res) =&gt;\n        res.read_to_string(&amp;mut s).ok().map(|_| s),\n\n    Err(_) =&gt; None,\n}\n</code></pre>\n\n<p>This suggests using a <code>map</code> on the outer type (to get <code>Result&lt;Option&lt;_&gt;, _&gt;</code>) and then dropping the result with <code>.unwrap_or(None)</code> or <code>.unwrap_or_default()</code></p>\n\n<pre><code>client.get(url).send()\n      .map(|mut res| res.read_to_string(&amp;mut s).ok().map(|_| s))\n      .unwrap_or(None)\n</code></pre>\n"}], "owner": {"reputation": 22928, "user_id": 978690, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/lNUl6.png?s=128&g=1", "display_name": "rap-2-h", "link": "https://stackoverflow.com/users/978690/rap-2-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7698, "favorite_count": 4, "accepted_answer_id": 38523776, "answer_count": 2, "score": 15, "last_activity_date": 1548102424, "creation_date": 1469179560, "last_edit_date": 1469219958, "question_id": 38522870, "link": "https://stackoverflow.com/questions/38522870/are-nested-matches-a-bad-practice-in-idiomatic-rust", "title": "Are nested matches a bad practice in idiomatic Rust?", "body": "<p>I have a <code>get_url_content</code> function and don't care about errors (it's just a test). It returns an <code>Option&lt;String&gt;</code>.</p>\n\n<pre><code>extern crate hyper;\n\nuse std::io::Read;\nuse hyper::client::Client;\n\nfn get_url_content(url: &amp;str) -&gt; Option&lt;String&gt; {\n    let client = Client::new();\n    let mut s = String::new();\n\n    match client.get(url).send() {\n        Ok(mut res) =&gt; {\n            match res.read_to_string(&amp;mut s) {\n                Ok(_) =&gt; {\n                    Some(s)\n                },\n                Err(_) =&gt; {\n                    None\n                }\n            }\n        },\n        Err(_) =&gt; {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>This function works fine but I find it's not easy to read. I think there are some best practices about this kind of case to make it more readable. Are nested matches a bad practice (like callback hell in JS) and if so, how to avoid it?</p>\n"}, {"tags": ["testing", "rust", "panic"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1469138732, "post_id": 38514554, "comment_id": 64427144, "body": "Could you include a reproducible example of code? If you&#39;re wrapping <code>quickcheck::quickcheck</code> in <code>dont_panic</code>, then it makes sense that your handler is squashing the error messages since the contract of <code>quickcheck</code> is to panic on failure. Perhaps you might get more mileage out of <code>QuickCheck.quicktest</code>, which returns a <code>Result</code> instead of panicing."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1469139062, "post_id": 38514554, "comment_id": 64427257, "body": "I&#39;m wrapping the <code>panic::catch_unwind(_)</code> call in <code>dont_panic(..)</code> within the <code>fn check((usize, usize)) -&gt; bool</code> function to be checked by <code>quickcheck::quickcheck</code>"}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1469140442, "post_id": 38514554, "comment_id": 64427720, "body": "Added a mostly complete example (should run once you <code>use std::panic;</code>)."}], "answers": [{"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1469316095, "post_id": 38545462, "comment_id": 64486384, "body": "That&#39;s what I do in <code>dont_panic(_)</code>. However, this unfortunately appears to hide panic information even after it should have been taken."}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "reply_to_user": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 1, "creation_date": 1469423377, "post_id": 38545462, "comment_id": 64510920, "body": "Oh. Well, unless you have a way to use eg. a thread local flag, or <code>PanicInfo</code>passed to your panic handler to somehow tell one from the other, I don&#39;t think there&#39;s any other way."}], "tags": [], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "is_accepted": false, "score": 2, "last_activity_date": 1469315422, "last_edit_date": 1469315422, "creation_date": 1469300561, "answer_id": 38545462, "question_id": 38514554, "link": "https://stackoverflow.com/questions/38514554/how-can-i-silently-catch-panics-in-quickcheck-tests/38545462#38545462", "title": "How can I silently catch panics in QuickCheck tests?", "body": "<p>The default panic handler is printing panic information unconditionally on stderr.</p>\n\n<p>You want to <a href=\"https://doc.rust-lang.org/std/panic/fn.set_hook.html\" rel=\"nofollow\">register your own handler</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "is_accepted": true, "score": 1, "last_activity_date": 1469456424, "creation_date": 1469456424, "answer_id": 38570290, "question_id": 38514554, "link": "https://stackoverflow.com/questions/38514554/how-can-i-silently-catch-panics-in-quickcheck-tests/38570290#38570290", "title": "How can I silently catch panics in QuickCheck tests?", "body": "<p>There were two problems with my approach:</p>\n\n<ol>\n<li>The tests run in parallel (and quickcheck appears to add some parallelism of \nits own, as <code>-j 1</code> appears ineffective to quell the panic messages).</li>\n<li>The message gets written (or otherwise suppressed by <code>set_hook(_)</code>) no\nmatter if there's a <code>catch_unwind(_)</code> or not.</li>\n</ol>\n\n<p>However, dpc.pw's idea to distinguish based on files in the panic handler was\nspot-on. I changed my approach to call an <code>install_handler()</code> function before\ncalling <code>quickcheck(_)</code>, which I reproduce here in full:</p>\n\n<pre><code>use std::panic;\nuse std::sync::{Once, ONCE_INIT};\n\nstatic HANDLER : Once = ONCE_INIT;\n\nfn install_handler() {\n    HANDLER.call_once(|| {\n        let p = panic::take_hook();\n        panic::set_hook(Box::new(move|info| {\n            if info.location().map_or(false, |l| l.file() != \"src/lib.rs\" &amp;&amp;\n                    !l.file().ends_with(\"/num/mod.rs\")) {\n                p(info);\n            }\n        }));\n    })\n}\n</code></pre>\n\n<p>This will quell the panic messages if the panic came from <code>src/lib.rs</code> (which\nis my <code>overflower_support</code> code) or somewhere from <code>/num/mod.rs</code> (because the\nRust <code>libcore</code> code may panic, too).</p>\n\n<p>Note that you could omit the <code>Once</code>, but this would add the handler multiple\ntimes and increase the size of stack traces considerably while exacerbating\ntest performance.</p>\n"}, {"tags": [], "owner": {"reputation": 271, "user_id": 2217151, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y9UhE.jpg?s=128&g=1", "display_name": "mzabaluev", "link": "https://stackoverflow.com/users/2217151/mzabaluev"}, "is_accepted": false, "score": 2, "last_activity_date": 1511994098, "last_edit_date": 1511994098, "creation_date": 1511980940, "answer_id": 47559613, "question_id": 38514554, "link": "https://stackoverflow.com/questions/38514554/how-can-i-silently-catch-panics-in-quickcheck-tests/47559613#47559613", "title": "How can I silently catch panics in QuickCheck tests?", "body": "<p>I've met the same problem and a few others, and I ended up writing a crate to solve them:</p>\n\n<p><a href=\"https://crates.io/crates/panic-control\" rel=\"nofollow noreferrer\" title=\"panic-control on crates.io\">panic-control</a></p>\n\n<p>With it, your example might be solved by running in a \"quiet\" thread (assuming you weren't interested in using <code>catch_unwind</code> specifically):</p>\n\n<pre><code>use panic_control::spawn_quiet;\n\n#[test]\nfn test_some_panic() {\n    fn check(x: usize) -&gt; bool {\n        let expected = if x &lt; 256 { Some(x) } else { None };\n        let h = spawn_quiet(|| { assert!(x &lt; 256); x });\n        let actual = h.join().ok();\n        expected == actual\n    }\n    quickcheck(check as fn(usize) -&gt; bool);\n}\n</code></pre>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 660, "favorite_count": 0, "accepted_answer_id": 38570290, "answer_count": 3, "score": 5, "last_activity_date": 1511994098, "creation_date": 1469136063, "last_edit_date": 1469221393, "question_id": 38514554, "link": "https://stackoverflow.com/questions/38514554/how-can-i-silently-catch-panics-in-quickcheck-tests", "title": "How can I silently catch panics in QuickCheck tests?", "body": "<p>In the tests of my <a href=\"https://crates.io/crates/overflower_support\" rel=\"nofollow\">overflower_support</a> crate, I have found that I get a lot of spurious reports of panics which are already handled using <code>std::panic::catch_unwind(_)</code>. This is a bit unfortunate, as it obscures the real errors that may happen. The messages look like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'safe' panicked at 'arithmetic overflow', src/lib.rs:56\n</code></pre>\n\n<p>To quell those distracting messages, I introduced the <code>dont_panic(..)</code> function, which hijacks the panic handler, calls a closure and resets the panic handler when done, returning the closures result. It looks like this:</p>\n\n<pre><code>fn dont_panic&lt;F, A, R&gt;(args: A, f: F) -&gt; R\n    where F: Fn(A) -&gt; R\n{\n    let p = panic::take_hook();\n    panic::set_hook(Box::new(|_| ()));\n    let result = f(args);\n    panic::set_hook(p);\n    result\n}\n</code></pre>\n\n<p>However, using this function within the function to check somewhat surprisingly not only quells the desired messages, but also quickcheck's error output, which is obviously valuable to me. This occurs even when limiting tests to one thread.</p>\n\n<pre><code>#[test]\nfn test_some_panic() {\n    fn check(x: usize) -&gt; bool {\n        let expected = if x &lt; 256 { Some(x) } else { None };\n        let actual = dont_panic(|| panic::catch_unwind(|| { assert!(x &lt; 256); x }).ok());\n        expected == actual\n    }\n    quickcheck(check as fn(usize) -&gt; bool);\n}\n</code></pre>\n\n<p>How can I hide the caught panics from my code while keeping QuickCheck's panics visible?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "edited": false, "score": 0, "creation_date": 1469460062, "post_id": 38512410, "comment_id": 64532441, "body": "That first one is a pretty neat FizzBuzz, I never thought of that"}], "answers": [{"tags": [], "owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "is_accepted": false, "score": 2, "last_activity_date": 1469128151, "creation_date": 1469128151, "answer_id": 38512518, "question_id": 38512410, "link": "https://stackoverflow.com/questions/38512410/what-happens-if-the-expression-in-a-match-arm-returns-false/38512518#38512518", "title": "What happens if the expression in a match arm returns false?", "body": "<p>If it is false, the match arm is simply not called. These are called guards in the match statement. You can read about them in <a href=\"https://doc.rust-lang.org/book/patterns.html#guards\" rel=\"nofollow\">the book</a>.</p>\n\n<p>They are <em>similar</em> to an <code>if-else</code> but not in the case that there is an <code>else</code> block. They just add more filtering to the match blocks.</p>\n"}, {"tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 8, "last_activity_date": 1469130760, "creation_date": 1469130760, "answer_id": 38513220, "question_id": 38512410, "link": "https://stackoverflow.com/questions/38512410/what-happens-if-the-expression-in-a-match-arm-returns-false/38513220#38513220", "title": "What happens if the expression in a match arm returns false?", "body": "<blockquote>\n  <p>Now that confused me.</p>\n\n<pre><code>i if i % 3 == 0\n</code></pre>\n  \n  <p>is an expression, right?</p>\n</blockquote>\n\n<p>No, it is not. It is a pattern (<code>i</code>) with a <a href=\"https://doc.rust-lang.org/book/patterns.html#guards\">guard</a> (<code>i % 3 == 0</code>). Maybe you got confused because you used the same bind name. Consider this modified example:</p>\n\n<pre><code>match i {\n    x if x % 3 == 0 &amp;&amp; x % 5 == 0 =&gt; println!(\"FizzBuzz\"),\n    x if x % 3 =&gt; println!(\"Fizz\"),\n    x if x % 5 =&gt; println!(\"Buzz\"),\n    _ =&gt; println!(\"{}\", x),\n}\n</code></pre>\n\n<p>You can read the match expression like this</p>\n\n<ul>\n<li>If <code>i</code> matches the pattern <code>x</code> (it always match and <code>i</code> value is moved (copied) to <code>x</code>) and <code>x % 3 == 0</code> and <code>x % 5 == 0</code> then <code>println!(\"FizzBuzz\")</code>; else</li>\n<li>if <code>i</code> matches the pattern <code>x</code> and <code>x % 3 == 0</code> then <code>println!(\"Fizz\")</code>; else</li>\n<li>if <code>i</code> matches the pattern <code>x</code> and <code>x % 5 == 0</code> then <code>println!(\"Buzz\")</code>; else</li>\n<li><code>println!(\"{}\", x)</code></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 2, "last_activity_date": 1469130775, "creation_date": 1469130775, "answer_id": 38513223, "question_id": 38512410, "link": "https://stackoverflow.com/questions/38512410/what-happens-if-the-expression-in-a-match-arm-returns-false/38513223#38513223", "title": "What happens if the expression in a match arm returns false?", "body": "<blockquote>\n  <p><code>i if i % 3</code> is an expression, right?</p>\n</blockquote>\n\n<p>No, it's not. <code>i if i % 3 == 0</code> is a pattern, which consists of the simple pattern <code>i</code> and the pattern guard <code>if i % 3 == 0</code>. A pattern guard is the keyword <code>if</code> followed by a boolean expression. It can come after any simple pattern (where by \"simple pattern\" I mean any pattern that doesn't already have a pattern guard).</p>\n\n<p>If a pattern with an attached pattern guard matches, the pattern guard will be evaluated. If it evaluates to true, the associated branch will be executed. Otherwise the next pattern will be called as if the pattern had not matched.</p>\n"}], "owner": {"reputation": 99, "user_id": 5226836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e99649e7d3e3b1c8abdd9aeae1443cff?s=128&d=identicon&r=PG&f=1", "display_name": "Rafael Bachmann", "link": "https://stackoverflow.com/users/5226836/rafael-bachmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 236, "favorite_count": 0, "accepted_answer_id": 38513220, "answer_count": 3, "score": 3, "last_activity_date": 1469221738, "creation_date": 1469127760, "last_edit_date": 1469221738, "question_id": 38512410, "link": "https://stackoverflow.com/questions/38512410/what-happens-if-the-expression-in-a-match-arm-returns-false", "title": "What happens if the expression in a match arm returns false?", "body": "<p>This would be a nice fizzbuzz in Rust I think:</p>\n\n<pre><code>match (i % 3, i % 5) {\n    (0, 0) =&gt; println!(\"FizzBuzz\"),\n    (0, _) =&gt; println!(\"Fizz\"),\n    (_, 0) =&gt; println!(\"Buzz\"),\n    _ =&gt; println!(\"{}\", i),\n}   \n</code></pre>\n\n<p>It could also be stated this way:</p>\n\n<pre><code>match i {\n    i if i % 3 == 0 &amp;&amp; i % 5 == 0 =&gt; println!(\"FizzBuzz\"),\n    i if i % 3 == 0 =&gt; println!(\"Fizz\"),\n    i if i % 5 == 0 =&gt; println!(\"Buzz\"),\n    _ =&gt; println!(\"{}\", i),\n}\n</code></pre>\n\n<p>Now that confused me.</p>\n\n<pre><code>i if i % 3 == 0\n</code></pre>\n\n<p>is an expression, right? So, this evaluates to <code>i</code> when the condition is true. But what happens if it is false?</p>\n"}, {"tags": ["rust", "protocol-buffers"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1469221567, "post_id": 38509727, "comment_id": 64464224, "body": "And then you might as well replace the bash script with the build script as well."}, {"owner": {"user_type": "does_not_exist", "display_name": "user1993515"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1469300582, "post_id": 38509727, "comment_id": 64482663, "body": "Thanks! This is probably the route I will go down - didn&#39;t realize cargo supported build scripts.  @Shepmaster - I will also most-likely do that as well, since I&#39;ll be going down that path."}], "tags": [], "owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "is_accepted": true, "score": 3, "last_activity_date": 1469316000, "last_edit_date": 1469316000, "creation_date": 1469118856, "answer_id": 38509727, "question_id": 38504933, "link": "https://stackoverflow.com/questions/38504933/how-can-i-include-an-arbitrary-set-of-protobuf-built-files-without-knowing-their/38509727#38509727", "title": "How can I include an arbitrary set of Protobuf-built files without knowing their names?", "body": "<p>You could write a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow\">Cargo build script</a> which would scan your directory and generate a Rust file that looks like:</p>\n\n<pre><code>mod file1;\nmod file2;\n//etc\n</code></pre>\n\n<p>You can then include this file in your library with the <a href=\"https://doc.rust-lang.org/std/macro.include!.html\" rel=\"nofollow\"><code>include!</code> macro</a>.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user1993515"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 0, "accepted_answer_id": 38509727, "answer_count": 1, "score": 1, "last_activity_date": 1469316000, "creation_date": 1469105896, "last_edit_date": 1469221545, "question_id": 38504933, "link": "https://stackoverflow.com/questions/38504933/how-can-i-include-an-arbitrary-set-of-protobuf-built-files-without-knowing-their", "title": "How can I include an arbitrary set of Protobuf-built files without knowing their names?", "body": "<p>I'm planning on using the <a href=\"https://github.com/stepancheg/rust-protobuf\" rel=\"nofollow\">rust-protobuf library</a>. I've written a bash script that builds everything (including my code) and builds the .proto files I have into .rs files. The way the documentation tells me to proceed is to specifically just do:</p>\n\n<pre><code>mod foo;\n</code></pre>\n\n<p>for each of the .rs files generated. I'm hoping that my users can just drop in new .proto files into a directory, run the build script, and my code will take care of including all of the Rust implementations of the compiled .proto files.</p>\n\n<p>I know Rust doesn't really support reflection, so is there some way I can essentially \"determine all the .rs generated files in a directory and use them in my code\" (in a TLDR statement).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 5, "creation_date": 1469106046, "post_id": 38504761, "comment_id": 64408367, "body": "How did you compile your Rust program? Did you pass the <code>--release</code> flag? (Which will enable optimizations.)"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 6, "creation_date": 1469106812, "post_id": 38504761, "comment_id": 64408914, "body": "Correct me if I&#39;m wrong, but isn&#39;t that <code>calloc</code> call allocating an array of one million zero-sized elements?  The man page says doing this doesn&#39;t allocate <i>anything</i>, so <i>of course</i> the difference would be striking..."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1469107330, "post_id": 38504761, "comment_id": 64409280, "body": "Check your source, <code>vec![0u32, 1000000]</code> does <i>not</i> compile into one million call to <code>push</code>. It compiles essentially to <code>Vec::with_capacity</code> + <code>Vec::resize</code>."}, {"owner": {"reputation": 1190, "user_id": 105398, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b4c6f8ad2c9eb16f2b9ce63385e2967?s=128&d=identicon&r=PG", "display_name": "Andr&#233; Wagner", "link": "https://stackoverflow.com/users/105398/andr%c3%a9-wagner"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1469108308, "post_id": 38504761, "comment_id": 64409959, "body": "@DK., you&#39;re right, I updated the question."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1469108416, "post_id": 38504761, "comment_id": 64410040, "body": "You need to show the <i>actual</i> code you&#39;re testing and the compiler switches you&#39;re using, because when I copy+paste your code as-given (fixing the C code so that <code>xs</code> is a pointer), <i>both</i> examples complete instantaneously."}, {"owner": {"reputation": 1190, "user_id": 105398, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b4c6f8ad2c9eb16f2b9ce63385e2967?s=128&d=identicon&r=PG", "display_name": "Andr&#233; Wagner", "link": "https://stackoverflow.com/users/105398/andr%c3%a9-wagner"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1469108585, "post_id": 38504761, "comment_id": 64410157, "body": "@mcarton I was using the definition described in <a href=\"https://doc.rust-lang.org/book/macros.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/macros.html</a>, but now I saw a footnote that says that the actual implementation might differ."}], "answers": [{"comments": [{"owner": {"reputation": 1190, "user_id": 105398, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b4c6f8ad2c9eb16f2b9ce63385e2967?s=128&d=identicon&r=PG", "display_name": "Andr&#233; Wagner", "link": "https://stackoverflow.com/users/105398/andr%c3%a9-wagner"}, "edited": false, "score": 1, "creation_date": 1469108796, "post_id": 38505913, "comment_id": 64410334, "body": "I now see that the problem was that I wasn&#39;t using the <code>--release</code> flag. Using this flag made it fast. In my question I was also making the wrong assumption that the <code>vec!</code> macro would generate tons of <code>push()</code> calls, which is not true. So I&#39;m accepting this answer."}, {"owner": {"reputation": 191, "user_id": 2480129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/681cf17a49fa99ff9aa2289734aafac2?s=128&d=identicon&r=PG", "display_name": "Alex Hansen", "link": "https://stackoverflow.com/users/2480129/alex-hansen"}, "reply_to_user": {"reputation": 1190, "user_id": 105398, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b4c6f8ad2c9eb16f2b9ce63385e2967?s=128&d=identicon&r=PG", "display_name": "Andr&#233; Wagner", "link": "https://stackoverflow.com/users/105398/andr%c3%a9-wagner"}, "edited": false, "score": 0, "creation_date": 1469108961, "post_id": 38505913, "comment_id": 64410448, "body": "Ah, ok. I will undo my edit to edit, then. Note that you can also configure exactly what gets optimized in the cargo.toml file."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1469111906, "post_id": 38505913, "comment_id": 64412574, "body": "This is a tangent, but do you have a reference for &quot;calloc() also looks to see if the memory is zeroed out first&quot;?  How would it be able to check in less time than actually zeroing it?"}, {"owner": {"reputation": 191, "user_id": 2480129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/681cf17a49fa99ff9aa2289734aafac2?s=128&d=identicon&r=PG", "display_name": "Alex Hansen", "link": "https://stackoverflow.com/users/2480129/alex-hansen"}, "edited": false, "score": 0, "creation_date": 1469112297, "post_id": 38505913, "comment_id": 64412869, "body": "Not the most reliable source, but I was going off of here <a href=\"http://stackoverflow.com/questions/1538420/difference-between-malloc-and-calloc#comment43152189_1585987\" title=\"difference between malloc and calloc%23comment43152189_1585987\">stackoverflow.com/questions/1538420/&hellip;</a> . The way I presented it does seem to imply a comparison to zero, but it is actually doing a slightly different check (according to this comment)."}], "tags": [], "owner": {"reputation": 191, "user_id": 2480129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/681cf17a49fa99ff9aa2289734aafac2?s=128&d=identicon&r=PG", "display_name": "Alex Hansen", "link": "https://stackoverflow.com/users/2480129/alex-hansen"}, "is_accepted": true, "score": 8, "last_activity_date": 1469108969, "last_edit_date": 1469108969, "creation_date": 1469108430, "answer_id": 38505913, "question_id": 38504761, "link": "https://stackoverflow.com/questions/38504761/how-to-improve-vec-initialization-time/38505913#38505913", "title": "How to improve Vec initialization time?", "body": "<p>You are actually performing different operations. In Rust, you are allocating an array of one million zeroes. In C, you are allocating an array of one million zero-length elements (i.e. non-existent elements). I don't believe this actually does anything, as DK commented on your question and pointed out. </p>\n\n<p>Also, Running the code you presented verbatim gave me very comparable times on my laptop when optimizing, however this is probably because the vector allocation in Rust is being optimized away, as the variable is never used. </p>\n\n<pre><code>cargo build --release\ntime ../target/release/test\n\nreal   0.024s \nusr    0.004s\nsys    0.008s\n</code></pre>\n\n<p>and the C:</p>\n\n<pre><code>gcc -O3 test.c \ntime ./a.out\n\nreal   0.023s\nusr    0.004s\nsys    0.004s`\n</code></pre>\n\n<p>Without --release, the Rust performance drops, presumably because the allocation actually happens. Note that <code>calloc()</code> also looks to see if the memory is zeroed out first, and doesn't reset the memory if it is already set to zero. This makes the execution time of <code>calloc()</code> somewhat reliant on the previous state of your memory.</p>\n"}], "owner": {"reputation": 1190, "user_id": 105398, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b4c6f8ad2c9eb16f2b9ce63385e2967?s=128&d=identicon&r=PG", "display_name": "Andr&#233; Wagner", "link": "https://stackoverflow.com/users/105398/andr%c3%a9-wagner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 716, "favorite_count": 0, "accepted_answer_id": 38505913, "answer_count": 1, "score": 2, "last_activity_date": 1469222450, "creation_date": 1469105424, "last_edit_date": 1469222450, "question_id": 38504761, "link": "https://stackoverflow.com/questions/38504761/how-to-improve-vec-initialization-time", "title": "How to improve Vec initialization time?", "body": "<p>Initializing a <code>Vec</code> in Rust is incredibly slow if compared with other languages. For example, the following code</p>\n\n<pre><code>let xs: Vec&lt;u32&gt; = vec![0u32, 1000000];\n</code></pre>\n\n<p>will translate to</p>\n\n<pre><code>let xs: Vec&lt;u32&gt; = Vec::new();\nxs.push(0);\nxs.push(0);\nxs.push(0);\n// ...\n</code></pre>\n\n<p>one million times. If you compare this to the following code in C:</p>\n\n<pre><code>uint32_t* xs = calloc(1000000, sizeof(uint32_t));\n</code></pre>\n\n<p>the difference is striking.</p>\n\n<p>I had a little bit more luck with</p>\n\n<pre><code>let xs: Vec&lt;u32&gt; = Vec::with_capacity(1000000);\nxs.resize(1000000, 0);\n</code></pre>\n\n<p>bit it's still very slow.</p>\n\n<p>Is there any way to initialize a <code>Vec</code> faster?</p>\n"}]