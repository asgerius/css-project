[{"tags": ["rust", "hyper", "rust-tokio"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1499329922, "post_id": 44936758, "comment_id": 76862888, "body": "I&#39;m not sure if it&#39;s possible to copy body because body is a Stream."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499336623, "post_id": 44936758, "comment_id": 76867495, "body": "In order to take the request&#39;s body with <code>body()</code>, you must own the request, yet in <code>clone_req</code> you only have a reference. Have you looked into the many <a href=\"https://stackoverflow.com/search?q=%5Brust%5D+cannot+move+out+of+borrowed+content\">existing questions with the same error message</a> which will likely give you an insight on what you are doing wrong?"}, {"owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499358089, "post_id": 44936758, "comment_id": 76883732, "body": "@E_net4 yes, I spent much time searching for some workaround, seeing examples where trying to write the body (like a stream) in other variable, and so on, but I couldn&#39;t fix it."}], "answers": [{"comments": [{"owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 0, "creation_date": 1500097330, "post_id": 45111595, "comment_id": 77201039, "body": "Thanks for your response! But, your proposal is not sufficient to cover the functionality I need. I need a retry scheme prepared for <b>all type of request</b>, also the request is given from outside, because it&#39;s a proxy. I need a way to propagate the incoming request to outcoming new request (similar to the incoming, but with other host), and the problem is how to propagate the body (ideally without using a <code>.concat()</code> in order to propagate a potentially stream of chunks in a properly way)"}], "tags": [], "owner": {"reputation": 742, "user_id": 1006006, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/c7e18db000f12082ea6b1a68ae678701?s=128&d=identicon&r=PG", "display_name": "Vishal Kumar", "link": "https://stackoverflow.com/users/1006006/vishal-kumar"}, "is_accepted": false, "score": -1, "last_activity_date": 1500066490, "last_edit_date": 1500066490, "creation_date": 1500066417, "answer_id": 45111595, "question_id": 44936758, "link": "https://stackoverflow.com/questions/44936758/implement-retry-with-hyper-http-client/45111595#45111595", "title": "Implement retry with Hyper HTTP Client", "body": "<p>Why not put retry in main loop? Note you also need to do <code>core.run</code> somewhere.   </p>\n\n<pre><code>loop {\n    let req = Request::new(Get, \"http://www.google.com\".parse().unwrap());\n    let resp = dispatch_request(&amp;client, req, );\n    if let Ok(_) = resp.wait() {\n        break\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 43, "user_id": 4087177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1cd3ad77894993effd835994a9f2073?s=128&d=identicon&r=PG&f=1", "display_name": "oddg", "link": "https://stackoverflow.com/users/4087177/oddg"}, "is_accepted": false, "score": 0, "last_activity_date": 1536714519, "last_edit_date": 1536714519, "creation_date": 1536713933, "answer_id": 52286029, "question_id": 44936758, "link": "https://stackoverflow.com/questions/44936758/implement-retry-with-hyper-http-client/52286029#52286029", "title": "Implement retry with Hyper HTTP Client", "body": "<p>An option is to use the <a href=\"https://crates.io/crates/tokio-retry\" rel=\"nofollow noreferrer\">tokio-retry</a> crate. I only tried with hyper v0.12 though.</p>\n"}], "owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1078, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1536714519, "creation_date": 1499292434, "last_edit_date": 1500096106, "question_id": 44936758, "link": "https://stackoverflow.com/questions/44936758/implement-retry-with-hyper-http-client", "title": "Implement retry with Hyper HTTP Client", "body": "<p>I'm trying to implement a retry in a client built with <em>Hyper v0.11</em>, but I can't find a way to reuse a request for different attempts:</p>\n\n<pre><code>#[macro_use]\nextern crate hyper;\nextern crate futures;\nextern crate tokio_core;\n\nuse futures::Future;\n\nuse hyper::{Client, Body, Uri, StatusCode};\nuse hyper::server::{Request, Response};\nuse hyper::client::HttpConnector;\nuse hyper::Get;\n\nuse tokio_core::reactor::Core;\n\nfn main() {\n\n    let mut core = Core::new().expect(\"Event Loop\");\n    let handle = core.handle();\n    let client = Client::new(&amp;handle.clone());\n\n    // Request\n    let json = r#\"{\"user\":\"Peter\"}\"#;\n    let mut req: Request&lt;Body&gt; = Request::new(Post, \"http://localhost:8080/create/user\".parse().unwrap());\n    req.headers_mut().set(ContentType::json());\n    req.headers_mut().set(ContentLength(json.len() as u64));\n    req.set_body(json);\n\n    dispatch_request(&amp;client, req, 2);\n}\n\nfn clone_req(req: &amp;Request) -&gt; Request {\n    let mut new_req = Request::new(req.method().clone(), req.uri().clone());\n    new_req.headers_mut().extend(req.headers().iter());\n    new_req.set_body(req.body()); // &lt;------- here the error occur!\n    new_req\n}\n\nfn dispatch_request(\n    client: &amp;Client&lt;HttpConnector, Body&gt;,\n    req: Request&lt;Body&gt;,\n    n_retry: u32,\n) -&gt; Box&lt;Future&lt;Error = hyper::Error, Item = Response&gt;&gt; {\n    println!(\"Attemp {}\", n_retry);\n    let max_retry = 3;\n\n    let client_clone = client.clone();\n\n    let clone_req = clone_req(&amp;req);\n\n    let resp = client.request(req).then(move |result| match result {\n        Ok(client_resp) =&gt; {\n            if client_resp.status() == hyper::StatusCode::Ok {\n                Box::new(futures::future::ok(client_resp))\n            } else if n_retry &lt; max_retry {\n                dispatch_request(&amp;client_clone, clone_req, max_retry + 1)\n            } else {\n                Box::new(futures::future::ok(\n                    Response::new().with_status(StatusCode::ServiceUnavailable),\n                ))\n            }\n        }\n        Err(e) =&gt; {\n            println!(\"Connection error: {:?}\", &amp;e);\n            Box::new(futures::future::ok(\n                Response::new().with_status(StatusCode::ServiceUnavailable),\n            ))\n        }\n    });\n    Box::new(resp)\n}\n</code></pre>\n\n<p>This is the compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:28:22\n   |\n28 |     new_req.set_body(req.body());\n   |                      ^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>The error is clear, but I don't know how to fix it.</p>\n"}, {"tags": ["rust", "rust-crates"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499289336, "post_id": 44935315, "comment_id": 76848419, "body": "FWIW, it also needs to be <code>Blowfish::new(&amp;key);</code>."}, {"owner": {"reputation": 868, "user_id": 6022274, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06c83ad18e5255b126aca74fff0af330?s=128&d=identicon&r=PG&f=1", "display_name": "Bromind", "link": "https://stackoverflow.com/users/6022274/bromind"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499291056, "post_id": 44935315, "comment_id": 76849218, "body": "Thanks @Shepmaster, it is indeed a duplicate, which I didn&#39;t found beforehand. concerning the &amp;key, thanks again, but I didn&#39;t even arrive to that point before asking !"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499291217, "post_id": 44935315, "comment_id": 76849295, "body": "Yeah, this particular duplicate is pretty tricky to find. There is work coming to help make it easier to detect and harder to accidentally fall into."}], "owner": {"reputation": 868, "user_id": 6022274, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06c83ad18e5255b126aca74fff0af330?s=128&d=identicon&r=PG&f=1", "display_name": "Bromind", "link": "https://stackoverflow.com/users/6022274/bromind"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 24, "favorite_count": 0, "closed_date": 1499287066, "answer_count": 0, "score": 0, "last_activity_date": 1499287170, "creation_date": 1499286079, "last_edit_date": 1499287170, "question_id": 44935315, "link": "https://stackoverflow.com/questions/44935315/method-from-rustcryptos-blockciphervarkey-trait-not-taken-into-account", "closed_reason": "Duplicate", "title": "Method from RustCrypto&#39;s BlockCipherVarKey trait not taken into account", "body": "<p>I am trying to use RustCrypto to instantiate a blowfish object. The <code>new</code> method is implemented by the <a href=\"https://docs.rs/block-cipher-trait/0.4.0-beta/block_cipher_trait/trait.BlockCipherVarKey.html#tymethod.new\" rel=\"nofollow noreferrer\"><code>BlockCipherVarKey</code> trait</a> in the block-cipher-trait crate. </p>\n\n<p>Here is my minimal example: </p>\n\n<pre><code>extern crate block_cipher_trait;\nuse block_cipher_trait::BlockCipherVarKey;\n\nextern crate blowfish;\nuse blowfish::Blowfish;\n\nfn main() {\n    let key = Vec::new();\n    Blowfish::new(key)\n}\n</code></pre>\n\n<p>With the following <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nblowfish = \"0.2.1\"\nblock-cipher-trait = \"0.3.0\"\n</code></pre>\n\n<p>I try to build that, but I have the following error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no associated item named `new` found for type `blowfish::Blowfish` in the current scope\n --&gt; src/main.rs:9:5\n  |\n9 |     Blowfish::new(key)\n  |     ^^^^^^^^^^^^^\n  |\n  = note: the method `new` exists but the following trait bounds were not satisfied: `blowfish::Blowfish : block_cipher_trait::BlockCipherFixKey`, `&amp;blowfish::Blowfish : block_cipher_trait::BlockCipherFixKey`, `&amp;mut blowfish::Blowfish : block_cipher_trait::BlockCipherFixKey`\n  = help: items from traits can only be used if the trait is in scope; the following trait is implemented but not in scope, perhaps add a `use` for it:\n  = help: candidate #1: `use block_cipher_trait::BlockCipherVarKey;`\n</code></pre>\n\n<p>Why is the <code>use block_cipher_trait::BlockCipherVarKey</code> on line 2 not taken into account? Why does the compiler suggest that I add it although it is already here?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499268169, "post_id": 44930257, "comment_id": 76836211, "body": "Why do not you use an <code>enum</code>?"}, {"owner": {"reputation": 123, "user_id": 7393793, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cffa5dfe2fd16b6ae8bd799080a844fd?s=128&d=identicon&r=PG&f=1", "display_name": "rjcoupe", "link": "https://stackoverflow.com/users/7393793/rjcoupe"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499268484, "post_id": 44930257, "comment_id": 76836441, "body": "@Boiethios Would enums work if I couldn&#39;t be sure of the keys ahead of time?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1499268558, "post_id": 44930257, "comment_id": 76836501, "body": "I do not understand your question"}, {"owner": {"reputation": 123, "user_id": 7393793, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cffa5dfe2fd16b6ae8bd799080a844fd?s=128&d=identicon&r=PG&f=1", "display_name": "rjcoupe", "link": "https://stackoverflow.com/users/7393793/rjcoupe"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499268711, "post_id": 44930257, "comment_id": 76836604, "body": "The HashMap in my code is constructed without any guarantee of what the keys might be. AFAIK, an enum wouldn&#39;t work in this scenario."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1499268738, "post_id": 44930257, "comment_id": 76836623, "body": "Can you add a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 1, "creation_date": 1499268762, "post_id": 44930257, "comment_id": 76836637, "body": "@rjcoupe How do you construct the <code>HashMap</code>? Would be helpful included in the question."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1499268885, "post_id": 44930257, "comment_id": 76836714, "body": "What do you mean by &quot;without any guarantee of what the keys might be&quot;? Will they all be the same type?"}, {"owner": {"reputation": 123, "user_id": 7393793, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cffa5dfe2fd16b6ae8bd799080a844fd?s=128&d=identicon&r=PG&f=1", "display_name": "rjcoupe", "link": "https://stackoverflow.com/users/7393793/rjcoupe"}, "edited": false, "score": 0, "creation_date": 1499268965, "post_id": 44930257, "comment_id": 76836785, "body": "Apologies - the <i>values</i> could potentially be different types. The keys will always be strings."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1499268981, "post_id": 44930257, "comment_id": 76836795, "body": "Then use an enum for the values."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499270176, "post_id": 44930257, "comment_id": 76837636, "body": "The solution is the same - use an enum. Whether the type is implicit (when constructed it can be inferred) or explicit is orthogonal. Putting multiple types where one type is required will use an enum, and then you have to put that type in signatures or in structs, etc."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1499269009, "creation_date": 1499269009, "answer_id": 44930597, "question_id": 44930257, "link": "https://stackoverflow.com/questions/44930257/how-can-i-handle-a-hashmap-with-potentially-multiple-types-in-its-values-being/44930597#44930597", "title": "How can I handle a HashMap with (potentially) multiple types in its values being passed to a function?", "body": "<p>If your value can be int or string, use an <code>enum</code> as follow:</p>\n\n<pre><code>use std::collections::HashMap;\n\nenum Value {\n    Int(i32),\n    String(String),\n}\n\nfn do_thing(params: &amp;HashMap&lt;String, Value&gt;) {\n    // each value of params can be Int or String. Check it with a match.\n}\n</code></pre>\n\n<p>Check with a match if <code>Value</code> is <code>Int</code> or <code>String</code>:</p>\n\n<pre><code>match val {\n    Value::Int(i)    =&gt; //do something with i\n    Value::String(s) =&gt; //do something with s\n}\n</code></pre>\n"}], "owner": {"reputation": 123, "user_id": 7393793, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cffa5dfe2fd16b6ae8bd799080a844fd?s=128&d=identicon&r=PG&f=1", "display_name": "rjcoupe", "link": "https://stackoverflow.com/users/7393793/rjcoupe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 844, "favorite_count": 0, "closed_date": 1499268928, "accepted_answer_id": 44930597, "answer_count": 1, "score": 0, "last_activity_date": 1499270030, "creation_date": 1499268101, "last_edit_date": 1499270030, "question_id": 44930257, "link": "https://stackoverflow.com/questions/44930257/how-can-i-handle-a-hashmap-with-potentially-multiple-types-in-its-values-being", "closed_reason": "Duplicate", "title": "How can I handle a HashMap with (potentially) multiple types in its values being passed to a function?", "body": "<p>I need to pass a <code>HashMap</code> to a function, but this <code>HashMap</code> could theoretically have both integers and strings as values. How do I form the type signature of the function in question for this? I'm new to Rust, and after trying <code>fn do_thing(params: &amp;HashMap&lt;String, _&gt;)</code> and meeting with failure, I ran out of ideas.</p>\n\n<pre><code>fn do_thing(params: &amp;HashMap&lt;String, _&gt;) {\n    // Irrelevant - regardless, the compiler fails because I cannot use the type placeholder in a function's type sig.\n}\n\nfn main() {\n    let params = HashMap::new();\n    params.insert(field, value); // field will always be a string, value could be a string or an integer\n    do_thing(&amp;params)\n}\n</code></pre>\n\n<hr>\n\n<p>This is <em>not</em> a duplicate of the suggested question - constructing a <code>HashMap</code> does not require type declarations, whereas this concerns the <code>HashMap</code> being a function's parameter, which does.</p>\n"}, {"tags": ["vector", "hashmap", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499265947, "post_id": 44929300, "comment_id": 76834429, "body": "The <a href=\"https://doc.rust-lang.org/stable/std/collections/hash_map/enum.Entry.html\" rel=\"nofollow noreferrer\">HashMap <code>Entry</code> API</a> does not provide <code>extend</code>, but <code>Vec</code> does. You want to manipulate the value in the entry if it exists. Have a look at <a href=\"https://doc.rust-lang.org/stable/std/collections/hash_map/struct.HashMap.html#method.entry\" rel=\"nofollow noreferrer\"><code>HashMap::entry</code></a> and try again."}], "answers": [{"comments": [{"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 0, "creation_date": 1499267332, "post_id": 44929565, "comment_id": 76835631, "body": "Is there a performance difference using this <code>match</code> approach versus the answer I posted?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "edited": false, "score": 0, "creation_date": 1499267417, "post_id": 44929565, "comment_id": 76835691, "body": "I <i>think</i> it is the same. Do some benchmark to be sure. However, you must replace <code>extend</code> with <code>push</code> as I did."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1499267011, "last_edit_date": 1499267011, "creation_date": 1499266188, "answer_id": 44929565, "question_id": 44929300, "link": "https://stackoverflow.com/questions/44929300/how-to-extend-a-vecstring-as-hashmap-value/44929565#44929565", "title": "How to extend a Vec&lt;String&gt; as HashMap value?", "body": "<p>Use this code:</p>\n\n<pre><code>use std::collections::hash_map::Entry;\n\nmatch data.entry(department.to_string()) {\n    Entry::Occupied(mut entry)  =&gt; { entry.get_mut().push(employee.to_string()); },\n    Entry::Vacant(entry)        =&gt; { entry.insert(vec!(employee.to_string())); },\n}\n</code></pre>\n\n<ul>\n<li>If the key exists, get a mutable reference on the value and add the new string,</li>\n<li>Else, create a new vector and insert it in the hashmap.</li>\n</ul>\n\n<p>All this information is in the <a href=\"https://doc.rust-lang.org/stable/std/collections/hash_map/enum.Entry.html\" rel=\"nofollow noreferrer\">documentation</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1499267369, "post_id": 44929971, "comment_id": 76835659, "body": "It should always be written as <code>vec![]</code> to remain idiomatic."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1499267634, "post_id": 44929971, "comment_id": 76835830, "body": "Better: <code>data.entry(department.to_string()).or_insert(vec![]).push(em&zwnj;&#8203;ployee.to_string());</code>"}, {"owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499267767, "post_id": 44929971, "comment_id": 76835930, "body": "@Boiethios -- thanks.  I had tried that but calling the <code>push</code> before <code>or_insert</code>, which did not work.  Don&#39;t know why I didn&#39;t realize the order should be as you have written."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499267886, "post_id": 44929971, "comment_id": 76836024, "body": "Sure, I did not noticed the swap of methods ;)"}], "tags": [], "owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "is_accepted": false, "score": 2, "last_activity_date": 1499267282, "creation_date": 1499267282, "answer_id": 44929971, "question_id": 44929300, "link": "https://stackoverflow.com/questions/44929300/how-to-extend-a-vecstring-as-hashmap-value/44929971#44929971", "title": "How to extend a Vec&lt;String&gt; as HashMap value?", "body": "<p>After thinking about the entry API a little more I came up with the following solution:</p>\n\n<pre><code>let val = data.entry(department.to_string())\n                .or_insert(vec!());\n\n        val.extend(vec!(employee.to_string()));\n</code></pre>\n"}], "owner": {"reputation": 504, "user_id": 7024293, "user_type": "registered", "accept_rate": 68, "profile_image": "https://lh3.googleusercontent.com/-_iHS8SMGqHA/AAAAAAAAAAI/AAAAAAAAAbE/HudebqQ1IF4/photo.jpg?sz=128", "display_name": "stevensonmt", "link": "https://stackoverflow.com/users/7024293/stevensonmt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 242, "favorite_count": 0, "accepted_answer_id": 44929565, "answer_count": 2, "score": 2, "last_activity_date": 1499267282, "creation_date": 1499265513, "last_edit_date": 1499266334, "question_id": 44929300, "link": "https://stackoverflow.com/questions/44929300/how-to-extend-a-vecstring-as-hashmap-value", "title": "How to extend a Vec&lt;String&gt; as HashMap value?", "body": "<p>I have a <code>HashMap&lt;String, Vec&lt;String&gt;&gt;</code>. I cannot figure out how to update the value by growing the <code>Vec</code>.  I thought the following would work:</p>\n\n<pre><code>fn add_employee(mut data: HashMap&lt;String, Vec&lt;String&gt;&gt;) -&gt; HashMap&lt;String, Vec&lt;String&gt;&gt; {\n    loop {\n        println!(\"Please enter the name of the employee you would like to manage.\");\n\n        let mut employee = String::new();\n\n        io::stdin().read_line(&amp;mut employee).expect(\n            \"Failed to read line\",\n        );\n\n        let employee = employee.trim();\n\n        let mut department = String::new();\n\n        println!(\"Please enter the name of the department you would like to add the employee to.\");\n\n        io::stdin().read_line(&amp;mut department).expect(\n            \"Failed to read line\",\n        );\n\n        let department = department.trim();\n\n        data.entry(department.to_string())\n            .extend(vec![employee.to_string()])\n            .or_insert(vec![employee.to_string()]);\n    }\n}\n</code></pre>\n\n<p>but it instead gives the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no method named `extend` found for type `std::collections::hash_map::Entry&lt;'_, std::string::String, std::vec::Vec&lt;std::string::String&gt;&gt;` in the current scope\n  --&gt; src/main.rs:27:14\n   |\n27 |             .extend(vec![employee.to_string()])\n   |              ^^^^^^\n</code></pre>\n"}, {"tags": ["rust", "traits", "associated-types"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 16, "last_activity_date": 1499266524, "last_edit_date": 1499266524, "creation_date": 1499265567, "answer_id": 44929324, "question_id": 44928882, "link": "https://stackoverflow.com/questions/44928882/why-do-i-get-the-error-the-trait-foo-is-not-implemented-for-mut-t-even-th/44929324#44929324", "title": "Why do I get the error &quot;the trait `Foo` is not implemented for `&amp;mut T`&quot; even though T implements the trait?", "body": "<p><code>T</code>, <code>&amp;T</code>, and <code>&amp;mut T</code> are all <strong>different</strong> types; and that means that <code>&amp;mut &amp;mut T</code> is likewise a different type. Traits are not automatically implemented for references to a type. If you wish to implement a trait for either of the references, you need to write it out explicitly.</p>\n\n<p>As an example, this exhibits the same problem:</p>\n\n<pre><code>trait Foo {}\n\n#[derive(Debug, Copy, Clone)]\nstruct S;\nimpl Foo for S {}\n\nfn example&lt;T&gt;(_: T)\nwhere\n    T: Foo,\n{}\n\nfn main() {\n    let mut s = S;\n\n    example(s);\n    example(&amp;s);     // the trait bound `&amp;S: Foo` is not satisfied\n    example(&amp;mut s); // the trait bound `&amp;mut S: Foo` is not satisfied\n}\n</code></pre>\n\n<p>Explicit implementations of the trait for the references solve the problem:</p>\n\n<pre><code>impl&lt;'a&gt; Foo for &amp;'a S {}\nimpl&lt;'a&gt; Foo for &amp;'a mut S {}\n</code></pre>\n\n<p>In many cases, you can delegate the function implementations to the non-reference implementation.</p>\n\n<p>If this should always be true, you can make it so by applying it to <em>all</em> references to a type that implements a trait:</p>\n\n<pre><code>impl&lt;'a, T&gt; Foo for &amp;'a T where T: Foo {}\nimpl&lt;'a, T&gt; Foo for &amp;'a mut T where T: Foo {}\n</code></pre>\n\n<p>If you don't have control over the traits, you may need to specify that you take a reference to a generic type that implements the trait:</p>\n\n<pre><code>fn example&lt;T&gt;(_: &amp;mut T)\nwhere\n    for&lt;'a&gt; &amp;'a mut T: Foo,\n{}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28799372/155423\">When should I not implement a trait for references to implementors of that trait?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499266489, "post_id": 44929347, "comment_id": 76834928, "body": "Passing <code>font</code> instead of <code>&amp;mut font</code> is almost guaranteed to be the right solution for this case."}, {"owner": {"reputation": 3495, "user_id": 36585, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0ccd55542e51b1b98f5a72b30c815dc?s=128&d=identicon&r=PG", "display_name": "pnkfelix", "link": "https://stackoverflow.com/users/36585/pnkfelix"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1499266869, "post_id": 44929347, "comment_id": 76835260, "body": "Yeah I agree. (As an aside, I keep getting to update my answer with a digression about why deref-coercion did not apply in this case, since often one <i>can</i> get away with passing <code>&amp; &amp;X</code> when <code>&amp;X</code> is expected, but I end up concluding that it will only obscure the answer.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499267157, "post_id": 44929347, "comment_id": 76835494, "body": "Could always add an &quot;advanced&quot; or &quot;side note&quot; section at the end if you think it&#39;d be useful to other people in the future."}, {"owner": {"reputation": 93, "user_id": 2016805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0257e86560aa2d215d88212d455d06?s=128&d=identicon&r=PG", "display_name": "covercash2", "link": "https://stackoverflow.com/users/2016805/covercash2"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499271806, "post_id": 44929347, "comment_id": 76838690, "body": "@Shepmaster your comment was the spark, but this entire thread was extremely helpful."}], "tags": [], "owner": {"reputation": 3495, "user_id": 36585, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0ccd55542e51b1b98f5a72b30c815dc?s=128&d=identicon&r=PG", "display_name": "pnkfelix", "link": "https://stackoverflow.com/users/36585/pnkfelix"}, "is_accepted": false, "score": 4, "last_activity_date": 1499268968, "last_edit_date": 1499268968, "creation_date": 1499265611, "answer_id": 44929347, "question_id": 44928882, "link": "https://stackoverflow.com/questions/44928882/why-do-i-get-the-error-the-trait-foo-is-not-implemented-for-mut-t-even-th/44929347#44929347", "title": "Why do I get the error &quot;the trait `Foo` is not implemented for `&amp;mut T`&quot; even though T implements the trait?", "body": "<p>The error message says that \"<code>graphics::character::CharacterCache</code> is not implemented for <code>&amp;mut C</code>\"; and indeed, all you have said in your <code>where</code>-clause is that <code>C: CharacterCache</code>, <em>not</em> <code>&amp;mut C: CharacterCache</code>. </p>\n\n<p>(In general, one cannot conclude <code>&amp;mut Type: Trait</code> if all one knows is <code>Type: Trait</code>)</p>\n\n<p>I'm assuming that the <code>.draw</code> method that you are invoking on <code>self.properties: Text</code> wants a <code>&amp;mut C</code> for its argument, so you might be able to pass in either <code>font</code> or <code>&amp;mut *font</code>, but I'm guessing that your extra level of indirection via <code>&amp;mut font</code> is causing a problem there.</p>\n\n<p>In other words:</p>\n\n<pre><code>self.properties.draw(\n        self.text.as_str(),\n        &amp;mut font,\n     // ~~~~~~~~~ is not the same as `font` or `&amp;mut *font`\n        &amp;draw_state,\n        transform,\n        g,\n    );\n</code></pre>\n\n<hr>\n\n<h2>Sidenote for Experienced Rustaceans:</h2>\n\n<p>This kind of coding \"mistake\" (putting in an extra level of indirection)  actually occurs more than you might think when programming in Rust.</p>\n\n<p>However, one often does not notice it, because the compiler will often compare the expected type with the type that was provided, and will apply so-called <a href=\"https://doc.rust-lang.org/book/second-edition/ch15-02-deref.html#implicit-deref-coercions-with-functions-and-methods\" rel=\"nofollow noreferrer\" title=\"Rust Book (2e): Implicit Deref Coercions with Functions and Methods\"><em>deref coercions</em></a> to turn in the given value into an appropriate argument.</p>\n\n<p>So if you consider the following code:</p>\n\n<pre><code>fn gimme_ref_to_i32(x: &amp;i32, amt: i32) -&gt; i32 { *x + amt }\nfn gimme_mutref_to_i32(x: &amp;mut i32, amt: i32) { *x += amt; }\n\nlet mut concrete = 0;\ngimme_mutref_to_i32(&amp;mut concrete, 1);\ngimme_mutref_to_i32(&amp;mut &amp;mut concrete, 20);\nlet i1 = gimme_ref_to_i32(&amp;concrete, 300);\nlet i2 = gimme_ref_to_i32(&amp; &amp;concrete, 4000);\n\nprintln!(\"concrete: {} i1: {} i2: {}\", concrete, i1, i2);\n</code></pre>\n\n<p>it will run without a problem; the compiler will automatically insert dereferences underneath the borrow, turning <code>&amp;mut &amp;mut concrete</code> into <code>&amp;mut *(&amp;mut concrete)</code>, and <code>&amp; &amp;concrete</code> into <code>&amp; *(&amp;concrete)</code> (aka <code>&amp;mut concrete</code> and <code>&amp;concrete</code> respectively, in this case).</p>\n\n<p>(You can read more about the history of Deref Coercions by reading the associated <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0241-deref-conversions.md\" rel=\"nofollow noreferrer\" title=\"RFC 241: Deref Coercions\">RFC</a>.)</p>\n\n<p>However, this magic does not save us when the function we are calling is expecting a reference to a type parameter, like so:</p>\n\n<pre><code>fn gimme_mutref_to_abs&lt;T: AddAssign&gt;(x: &amp;mut T, amt: T) { *x += amt; }\n\nlet mut abstract_ = 0;\ngimme_mutref_to_abs(&amp;mut abstract_, 1);\ngimme_mutref_to_abs(&amp;mut &amp;mut abstract_, 1);\n//                  ^^^^ ^^^^^^^^^^^^^^\n// compiler wants   &amp;mut T               where T: AddAssign\n\nprintln!(\"abstract: {}\", abstract_);\n</code></pre>\n\n<p>In this code, the Rust compiler starts off assuming that the input type (<code>&amp;mut &amp;mut i32</code>) will decompose into some type <code>&amp;mut T</code> that satisfies <code>T: AddAssign</code>.</p>\n\n<p>It checks the first case that can possibly match: peel off the first <code>&amp;mut</code>, and then see if the remainder (<code>&amp;mut i32</code>) could possibly be the <code>T</code> that we are searching for.</p>\n\n<p><code>&amp;mut i32</code> does not implement <code>AddAssign</code>, so that attempt to solve the trait constraints fails.</p>\n\n<p>Here's the crucial thing: the compiler does <em>not</em> then decide to try applying any coercions here (including deref coercions); it just gives up. I have not managed to find a historical record of the basis for giving up here, but my memory from conversations (and from knowledge of the compiler) is that the trait resolution step is expensive, so we choose not to try to search for potential traits on each step of a coercion. Instead, the programmer is expected to figure out an appropriate conversion expression that will turn the given type <code>T</code> into some intermediate type <code>U</code> that the compiler <em>can</em> accept as the expected type.</p>\n"}], "owner": {"reputation": 93, "user_id": 2016805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b0257e86560aa2d215d88212d455d06?s=128&d=identicon&r=PG", "display_name": "covercash2", "link": "https://stackoverflow.com/users/2016805/covercash2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5708, "favorite_count": 4, "accepted_answer_id": 44929324, "answer_count": 2, "score": 9, "last_activity_date": 1499268968, "creation_date": 1499264485, "last_edit_date": 1499267096, "question_id": 44928882, "link": "https://stackoverflow.com/questions/44928882/why-do-i-get-the-error-the-trait-foo-is-not-implemented-for-mut-t-even-th", "title": "Why do I get the error &quot;the trait `Foo` is not implemented for `&amp;mut T`&quot; even though T implements the trait?", "body": "<p>I have this source:</p>\n\n<pre><code>pub fn draw&lt;G, C&gt;(&amp;self, font: &amp;mut C, draw_state: &amp;DrawState, transform: Matrix2d, g: &amp;mut G)\nwhere\n    C: CharacterCache,\n    G: Graphics&lt;Texture = &lt;C as CharacterCache&gt;::Texture&gt;,\n{\n    self.properties.draw(\n        self.text.as_str(),\n        &amp;mut font,\n        &amp;draw_state,\n        transform,\n        g,\n    );\n}\n</code></pre>\n\n<p>And the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait bound `&amp;mut C: graphics::character::CharacterCache` is not satisfied \n(the trait `graphics::character::CharacterCache` is not implemented for `&amp;mut C`) \n</code></pre>\n\n<p>The only aspect of <code>C</code> that is defined is that it implements <code>CharacterCache</code>, yet the error says the opposite.</p>\n\n<p><code>DrawState</code>, <code>Matrix2d</code>, <code>CharacterCache</code> and its implementations, <code>Texture</code>, and self.properties (<code>Text</code>) are provided by the Piston 2d graphics library. There must be something about traits in general that I'm misunderstanding.</p>\n\n<p>The <code>Text::draw</code> function signature:</p>\n\n<pre><code>fn draw&lt;C, G&gt;(\n    &amp;self,\n    text: &amp;str,\n    cache: &amp;mut C,\n    draw_state: &amp;DrawState,\n    transform: Matrix2d,\n    g: &amp;mut G,\n) where\n    C: CharacterCache,\n    G: Graphics&lt;Texture = C::Texture&gt;,\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499771066, "post_id": 44926032, "comment_id": 77038948, "body": "For reference, here is the final keeper: <a href=\"https://play.rust-lang.org/?gist=273a79572157005e51cc3fff76919f78&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499258404, "post_id": 44926206, "comment_id": 76828487, "body": "Would that likely lead to problems and Keeper should be redesigned, or is this expected behaviour and keepers will work fine in most situations as they are?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499260224, "post_id": 44926206, "comment_id": 76829960, "body": "That depends on what you are going to do with the <code>Keeper</code>; in this case (printing purposes), it is perfectly fine to introduce an extra scope. Try to work around such cases for now and decide when you are more convinced about your API and its uses."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 1, "last_activity_date": 1499257421, "creation_date": 1499257421, "answer_id": 44926206, "question_id": 44926032, "link": "https://stackoverflow.com/questions/44926032/why-does-function-calling-order-affect-borrows/44926206#44926206", "title": "Why does function calling order affect borrows?", "body": "<p>This is a pretty straightforward case; in the following binding:</p>\n\n<pre><code>let (s1, s2, s3) = (k.find(k1), k.find(k2), k.find(k3));\n</code></pre>\n\n<p>You immutably borrow <code>k</code> 3 times (you can have multiple immutable borrows), so as long as <code>s1</code>, <code>s2</code> and <code>s3</code> are in the scope, you can not mutably borrow <code>k</code>.</p>\n\n<p>By introducing your own scope you made <code>s1</code>, <code>s2</code> and <code>s3</code> release their borrows by the end of their block.</p>\n"}, {"comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499258599, "post_id": 44926218, "comment_id": 76828634, "body": "So, it is ok to go from mutable to immutable, since calling keep before find works, but not the other way around?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499258840, "post_id": 44926218, "comment_id": 76828837, "body": "Nope, the rule is if you <b>own</b> a reference on a thing. <code>keep</code> returns no reference."}, {"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499259336, "post_id": 44926218, "comment_id": 76829258, "body": "Ah, so since T is specified in keep as Copy, would it be better to return a Copy of T from find?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499259400, "post_id": 44926218, "comment_id": 76829315, "body": "If you return a copy, do not worry about borrow checker since you borrow nothing from the struct."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1499259600, "last_edit_date": 1499259600, "creation_date": 1499257446, "answer_id": 44926218, "question_id": 44926032, "link": "https://stackoverflow.com/questions/44926032/why-does-function-calling-order-affect-borrows/44926218#44926218", "title": "Why does function calling order affect borrows?", "body": "<p>Minimal reproduction:</p>\n\n<pre><code>struct Foo {\n    something: i32,\n}\n\nimpl Foo {\n    fn give_something(&amp;self) -&gt; &amp;i32 {\n        &amp;self.something\n    }\n    fn bar(&amp;mut self) {}\n}\n\nfn main() {\n    let mut foo = Foo{ something: 42, };\n    // In the following line, you borrow self.something with thing,\n    // therefore, foo is borrowed too:\n    let thing = foo.give_something();\n    // Then you cannot mutably borrow foo since it is already borrowed:\n    foo.bar();\n}\n</code></pre>\n\n<p>All is in the explanation of the compiler:</p>\n\n<blockquote>\n  <p>cannot borrow <code>foo</code> as mutable because it is also borrowed as immutable</p>\n</blockquote>\n\n<p>You can either have <strong>one mutable</strong> reference on a thing, either have <strong>multiple immutable</strong> reference, not both.</p>\n\n<p>Now see in your code: you borrow first <code>k</code> as immutable:</p>\n\n<pre><code>let (s1, s2, s3) = (k.find(k1), k.find(k2), k.find(k3));\n</code></pre>\n\n<p>And then you ask to borrow it as mutable:</p>\n\n<pre><code>let k4 = k.keep(\"X\");\n</code></pre>\n"}], "owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 44926206, "answer_count": 2, "score": 1, "last_activity_date": 1499261360, "creation_date": 1499256949, "last_edit_date": 1499261360, "question_id": 44926032, "link": "https://stackoverflow.com/questions/44926032/why-does-function-calling-order-affect-borrows", "title": "Why does function calling order affect borrows?", "body": "<p>Why do I need to force a scope of the borrows in this case? Without it, <code>k.keep(\"X\")</code> will cause a compilation error. </p>\n\n<pre><code>mod keep {\n    use std::collections::hash_map::Entry::{Occupied, Vacant};\n    use std::collections::HashMap;\n    use std::hash::Hash;\n\n    pub struct Keeper&lt;T&gt; {\n        index:  Vec&lt;T&gt;,\n        kept:   HashMap&lt;T, usize&gt;\n    }\n    impl&lt;T&gt; Keeper&lt;T&gt; {\n        pub fn new() -&gt; Keeper&lt;T&gt; where T: Eq + Hash {\n            Keeper { index: Vec::new(), kept: HashMap::new() }\n        }\n        pub fn keep(&amp;mut self, keepsake: T) -&gt; usize where T: Eq + Hash + Copy {\n            match self.kept.entry(keepsake) {\n                Occupied(_)   =&gt; (),\n                Vacant(entry) =&gt; {\n                    entry.insert(self.index.len());\n                    self.index.push(keepsake);\n                }\n            }\n            *self.kept.get(&amp;keepsake).unwrap()\n        }\n        pub fn find(&amp;self, i:usize) -&gt; &amp;T {\n            &amp;self.index[i]\n        }\n    }\n}\nfn main() {\n    let mut k: keep::Keeper&lt;&amp;str&gt; = keep::Keeper::new();\n    { // forced borrow scoping\n        let (k1, k2, k3) = (k.keep(\"A\"), k.keep(\"A\"), k.keep(\"B\"));\n        println!(\"{}@[{:p}], {}@[{:p}], {}@[{:p}]\", k1, &amp;k1, k2, &amp;k2, k3, &amp;k3);\n        let (s1, s2, s3) = (k.find(k1), k.find(k2), k.find(k3));\n        println!(\"{}@[{:p}], {}@[{:p}], {}@[{:p}]\", s1, s1, s2, s2, s3, s3);\n    }\n    let k4 = k.keep(\"X\");\n}\n</code></pre>\n\n<p>There is <a href=\"https://play.rust-lang.org/?gist=2f3c4ba06a48d70b3801853185cc373d&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">a playground</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 1, "creation_date": 1499255015, "post_id": 44925175, "comment_id": 76825867, "body": "I have the same issue behind the corporate network of my company. The proxy blocks all network actions that cargo wants to perform. I usually build using rustc. But that might not be an option for you. I sometimes also use a personal hotspot from my phone to get around it."}, {"owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "reply_to_user": {"reputation": 4048, "user_id": 2173516, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/P3SKn.png?s=128&g=1", "display_name": "Noel Widmer", "link": "https://stackoverflow.com/users/2173516/noel-widmer"}, "edited": false, "score": 0, "creation_date": 1499255641, "post_id": 44925175, "comment_id": 76826345, "body": "@NoelWidmer I found it was not related to the proxy at all. Although I still can&#39;t use cargo, at least the basic rust compiler works and cargo has different errors."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1499261193, "post_id": 44925472, "comment_id": 76830666, "body": "<i>I don&#39;t know why these dummy .exes exist</i> \u2014 that&#39;s how the actual version multiplexing works. Without them, you won&#39;t be able to install new toolchain versions with <code>rustup install another-version</code> or any of the other features."}, {"owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499262118, "post_id": 44925472, "comment_id": 76831398, "body": "Ok that does make some sense, but having them on the path before the actually installed version seems like making things complicated. There should be a hint what should be done next to the error, because Google isn&#39;t helpful right now."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499262281, "post_id": 44925472, "comment_id": 76831523, "body": "<i>seems like making things complicated</i> \u2014 it&#39;s the <b>only</b> way for it to work. They <i>have</i> to be first so that they can intercept calls to <code>rustc</code> or <code>cargo</code> and then delegate the call to the correct version of the intended tool. To fix &quot;error: no default toolchain configured&quot;, you need to configure a default toolchain. That&#39;s usually done with <code>rustup default stable</code> or whatever version is preferred."}, {"owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499265031, "post_id": 44925472, "comment_id": 76833695, "body": "@Shepmaster that&#39;s a bug then if you didn&#39;t use or have rustup, but instead used the installer (as I mentioned I couldn&#39;t get rustup to run with the proxy). So I think for non-rustup installs this is a bug."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499265159, "post_id": 44925472, "comment_id": 76833790, "body": "Potentially... It appears you were able to install rustup itself (which is what added the shim executables) and then not able to install a toolchain. Do you have a <code>rustup</code> binary? That would be pretty solid proof."}, {"owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499265248, "post_id": 44925472, "comment_id": 76833866, "body": "@Shepmaster only the fake one. Maybe the rustup-init starts copying files before being able to download anything."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499265287, "post_id": 44925472, "comment_id": 76833900, "body": "What &quot;fake&quot; one? There is only one <code>rustup</code> binary."}, {"owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499265399, "post_id": 44925472, "comment_id": 76833996, "body": "Nvm, everything else is fake in that folder, except the rustup executable."}], "tags": [], "owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "is_accepted": false, "score": 0, "last_activity_date": 1499261131, "last_edit_date": 1499261131, "creation_date": 1499255533, "answer_id": 44925472, "question_id": 44925175, "link": "https://stackoverflow.com/questions/44925175/rust-behind-proxy-error-no-default-toolchain-configured/44925472#44925472", "title": "Rust behind proxy, &quot;error: no default toolchain configured&quot;", "body": "<p>I found an answer to why I'm getting this error message:</p>\n\n<p>The Rust installer put two locations on my path:</p>\n\n<ul>\n<li><code>C:\\Users\\&lt;USERNAME&gt;\\.cargo\\bin</code></li>\n<li><code>C:\\Users\\&lt;USERNAME&gt;\\AppData\\Local\\Programs\\Rust\\bin</code></li>\n</ul>\n\n<p>The first one seems to have dummy .exes (which for some reason are 4.62MB) and the second one contains cargo and rustc.</p>\n\n<p>I don't know why these dummy .exes exist, but if I take them off the path I can compile simple Rust programs.</p>\n"}], "owner": {"reputation": 2678, "user_id": 3387223, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/370iy.png?s=128&g=1", "display_name": "CodeMonkey", "link": "https://stackoverflow.com/users/3387223/codemonkey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1530, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1499261131, "creation_date": 1499254674, "question_id": 44925175, "link": "https://stackoverflow.com/questions/44925175/rust-behind-proxy-error-no-default-toolchain-configured", "title": "Rust behind proxy, &quot;error: no default toolchain configured&quot;", "body": "<p>I installed Rust at home with no issues. Behind a company proxy I couldn't run rustup-init, so I installed 1.18 stable with an installer.</p>\n\n<p>On every Rust command (e.g. cargo). I get the notification \"error: no default toolchain configured\". The only related question I found was <a href=\"https://stackoverflow.com/questions/44303915/no-default-toolchain-configured-after-installing-rustup\">this one</a>, but the answer isn't very helpful. Knowing it is a proxy issue is useful, but I can't find an answer how to configure the proxy so that this works.</p>\n"}, {"tags": ["rust", "runtime-error", "allocation"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1499250772, "post_id": 44923306, "comment_id": 76822930, "body": "If you ran out of heap space, surely you have bigger problems. I can&#39;t think of any situations where you wouldn&#39;t want to just panic at this point."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 6, "creation_date": 1499250954, "post_id": 44923306, "comment_id": 76823062, "body": "@PeterHall Sometime you want to handle the error for a server to keep running for other client or if you need to clean before exit."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 8, "creation_date": 1499252870, "post_id": 44923306, "comment_id": 76824426, "body": "I&#39;m not sure I would want to handle that failure at the point of allocation though. This falls into the category of unexpected and catastrophic exceptions, which are hard to recover from. In your example of a server request, it would be better to <code>catch_unwind</code> from the point of handling the problematic request, so you can continue to accept new requests thereafter."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499253573, "post_id": 44923306, "comment_id": 76824858, "body": "@PeterHall I didn&#39;t know <code>catch_unwind()</code> function. Yep, this is a very good way to solve my both cases. But this force user to use unwinding implementation, not a big issue. Note: I appreciate your point, but I think that &quot;how recover from a panic&quot; is another question."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 3, "creation_date": 1499255817, "post_id": 44923306, "comment_id": 76826482, "body": "@Stargateur, judging by <a href=\"https://github.com/rust-lang/rust/blob/692b5722363be2de18a27b46db59950124a5101d/src/liballoc/oom.rs#L15-L20\" rel=\"nofollow noreferrer\">the source of default OOM handler</a>, it just aborts the process. You&#39;ll need to use nightly Rust to change OOM behavior."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499268506, "post_id": 44923306, "comment_id": 76836463, "body": "@PeterHall I though memory allocation failures result in abortion, not in a panic? (I would prefer a panic)"}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 1, "creation_date": 1499268735, "post_id": 44923306, "comment_id": 76836618, "body": "Recovering from failed big allocations (e.g. a multi megabyte vector) is often possible. Recovering from small allocations (e.g. box) rarely is."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1499268929, "post_id": 44923306, "comment_id": 76836756, "body": "@CodesInChaos That will be great if you make an answer that answer the behavior of OOM. No one actually answer this part of my question :p. (maybe too broad ?)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1499269868, "post_id": 44923306, "comment_id": 76837449, "body": "@CodesInChaos I did not realise this!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499270469, "post_id": 44923306, "comment_id": 76837844, "body": "<i>&quot;No one actually answer this part of my question&quot;</i> \u2014 Doesn&#39;t Matthieu M&#39;s answer cover the OOM behaviour well enough?"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1499253729, "post_id": 44923779, "comment_id": 76824969, "body": "&quot;Perhaps we could extend the box syntax to allow returning Option one day to accommodate this use case, because I&#39;d definitely like to be able to re-use this code!&quot;, maybe I should ask them :p."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1499290531, "post_id": 44923779, "comment_id": 76848984, "body": "@Stargateur You may not get what you want, but you&#39;ll almost certainly get friendly feedback!"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 11, "last_activity_date": 1499250784, "last_edit_date": 1592644375, "creation_date": 1499250784, "answer_id": 44923779, "question_id": 44923306, "link": "https://stackoverflow.com/questions/44923306/why-doesnt-boxnew-return-an-option-or-result/44923779#44923779", "title": "Why doesn&#39;t `Box::new` return an `Option` or `Result`?", "body": "<p>I found the following communication between the Rust developers regarding some of the lower-level functions in liballoc not returning <code>Option</code>s: <a href=\"https://github.com/rust-lang/rust/pull/14230\" rel=\"noreferrer\">PR #14230</a>.</p>\n<p>Especially the following parts explain some of the reasons behind it:</p>\n<p><strong>huonw</strong>:</p>\n<blockquote>\n<p>Hm... shouldn't the lowest level library not be triggering task\nfailure? Are we planning to have any lower-level libraries returning\nOption or something?</p>\n</blockquote>\n<p><strong>alexcrichton</strong>:</p>\n<blockquote>\n<p>I found that it was quite common to want to trigger task failure, much more so than I originally realized. I also found that all contexts have some form or notion of failure, although it's not always task failure.</p>\n</blockquote>\n<p><strong>huonw</strong>:</p>\n<blockquote>\n<p>I was thinking from the perspective of task failure not being recoverable at the call site, i.e. a higher level library is free to fail, but the absolute lowest building blocks shouldn't, so that people can handle problems as they wish (even if it's just manually triggering task failure). If liballoc isn't designed to be the lowest level allocation library, failing is fine. (BTW, I think you may've misinterpreted my comment, because I wasn't talking about libcore, just liballoc.)</p>\n</blockquote>\n<p><strong>alexcrichton</strong>:</p>\n<blockquote>\n<p>Oops, sorry! I believe that the core allocator interface (located in liballoc) will be specced to not fail!(), just the primitives on top of them (for example, the box operator).</p>\n<p><strong>Perhaps we could extend the box syntax to allow returning Option one day to accommodate this use case</strong>, because I'd definitely like to be able to re-use this code!</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1499252031, "post_id": 44923907, "comment_id": 76823843, "body": "&quot;Even if the method doesn&#39;t allocate any memory on the heap currently, it might resort to it in the future.&quot;, I disagree. You choose that your function don&#39;t return an error or an option, so you decide that she never fail. It&#39;s your problem if you have a bad design in the first place. In this case you can panic yourself so you don&#39;t have a breaking change if you want. Thanks for the reddit link."}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1499252732, "post_id": 44923907, "comment_id": 76824331, "body": "@Stargateur You have a point, but it&#39;s a fine one. In most software the heap allocation is widely used and to consider it during the interface design would be a strain."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499270526, "post_id": 44923907, "comment_id": 76837890, "body": "As others have commented, OOM doesn&#39;t panic so you can&#39;t unwind, unfortunately :/"}, {"owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "edited": false, "score": 0, "creation_date": 1618625656, "post_id": 44923907, "comment_id": 118665988, "body": "cf. <a href=\"https://www.reddit.com/r/rust/comments/ms2nl7/linus_torvalds_concerns_about_panics_in_rust_code/\" rel=\"nofollow noreferrer\">reddit.com/r/rust/comments/ms2nl7/&hellip;</a> on that"}], "tags": [], "owner": {"reputation": 9509, "user_id": 257568, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/6c736aafc7e3bfcf9f924d09bde3aa99?s=128&d=identicon&r=PG", "display_name": "ArtemGr", "link": "https://stackoverflow.com/users/257568/artemgr"}, "is_accepted": false, "score": 6, "last_activity_date": 1499251083, "creation_date": 1499251083, "answer_id": 44923907, "question_id": 44923306, "link": "https://stackoverflow.com/questions/44923306/why-doesnt-boxnew-return-an-option-or-result/44923907#44923907", "title": "Why doesn&#39;t `Box::new` return an `Option` or `Result`?", "body": "<p>This is a language design decision. You have to consider not just the logic of a single operation (<code>Box::new</code>, for example) but how it will affect the language ergonomics. If we were to handle the memory allocation errors with the <code>Return</code> mechanics then these errors would've started to bubble up pretty much everywhere. Even if the method doesn't allocate any memory on the heap <em>currently</em>, it might resort to it <em>in the future</em>. Suddenly a simple change in implementation would be stuck because you'd have to change the API, which with semantic versioning means a major release. All that for a little benefit, because the out of memory handling isn't very reliable or useful in the presence of swapping and memory killers (often you should stop allocating the memory long before you get an out of memory error).</p>\n\n<p>The subject was much discussed <a href=\"https://www.reddit.com/r/rust/comments/279k7i/whats_rusts_mechanism_for_recovering_from_say/\" rel=\"noreferrer\">on</a> <a href=\"https://www.reddit.com/r/rust/comments/2mthq2/how_would_a_rust_application_be_able_to_properly/\" rel=\"noreferrer\">reddit</a>.</p>\n\n<p>One proposed solution I've seen is to treat the out of memory as a panic, unwinding and terminating the corresponding task.</p>\n"}, {"comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 3, "creation_date": 1499256346, "post_id": 44924283, "comment_id": 76826830, "body": "Image handling however can benefit from fallible allocations. Unpacked 16K HDR image requires around 2GB of memory and there&#39;s no way to check if the allocation will succeed."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 8, "creation_date": 1499257677, "post_id": 44924283, "comment_id": 76827891, "body": "@red75prime: Oh, I&#39;m not saying that it&#39;s never useful, I&#39;m saying it&#39;s <i>rarely</i> is. As such, not worrying about it the right default, but it would indeed be nice to have <i>another</i> way to deal with fallible allocations (<code>Box::try_new()</code> ?)."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1499258999, "post_id": 44924283, "comment_id": 76828956, "body": "A bunch of fallible functions existing in parallel with panicking functions doesn&#39;t seem like elegant solution, taking into account the rarity you mentioned. Maybe something like <code>fn try_alloc&lt;T, F: FnOnce() -&gt;T&gt;(f: F) -&gt; Option&lt;T&gt;</code>?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1499270836, "post_id": 44924283, "comment_id": 76838074, "body": "Can you complete your answer by adding the behavior of this error in rust ? What documentation if any say ? Or rust choice to let this undefined behavior ?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1499273610, "post_id": 44924283, "comment_id": 76839774, "body": "@Stargateur: I linked to the experimental <code>alloc::oom</code> module, and the default OOM handler. If you feel like it, you can tweak this handler, however note that the signature being <code>() -&gt; !</code> does not let you much choice (panicking, infinite loop, abort/exit, ... but no returning null). This is not a <i>language</i> thing however, just a <code>std</code> thing. If you implement your own <code>std</code>, you can pick another behavior."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1499281206, "post_id": 44924283, "comment_id": 76843937, "body": "And don&#39;t forget the systems that happily promise you any memory you ask for and only find they don&#39;t have it when you actually try to use it."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1499281620, "post_id": 44924283, "comment_id": 76844155, "body": "@JanHudec: It was implicitly contained in the &quot;etc...&quot; but I added it. I wonder what other surprises there are, given the number of OSes in existence I doubt I&#39;m exhaustive here..."}, {"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "edited": false, "score": 0, "creation_date": 1557442271, "post_id": 44924283, "comment_id": 98776700, "body": "Can I conclude from that answer and the comments above, that Rust will never be used on small embedded systems? I mean <code>std</code> at least is then unusable. Even tiny systems with little RAM are sometimes forced to deal with heap, for example if some esoteric protocols of some esoteric field bus are required. Sometimes such requirements are discovered/added by customers late in the dev cycle. And then? Major rewrite without std?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "edited": false, "score": 0, "creation_date": 1557472741, "post_id": 44924283, "comment_id": 98783959, "body": "@BitTickler: There are two layers here: Rust the language and <code>std</code> the library. Rust is used successfully on small systems in <code>#![no_std]</code> mode <b>now</b>, and there are explorations of what customisable/fallible allocation would entail. There&#39;s an <a href=\"https://rust-embedded.github.io/blog/\" rel=\"nofollow noreferrer\">Embedded WG</a> specifically interested in using Rust in every kind of embedded environment."}, {"owner": {"reputation": 53834, "user_id": 15614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7455fbe2cde016f6cd36b4352be52eaf?s=128&d=identicon&r=PG", "display_name": "Kent Fredric", "link": "https://stackoverflow.com/users/15614/kent-fredric"}, "edited": false, "score": 1, "creation_date": 1557966629, "post_id": 44924283, "comment_id": 98947034, "body": "The &quot;overcommit&quot; behaviour is a bit chicken-egg. Overcommit exists in part <i>because</i> programmers don&#39;t typically implement graceful ways of responding to the kernel telling you it can&#39;t give you more memory, and so, the default behaviour is to <i>always</i> succeed. You can set a kernel flag <code>vm.overcommit_memory=2</code> which leads to the kernel being more keen to tell you when you&#39;re running out. <a href=\"https://serverfault.com/questions/606185/how-does-vm-overcommit-memory-work#606193\" title=\"how does vm overcommit memory work%23606193\">serverfault.com/questions/606185/&hellip;</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 53834, "user_id": 15614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7455fbe2cde016f6cd36b4352be52eaf?s=128&d=identicon&r=PG", "display_name": "Kent Fredric", "link": "https://stackoverflow.com/users/15614/kent-fredric"}, "edited": false, "score": 0, "creation_date": 1557988718, "post_id": 44924283, "comment_id": 98952059, "body": "@KentFredric: True. Though AFAIK, even kernel developers don&#39;t typically implement graceful ways of responding to memory exhaustion. They tend to for large allocations, but regularly &quot;forget&quot; for small allocations (single struct, etc...) \\o/"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1618505156, "post_id": 44924283, "comment_id": 118627447, "body": "@MatthieuM. We pay it today <a href=\"https://lore.kernel.org/rust-for-linux/62371527c2a74bce82881a8a09d65e10@AcuMS.aculab.com/\" rel=\"nofollow noreferrer\">lore.kernel.org/rust-for-linux/&hellip;</a> I strongly think it was a big mistake and that doesn&#39;t cost anything to make this be handle by user like <b>any</b> other api error."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 35, "last_activity_date": 1499281576, "last_edit_date": 1499281576, "creation_date": 1499252096, "answer_id": 44924283, "question_id": 44923306, "link": "https://stackoverflow.com/questions/44923306/why-doesnt-boxnew-return-an-option-or-result/44924283#44924283", "title": "Why doesn&#39;t `Box::new` return an `Option` or `Result`?", "body": "<p>A more general form is <strong>What to do on Out Of Memory (OOM)?</strong></p>\n\n<p>There are many difficulties in handling OOM:</p>\n\n<ul>\n<li>detecting it,</li>\n<li>recovering from it (gracefully),</li>\n<li>integrating it in the language (gracefully).</li>\n</ul>\n\n<p>The first issue is detecting it. Many OSes today will, by default, use swap space. In this case, your process is actually in trouble way before you get to the OOM situation because starting to use swap space will significantly slow down the process. Other OSes will kill low-priority processes when a higher process requires more memory (OOM killer), or promise more memory than they currently have in the hope it will not be used or will be available by the time it is necessary (overcommit), etc...</p>\n\n<p>The second issue is recovering. At the process level, the only way to recover is to free memory... without allocating any in the mean time. This is not as easy as it sounds, for example there is no guarantee that panicking and unwinding will not require <em>allocating</em> memory (for example, the act of storing a panic message could allocate if done carelessly). This is why the current rustc runtime <a href=\"https://github.com/rust-lang/rust/blob/1.18.0/src/liballoc/oom.rs#L15-L19\" rel=\"noreferrer\"><em>aborts by default</em></a> on <a href=\"https://doc.rust-lang.org/alloc/oom/\" rel=\"noreferrer\">OOM</a>.</p>\n\n<p>The third issue is language integration: memory allocations are <em>everywhere</em>. Any use of <code>Box</code>, <code>Vec</code>, <code>String</code>, etc... So, if you shun the panic route and use the <code>Result</code> route instead, you need to tweak nearly any mutating method signature to account for this kind of failure, and this will bubble in all interfaces.</p>\n\n<p>Finally, it's notable that in domains where memory allocation failure need be handled... often times memory allocation is <em>not</em> allowed to start with. In critical embedded software, for example, all memory is allocated up-front and there is a <em>proof</em> that no more than what is allocated will be required.</p>\n\n<p>This is important, because it means that there are <em>very few</em> situations where (1) dynamic memory allocation is allowed and (2) its failure must be handled gracefully by the process itself.</p>\n\n<p>And at this point, one can only wonder how much <em>complexity budget</em> should be spent on this, and how much complexity this will push unto the 99% of programs which do not care.</p>\n"}], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2650, "favorite_count": 3, "accepted_answer_id": 44924283, "answer_count": 3, "score": 28, "last_activity_date": 1499292165, "creation_date": 1499249648, "last_edit_date": 1499292165, "question_id": 44923306, "link": "https://stackoverflow.com/questions/44923306/why-doesnt-boxnew-return-an-option-or-result", "title": "Why doesn&#39;t `Box::new` return an `Option` or `Result`?", "body": "<p>I don't understand why <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.new\" rel=\"noreferrer\"><code>Box::new</code></a> doesn't return an <code>Option</code> or <code>Result</code>.</p>\n\n<p>The allocation can fail because memory is not unlimited, or something else could happen; what is the behavior in such cases? I can't find any information about it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1499247922, "post_id": 44922542, "comment_id": 76820811, "body": "Why do not you use a macro?"}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1499247959, "post_id": 44922542, "comment_id": 76820839, "body": "@Boiethios, I could, but then I would lose the method-like chaining syntax... correct?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499248042, "post_id": 44922542, "comment_id": 76820898, "body": "No, you create a macro <code>.expect_fmt(&quot;...&quot;, ...)</code> that expands to <code>expect(&amp;format(&quot;...&quot;, ...))</code>"}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1499248152, "post_id": 44922542, "comment_id": 76820977, "body": "@Boiethios: I&#39;m still a Rust beginner - I assumed that macros could not be used with method-like syntax *(i.e. you have to write something like <code>expect_fmt!(File::open(p), &quot;{} not found&quot;, p)</code>... If I&#39;m wrong, I&#39;d love to see your answer"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499248341, "post_id": 44922542, "comment_id": 76821126, "body": "Maybe you are right. It seems you cannot chain with a macro."}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 1, "creation_date": 1499248818, "post_id": 44922542, "comment_id": 76821525, "body": "This was already proposed in the past: <a href=\"https://github.com/rust-lang/rfcs/issues/1952\" rel=\"nofollow noreferrer\">RFC 1952</a>, but the answer to it was basically <code>unwrap_or_else</code>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1525329863, "post_id": 44922542, "comment_id": 87315077, "body": "If one of the answers below fixes your issue, you should accept it (click the check mark next to the appropriate answer). That does two things. It lets everyone know your issue has been resolved to your satisfaction, and it gives the person that helps you credit for the assist. <a href=\"http://meta.stackexchange.com/a/5235\">See here</a> for a full explanation. ;)"}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1525338333, "post_id": 44922542, "comment_id": 87319829, "body": "@hellow: I know."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1525341369, "post_id": 44922542, "comment_id": 87321820, "body": "I was sure, that you know, but you opened a bounty and have two answers which you haven&#39;t commented yet. Either accept one of them and give the bounty to the user or clarify why the answer doesn&#39;t suit you."}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1525344560, "post_id": 44922542, "comment_id": 87323869, "body": "@hellow: the bounty ends tomorrow. I will select an answer before then."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1524846965, "creation_date": 1524846965, "answer_id": 50066809, "question_id": 44922542, "link": "https://stackoverflow.com/questions/44922542/is-it-possible-to-implement-a-method-that-takes-a-format-string/50066809#50066809", "title": "Is it possible to implement a method that takes a format string?", "body": "<p>TL;DR: No.</p>\n\n<hr>\n\n<p>While there's not much to be done about reducing your verbosity issues, you can avoid the memory allocation by using <a href=\"https://doc.rust-lang.org/std/fmt/struct.Arguments.html\" rel=\"noreferrer\"><code>std::fmt::Arguments</code></a></p>\n\n<pre><code>trait ResultExt&lt;T, E&gt; {\n    fn expect_fmt&lt;D&gt;(self, msg: D) -&gt; T\n    where\n        D: std::fmt::Display;\n}\n\nimpl&lt;T, E&gt; ResultExt&lt;T, E&gt; for Result&lt;T, E&gt;\nwhere\n    E: std::error::Error,\n{\n    fn expect_fmt&lt;D&gt;(self, msg: D) -&gt; T\n    where\n        D: std::fmt::Display,\n    {\n        match self {\n            Ok(t) =&gt; t,\n            Err(e) =&gt; panic!(\"{}: {}\", msg, e),\n        }\n    }\n}\n\nuse std::fs::File;\n\nfn main() {\n    let p = \"foo.txt\";\n    let f = File::open(p).expect_fmt(format_args!(\"{} not found\", p));\n}\n</code></pre>\n\n<p>Feel free to adjust the trait bounds as you see fit.</p>\n\n<blockquote>\n  <p>not possible without variadic generic functions and <strong>compile-time parsing of strings</strong></p>\n</blockquote>\n\n<p>That's exactly what the <code>format_args</code> macro does, but you still have to call it.</p>\n"}, {"tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 5, "last_activity_date": 1524991453, "creation_date": 1524991453, "answer_id": 50084824, "question_id": 44922542, "link": "https://stackoverflow.com/questions/44922542/is-it-possible-to-implement-a-method-that-takes-a-format-string/50084824#50084824", "title": "Is it possible to implement a method that takes a format string?", "body": "<p>For avoiding eagerly formatting of the error message a closure may be used, toghether with a simple macro for reducing verbosity a little bit:</p>\n\n<pre><code>macro_rules! crash {\n    ( $( $p:tt ),* ) =&gt; {\n        |_| panic!($($p),*);\n    };\n}\n</code></pre>\n\n<p>then the statement sugarizes as:</p>\n\n<pre><code>    let f = File::open(p).unwrap_or_else(crash!(\"{} not found\", p));\n</code></pre>\n\n<p>No much added value with this approach.</p>\n\n<p>Have you considered <a href=\"https://github.com/rust-lang-nursery/error-chain\" rel=\"noreferrer\">error-chain</a> or <a href=\"https://github.com/rust-lang-nursery/failure\" rel=\"noreferrer\">failure</a> as alternatives for your error management design?</p>\n\n<p>They have a lot to offer for effective error handling.</p>\n\n<p>Using a simple macro, you should anyway tweak <em>creatively</em> the syntax to get near your desiderata, below an <code>error-chain</code> based example:</p>\n\n<pre><code>macro_rules! or {\n    ( $( $p:tt ),* ) =&gt; {{\n        || format!($($p),*)\n    }};\n}\n\nfn run() -&gt; Result&lt;()&gt; {\n    use std::fs::File;\n    // This operation will fail\n    let p = \"foo\";\n\n    File::open(p).chain_err(or!(\"unable to open {} file\", p))?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>Read as: invoke <code>chain_error</code> method with a variadic arg list.</p>\n"}], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 408, "favorite_count": 1, "accepted_answer_id": 50066809, "answer_count": 2, "score": 8, "last_activity_date": 1524991453, "creation_date": 1499247746, "last_edit_date": 1499349268, "question_id": 44922542, "link": "https://stackoverflow.com/questions/44922542/is-it-possible-to-implement-a-method-that-takes-a-format-string", "title": "Is it possible to implement a method that takes a format string?", "body": "<p>I've found myself using <code>.expect(\"...\")</code> to panic with an helpful error message in a lot of places where I don't care about recovering from an error. Example:</p>\n\n<pre><code>let p = \"foo.txt\";\nlet f = File::open(p).expect(\"File not found\");\n</code></pre>\n\n<p>However, I would like to print more information by using a formatted string. This is what I could do:</p>\n\n<pre><code>let f = File::open(p).expect(&amp;format(\"{} not found\", p));\n</code></pre>\n\n<p>This has two problems:</p>\n\n<ol>\n<li><p>The <code>format</code> call will be evaluated eagerly.</p></li>\n<li><p>It's unnecessarily verbose.</p></li>\n</ol>\n\n<p>Ideally, I would like to write:</p>\n\n<pre><code>// pseudocode\nlet f = File::open(p).expect_fmt(\"{} not found\", p);\n</code></pre>\n\n<p>But I suppose that's not possible without variadic generic functions and compile-time parsing of strings.</p>\n\n<p>The only alternative I've found is the following:</p>\n\n<pre><code>let f = File::open(p).unwrap_or_else(|_| panic!(\"{} not found\", p));\n</code></pre>\n\n<p>Which is still a little bit too verbose for my taste.</p>\n\n<p>It's acceptable if the answer uses nightly Rust.</p>\n"}, {"tags": ["multithreading", "rust", "barrier"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499243417, "post_id": 44916445, "comment_id": 76817472, "body": "Are to asking how to synchronize threads without keeping track of thread synchronization mechanisms? You have to keep those handles somewhere if you want to join them later. Since vectors are resizable, what&#39;s wrong with making and keeping that variable number of handles and barrier instances?"}], "answers": [{"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 1, "last_activity_date": 1499272099, "last_edit_date": 1499272099, "creation_date": 1499271345, "answer_id": 44931341, "question_id": 44916445, "link": "https://stackoverflow.com/questions/44916445/how-can-i-wait-for-an-unknown-number-of-rust-threads-to-complete-without-using-t/44931341#44931341", "title": "How can I wait for an unknown number of Rust threads to complete without using tracking handles?", "body": "<p>You can use spinlock on atomic for waiting for all threads to exit. Of course, instead of using static atomic, you can pass <code>Arc&lt;AtomicUsize&gt;</code> into each thread. </p>\n\n<p><code>Ordering::SeqCst</code> is probably too strong, but concurrent programming is hard, and I'm not sure how this ordering can be relaxed.</p>\n\n<p>While it can be done this way, cost of creating threads will probably dwarf micro optimization like this. Also it's worth considering that busy wait can decrease performance of a program.</p>\n\n<pre><code>use std::panic;\nuse std::sync::atomic::{AtomicUsize, Ordering, ATOMIC_USIZE_INIT};\nuse std::thread;\nuse std::time::Duration;\n\nstatic GLOBAL_THREAD_COUNT: AtomicUsize = ATOMIC_USIZE_INIT;\n\nfn main() {\n    for i in 0..10 {\n        // mark that the thread is about to run\n        // we need to do it in the main thread to prevent spurious exits\n        GLOBAL_THREAD_COUNT.fetch_add(1, Ordering::SeqCst);\n        thread::spawn(move|| {\n            // We need to catch panics to reliably signal exit of a thread\n            let result = panic::catch_unwind(move || {\n                // do some work\n                println!(\"{}-th thread reporting\", i+1);\n            });\n            // process errors\n            match result {\n                _ =&gt; {}\n            }\n            // signal thread exit\n            GLOBAL_THREAD_COUNT.fetch_sub(1, Ordering::SeqCst);\n        });\n    }\n    // Wait for other threads to finish.\n    while GLOBAL_THREAD_COUNT.load(Ordering::SeqCst) != 0 {\n        thread::sleep(Duration::from_millis(1)); \n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1681e2d720b7125cbe9347b76151e5a9&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2211, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1499349032, "creation_date": 1499224069, "last_edit_date": 1499349032, "question_id": 44916445, "link": "https://stackoverflow.com/questions/44916445/how-can-i-wait-for-an-unknown-number-of-rust-threads-to-complete-without-using-t", "title": "How can I wait for an unknown number of Rust threads to complete without using tracking handles?", "body": "<p>What are some good ways to adapt this <code>Barrier</code> example to handle two differences:</p>\n\n<ol>\n<li><p>the number of items is not known in advance (for example, in the case where splitting a large file into lines)</p></li>\n<li><p>without tracking thread handles (e.g. without using the <code>handles</code> vector in the example below). The motivation is that doing so adds additional overhead.</p></li>\n</ol>\n\n<p>Example code:</p>\n\n<pre><code>use std::sync::{Arc, Barrier};\nuse std::thread;\n\nlet mut handles = Vec::with_capacity(10);\nlet barrier = Arc::new(Barrier::new(10));\nfor _ in 0..10 {\n    let c = barrier.clone();\n    handles.push(thread::spawn(move|| {\n        // do some work\n        c.wait();\n    }));\n}\n// Wait for other threads to finish.\nfor handle in handles {\n    handle.join().unwrap();\n}\n</code></pre>\n\n<p>Code snippet is adapted slightly from the <a href=\"https://doc.rust-lang.org/std/sync/struct.Barrier.html\" rel=\"nofollow noreferrer\"><code>Barrier</code> docs</a>.</p>\n\n<p>The first thing that crossed my mind would be (if possible) to mutate the inner value of the <code>Barrier</code>; however, the API does not provide mutable access to the <code>num_threads</code> property of the <code>Barrier</code> struct.</p>\n\n<p>Another idea would be to not use the <code>Barrier</code> and instead write custom  logic with <code>AtomicUsize</code>.</p>\n\n<p>I'm open to learning the most ergonomic / idiomatic ways to do this in Rust.</p>\n"}, {"tags": ["rust"], "owner": {"reputation": 457, "user_id": 2543751, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/bbafac0568a7f5dbcc1653624762cbd4?s=128&d=identicon&r=PG", "display_name": "Lonewolf", "link": "https://stackoverflow.com/users/2543751/lonewolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 93, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1499260845, "creation_date": 1499222741, "last_edit_date": 1499260845, "question_id": 44916283, "link": "https://stackoverflow.com/questions/44916283/trait-deref-constraint", "title": "Trait deref constraint", "body": "<p>I am trying to use <a href=\"https://github.com/japaric/blue-pill\" rel=\"nofollow noreferrer\">https://github.com/japaric/blue-pill</a> with a different microcontroller crate (<a href=\"https://github.com/nikhilkalige/stm32f411\" rel=\"nofollow noreferrer\">https://github.com/nikhilkalige/stm32f411</a>). I am getting build errors when I try to do this. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>unsafe impl TIM for TIM3 {\n   |             ^^^ expected struct `stm32f411::tim3::RegisterBlock`, found struct `stm32f411::tim2::RegisterBlock`\n   |\n   = note: expected type `stm32f411::tim3::RegisterBlock`\n              found type `stm32f411::tim2::RegisterBlock`\n   = note: required by `timer::TIM`\n</code></pre>\n\n<p>I am having a hard time understanding why this would compile in the first place when used without changing the microcontroller crate. The trait is implemented as below</p>\n\n<pre><code>/// IMPLEMENTATION DETAIL\npub unsafe trait TIM: Deref&lt;Target = tim2::RegisterBlock&gt; {\n    /// IMPLEMENTATION DETAIL\n    type GPIO: Deref&lt;Target = gpioa::RegisterBlock&gt;;\n}\n\nunsafe impl TIM for TIM2 {\n    type GPIO = GPIOA;\n}\n\nunsafe impl TIM for TIM3 {\n    type GPIO = GPIOA;\n}\n\nunsafe impl TIM for TIM4 {\n    type GPIO = GPIOB;\n}\n</code></pre>\n\n<p>So when you implement <code>TIM</code> for <code>TIM3</code> should it not access <code>tim3::RegisterBlock</code>? and the same for <code>type GPIO = GPIOB</code></p>\n"}, {"tags": ["file", "io", "rust"], "answers": [{"tags": [], "owner": {"reputation": 828, "user_id": 2736686, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3e64d071a0d538d0b88040e4bfa22d2d?s=128&d=identicon&r=PG", "display_name": "Erik Uggeldahl", "link": "https://stackoverflow.com/users/2736686/erik-uggeldahl"}, "is_accepted": true, "score": 3, "last_activity_date": 1499202064, "last_edit_date": 1592644375, "creation_date": 1499201507, "answer_id": 44913852, "question_id": 44913851, "link": "https://stackoverflow.com/questions/44913851/why-do-the-functions-in-stdioread-take-a-buffer/44913852#44913852", "title": "Why do the functions in std::io::Read take a buffer?", "body": "<p><a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0517-io-os-reform.md#read\" rel=\"nofollow noreferrer\">RFC 517</a> discusses these functions and describes two reasons for why the functions take buffers over returning values:</p>\n<blockquote>\n<ul>\n<li><p>Performance. When it is known that reading will involve some large number of bytes, the buffer can be preallocated in advance.</p>\n</li>\n<li><p>&quot;Atomicity&quot; concerns. For read_to_end, it's possible to use this API to retain data collected so far even when a read fails in the middle. For read_to_string, this is not the case, because UTF-8 validity cannot be ensured in such cases; but if intermediate results are wanted, one can use read_to_end and convert to a String only at the end.</p>\n</li>\n</ul>\n</blockquote>\n<p>For the first point, a string can be pre-allocated using the associated function <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.with_capacity\" rel=\"nofollow noreferrer\"><code>String::with_capacity</code></a>. A very similar function exists for vectors: <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.with_capacity\" rel=\"nofollow noreferrer\"><code>Vec::with_capacity</code></a>.</p>\n"}], "owner": {"reputation": 828, "user_id": 2736686, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/3e64d071a0d538d0b88040e4bfa22d2d?s=128&d=identicon&r=PG", "display_name": "Erik Uggeldahl", "link": "https://stackoverflow.com/users/2736686/erik-uggeldahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 44913852, "answer_count": 1, "score": 2, "last_activity_date": 1499202064, "creation_date": 1499201507, "question_id": 44913851, "link": "https://stackoverflow.com/questions/44913851/why-do-the-functions-in-stdioread-take-a-buffer", "title": "Why do the functions in std::io::Read take a buffer?", "body": "<p>Why do the methods in <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\"><code>std::io::Read</code></a>, namely <code>read_to_end</code>, <code>read_to_string</code>, and <code>read_exact</code> take a buffer rather than returning the result? The current return value is a <code>Result&lt;usize&gt;</code> (or <code>Result&lt;()&gt;</code>), but could that not be made into a tuple instead, also containing the result?</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1508523535, "post_id": 44912349, "comment_id": 80657515, "body": "It&#39;s not required to have the bound <code>Sized</code>; that&#39;s the default."}], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 3196469, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d550bb2a0906970161a828d9cc047354?s=128&d=identicon&r=PG&f=1", "display_name": "mushin", "link": "https://stackoverflow.com/users/3196469/mushin"}, "edited": false, "score": 0, "creation_date": 1500136287, "post_id": 44925389, "comment_id": 77211624, "body": "Thanks, that was pretty much what I needed.  My ListBuilder also needed to implement Clone, which I solved using the method described here: <a href=\"https://users.rust-lang.org/t/solved-is-it-possible-to-clone-a-boxed-trait-object/1714/6\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 6, "last_activity_date": 1553089921, "last_edit_date": 1553089921, "creation_date": 1499255314, "answer_id": 44925389, "question_id": 44912349, "link": "https://stackoverflow.com/questions/44912349/how-can-i-avoid-a-ripple-effect-from-changing-a-concrete-struct-to-generic/44925389#44925389", "title": "How can I avoid a ripple effect from changing a concrete struct to generic?", "body": "<p>You can use the <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait object</a> <code>Box&lt;dyn ListBuilder&gt;</code> to hide the type of the builder. Some of the consequences are dynamic dispatch (calls to the <code>build</code> method will go through a virtual function table), additional memory allocation (boxed trait object), and some <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects\" rel=\"nofollow noreferrer\">restrictions on the trait </a> <code>ListBuilder</code>.</p>\n\n<pre><code>trait ListBuilder {\n    fn build(&amp;self, list: &amp;mut Vec&lt;String&gt;);\n}\n\nstruct Conf {\n    list: Vec&lt;String&gt;,\n    builder: Box&lt;dyn ListBuilder&gt;,\n}\n\nimpl Conf {\n    fn init(&amp;mut self) {\n        self.builder.build(&amp;mut self.list);\n    }\n}\n\nimpl Conf {\n    pub fn new&lt;T: ListBuilder + 'static&gt;(lb: T) -&gt; Self {\n        let mut c = Conf {\n            list: vec![],\n            builder: Box::new(lb),\n        };\n        c.init();\n        c\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1508524932, "last_edit_date": 1508524932, "creation_date": 1508523517, "answer_id": 46855046, "question_id": 44912349, "link": "https://stackoverflow.com/questions/44912349/how-can-i-avoid-a-ripple-effect-from-changing-a-concrete-struct-to-generic/46855046#46855046", "title": "How can I avoid a ripple effect from changing a concrete struct to generic?", "body": "<p>While generic types can seem to \"infect\" the rest of your code, that's exactly why they are beneficial! The compiler knowledge about how big and specifically what type is used allow it to make better optimization decisions.</p>\n\n<p>That being said, it can be annoying! If you have a small number of types that implement your trait, you can also construct an enum of those types and delegate to the child implementations:</p>\n\n<pre><code>struct FromUser;\nimpl ListBuilder for FromUser { /**/ }\n\nstruct FromFile;\nimpl ListBuilder for FromFile { /**/ }\n\nenum MyBuilders {\n    User(FromUser),\n    File(FromFile),\n}\n\nimpl ListBuilder for MyBuilders {\n    fn build(&amp;self, list: &amp;mut Vec&lt;String&gt;) {\n        use MyBuilders::*;\n        match *self {\n            User(ref u) =&gt; u.build(list),\n            File(ref f) =&gt; f.build(list),\n        }\n    }\n}\n</code></pre>\n\n<p>Now the concrete type would be <code>Conf&lt;MyBuilders&gt;</code>, which you can use a type alias to hide.</p>\n\n<p>I've used this to good effect when I wanted to be able to inject test implementations into code during testing, but had a fixed set of implementations that were used in the production code.</p>\n"}], "owner": {"reputation": 173, "user_id": 3196469, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d550bb2a0906970161a828d9cc047354?s=128&d=identicon&r=PG&f=1", "display_name": "mushin", "link": "https://stackoverflow.com/users/3196469/mushin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 610, "favorite_count": 0, "accepted_answer_id": 44925389, "answer_count": 2, "score": 5, "last_activity_date": 1553090016, "creation_date": 1499193495, "last_edit_date": 1553090016, "question_id": 44912349, "link": "https://stackoverflow.com/questions/44912349/how-can-i-avoid-a-ripple-effect-from-changing-a-concrete-struct-to-generic", "title": "How can I avoid a ripple effect from changing a concrete struct to generic?", "body": "<p>I have a configuration struct that looks like this:</p>\n\n<pre><code>struct Conf {\n    list: Vec&lt;String&gt;,\n}\n</code></pre>\n\n<p>The implementation was internally populating the <code>list</code> member, but now I have decided that I want to delegate that task to another object.  So I have:</p>\n\n<pre><code>trait ListBuilder {\n    fn build(&amp;self, list: &amp;mut Vec&lt;String&gt;);\n}\n\nstruct Conf&lt;T: Sized + ListBuilder&gt; {\n    list: Vec&lt;String&gt;,\n    builder: T,\n}\n\nimpl&lt;T&gt; Conf&lt;T&gt;\nwhere\n    T: Sized + ListBuilder,\n{\n    fn init(&amp;mut self) {\n        self.builder.build(&amp;mut self.list);\n    }\n}\n\nimpl&lt;T&gt; Conf&lt;T&gt;\nwhere\n    T: Sized + ListBuilder,\n{\n    pub fn new(lb: T) -&gt; Self {\n        let mut c = Conf {\n            list: vec![],\n            builder: lb,\n        };\n        c.init();\n        c\n    }\n}\n</code></pre>\n\n<p>That seems to work fine, but now <em>everywhere</em> that I use <code>Conf</code>, I have to change it:</p>\n\n<pre><code>fn do_something(c: &amp;Conf) {\n    // ...\n}\n</code></pre>\n\n<p>becomes</p>\n\n<pre><code>fn do_something&lt;T&gt;(c: &amp;Conf&lt;T&gt;)\nwhere\n    T: ListBuilder,\n{\n    // ...\n}\n</code></pre>\n\n<p>Since I have many such functions, this conversion is painful, especially since most usages of the <code>Conf</code> class don't care about the <code>ListBuilder</code> - it's an implementation detail. I'm concerned that if I add another generic type to <code>Conf</code>, now I have to go back and add another generic parameter everywhere.  Is there any way to avoid this?</p>\n\n<p>I know that I could use a closure instead for the list builder, but I have the added constraint that my <code>Conf</code> struct needs to be <code>Clone</code>, and the actual builder implementation is more complex and has several functions and some state in the builder, which makes a closure approach unwieldy.</p>\n"}, {"tags": ["linux", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 5080, "user_id": 7077117, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sTxBl.jpg?s=128&g=1", "display_name": "David Varela", "link": "https://stackoverflow.com/users/7077117/david-varela"}, "edited": false, "score": 1, "creation_date": 1499203626, "post_id": 44912785, "comment_id": 76804847, "body": "Sweet! It seems pretty painless, I guess this will have to do until the Cargo team implement it natively."}, {"owner": {"reputation": 1748, "user_id": 712616, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed8d5ecc64476d9262ab3b1a9265b2a6?s=128&d=identicon&r=PG", "display_name": "AAAfarmclub", "link": "https://stackoverflow.com/users/712616/aaafarmclub"}, "edited": false, "score": 0, "creation_date": 1599562452, "post_id": 44912785, "comment_id": 112805555, "body": "cargo clean will remove the entire target directory. See: <a href=\"https://doc.rust-lang.org/cargo/commands/cargo-clean.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/cargo/commands/cargo-clean.html</a>"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 10, "last_activity_date": 1499260696, "last_edit_date": 1499260696, "creation_date": 1499195578, "answer_id": 44912785, "question_id": 44912189, "link": "https://stackoverflow.com/questions/44912189/is-there-any-way-to-rename-a-cargo-project/44912785#44912785", "title": "Is there any way to rename a Cargo project?", "body": "<p>I think that you should change it manually. Not so difficult, really.</p>\n\n<p>I run this code:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo new smurf --bin\n     Created binary (application) `smurf` project\n$ cd smurf/\nsmurf$ cargo build\n     ....\nsmurf$ grep -rl smurf .\n./target/debug/smurf.d\n./target/debug/smurf\n./target/debug/.fingerprint/smurf-35f069edf7faaa12/bin-smurf-35f069edf7faaa12.json\n./target/debug/.fingerprint/smurf-35f069edf7faaa12/dep-bin-smurf-35f069edf7faaa12\n./target/debug/deps/smurf-35f069edf7faaa12\n./Cargo.lock\n./Cargo.toml\n</code></pre>\n\n<p>From all these files, the whole <code>target</code> may be just deleted. The <code>.lock</code> file can also be deleted. And the <code>Cargo.toml</code>... well you can just edit it.</p>\n\n<p>I tried changing only the <code>Cargo.toml</code> and all just works. However you end up with useless files in <code>target</code> so I recommend deleting those anyway.</p>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 13152382, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6602a8fa37262d4f6d227ea93b1a5a5c?s=128&d=identicon&r=PG&f=1", "display_name": "Julius_Gu", "link": "https://stackoverflow.com/users/13152382/julius-gu"}, "is_accepted": false, "score": 0, "last_activity_date": 1585568381, "creation_date": 1585568381, "answer_id": 60929754, "question_id": 44912189, "link": "https://stackoverflow.com/questions/44912189/is-there-any-way-to-rename-a-cargo-project/60929754#60929754", "title": "Is there any way to rename a Cargo project?", "body": "<p>Under Linux this is fairly strait forward:</p>\n\n<ul>\n<li>go to the directory where your project is located e.g. if your project was called hello_world in a folder named rust then go to the rust folder\n<code>pi@raspberrypi:~/workspace/rust/hello_world $ cd ..</code></li>\n<li>from there you can rename the project by\n\n<ol>\n<li>mv [current name of the project] [name you want] to move. E.g. if I wanted to rename it from hello_world to hello_rust I would type\n<code>mv hello_world/ hello_rust/</code> to rename the folder.</li>\n<li>now you only have to change the name in your Cargo.toml file:\n\n<ul>\n<li><code>pi@raspberrypi:~/workspace/rust $ cd hello_rust/</code></li>\n<li><code>pi@raspberrypi:~/workspace/rust/hello_rust $ geany Cargo.toml</code></li>\n<li>(I am using geany but you can use whatever text editor you like)</li>\n<li>in Cargo.toml in the second line change </li>\n<li><code>name = \"hello_world\"</code> to <code>name = \"hello_rust\"</code></li>\n</ul></li>\n</ol></li>\n</ul>\n\n<p>Hope that this might help someone in the future</p>\n"}], "owner": {"reputation": 5080, "user_id": 7077117, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sTxBl.jpg?s=128&g=1", "display_name": "David Varela", "link": "https://stackoverflow.com/users/7077117/david-varela"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5872, "favorite_count": 0, "accepted_answer_id": 44912785, "answer_count": 2, "score": 9, "last_activity_date": 1585568381, "creation_date": 1499192724, "last_edit_date": 1499260673, "question_id": 44912189, "link": "https://stackoverflow.com/questions/44912189/is-there-any-way-to-rename-a-cargo-project", "title": "Is there any way to rename a Cargo project?", "body": "<p>I created a project using: <code>cargo new projectname --bin</code>.\nHow do I change <code>projectname</code> to some other name?</p>\n\n<p>I checked the <a href=\"http://manpages.ubuntu.com/manpages/yakkety/man1/cargo.1.html#contenttoc2\" rel=\"noreferrer\">man page</a> and the <a href=\"http://doc.crates.io/guide.html\" rel=\"noreferrer\">Cargo documentation</a>. I also ran:</p>\n\n<ul>\n<li><code>cargo help</code></li>\n<li><code>cargo --list</code></li>\n<li><code>man cargo</code></li>\n</ul>\n\n<p>In the metadata files (Cargo.toml, Cargo.lock, ...), there is \"name\" and \"path\". I suppose I could change them manually, but I don't know if that would break anything.</p>\n\n<p>What would be the best way to do this?</p>\n"}, {"tags": ["macros", "rust", "pattern-matching"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1499185659, "post_id": 44910395, "comment_id": 76797782, "body": "Because you matched an <code>expr</code>, not a <code>pat</code>.  Expressions and patterns are two totally different parts of the language."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1499185918, "post_id": 44910395, "comment_id": 76797894, "body": "@DK Indeed they are. But that alone doesn&#39;t explain why <code>0</code> is accepted as a pattern while <code>-1</code> isn&#39;t. The part where <code>-1</code> is composed of the <code>-</code> token followed by the literal could be the culprit here."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 1, "creation_date": 1499186401, "post_id": 44910395, "comment_id": 76798107, "body": "Huh.  I&#39;m surprised that it does accept <code>0</code>.  I suspect it&#39;s because <code>-1</code> is (if I remember correctly) internally represented as <code>Neg::neg(1)</code> rather than a literal negative integer, and that might be tripping up whatever part of the code is trying to convert the <code>expr</code> AST into a pattern."}], "answers": [{"tags": [], "owner": {"reputation": 2645, "user_id": 5254193, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PTHapBqhSQM/AAAAAAAAAAI/AAAAAAAABA4/r5mrExVuDgU/photo.jpg?sz=128", "display_name": "Masaki Hara", "link": "https://stackoverflow.com/users/5254193/masaki-hara"}, "is_accepted": true, "score": 5, "last_activity_date": 1499205019, "creation_date": 1499205019, "answer_id": 44914382, "question_id": 44910395, "link": "https://stackoverflow.com/questions/44910395/why-is-a-negative-integer-not-a-valid-pattern-in-a-macro/44914382#44914382", "title": "Why is a negative integer not a valid pattern in a macro?", "body": "<p>This is <a href=\"https://github.com/rust-lang/rust/issues/42820\" rel=\"noreferrer\">a bug in the compiler</a> and is already <a href=\"https://github.com/rust-lang/rust/pull/42886\" rel=\"noreferrer\">fixed in the nightly version</a> as of today (Jul 5, 2017).</p>\n"}], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 307, "favorite_count": 0, "accepted_answer_id": 44914382, "answer_count": 1, "score": 5, "last_activity_date": 1499205019, "creation_date": 1499184654, "question_id": 44910395, "link": "https://stackoverflow.com/questions/44910395/why-is-a-negative-integer-not-a-valid-pattern-in-a-macro", "title": "Why is a negative integer not a valid pattern in a macro?", "body": "<p>Let us consider a simple enum implementation with a static method that check whether a value has an associated value (the efficiency of the implementation is not to be regarded here):</p>\n\n<pre><code>enum Letter {\n    Alpha = -1,\n    A = 0,\n    B = 1,\n    C = 2,\n}\n\nimpl Letter {\n    pub fn in_enum(value: isize) -&gt; bool\n    {\n        match value {\n            -1 =&gt; true,\n            0 =&gt; true,\n            1 =&gt; true,\n            2 =&gt; true,\n            _ =&gt; false,\n        }\n    }\n}\n</code></pre>\n\n<p>Now, let us write a macro for building enums with an equivalent <code>in_enum</code> method. The macro below was written with some guidance from the Serde guide for <a href=\"https://serde.rs/enum-number.html\" rel=\"noreferrer\">enum deserialization as numbers</a>, in which matching for enum variant values also occurs.</p>\n\n<pre><code>macro_rules! my_enum {\n    ($name:ident { $($variant:ident = $value:expr, )* }) =&gt; {\n        #[derive(Clone, Copy, Debug, Eq, PartialEq)]\n        pub enum $name {\n            $($variant = $value,)*\n        }\n\n        impl $name {\n            pub fn in_enum(value: isize) -&gt; bool\n            {\n                match value {\n                    $( $value =&gt; true, )*\n                    _ =&gt; false,\n                }\n            }\n        }\n    }\n}\n\nmy_enum!(Letter {\n  Alpha = -1,\n  A = 0,\n  B = 1,\n  C = 2,\n});\n</code></pre>\n\n<p><a href=\"http://play.integer32.com/?gist=cb85a3b7fed47c7f71b790d813c039d8&amp;version=stable\" rel=\"noreferrer\">Playground</a>.\nNow, the compiler won't accept the variant with a negative integer.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected pattern, found `-1`\n  --&gt; src/main.rs:13:24\n   |\n13 |                     $( $value =&gt; true, )*\n   |                        ^^^^^^\n</code></pre>\n\n<p>This seems to happen regardless of how I write this pattern down in the macro, or whether I use <code>i32</code> or <code>isize</code> for the <code>value</code> method parameter. Changing the fragment specifier of <code>$value</code> to <code>pat</code> is also out of the question: the compiler will refuse to build the enum, even without negative variant values.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found `-1`\n --&gt; src/main.rs:5:26\n  |\n5 |             $($variant = $value,)*\n  |                          ^^^^^^\n</code></pre>\n\n<p>What's surprising about this is that it works without using macros, as well as when I discard the <code>Alpha</code> variant.</p>\n\n<p>Why does this happen?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 3, "last_activity_date": 1499850435, "last_edit_date": 1499850435, "creation_date": 1499183807, "answer_id": 44910168, "question_id": 44909967, "link": "https://stackoverflow.com/questions/44909967/move-mutable-reference-out-of-mutable-object/44910168#44910168", "title": "Move mutable reference out of mutable object", "body": "<p>I would use a <a href=\"https://doc.rust-lang.org/std/mem/fn.swap.html\" rel=\"nofollow noreferrer\"><code>swap</code></a>:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    if let Test::A(_) = *self {\n        let mut to_swap = Test::B;\n\n        std::mem::swap(self, &amp;mut to_swap);\n        match to_swap {\n            Test::A(r)  =&gt; Some(r),\n            _           =&gt; unreachable!(), // never reached\n        }\n    } else {\n        None\n    }\n}\n</code></pre>\n\n<p>You can use an helper function as follow:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for Test&lt;'a&gt; {\n    type Item = &amp;'a mut usize;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if let Test::A(_) = *self {\n            let mut to_swap = Test::B;\n\n            std::mem::swap(self, &amp;mut to_swap);\n            to_swap.consume_as_a()\n        } else {\n            None\n        }\n    }\n}\n\nimpl&lt;'a&gt; Test&lt;'a&gt; {\n    fn consume_as_a(self) -&gt; Option&lt;&amp;'a mut usize&gt; {\n        match self {\n            Test::A(r)  =&gt; Some(r),\n            _           =&gt; None,\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 459, "favorite_count": 0, "accepted_answer_id": 44910168, "answer_count": 1, "score": 3, "last_activity_date": 1499850435, "creation_date": 1499183038, "question_id": 44909967, "link": "https://stackoverflow.com/questions/44909967/move-mutable-reference-out-of-mutable-object", "title": "Move mutable reference out of mutable object", "body": "<p>I have an iterator over an <code>enum</code> that has a mutable reference in one of its variants. Now I want to move this reference out <code>self</code> and return it. To avoid having two mutable references to the same object at the same time, I want to change the enum variant of <code>self</code> to one that does not have the reference. Below is a code example:</p>\n\n<pre><code>enum Test&lt;'a&gt; {\n    A(&amp;'a mut usize),\n    B,\n}\n\nimpl&lt;'a&gt; Iterator for Test&lt;'a&gt; {\n    type Item = &amp;'a mut usize;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match *self {\n            Test::A(r) =&gt; Some(r), // TODO: return mutable reference and change self to B\n            Test::B =&gt; None,\n        }\n    }\n}\n\nfn main() {\n    let mut v = 1;\n    let mut it = Test::A(&amp;mut v);\n    it.next();\n}\n</code></pre>\n\n<p>The question is related to <a href=\"https://stackoverflow.com/questions/44899992/change-selector-in-match-when-selector-is-a-mutable-reference\">Change selector in match when selector is a mutable reference</a>, but that solution does not work here.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499179290, "post_id": 44908586, "comment_id": 76794149, "body": "This might be useful: <a href=\"https://doc.rust-lang.org/nightly/nomicon/borrow-splitting.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/nomicon/borrow-splitting.html</a>. I didn&#39;t look at your requirement in detail but <code>slice.split_at_mut()</code> is likely what you need."}, {"owner": {"reputation": 3972, "user_id": 3478605, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3891912f969a89c55fccf7eae0a1c065?s=128&d=identicon&r=PG&f=1", "display_name": "Val&#233;ry", "link": "https://stackoverflow.com/users/3478605/val%c3%a9ry"}, "edited": false, "score": 0, "creation_date": 1499179611, "post_id": 44908586, "comment_id": 76794341, "body": "Indeed, I use it in the second match arm!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499179690, "post_id": 44908586, "comment_id": 76794390, "body": "Oh! That will teach me not to just scan and make assumptions!"}], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 2, "last_activity_date": 1499182092, "creation_date": 1499182092, "answer_id": 44909705, "question_id": 44908586, "link": "https://stackoverflow.com/questions/44908586/tree-of-mutable-slices/44909705#44909705", "title": "Tree of mutable slices", "body": "<p>I'm not sure how to fix the whole case, but I might be able to lead you in the right direction. First, you need to be explicit about the lifetime of <code>self</code>:</p>\n\n<pre><code>fn split(&amp;'a mut self, max: usize)\n</code></pre>\n\n<p>The next issue is a non-exhaustive match; this can be easily avoided (for now) with the following base case:</p>\n\n<pre><code>_ =&gt; unimplemented!()\n</code></pre>\n\n<p>Now the issue is that you mutably borrow <code>trees</code> twice in the first match arm; this can be solved by using a loop:</p>\n\n<pre><code>&amp;mut Tree::Branch(ref mut trees) =&gt; {\n    for tree in trees.iter_mut() {\n        tree.split(max);\n    }\n}\n</code></pre>\n\n<p>Now you have:</p>\n\n<pre><code>error[E0506]: cannot assign to `*self` because it is borrowed\n  --&gt; &lt;anon&gt;:18:17\n   |\n14 |             &amp;mut Tree::Leaf(ref mut leaf) if leaf.len() &gt; max =&gt; {\n   |                             ------------ borrow of `*self` occurs here\n...\n18 |                 *self = Tree::Branch(Box::new(trees));\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `*self` occurs here\n</code></pre>\n\n<p>This can be avoided by not destructuring the <code>Leaf</code> in the match arm and using a helper function:</p>\n\n<pre><code>impl&lt;'a&gt; Tree&lt;'a&gt; {\n    fn get_trees(&amp;'a mut self, max: usize) -&gt; Option&lt;[Tree&lt;'a&gt;; 2]&gt; {\n        if let &amp;mut Tree::Leaf(ref mut leaf) = self {\n            if leaf.len() &gt; max {\n                let mid = leaf.len() / 2;\n                let (l, r) = leaf.split_at_mut(mid);\n                Some([Tree::Leaf(l), Tree::Leaf(r)])\n            } else {\n                None\n            }\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p>and</p>\n\n<pre><code>&amp;mut Tree::Leaf(_) =&gt; {\n    let trees = self.get_trees(max).unwrap(); // safe (under a valid match arm)\n    *self = Tree::Branch(Box::new(trees));\n}\n</code></pre>\n\n<p>Now comes a bigger problem, because you can't assign to <code>self</code> while borrowing from it. I would consider making it <code>Clone</code>able (and creating <code>trees</code> based on a copy of <code>self</code>), but in your case it can't be derived automatically; maybe someone else will have a better idea.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=68bcfcd97aeb183d6c214b660b1bb710&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Full code in the Rust playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 3972, "user_id": 3478605, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3891912f969a89c55fccf7eae0a1c065?s=128&d=identicon&r=PG&f=1", "display_name": "Val&#233;ry", "link": "https://stackoverflow.com/users/3478605/val%c3%a9ry"}, "edited": false, "score": 0, "creation_date": 1499254500, "post_id": 44910317, "comment_id": 76825542, "body": "Thanks for the useful (and safe!) technique."}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 3, "last_activity_date": 1499184399, "creation_date": 1499184399, "answer_id": 44910317, "question_id": 44908586, "link": "https://stackoverflow.com/questions/44908586/tree-of-mutable-slices/44910317#44910317", "title": "Tree of mutable slices", "body": "<p>You can make it work using two tricks, which are explained in the code.</p>\n\n<pre><code>use std::mem;\n\nenum Tree&lt;'a&gt; {\n    Branch(Box&lt;[Tree&lt;'a&gt;; 2]&gt;),\n    Leaf(&amp;'a mut[f32]),\n    Placeholder, // it's not very nice hack, but it's required for mem::replace\n}\n\nimpl&lt;'a&gt; Tree&lt;'a&gt; {\n    fn split(&amp;mut self, max: usize) {\n        let mut needs_split = false;\n        match self {\n            &amp;mut Tree::Branch(ref mut trees) =&gt; {\n                trees[0].split(max);\n                trees[1].split(max);\n            },\n            &amp;mut Tree::Leaf(ref mut leaf) if leaf.len() &gt; max =&gt; {\n                // Postpone modification of *self. We can't do it now while\n                // a part of *self is borrowed\n                needs_split = true;\n            },\n            _ =&gt; {}\n        }\n        if needs_split {\n            // move *self into cself, to be able to\n            // deconstruct content, while keeping *self not borrowed\n            let cself = mem::replace(self, Tree::Placeholder);\n            if let Tree::Leaf(leaf) = cself {\n                let mid = leaf.len() / 2;\n                let (l, r) = leaf.split_at_mut(mid);\n                let trees = [Tree::Leaf(l), Tree::Leaf(r)];\n                *self = Tree::Branch(Box::new(trees));\n            } else {\n                unreachable!()\n            }\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3972, "user_id": 3478605, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/3891912f969a89c55fccf7eae0a1c065?s=128&d=identicon&r=PG&f=1", "display_name": "Val&#233;ry", "link": "https://stackoverflow.com/users/3478605/val%c3%a9ry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 44910317, "answer_count": 2, "score": 4, "last_activity_date": 1499184399, "creation_date": 1499178618, "question_id": 44908586, "link": "https://stackoverflow.com/questions/44908586/tree-of-mutable-slices", "title": "Tree of mutable slices", "body": "<p>Some algorithms recursively partition an array into smaller pieces. You can build an explicit binary tree that results from such a process, where each leaf holds a disjoint slice of the array. If you need to alter or reorder elements in the leaf, its slice must be mutable.</p>\n\n<pre><code>enum Tree&lt;'a&gt; {\n    Branch(Box&lt;[Tree&lt;'a&gt;; 2]&gt;),\n    Leaf(&amp;'a mut[f32]),\n}\n</code></pre>\n\n<p>Suppose I need to split all the leaves that are larger than some threshold. Easy: recursively walk down the tree from the root; when I find a leaf with a slice long enough, split it into 2 halves, wrap them into a 2-leaf subtree, and replace the leaf.</p>\n\n<pre><code>impl&lt;'a&gt; Tree&lt;'a&gt; {\n    fn split(&amp;mut self, max: usize) {\n        match self {\n            &amp;mut Tree::Branch(ref mut trees) =&gt; {\n                trees[0].split(max);\n                trees[1].split(max);\n            },\n            &amp;mut Tree::Leaf(ref mut leaf) if leaf.len() &gt; max =&gt; {\n                let mid = leaf.len() / 2;\n                let (l, r) = leaf.split_at_mut(mid);\n                let trees = [Tree::Leaf(l), Tree::Leaf(r)];\n                *self = Tree::Branch(Box::new(trees));\n            },\n        }\n    }\n}\n</code></pre>\n\n<p>Unfortunately, the borrow-checker is unable to find a suitable lifetime for the <code>ref mut leaf</code> pattern. It wants it dead before allowing the assignement to <code>*self</code>, but I don't see how to make the assignment out of the match arm. </p>\n\n<p>How to make this work?</p>\n"}, {"tags": ["rust", "move-semantics", "ownership"], "comments": [{"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1499167749, "post_id": 44904677, "comment_id": 76786321, "body": "As far as I can tell by a quick glance at the <a href=\"https://docs.rs/rusted_cypher/1.1.0/rusted_cypher/index.html\" rel=\"nofollow noreferrer\">docs</a>, <a href=\"https://docs.rs/rusted_cypher/1.1.0/rusted_cypher/cypher/statement/struct.Statement.html#method.with_param\" rel=\"nofollow noreferrer\"><code>with_param</code></a> consumes its argument; you need to pick a function that takes a mutable reference to <code>statement</code> instead."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1499168004, "post_id": 44904677, "comment_id": 76786510, "body": "A little tip: as Rust is an expression-based language, you do not need to type <code>return statement;</code>, only <code>statement</code>."}], "answers": [{"tags": [], "owner": {"reputation": 1982, "user_id": 2872479, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ez7og.jpg?s=128&g=1", "display_name": "metame", "link": "https://stackoverflow.com/users/2872479/metame"}, "is_accepted": false, "score": 1, "last_activity_date": 1499173942, "creation_date": 1499173942, "answer_id": 44907020, "question_id": 44904677, "link": "https://stackoverflow.com/questions/44904677/passing-a-variable-to-a-function-which-alters-said-variable-repeatedly/44907020#44907020", "title": "Passing a variable to a function (which alters said variable) repeatedly", "body": "<p>While this doesn't answer your underlying question about passing a mutable value in the same way as your current code.</p>\n\n<p><code>rusted-cypher::Statement</code> has a <code>set_parameters</code> method which takes a <code>&amp;BTreeMap&lt;String, T&gt;</code> as its only argument.</p>\n\n<p>You can see this function in the <a href=\"https://github.com/livioribeiro/rusted-cypher/blob/master/src/cypher/statement.rs#L126\" rel=\"nofollow noreferrer\">rusted-cypher's source code</a>.</p>\n\n<p>A conceivable implementation:</p>\n\n<pre><code>pub fn create_statement(cypher: &amp;str, params: &amp;BTreeMap&lt;&amp;str, &amp;str&gt;) -&gt; rusted_cypher::Statement {\n   let mut statement = rusted_cypher::Statement::new(cypher);\n   statement.set_parameters(params);\n   statement\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1501333183, "last_edit_date": 1501333183, "creation_date": 1499177137, "answer_id": 44908102, "question_id": 44904677, "link": "https://stackoverflow.com/questions/44904677/passing-a-variable-to-a-function-which-alters-said-variable-repeatedly/44908102#44908102", "title": "Passing a variable to a function (which alters said variable) repeatedly", "body": "<p>I haven't used this API before but, according to <a href=\"https://docs.rs/rusted_cypher/1.1.0/rusted_cypher/cypher/statement/struct.Statement.html#method.with_param\" rel=\"nofollow noreferrer\">its documentation</a>:</p>\n\n<blockquote>\n  <p>This method consumes <code>self</code> and returns it with the parameter added, so the binding does not need to be mutable.</p>\n</blockquote>\n\n<p>It isn't, as you say, that the struct is \"not copyable\", it's that the <code>with_param</code> method is intentionally written in such a way that it <em>moves</em> the value and takes ownership - we can also say that it <em>consumes</em> it. Consuming the value is a common thing to do in a builder-style API because it prevents you from having accidental half-built objects lying around. Each builder method will consume the object, during which time nothing else can access it, and then return it when it's finished so you can continue using it. From the documentation:</p>\n\n<pre><code>let statement = Statement::new(\"MATCH n RETURN n\")\n    .with_param(\"param1\", \"value1\")?\n    .with_param(\"param2\", 2)?\n    .with_param(\"param3\", 3.0)?;\n</code></pre>\n\n<p>Each call to <code>with_param</code> consumes <code>statement</code> and then returns it so you can call <code>with_param</code> again.</p>\n\n<p>Where this gets a bit tricky is that the result of the <code>with_param</code> is not a <code>Statement</code>, but a <code>Result&lt;Statement, JsonError&gt;</code>. Apparently adding a parameter could cause an error so the result is wrapped up to accommodate that possibility. That's what the <code>?</code>s are for - they unwrap that result into the underlying value, or else propagate the error if that can't be done.</p>\n\n<p>As one of the other answers already suggested, a better fix is to just use the <code>set_parameters</code> method, which will set them all in one go.</p>\n\n<p>Another way to do it would be to use the return value of each call to <code>with_param</code>:</p>\n\n<pre><code>pub fn create_statement(cypher: &amp;str, params: &amp;HashMap&lt;&amp;str, &amp;str&gt;) -&gt; rusted_cypher::Statement {\n  let mut statement = rusted_cypher::Statement::new(cypher);\n  for (field, value) in params.iter() {\n      statement = statement.with_param(field.to_owned(), value.to_owned()).unwrap();\n  }\n  statement\n}\n</code></pre>\n\n<p>When you use the return value, you have access to the value again, so you can keep on using it.</p>\n\n<p>Notice that I used <code>unwrap()</code> to get the value from the <code>Result</code>. This is <em>not</em> good practice because it will cause a panic if the result is an error. I have done this here to focus on explaining move semantics without a digression into error handling, which is a topic by itself.</p>\n"}], "owner": {"reputation": 123, "user_id": 7393793, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cffa5dfe2fd16b6ae8bd799080a844fd?s=128&d=identicon&r=PG&f=1", "display_name": "rjcoupe", "link": "https://stackoverflow.com/users/7393793/rjcoupe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 44908102, "answer_count": 2, "score": 2, "last_activity_date": 1545699637, "creation_date": 1499167414, "last_edit_date": 1545699637, "question_id": 44904677, "link": "https://stackoverflow.com/questions/44904677/passing-a-variable-to-a-function-which-alters-said-variable-repeatedly", "title": "Passing a variable to a function (which alters said variable) repeatedly", "body": "<p>I'm having a play with Rust and, probably biting off far more than I can chew, am trying to write a module that will encapsulate my database traffic for the rest of the application. The code I'm struggling with is the following:</p>\n\n<pre><code>pub fn create_statement(cypher: &amp;str, params: &amp;HashMap&lt;&amp;str, &amp;str&gt;) -&gt; rusted_cypher::Statement {\n    let mut statement = rusted_cypher::Statement::new(cypher);\n    for (field, value) in params.iter() {\n        statement.with_param(field.to_owned(), value.to_owned());\n    }\n    return statement;\n}\n</code></pre>\n\n<p>This gives the following error: <code>error[E0382]: use of moved value: statement</code>. My searching has, I think, lead me to what this means (the <code>Statement</code> struct is not copyable, thus gets moved and is then ... effectively no longer accessible, I guess?), but I'm not sure how to get around it. Can anyone point me in the direction of a solution?</p>\n"}, {"tags": ["enums", "rust", "avl-tree", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 3, "last_activity_date": 1499167894, "last_edit_date": 1499167894, "creation_date": 1499167297, "answer_id": 44904640, "question_id": 44904214, "link": "https://stackoverflow.com/questions/44904214/access-values-in-boxed-nested-struct/44904640#44904640", "title": "Access values in boxed nested struct", "body": "<blockquote>\n  <p>I think, I'm understanding the error message correctly, in that destructuring the <code>AvlTree::Node</code> will take away the ownership of the tree example.</p>\n</blockquote>\n\n<p>Yes. If you still need to be able to use <code>tree</code> afterwards, you will either need to make a copy of it:</p>\n\n<pre><code>#[derive(Clone)]\nenum AvlTree&lt;T&gt; {...}\n\nfn balance_ll&lt;T: Clone&gt;(tree: AvlTree&lt;T&gt;) -&gt; AvlTree&lt;T&gt; {\n    let copy = tree.clone();\n\n    if let AvlTree::Node { left: t, right: u, value: v } = tree {\n        if let AvlTree::Node { left: ref tl, right: ref ul, value: ref vl } = *t {\n            AvlTree::Leaf // Return a new AvlTree here\n        } else {\n            copy\n        }\n    } else {\n        tree\n    }\n}\n</code></pre>\n\n<p>or use a helper function that quickly releases its ownership - but I don't think it is possible without box patterns:</p>\n\n<pre><code>#![feature(box_patterns)]\n\nimpl&lt;T&gt; AvlTree&lt;T&gt; {\n    fn is_left_node(&amp;self) -&gt; bool {\n        if let &amp;AvlTree::Node { left: ref t, right: ref u, value: ref v } = self {\n            if let &amp;box AvlTree::Node { left: ref tl, right: ref ul, value: ref vl } = t {\n                true\n            } else {\n                false\n            }\n        } else {\n            false\n        }\n    }\n}\n\nfn balance_ll&lt;T&gt;(tree: AvlTree&lt;T&gt;) -&gt; AvlTree&lt;T&gt; {\n    if tree.is_left_node() {\n        AvlTree::Leaf\n    } else {\n        tree\n    }\n}\n</code></pre>\n\n<p>Since you possibly want to use the destructured values you will probably prefer the <code>clone</code> variant, but maybe the other one will give you some extra ideas.</p>\n"}], "owner": {"reputation": 612, "user_id": 5116662, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/493356c3e70039846530668c9e39ad2a?s=128&d=identicon&r=PG&f=1", "display_name": "lschuermann", "link": "https://stackoverflow.com/users/5116662/lschuermann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 44904640, "answer_count": 1, "score": 3, "last_activity_date": 1499167894, "creation_date": 1499166097, "question_id": 44904214, "link": "https://stackoverflow.com/questions/44904214/access-values-in-boxed-nested-struct", "title": "Access values in boxed nested struct", "body": "<p>I am fairly new to Rust and want to implement an AVL-Tree.</p>\n\n<p>I am using the following enum to represent my tree:</p>\n\n<pre><code>enum AvlTree&lt;T&gt; {\n    Leaf,\n    Node {\n        left: Box&lt;AvlTree&lt;T&gt;&gt;,\n        right: Box&lt;AvlTree&lt;T&gt;&gt;,\n        value: T\n    }\n}\n</code></pre>\n\n<p>When implementing one of the balance-functions, I'm facing some problems with ownership and borrowing.</p>\n\n<p>I am trying to write a function, which takes an <code>AvlTree&lt;T&gt;</code> and returns another <code>AvlTree&lt;T&gt;</code>. My first attempt was something like this:</p>\n\n<pre><code>fn balance_ll(tree: AvlTree&lt;T&gt;) -&gt; AvlTree&lt;T&gt; {\n    if let AvlTree::Node {left: t, right: u, value: v} = tree {\n        if let AvlTree::Node {left: ref tl, right: ref ul, value: ref vl} = *t {\n            AvlTree::Leaf // Return a new AvlTree here\n        } else {\n            tree\n        }\n    } else {\n        tree\n    }\n}\n</code></pre>\n\n<p>Even with this minimal example, the compiler is returning an error:</p>\n\n<pre><code>error[E0382]: use of partially moved value: `tree`             \n  --&gt; avl.rs:67:17             \n   |                           \n63 |         if let AvlTree::Node {left: t, right: u, value: v} = tree {                                                       \n   |                                     - value moved here    \n...                            \n67 |                 tree      \n   |                 ^^^^ value used here after move           \n   |                           \n   = note: move occurs because `(tree:AvlTree::Node).left` has type `std::boxed::Box&lt;AvlTree&lt;T&gt;&gt;`, which does not implement the `Copy` trait                  \n</code></pre>\n\n<p>I think, I'm understanding the error message correctly, in that destructuring the <code>AvlTree::Node</code> will take away the ownership of the tree example. How can I prevent this from happening? I already tried various things and (de-)referencing the <code>tree</code>-variable only to face more errors.</p>\n\n<p>Additionally, I want to use some of the extracted values like <code>u</code>, <code>tl</code> and <code>vl</code> in the new struct. Is this possible and could you maybe provide a minimal example doing exactly that? I don't need access to the old tree after executing the function.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499165659, "post_id": 44903830, "comment_id": 76784864, "body": "Thank you, the ref keyword is exactly what I was looking for and was yet to learn :)"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 5, "last_activity_date": 1499165098, "creation_date": 1499165098, "answer_id": 44903830, "question_id": 44903609, "link": "https://stackoverflow.com/questions/44903609/how-do-i-return-a-reference-to-something-owned-and-alive/44903830#44903830", "title": "How do I return a reference to something owned and alive?", "body": "<p>The issue is that <code>Derefencece1ary{set}</code> copies <code>set</code> and takes a reference to the copy. What you want is to reference the <code>set</code> field directly, by using <code>Dereference1ary{ ref set }</code></p>\n\n<pre><code>impl&lt;'a&gt; Dereference&lt;'a&gt; {\n    fn set(&amp;self) -&gt; &amp;[&amp;'a Appearance&lt;'a&gt;] {\n        match *self {\n            Dereference::Dereference1ary{ref set} =&gt; set,\n            Dereference::Dereference2ary{ref set} =&gt; set,\n        }\n    }\n}\n</code></pre>\n\n<p>Note that your lifetime <code>'b</code> is superfluous, but if you want it explicitly, you can write </p>\n\n<pre><code>fn set&lt;'b&gt;(&amp;'b self) -&gt; &amp;'b [&amp;'a Appearance&lt;'a&gt;]\n</code></pre>\n\n<p>because you want to borrow a part of the <code>self</code> object, so the lifetimes need to match.</p>\n"}], "owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "accepted_answer_id": 44903830, "answer_count": 1, "score": 2, "last_activity_date": 1499165098, "creation_date": 1499164469, "question_id": 44903609, "link": "https://stackoverflow.com/questions/44903609/how-do-i-return-a-reference-to-something-owned-and-alive", "title": "How do I return a reference to something owned and alive?", "body": "<p>How do I correctly return a reference in the set function in the following code? I do understand that the variable <code>set</code> goes out of scope when the block ends, but the array it is referencing is owned and alive. The attempt with the lifetime <code>'b</code> was futile.</p>\n\n<pre><code>#[derive(PartialEq, Eq, PartialOrd, Ord, Debug)]\nstruct Appearance&lt;'a&gt; {\n    identity:   &amp;'a u64, \n    role:       &amp;'a str\n}\n\n#[derive(Clone, Copy, Debug)]\nenum Dereference&lt;'a&gt; {\n    Dereference1ary {set: [&amp;'a Appearance&lt;'a&gt;;1]},\n    Dereference2ary {set: [&amp;'a Appearance&lt;'a&gt;;2]},\n}\nimpl&lt;'a, 'b&gt; Dereference&lt;'a&gt; {\n    fn set(&amp;self) -&gt; &amp;'b [&amp;'a Appearance&lt;'a&gt;] {\n        match *self {\n            Dereference::Dereference1ary{set} =&gt; &amp;set,\n            Dereference::Dereference2ary{set} =&gt; &amp;set\n        }\n    }\n}\n\nfn main() {\n    let r = \"hair_color\";\n    let i1 = 42;\n    let i2 = 43;\n    let a1 = Appearance{identity: &amp;i1, role: r};\n    let a2 = Appearance{identity: &amp;i2, role: r};\n    let d1 = Dereference::Dereference1ary{set: [&amp;a1]};\n    let d2 = Dereference::Dereference2ary{set: [&amp;a1, &amp;a2]};\n    let list: Vec&lt;Dereference&gt; = vec!(d1, d2);\n    println!(\"{:?}\", list);\n    println!(\"{:?}\", d1.set());\n}\n</code></pre>\n\n<p>There is a playground set up here: <a href=\"https://play.rust-lang.org/?gist=fd528ebd054a9ce96004c8608166f9ac&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?gist=fd528ebd054a9ce96004c8608166f9ac&amp;version=stable&amp;backtrace=0</a></p>\n"}, {"tags": ["arrays", "enums", "hashmap", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499158873, "post_id": 44900810, "comment_id": 76780243, "body": "Why don&#39;t you use Person and Currency as Trait and implement those traits on John, Tom, Nick and USD, EUR?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499159223, "post_id": 44900810, "comment_id": 76780476, "body": "It sounds like you want an associative array from a name-currency pair to a value. Have you tried something? A <code>HashMap</code>?"}, {"owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "edited": false, "score": 0, "creation_date": 1499159768, "post_id": 44900810, "comment_id": 76780848, "body": "&gt; Why don&#39;t you use Person and Currency as Trait and implement those traits on John, Tom, Nick and USD, EUR?  I am not sure I got this idea, but anyway I want USD and EUR enums, cause in other places of my application I need them as enums.  &gt; It sounds like you want an associative array from a name-currency pair to a value. Have you tried something?   Thanks for reply. I am aware of HashMap but it&#39;s not exactly what I need. HashMap works on heap."}, {"owner": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1499159924, "post_id": 44900810, "comment_id": 76780954, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/28028854/how-do-i-match-enum-values-with-an-integer\">How do I match enum values with an integer?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "edited": false, "score": 2, "creation_date": 1499159517, "post_id": 44901703, "comment_id": 76780656, "body": "Hi, thanks for the reply. I am aware of HashMap, but it&#39;s not exactly what I want because:  - HashMap works on heap (what makes it much slower than regular stack allocated array) - HashMap gives me no guarantee that item exist. E.g. every time I want to <code>get</code> something I have to unwrap it and handle <code>None</code> case, what is not very handy in comparison with normal array."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "edited": false, "score": 0, "creation_date": 1499159936, "post_id": 44901703, "comment_id": 76780968, "body": "@SergeyPotapov So, as said in the other answer, you must implement your own type."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 0, "last_activity_date": 1499159573, "last_edit_date": 1499159573, "creation_date": 1499159377, "answer_id": 44901703, "question_id": 44900810, "link": "https://stackoverflow.com/questions/44900810/is-there-a-way-to-index-an-array-by-enums-in-rust/44901703#44901703", "title": "Is there a way to index an array by enums in Rust?", "body": "<p>You want a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\"><code>HashMap</code></a>:</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(PartialEq, Eq, Hash)]\nenum Person {\n    John,\n    Tom,\n    Nick\n}\n\n#[derive(PartialEq, Eq, Hash)]\nenum Currency {\n    USD,\n    EUR\n}\n\ntype Table = HashMap&lt;Person, HashMap&lt;Currency, f32&gt;&gt;;\n\nfn main() {\n    let mut table = Table::new();\n    let mut currency = HashMap::&lt;Currency, f32&gt;::new();\n\n    currency.insert(Currency::USD, 100_f32);\n    table.insert(Person::John, currency);\n\n    println!(\"{}\", table[&amp;Person::John][&amp;Currency::USD]);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 8, "last_activity_date": 1499160062, "last_edit_date": 1499160062, "creation_date": 1499159709, "answer_id": 44901835, "question_id": 44900810, "link": "https://stackoverflow.com/questions/44900810/is-there-a-way-to-index-an-array-by-enums-in-rust/44901835#44901835", "title": "Is there a way to index an array by enums in Rust?", "body": "<p>If you need this to be implemented using arrays, this isn't as straightforward as it might seem.</p>\n\n<p>In order to be able to contain both of these pieces of information in an array (to be able to index by them), you first need to combine them in a single type, e.g. in a struct:</p>\n\n<pre><code>struct Money([(Currency, usize); 2]);\n\nstruct PersonFinances {\n    person: Person,\n    money: Money\n}\n</code></pre>\n\n<p>Then, if you want to be able to index the table, you will need to wrap it in your own type so that you can implement the <code>Index</code> trait for it:</p>\n\n<pre><code>use std::ops::Index;\n\nstruct Table([PersonFinances; 3]);\n\nimpl Index&lt;(Person, Currency)&gt; for Table {\n    type Output = usize;\n\n    fn index(&amp;self, idx: (Person, Currency)) -&gt; &amp;Self::Output {\n        &amp;self\n        .0\n        .iter()\n        .find(|&amp;pf| pf.person == idx.0) // find the given Person\n        .expect(\"given Person not found!\")\n        .money\n        .0\n        .iter()\n        .find(|&amp;m| m.0 == idx.1)  // find the given Currency\n        .expect(\"given Currency not found!\")\n        .1\n    }\n}\n</code></pre>\n\n<p>Then you can index the <code>Table</code> by a <code>Person</code>, <code>Currency</code> pair:</p>\n\n<pre><code>table[(Tom, EUR)]\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1da24464d81bc50a5a6e87273d538ee1&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Rust playground link to the whole code</a></p>\n"}, {"tags": [], "owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "is_accepted": true, "score": 14, "last_activity_date": 1499327420, "last_edit_date": 1499327420, "creation_date": 1499170688, "answer_id": 44905797, "question_id": 44900810, "link": "https://stackoverflow.com/questions/44900810/is-there-a-way-to-index-an-array-by-enums-in-rust/44905797#44905797", "title": "Is there a way to index an array by enums in Rust?", "body": "<p>ljedrz provided a good solution.\nAnother way to approach the problem is to use existing crate <a href=\"https://docs.rs/crate/enum-map\" rel=\"noreferrer\">enum-map</a>.</p>\n\n<p>Add the following to your <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nenum-map = \"*\"\nenum-map-derive = \"*\"\n</code></pre>\n\n<p>Then, in <code>src/main.rs</code>:</p>\n\n<pre><code>extern crate enum_map;\n#[macro_use] extern crate enum_map_derive;\n\n#[derive(Debug, EnumMap)]\nenum Person { John, Tom, Nick }\n\n#[derive(Debug, EnumMap)]\nenum Currency { USD, EUR }\n\nuse enum_map::EnumMap;\nuse Person::*;\nuse Currency::*;\n\nfn main() {\n    // Create 2D EnumMap populated with f64::default(), which is 0.0\n    let mut table : EnumMap&lt;Person, EnumMap&lt;Currency, f64&gt;&gt; = EnumMap::default();\n\n    table[John][EUR] = 15.25;\n\n    println!(\"table = {:?}\", table);\n    println!(\"table[John][EUR] = {:?}\", table[John][EUR]);\n}\n</code></pre>\n\n<p>The output:</p>\n\n<pre><code>table = EnumMap { array: [EnumMap { array: [0, 15.25] }, EnumMap { array: [0, 0] }, EnumMap { array: [0, 0] }] }\ntable[John][EUR] = 15.25\n</code></pre>\n"}], "owner": {"reputation": 2860, "user_id": 1013173, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/072162a90979f670d87c36ae8818ea13?s=128&d=identicon&r=PG", "display_name": "Sergey Potapov", "link": "https://stackoverflow.com/users/1013173/sergey-potapov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5247, "favorite_count": 1, "accepted_answer_id": 44905797, "answer_count": 3, "score": 19, "last_activity_date": 1499327420, "creation_date": 1499156917, "last_edit_date": 1499260548, "question_id": 44900810, "link": "https://stackoverflow.com/questions/44900810/is-there-a-way-to-index-an-array-by-enums-in-rust", "title": "Is there a way to index an array by enums in Rust?", "body": "<p>I want to represent a table of data in the memory like the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>     | USD | EUR |\n-----+-----+-----+\nJohn | 100 | 50  |\n-----+-----+-----+\nTom  | 300 | 200 |\n-----+-----+-----+\nNick | 200 | 0   |\n-----+-----+-----+\n</code></pre>\n\n<p>There is a known set of people, each of them owns some currency.</p>\n\n<p>And I have the following enums:</p>\n\n<pre><code>enum Person {\n    John,\n    Tom,\n    Nick\n}\n\nenum Currency {\n    USD,\n    EUR\n}\n</code></pre>\n\n<p>I'd like to encode this data as 2D array, and it would be cool to be able to index array elements not by <code>usize</code> but by <code>enum</code>. E.g.:</p>\n\n<pre><code>data[Person::John][Currency::USD] = 100;\n</code></pre>\n\n<p>Is it possible to do with arrays and enums in Rust? Or is there any other data structure that would serve for this?</p>\n\n<p>I am aware of <code>HashMap</code>, but it's not exactly what I want because: </p>\n\n<ul>\n<li><p><code>HashMap</code> works on the heap (what makes it much slower than regular stack allocated array) </p></li>\n<li><p><code>HashMap</code> gives me no guarantee that item exist. E.g. every time I want to get something I have to unwrap it and handle <code>None</code> case, what is not very handy in comparison with usage of normal array.</p></li>\n</ul>\n\n<p>This is different from <a href=\"https://stackoverflow.com/questions/28028854/how-do-i-match-enum-values-with-an-integer\">How do I match enum values with an integer?</a> because I am not interested in converting enum to <code>usize</code>; I just want a handy way to access array/map items by enum.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 0, "creation_date": 1499168557, "post_id": 44900424, "comment_id": 76786922, "body": "Thanks! Just out of curiosity: is there a way to avoid the borrowing issues without using a function?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "reply_to_user": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "edited": false, "score": 0, "creation_date": 1499168851, "post_id": 44900424, "comment_id": 76787152, "body": "I don&#39;t think so, unless you are dealing with <code>Copy</code>able objects (or you <code>clone()</code> them first); both <code>if let</code> and <code>match</code> borrow the value comes after them, so you can&#39;t freely use it inside their block."}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": true, "score": 3, "last_activity_date": 1499155805, "creation_date": 1499155805, "answer_id": 44900424, "question_id": 44899992, "link": "https://stackoverflow.com/questions/44899992/change-selector-in-match-when-selector-is-a-mutable-reference/44900424#44900424", "title": "Change selector in match when selector is a mutable reference", "body": "<p>Since the condition is not very readable when put inside an <code>if let</code> / <code>match</code> block, I would just use a helper function to test for it:</p>\n\n<pre><code>impl Test {\n    fn is_empty_a(&amp;self) -&gt; bool {\n        if let Test::A(ref a) = *self {\n            a.len() == 0\n        } else {\n            false\n        }\n    }\n}\n</code></pre>\n\n<p>And then there shouldn't be any borrowing issues:</p>\n\n<pre><code>impl&lt;'a&gt; Iterator for Test {\n    type Item = usize;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.is_empty_a() {\n            *self = Test::B;\n        }\n        None\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4335, "user_id": 314784, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/c9414b15cfad914b3e8af1bf40f01c13?s=128&d=identicon&r=PG", "display_name": "Ben Ruijl", "link": "https://stackoverflow.com/users/314784/ben-ruijl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 44900424, "answer_count": 1, "score": 3, "last_activity_date": 1499260033, "creation_date": 1499154512, "last_edit_date": 1499260033, "question_id": 44899992, "link": "https://stackoverflow.com/questions/44899992/change-selector-in-match-when-selector-is-a-mutable-reference", "title": "Change selector in match when selector is a mutable reference", "body": "<p>I want to change enum variant based on some properties of the current enum variant in <code>Iterator::next</code>. I have two attempts, neither of which compile:</p>\n\n<pre><code>enum Test {\n    A(Vec&lt;usize&gt;),\n    B,\n}\n\nimpl&lt;'a&gt; Iterator for Test {\n    type Item = usize;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        // attempt 1\n        if let Test::A(ref a) = *self {\n            if a.len() == 0 {\n                *self = Test::B; // doesn't work because a is borrowed\n            };\n        }\n\n        // attempt 2\n        *self = match *self {\n            Test::A(ref a) if a.len() == 0 =&gt; Test::B,\n            _ =&gt; *self, // cannot move out of borrowed context\n        };\n        None\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>My second attempt does work if I am not working with references in the selector:</p>\n\n<pre><code>let mut a = Test::A(vec![]);\na = match a {\n    Test::A(ref a) if a.len() == 0 =&gt; Test::B,\n    _ =&gt; a,\n};\n</code></pre>\n\n<p>This question is related to <a href=\"https://stackoverflow.com/questions/22340987/is-there-a-way-to-use-match-in-rust-when-modifying-the-selector\">Is there a way to use match() in rust when modifying the selector?</a>, but the solution proposed there is not generic: it only works if the same function is executed in both branches.</p>\n\n<p>What is the Rustacean way to achieve my goal?</p>\n"}, {"tags": ["rust", "convention"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1499129515, "post_id": 44895392, "comment_id": 76768965, "body": "It sounds like you know the answer (use traits), so maybe I misunderstood the question. Could you explain why traits are not on there own sufficient?"}, {"owner": {"reputation": 1769, "user_id": 822068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0LKR7.jpg?s=128&g=1", "display_name": "behnam", "link": "https://stackoverflow.com/users/822068/behnam"}, "edited": false, "score": 0, "creation_date": 1499132390, "post_id": 44895392, "comment_id": 76769463, "body": "Do you want the modules to be registered on compile-time or run-time? If compile-time, I think macros are the most common solution. For run-time, I&#39;m not sure."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "edited": false, "score": 0, "creation_date": 1499132436, "post_id": 44895392, "comment_id": 76769467, "body": "At run-time, that allows for the use of plug-in systems and other extensions to the design."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499132553, "post_id": 44895392, "comment_id": 76769488, "body": "@PeterHall, I think the more interesting part is how to build the registry, and also whether it would be possible automatically register the AudioFileReaders as opposed to having to list them all in <code>main()</code>."}], "answers": [{"comments": [{"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 1, "creation_date": 1548313279, "post_id": 44895864, "comment_id": 95497943, "body": "There are crates now that break the paradigm, ctor (<a href=\"https://crates.io/crates/ctor\" rel=\"nofollow noreferrer\">crates.io/crates/ctor</a>) which is used to implement inventory (<a href=\"https://crates.io/crates/inventory\" rel=\"nofollow noreferrer\">crates.io/crates/inventory</a>)."}], "tags": [], "owner": {"reputation": 10840, "user_id": 1198729, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0a3069491bfded90cdf623341cadc1d1?s=128&d=identicon&r=PG", "display_name": "Manishearth", "link": "https://stackoverflow.com/users/1198729/manishearth"}, "is_accepted": true, "score": 1, "last_activity_date": 1499133482, "creation_date": 1499133482, "answer_id": 44895864, "question_id": 44895392, "link": "https://stackoverflow.com/questions/44895392/extensible-registry-of-types/44895864#44895864", "title": "Extensible registry of types", "body": "<p>You can build such a registry by using a <code>lazy_static</code> global, which contains a map of extension name to <code>Box&lt;AudioFileReader&gt;</code>.</p>\n\n<p>You would have to list them all in main (or have main call init functions). There's no way to automatically do this, Rust has no life before main.</p>\n"}], "owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 44895864, "answer_count": 1, "score": 0, "last_activity_date": 1499259935, "creation_date": 1499128569, "last_edit_date": 1499259935, "question_id": 44895392, "link": "https://stackoverflow.com/questions/44895392/extensible-registry-of-types", "title": "Extensible registry of types", "body": "<p>I have a program that can read multiple audio formats. A shared module could provide a trait, <code>AudioFileReader</code>, that has common methods for reading audio data as well as a registry for associating readers to file extensions.</p>\n\n<p>Rather than have all the possible audio format readers built into the module, it would be useful for this module to be extensible, so that clients of the module can provide <code>AudioFileReader</code>s for new formats (either when linked into an executable or via a plug-in system).</p>\n\n<p>What would be a conventional Rust way to build a system like this? Is there a way to avoid needing a global static registry while without losing extensibility?</p>\n"}, {"tags": ["types", "syntax", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1499110088, "post_id": 44892183, "comment_id": 76763354, "body": "<code>fn add_iter&lt;I: Iterator&lt;Item = T&gt;&gt;</code>"}, {"owner": {"reputation": 573, "user_id": 1309740, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/352cb0a7d071bb52129eaa4e3f881d11?s=128&d=identicon&r=PG", "display_name": "utter_step", "link": "https://stackoverflow.com/users/1309740/utter-step"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499115982, "post_id": 44892183, "comment_id": 76765746, "body": "Thanks, @Shepmaster! Is it possible with <code>where</code> also?"}, {"owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 2, "creation_date": 1499116731, "post_id": 44892183, "comment_id": 76765993, "body": "Yes: <code>fn add_iter&lt;I&gt;(&amp;mut self, iter: I) where I: Iterator&lt;Item = T&gt;</code>."}], "owner": {"reputation": 573, "user_id": 1309740, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/352cb0a7d071bb52129eaa4e3f881d11?s=128&d=identicon&r=PG", "display_name": "utter_step", "link": "https://stackoverflow.com/users/1309740/utter-step"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 28, "favorite_count": 0, "closed_date": 1499109375, "answer_count": 0, "score": 0, "last_activity_date": 1499108871, "creation_date": 1499107569, "last_edit_date": 1499108871, "question_id": 44892183, "link": "https://stackoverflow.com/questions/44892183/take-argument-of-type-iterator-with-item-type-parametrized-by-impl-type-constrai", "closed_reason": "Duplicate", "title": "Take argument of type Iterator with Item type parametrized by impl type constraint", "body": "<p>I have a generic struct:</p>\n\n<pre><code>pub struct Smth&lt;T: Copy&gt; {\n    data: Vec&lt;T&gt;\n}\n</code></pre>\n\n<p>How can I implement a method with parameter <code>p</code> being some iterator with item type <code>T</code>?</p>\n\n<p>Something like this, but working (look at <code>add_iter</code> method) :)</p>\n\n<pre><code>impl&lt;T: Copy&gt; Smth&lt;T&gt; {\n    fn new(data: Vec&lt;T&gt;) -&gt; Self {\n        Smth { data }\n    }\n\n    fn add(&amp;mut self, item: T) {\n        self.data.push(item);\n    }\n\n    fn add_iter&lt;I: Iterator&gt;(&amp;mut self, iter: I)\n        where I::Item: T  // &lt;-- Here is the problem\n    {\n        for item in iter {\n           self.add(item);\n        }\n    }\n}\n</code></pre>\n\n<p>I've also tried <code>where I::Item: Copy</code>, but that wouldn't work either.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1499098715, "post_id": 44889698, "comment_id": 76758206, "body": "Do you need <code>Dereference</code> struct? <a href=\"https://play.rust-lang.org/?gist=16de06c82ec2ddbe2f288386aa5336d8&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">You can use slices directly</a>"}, {"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "reply_to_user": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1499098964, "post_id": 44889698, "comment_id": 76758325, "body": "I believe I do, since a reference to Dereference will be contained in another struct named Posit and I will need a lookup table from an instance of Dereference to all instances of Posit that reference that particular instance."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 0, "creation_date": 1499099461, "post_id": 44889698, "comment_id": 76758541, "body": "It&#39;s not a problem. You can just use <code>&amp;[Appearance]</code> instead of <code>&amp;Derefenence&lt;&#39;a&gt;</code>. But it&#39;s worth remembering that Rust uses structural equality by default. If two references point to different but equal structures, they are considered equal."}, {"owner": {"reputation": 4346, "user_id": 6375113, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/JHg5K.jpg?s=128&g=1", "display_name": "Bugs", "link": "https://stackoverflow.com/users/6375113/bugs"}, "edited": false, "score": 1, "creation_date": 1499104318, "post_id": 44889698, "comment_id": 76760800, "body": "Please post solutions as answers not as updates to the question. This is to help future visitors and to avoid confusion. Thank you."}], "answers": [{"comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499098608, "post_id": 44889946, "comment_id": 76758147, "body": "Yes, I was thinking that 32 different structs, one for each size of set using arrays would make such instances end up on the stack, whereas the lists always would be on the heap. In a language with inheritance I could create a superclass Dereference and then implement 32 different subclasses, while still having a single list based on the superclass. Is that not possible in Rust?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499098856, "post_id": 44889946, "comment_id": 76758271, "body": "Sorry, I did not understand the question... It is not possible yet (the feature is coming soon), but even if it were possible, you cannot create a vector of different &quot;subclasses&quot; (to use your word) without boxing them, <i>i.e.</i> putting them in the heap. I will update my answer accordingly, but for now I do not have time."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 0, "last_activity_date": 1499098311, "last_edit_date": 1499098311, "creation_date": 1499097927, "answer_id": 44889946, "question_id": 44889698, "link": "https://stackoverflow.com/questions/44889698/a-list-of-different-things-without-inheritance/44889946#44889946", "title": "A list of different things without inheritance?", "body": "<p>An array in Rust is only useful when you know its size at compile-time, for example:</p>\n\n<pre><code>struct 3DPoint {\n    position: [f32; 3],\n    // etc.\n}\n</code></pre>\n\n<p>When you do not know the size at compile-time, use a dynamic array, called <code>Vec</code>:</p>\n\n<pre><code>#[derive(PartialEq, Eq, PartialOrd, Ord)]\nstruct Appearance&lt;'a&gt; {\n    identity:   &amp;'a u64, \n    role:       &amp;'a str\n}\n\nstruct Dereference&lt;'a&gt; {\n    set:        Vec&lt;&amp;'a Appearance&lt;'a&gt;&gt;\n}\n\nfn main() {\n    let r = \"hair_color\";\n    let i1 = 42;\n    let i2 = 43;\n    let a1 = Appearance{identity: &amp;i1, role: r};\n    let a2 = Appearance{identity: &amp;i2, role: r};\n    let d1 = Dereference{set: [&amp;a1]};\n    let d2 = Dereference{set: [&amp;a1, &amp;a2]};\n    let list: Vec&lt;Dereference&gt; = vec!(d1, d2);\n}\n</code></pre>\n\n<p>When you develop in Rust, always think in terms of stack. If I understand well your question, you want to pile up things without specify the size: that is impossible.</p>\n"}, {"comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499107256, "post_id": 44890260, "comment_id": 76762073, "body": "Here is a playground of your suggestion, using enum: <a href=\"https://play.rust-lang.org/?gist=1af8376b839d04cc0108647a05d04a96&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499529260, "post_id": 44890260, "comment_id": 76950790, "body": "It turns out the enum will be sized by the largest of its members, and since most of the arrays will be unary or binary, the following solution seems better: <a href=\"https://play.rust-lang.org/?gist=0039bd821df7e7771496b09a34fec765&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 10840, "user_id": 1198729, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0a3069491bfded90cdf623341cadc1d1?s=128&d=identicon&r=PG", "display_name": "Manishearth", "link": "https://stackoverflow.com/users/1198729/manishearth"}, "is_accepted": true, "score": 6, "last_activity_date": 1499109860, "last_edit_date": 1499109860, "creation_date": 1499099199, "answer_id": 44890260, "question_id": 44889698, "link": "https://stackoverflow.com/questions/44889698/a-list-of-different-things-without-inheritance/44890260#44890260", "title": "A list of different things without inheritance?", "body": "<p>This doesn't have to do with inheritance; the type <code>[&amp;'a Appearance&lt;'a&gt;]</code> is an unsized type. It can only be referenced behind a pointer, as in <code>&amp;[&amp;'a Appearance&lt;'a&gt;]</code></p>\n\n<p>What you probably want is <code>Vec&lt;&amp;'a Appearance&lt;'a&gt;&gt;</code>. Really, <code>Vec&lt;Appearance&gt;</code> might be better, with <code>#[derive(Copy)]</code> on <code>Appearance</code>, since <code>Appearance</code> itself is a bunch of references and there's not much point taking a reference to a bunch of references.</p>\n\n<hr>\n\n<p>While your example doesn't try making a list of related things, (it just makes a list of <code>Appearance</code>s), there are two ways to do this in Rust. One is to use an enum, i.e. you do something like <code>enum Things {Thing1(Type1), Thing2(Type2), ...}</code>, and store a <code>Vec&lt;Things&gt;</code>. This avoids extra allocation, but is a bit more typing. Alternatively, you can use trait objects, by defining a trait with all the methods you need, implementing it for the relevant types, and using a <code>Vec&lt;&amp;TraitName&gt;</code> or <code>Vec&lt;Box&lt;TraitName&gt;&gt;</code>.</p>\n"}], "owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 44890260, "answer_count": 2, "score": 0, "last_activity_date": 1499109860, "creation_date": 1499096960, "last_edit_date": 1499104284, "question_id": 44889698, "link": "https://stackoverflow.com/questions/44889698/a-list-of-different-things-without-inheritance", "title": "A list of different things without inheritance?", "body": "<p>I know how to make a list of related things in a language with inheritance like Java or an untyped language like JavaScript, but I cannot figure out how to do it in Rust. This will yield an error because the size of the array in <code>Dereference</code> is not known at compile time.</p>\n\n<pre><code>#[derive(PartialEq, Eq, PartialOrd, Ord)]\nstruct Appearance&lt;'a&gt; {\n    identity:   &amp;'a u64, \n    role:       &amp;'a str\n}\n\nstruct Dereference&lt;'a&gt; {\n    set:        [&amp;'a Appearance&lt;'a&gt;]\n}\n\nfn main() {\n    let r = \"hair_color\";\n    let i1 = 42;\n    let i2 = 43;\n    let a1 = Appearance{identity: &amp;i1, role: r};\n    let a2 = Appearance{identity: &amp;i2, role: r};\n    let d1 = Dereference{set: [&amp;a1]};\n    let d2 = Dereference{set: [&amp;a1, &amp;a2]};\n    let list: Vec&lt;Dereference&gt; = vec!(d1, d2);\n}\n</code></pre>\n\n<p>However, the <code>set</code> member in <code>Dereference</code> will be of arrays up to a small size. Let's say less than 32, and most often 1 or 2, rarely 3, and almost non-existantly larger than that. I could create 32 structs and 32 lists, but for convenience I really would like to do this in a smarter way. At least a single list would help a lot, even if I have to create 32 structs. I need this to be memory and performance efficient at the same time. How do I achieve this in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499097541, "post_id": 44889689, "comment_id": 76757581, "body": "I think that you can use match only with literal."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "edited": false, "score": 1, "creation_date": 1499097717, "post_id": 44889689, "comment_id": 76757685, "body": "<a href=\"https://play.rust-lang.org/?gist=33255e4b59d8c42cf6bb73a42da829bb&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">This code</a> does what you intended to do."}], "answers": [{"comments": [{"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1499097668, "post_id": 44889867, "comment_id": 76757662, "body": "Thanks, actually I can not use <code>const</code>, because of I calculate those values in real program, so I have to use <code>if else</code> in this case?"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1499097839, "post_id": 44889867, "comment_id": 76757749, "body": "@user1244932, you can use <code>match i { x if x == v1 =&gt; ... , x if x == v2 =&gt; ...,}</code> syntax"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "edited": false, "score": 0, "creation_date": 1499097975, "post_id": 44889867, "comment_id": 76757816, "body": "@user1244932 I&#39;ve updated the answer. Indeed, you can either use if/else or add <code>if</code> clauses to the match cases."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1499097942, "last_edit_date": 1499097942, "creation_date": 1499097562, "answer_id": 44889867, "question_id": 44889689, "link": "https://stackoverflow.com/questions/44889689/why-does-match-not-work-while-partialeq-eq-works-fine/44889867#44889867", "title": "Why does match not work while PartialEq/Eq works fine?", "body": "<p>It might be easier to understand what's going on by looking at the compiler's warnings:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused variable: `from`\n  --&gt; src/main.rs:12:9\n   |\n12 |         from =&gt; println!(\"1\"),\n   |         ^^^^\n   |\n   = note: #[warn(unused_variables)] on by default\n\nwarning: unreachable pattern\n  --&gt; src/main.rs:13:9\n   |\n13 |         to =&gt; println!(\"2\"),\n   |         ^^ this is an unreachable pattern\n   |\n   = note: #[warn(unreachable_patterns)] on by default\nnote: this pattern matches any value\n  --&gt; src/main.rs:12:9\n   |\n12 |         from =&gt; println!(\"1\"),\n   |         ^^^^\n\nwarning: unused variable: `to`\n  --&gt; src/main.rs:13:9\n   |\n13 |         to =&gt; println!(\"2\"),\n   |         ^^\n   |\n   = note: #[warn(unused_variables)] on by default\n\nwarning: unreachable pattern\n  --&gt; src/main.rs:14:9\n   |\n14 |         _ =&gt; println!(\"other\"),\n   |         ^ this is an unreachable pattern\n   |\n   = note: #[warn(unreachable_patterns)] on by default\nnote: this pattern matches any value\n  --&gt; src/main.rs:12:9\n   |\n12 |         from =&gt; println!(\"1\"),\n   |         ^^^^\n</code></pre>\n\n<p>Basically, the identifiers <code>from</code> and <code>to</code> <em>do not</em> refer to the values contained in the bindings. They are <em>new</em> bindings that happen to match anything. The same thing happens with new identifier names:</p>\n\n<pre><code>match i {\n    x =&gt; println!(\"1\"),\n    y =&gt; println!(\"2\"),\n    _ =&gt; println!(\"other\"),\n}\n</code></pre>\n\n<p>Since the program always matches the first case, \"1\" is always printed.</p>\n\n<p>You can get the expected result by declaring <code>from</code> and <code>to</code> as <code>const</code>:</p>\n\n<pre><code>const from: NodeIndex = NodeIndex(21030);\nconst to: NodeIndex = NodeIndex(21031);\n</code></pre>\n\n<p>Or by using object literals directly:</p>\n\n<pre><code>match i {\n    NodeIndex(21030) =&gt; println!(\"1\"),\n    NodeIndex(21031) =&gt; println!(\"2\"),\n    _ =&gt; println!(\"other\"),\n}\n</code></pre>\n\n<p>If the values of <code>from</code> and <code>to</code> are only known in runtime, you can use <code>if</code>/<code>else</code> statements:</p>\n\n<pre><code>if n == from {\n    println!(\"1\");\n} else if n == to {\n    println!(\"2\");\n} else {\n    println!(\"other\");\n}\n</code></pre>\n\n<p>... or add <code>if</code> clauses during the match (which are evaluated in run-time):</p>\n\n<pre><code>match i {\n    n if n == from =&gt; println!(\"1\"),\n    n if n == to =&gt; println!(\"2\"),\n    _ =&gt; println!(\"other\"),\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 0, "closed_date": 1499109037, "accepted_answer_id": 44889867, "answer_count": 1, "score": 0, "last_activity_date": 1499108986, "creation_date": 1499096934, "last_edit_date": 1499108986, "question_id": 44889689, "link": "https://stackoverflow.com/questions/44889689/why-does-match-not-work-while-partialeq-eq-works-fine", "closed_reason": "Duplicate", "title": "Why does match not work while PartialEq/Eq works fine?", "body": "<p>I have this simple code:</p>\n\n<pre><code>#[derive(Copy, Clone, Default, PartialEq, PartialOrd, Eq, Ord, Hash)]\nstruct NodeIndex(u32);\n\nfn main() {\n    let i = NodeIndex(5323);\n    let from = NodeIndex(21030);\n    let to = NodeIndex(21031);\n\n    println!(\"from == i =&gt; {}, to == i =&gt; {}\", from == i, to == i);\n\n    match i {\n        from =&gt; println!(\"1\"),\n        to =&gt; println!(\"2\"),\n        _ =&gt; println!(\"other\"),\n    }\n}\n</code></pre>\n\n<p>it prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>from == i =&gt; false, to == i =&gt; false\n1\n</code></pre>\n\n<p>so <code>i != from</code>, <code>i != to</code>, but <code>match</code> call <code>from =&gt; println!(\"1\"),</code>,\nwhat is going on?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 2, "creation_date": 1499093811, "post_id": 44888283, "comment_id": 76755327, "body": "Thanks, much appreciated!"}, {"owner": {"reputation": 1694, "user_id": 2120073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef20c298c7ab54852752660b22d0abc4?s=128&d=identicon&r=PG", "display_name": "Damian Dziaduch", "link": "https://stackoverflow.com/users/2120073/damian-dziaduch"}, "edited": false, "score": 0, "creation_date": 1555424732, "post_id": 44888283, "comment_id": 98101805, "body": "Is there a way to sort without mutating the original variable?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1694, "user_id": 2120073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef20c298c7ab54852752660b22d0abc4?s=128&d=identicon&r=PG", "display_name": "Damian Dziaduch", "link": "https://stackoverflow.com/users/2120073/damian-dziaduch"}, "edited": false, "score": 0, "creation_date": 1555425098, "post_id": 44888283, "comment_id": 98102022, "body": "@DamianDziaduch Just clone the array: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5c3bf2e7e151c177a14175e5f1a8f4cc\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1694, "user_id": 2120073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef20c298c7ab54852752660b22d0abc4?s=128&d=identicon&r=PG", "display_name": "Damian Dziaduch", "link": "https://stackoverflow.com/users/2120073/damian-dziaduch"}, "edited": false, "score": 0, "creation_date": 1555425721, "post_id": 44888283, "comment_id": 98102435, "body": "@DamianDziaduch Or use a sorted collection from the beginning"}, {"owner": {"reputation": 1694, "user_id": 2120073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef20c298c7ab54852752660b22d0abc4?s=128&d=identicon&r=PG", "display_name": "Damian Dziaduch", "link": "https://stackoverflow.com/users/2120073/damian-dziaduch"}, "edited": false, "score": 0, "creation_date": 1555434626, "post_id": 44888283, "comment_id": 98107368, "body": "@FrenchBoiethios what do you mean by &quot;sorted collection&quot;?"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 21, "last_activity_date": 1600042362, "last_edit_date": 1600042362, "creation_date": 1499092536, "answer_id": 44888283, "question_id": 44888196, "link": "https://stackoverflow.com/questions/44888196/how-do-i-sort-an-array/44888283#44888283", "title": "How do I sort an array?", "body": "<p><code>a</code> <strong>is</strong> sorted, but the method sorts the array in place. Read the <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.sort\" rel=\"nofollow noreferrer\">signature of <code>sort</code></a>: <code>sort</code> takes <code>&amp;mut self</code> and returns unit (<em>i.e.</em> nothing), so when you print <code>s</code>, you print <code>()</code>.</p>\n<p>Working code:</p>\n<pre><code>fn main() {\n    let mut a = [1, 3, 2];\n    a.sort();\n    \n    assert_eq!(a, [1, 2, 3]);\n    println!(&quot;{:?}&quot;, a);\n}\n</code></pre>\n<h1>Writing a function that returns a sorted array</h1>\n<p>You can write a function that does what you want:</p>\n<pre><code>fn sort&lt;A, T&gt;(mut array: A) -&gt; A\nwhere\n    A: AsMut&lt;[T]&gt;,\n    T: Ord,\n{\n    let slice = array.as_mut();\n    slice.sort();\n\n    array\n}\n\nfn main() {\n    let a = [1, 3, 2];\n\n    assert_eq!(sort(a), [1, 2, 3]);\n}\n</code></pre>\n"}], "owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5906, "favorite_count": 1, "accepted_answer_id": 44888283, "answer_count": 1, "score": 5, "last_activity_date": 1600042362, "creation_date": 1499092268, "last_edit_date": 1499108784, "question_id": 44888196, "link": "https://stackoverflow.com/questions/44888196/how-do-i-sort-an-array", "title": "How do I sort an array?", "body": "<p>Why cannot I not sort an array as expected?</p>\n\n<pre><code>fn main() {\n    let mut a = [1,3,2];\n    let s = a.sort();\n    println!(\"{:?}\", s);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 4, "last_activity_date": 1499090395, "creation_date": 1499090395, "answer_id": 44887509, "question_id": 44887271, "link": "https://stackoverflow.com/questions/44887271/least-memory-usage-and-best-performance/44887509#44887509", "title": "Least memory usage and best performance", "body": "<p>All three variants seem to have the same size:</p>\n\n<pre><code>use std::mem::size_of;\n\nprintln!(\"a1: {}\", size_of::&lt;Appearance&gt;());        // a1: 24\nprintln!(\"a2: {}\", size_of::&lt;AnotherAppearance&gt;()); // a2: 24\nprintln!(\"a3: {}\", size_of::&lt;(&amp;u64, &amp;str)&gt;());      // a3: 24\n</code></pre>\n\n<p>So I would just use the one that is most descriptive, i.e. <code>Appearance</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499097556, "post_id": 44888483, "comment_id": 76757591, "body": "Brilliant, I can even use an u16 as a lookup key for the roles, since they are not that numerous. Theoretically, the u64 is owned by the &quot;Keeper of Identities&quot; and I figured a reference would reflect this behaviour in the code. I suppose the tradeoff is that if the Appearance owns its own u64 the compiler will not complain if an instance is created that the Keeper is not aware of? When you say &#39;slower&#39; for a &amp;u64, how much slower are we talking about?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499097721, "post_id": 44888483, "comment_id": 76757687, "body": "@LarsR&#246;nnb&#228;ck: I don&#39;t know how much slower, but in order to look at or use the value, you&#39;ll have to do a deref and look elsewhere in memory.  Keeping things local means less cache thrashing.  Like almost all perf-related questions, it depends on your specific situation."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1499093081, "creation_date": 1499093081, "answer_id": 44888483, "question_id": 44887271, "link": "https://stackoverflow.com/questions/44887271/least-memory-usage-and-best-performance/44888483#44888483", "title": "Least memory usage and best performance", "body": "<p>First, as Ijedrz noted, all your proposed alternatives have the same size.  In fact, from the compiler's point of view, they're all <em>identical</em>.</p>\n\n<p>If you're after smaller memory sizes, you might be better off using something like:</p>\n\n<pre><code>struct Appearance {\n    identity: u32,\n    role: InternedString,\n}\n</code></pre>\n\n<p>First of all, <code>u32</code> has 4 billion distinct values, so you definitely don't need a <code>u64</code> for a billion records.  Aside from that, a <code>&amp;u64</code> is going to be the same size as a <code>u64</code> on a 64-bit machine, so there's not much point in using it.  That a <code>u32</code> is half the size is a bonus.</p>\n\n<p>Beyond that, <code>&amp;str</code> seems incredibly wasteful.  That's going to take two pointers for data which, I assume, is unlikely to change much.  If there are many more <code>Appearance</code>s than roles, your best bet is to intern the strings and reduce the field to a pointer (or even better: a <code>u32</code> ID which indirects through another table).  There is no interned string in the standard library, but they're not that hard to implement, assuming you can't find one somewhere.  Such a structure (assuming <code>InternedString</code> is a <code>u32</code> ID) would be 8 bytes versus your 24 bytes.</p>\n\n<p>If performance is what you're after, that depends on <em>how</em> you use the structures.  That said, <code>&amp;u64</code> is slower than <code>u64</code>, so changing that will probably help.  As for the string, it depends on how you use it.  If you mostly do comparisons, an interned string will be faster because you can compare <em>those</em> with a single comparison; comparing regular strings can be much slower since you have to actually look at the contents.</p>\n"}], "owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "accepted_answer_id": 44888483, "answer_count": 2, "score": 0, "last_activity_date": 1499108858, "creation_date": 1499089790, "last_edit_date": 1499108858, "question_id": 44887271, "link": "https://stackoverflow.com/questions/44887271/least-memory-usage-and-best-performance", "title": "Least memory usage and best performance", "body": "<p>I need to store a billion \"appearances\" and I am looking for the most efficient way to store these with respect to both memory usage and performance. What are, for example, the differences in those respects for <code>a1, a2, a3</code> in:</p>\n\n<pre><code>struct Appearance&lt;'a&gt; {\n    identity:   &amp;'a u64, \n    role:       &amp;'a str\n}\n\nstruct AnotherAppearance&lt;'a&gt;((&amp;'a u64, &amp;'a str));\n\nfn main() {\n    let thing = 42;\n    let hair_color = \"hair color\";\n    let a1 = Appearance {identity: &amp;thing, role: &amp;hair_color};\n    let a2 = AnotherAppearance((&amp;thing, &amp;hair_color));\n    let a3 = (&amp;thing, &amp;hair_color);\n}\n</code></pre>\n\n<p>Are there better ways to work with such a structure? Also, is there a way to get detailed information about <code>a1, a2, a3</code> so that I could see how they are represented in memory for myself?</p>\n"}, {"tags": ["design-patterns", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1499071347, "post_id": 44881082, "comment_id": 76740426, "body": "There is no life before main in Rust."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499071556, "post_id": 44881082, "comment_id": 76740555, "body": "@Boiethios, thanks I hadn&#39;t realized that. What&#39;s the idiomatic <code>Rust</code> way to do this kind of thing then?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499071740, "post_id": 44881082, "comment_id": 76740684, "body": "I&#39;d say with initialization at compile-time (with the macro system), but I see that you want a plugin system. A lot of project do some work at compile time (see Rocket and Diesel for example) to generate the right code."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1499071806, "post_id": 44881082, "comment_id": 76740718, "body": "A good question is: what kind of plugin do you want to implement?"}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "edited": false, "score": 0, "creation_date": 1499072081, "post_id": 44881082, "comment_id": 76740881, "body": "I&#39;m writing a program that will deal with audio files. Some of the files are simple and I&#39;ll process them with built-in parsers, like <code>wav</code> and <code>aiff</code>. In other cases I might want to use a library, like <code>FLAC</code>, and in others, that might depend on the platform. For instance, <code>CoreAudio</code> on <code>macOS</code> handles many formats. In <code>C++</code> I&#39;d have designed this as I described, which gives lots of flexibility, but I don&#39;t see how to do this in <code>Rust</code>."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1499072127, "post_id": 44881082, "comment_id": 76740915, "body": "@Stargateur, I&#39;ve read a bit about <code>Singleton</code> and <code>Rust</code> and I&#39;m reasonably convinced by the argument that <code>Singleton</code>s are to be avoided when possible, so I&#39;d like to do it without <code>Singleton</code> if at all possible."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499073165, "post_id": 44881082, "comment_id": 76741602, "body": "Are the possible formats fixed? Or can the program be configured to load different formats via dynamic linking?"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1499073635, "post_id": 44881082, "comment_id": 76741929, "body": "Could you describe the problem you are trying to solve without using the words &quot;singleton,&quot; &quot;factory&quot; or &quot;repository&quot;?"}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1499073762, "post_id": 44881082, "comment_id": 76741996, "body": "@BurntSushi5, I could but it would take many more words and amount to the same thing."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499073828, "post_id": 44881082, "comment_id": 76742039, "body": "@E_net4, I&#39;d like the option to add formats via plug-ins or whatever, so no, not a fixed list."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499073898, "post_id": 44881082, "comment_id": 76742076, "body": "Well then, if <a href=\"https://stackoverflow.com/q/44708483/1233251\">this</a> question doesn&#39;t help, I think nothing will. Sounds like a duplicate too."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "edited": false, "score": 0, "creation_date": 1499074026, "post_id": 44881082, "comment_id": 76742172, "body": "So in Rust the typical way to do build this for a fixed list of types would be a set of if/else clauses?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1499074791, "post_id": 44881082, "comment_id": 76742724, "body": "Not really. You could leverage the power of macros to generate the necessary code, as mentioned by Boiethios. Projects such as Rocket and Diesel rely on this. For dynamic plugins however, there is no standard or conventional approach."}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 1, "creation_date": 1499077588, "post_id": 44881082, "comment_id": 76744567, "body": "&quot;<i>I could but it would take many more words and amount to the same thing</i>&quot; On the other hand, it might not amount to the same thing \u2013 people might actually be able to <i>help</i> you..."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1499080789, "post_id": 44881082, "comment_id": 76746511, "body": "I think what multiple commenters are trying to tell you is that there&#39;s a chance you&#39;ve encountered the <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY-Problem</a>, meaning you are asking for a solution to a problem that you encountered while solving your actual problem, instead of asking for a solution to your actual problem"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1499090223, "post_id": 44881082, "comment_id": 76752892, "body": "@Tim I&#39;ll take a shot in the dark. I don&#39;t know if this satisfies what you&#39;re trying to do, but it&#39;s the closest transliteration I could make of your C++ code. <a href=\"http://play.integer32.com/?gist=9f2fca703e68af601a36954c62c4878d&amp;version=stable\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1499111054, "post_id": 44881082, "comment_id": 76763771, "body": "@BurntSushi5, thanks, that&#39;s very helpful. If you were to write that up as an answer I&#39;d be happy to give you the points."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1499125050, "post_id": 44881082, "comment_id": 76768068, "body": "@Shepmaster Manishearth I don&#39;t think this is a duplicate, but the question could be a lot better. The global singleton aspect of this question seems least interesting. The more interesting bits are probably the virtual dispatch."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1499125153, "post_id": 44881082, "comment_id": 76768093, "body": "@Tim Thanks. Glad it was helpful. To be clear, I had to guess at a number of things that were implied by your question, and it was quite difficult. It would be most appreciated if you could open a new question that doesn&#39;t use the words &quot;singleton&quot; or &quot;factory,&quot; and instead describes the actual problem you&#39;re trying to solve. For example, I might start with, &quot;I need to store a bunch of values with different types but a common interface in a single global registry that can be dynamically modified.&quot; Bonus points for saying why you need a global registry without referring to another language."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1499125657, "post_id": 44881082, "comment_id": 76768185, "body": "@BurntSushi5, thanks I&#39;ll do that."}, {"owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "edited": false, "score": 0, "creation_date": 1499128610, "post_id": 44881082, "comment_id": 76768784, "body": "Hopefully this question enjoys a better reception: <a href=\"https://stackoverflow.com/questions/44895392/extensible-registry-of-types\" title=\"extensible registry of types\">stackoverflow.com/questions/44895392/&hellip;</a> :)"}], "owner": {"reputation": 4068, "user_id": 862193, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/60a062a625895665d619c40b96f82d6a?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/862193/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 324, "favorite_count": 0, "closed_date": 1499108549, "answer_count": 0, "score": 0, "last_activity_date": 1499108630, "creation_date": 1499071063, "last_edit_date": 1499108630, "question_id": 44881082, "link": "https://stackoverflow.com/questions/44881082/rust-equivalent-to-a-repository-of-factories-of-strategies", "closed_reason": "Duplicate", "title": "Rust equivalent to a Repository of Factories of Strategies", "body": "<p>In C++, one way to handle designing a program that needs to read multiple file formats is a Repository of Factories of Strategies. Generally the Repository part is a Singleton. The Factory takes care of building a Strategy which handles the file format. Furthermore, the Repository can be populated via static initialization, such that each Factory can register itself to the Repository before <code>main()</code> is executed.</p>\n\n<p>I'm struggling to see how to implement a similar system, <strong>without</strong> the Singleton component, in Rust. I'd like to be able to register Factories to some kind of file reader repository, ideally at static initialization time, with the added option for other modules or plug-ins to be able to add their own file readers at runtime.</p>\n\n<p>What I'm looking for is a Rust version of something like this (which is simplified):</p>\n\n<pre><code>class Repo : boost::non_copyable {\npublic:\n    static Repo&amp; instance();\n    void registerFactory(std::unique_ptr&lt;FileFactory&gt; factory, std::string extension);\n};\n\ntemplate&lt;class T&gt;\nclass Factory {\npublic:\n    std::unique_ptr&lt;T&gt; build(std::string path) { return std::make_unique&lt;T&gt;(path); }\n}\n\nclass AudioFile {\npublic:\n    AudioFile(std::string path);\n}\n</code></pre>\n"}, {"tags": ["asynchronous", "websocket", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 1047, "user_id": 204442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92fa12e9d6c3916c06b7f0043da30d0a?s=128&d=identicon&r=PG", "display_name": "SpamapS", "link": "https://stackoverflow.com/users/204442/spamaps"}, "is_accepted": true, "score": 3, "last_activity_date": 1499109117, "last_edit_date": 1499109117, "creation_date": 1499104221, "answer_id": 44891486, "question_id": 44876934, "link": "https://stackoverflow.com/questions/44876934/sharing-mutable-state-between-clients-using-async-tokio-rust-websocket/44891486#44891486", "title": "Sharing mutable state between clients using async (tokio) rust-websocket", "body": "<p>You're pretty close with the <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>. What you need now is an <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc</code></a> to wrap that <code>RefCell</code> so you can clone the <code>Rc</code> and not capture the <code>RefCell</code> itself.</p>\n\n<pre><code>let shared_state = Rc::new(RefCell::new(State::new())));\nincoming().for_each(move |s, _| {\n    let shared_state = shared_state.clone();  // Left uncaptured\n    shared_state.borrow_mut().do_mutable_state_stuff(); // Could panic\n});\n</code></pre>\n\n<p>Note that since you're using <code>Rc</code>'s and <code>RefCell</code>'s now, you'll likely need to go ahead and convert your <code>ClientContext</code> struct to storing an Rc> instead of a <code>&amp;mut State</code>. It may be possible to keep using <code>&amp;mut State</code>'s for some things, but your <code>&amp;mut State</code>'s will be tied to the lifetime of the <a href=\"https://doc.rust-lang.org/std/cell/struct.RefMut.html\" rel=\"nofollow noreferrer\"><code>RefMut</code></a>, and if you keep it alive until the next closure runs, the borrows will panic (or fail if you use the <code>try_</code> variants).</p>\n\n<p>Also keep in mind if you decide you want to have multiple threads in your reactor, you will just need to change <code>Rc</code> to <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a>, and <code>RefCell</code> to <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a>, which is a very natural conversion when it's needed.</p>\n"}], "owner": {"reputation": 145, "user_id": 4983930, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/e2d50ab284fecc7f6b2ba41bb6a522ec?s=128&d=identicon&r=PG&f=1", "display_name": "rytone", "link": "https://stackoverflow.com/users/4983930/rytone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1637, "favorite_count": 1, "accepted_answer_id": 44891486, "answer_count": 1, "score": 5, "last_activity_date": 1499109117, "creation_date": 1499048440, "last_edit_date": 1499109085, "question_id": 44876934, "link": "https://stackoverflow.com/questions/44876934/sharing-mutable-state-between-clients-using-async-tokio-rust-websocket", "title": "Sharing mutable state between clients using async (tokio) rust-websocket", "body": "<p>I am writing a websocket server in Rust using rust-websocket and its Tokio-based async system. I can serve clients just fine, however, I can not figure out how to share mutable state between the clients. Here is some (partial) code demonstrating this issue:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut core = Core::new().unwrap();\nlet handle = core.handle();\nlet server = Server::bind(\"localhost:62831\", &amp;handle).unwrap();\n\nlet mut state = State{\n    ...\n};\n\nlet f = server.incoming()\n    .map_err(|InvalidConnection {error, ..}| error)\n    .for_each(|upgrade, _)| {\n        let f = upgrade.accept()\n            .and_then(|s, _| {\n                let ctx = ClientContext{\n                    // some other per-client values\n                    state: &amp;mut state,\n                }\n                ...\n                return s.send(Message::binary(data).into())\n                    .and_then(move |s| Ok(s, ctx)); // this could be the complete wrong way to insert context into the stream\n            }).and_then(|s, ctx| {\n                // client handling code here\n            });\n\n            handle.spawn(f\n                .map_err(...)\n                .map(...)\n            );\n            return Ok(())\n    });\n\ncore.run(f).unwrap();\n</code></pre>\n\n<p>This code errors with this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `**state`, which is owned by the current function\n   --&gt; src/main.rs:111:27\n    |\n111 |                 .and_then(|(s, _)| {\n    |                           ^^^^^^^^ may outlive borrowed value `**state`\n...\n114 |                         state: &amp;mut state,\n    |                                     ----- `**state` is borrowed here\n    |\nhelp: to force the closure to take ownership of `**state` (and any other referenced variables), use the `move` keyword, as shown:\n    |                 .and_then(move |(s, _)| {\n</code></pre>\n\n<p>When trying the compiler's suggestion, I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of captured outer variable in an `FnMut` closure\n   --&gt; src/main.rs:111:27\n    |\n111 |                 .and_then(move |(s, _)| {\n    |                           ^^^^^^^^^^^^^ cannot move out of captured outer variable in an `FnMut` closure\n\nerror: `state` does not live long enough\n   --&gt; src/main.rs:114:37\n    |\n114 |                         state: &amp;mut state,\n    |                                     ^^^^^ does not live long enough\n...\n122 |                 })\n    |                 - borrowed value only lives until here\n    |\n    = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>I also tried wrapping the state in a <code>RefCell</code> (creating the <code>RefCell</code> right after the state itself), however, the compiler gives a similar move error since it tries to move the <code>RefCell</code> into the closure that creates the client context.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1499040736, "post_id": 44876113, "comment_id": 76730961, "body": "Some crates indeed expose the internal <code>num_traits</code> module publicly. It might be that the best thing to do here is to propose that in the pathfinding repository."}, {"owner": {"reputation": 2040, "user_id": 22890, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e6d5c89985a1976429d28f117eb5137?s=128&d=identicon&r=PG", "display_name": "Samuel Tardieu", "link": "https://stackoverflow.com/users/22890/samuel-tardieu"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1499091213, "post_id": 44876113, "comment_id": 76753606, "body": "@E_net4: pathfinding 0.1.12 has been released with your proposed change. Thanks."}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1499095374, "last_edit_date": 1499095374, "creation_date": 1499090656, "answer_id": 44887604, "question_id": 44876113, "link": "https://stackoverflow.com/questions/44876113/how-do-i-use-a-crate-from-another-crate-without-explicitly-defining-a-new-depend/44887604#44887604", "title": "How do I use a crate from another crate without explicitly defining a new dependency in my project?", "body": "<p>Given the original intent of importing non-exposed dependencies from a crate (such as <code>pathfinding</code>) into a dependent project, that is currently not allowed. If a dependency is not re-exported by the crate, that makes it more of an implementation detail than part of the API. Allowing a dependent to access any \"sub-dependency\" would therefore be catastrophic.</p>\n\n<p>In this case however, since <code>num_traits</code> is clearly used in the crate's public API, it also makes sense for the dependent to have access to it. As it is, you are expected to add the dependency in your own project, while taking care to keep a compatible version. Otherwise, cargo might end up building duplicate dependencies.</p>\n\n<pre><code>[dependencies]\nnum_traits = \"0.1\"\n</code></pre>\n\n<p>In order to avoid this, <code>pathfinding</code> would benefit from exporting its own <code>num_traits</code>, as below. <a href=\"https://github.com/samueltardieu/pathfinding/pull/6\" rel=\"noreferrer\">PR #6</a> was created for this purpose, and has been merged into version 0.1.12 (thanks, @SamuelTardieu). </p>\n\n<pre><code>pub extern crate num_traits;\n</code></pre>\n\n<p>With that done, you can now do exactly as written at the end of your question:</p>\n\n<pre><code>use pathfinding::num_traits::Zero;\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 648, "favorite_count": 1, "accepted_answer_id": 44887604, "answer_count": 1, "score": 10, "last_activity_date": 1499187407, "creation_date": 1499038944, "last_edit_date": 1499187407, "question_id": 44876113, "link": "https://stackoverflow.com/questions/44876113/how-do-i-use-a-crate-from-another-crate-without-explicitly-defining-a-new-depend", "title": "How do I use a crate from another crate without explicitly defining a new dependency in my project?", "body": "<p>I want to use the <a href=\"https://docs.rs/pathfinding/0.1.11/pathfinding/fn.dijkstra.html\" rel=\"nofollow noreferrer\"><code>dijkstra</code></a> function from the <code>pathfinding</code> crate:</p>\n\n<pre><code>pub fn dijkstra&lt;N, C, FN, IN, FS&gt;(\n    start: &amp;N, \n    neighbours: FN, \n    success: FS\n) -&gt; Option&lt;(Vec&lt;N&gt;, C)&gt; \nwhere\n    N: Eq + Hash + Clone,\n    C: Zero + Ord + Copy,\n    FN: Fn(&amp;N) -&gt; IN,\n    IN: IntoIterator&lt;Item = (N, C)&gt;,\n    FS: Fn(&amp;N) -&gt; bool, \n</code></pre>\n\n<p>To use it I need to implement the <code>Zero</code> trait from the <a href=\"https://docs.rs/num-traits/0.1.37/num_traits/identities/trait.Zero.html\" rel=\"nofollow noreferrer\"><code>num_traits</code></a> crate. But how can I import <code>Zero</code>? An obvious way is to add <code>extern crate num_traits;</code> into my crate and fix my <code>Cargo.toml</code> appropriately. But in doing so, I have to watch a dependency of a dependency, which is not good.</p>\n\n<p>Can I somehow implement <code>Zero</code> without explicit dependency on the  <a href=\"https://docs.rs/num-traits/0.1.37/num_traits/identities/trait.Zero.html\" rel=\"nofollow noreferrer\"><code>num_traits</code></a> crate, like below?</p>\n\n<pre><code>use pathfinding::num_traits::Zero; \n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1499025984, "post_id": 44874529, "comment_id": 76727822, "body": "Any reason you wouldn&#39;t use <code>if</code>, e.g. <code>let a = if i &gt; 0 { array[i - 1] } else { false }</code>"}, {"owner": {"reputation": 2035, "user_id": 3087409, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/52e76fa33bd0857da46d55e18513af6b?s=128&d=identicon&r=PG&f=1", "display_name": "thosphor", "link": "https://stackoverflow.com/users/3087409/thosphor"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1499028233, "post_id": 44874529, "comment_id": 76728449, "body": "@loganfsmyth No reason, so your answer is great, thanks."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 5, "last_activity_date": 1499027635, "creation_date": 1499027635, "answer_id": 44874975, "question_id": 44874529, "link": "https://stackoverflow.com/questions/44874529/assign-return-value-when-index-check-out-of-bounds/44874975#44874975", "title": "Assign return value when index check out of bounds", "body": "<p>The error <code>attempt to subtract with overflow</code> occurs when computing <code>i - 1</code> when <code>i == 0</code>. Array indices must be of type <code>usize</code>, which is an unsigned type, and unsigned types cannot represent negative numbers, which <code>0 - 1</code> would produce. In a debug build, the compiler generates code that raises this error, but in a release build, the compiler generates code that will simply compute the \"wrong\" value (in this case, this happens to be <code>usize::max_value()</code>).</p>\n\n<p>You can avoid this error in both debug builds and release builds by performing a checked subtraction instead. <a href=\"https://doc.rust-lang.org/stable/std/primitive.usize.html#method.checked_sub\" rel=\"noreferrer\"><code>checked_sub</code></a> returns an <a href=\"https://doc.rust-lang.org/stable/std/option/enum.Option.html\" rel=\"noreferrer\"><code>Option</code></a>: you'll get a <code>Some</code> if the subtraction succeeded or <code>None</code> if it failed. You can then use <a href=\"https://doc.rust-lang.org/stable/std/option/enum.Option.html#method.map_or\" rel=\"noreferrer\"><code>map_or</code></a> on that <code>Option</code> to read the array only if the subtraction produced a valid index.</p>\n\n<pre><code>fn main() {\n    let a = vec![true; 10];\n\n    for i in 0..a.len() {\n        let b = i.checked_sub(1).map_or(false, |j| a[j]);\n        println!(\"b: {}\", b);\n    }\n}\n</code></pre>\n\n<p>Arrays (or rather, slices) also have a <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.get\" rel=\"noreferrer\"><code>get</code></a> method that returns an <code>Option</code> if the index is out of bounds, instead of panicking. If we were adding one to the index, instead of subtracting one, we could do this:</p>\n\n<pre><code>fn main() {\n    let a = vec![true; 10];\n\n    for i in 0..a.len() {\n        let b = i.checked_add(1).and_then(|j| a.get(j).cloned()).unwrap_or(false);\n        println!(\"b: {}\", b);\n    }\n}\n</code></pre>\n\n<p>This time, we're using <code>and_then</code> to chain an operation that produces an <code>Option</code> with another operation that also produces an <code>Option</code>, and we're using <code>unwrap_or</code> to get the <code>Option</code>'s value or a default value if it's <code>None</code>.</p>\n"}], "owner": {"reputation": 2035, "user_id": 3087409, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/52e76fa33bd0857da46d55e18513af6b?s=128&d=identicon&r=PG&f=1", "display_name": "thosphor", "link": "https://stackoverflow.com/users/3087409/thosphor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 729, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1499108242, "creation_date": 1499024203, "last_edit_date": 1499108242, "question_id": 44874529, "link": "https://stackoverflow.com/questions/44874529/assign-return-value-when-index-check-out-of-bounds", "title": "Assign return value when index check out of bounds", "body": "<p>In pseudo-code, I'm trying the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>for i in len(array):\n    try:\n        a = array[i-1]\n    except(out_of_bounds_error):\n        a = false\n</code></pre>\n\n<p>where <code>array</code> is just made up of booleans.</p>\n\n<p>In the book (Chapter 9.2) it says you can check whether a function returns a result or not with something like:</p>\n\n<pre><code>let a: u32 = array[i-1]\n</code></pre>\n\n<p>which tells me <code>a</code> is indeed a bool. Without a <code>Result</code> type, how do I handle the inevitable (and expected) <code>attempt to subtract with overflow</code> error at runtime?</p>\n"}, {"tags": ["syntax", "rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1499026718, "post_id": 44873967, "comment_id": 76728039, "body": "Have you considered not passing the <code>parsed </code> argument by reference?"}, {"owner": {"reputation": 2777, "user_id": 3492625, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IG3Kb.jpg?s=128&g=1", "display_name": "konmik", "link": "https://stackoverflow.com/users/3492625/konmik"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1499072946, "post_id": 44873967, "comment_id": 76741450, "body": "@loganfsmyth Yep, that&#39;s how I ended up. The speed gain for not cloning I got is about 7%."}], "answers": [{"comments": [{"owner": {"reputation": 2777, "user_id": 3492625, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IG3Kb.jpg?s=128&g=1", "display_name": "konmik", "link": "https://stackoverflow.com/users/3492625/konmik"}, "edited": false, "score": 0, "creation_date": 1499025029, "post_id": 44874420, "comment_id": 76727589, "body": "Dereferencing doesn&#39;t work - it says &quot;cannot move out of borrowed content&quot;."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2777, "user_id": 3492625, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IG3Kb.jpg?s=128&g=1", "display_name": "konmik", "link": "https://stackoverflow.com/users/3492625/konmik"}, "edited": false, "score": 0, "creation_date": 1499025676, "post_id": 44874420, "comment_id": 76727760, "body": "<i>That&#39;s what I said it would do!</i> My point may have been a little oblique, but this error should be telling you something. You either need to move the object into <code>parse</code> in the first place, rather than pass a reference, or else you are stuck with cloning."}, {"owner": {"reputation": 2777, "user_id": 3492625, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IG3Kb.jpg?s=128&g=1", "display_name": "konmik", "link": "https://stackoverflow.com/users/3492625/konmik"}, "edited": false, "score": 0, "creation_date": 1499025989, "post_id": 44874420, "comment_id": 76727824, "body": "It is interesting if we could make rust somehow accept a borrowed reference in this place - I see no reasons why not."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2777, "user_id": 3492625, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IG3Kb.jpg?s=128&g=1", "display_name": "konmik", "link": "https://stackoverflow.com/users/3492625/konmik"}, "edited": false, "score": 0, "creation_date": 1499026438, "post_id": 44874420, "comment_id": 76727967, "body": "You want to borrow the reference and then move individual fields! Once, for example, you have moved the <code>files</code> vector onto the new <code>Args</code> instance then the original one won&#39;t have them any more. Even if your program doesn&#39;t need them, Rust won&#39;t allow you to pass around a struct with null pointers in it. You generally don&#39;t need to worry too much about the performance of cloning - the optimiser does a pretty good job to such an extent that often it&#39;s the same as not cloning. So deal with it if it becomes a problem."}, {"owner": {"reputation": 2777, "user_id": 3492625, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IG3Kb.jpg?s=128&g=1", "display_name": "konmik", "link": "https://stackoverflow.com/users/3492625/konmik"}, "edited": false, "score": 0, "creation_date": 1499026922, "post_id": 44874420, "comment_id": 76728083, "body": "So, the internals of the struct are also considered to be borrowed and can&#39;t be just used? I got it. Eh... manual memory management is something I didn&#39;t touch for fifteen years. :D Thanks!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1499023535, "creation_date": 1499023535, "answer_id": 44874420, "question_id": 44873967, "link": "https://stackoverflow.com/questions/44873967/struct-update-syntax-doesnt-work-on-borrowed-data/44874420#44874420", "title": "Struct update syntax doesn&#39;t work on borrowed data", "body": "<p>When a type <code>T</code> is <code>Clone</code> then invoking <code>clone()</code> on a <code>&amp;T</code> will also return a <code>T</code>, because there's no point just copying the pointer. In fact, if it <em>did</em> clone the underlying data and then returned a reference to it then you'd run into trouble because the <code>T</code> would get dropped, leaving the pointer dangling.</p>\n\n<p>To turn a <code>&amp;T</code> into a <code>T</code>, you can use the <code>*</code> operator to dereference it. However, this is going to give you problems because <code>parsed</code> is borrowed by the <code>parse</code> function, which means it has to give it back when it's finished. If you dereference it and move the values then you'll be moving out of a borrowed context.</p>\n"}], "owner": {"reputation": 2777, "user_id": 3492625, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IG3Kb.jpg?s=128&g=1", "display_name": "konmik", "link": "https://stackoverflow.com/users/3492625/konmik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 514, "favorite_count": 0, "accepted_answer_id": 44874420, "answer_count": 1, "score": 1, "last_activity_date": 1499108121, "creation_date": 1499020234, "last_edit_date": 1499108121, "question_id": 44873967, "link": "https://stackoverflow.com/questions/44873967/struct-update-syntax-doesnt-work-on-borrowed-data", "title": "Struct update syntax doesn&#39;t work on borrowed data", "body": "<p>I have a struct like this with some parsed arguments:</p>\n\n<pre><code>struct Args {\n    out: Option&lt;String&gt;,\n    version: bool,\n    help: bool,\n    files: Vec&lt;String&gt;,\n}\n</code></pre>\n\n<p>I want to recursively parse a list, returning a new modified <code>Args</code> struct every time I need to modify it:</p>\n\n<pre><code>fn parse(parsed: &amp;Args, start: usize, args: Vec&lt;String&gt;) -&gt; Args {\n    if start &gt;= args.len() {\n        return parsed.clone();\n    }\n\n    if args[start] == \"--version\" {\n        return parse(&amp;Args { version: true, ..parsed.clone() }, start + 1, args);\n    }\n    if args[start] == \"--help\" {\n        return parse(&amp;Args { help: true, ..parsed.clone() }, start + 1, args);\n    }\n    return Args { files: args[start..args.len()].to_vec(), ..parsed.clone() };\n}\n</code></pre>\n\n<p>I use the function like this:</p>\n\n<pre><code>fn main() {\n    let args = std::env::args().collect::&lt;Vec&lt;String&gt;&gt;();\n    let parsed = parse(&amp;Args::default(), 1, args);\n}\n</code></pre>\n\n<p>This code works, but I would like to type:</p>\n\n<pre><code>return parse(&amp;Args { version: true, ..parsed }, start + 1, args);\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>return parse(&amp;Args { version: true, ..parsed.clone() }, start + 1, args);\n</code></pre>\n\n<p>to avoid excessive data copying during cloning. When I just remove <code>.clone()</code> it says that <code>Args</code> type expected but it got <code>&amp;Args</code> instead.</p>\n\n<p>When I dereference with <code>*parsed</code> compiler says \"cannot move out of borrowed content\"</p>\n"}, {"tags": ["unit-testing", "module", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 4175, "user_id": 11801, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/a31fbafa397845ab6ec33df5139ae589?s=128&d=identicon&r=PG", "display_name": "tenpn", "link": "https://stackoverflow.com/users/11801/tenpn"}, "edited": false, "score": 1, "creation_date": 1499018864, "post_id": 44873725, "comment_id": 76725901, "body": "Would you idiomatically put unit tests in their own file, and have prod mode mod them in? Or just put the tests in the file of the thing under test?"}, {"owner": {"reputation": 1021, "user_id": 1733823, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a76ed49769b056df6083cf7c93fbd2e6?s=128&d=identicon&r=PG", "display_name": "Afaq", "link": "https://stackoverflow.com/users/1733823/afaq"}, "edited": false, "score": 5, "creation_date": 1530128958, "post_id": 44873725, "comment_id": 89130611, "body": "Does anyone find this behaviour weird or is it just me?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1021, "user_id": 1733823, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a76ed49769b056df6083cf7c93fbd2e6?s=128&d=identicon&r=PG", "display_name": "Afaq", "link": "https://stackoverflow.com/users/1733823/afaq"}, "edited": false, "score": 0, "creation_date": 1530129432, "post_id": 44873725, "comment_id": 89130820, "body": "@Afaq I found it confusing at first because it&#39;s different to languages that I&#39;m used to. But it doesn&#39;t seem strange to me now. It&#39;s an entirely logical approach, just with a different set of tradeoffs from, say, Java."}, {"owner": {"reputation": 1021, "user_id": 1733823, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a76ed49769b056df6083cf7c93fbd2e6?s=128&d=identicon&r=PG", "display_name": "Afaq", "link": "https://stackoverflow.com/users/1733823/afaq"}, "edited": false, "score": 1, "creation_date": 1530133459, "post_id": 44873725, "comment_id": 89132552, "body": "@PeterHall Yes, it is a bit confusing. Although, I found this very interesting blog about organising tests in Rust <a href=\"http://sireliah.com/niusy/testing_in_rust/\" rel=\"nofollow noreferrer\">sireliah.com/niusy/testing_in_rust</a>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 19, "last_activity_date": 1530129870, "last_edit_date": 1530129870, "creation_date": 1499018545, "answer_id": 44873725, "question_id": 44873527, "link": "https://stackoverflow.com/questions/44873527/cargo-not-running-tests-in-top-level-file/44873725#44873725", "title": "Cargo not running tests in top-level file", "body": "<p>Cargo will not just compile any files that happen to be in your source directory. In order for Cargo to find a file, it must be referenced as a module either in <code>main.rs</code>/<code>lib.rs</code> or from some sub-module.</p>\n\n<p>For example, in your <code>main.rs</code>:</p>\n\n<pre><code>mod foo;\n</code></pre>\n\n<p>That's it.</p>\n"}], "owner": {"reputation": 4175, "user_id": 11801, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/a31fbafa397845ab6ec33df5139ae589?s=128&d=identicon&r=PG", "display_name": "tenpn", "link": "https://stackoverflow.com/users/11801/tenpn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4313, "favorite_count": 0, "accepted_answer_id": 44873725, "answer_count": 1, "score": 13, "last_activity_date": 1551785549, "creation_date": 1499017208, "last_edit_date": 1551785549, "question_id": 44873527, "link": "https://stackoverflow.com/questions/44873527/cargo-not-running-tests-in-top-level-file", "title": "Cargo not running tests in top-level file", "body": "<p>I'm quite confused by how Cargo finds tests to run. </p>\n\n<p>I've created a Cargo project and it added a <code>main.rs</code> for me. If I add <code>#[test]</code> functions in there, they're found and run with <code>cargo test</code>. If I add a <code>foo.rs</code> file as a sibling to <code>main.rs</code> and add tests in there, they're not found and run.</p>\n\n<p>What subtlety am I missing? Do I somehow have to teach Cargo about new files?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499015554, "post_id": 44873157, "comment_id": 76725003, "body": "Weird. This must be a bug. And it is particularly surprising because the behaviour is the same as OP&#39;s when you <code>#[derive(PartialEq)]</code> instead, which makes me wonder how it hasn&#39;t been found before."}, {"owner": {"reputation": 6631, "user_id": 51683, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ac88413948aad12e279e0d9609e7f74?s=128&d=identicon&r=PG", "display_name": "carols10cents", "link": "https://stackoverflow.com/users/51683/carols10cents"}, "edited": false, "score": 0, "creation_date": 1552950003, "post_id": 44873157, "comment_id": 97196871, "body": "I stumbled across this question and was curious; the question&#39;s code compiles today with Rust 1.33.0. Some searching says it was fixed by this commit: <a href=\"https://github.com/rust-lang/rust/commit/1a7fb7dc78439a704f024609ce3dc0beb1386552\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/commit/&hellip;</a> which was created to solve the problem described in this SO question: <a href=\"https://stackoverflow.com/questions/46857955/why-does-this-result-of-a-binary-operator-need-an-appropriate-lifetime\" title=\"why does this result of a binary operator need an appropriate lifetime\">stackoverflow.com/questions/46857955/&hellip;</a>"}], "tags": [], "owner": {"reputation": 1106, "user_id": 161659, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jKJ7J.jpg?s=128&g=1", "display_name": "Sebastian Ullrich", "link": "https://stackoverflow.com/users/161659/sebastian-ullrich"}, "is_accepted": false, "score": 1, "last_activity_date": 1499014589, "creation_date": 1499014589, "answer_id": 44873157, "question_id": 44872584, "link": "https://stackoverflow.com/questions/44872584/am-i-missing-something-when-it-comes-to-lifetimes/44873157#44873157", "title": "Am I missing something when it comes to lifetimes?", "body": "<p>This seems to be a problem with lifetime inference/variance when combined with the <code>==</code> syntax sugar -- note that replacing the comparison with <code>PartialEq::eq(&amp;appearance, &amp;other_appearance)</code> works. I do not know whether this is a known bug.</p>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499015141, "post_id": 44873175, "comment_id": 76724903, "body": "This is actually interesting because the instance created by <code>#[derive(PartialEq)]</code> has the same problem as OP&#39;s."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1499015215, "post_id": 44873175, "comment_id": 76724919, "body": "As an aside, due to the fact that the values are dropped in the reverse order to them being declared, you can also fix this by swapping the order, i.e. use <code>other_appearance == appearance</code> instead of <code>appearance == other_appearance</code>. Yes, Rust has a few warts..."}, {"owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "edited": false, "score": 0, "creation_date": 1499021417, "post_id": 44873175, "comment_id": 76726579, "body": "Thank you! I need to dwell on the syntax, even if I understand conceptually what you said :)"}], "tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": true, "score": 6, "last_activity_date": 1499014696, "creation_date": 1499014696, "answer_id": 44873175, "question_id": 44872584, "link": "https://stackoverflow.com/questions/44872584/am-i-missing-something-when-it-comes-to-lifetimes/44873175#44873175", "title": "Am I missing something when it comes to lifetimes?", "body": "<p>The <code>PartialEq</code> trait has a type parameter that specifies the type of the right-hand side. Since you didn't specify it, it defaults to the same type as the left-hand side. This means that both sides are assumed to have the same lifetimes. \nThis causes an error because <code>another_thing</code> is dropped before <code>appearance</code>, but <code>other_appearance</code> (which holds a reference to <code>another_thing</code>) is assumed to have the same lifetime as <code>appearance</code>.</p>\n\n<p>You can fix this by using a different lifetime on the right-hand side:</p>\n\n<pre><code>impl&lt;'a, 'b&gt; PartialEq&lt;Appearance&lt;'b&gt;&gt; for Appearance&lt;'a&gt; {\n    fn eq(&amp;self, other: &amp;Appearance&lt;'b&gt;) -&gt; bool {\n        self.identity == other.identity &amp;&amp; self.role == other.role\n    }\n};\n</code></pre>\n"}], "owner": {"reputation": 695, "user_id": 1407530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/34d7caadb1601d6fec8f7065300a56ff?s=128&d=identicon&r=PG", "display_name": "Lars R&#246;nnb&#228;ck", "link": "https://stackoverflow.com/users/1407530/lars-r%c3%b6nnb%c3%a4ck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 44873175, "answer_count": 2, "score": 3, "last_activity_date": 1499021549, "creation_date": 1499010409, "last_edit_date": 1499012151, "question_id": 44872584, "link": "https://stackoverflow.com/questions/44872584/am-i-missing-something-when-it-comes-to-lifetimes", "title": "Am I missing something when it comes to lifetimes?", "body": "<p>I just started learning Rust, coming from a Java/JavaScript background, so bear with me because I am obviously missing something in my understanding of lifetimes.</p>\n\n<pre><code>fn main() {\n    struct Appearance&lt;'a&gt; {\n        identity:       &amp;'a u64, \n        role:           &amp;'a str\n    };\n    impl&lt;'a&gt; PartialEq for Appearance&lt;'a&gt; {\n        fn eq(&amp;self, other: &amp;Appearance) -&gt; bool {\n            self.identity == other.identity &amp;&amp; self.role == other.role\n        }\n    };\n    let thing = 42u64;\n    let hair_color = \"hair color\";\n    let appearance = Appearance { \n        identity: &amp;thing, \n        role: &amp;hair_color \n    };\n    let another_thing = 43u64;    \n    let other_appearance = Appearance { \n        identity: &amp;another_thing, \n        role: &amp;hair_color \n    };\n    println!(\"{}\", appearance == other_appearance);\n}\n</code></pre>\n\n<p>This is giving me a compilation error as the compiler reaches the <code>other_appearance</code>, telling me that <code>another_thing</code> does not live long enough. However, if I leave out the creation of <code>other_appearance</code> the program compiles and runs fine. Why am I getting this error?</p>\n"}, {"tags": ["sqlite", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498998095, "post_id": 44869922, "comment_id": 76720040, "body": "I added my dependencies to the original post. As you can see the <code>chrono</code> feature is defined for <code>diesel</code>. It isn&#39;t available for <code>diesel_codegen</code>."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1498999576, "post_id": 44869922, "comment_id": 76720449, "body": "The hint is in the error. The trait is implemented for <code>NaiveDateTime</code> but not <code>Option&lt;NaiveDateTime&gt;</code> (not that I can see in the Diesel documentation anyway). How you go about implementing it I am unsure - I&#39;ve not played with Diesel for very long. Perhaps try removing the <code>Option</code> to begin with to make sure that is the issue."}, {"owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "edited": false, "score": 0, "creation_date": 1499000272, "post_id": 44869922, "comment_id": 76720651, "body": "Did you run the migration to setup the SQLite database? Otherwise schema inference won&#39;t work"}, {"owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "edited": false, "score": 0, "creation_date": 1499000453, "post_id": 44869922, "comment_id": 76720704, "body": "The error message mentions <code>&lt;std::option::Option&lt;chrono::naive::datetime::NaiveDateTime&gt; as diesel::types::FromSqlRow&lt;diesel::types::Nullable&lt;diesel::ty&zwnj;&#8203;pes::Timestamp&gt;, DB&gt;&gt;</code> which should match except for the <code>datetime</code> module, which is private."}, {"owner": {"reputation": 1075, "user_id": 2288443, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbfe76613f45e29cc96c5a36a58b9cf0?s=128&d=identicon&r=PG", "display_name": "phayes", "link": "https://stackoverflow.com/users/2288443/phayes"}, "edited": false, "score": 1, "creation_date": 1560452337, "post_id": 44869922, "comment_id": 99751900, "body": "It should be noted that this question is not a duplicate. This error has nothing to do with multiple conflicting dependencies.  The &quot;duplicate&quot; designation should be removed."}], "owner": {"reputation": 16512, "user_id": 838975, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92e7475c44d10fd1959dfa8554303f2f?s=128&d=identicon&r=PG", "display_name": "Nicola Musatti", "link": "https://stackoverflow.com/users/838975/nicola-musatti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 686, "favorite_count": 2, "closed_date": 1499112296, "answer_count": 0, "score": 8, "last_activity_date": 1507386586, "creation_date": 1498992149, "last_edit_date": 1507386586, "question_id": 44869922, "link": "https://stackoverflow.com/questions/44869922/cannot-get-diesel-to-infer-a-nullable-timestamp-column-in-a-sqlite-table", "closed_reason": "Duplicate", "title": "Cannot get Diesel to infer a nullable Timestamp column in a SQLite table", "body": "<p>I'm trying to use Diesel's inference capability to work with a SQLite table that contains a nullable timestamp column. A complete example is available in <a href=\"https://github.com/nmusatti/diesel_timestamp_error/tree/3dfc19658490ae3200e94067108c38a95b3f6a0e\" rel=\"noreferrer\">an older revision</a> of this <a href=\"https://github.com/nmusatti/diesel_timestamp_error\" rel=\"noreferrer\">GitHub project</a>.</p>\n\n<p>The <code>books</code> table is defined as follows:</p>\n\n<pre class=\"lang-sql prettyprint-override\"><code>create table books (\n    id integer not null primary key,\n    title varchar null,\n    save_date timestamp null \n)\n</code></pre>\n\n<p>I'm trying to query it with the following struct:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub mod domain {\n    use chrono::naive;\n\n    #[derive(Queryable)]\n    pub struct Book {\n        id : i32,\n        title : Option&lt;String&gt;,\n        save_date : Option&lt;naive::NaiveDateTime&gt;, \n    }\n}\n</code></pre>\n\n<p>However when I try to actually perform the query, as in:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    use self::schema::books::dsl::*;\n    let database_url = env::var(\"DATABASE_URL\").unwrap();\n    let conn = sqlite::SqliteConnection::establish(&amp;database_url).unwrap();\n    let res = books.load::&lt;domain::Book&gt;(&amp;conn);\n}\n</code></pre>\n\n<p>I get the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::option::Option&lt;chrono::NaiveDateTime&gt;: diesel::types::FromSqlRow&lt;diesel::types::Nullable&lt;diesel::types::Timestamp&gt;, _&gt;` is not satisfied\n  --&gt; src/main.rs:32:21\n   |\n32 |     let res = books.load::&lt;domain::Book&gt;(&amp;conn);\n   |                     ^^^^ the trait `diesel::types::FromSqlRow&lt;diesel::types::Nullable&lt;diesel::types::Timestamp&gt;, _&gt;` is not implemented for `std::option::Option&lt;chrono::NaiveDateTime&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;std::option::Option&lt;chrono::naive::date::NaiveDate&gt; as diesel::types::FromSqlRow&lt;diesel::types::Nullable&lt;diesel::types::Date&gt;, DB&gt;&gt;\n             &lt;std::option::Option&lt;chrono::naive::time::NaiveTime&gt; as diesel::types::FromSqlRow&lt;diesel::types::Nullable&lt;diesel::types::Time&gt;, DB&gt;&gt;\n             &lt;std::option::Option&lt;chrono::naive::datetime::NaiveDateTime&gt; as diesel::types::FromSqlRow&lt;diesel::types::Nullable&lt;diesel::types::Timestamp&gt;, DB&gt;&gt;\n             &lt;std::option::Option&lt;bool&gt; as diesel::types::FromSqlRow&lt;diesel::types::Nullable&lt;diesel::types::Bool&gt;, DB&gt;&gt;\n           and 26 others\n   = note: required because of the requirements on the impl of `diesel::types::FromSqlRow&lt;(diesel::types::Integer, diesel::types::Nullable&lt;diesel::types::Text&gt;, diesel::types::Nullable&lt;diesel::types::Timestamp&gt;), _&gt;` for `(i32, std::option::Option&lt;std::string::String&gt;, std::option::Option&lt;chrono::NaiveDateTime&gt;)`\n   = note: required because of the requirements on the impl of `diesel::Queryable&lt;(diesel::types::Integer, diesel::types::Nullable&lt;diesel::types::Text&gt;, diesel::types::Nullable&lt;diesel::types::Timestamp&gt;), _&gt;` for `domain::Book`\n</code></pre>\n\n<p>What I don't understand is why the implementation for <code>chrono::naive::datetime::NaiveDateTime</code>\nisn't picked up and what I should do to make it happen.</p>\n\n<p>I'm using the stable toolchain, which is currently 1.18.0, and these are my dependencies:</p>\n\n<pre><code>[dependencies]\nchrono = \"0.4.0\"\ndiesel = { version = \"0.13.0\", features = [ \"chrono\", \"sqlite\" ] }\ndiesel_codegen = { version = \"0.13.0\", features = [ \"sqlite\" ] }\ndotenv = \"0.9.0\"\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 2, "creation_date": 1498982175, "post_id": 44868443, "comment_id": 76716213, "body": "The error message is horribly confusing, and unrelated AFAICT; might want to file a bug report on that. The real problem is that <code>str::contains()</code> wants a type with <a href=\"https://doc.rust-lang.org/std/str/pattern/trait.Pattern.html\" rel=\"nofollow noreferrer\">the <code>Pattern</code> trait</a>, but <code>&amp;Path</code> doesn&#39;t implement that trait. <code>&amp;str</code> does, however, so <a href=\"https://play.rust-lang.org/?gist=f6cf176acc0e25ff18acb8f9137f2314&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">this</a> works, but I don&#39;t know if that&#39;s really what you want (hence posting a comment rather than answer)..."}, {"owner": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "reply_to_user": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498983431, "post_id": 44868443, "comment_id": 76716463, "body": "Hey that does solve my problem. :D One doubt, why is query Path here?"}, {"owner": {"reputation": 59630, "user_id": 636019, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38ba39c7ba510ac2951c010c26afb6a6?s=128&d=identicon&r=PG", "display_name": "ildjarn", "link": "https://stackoverflow.com/users/636019/ildjarn"}, "edited": false, "score": 0, "creation_date": 1498984531, "post_id": 44868443, "comment_id": 76716706, "body": "Because <code>run</code> has <code>where T: std::convert::AsRef&lt;std::path::Path&gt;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1499015855, "last_edit_date": 1499015855, "creation_date": 1498990666, "answer_id": 44869722, "question_id": 44868443, "link": "https://stackoverflow.com/questions/44868443/the-trait-stdopsfnchar-is-not-implemented-for-t/44869722#44869722", "title": "The trait `std::ops::Fn&lt;(char,)&gt;` is not implemented for `T`", "body": "<p>The problem (or one of them) is in this function:</p>\n\n<pre><code>fn search&lt;'a, T&gt;(query: &amp;T, contents: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut results = Vec::new();\n\n    for line in contents.lines() {\n        if line.contains(query) {\n            results.push(line);\n        }\n    }\n    results\n}\n</code></pre>\n\n<p>The function <code>line.contains()</code> expects an argument that implements the trait <code>Pattern</code>. But your <code>T</code> parameter is unconstrained. The error is a little confusing because you probably don't care about the <code>Fn</code> and <code>FnOnce</code> implementations, which just happen to be supertypes of <code>Pattern</code>. </p>\n\n<p>The next problem you'll face is that <code>Pattern</code> itself is not stabilized yet, so you can't use it explicitly unless you switch to a nightly build of the compiler. Otherwise, you can constrain <code>T</code> so that it can at least be turned into something else that already implements <code>Pattern</code>, such as <code>&amp;str</code>:</p>\n\n<pre><code>fn search&lt;'a, T: 'a&gt;(query: &amp;'a T, contents: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; \n    where &amp;'a T: Into&lt;&amp;'a str&gt;\n{\n    let mut results = Vec::new();\n\n    for line in contents.lines() {\n        if line.contains(query.into()) {\n            results.push(line);\n        }\n    }\n    results\n}\n</code></pre>\n\n<p>You'll still have more errors after this, but hopefully this gets you past the most confusing one.</p>\n"}], "owner": {"reputation": 173, "user_id": 7150660, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6ea5e2d7c1503778eea177bc2ab56b3b?s=128&d=identicon&r=PG&f=1", "display_name": "codeNoob", "link": "https://stackoverflow.com/users/7150660/codenoob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1225, "favorite_count": 0, "accepted_answer_id": 44869722, "answer_count": 1, "score": 2, "last_activity_date": 1499107895, "creation_date": 1498980599, "last_edit_date": 1499107895, "question_id": 44868443, "link": "https://stackoverflow.com/questions/44868443/the-trait-stdopsfnchar-is-not-implemented-for-t", "title": "The trait `std::ops::Fn&lt;(char,)&gt;` is not implemented for `T`", "body": "<p>I am trying to implement the greps project and I am stuck at the search function.</p>\n\n<pre><code>fn search&lt;'a, T&gt;(query: &amp;T, contents: &amp;'a str) -&gt; Vec&lt;&amp;'a str&gt; {\n    let mut results = Vec::new();\n\n    for line in contents.lines() {\n        if line.contains(query) {\n            results.push(line);\n        }\n    }\n    results\n}\n</code></pre>\n\n<p>I am getting this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.18.0 (03fc9d622 2017-06-06)\nerror[E0277]: the trait bound `T: std::ops::Fn&lt;(char,)&gt;` is not satisfied\n  --&gt; &lt;anon&gt;:39:17\n   |\n39 |         if line.contains(query) {\n   |                 ^^^^^^^^ the trait `std::ops::Fn&lt;(char,)&gt;` is not implemented for `T`\n   |\n   = help: consider adding a `where T: std::ops::Fn&lt;(char,)&gt;` bound\n   = note: required because of the requirements on the impl of `std::ops::FnOnce&lt;(char,)&gt;` for `&amp;T`\n   = note: required because of the requirements on the impl of `std::str::pattern::Pattern&lt;'_&gt;` for `&amp;T`\n\nerror[E0277]: the trait bound `T: std::ops::FnOnce&lt;(char,)&gt;` is not satisfied\n  --&gt; &lt;anon&gt;:39:17\n   |\n39 |         if line.contains(query) {\n   |                 ^^^^^^^^ the trait `std::ops::FnOnce&lt;(char,)&gt;` is not implemented for `T`\n   |\n   = help: consider adding a `where T: std::ops::FnOnce&lt;(char,)&gt;` bound\n   = note: required because of the requirements on the impl of `std::str::pattern::Pattern&lt;'_&gt;` for `&amp;T`\n\nerror[E0277]: the trait bound `str: std::marker::Sized` is not satisfied\n  --&gt; &lt;anon&gt;:57:40\n   |\n57 |         assert_eq!(vec![\"KAMEHAMEHA\"], search(query, contents));\n   |                                        ^^^^^^ the trait `std::marker::Sized` is not implemented for `str`\n   |\n   = note: `str` does not have a constant size known at compile-time\n   = note: required by `search`\n</code></pre>\n\n<p>Why do I need the <code>Fn</code> trait? Adding that trait isn't solving my problem. I am using generics, and I know I don't really need generics here but I am trying to understand the topic. </p>\n\n<p>Here is the full code on Rust <a href=\"https://play.rust-lang.org/?gist=ca11eb8e51982f63a61ff05c542ec0db&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a>.</p>\n"}, {"tags": ["rust", "ownership", "borrow-checker"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 5, "creation_date": 1498956598, "post_id": 44866571, "comment_id": 76712527, "body": "The call <code>draw(root);</code> should not be causing errors, because the borrow will end at the end of the statement. Could you post an <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> showing the errors you&#39;re getting?"}, {"owner": {"reputation": 1220, "user_id": 2124732, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/cf9d2998c0d9cb26334028f72185fe38?s=128&d=identicon&r=PG", "display_name": "Christopher Dumas", "link": "https://stackoverflow.com/users/2124732/christopher-dumas"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1498963703, "post_id": 44866571, "comment_id": 76713353, "body": "I&#39;ll try to come up with one."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1498993515, "post_id": 44866571, "comment_id": 76718898, "body": "At least post the actual error. But ideally post code that produces that error."}], "answers": [{"comments": [{"owner": {"reputation": 1220, "user_id": 2124732, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/cf9d2998c0d9cb26334028f72185fe38?s=128&d=identicon&r=PG", "display_name": "Christopher Dumas", "link": "https://stackoverflow.com/users/2124732/christopher-dumas"}, "edited": false, "score": 0, "creation_date": 1499003383, "post_id": 44871363, "comment_id": 76721480, "body": "Okay. I didn&#39;t really understand the syntax for this, apparently. Thank you!"}], "tags": [], "owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "is_accepted": true, "score": 3, "last_activity_date": 1499002452, "creation_date": 1499002452, "answer_id": 44871363, "question_id": 44866571, "link": "https://stackoverflow.com/questions/44866571/rust-borrowing-ownership/44871363#44871363", "title": "Rust borrowing/ownership", "body": "<p>The problem is at the <code>draw_char</code> call in <code>draw_map</code>. <code>root</code> is already a mutable reference to a <code>RootConsole</code>; you are trying to pass to <code>draw_char</code> a <em>mutable reference</em> to <code>root</code>, which essentially becomes a mutable reference to a <em>mutable reference</em> to a <code>RootConsole</code>. Simply pass <code>root</code> as the parameter and you are done.</p>\n"}], "owner": {"reputation": 1220, "user_id": 2124732, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/cf9d2998c0d9cb26334028f72185fe38?s=128&d=identicon&r=PG", "display_name": "Christopher Dumas", "link": "https://stackoverflow.com/users/2124732/christopher-dumas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "accepted_answer_id": 44871363, "answer_count": 1, "score": -1, "last_activity_date": 1499107837, "creation_date": 1498956314, "last_edit_date": 1499107837, "question_id": 44866571, "link": "https://stackoverflow.com/questions/44866571/rust-borrowing-ownership", "title": "Rust borrowing/ownership", "body": "<p>I'm using tcod-rs. Each method used to draw to the <code>RootConsole</code> takes a <strong>mutable reference</strong>. The central loop is a <code>while</code> loop that waits for the window to close, and clears the screen, draws, and then flushes. The \"check for window close\" method also takes a mutable reference. <code>clear</code> and <code>flush</code> do too. I have a custom drawing function that needs a mutable reference so it can draw:</p>\n\n<pre><code>fn draw(root: &amp;mut RootConsole) { /* Do state-y stuff */ }\nwhile !root.window_closed() /* Mutable borrow 1 */ {\n    root.clear(); // Mutable borrow 2\n    draw(root); // Mutable borrow 3\n    root.flush(); // Mutable borrow 4\n}\n</code></pre>\n\n<p>The compiler has a nervous breakdown screaming about aliens stealing <code>RootConsole</code>s. I've managed to cut it down to one error by just making the changes it suggests. I can't change the tcod-rs library, or at least, I'd rather not, and I would prefer to keep using it. Replacing the <code>draw(root)</code> function with a <code>root.put_char(...)</code> for instance, works.</p>\n\n<p>Here is the error I get on attempting to <code>cargo run</code>. The <code>tcod::console::Root</code> type has documentation <a href=\"http://tomassedovic.github.io/tcod-rs/tcod/console/struct.Root.html\" rel=\"nofollow noreferrer\">here</a>. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    error[E0596]: cannot borrow immutable argument `root` as mutable\n  --&gt; src/draw/mod.rs:27:33\n   |\n9  | pub fn draw_map(root: &amp;mut RootConsole, world: WorldState) {\n   |                 ---- consider changing this to `mut root`\n...\n27 |                 .draw_char(&amp;mut root,\n   |                                 ^^^^ cannot borrow mutably\n</code></pre>\n\n<p>My actual draw_map code is pretty simple:</p>\n\n<pre><code>pub trait DrawChar {\n    fn draw_char(self, root: &amp;mut RootConsole, pos: (i32, i32));\n}\n\npub fn draw_map(root: &amp;mut RootConsole, world: WorldState) {\n    let screen_start_y = world.screen.1;\n    let screen_end_y = screen_start_y + root.height();\n\n    let screen_start_x = world.screen.0;\n    let screen_end_x = screen_start_x + root.width();\n\n    let x = screen_start_x;\n    let y = screen_start_y;\n    for scan_line in &amp;world.map[screen_start_y as usize..\n                                screen_end_y as usize]\n    {\n        y += 1;\n        for unit in &amp;scan_line[screen_start_x as usize..\n                               screen_end_x as usize]\n        {\n            x += 1;\n            unit.tiles[world.level as usize]\n                .draw_char(&amp;mut root,\n                           (x as i32 - screen_start_x,\n                            y as i32 - screen_start_y));\n        }\n    }\n}\n</code></pre>\n\n<p>Each tile implements <code>DrawChar</code>, which, since it uses functions from tcod-rs <em>on</em> a root, requires a mutable reference. My main loop isn't much different from the while loop above, except that it handles key commands using some native functions.</p>\n"}, {"tags": ["multithreading", "rust", "hyper", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 1, "creation_date": 1499175734, "post_id": 44876256, "comment_id": 76791996, "body": "thanks for your response!! I&#39;m not agreed on the fact that reusing connections from different threads is not usable, I say, if you have an schema based in futures (similar to Scala with Akka HTTP), you could hold a bunch of futures and some of them could depend on a request. This works well in tokio if you have all in the same event loop, but you don&#39;t have an easy way to have several threads submitting tasks like request http to an external event loop."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 0, "creation_date": 1499177826, "post_id": 44876256, "comment_id": 76793263, "body": "You haven&#39;t described what your many threads would be doing. So far it sounds like an XY problem. Have you considered moving the outcome of those multithreaded tasks to the client&#39;s thread, rather than the other way around?"}, {"owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 0, "creation_date": 1499178997, "post_id": 44876256, "comment_id": 76793964, "body": "Yes, that&#39;s right, This is the use case: I&#39;m building a minimalistic load balancer, with some encryption and decryption operations (mainly that is the intensive operation), and the first approach I thought was to have an event loop to receive connections, a thread pool to handle the connections and n event loops as HTTP client. I found it very difficult to achieve, so for now I&#39;m only have N event loops and each one receive tcp connections, decrypts a token. and perform some requests. But I think that this is not the better way to go."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "edited": false, "score": 0, "creation_date": 1499179622, "post_id": 44876256, "comment_id": 76794349, "body": "<i>&quot;an event loop to receive connections&quot;</i> is one tokio core, that part would be fine. The rest doesn&#39;t sound like something that can be addressed here without a new, specific question. As far as Hyper goes, a <code>Client</code> is not thread-safe and wrapping it around thread synchronization mechanisms is simply a bad idea."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 3, "last_activity_date": 1500542241, "last_edit_date": 1500542241, "creation_date": 1499040631, "answer_id": 44876256, "question_id": 44866366, "link": "https://stackoverflow.com/questions/44866366/how-can-i-use-hyperclient-from-another-thread/44876256#44876256", "title": "How can I use hyper::client from another thread?", "body": "<p>The short answer is no, but it's better that way.</p>\n\n<p>Each <code>Client</code> object holds a pool of connections. Here's how Hyper's <a href=\"https://github.com/hyperium/hyper/blob/v0.11.0/src/client/pool.rs#L14-L16\" rel=\"nofollow noreferrer\"><code>Pool</code></a> is defined in version 0.11.0:</p>\n\n<pre><code>pub struct Pool&lt;T&gt; {\n    inner: Rc&lt;RefCell&lt;PoolInner&lt;T&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>As <code>inner</code> is reference-counted with an <code>Rc</code> and borrow-checked in run-time with <code>RefCell</code>, the pool is certainly not thread-safe. When you tried to move that <code>Client</code> to a new thread, that object would be holding a pool that lives in another thread, which would have been a source of data races.</p>\n\n<p>This implementation is understandable. Attempting to reuse an HTTP connection across multiple threads is not very usual, as it requires synchronized access to a resource that is mostly I/O intensive. This couples pretty well with Tokio's asynchronous nature. It is actually more reasonable to perform multiple requests in the same thread, and let Tokio's core take care of sending messages and receiving them asynchronously, without waiting for each response in sequence. Moreover, computationally intensive tasks can be executed by a CPU pool from <code>futures_cpupool</code>. With that in mind, the code below works fine:</p>\n\n<pre><code>extern crate tokio_core;\nextern crate hyper;\nextern crate futures;\nextern crate futures_cpupool;\n\nuse tokio_core::reactor::Core;\nuse hyper::client::Client;\nuse futures::Future;\nuse futures_cpupool::CpuPool;\n\nfn main() {\n\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n    let client = Client::new(&amp;handle.clone());\n    let pool = CpuPool::new(1);\n\n    println!(\"Begin!\");\n    let req = client.get(\"http://google.com\".parse().unwrap())\n        .and_then(|res| {\n            println!(\"Response: {}\", res.status());\n            Ok(())\n        });\n    let intensive = pool.spawn_fn(|| {\n        println!(\"I'm working hard!!!\");\n        std::thread::sleep(std::time::Duration::from_secs(1));\n        println!(\"Phew!\");\n        Ok(())\n    });\n\n    let task = req.join(intensive)\n        .map(|_|{\n            println!(\"End!\");\n        });\n    core.run(task).unwrap();\n}\n</code></pre>\n\n<p>If the response is not received too late, the output will be:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Begin!\nI'm working hard!!!\nResponse: 302 Found\nPhew!\nEnd!\n</code></pre>\n\n<p>If you have multiple tasks running in separate threads, the problem becomes open-ended, since there are multiple architectures feasible. One of them is to delegate all communications to a single actor, thus requiring all other worker threads to send their data to it. Alternatively, you can have one client object to each worker, thus also having separate connection pools.</p>\n"}], "owner": {"reputation": 177, "user_id": 3392786, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11369d341f1973c9ed58751a95dae948?s=128&d=identicon&r=PG", "display_name": "cspinetta", "link": "https://stackoverflow.com/users/3392786/cspinetta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1799, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1500556112, "creation_date": 1498953491, "last_edit_date": 1500556112, "question_id": 44866366, "link": "https://stackoverflow.com/questions/44866366/how-can-i-use-hyperclient-from-another-thread", "title": "How can I use hyper::client from another thread?", "body": "<p>I have multiple threads performing some heavy operations and I need to use a client in middle of work. I'm using Hyper v0.11 as a HTTP client and I would like to reuse the connections so I need to share the same <code>hyper::Client</code> in order to keep open the connections (under <code>keep-alive</code> mode).</p>\n\n<p>The client is not shareable among threads (it doesn't implement <code>Sync</code> or <code>Send</code>). Here a small snippet with the code I've tried to do:</p>\n\n<pre><code>let mut core = Core::new().expect(\"Create Client Event Loop\");\nlet handle = core.handle();\n\nlet remote = core.remote();\n\nlet client = Client::new(&amp;handle.clone());\n\nthread::spawn(move || {\n\n    // intensive operations...\n\n    let response = &amp;client.get(\"http://google.com\".parse().unwrap()).and_then(|res| {\n        println!(\"Response: {}\", res.status());\n        Ok(())\n    });\n\n    remote.clone().spawn(|_| {\n        response.map(|_| { () }).map_err(|_| { () })\n    });\n\n    // more intensive operations...\n});\ncore.run(futures::future::empty::&lt;(), ()&gt;()).unwrap();\n</code></pre>\n\n<p>This code doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread::spawn(move || {\n^^^^^^^^^^^^^ within `[closure@src/load-balancer.rs:46:19: 56:6 client:hyper::Client&lt;hyper::client::HttpConnector&gt;, remote:std::sync::Arc&lt;tokio_core::reactor::Remote&gt;]`, the trait `std::marker::Send` is not implemented for `std::rc::Weak&lt;std::cell::RefCell&lt;tokio_core::reactor::Inner&gt;&gt;`\n\nthread::spawn(move || {\n^^^^^^^^^^^^^ within `[closure@src/load-balancer.rs:46:19: 56:6 client:hyper::Client&lt;hyper::client::HttpConnector&gt;, remote:std::sync::Arc&lt;tokio_core::reactor::Remote&gt;]`, the trait `std::marker::Send` is not implemented for `std::rc::Rc&lt;std::cell::RefCell&lt;hyper::client::pool::PoolInner&lt;tokio_proto::util::client_proxy::ClientProxy&lt;tokio_proto::streaming::message::Message&lt;hyper::http::MessageHead&lt;hyper::http::RequestLine&gt;, hyper::Body&gt;, tokio_proto::streaming::message::Message&lt;hyper::http::MessageHead&lt;hyper::http::RawStatus&gt;, tokio_proto::streaming::body::Body&lt;hyper::Chunk, hyper::Error&gt;&gt;, hyper::Error&gt;&gt;&gt;&gt;`\n...\nremote.clone().spawn(|_| {\n               ^^^^^ the trait `std::marker::Sync` is not implemented for `futures::Future&lt;Error=hyper::Error, Item=hyper::Response&gt; + 'static`\n</code></pre>\n\n<p>Is there any way to reuse the same client from different threads or some other approach?</p>\n"}, {"tags": ["methods", "types", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1498951574, "post_id": 44866196, "comment_id": 76711818, "body": "They could also change the name of <code>WorldImpl::new</code>."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1498953523, "post_id": 44866196, "comment_id": 76712093, "body": "Not the OP, but do you have a link that might elaborate on why Rust prefers the inherent fn instead of erroring due to duplicates in cases like this?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1498954469, "post_id": 44866196, "comment_id": 76712242, "body": "@loganfsmyth: No link, but from what I recall the reasoning is that if it <i>didn&#39;t</i> do this, it would make introducing new standard traits (or adding methods to existing traits) effectively impossible.  New traits and/or methods could shadow inherent methods on people&#39;s types, breaking existing code."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1498955008, "last_edit_date": 1498955008, "creation_date": 1498951263, "answer_id": 44866196, "question_id": 44866162, "link": "https://stackoverflow.com/questions/44866162/too-many-parameters-on-perfectly-fine-function/44866196#44866196", "title": "&quot;too many parameters&quot; on perfectly fine function", "body": "<p>Your type <code>World</code> is an alias for <code>Vec&lt;Vec&lt;UnitOfSpace&gt;&gt;</code>. <code>Vec&lt;T&gt;</code> provides an inherent associated function called <a href=\"https://doc.rust-lang.org/stable/std/vec/struct.Vec.html#method.new\" rel=\"nofollow noreferrer\"><code>new</code></a> that takes no parameters. The compiler prefers selecting inherent associated functions to associated functions defined in traits, thus it selects the inherent <code>new</code> with no parameters instead of your own <code>new</code> that takes 2 parameters.</p>\n\n<p>Here are a few options to solve this:</p>\n\n<ol>\n<li><p>Invoke the trait's associated function explicitly:</p>\n\n<pre><code>let w = &lt;World as WorldImpl&gt;::new((120, 120), /* seed from UNIX_EPOCH stuff */);\n</code></pre></li>\n<li><p>Make <code>World</code> a newtype (<code>struct World(Vec&lt;Vec&lt;UnitOfSpace&gt;&gt;);</code>), which will let you define inherent associated functions (but then <code>Vec</code>'s inherent methods won't be available on <code>World</code>).</p></li>\n<li><p>Rename <code>WorldImpl::new</code> to a name that is not used by an inherent associated function on <code>Vec</code>.</p></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 1220, "user_id": 2124732, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/cf9d2998c0d9cb26334028f72185fe38?s=128&d=identicon&r=PG", "display_name": "Christopher Dumas", "link": "https://stackoverflow.com/users/2124732/christopher-dumas"}, "edited": false, "score": 0, "creation_date": 1498952633, "post_id": 44866221, "comment_id": 76711969, "body": "Oh. Ah. <i>facepalm</i>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1498951613, "creation_date": 1498951613, "answer_id": 44866221, "question_id": 44866162, "link": "https://stackoverflow.com/questions/44866162/too-many-parameters-on-perfectly-fine-function/44866221#44866221", "title": "&quot;too many parameters&quot; on perfectly fine function", "body": "<p>What you are trying to do doesn't quite make sense. You have made <code>World</code> a type alias for <code>Vec&lt;Vec&lt;UnitOfSpace&gt;&gt;</code>, so they are completely interchangeable - the implementations you add for one will apply to the other and vice versa.</p>\n\n<p>If you want to treat this type differently then wrap it in a newtype:</p>\n\n<pre><code>struct World(Vec&lt;Vec&lt;UnitOfSpace&gt;&gt;);\n</code></pre>\n\n<p>This is now a distinct type from <code>Vec&lt;Vec&lt;UnitOfSpace&gt;&gt;</code>, but with zero runtime overhead.</p>\n\n<p>Your actual error is because you have added a method called <code>new</code> to <code>World</code> as part of its implementation of <code>WorldImpl</code>, but <code>World</code> is a <code>Vec</code> which already has a <code>new</code> method (with zero args!).</p>\n"}], "owner": {"reputation": 1220, "user_id": 2124732, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/cf9d2998c0d9cb26334028f72185fe38?s=128&d=identicon&r=PG", "display_name": "Christopher Dumas", "link": "https://stackoverflow.com/users/2124732/christopher-dumas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 44866221, "answer_count": 2, "score": -1, "last_activity_date": 1499107571, "creation_date": 1498950816, "last_edit_date": 1499107571, "question_id": 44866162, "link": "https://stackoverflow.com/questions/44866162/too-many-parameters-on-perfectly-fine-function", "title": "&quot;too many parameters&quot; on perfectly fine function", "body": "<p>I have code similar to this:    </p>\n\n<pre><code>pub trait WorldImpl {\n    fn new(size: (usize, usize), seed: u32) -&gt; World;\n    fn three() -&gt; bool;\n    fn other() -&gt; bool;\n    fn non_self_methods() -&gt; bool;\n}\npub type World = Vec&lt;Vec&lt;UnitOfSpace&gt;&gt;;\n// I'm doing this because I want a SPECIAL version of Vec&lt;Vec&lt;UnitOfSpace&gt;&gt;, so I can treat it like a struct but have it be a normal type underneath.\nimpl WorldImpl for World {\n    fn new(size: (usize, usize), seed: u32) -&gt; World {\n    // Code\n        vec![/* vector stuff */]\n    }\n    // Implement other three methods\n}\nlet w = World::new((120, 120), /* seed from UNIX_EPOCH stuff */);\n</code></pre>\n\n<p>And I get this error, which is clearly wrong:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0061]: this function takes 0 parameters but 2 parameters were supplied\n  --&gt; src/main.rs:28:28\n   |\n28 |     let world = World::new((120 as usize, 120 as usize),\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 0 parameters\n</code></pre>\n\n<p>I'm thinking two things:</p>\n\n<ol>\n<li><p>This is not idiomatic and Rust was never meant to be used this way. In this case, I need to know how to really do this.</p></li>\n<li><p>It's a stupid error that I'm missing.</p></li>\n</ol>\n\n<p>When I try similar code to the above on the playground, it works just fine, no errors. I have not found any information on any errors like this anywhere else, so I'll not be surprised to find out I'm just using the language wrong. I have no particular attachment to any of my code, so please tell me what the idiom is for this! </p>\n"}, {"tags": ["rust", "private"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1498947603, "post_id": 44865842, "comment_id": 76711164, "body": "Fields in a struct are private by default."}, {"owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1498947798, "post_id": 44865842, "comment_id": 76711198, "body": "@FrancisGagn&#233; I added my code, What am I doing wrong?"}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1498948521, "post_id": 44865842, "comment_id": 76711350, "body": "You&#39;re in the same file that defined <code>PrimesGen</code> so you can do whatever you want with it since you own it."}, {"owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1498949253, "post_id": 44865842, "comment_id": 76711460, "body": "@loganfsmyth I moved it to another file, it works, Thank you very much!"}], "answers": [{"comments": [{"owner": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "edited": false, "score": 6, "creation_date": 1502818282, "post_id": 44879870, "comment_id": 78354882, "body": "So the answer is don&#39;t have large files. Cute."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 730, "user_id": 3283003, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/969f644f75512332a20f0ea1ff6e64d0?s=128&d=identicon&r=PG&f=1", "display_name": "Squirrel", "link": "https://stackoverflow.com/users/3283003/squirrel"}, "edited": false, "score": 9, "creation_date": 1503041708, "post_id": 44879870, "comment_id": 78459244, "body": "@Squirrel Not sure how I must interpret your comment. You do not <i>have</i> to use small modules (I think you wanted to write &quot;module&quot;) but it is, indeed, a very good practice to keep the modules simple."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1578854811, "post_id": 44879870, "comment_id": 105566381, "body": "I disagree. I write my projects in either <code>main.rs</code> and <code>lib.rs</code>, much simpler than dealing with modules. I also don&#39;t use functions because <code>Ctrl+C</code>, <code>Ctrl+V</code> is a lot faster and in the end project is more maintainable when I can just grep for thing I want to find in commandline after I exit <code>ed</code> without having to do so through multiple files."}, {"owner": {"reputation": 1119, "user_id": 11714860, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/e6Xo3.png?s=128&g=1", "display_name": "Sapphire_Brick", "link": "https://stackoverflow.com/users/11714860/sapphire-brick"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1611032274, "post_id": 44879870, "comment_id": 116312907, "body": "@Sahsahae Your claim that <code>ctrl+c ctrl+v</code> is faster and more maintainable than functions is bizarre. Moreover, <code>ed</code> is outdated."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 25, "last_activity_date": 1600964346, "last_edit_date": 1600964346, "creation_date": 1499066550, "answer_id": 44879870, "question_id": 44865842, "link": "https://stackoverflow.com/questions/44865842/is-it-possible-to-make-a-private-variable-in-rust/44879870#44879870", "title": "Is it possible to make a private variable in Rust?", "body": "<p>In Rust, a file is implicitly a module. When you put some code in a <code>foo.rs</code> file, if you want to use this code, you must type <code>mod foo;</code> because the name of this file is implicitly the name of the module. The file with the main is not an exception: it is one module (the base module).</p>\n<p>Now, inside a module, everything has access to everything. See this little example to be convinced:</p>\n<pre><code>struct Foo {\n    x: i32, // private\n}\n\nstruct Bar {}\n\nimpl Bar {\n    fn foo(f: Foo) {\n        let _ = f.x;\n    }\n}\n\nfn main() {\n    let f = Foo { x: 42 };\n    Bar::foo(f);\n}\n</code></pre>\n<p><code>Bar</code> can access the private members of <code>Foo</code>: in Rust, the visibility works by module, and not struct. Inside a same module you cannot do something private towards the same module.</p>\n<p>So, if you want to make the variable private in your example, put your struct and implementation inside a module:</p>\n<pre><code>mod prime {\n    pub struct PrimesGen {\n        primes_so_far: Vec&lt;i32&gt;,\n        next_candidate: i32,\n    }\n\n    impl PrimesGen {\n        pub fn new() -&gt; PrimesGen {\n            PrimesGen {\n                primes_so_far: vec![],\n                next_candidate: 2,\n            }\n        }\n    }\n}\n\nfn main() {\n    use prime::*;\n\n    let pg: PrimesGen = PrimesGen::new();\n    println!(&quot;{}&quot;, pg.next_candidate); // error: field is private\n}\n</code></pre>\n"}], "owner": {"reputation": 2836, "user_id": 3529197, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ceed214a6e603c456a8ebaacc036b407?s=128&d=identicon&r=PG&f=1", "display_name": "Neo", "link": "https://stackoverflow.com/users/3529197/neo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 8180, "favorite_count": 3, "accepted_answer_id": 44879870, "answer_count": 1, "score": 14, "last_activity_date": 1600964346, "creation_date": 1498947422, "last_edit_date": 1510309930, "question_id": 44865842, "link": "https://stackoverflow.com/questions/44865842/is-it-possible-to-make-a-private-variable-in-rust", "title": "Is it possible to make a private variable in Rust?", "body": "<p>I'm trying to generate prime numbers. The code needs to store all the generated primes (to generate the next), to have some private functions to help and one public function (<code>generate_next_prime</code>).</p>\n\n<p>In Java or C++, I would write a <code>PrimesGen</code> class, but in Rust there can't be private variables in a struct. In Python I would probably write a <code>PrimesGen</code> module, but in Rust modules can't have variables.</p>\n\n<p>This code compiles and runs:</p>\n\n<pre><code>struct PrimesGen {\n    primes_so_far: Vec&lt;i32&gt;,\n    next_candidate: i32,\n}\n\nimpl PrimesGen {\n    pub fn new() -&gt; PrimesGen {\n        PrimesGen {\n            primes_so_far: vec![],\n            next_candidate: 2,\n        }\n    }\n}\n\nfn main() {\n    let pg: PrimesGen = PrimesGen::new();\n    println!(\"{}\", pg.next_candidate);\n}\n</code></pre>\n\n<p>So what do I do?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1498947719, "post_id": 44865822, "comment_id": 76711188, "body": "You may want to point out that the signal handler is actually executed in the same OS-thread that <code>main</code> runs in. The <code>RefCell</code> successfully prevents horrible concurrency bugs here by noticing two concurrent write accesses that made it past the lock on stdout.  One can&#39;t access stdout in the signal handler, not even in Rust. If you need to really, really need to print in the signal handler, you need to queue up a message and print from another thread. But beware kids: While you hold the lock on the queue, another signal may interrupt you, deadlocking you on the queue."}, {"owner": {"reputation": 1264, "user_id": 1292666, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/7zWgm.png?s=128&g=1", "display_name": "Maximilian Schier", "link": "https://stackoverflow.com/users/1292666/maximilian-schier"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1498988862, "post_id": 44865822, "comment_id": 76717696, "body": "@user2722968 Regarding &quot;not even in Rust&quot;, can&#39;t you just use C&#39;s <code>write()</code> to print a constant string to <code>stdout</code> in a signal handler as <code>write()</code> is signal-safe? I just tried <code>let msg: &amp;str = &quot;Interrupted&quot;; write(1, msg.as_ptr(), msg.len());</code> instead of <code>println!()</code> and it seems to be working fine"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 1, "creation_date": 1498988973, "post_id": 44865822, "comment_id": 76717720, "body": "AFAICS there is nothing protecting that write from getting interrupted by another signal mid-flight, giving you &quot;InterruInterruptedted&quot;"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1498949342, "last_edit_date": 1498949342, "creation_date": 1498947115, "answer_id": 44865822, "question_id": 44865737, "link": "https://stackoverflow.com/questions/44865737/println-panics-when-called-concurrently/44865822#44865822", "title": "println! panics when called concurrently", "body": "<blockquote>\n  <p>Is the problem that <code>println!()</code> is thread-safe, but not safe on the same thread, i.e. having some thread local static dependencies that are violated when the first instance of <code>println!()</code> in <code>main</code> is interrupted and the second instance in <code>interrupted</code> is called on the same thread [...]?</p>\n</blockquote>\n\n<p>Yes, that's about right.</p>\n\n<p>The <a href=\"https://github.com/rust-lang/rust/blob/05b5797664d6aeaa0c7d0606610f336fe0b57e97/src/libstd/macros.rs#L127-L131\" rel=\"nofollow noreferrer\"><code>println!()</code></a> macro delegates to <a href=\"https://github.com/rust-lang/rust/blob/05b5797664d6aeaa0c7d0606610f336fe0b57e97/src/libstd/macros.rs#L100-L102\" rel=\"nofollow noreferrer\"><code>print!()</code></a>, which calls <a href=\"https://github.com/rust-lang/rust/blob/05b5797664d6aeaa0c7d0606610f336fe0b57e97/src/libstd/io/stdio.rs#L700-L702\" rel=\"nofollow noreferrer\"><code>std::io::_print</code></a>, which calls <code>print_to</code> by passing <code>&amp;LOCAL_STDOUT</code> as an argument. <code>LOCAL_STDOUT</code> is defined like this:</p>\n\n<pre><code>/// Stdout used by print! and println! macros\nthread_local! {\n    static LOCAL_STDOUT: RefCell&lt;Option&lt;Box&lt;Write + Send&gt;&gt;&gt; = {\n        RefCell::new(None)\n    }\n}\n</code></pre>\n\n<p>The panic you're seeing comes from the <a href=\"https://doc.rust-lang.org/stable/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a> used by <code>LOCAL_STDOUT</code>. Signal handlers run on the thread that receives the signal. Thus, when a signal is emitted, the signal handler may run while the <code>RefCell</code> is borrowed mutably. Since <code>RefCell</code> only allows one mutable borrow at a time, attempting to use <code>println!()</code> in a signal handler may panic.</p>\n"}], "owner": {"reputation": 1264, "user_id": 1292666, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/7zWgm.png?s=128&g=1", "display_name": "Maximilian Schier", "link": "https://stackoverflow.com/users/1292666/maximilian-schier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 404, "favorite_count": 0, "accepted_answer_id": 44865822, "answer_count": 1, "score": 2, "last_activity_date": 1499107491, "creation_date": 1498946213, "last_edit_date": 1499107491, "question_id": 44865737, "link": "https://stackoverflow.com/questions/44865737/println-panics-when-called-concurrently", "title": "println! panics when called concurrently", "body": "<p>I am trying to handle some *nix signals and have the following code:</p>\n\n<pre><code>// nix = \"0.8.0\"\nextern crate nix;\n\nuse nix::sys::signal::{SaFlags, SigAction, sigaction, SIGINT, SigSet};\nuse nix::sys::signal::SigHandler::Handler;\n\nextern fn interrupted(_:i32) {\n    println!(\"Interrupted\");\n}\n\nfn main() {\n    let sigact = SigAction::new(Handler(interrupted), SaFlags::empty(), SigSet::thread_get_mask().unwrap());\n\n    if let Err(_) = unsafe { sigaction(SIGINT, &amp;sigact) } {\n        println!(\"Failed to register handler\");\n        std::process::exit(1);\n    }\n\n    loop {\n        println!(\"Hello\");\n    }\n}\n</code></pre>\n\n<p>I thought <code>println!()</code> could be called concurrently, however this code always panics when I interrupt</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'already borrowed: BorrowMutError', /checkout/src/libcore/result.rs:859\nstack backtrace:\n   [...]\n  10: &lt;std::io::stdio::StdoutLock&lt;'a&gt; as std::io::Write&gt;::write\n             at /checkout/src/libcore/result.rs:761\n             at /checkout/src/libcore/cell.rs:670\n             at /checkout/src/libstd/io/stdio.rs:466\n  11: std::io::Write::write_all\n             at /checkout/src/libstd/io/mod.rs:957\n  12: &lt;std::io::Write::write_fmt::Adaptor&lt;'a, T&gt; as core::fmt::Write&gt;::write_str\n             at /checkout/src/libstd/io/mod.rs:1017\n  13: core::fmt::write\n             at /checkout/src/libcore/fmt/mod.rs:969\n  14: &lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt\n             at /checkout/src/libstd/io/mod.rs:1028\n             at /checkout/src/libstd/io/stdio.rs:460\n  15: std::io::stdio::_print\n             at /checkout/src/libstd/io/stdio.rs:680\n  16: signals::interrupted\n             at ./Rust/signals/src/main.rs:8\n   [...]\n</code></pre>\n\n<p>The documentation for <code>println!()</code> does not specifically mention any panics for concurrent execution but just that it panics when it cannot write to stdout. I am slightly confused by this panic, as calling <code>println!()</code> from multiple threads in a loop works fine.</p>\n\n<p>Is the problem that <code>println!()</code> is thread-safe, but not safe on the same thread, i.e. having some thread local static dependencies that are violated when the first instance of <code>println!()</code> in <code>main</code> is interrupted and the second instance in <code>interrupted</code> is called on the same thread, or how can I imagine this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1498943962, "post_id": 44865438, "comment_id": 76710410, "body": "Do you need to specifically modify the existing array, or is returning a new one what you want? As it is you&#39;ve got a bit of both since you&#39;re taking a mutable reference but then also returning the array."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1498943960, "creation_date": 1498943960, "answer_id": 44865498, "question_id": 44865438, "link": "https://stackoverflow.com/questions/44865438/returning-modified-array-from-for-loop-without-type-mismatch/44865498#44865498", "title": "Returning modified array from for loop without type mismatch", "body": "<p>You've defined <code>random_init</code> with a return type, yet your function doesn't return anything (strictly speaking, it returns <code>()</code>). Since you're mutating the array in-place, your function doesn't have to return anything, so you should just omit the return type.</p>\n\n<pre><code>const SIZE: usize = 4;\n\nextern crate rand;\n\nfn main() {\n    let mut life_array = [[false; SIZE]; SIZE];\n    random_init(&amp;mut life_array);\n}\n\nfn random_init(arr: &amp;mut [[bool; SIZE]; SIZE]) {\n    for i in 0..(SIZE * SIZE) {\n        arr[i / SIZE][i % SIZE] = rand::random()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2035, "user_id": 3087409, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/52e76fa33bd0857da46d55e18513af6b?s=128&d=identicon&r=PG&f=1", "display_name": "thosphor", "link": "https://stackoverflow.com/users/3087409/thosphor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 44865498, "answer_count": 1, "score": -2, "last_activity_date": 1498943960, "creation_date": 1498943450, "question_id": 44865438, "link": "https://stackoverflow.com/questions/44865438/returning-modified-array-from-for-loop-without-type-mismatch", "title": "Returning modified array from for loop without type mismatch", "body": "<p>In pseudo-code, I'm trying to do the following:</p>\n\n<pre><code>my_array = [[1,2,3,4],[5,6,7,8]]\nmy_array = array_modify_fn(my_array)\n\nfn array_modify_fn(array) {\n    for i in array {\n        array[i] = some_operation\n    }\n}\n</code></pre>\n\n<p>Having read <a href=\"https://stackoverflow.com/questions/41288979/returning-from-inside-for-loop-causes-type-mismatch\">this question</a> about the type mismatch this kind of loop/function would cause in Rust, I'm still confused as to how to actually implement what I want to implement here, but in Rust.</p>\n\n<p>Am I just going about the problem in the wrong way? (For Rust at least; this is how I would do it in Python.)</p>\n\n<p>My Rust at the moment looks like this:</p>\n\n<pre><code>let mut life_array = [[false; SIZE]; SIZE];\nlife_array = random_init(&amp;mut life_array); // in main function\n\nfn random_init(arr: &amp;mut [[bool; SIZE]; SIZE]) -&gt; [[bool; SIZE]; SIZE] {\n    for i in 0 .. (SIZE*SIZE) {\n        arr[i/SIZE][i%SIZE] = rand::random()\n    }\n}\n</code></pre>\n\n<p>and this returns the type mismatch: <code>expected type '[[bool; SIZE]; SIZE]' found type '()'</code></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1498936634, "creation_date": 1498936634, "answer_id": 44864550, "question_id": 44864442, "link": "https://stackoverflow.com/questions/44864442/passing-array-to-function-array-must-have-sized-type/44864550#44864550", "title": "Passing array to function: array must have &#39;Sized&#39; type", "body": "<blockquote>\n<pre><code>the trait 'std::marker::Sized' is not implemented for '[bool]'\n</code></pre>\n</blockquote>\n\n<p>There are essentially 2 forms of arrays in Rust:</p>\n\n<ul>\n<li><code>[T; N]</code> is an array of <code>N</code> <code>T</code>s, it is <code>Sized</code>.</li>\n<li><code>[T]</code> is an array of <code>T</code> of size only known at run-time, it is NOT <code>Sized</code>, and can only really be manipulated as a slice (<code>&amp;[T]</code>).</li>\n</ul>\n\n<p>The problem you have in your code is that in <code>[[bool]]</code>, the inner <code>[bool]</code> is therefore NOT <code>Sized</code>, and only <code>Sized</code> elements can be stored in an array.</p>\n\n<p>The simplest solution is probably to update your function signature to correctly annotate the array sizes:</p>\n\n<pre><code>fn array_func(arr: &amp;mut [[bool; WIDTH]; HEIGHT]) {\n}\n</code></pre>\n\n<p>It is possible to coerce a <code>&amp;[T; N]</code> to a <code>&amp;[T]</code>, so you could also use:</p>\n\n<pre><code>fn array_func(arr: &amp;mut [[bool; WIDTH]]) {\n}\n</code></pre>\n\n<p>However, it is NOT possible to coerce a <code>[[T; N]]</code> to <code>[&amp;[T]]</code>, and thus, not possible to coerce a <code>&amp;[[T; N]; M]</code> into a <code>&amp;[&amp;[T]; M]</code> (and thus <code>&amp;[&amp;[T]]</code>), because an array and a reference to an array have a different memory representation and thus this would be an O(M) operation (and require a new array of size <code>M</code>).</p>\n\n<blockquote>\n  <p>At least, I thought the <code>let mut my_array</code> meant I could change the values within the array but not the size of the array.</p>\n</blockquote>\n\n<p>This is correct indeed, the dimensions of the array are part of its type, and <code>mut</code> only allows changing the value not the type.</p>\n"}], "owner": {"reputation": 2035, "user_id": 3087409, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/52e76fa33bd0857da46d55e18513af6b?s=128&d=identicon&r=PG&f=1", "display_name": "thosphor", "link": "https://stackoverflow.com/users/3087409/thosphor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1887, "favorite_count": 2, "accepted_answer_id": 44864550, "answer_count": 1, "score": 2, "last_activity_date": 1499107359, "creation_date": 1498935897, "last_edit_date": 1499107359, "question_id": 44864442, "link": "https://stackoverflow.com/questions/44864442/passing-array-to-function-array-must-have-sized-type", "title": "Passing array to function: array must have &#39;Sized&#39; type", "body": "<p>I've constructed an array of arrays like this:</p>\n\n<pre><code>let mut my_array = [[false; WIDTH]; HEIGHT];\n</code></pre>\n\n<p>where <code>WIDTH</code> and <code>HEIGHT</code> are previously defined constants.</p>\n\n<p>I want to pass the whole array to a function, and change the values within the array, although not the size/length of the array.</p>\n\n<p>I've tried:</p>\n\n<pre><code>array_func(&amp;my_array);  // (in main function)\n\nfn array_func(arr: &amp;mut [[bool]]) {\n    println!(\"{:?}\", arr);\n}\n</code></pre>\n\n<p>And I get the error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>the trait 'std::marker::Sized' is not implemented for '[bool]'\nnote: `[bool]` does not have a constant size known at compile-time\nnote: slice and array elements must have `Sized` type\n</code></pre>\n\n<p>The size of my array should be known at compile time - I can't change the size of an array. At least, I thought the <code>let mut my_array</code> meant I could change the values within the array but not the size of the array.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 0, "creation_date": 1498924308, "post_id": 44862734, "comment_id": 76705065, "body": "Yes I know. How to to allow dead_code for all modules load from b_main, but not from a_main?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 2, "creation_date": 1498925229, "post_id": 44862734, "comment_id": 76705366, "body": "<code>#![allow(dead_code)]</code> should apply to all modules if you write it in the crate root (i.e. <code>b_main.rs</code>)..."}, {"owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "edited": false, "score": 0, "creation_date": 1498925765, "post_id": 44862734, "comment_id": 76705530, "body": "Thanks. It works. Is there a way to specify this in the Cargo.toml?"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1498923888, "creation_date": 1498923888, "answer_id": 44862734, "question_id": 44862642, "link": "https://stackoverflow.com/questions/44862642/how-to-pass-additional-rustflags-for-specific-binary/44862734#44862734", "title": "How to pass additional RUSTFLAGS for specific binary?", "body": "<p>You can get the same effect as <code>-A dead_code</code> by writing</p>\n\n<pre><code>#![allow(dead_code)]\n</code></pre>\n\n<p>at the start of <code>src/b_main.rs</code>.</p>\n"}], "owner": {"reputation": 833, "user_id": 3297655, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/df1bc6c2cef925a8f52d36b3290958b9?s=128&d=identicon&r=PG&f=1", "display_name": "chabapok", "link": "https://stackoverflow.com/users/3297655/chabapok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 44862734, "answer_count": 1, "score": 1, "last_activity_date": 1499348843, "creation_date": 1498923295, "last_edit_date": 1499348843, "question_id": 44862642, "link": "https://stackoverflow.com/questions/44862642/how-to-pass-additional-rustflags-for-specific-binary", "title": "How to pass additional RUSTFLAGS for specific binary?", "body": "<p>There is multiple binary build in my Cargo.toml:</p>\n\n<pre><code>[[bin]]\nname = \"a\"\npath = \"src/a_main.rs\"\n\n[[bin]]\nname = \"b\"\npath = \"src/b_main.rs\"\n</code></pre>\n\n<p>How to add <code>-A dead_code</code> build key only for binary \"b\"?</p>\n"}, {"tags": ["macros", "rust", "token"], "answers": [{"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 3, "last_activity_date": 1498919477, "creation_date": 1498919477, "answer_id": 44862060, "question_id": 44861804, "link": "https://stackoverflow.com/questions/44861804/how-to-match-mut-in-a-rust-macro/44862060#44862060", "title": "How to match &quot;mut&quot; in a Rust macro?", "body": "<p>There isn't one.  You'll need two rules: one which matches a literal <code>mut</code>, and one that doesn't.</p>\n\n<pre><code>macro_rules! do_something {\n    (mut $name:ident) =&gt; { ... };\n    ($name:ident) =&gt; { ... };\n}\n</code></pre>\n\n<p>And yes, they <em>do</em> have to be in that order, because macro arms are matched top-to-bottom.</p>\n"}], "owner": {"reputation": 31, "user_id": 7931975, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/85ac889cf64f4491b485c0096f2acdd6?s=128&d=identicon&r=PG&f=1", "display_name": "Yi Zhang", "link": "https://stackoverflow.com/users/7931975/yi-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 367, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1498933494, "creation_date": 1498917862, "last_edit_date": 1498933494, "question_id": 44861804, "link": "https://stackoverflow.com/questions/44861804/how-to-match-mut-in-a-rust-macro", "title": "How to match &quot;mut&quot; in a Rust macro?", "body": "<p>I would like to pass mutability to a macro so that I can do</p>\n\n<pre><code>mymacro![mut foo];\nmymacro![bar];\n</code></pre>\n\n<p>and the macro will see them as different matches. which specifier to use?</p>\n"}, {"tags": ["generics", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1498858390, "post_id": 44855035, "comment_id": 76690996, "body": "While this works, just beware that I can&#39;t tell you if there are better ways entirely since I&#39;m learning too :P"}, {"owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "edited": false, "score": 0, "creation_date": 1498886377, "post_id": 44855035, "comment_id": 76695415, "body": "Thanks, this combined with Shepmaster&#39;s answer cleared my understanding. One question: I did not know of the ToOwned&lt;Owned=K&gt; syntax -- when does it apply? Just for type traits? Any references will be helpful."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "reply_to_user": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "edited": false, "score": 0, "creation_date": 1498886529, "post_id": 44855035, "comment_id": 76695437, "body": "It is syntax to explicitly set the &quot;associated type&quot; of the <code>ToOwned</code> trait. If you look at <a href=\"https://doc.rust-lang.org/std/borrow/trait.ToOwned.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/borrow/trait.ToOwned.html</a> you can see that <code>Owned</code> is the type of the return value of <code>to_owned</code>."}, {"owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "edited": false, "score": 0, "creation_date": 1499055573, "post_id": 44855035, "comment_id": 76733628, "body": "Thanks for the clarification."}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 4, "last_activity_date": 1498858052, "creation_date": 1498858052, "answer_id": 44855035, "question_id": 44853999, "link": "https://stackoverflow.com/questions/44853999/how-do-i-implement-a-function-similar-to-hashmapentry-that-doesnt-consume-the/44855035#44855035", "title": "How do I implement a function similar to HashMap::entry that doesn&#39;t consume the key?", "body": "<p>I'm also a relative beginner, but from what I can see there are three issues:</p>\n\n<pre><code>MapExt&lt;&amp;'a Q, V&gt;\n</code></pre>\n\n<p>should be</p>\n\n<pre><code>MapExt&lt;Q, V&gt;\n</code></pre>\n\n<p>otherwise you're changing the type of your trait to a reference.</p>\n\n<pre><code>Q: Eq + Hash + ToOwned,\n</code></pre>\n\n<p>should explicitly be</p>\n\n<pre><code>Q: Eq + Hash + ToOwned&lt;Owned=K&gt;,\n</code></pre>\n\n<p>so that it knows what type the <code>to_owned()</code> will return.</p>\n\n<p>and</p>\n\n<pre><code>self[key]\n</code></pre>\n\n<p>should be</p>\n\n<pre><code>&amp;self[key]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "edited": false, "score": 0, "creation_date": 1498883084, "post_id": 44855056, "comment_id": 76694941, "body": "Thanks, this helped."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1498858153, "creation_date": 1498858153, "answer_id": 44855056, "question_id": 44853999, "link": "https://stackoverflow.com/questions/44853999/how-do-i-implement-a-function-similar-to-hashmapentry-that-doesnt-consume-the/44855056#44855056", "title": "How do I implement a function similar to HashMap::entry that doesn&#39;t consume the key?", "body": "<p>Your problem can be simplified to this:</p>\n\n<pre><code>trait Alpha&lt;A&gt; {\n    fn alpha(&amp;self, key: &amp;A);\n}\n\nimpl&lt;'a, A&gt; Alpha&lt;&amp;'a A&gt; for () {\n    fn alpha(&amp;self, key: &amp;'a A) {}\n}\n</code></pre>\n\n<p>Basically, you are conflating the generic types. Using a separate letter makes it more clear:</p>\n\n<pre><code>impl&lt;'a, B&gt; Alpha&lt;&amp;'a B&gt; for () {}\n</code></pre>\n\n<p>That is, the value for <code>Alpha</code>'s <code>A</code> is actually a <code>&amp;'a B</code>. Then the trait says it takes a reference to that value. A valid implementation would be:</p>\n\n<pre><code>impl&lt;'a, B&gt; Alpha&lt;&amp;'a B&gt; for () {\n    fn alpha(&amp;self, key: &amp;&amp;'a B) {}\n}\n</code></pre>\n\n<p>Once you understand that, you can follow <a href=\"https://stackoverflow.com/a/44855035/155423\">loganfsmyth's points</a> to fix the remaining issues with the implementation.</p>\n"}], "owner": {"reputation": 4097, "user_id": 567555, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/803ed99044fd6840bb95eece48b0c903?s=128&d=identicon&r=PG", "display_name": "r.v", "link": "https://stackoverflow.com/users/567555/r-v"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 44855035, "answer_count": 2, "score": 1, "last_activity_date": 1498858153, "creation_date": 1498852647, "last_edit_date": 1498857393, "question_id": 44853999, "link": "https://stackoverflow.com/questions/44853999/how-do-i-implement-a-function-similar-to-hashmapentry-that-doesnt-consume-the", "title": "How do I implement a function similar to HashMap::entry that doesn&#39;t consume the key?", "body": "<p>I am trying to implement something similar to <code>HashMap::entry</code> but allowing not consuming keys (See <a href=\"https://github.com/rust-lang/rfcs/issues/690\" rel=\"nofollow noreferrer\">this RFC</a> with a similar purpose). Here is my code, modeled after the <code>Index</code> <code>impl</code> for <code>HashMap</code> (See <a href=\"https://doc.rust-lang.org/src/core/ops.rs.html#1911-1919\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#1323-1334\" rel=\"nofollow noreferrer\">this</a>).</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::hash::{Hash, BuildHasher};\nuse std::borrow::Borrow;\n\ntrait MapExt&lt;Q: ?Sized, V&gt; {\n    fn get_or_insert(&amp;mut self, key: &amp;Q, value: V) -&gt; &amp;V;\n}\n\nimpl&lt;'a, Q: ?Sized, K, V, S&gt; MapExt&lt;&amp;'a Q, V&gt; for HashMap&lt;K, V, S&gt;\nwhere\n    K: Eq + Hash + Borrow&lt;Q&gt;,\n    Q: Eq + Hash + ToOwned,\n    S: BuildHasher,\n{\n    fn get_or_insert(&amp;mut self, key: &amp;Q, value: V) -&gt; &amp;V {\n        if !self.contains_key(key) {\n            self.insert(key.to_owned(), value);\n        }\n        self[key]\n    }\n}\n</code></pre>\n\n<p>This gives me the following error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0053]: method `get_or_insert` has an incompatible type for trait\n  --&gt; src/main.rs:15:42\n   |\n6  |         fn get_or_insert(&amp;mut self, key: &amp;Q, value: V) -&gt; &amp;V;\n   |                                          -- type in trait\n...\n15 |         fn get_or_insert(&amp;mut self, key: &amp;Q, value: V) -&gt; &amp;V {\n   |                                          ^^ expected reference, found type parameter\n   |\n   = note: expected type `fn(&amp;mut std::collections::HashMap&lt;K, V, S&gt;, &amp;&amp;'a Q, V) -&gt; &amp;V`\n              found type `fn(&amp;mut std::collections::HashMap&lt;K, V, S&gt;, &amp;Q, V) -&gt; &amp;V`\n</code></pre>\n\n<p>What is wrong here and how do I fix it?</p>\n\n<p>Another problem that I think will arise is that the compiler does not know if <code>Q::Owned</code> is <code>K</code>. If it does, how do we handle it?</p>\n"}, {"tags": ["linux", "rust", "epoll"], "answers": [{"tags": [], "owner": {"reputation": 17054, "user_id": 5636775, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GC9DT.gif?s=128&g=1", "display_name": "Ctx", "link": "https://stackoverflow.com/users/5636775/ctx"}, "is_accepted": true, "score": 1, "last_activity_date": 1498852415, "creation_date": 1498852415, "answer_id": 44853952, "question_id": 44851378, "link": "https://stackoverflow.com/questions/44851378/rust-mio-always-reports-even-on-stdin/44853952#44853952", "title": "rust mio always reports even on stdin", "body": "<p>My strong guess is, that not fd 0 (stdin) but fd 3 became readable:\nHere</p>\n\n<pre><code>epoll_ctl(6, EPOLL_CTL_ADD, 3, {EPOLLIN, {u32=0, u64=0}}) = 0\nepoll_ctl(6, EPOLL_CTL_ADD, 0, {EPOLLIN, {u32=0, u64=0}}) = 0\n</code></pre>\n\n<p>you can see, that fd 0 and 3 are <em>both</em> registered with epoll_data u32/u64 = 0.</p>\n\n<p>And here</p>\n\n<pre><code>epoll_wait(6, [{EPOLLIN, {u32=0, u64=0}}], 4, -1) = 1\n</code></pre>\n\n<p>you can only deduce, that one of the two registered file descriptors with u32/u64=0 are readable now, but you cannot distinguish between fd 0 and fd 3 here! And since reading from stdin blocks it has to be fd 3.</p>\n\n<p>The solution is to use a unique identifier for u32/u64 for each file descriptor to be properly able to identify the correct file descriptor which had activity.</p>\n"}], "owner": {"reputation": 261, "user_id": 2191774, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/61bb548b9b44cde8e43023a95f7b7551?s=128&d=identicon&r=PG", "display_name": "Ongy", "link": "https://stackoverflow.com/users/2191774/ongy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 44853952, "answer_count": 1, "score": 2, "last_activity_date": 1498852415, "creation_date": 1498841122, "question_id": 44851378, "link": "https://stackoverflow.com/questions/44851378/rust-mio-always-reports-even-on-stdin", "title": "rust mio always reports even on stdin", "body": "<p>I tried adding a few fds to mio, including the stdin.\nMy application gets stuck trying to read from stdin, after I get an event from mio, that stdin is readable.</p>\n\n<p>When I straced the application, I noticed, that mio uses the <code>epoll_wait</code> and that that syscall returns instantly.</p>\n\n<pre><code>strace -e trace=epoll_create,epoll_ctl,epoll_wait,read,epoll_create1 ./target/debug/ongybar\n\nepoll_create1(EPOLL_CLOEXEC)            = 6\nepoll_ctl(6, EPOLL_CTL_ADD, 7, {EPOLLIN|EPOLLET, {u32=4294967295, u64=18446744073709551615}}) = 0\nepoll_ctl(6, EPOLL_CTL_ADD, 3, {EPOLLIN, {u32=0, u64=0}}) = 0\nepoll_ctl(6, EPOLL_CTL_ADD, 0, {EPOLLIN, {u32=0, u64=0}}) = 0\nepoll_ctl(6, EPOLL_CTL_ADD, 4, {EPOLLIN, {u32=4, u64=4}}) = 0\nepoll_wait(6, [{EPOLLIN, {u32=4, u64=4}}], 4, -1) = 1\nread(4, \"[...], 8192) = 1004\nepoll_wait(6, [{EPOLLIN, {u32=0, u64=0}}], 4, -1) = 1\nread(0, \n</code></pre>\n\n<p>The full code I am experiencing this with is on <a href=\"https://github.com/Ongy/ongybar/tree/SO_mio\" rel=\"nofollow noreferrer\">github</a>.</p>\n"}, {"tags": ["dns", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498837000, "post_id": 44849954, "comment_id": 76680919, "body": "I think SO is not the better place to ask this. You should open an issue in github to ask for explanation and maybe for more examples in the documentation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498837255, "post_id": 44849954, "comment_id": 76681090, "body": "@Boiethios the question, on the surface, seems on topic: how to retrieve the DNS records. The OP showing that they have found some libraries and at least looked for examples and at the documentation shows that they have tried a little bit."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498838278, "post_id": 44849954, "comment_id": 76681819, "body": "@Shepmaster I said &quot;not the better place&quot;: I think this question is on topic, but IMO OP has more chances to get answer in the github project."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1498838436, "post_id": 44849954, "comment_id": 76681923, "body": "@Boiethios oh, definitely, the OP should raise an issue on trust-dns&#39; issue tracker. I don&#39;t think that dns-parser is appropriate is it&#39;s just about parsing the DNS response, no actual network requests."}, {"owner": {"reputation": 155, "user_id": 1455008, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e12862dc9b8c574b1451155060b6e4d?s=128&d=identicon&r=PG", "display_name": "bluejekyll", "link": "https://stackoverflow.com/users/1455008/bluejekyll"}, "edited": false, "score": 1, "creation_date": 1501954844, "post_id": 44849954, "comment_id": 78009543, "body": "FYI, I&#39;ve updated the docs on TRust-DNS and the TRust-DNS Resolver libraries with many more examples. <a href=\"https://docs.rs/trust-dns/0.11.0/trust_dns/\" rel=\"nofollow noreferrer\">docs.rs/trust-dns/0.11.0/trust_dns</a> and <a href=\"https://docs.rs/trust-dns-resolver/0.3.0/trust_dns_resolver/\" rel=\"nofollow noreferrer\">docs.rs/trust-dns-resolver/0.3.0/trust_dns_resolver</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1498838365, "creation_date": 1498838365, "answer_id": 44850618, "question_id": 44849954, "link": "https://stackoverflow.com/questions/44849954/how-to-retrieve-different-types-of-dns-records-in-rust/44850618#44850618", "title": "How to retrieve different types of DNS records in Rust?", "body": "<p>The <a href=\"https://crates.io/crates/domain\" rel=\"noreferrer\">domain</a> crate appears to support your usecases. It also is built on top of futures which is nice for the needed network requests.</p>\n\n<pre><code>extern crate domain;\nextern crate futures;\nextern crate tokio_core;\n\nuse std::str::FromStr;\nuse domain::bits::{DNameBuf, ParsedDName};\nuse domain::iana::{Class, Rtype};\nuse domain::rdata::{A, Aaaa, Mx, Soa};\nuse domain::resolv::Resolver;\nuse futures::Future;\nuse tokio_core::reactor::Core;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let resolv = Resolver::new(&amp;core.handle());\n\n    let name = DNameBuf::from_str(\"www.rust-lang.org.\").unwrap();\n\n    let v4 = resolv.clone().query((name.clone(), Rtype::A, Class::In));\n    let v6 = resolv.clone().query((name.clone(), Rtype::Aaaa, Class::In));\n    let mx = resolv.clone().query((name.clone(), Rtype::Mx, Class::In));\n    let soa = resolv.query((name, Rtype::Soa, Class::In));\n\n    let addrs = v4.join4(v6, mx, soa);\n\n    let (v4, v6, mx, soa) = core.run(addrs).unwrap();\n\n    println!(\"-- A --\");\n\n    for record in v4.answer().unwrap().limit_to::&lt;A&gt;() {\n        println!(\"{}\", record.unwrap());\n    }\n\n    println!(\"-- AAAA --\");\n\n    for record in v6.answer().unwrap().limit_to::&lt;Aaaa&gt;() {\n        println!(\"{}\", record.unwrap());\n    }\n\n    println!(\"-- MX --\");\n\n    for record in mx.answer().unwrap().limit_to::&lt;Mx&lt;ParsedDName&gt;&gt;() {\n        println!(\"{}\", record.unwrap());\n    }\n\n    println!(\"-- SOA --\");\n\n    for record in soa.answer().unwrap().limit_to::&lt;Soa&lt;ParsedDName&gt;&gt;() {\n        println!(\"{}\", record.unwrap());\n    }\n}\n</code></pre>\n\n<p>I've never seen this crate before today, so I don't know that I'm using it correctly or efficiently, but it does seem to work.</p>\n"}], "owner": {"reputation": 2795, "user_id": 7978068, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/374ccc08f4ce2a4b5f59a0551a5eadee?s=128&d=identicon&r=PG&f=1", "display_name": "Jodimoro", "link": "https://stackoverflow.com/users/7978068/jodimoro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 793, "favorite_count": 0, "accepted_answer_id": 44850618, "answer_count": 1, "score": 3, "last_activity_date": 1498838365, "creation_date": 1498836301, "last_edit_date": 1498836553, "question_id": 44849954, "link": "https://stackoverflow.com/questions/44849954/how-to-retrieve-different-types-of-dns-records-in-rust", "title": "How to retrieve different types of DNS records in Rust?", "body": "<p>I need to send a DNS request to check the A, AAAA, MX and SOA records of a domain.</p>\n\n<p>There're 2 popular DNS libraries: <a href=\"https://crates.io/crates/trust-dns\" rel=\"nofollow noreferrer\">trust-dns</a> and <a href=\"https://crates.io/crates/dns-parser\" rel=\"nofollow noreferrer\">dns-parser</a>. Neither of them has an example. trust-dns doesn't support what I need to do and dns-parser's documentation doesn't help.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 165, "user_id": 8237525, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-5Z568aEI5jM/AAAAAAAAAAI/AAAAAAAAABQ/aDP2diK8FNA/photo.jpg?sz=128", "display_name": "Daniel O", "link": "https://stackoverflow.com/users/8237525/daniel-o"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1498829160, "post_id": 44847574, "comment_id": 76675596, "body": "@ljedrz It is not the same, becuase the issue from that question can be solved with a vector. In my case this is not possible, &quot;thanks&quot; to the TcpLibary"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1498829795, "post_id": 44847574, "comment_id": 76676074, "body": "You can use a vector. You can use anything that can be dereferenced as a slice."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1498830883, "post_id": 44847574, "comment_id": 76676829, "body": "@DanielO: It is actually the same, because any contiguously allocated array (whether its size is statically known, it comes from a <code>Box&lt;[T]&gt;</code> or it comes from a <code>Vec&lt;T&gt;</code> or whatever) can be used by slice <code>&amp;[T]</code> and <code>&amp;mut [T]</code>. Of course, as a newcomer you wouldn&#39;t know that immediately (not sure it&#39;s in the book), so don&#39;t worry about the question being closed, it&#39;s actually useful to have multiple &quot;entry&quot; points for such questions, it makes searching easier."}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 6, "last_activity_date": 1498830266, "creation_date": 1498830266, "answer_id": 44848006, "question_id": 44847574, "link": "https://stackoverflow.com/questions/44847574/create-empty-array-with-a-length-from-a-variable/44848006#44848006", "title": "Create empty array with a length from a variable", "body": "<p>Use a <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"noreferrer\">Vec</a> with <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.with_capacity\" rel=\"noreferrer\">with_capacity()</a>:</p>\n\n<pre><code>use std::net::TcpStream;\n\nfn main() {\n    use std::io::Read;\n\n    let mut stream = TcpStream::connect(\"127.0.0.1:34254\").unwrap();\n    let mut v = Vec::with_capacity(128);\n\n    let _ = stream.read(&amp;mut v);\n}\n</code></pre>\n\n<p>You confound array and slice. There are different in Rust: a slice is a view on the memory, previously set with an array, a Vec or whatever.</p>\n"}], "owner": {"reputation": 165, "user_id": 8237525, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-5Z568aEI5jM/AAAAAAAAAAI/AAAAAAAAABQ/aDP2diK8FNA/photo.jpg?sz=128", "display_name": "Daniel O", "link": "https://stackoverflow.com/users/8237525/daniel-o"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10102, "favorite_count": 0, "closed_date": 1498830747, "accepted_answer_id": 44848006, "answer_count": 1, "score": 11, "last_activity_date": 1498835662, "creation_date": 1498828960, "last_edit_date": 1498835662, "question_id": 44847574, "link": "https://stackoverflow.com/questions/44847574/create-empty-array-with-a-length-from-a-variable", "closed_reason": "Duplicate", "title": "Create empty array with a length from a variable", "body": "<p>I want to read a custom amount of bytes from a <code>TcpStream</code>, but I cannot initialize a new empty array buffer where I can define the length with a variable. It is not possible to use a vector because the <code>TcpStream</code> read function requires an array.</p>\n\n<pre><code>let mut buffer = [0; 1024]; // The 1024 should be a variable\n</code></pre>\n\n<p>When I replace the <code>1024</code> with a variable:</p>\n\n<pre><code>let length = 2000;\nlet mut buffer = [0; length];\n</code></pre>\n\n<p>I get the message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0435]: attempt to use a non-constant value in a constant\n--&gt; src/network/mod.rs:26:30\n|\n26 |         let mut buffer = [0; bytes];\n|                              ^^^^^ non-constant used with constant\n</code></pre>\n\n<p>Why can't I do that?</p>\n"}, {"tags": ["rust", "serde", "serde-json"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498778549, "post_id": 44836327, "comment_id": 76653367, "body": "I&#39;m trying to understand serde since one year ago..."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1498782931, "post_id": 44836327, "comment_id": 76654506, "body": "I&#39;m not sure this question is a great fit for SO. You&#39;ve got a working solution and you&#39;re asking for open ended advice. I&#39;d say that will attract the sorts of responses (if any?) that SO tries to avoid. This might be a better fit for <a href=\"http://codereview.stackexchange.com\">CodeReview</a>?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498782961, "post_id": 44836327, "comment_id": 76654514, "body": "If you are just asking for a review, you should probably send this to <a href=\"https://codereview.stackexchange.com/\">Code Review</a> instead. Your approach seems to work, so there is no concrete problem that we can answer to."}, {"owner": {"reputation": 171, "user_id": 1992266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da7ebcce1de2134cc5c603f8da08624a?s=128&d=identicon&r=PG", "display_name": "user1992266", "link": "https://stackoverflow.com/users/1992266/user1992266"}, "edited": false, "score": 0, "creation_date": 1498783881, "post_id": 44836327, "comment_id": 76654703, "body": "Thank you for the suggestions. My understanding of the code is improving, so I may be able to reformulate the question into something more directly answerable."}], "answers": [{"comments": [{"owner": {"reputation": 196, "user_id": 1593196, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/caa60e721828c54ee9a6b2f08749a995?s=128&d=identicon&r=PG", "display_name": "senden9", "link": "https://stackoverflow.com/users/1593196/senden9"}, "edited": false, "score": 2, "creation_date": 1519488953, "post_id": 44838523, "comment_id": 84935606, "body": "The link to your playground doesn&#39;t work:  thread &#39;main&#39; panicked at &#39;called <code>Result::unwrap()</code> on an <code>Err</code> value: ErrorImpl { code: Message(&quot;invalid type: string \\&quot;3.141\\&quot;, expected a string representation of a f64&quot;), line: 1, column: 8 }&#39;, /checkout/src/libcore/result.rs:916:5 note: Run with <code>RUST_BACKTRACE=1</code> for a backtrace."}, {"owner": {"reputation": 1825, "user_id": 2671214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/v464b.jpg?s=128&g=1", "display_name": "Tomasz Lewowski", "link": "https://stackoverflow.com/users/2671214/tomasz-lewowski"}, "edited": false, "score": 0, "creation_date": 1609889242, "post_id": 44838523, "comment_id": 115962101, "body": "There is one minor bug in the code: <code>string_as_f64</code> should actually call <code>deserializer.deserialize_str(F64Visitor)</code>, not <code>deserializer.deserialize_f64(F64Visitor)</code>"}], "tags": [], "owner": {"reputation": 171, "user_id": 1992266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da7ebcce1de2134cc5c603f8da08624a?s=128&d=identicon&r=PG", "display_name": "user1992266", "link": "https://stackoverflow.com/users/1992266/user1992266"}, "is_accepted": false, "score": 9, "last_activity_date": 1506913112, "last_edit_date": 1506913112, "creation_date": 1498796267, "answer_id": 44838523, "question_id": 44836327, "link": "https://stackoverflow.com/questions/44836327/is-there-is-a-simpler-way-to-convert-a-type-upon-deserialization/44838523#44838523", "title": "Is there is a simpler way to convert a type upon deserialization?", "body": "<p>Using <code>coercible</code> worked kind-of by accident. With it, the input <code>\"3.141\"</code> was stripped of its <code>\"\"</code>s, so I had <code>3.141</code> being fed into <code>serde_json::from_str(&amp;j)</code>, which appropriately returned a float. This accidental solution broke easily and confusingly when, e.g., the input JSON contained unexpected values.</p>\n\n<p>I read the Serde docs (a great learning exercise) and came up with the appropriate way to convert a string to a <code>f64</code> upon deserialization of JSON (<a href=\"https://play.integer32.com/?gist=820b7b072b0c8316aefd963a2c0708c0&amp;version=stable\" rel=\"noreferrer\">working playground here</a>):</p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate serde_json;\n\nuse std::fmt;\nuse serde_json::Error;\nuse serde::de::{self, Deserializer, Unexpected, Visitor};\n\n#[derive(Serialize, Deserialize)]\nstruct Example {\n    #[serde(deserialize_with = \"string_as_f64\")]\n    first: f64,\n    second: f64,\n}\n\nfn string_as_f64&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;f64, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    deserializer.deserialize_f64(F64Visitor)\n}\n\nstruct F64Visitor;\nimpl&lt;'de&gt; Visitor&lt;'de&gt; for F64Visitor {\n    type Value = f64;\n    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        formatter.write_str(\"a string representation of a f64\")\n    }\n    fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;f64, E&gt;\n    where\n        E: de::Error,\n    {\n        value.parse::&lt;f64&gt;().map_err(|_err| {\n            E::invalid_value(Unexpected::Str(value), &amp;\"a string representation of a f64\")\n        })\n    }\n}\n\nfn typed_example() -&gt; Result&lt;(), Error&gt; {\n    let data = r#\"[\"3.141\",1.618]\"#;\n    let e: Example = serde_json::from_str(data)?;\n    println!(\"{} {}\", e.first * 2.0, e.second * 2.0);\n    Ok(())\n}\n\nfn main() {\n    typed_example().unwrap();\n}\n</code></pre>\n\n<p>Kudos to the Serde devs, because although the <a href=\"https://serde.rs/\" rel=\"noreferrer\">Serde documentation</a> seemed totally obtuse to my eyes, it actually proved to be very helpful and comprehensible. I just had to start from the top and read through slowly.</p>\n"}], "owner": {"reputation": 171, "user_id": 1992266, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da7ebcce1de2134cc5c603f8da08624a?s=128&d=identicon&r=PG", "display_name": "user1992266", "link": "https://stackoverflow.com/users/1992266/user1992266"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1650, "favorite_count": 2, "answer_count": 1, "score": 8, "last_activity_date": 1506913112, "creation_date": 1498777922, "last_edit_date": 1498796419, "question_id": 44836327, "link": "https://stackoverflow.com/questions/44836327/is-there-is-a-simpler-way-to-convert-a-type-upon-deserialization", "title": "Is there is a simpler way to convert a type upon deserialization?", "body": "<p>Using <a href=\"https://github.com/serde-rs/json\" rel=\"noreferrer\">serde_json</a>, I have JSON objects with <code>String</code>s that I need to convert to floats. I've stumbled upon a custom deserializer solution, but it seems like a hack.  <a href=\"https://play.integer32.com/?gist=e7fc24feca0d74de3b0a378812fb24a1&amp;version=stable\" rel=\"noreferrer\">Here is a working playground example of the code below.</a></p>\n\n<pre><code>#[macro_use]\nextern crate serde_derive;\nextern crate serde;\nextern crate serde_json;\n\nuse serde_json::Error;\nuse serde::de::{Deserialize, DeserializeOwned, Deserializer};\n\n#[derive(Serialize, Deserialize)]\nstruct Example {\n    #[serde(deserialize_with = \"coercible\")]\n    first: f64,\n    second: f64,\n}\n\nfn coercible&lt;'de, T, D&gt;(deserializer: D) -&gt; Result&lt;T, D::Error&gt;\nwhere\n    T: DeserializeOwned,\n    D: Deserializer&lt;'de&gt;,\n{\n    use serde::de::Error;\n    let j = String::deserialize(deserializer)?;\n    serde_json::from_str(&amp;j).map_err(Error::custom)\n}\n\nfn typed_example() -&gt; Result&lt;(), Error&gt; {\n    let data = r#\"[\"3.141\",1.618]\"#;\n    let e: Example = serde_json::from_str(data)?;\n    println!(\"{} {}\", e.first * 2.0, e.second * 2.0);\n    Ok(())\n}\n\nfn main() {\n    typed_example().unwrap();\n}\n</code></pre>\n\n<p>The above code compiles and runs as you would expect, outputting two floats.</p>\n\n<p>I'm trying to learn how the deserializer solution works, but I'd like to know if I'm headed in the right direction or if there is a better way to do this.</p>\n"}, {"tags": ["loops", "data-structures", "rust", "graph-algorithm", "borrow-checker"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1498774646, "post_id": 44835712, "comment_id": 76652220, "body": "As mentioned by Stargateur, consider making your code reproducible. If you can make it throw the same compilation error in a <a href=\"http://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a> and add a link to it, the better. Also note that the error you have mentions a binding named <code>bndry</code>, now <code>boundary</code>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 5, "creation_date": 1498775333, "post_id": 44835712, "comment_id": 76652425, "body": "In any programming language, you will get unexpected results if you try to modify a structure at the same time as iterating over it."}, {"owner": {"reputation": 56858, "user_id": 131930, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/91536fe27d32713b8a154a0bf42f6748?s=128&d=identicon&r=PG", "display_name": "Jeremy Friesner", "link": "https://stackoverflow.com/users/131930/jeremy-friesner"}, "edited": false, "score": 2, "creation_date": 1498799580, "post_id": 44835712, "comment_id": 76658282, "body": "Peter Hall there are data structures that provide well-defined/reasonable behavior in spite of modifications during an iteration; arrays would be a trivial example.  It&#39;s also possible to provide predictable behavior for more elaborate data structures as well, e.g. if you&#39;re willing to have the iterator objects register themselves with the data structure, so that it can update their state as necessary whenever any changes are made to the structure during an iteration."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 56858, "user_id": 131930, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/91536fe27d32713b8a154a0bf42f6748?s=128&d=identicon&r=PG", "display_name": "Jeremy Friesner", "link": "https://stackoverflow.com/users/131930/jeremy-friesner"}, "edited": false, "score": 5, "creation_date": 1498830544, "post_id": 44835712, "comment_id": 76676620, "body": "@JeremyFriesner Array iterators are not robust against shortening, reallocating, or even just reordering the underlying array. It&#39;s possible to provide a well-defined and reasonable <i>interface</i> to an array that allows in-place mutation during iteration, but it&#39;s far from trivial."}], "answers": [{"tags": [], "owner": {"reputation": 65, "user_id": 5005318, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be383d9fdb1fddc84875581adfb02c10?s=128&d=identicon&r=PG&f=1", "display_name": "Etherian", "link": "https://stackoverflow.com/users/5005318/etherian"}, "is_accepted": true, "score": 0, "last_activity_date": 1503608081, "creation_date": 1503608081, "answer_id": 45870724, "question_id": 44835712, "link": "https://stackoverflow.com/questions/44835712/how-do-i-mutate-a-structure-i-am-looping-over/45870724#45870724", "title": "How do I mutate a structure I am looping over?", "body": "<p>I found a solution to my issue, and it's somewhat generalizable, which is what I was hoping for. The problem was that an implicit reference created in the <code>while let</code> statement was living to the end of the loop even though it was only needed on that one line. The borrow begins at <code>.iter()</code> and is no longer needed once the referenced value is <code>clone</code>d at the end of the expression.</p>\n\n<pre><code>while let Some( (currid, _) ) = boundary.iter().max_by_key(|x| x.1).clone() {\n    //                                  ^---where borrow begins    ^---where borrow could end\n\n    // Move the node from `boundary` to `finished`\n    let val = boundary.remove(&amp;currid).unwrap();\n    finished.insert(currid.clone(), val);\n\n    ...\n\n} // &lt;--- where borrow does end\n</code></pre>\n\n<p>The trick was moving the binding of <code>currid</code> into the loop. When the value is borrowed in the <code>while let</code> statement, the borrow checker apparently thinks the borrow needs to last throughout the loop. If, instead, the implicit borrow is made in a regular <code>let</code> binding, the borrow checker is smart enough to realize the borrow can be safely discarded at the end of the line.</p>\n\n<pre><code>while !boundary.is_empty() {\n    let currid = boundary.iter().max_by_key(|x| x.1).unwrap().0.clone();\n    //                   ^---where borrow begins               ^---where borrow ends\n    // Move the node from `boundary` to `finished`\n    let val = boundary.remove(&amp;currid).unwrap();\n    finished.insert(currid.clone(), val);\n\n    ...\n\n}\n</code></pre>\n\n<p>I guess the take away here is that if you need to mutate a structure in a loop that depends on it, put any borrows of the structure inside the loop and keep those borrows as short as possible \u2013 for example, by using <code>clone</code>.</p>\n\n<p>This might be one of the situations eventually mitigated by the proposed <a href=\"https://github.com/nikomatsakis/nll-rfc/blob/master/0000-nonlexical-lifetimes.md\" rel=\"nofollow noreferrer\">non-lexical lifetimes</a>.</p>\n"}], "owner": {"reputation": 65, "user_id": 5005318, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be383d9fdb1fddc84875581adfb02c10?s=128&d=identicon&r=PG&f=1", "display_name": "Etherian", "link": "https://stackoverflow.com/users/5005318/etherian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 0, "accepted_answer_id": 45870724, "answer_count": 1, "score": 3, "last_activity_date": 1503608081, "creation_date": 1498773906, "last_edit_date": 1499032688, "question_id": 44835712, "link": "https://stackoverflow.com/questions/44835712/how-do-i-mutate-a-structure-i-am-looping-over", "title": "How do I mutate a structure I am looping over?", "body": "<p>This question is motivated by <a href=\"https://www.codingame.com/training/hard/skynet-revolution-episode-2\" rel=\"nofollow noreferrer\">this CodinGame puzzle</a>.</p>\n\n<p>I am implementing a basic pathfinding algorithm using Dijkstra's method. It uses a <code>boundary</code> HashMap and a <code>finished</code> HashMap to hold pathfinding-related node info. In a particular loop, I find the highest-valued node in <code>boundary</code>, remove the node, add the node to <code>finished</code>, and add/update the node's neighbors' info in <code>boundary</code>.</p>\n\n<p>Attempting to mutate <code>boundary</code> while looping over it is making Rust's borrow checker queasy, but the logic of the loop seems sound to me. How do I rewrite it so that the compiler shares my confidence? (Or fix the errors I'm missing, if that's the issue.)</p>\n\n<h3>Code:</h3>\n\n<p><a href=\"https://play.rust-lang.org/?gist=b71e12ebfd5f2c2ef40b9efbc83803ee&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">On Rust Playground here</a></p>\n\n<pre><code>use std::io;\nuse std::collections::{HashSet, HashMap};\nuse std::cmp::Ordering;\nuse std::cell::RefCell;\n\nstruct NodeInfo {\n    nbrs: HashSet&lt;i32&gt;,\n    gwlinks: i32,\n}\n\n#[derive(PartialEq,PartialOrd)]\nstruct PFInfo {\n    avg: f32,\n    cum: i32,\n    dist: i32,\n    prev: Option&lt;i32&gt;,\n}\n\nimpl Eq for PFInfo {}\n\nimpl Ord for PFInfo {\n    fn cmp(&amp;self, other: &amp;PFInfo) -&gt; Ordering {\n       match self.partial_cmp(other) {\n           Some(ord) =&gt; ord,\n           None =&gt; Ordering::Equal\n       }\n    }\n}\n\ntype Graph = HashMap&lt;i32, RefCell&lt;NodeInfo&gt;&gt;;\ntype PFGraph = HashMap&lt;i32, PFInfo&gt;;\n\n// Find the path that passes the most gateway links per distance traveled,\n// starting at a given node. This is meant to simulate the behavior of an\n// \"agent\" which traverses the graph in the puzzle mentioned above.\nfn generate_path(si: &amp;i32, graph: &amp;Graph) -&gt; Vec&lt;i32&gt; {\n    let n = graph.len();\n    let mut boundary = PFGraph::with_capacity(n);\n    let mut finished = PFGraph::with_capacity(n);\n\n    boundary.insert( si.clone(),\n                     PFInfo {\n                         avg: 0.,\n                         cum: graph.get(&amp;si).unwrap().borrow().gwlinks,\n                         dist: 0,\n                         prev: None } );\n\n    // Keep grabbing the key corresponding the highest value until `boundary` is\n    // empty\n    while let Some( (currid, _) ) = boundary.iter().max_by_key(|x| x.1) {\n\n        // Move the node from `boundary` to `finished`\n        let val = boundary.remove(&amp;currid).unwrap();\n        finished.insert(currid.clone(), val);\n\n        // Add or update all adjacent nodes that are not in `finished`\n        for nbrid in graph.get(&amp;currid).unwrap()\n                          .borrow()\n                          .nbrs.iter()\n                          .filter(|x| !finished.contains_key(x)) {\n            let currval = finished.get(&amp;currid).unwrap();\n            let prev = Some(currid.clone());\n            let dist = currval.dist + 1;\n            let cum = currval.cum + graph.get(nbrid).unwrap().borrow().gwlinks;\n            let avg = cum as f32 / dist as f32;\n            boundary.insert(\n                nbrid.clone(),\n                PFInfo {\n                    avg: avg,\n                    cum: cum,\n                    dist: dist,\n                    prev: prev,\n                }\n            );\n        }\n    }\n\n    let mut path = Vec::new();\n    let mut currid = finished.iter().max_by_key(|x| x.1).unwrap().0.clone();\n    path.push(currid.clone());\n    while let Some(previd) = finished.get(&amp;currid).unwrap().prev {\n        path.push(previd.clone());\n        currid = previd.clone();\n    }\n    path.reverse();\n\n    path\n}\n\n\n\nmacro_rules! parse_input {\n    ($x:expr, $t:ident) =&gt; ($x.trim().parse::&lt;$t&gt;().unwrap())\n}\n\n#[test]\nfn test_generate_path() {\n    let mut inputs = \"8 13 2\n6 2\n7 3\n6 3\n5 3\n3 4\n7 1\n2 0\n0 1\n0 3\n1 3\n2 3\n7 4\n6 5\n4\n5\".lines();\n\n    let header = inputs.next().unwrap().split_whitespace().collect::&lt;Vec&lt;_&gt;&gt;();\n    let n = parse_input!(header[0], i32); // the total number of nodes in the level, including the gateways\n    let l = parse_input!(header[1], i32); // the number of links\n    let e = parse_input!(header[2], i32); // the number of exit gateways\n\n    let mut graph = Graph::with_capacity(n as usize);\n    for node in 0..n {\n        graph.insert(node, RefCell::new(NodeInfo{ nbrs: HashSet::new(), gwlinks: 0 }));\n    }\n    let graph = graph;\n\n    for _ in 0..l as usize {\n        let link = inputs.next().unwrap();\n        let nodes = link.split(\" \").collect::&lt;Vec&lt;_&gt;&gt;();\n        let n1 = parse_input!(nodes[0], i32); // N1 and N2 defines a link between these nodes\n        let n2 = parse_input!(nodes[1], i32);\n\n        graph.get(&amp;n1).unwrap().borrow_mut().nbrs.insert(n2);\n        graph.get(&amp;n2).unwrap().borrow_mut().nbrs.insert(n1);\n    }\n\n    let mut gateways = HashSet::new();\n    for _ in 0..e as usize {\n        let ei = parse_input!(inputs.next().unwrap(), i32); // the index of a gateway node\n        gateways.insert(ei);\n    }\n    let gateways = gateways;\n\n    for gwid in &amp;gateways {\n        for gwnbr in &amp;graph.get(gwid).unwrap().borrow().nbrs {\n            (&amp;graph).get(&amp;gwnbr).unwrap().borrow_mut().gwlinks += 1;\n        }\n    }\n\n    assert_eq!(generate_path(&amp;0, &amp;graph), vec![0, 3]);\n}\n</code></pre>\n\n<h3>Errors:</h3>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.18.0 (03fc9d622 2017-06-06)\nerror[E0502]: cannot borrow `boundary` as mutable because it is also borrowed as immutable\n  --&gt; &lt;anon&gt;:53:19\n   |\n50 |     while let Some( (currid, _) ) = boundary.iter().max_by_key(|x| x.1) {\n   |                                     -------- immutable borrow occurs here\n...\n53 |         let val = boundary.remove(&amp;currid).unwrap();\n   |                   ^^^^^^^^ mutable borrow occurs here\n...\n76 |     }\n   |     - immutable borrow ends here\n\nerror[E0502]: cannot borrow `boundary` as mutable because it is also borrowed as immutable\n  --&gt; &lt;anon&gt;:66:13\n   |\n50 |     while let Some( (currid, _) ) = boundary.iter().max_by_key(|x| x.1) {\n   |                                     -------- immutable borrow occurs here\n...\n66 |             boundary.insert(\n   |             ^^^^^^^^ mutable borrow occurs here\n...\n76 |     }\n   |     - immutable borrow ends here\n\nerror: aborting due to 2 previous errors\n</code></pre>\n"}, {"tags": ["casting", "rust", "x11", "xcb"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1498768375, "post_id": 44833160, "comment_id": 76649516, "body": "If this is a non-ascii byte string, then this is not the right way to convert it to String, since it is assuming each byte is a character. Instead you should use <code>String::from_utf8</code>."}, {"owner": {"reputation": 435, "user_id": 4314528, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/c6fc8b2a85f97a147671e98dc1bac0ad?s=128&d=identicon&r=PG&f=1", "display_name": "erp", "link": "https://stackoverflow.com/users/4314528/erp"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1498770066, "post_id": 44833160, "comment_id": 76650363, "body": "oh cool, that takes care of the unicode issue. the other issue is the incomplete strings, which i&#39;m pretty sure is because I&#39;m supposed to re-query the cookie somehow. checking <code>value.bytes_after()</code> shows that there are indeed bytes I&#39;m supposed to accept but it&#39;s unclear how I&#39;m supposed to do that. re-calling <code>cookie.get_reply()</code> just hangs."}, {"owner": {"reputation": 435, "user_id": 4314528, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/c6fc8b2a85f97a147671e98dc1bac0ad?s=128&d=identicon&r=PG&f=1", "display_name": "erp", "link": "https://stackoverflow.com/users/4314528/erp"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1498771256, "post_id": 44833160, "comment_id": 76650847, "body": "I figured it out, <code>xcb::xproto::get_property()</code> has <code>long_offset</code> and <code>long_length</code> which can be configured to what is needed."}], "answers": [{"tags": [], "owner": {"reputation": 435, "user_id": 4314528, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/c6fc8b2a85f97a147671e98dc1bac0ad?s=128&d=identicon&r=PG&f=1", "display_name": "erp", "link": "https://stackoverflow.com/users/4314528/erp"}, "is_accepted": true, "score": 0, "last_activity_date": 1499360979, "last_edit_date": 1499360979, "creation_date": 1499360887, "answer_id": 44955127, "question_id": 44833160, "link": "https://stackoverflow.com/questions/44833160/how-do-i-get-the-x-window-class-given-a-window-id-with-rust-xcb/44955127#44955127", "title": "How do I get the X window class given a window ID with rust-xcb?", "body": "<p>Here's my updated function:</p>\n\n<pre><code>fn get_class(conn: &amp;Connection, id: &amp;i32) -&gt; String {\n    let window: xproto::Window = *id as u32;\n    let long_length: u32 = 8;\n    let mut long_offset: u32 = 0;\n    let mut buf = Vec::new();\n    loop {\n        let cookie = xproto::get_property(\n            &amp;conn,\n            false,\n            window,\n            xproto::ATOM_WM_CLASS,\n            xproto::ATOM_STRING,\n            long_offset,\n            long_length,\n        );\n        match cookie.get_reply() {\n            Ok(reply) =&gt; {\n                let value: &amp;[u8] = reply.value();\n                buf.extend_from_slice(value);\n                match reply.bytes_after() {\n                    0 =&gt; break,\n                    _ =&gt; {\n                        let len = reply.value_len();\n                        long_offset += len / 4;\n                    }   \n                }\n            }   \n            Err(err) =&gt; {\n                println!(\"{:?}\", err);\n                break;\n            }   \n        }\n    }\n    let result = String::from_utf8(buf).unwrap();\n    let results: Vec&lt;&amp;str&gt; = result.split('\\0').collect();\n    results[0].to_string()\n}\n</code></pre>\n\n<p>There were three main parts to this question:</p>\n\n<ol>\n<li>I put <a href=\"https://rtbo.github.io/rust-xcb/xcb/xproto/fn.get_property.html\" rel=\"nofollow noreferrer\"><code>xproto::get_property()</code></a> in a loop so I could check <a href=\"https://rtbo.github.io/rust-xcb/src/xcb/xproto.rs.html#5115\" rel=\"nofollow noreferrer\"><code>reply.bytes_after()</code></a> and accordingly adjust <code>long_offset</code>. I think with an appropriate <code>long_length</code> there will usually only be one read, but just being safe.</li>\n<li>As @peter-hall said, converting <code>&amp;[u8] -&gt; String</code> should be done using <code>String::from_utf8</code>, which needs a <code>Vec</code>; so I <code>let mut buf = Vec::new()</code> and <code>buf.extend_from_slice</code> over the loop before creating the result string with <code>String::from_utf8(buf).unwrap()</code></li>\n<li>According to <a href=\"https://tronche.com/gui/x/icccm/sec-4.html#WM_CLASS\" rel=\"nofollow noreferrer\">this random page</a> WM_CLASS is actually two consecutive null-terminated strings, so I split the result by <code>\\0</code> and grab the first value.</li>\n</ol>\n\n<p>I might've just been looking in the wrong place, but xcb has absolutely terrible documentation..</p>\n"}], "owner": {"reputation": 435, "user_id": 4314528, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/c6fc8b2a85f97a147671e98dc1bac0ad?s=128&d=identicon&r=PG&f=1", "display_name": "erp", "link": "https://stackoverflow.com/users/4314528/erp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 480, "favorite_count": 0, "accepted_answer_id": 44955127, "answer_count": 1, "score": 1, "last_activity_date": 1499360979, "creation_date": 1498763450, "last_edit_date": 1498796837, "question_id": 44833160, "link": "https://stackoverflow.com/questions/44833160/how-do-i-get-the-x-window-class-given-a-window-id-with-rust-xcb", "title": "How do I get the X window class given a window ID with rust-xcb?", "body": "<p>I'm trying to use <a href=\"https://rtbo.github.io/rust-xcb/xcb/index.html\" rel=\"nofollow noreferrer\">rust-xcb</a> to get a window's class given a window ID.</p>\n\n\n\n<pre class=\"lang-rs prettyprint-override\"><code>fn get_class(conn: &amp;xcb::Connection, id: &amp;i32) {\n    let window: xcb::xproto::Window = *id as u32;\n    let class_prop: xcb::xproto::Atom = 67; // XCB_ATOM_WM_CLASS from xproto.h\n    let cookie = xcb::xproto::get_property(&amp;conn, false, window, class_prop, 0, 0, 2);\n    match cookie.get_reply() {\n        Ok(reply) =&gt; {\n            let x: &amp;[std::os::raw::c_void] = reply.value();\n            println!(\"reply is {:?}\", x[0]);\n        }   \n        Err(err) =&gt; println!(\"err {:?}\", err),\n    }\n}\n</code></pre>\n\n<p>The documentation is kind of sparse and hasn't been incredibly helpful, though I did find this bit about the <a href=\"http://rtbo.github.io/rust-xcb/src/xcb/xproto.rs.html#5102\" rel=\"nofollow noreferrer\"><code>GetPropertyReply</code></a> and of the <a href=\"http://rtbo.github.io/rust-xcb/xcb/ffi/xproto/struct.xcb_get_property_reply_t.html\" rel=\"nofollow noreferrer\"><code>xcb_get_property_reply_t</code></a> it wraps.</p>\n\n<p>I looked at <a href=\"https://stackoverflow.com/questions/35002526/get-window-title-with-xcb\">this answer in JavaScript</a> but I don't know what the <code>ctypes</code> equivalent in Rust is. I tried just casting the <code>&amp;[c_void]</code> as a <code>&amp;str</code> or <code>String</code>:</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code> ...\n Ok(reply) =&gt; {\n     let len = reply.value_len() as usize;\n     let buf = reply.value() as &amp;str;\n     println!(\"{}\", buf.slice_unchecked(0, len)); // this seems redundant\n }   \n ...\n</code></pre>\n\n<p>but it returns </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: non-scalar cast: `&amp;[_]` as `&amp;str`\n</code></pre>\n\n<p>I tried casting the <code>&amp;[c_void]</code> as a <code>&amp;[u8]</code> and then collecting the <code>Vec</code> into a <code>String</code>, which sort of works:</p>\n\n<pre class=\"lang-rs prettyprint-override\"><code>  ...\n  Ok(reply) =&gt; {\n      let value : &amp;[u8] = reply.value();\n      let buf : String = value.into_iter().map(|i| *i as char).collect();\n      println!(\"\\t{:?}\", buf);\n  }\n  ...\n</code></pre>\n\n<p>but I'm now getting weird results. for example , when I use <code>xprop</code> on Chrome I see \"google-chrome\" but for me it is only showing \"google-c\", and \"roxterm\" is showing up as \"roxterm\\u{0}\". I'm guessing \"\\u{0}\" is something Unicode related but I'm not sure, and I don't know why stuff is being concatenated either. Maybe I have to check the reply again?</p>\n"}, {"tags": ["rust", "idioms"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498759516, "post_id": 44831995, "comment_id": 76644720, "body": "Are you asking for an idiomatic approach that does the same thing as the example? You don&#39;t seem to provide a clear problem other than that. And by the way,  I would advise you to keep irrelevant comments out of the question in the future."}, {"owner": {"reputation": 67, "user_id": 4556519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f5e9286f62b9997e9153c43aef197acb?s=128&d=identicon&r=PG&f=1", "display_name": "Ivan Ehreshi", "link": "https://stackoverflow.com/users/4556519/ivan-ehreshi"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498761214, "post_id": 44831995, "comment_id": 76645745, "body": "I want to read one part of the array and the same time structurally modify the other part of the array.  So in any given moment 0..k part of the array remain unmodified but the k..len could be arbitrarily rebuilt(for example in a random way). I cannot give a clear real-world example. But I have an intuition that such problems may arouse. So let&#39;s be as generic as possible. And most importantly this problem without the borrow checker has a clear solution in C-like languages"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1498761487, "post_id": 44831995, "comment_id": 76645901, "body": "The problem is that you should not make it too generic without understanding its implications to the question. In particular, do you want to be able to add and remove elements from the vector? That makes the problem much more difficult. We might really be more helpful to you if you narrow it down to a specific problem."}, {"owner": {"reputation": 67, "user_id": 4556519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f5e9286f62b9997e9153c43aef197acb?s=128&d=identicon&r=PG&f=1", "display_name": "Ivan Ehreshi", "link": "https://stackoverflow.com/users/4556519/ivan-ehreshi"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498767310, "post_id": 44831995, "comment_id": 76648955, "body": "You are right that the question is unclear and isn&#39;t well thought out. @red75prime put some effort to answer the question. I think in the scope of this question it would be fair to stick just to the simple question. Thank you, answering and commenting. I&#39;ll try to came up with a more elaborate question. By the way, entirely rebuilding with removal and perhaps addition to the second part of the array is what I meant."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498769673, "post_id": 44831995, "comment_id": 76650203, "body": "I don&#39;t think this is a good idea to accept answer randomly, @red75prime had do a mistake by answer you. Unclear question should not be answer. This will be better if you <a href=\"https://stackoverflow.com/posts/44831995/edit\">edit</a> your question to something more clear because this question is not useful in SO and should be close as unclear."}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1498796172, "post_id": 44831995, "comment_id": 76657379, "body": "@Stargateur, It could be useful to remember that in rare cases you can&#39;t do better than go full C. I modified the answer accordingly."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1498770343, "post_id": 44833145, "comment_id": 76650503, "body": "This is not really idiomatic. At least the first <code>while</code> loop can be replaced by a <code>for</code> loop over a range: <a href=\"https://play.rust-lang.org/?gist=081a39fcadd677664f14a939e69f91a3&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1498789875, "post_id": 44833145, "comment_id": 76656028, "body": "@PeterHall, range is fine for this specific instance of a problem, but it requires assumption that outer loop doesn&#39;t access <code>v[i]</code>. <a href=\"https://play.rust-lang.org/?gist=3e12a336894900d1c819f0e9a2f0866e&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": true, "score": 6, "last_activity_date": 1505912238, "last_edit_date": 1505912238, "creation_date": 1498763407, "answer_id": 44833145, "question_id": 44831995, "link": "https://stackoverflow.com/questions/44831995/how-to-idiomatically-iterate-one-half-of-an-array-and-modify-the-structure-of-th/44833145#44833145", "title": "How to idiomatically iterate one half of an array and modify the structure of the other?", "body": "<p>An idiomatic solution of this generic problem will be the same for Rust and C, as there's no constraints which would allow simplification. </p>\n\n<p>We need to use indexes because vector reallocation will invalidate the references contained by the iterators. We need to compare the index against the current length of the vector on each cycle because the length could be changed. Thus an idiomatic solution will look like this:</p>\n\n<pre><code>let mut i = 0;\nwhile i &lt; v.len() {\n    let mut j = i + 1;\n    while j &lt; v.len() {\n        if f(v[i], v[j]) {\n            v.splice(j, 1);\n        } else {\n            j += 1;\n        }\n    }\n    i += 1;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=e95f911d931e1b5bbfdd312208922b23&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>While this code covers the general case, it is rarely useful. It doesn't capture specifics, which are usually inherent to the problem at hand. In turn, the compiler is unable to catch any errors at compile time. I don't advise writing something like this without considering another approaches first.</p>\n"}], "owner": {"reputation": 67, "user_id": 4556519, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f5e9286f62b9997e9153c43aef197acb?s=128&d=identicon&r=PG&f=1", "display_name": "Ivan Ehreshi", "link": "https://stackoverflow.com/users/4556519/ivan-ehreshi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 715, "favorite_count": 0, "accepted_answer_id": 44833145, "answer_count": 1, "score": 2, "last_activity_date": 1505912238, "creation_date": 1498759052, "last_edit_date": 1505912157, "question_id": 44831995, "link": "https://stackoverflow.com/questions/44831995/how-to-idiomatically-iterate-one-half-of-an-array-and-modify-the-structure-of-th", "title": "How to idiomatically iterate one half of an array and modify the structure of the other?", "body": "<p>What is the idiomatic way to iterate (read) over the first half of the vector and change the structure of the second half of the vector depending on the first? This is very abstract but some algorithms could be boiled down to this problem. I want to write this simplified C++ example in Rust:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>for (var i = 0; i &lt; vec.length; i++) {\n    for (var j = i + 1 ; j &lt; vec.length; j++) {\n        if (f(vec[i], vec[j])) {\n            vec.splice(j, 1);\n            j--;\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498731411, "post_id": 44821866, "comment_id": 76624608, "body": "Can you include the code that you used to test <code>match_several!</code>?"}, {"owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1498731985, "post_id": 44821866, "comment_id": 76625007, "body": "@E_net4 Done, I include &quot;Test code&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1498796991, "post_id": 44822422, "comment_id": 76657583, "body": "<i>you can use any token other than + or * as a separator</i>. WHAT. Mind blown."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 4, "last_activity_date": 1498731533, "creation_date": 1498731533, "answer_id": 44822422, "question_id": 44821866, "link": "https://stackoverflow.com/questions/44821866/how-do-i-match-multiple-bytes-at-arbitrary-positions/44822422#44822422", "title": "How do I match multiple bytes at arbitrary positions?", "body": "<p>Change the macro to:</p>\n\n<pre><code>macro_rules! match_several {\n    ($($ch:expr, $pos:expr),*) =&gt; {{\n        $(Some(&amp;$ch) == line.get($pos))&amp;&amp;*\n    }}\n}\n</code></pre>\n\n<p>Note that I'm using <code>&amp;&amp;</code> as the separator, and I got rid of <code>$last_ch</code> and <code>$last_pos</code>.  This works because you can use <em>any</em> token other than <code>+</code> or <code>*</code> as a separator, and <code>&amp;&amp;</code> is a single token.</p>\n"}, {"tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 3, "last_activity_date": 1498732675, "creation_date": 1498732675, "answer_id": 44822852, "question_id": 44821866, "link": "https://stackoverflow.com/questions/44821866/how-do-i-match-multiple-bytes-at-arbitrary-positions/44822852#44822852", "title": "How do I match multiple bytes at arbitrary positions?", "body": "<p>Repetitive patterns in this case could be abstracted as somewhat useful functions.</p>\n\n<pre><code>#[inline]\nfn all_match(s: &amp;[u8], pattern: &amp;[(u8, usize)]) -&gt; bool {\n    pattern.into_iter().all(|&amp;(b, p)| s.get(p) == Some(&amp;b))\n}\n\n#[inline]\nfn any_match(s: &amp;[u8], pattern: &amp;[(u8, usize)]) -&gt; bool {\n    pattern.into_iter().any(|&amp;(b, p)| s.get(p) == Some(&amp;b))\n}\n\nfn f(s: &amp;[u8]) {\n    let and_pattern = [(b'A', 5), (b'X', 16)];\n    let or_pattern = [(b'B', 17), (b'C', 18)];\n    if all_match(s, &amp;and_pattern) \n       &amp;&amp; any_match(s, &amp;or_pattern) {\n    } else if all_match(s, &amp;[(b'1', 4), (b'2', 7), (b'D', 10)]) {\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "accepted_answer_id": 44822422, "answer_count": 2, "score": 2, "last_activity_date": 1498732675, "creation_date": 1498730023, "last_edit_date": 1498731949, "question_id": 44821866, "link": "https://stackoverflow.com/questions/44821866/how-do-i-match-multiple-bytes-at-arbitrary-positions", "title": "How do I match multiple bytes at arbitrary positions?", "body": "<p>I have to match bytes in a <code>&amp;[u8]</code> and want to simplify my code.\nRight now it looks like this:</p>\n\n<pre><code>fn f(s: &amp;[u8]) {\n    if Some(&amp;b'A') == s.get(5) &amp;&amp; Some(&amp;b'X') == s.get(16) &amp;&amp;\n        (Some(&amp;b'B') == s.get(17) || Some(&amp;b'C') == s.get(18)) {\n    } else if Some(&amp;b'1') == s.get(4) &amp;&amp; Some(&amp;b'2') == s.get(7) &amp;&amp; Some(&amp;b'D') == s.get(10) {\n    }\n}\n</code></pre>\n\n<p>I know about <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a>, but it does not make this particular case simpler, although I'm using <a href=\"https://github.com/Geal/nom\" rel=\"nofollow noreferrer\">nom</a> afterwards to extract the data after the match.</p>\n\n<p>So my first attempt to simplify code is to write these macros:</p>\n\n<pre><code>macro_rules! m {\n    ($ch:expr, $pos:expr) =&gt; {{\n        Some(&amp;$ch) == line.get($pos)\n    }};\n    ($ch1:expr, $ch2:expr, $pos:expr) =&gt; {{\n        Some(&amp;$ch1) == line.get($pos) || Some(&amp;$ch2) == line.get($pos)\n    }}\n}\n</code></pre>\n\n<p>It reduces code size, and decreases the possibility of making a mistake,\nbut I want more:</p>\n\n<pre><code>macro_rules! match_several {\n    ($($ch:expr, $pos:expr),*, $last_ch:expr, $last_pos:expr) =&gt; {{\n        (Some(&amp;$ch) == line.get($pos) &amp;&amp;)* Some(&amp;$last_ch) == line.get($last_pos)\n    }}\n}\n</code></pre>\n\n<p>But the compiler gives this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> error: local ambiguity: multiple parsing options: built-in NTs expr ('last_ch') or expr ('ch').\n  --&gt; lib.rs:45:32\n   |\n45 |     if match_several!(b'P', 4, b' ', 5, b'A', 12) {\n   |        ------------------------^^^^-------------- in this macro invocation\n</code></pre>\n\n<p>Test code:</p>\n\n<pre><code>let line: &amp;'static [u8] = b\"0123P 6789ABA\";\nprintln!(\"match result {:?}\", match_several!(b'P', 4, b' ', 5, b'A', 12));\n</code></pre>\n"}]