[{"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571281641, "post_id": 58422765, "comment_id": 103190549, "body": "based reading links from @shepmaster and with a lot of trial and error, I&#39;ve fixed the compiler error; <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=208beb18e2530b97f5ccf15102790a63\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> -- would be nice to have some more reference to what exactly this syntax is mean to convey"}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571406051, "post_id": 58422765, "comment_id": 103241790, "body": "I removed the other variation I tried which @shepmaster says is a different issue -- leaving here for reference: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=00449a690ba597eccc405ef1f8a951a8\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>)"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1571275025, "post_id": 58423299, "comment_id": 103189286, "body": "@Ultrasaurus there are more <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1571276978, "post_id": 58423299, "comment_id": 103189661, "body": "I still don&#39;t understand what is is exactly about the example that means that an anonymous lifetime won&#39;t work. For other examples where the struct has a named lifetime don&#39;t need a named lifetime for impl."}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1571279205, "post_id": 58423299, "comment_id": 103190108, "body": "The isolated example that is provided in this answer shows a different error.  I attempted to apply the fix and still see the same error: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c7b05b72fcaf32e3dde9b761661ce556\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1571279301, "post_id": 58423299, "comment_id": 103190121, "body": "You did not apply the same fix. The function should not have any generic lifetimes."}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1571280037, "post_id": 58423299, "comment_id": 103190257, "body": "I&#39;ve updated the question with a smaller example that also adds more explicitly named lifetimes in all of the places where I know to add them.  The information in this answer was helpful, but I&#39;m still not seeing where there remains a generic lifetime and how to resolve the error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1571280308, "post_id": 58423299, "comment_id": 103190301, "body": "@Ultrasaurus then it\u2019s a duplicate of the question I\u2019ve linked in this answer and another one I\u2019ll have to find tomorrow and the effort of this answer has been invalidated. You are trying to store something with lifetime X in a struct that holds lifetime Y. There\u2019s no relation between those two, so the compiler fails. Additionally, you are saying that the lifetime of the thing you are storing has to be exactly the same as the thing you store it in, which is almost never possible."}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571280999, "post_id": 58423299, "comment_id": 103190427, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/200991/discussion-between-ultrasaurus-and-shepmaster\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1571279425, "last_edit_date": 1571279425, "creation_date": 1571272211, "answer_id": 58423299, "question_id": 58422765, "link": "https://stackoverflow.com/questions/58422765/how-to-infer-an-appropriate-lifetime-for-an-implementation-using-lifetimes-for-s/58423299#58423299", "title": "How to infer an appropriate lifetime for an implementation using lifetimes for structs and impl?", "body": "<blockquote>\n  <p>How do I resolve this error?</p>\n</blockquote>\n\n<p>Remove the generic lifetime from the function, provide a name for the lifetime on the <code>impl</code> block instead of using the anonymous lifetime, then use the named lifetime in the function arguments. Remove the lifetime from <code>&amp;self</code>:</p>\n\n<pre><code>impl&lt;'a&gt; Game&lt;'a&gt; {\n    fn match_str(&amp;mut self, label: &amp;'a str, match_literal: &amp;'a str, f: fn(&amp;str) -&gt; Option&lt;&amp;str&gt;) {\n        self.handlers.push(LineHandlerInfo {\n            label,\n            match_literal,\n            f,\n        });\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31067031/155423\">Cannot borrow as mutable more than once at a time in one code - but can in another very similar</a></li>\n</ul>\n\n<blockquote>\n  <p>What exactly am I doing when I use the \"anonymous lifetime\" in impl?</p>\n</blockquote>\n\n<p>You are effectively stating \"I know there's a lifetime here, but I don't care about it\". However, that's not true for your case; you do care about the lifetime that parameterizes the type because that's what your variables need to match.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/ownership-and-lifetimes/the-anonymous-lifetime.html\" rel=\"nofollow noreferrer\"><code>'_</code>, the anonymous lifetime</a> in the Edition Guide</li>\n</ul>\n\n<blockquote>\n  <p>for a struct with a function pointer in it</p>\n</blockquote>\n\n<p>This has nothing to do with function pointers. When encountering problems while programing, I recommend creating a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal, reproducible example</a>, stripping out things that don't make the error go away. This allows you to focus on exactly the problem at hand. For example, this reproduces the same error:</p>\n\n<pre><code>struct Game&lt;'a&gt; {\n    handlers: Vec&lt;&amp;'a str&gt;,\n}\n\nimpl Game&lt;'_&gt; {\n    fn match_str&lt;'a&gt;(&amp;mut self, label: &amp;'a str) {\n        self.handlers.push(label);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1572517168, "post_id": 58617047, "comment_id": 103587807, "body": "Wonderful explanation. The breakdown provided the info I needed. Also great to have the doc reference  I had missed the detail that impl lifetime indicates that <code>self</code> inside this implementation will automatically have impl lifetime."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 6, "last_activity_date": 1572394118, "creation_date": 1572394118, "answer_id": 58617047, "question_id": 58422765, "link": "https://stackoverflow.com/questions/58422765/how-to-infer-an-appropriate-lifetime-for-an-implementation-using-lifetimes-for-s/58617047#58617047", "title": "How to infer an appropriate lifetime for an implementation using lifetimes for structs and impl?", "body": "<blockquote>\n  <p>How do I resolve this error and what exactly am I telling the compiler when I specify a lifetime on impl Game when I already have a lifetime on the struct?</p>\n</blockquote>\n\n<p>I suspect your confusion stems from an incomplete understanding of the way in which lifetimes are declared and used in Rust.</p>\n\n<h1>Struct Lifetimes</h1>\n\n<p>In order to use a lifetime on a struct, you <em>declare</em> the lifetime inside the <code>&lt;&gt;</code> adjacent to the name of the struct you are declaring, and then <em>refer</em> to that lifetime inside the struct definition. Importantly, note that the lifetime declared there is scoped to the struct definition - it has no meaning outside.</p>\n\n<p>For example (using the MRE that @Shepmaster provided):</p>\n\n<pre><code>struct Game&lt;'a&gt; {\n    handlers: Vec&lt;&amp;'a str&gt;,\n}\n</code></pre>\n\n<p>The struct <code>Game</code> contains a vector of references to strings, and the strings which are referenced must last at least as long as the <code>Game</code> struct.</p>\n\n<h1>Impl Lifetimes</h1>\n\n<p>When using a lifetime specifier on an impl block, you <em>declare</em> the lifetime inside the <code>&lt;&gt;</code> adjacent to the impl keyword, after which you may <em>refer</em> to the lifetime both in the struct being implemented, and inside the implementation itself, like this:</p>\n\n<pre><code>impl&lt;'b&gt; Game&lt;'b&gt; {\n    fn match_str(&amp;mut self, label: &amp;'b str) {\n        self.handlers.push(label);\n    }\n}\n</code></pre>\n\n<p>Note that I am using an entirely different lifetime name here (<code>'b</code>) to illustrate that the the lifetime declaration on the struct is independent of the one on the impl block.</p>\n\n<p>Breaking this down:</p>\n\n<pre><code>impl&lt;'b&gt;\n</code></pre>\n\n<p>This means that we are defining an implementation for a struct, and within that definition we will use the lifetime <code>'b</code></p>\n\n<pre><code> Game&lt;'b&gt; {\n</code></pre>\n\n<p>This means that the impl is for the struct <code>Game</code> with lifetime <code>'b</code> - so any references to <code>self</code> inside this implementation are going to automatically have lifetime <code>'b</code> as well.</p>\n\n<pre><code>fn match_str(&amp;mut self, label: &amp;'b str) {\n</code></pre>\n\n<p>Here we define the method <code>match_str</code> which takes an argument <code>label</code>. <code>label</code> is a string slice which also has the lifetime <code>'b</code> - so it must last at least as long as the <code>self</code> that the method is called on.</p>\n\n<p>In your original code, you had something like this:</p>\n\n<pre><code>impl Game&lt;'_&gt; {\n    fn match_str&lt;'a&gt;(&amp;mut self, label: &amp;'a str) {\n    ...\n    }\n}\n</code></pre>\n\n<p>This was telling the compiler:</p>\n\n<ul>\n<li>That you are starting a new impl block that, and there are no lifetimes declared at impl level</li>\n<li>That the implementation is for the struct <code>Game</code>; this struct has a lifetime parameter but we don't care about it and we are not going to tie it to any element of the implementation</li>\n<li>We are defining a method <code>match_str</code>, and we are declaring a lifetime <code>'a</code> which we can refer to in the rest of the function signature</li>\n<li>We have an argument <code>label</code> which has the lifetime <code>a</code>, but we aren't relating this lifetime to anything else</li>\n</ul>\n\n<hr>\n\n<p>More information:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-annotations-in-struct-definitions\" rel=\"noreferrer\">Rust Book - Lifetime Annotations in Struct Definitions</a></li>\n<li><a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-annotations-in-method-definitions\" rel=\"noreferrer\">Rust Book - Lifetime Annotations in Method Definitions</a></li>\n</ul>\n"}], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 869, "favorite_count": 1, "accepted_answer_id": 58617047, "answer_count": 2, "score": 1, "last_activity_date": 1572394118, "creation_date": 1571267136, "last_edit_date": 1571405986, "question_id": 58422765, "link": "https://stackoverflow.com/questions/58422765/how-to-infer-an-appropriate-lifetime-for-an-implementation-using-lifetimes-for-s", "title": "How to infer an appropriate lifetime for an implementation using lifetimes for structs and impl?", "body": "<p>How do I resolve this error? What exactly am I telling the compiler when I use the \"anonymous lifetime\" in <code>impl</code>?</p>\n\n<pre><code>struct LineHandlerInfo&lt;'a&gt; {\n    label: &amp;'a str,\n    match_literal: &amp;'a str,\n    f: fn(&amp;str) -&gt; Option&lt;&amp;str&gt;,\n}\n\nstruct Game&lt;'a&gt; {\n    handlers: Vec&lt;LineHandlerInfo&lt;'a&gt;&gt;,\n}\n\nimpl Game&lt;'_&gt; {\n    fn match_str&lt;'a&gt;(\n        &amp;'a mut self,\n        label: &amp;'a str,\n        match_literal: &amp;'a str,\n        mut f: fn(&amp;str) -&gt; Option&lt;&amp;str&gt;,\n    ) {\n        let mut lh = LineHandlerInfo {\n            label,\n            match_literal,\n            f,\n        };\n        self.handlers.push(lh);\n    }\n}\n\nfn main() {\n    let mut g = Game {\n        handlers: Vec::new(),\n    };\n    g.match_str(\"echo hello\", \"hello\", |s| {\n        println!(\"{}\", s);\n        None\n    });\n}\n\n</code></pre>\n\n<p>When I attempt to compile, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter `'a` due to conflicting requirements\n  --&gt; src/main.rs:18:22\n   |\n18 |         let mut lh = LineHandlerInfo {\n   |                      ^^^^^^^^^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the method body at 12:18...\n  --&gt; src/main.rs:12:18\n   |\n12 |     fn match_str&lt;'a&gt;(\n   |                  ^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/main.rs:19:13\n   |\n19 |             label,\n   |             ^^^^^\nnote: but, the lifetime must be valid for the lifetime '_ as defined on the impl at 11:11...\n  --&gt; src/main.rs:11:11\n   |\n11 | impl Game&lt;'_&gt; {\n   |           ^^\n   = note: ...so that the expression is assignable:\n           expected LineHandlerInfo&lt;'_&gt;\n              found LineHandlerInfo&lt;'_&gt;\n</code></pre>\n\n<p>How do I resolve this error and what exactly am I telling the compiler when I specify a lifetime on <code>impl Game</code> when I already have a lifetime on the struct?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571274162, "post_id": 58422438, "comment_id": 103189114, "body": "<i>needing to pass a reference</i> \u2014 pass it to what? Your type <code>User</code> requires ownership of the <code>String</code>: <code>last: String</code>."}, {"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1571278870, "post_id": 58422438, "comment_id": 103190047, "body": "I thought this would work, but no.  ``` let u2 = User {     first: String::from(&quot;Mary&quot;),     ..u1 }; ```"}, {"owner": {"reputation": 194, "user_id": 10061864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e85c2644da1eb3183ec669998cd00ea?s=128&d=identicon&r=PG&f=1", "display_name": "szignal", "link": "https://stackoverflow.com/users/10061864/szignal"}, "edited": false, "score": 0, "creation_date": 1571282961, "post_id": 58422438, "comment_id": 103190859, "body": "Why not just make first and last variable types <code>&amp;&#39;static str</code> instead of <code>String</code>? And then just do <code>&quot;John&quot;</code>, or whatever, instead of <code>String::from(&quot;John&quot;)</code> and so forth?"}], "answers": [{"comments": [{"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1571300917, "post_id": 58424658, "comment_id": 103197336, "body": "Thanks for the answer, this perfectly answered my question!"}, {"owner": {"reputation": 620, "user_id": 74632, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Kk1yi.jpg?s=128&g=1", "display_name": "Boris Chervenkov", "link": "https://stackoverflow.com/users/74632/boris-chervenkov"}, "reply_to_user": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 1, "creation_date": 1596910746, "post_id": 58424658, "comment_id": 111965395, "body": "@DonKlein, please upvote the answer if it solves the problem - this helps the person answering the question, as well as people searching for solutions. I had the same problem, and the explanation provided by Prime_Aquasix nailed it :)"}], "tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": true, "score": 6, "last_activity_date": 1571285326, "last_edit_date": 1571285326, "creation_date": 1571284376, "answer_id": 58424658, "question_id": 58422438, "link": "https://stackoverflow.com/questions/58422438/struct-with-partial-move-errors/58424658#58424658", "title": "Struct with partial move errors", "body": "<p>Your <code>User</code> type contains the type <code>String</code>, which owns the string data that it has (and doesn't impl <code>Copy</code>), which is why two users can't point to the same name in memory.</p>\n\n<p>The solution you probably want:</p>\n\n<pre><code>#[derive(Debug, Clone)]\nstruct User {\n    first: String,\n    last: String,\n    age: u32,\n}\n\nfn main() {\n    let u1 = User {\n        first: String::from(\"John\"),\n        last: String::from(\"Doe\"),\n        age: 22,\n    };\n\n    let u2 = User {\n        first: String::from(\"Mary\"),\n        ..u1.clone() // Copy the strings into the new user \n        // (it also copies first, which is then thrown away? Maybe the compiler optimizes this away)\n    };\n\n    println!(\"user: {:#?}\", u1);\n\n}\n</code></pre>\n\n<p>but if you really want to have two users point to the same name in memory (pretty sure you don't), there are a couple of options:</p>\n\n<ul>\n<li><p>You can change <code>String</code> to <code>&amp;'static str</code>. This however means that you have to specify it when you compile. (You can't have a user type in their name at runtime, and store it in user)</p>\n\n<pre><code>#[derive(Debug)]\nstruct User {\n    first: &amp;'static str,\n    last: &amp;'static str,\n    age: u32,\n}\n\nfn main() {\n    let u1 = User {\n        first: \"John\",\n        last: \"Doe\",\n        age: 22,\n    };\n\n    let u2 = User {\n        first: \"Mary\",\n        ..u1\n    };\n\n    println!(\"user: {:#?}\", u1);\n}\n\n</code></pre>\n\n<ul>\n<li>You can use a <code>Rc</code> to keep track of the references to a piece of memory. This way you don't have to worry about lifetimes and who's owning what. (Comes at a tiny runtime cost though)</li>\n</ul>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(Debug, Clone)]\nstruct User {\n    first: Rc&lt;String&gt;,\n    last: Rc&lt;String&gt;,\n    age: u32,\n}\n\nfn main() {\n    let u1 = User {\n        first: Rc::new(String::from(\"John\")),\n        last: Rc::new(String::from(\"Doe\")),\n        age: 22,\n    };\n\n    let u2 = User {\n        first: Rc::new(String::from(\"Mary\")),\n        ..u1.clone() // Clone the references, not the actual string. For strings with just a couple characters, the time difference is completely negligible)\n    };\n\n    println!(\"user: {:#?}\", u1);\n}\n</code></pre>\n\n<ul>\n<li>Use a <code>Rc&lt;Mutex&lt;String&gt;&gt;</code> instead if you want to modify the name later, and have it change in both u1 and u2.</li>\n</ul></li>\n</ul>\n"}], "owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 743, "favorite_count": 0, "accepted_answer_id": 58424658, "answer_count": 1, "score": 4, "last_activity_date": 1571285326, "creation_date": 1571264717, "last_edit_date": 1571273956, "question_id": 58422438, "link": "https://stackoverflow.com/questions/58422438/struct-with-partial-move-errors", "title": "Struct with partial move errors", "body": "<p>I've got a simple struct and two instances of it as below:</p>\n\n<pre><code>#[derive(Debug)]\nstruct User {\n    first: String,\n    last: String,\n    age: u32,\n}\n\nlet u1 = User {\n    first: String::from(\"John\"),\n    last: String::from(\"Doe\"),\n    age: 22,\n};\n\nlet u2 = User {\n    first: String::from(\"Mary\"),\n    ..u1\n};\n\nprintln!(\"user: {:#?}\", u1);\n</code></pre>\n\n<p>Error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `u1`\n  --&gt; src/main.rs:20:29\n   |\n15 |       let u2 = User {\n   |  ______________-\n16 | |         first: String::from(\"Mary\"),\n17 | |         ..u1\n18 | |     };\n   | |_____- value moved here\n19 | \n20 |       println!(\"user: {:#?}\", u1);\n   |                               ^^ value borrowed here after partial move\n   |\n   = note: move occurs because `u1.last` has type `std::string::String`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I tried to revise it to <code>..&amp;u1</code> hoping it will pass the borrow check so that I could spread in the base struct (u1) to u2, but to no avail, wondering is it even possible for what I wanted to do here?</p>\n\n<p>I understand it's because <code>u1.last</code> is a <code>String</code>, hence needing to pass a reference, but I'm not sure how to make it work in this scenario.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571241267, "post_id": 58417250, "comment_id": 103177352, "body": "You cannot do that: <code>B</code> isn&#39;t your trait, and your implementor is generic, so it can be external too."}, {"owner": {"reputation": 534, "user_id": 3882704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e5f3c0ad59d68324bd15384465a8f17?s=128&d=identicon&r=PG", "display_name": "Kellen", "link": "https://stackoverflow.com/users/3882704/kellen"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571241318, "post_id": 58417250, "comment_id": 103177379, "body": "Is that the case even though the type constraint on the generic is for my own trait <code>C</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1571241402, "post_id": 58417250, "comment_id": 103177417, "body": "You can write <code>impl C for i32</code>, for example: that would imply that you try to implement a foreign trait for a foreign type while writing <code>impl&lt;T: C&gt; b::B for T</code>. Your &quot;trick&quot; doesn&#39;t bypass the orphan rules."}, {"owner": {"reputation": 534, "user_id": 3882704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e5f3c0ad59d68324bd15384465a8f17?s=128&d=identicon&r=PG", "display_name": "Kellen", "link": "https://stackoverflow.com/users/3882704/kellen"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571241476, "post_id": 58417250, "comment_id": 103177459, "body": "@FrenchBoiethios I see. How is this different from the dynamic dispatch example I showed in my answer (<code>impl b::B for dyn C</code>)? The argument sounds the same for both, but the latter compiles without error. <b><code>C</code> is not a foreign type AFAIK</b>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571241563, "post_id": 58417250, "comment_id": 103177493, "body": "Because <code>C</code> is your trait, so you own <code>dyn C</code>. The implementer and implementor cannot be both foreign. As soon as you own one of them, you&#39;re ok."}, {"owner": {"reputation": 534, "user_id": 3882704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e5f3c0ad59d68324bd15384465a8f17?s=128&d=identicon&r=PG", "display_name": "Kellen", "link": "https://stackoverflow.com/users/3882704/kellen"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571241726, "post_id": 58417250, "comment_id": 103177564, "body": "Okay, so we agree that <code>C</code> is not a foreign type. How would I statically implement <code>b::B</code> for <code>C</code>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 534, "user_id": 3882704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e5f3c0ad59d68324bd15384465a8f17?s=128&d=identicon&r=PG", "display_name": "Kellen", "link": "https://stackoverflow.com/users/3882704/kellen"}, "edited": false, "score": 0, "creation_date": 1571241811, "post_id": 58417250, "comment_id": 103177606, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/200966/discussion-between-french-boiethios-and-kellen\">continue this discussion in chat</a>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571300016, "post_id": 58417250, "comment_id": 103196882, "body": "FYI, the current behavior is unwanted and will be corrected one day: <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2451-re-rebalancing-coherence.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1571483750, "post_id": 58417250, "comment_id": 103261736, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/25413201/how-do-i-implement-a-trait-i-dont-own-for-a-type-i-dont-own\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 2, "last_activity_date": 1571432231, "last_edit_date": 1571432231, "creation_date": 1571415950, "answer_id": 58454807, "question_id": 58417250, "link": "https://stackoverflow.com/questions/58417250/implementing-a-foreign-trait-for-a-local-generic-type/58454807#58454807", "title": "Implementing a foreign trait for a local generic type", "body": "<p>What I usually do is wrapping the foreign type in a <code>struct</code> (as opposed to introducing a new <code>trait</code> deriving from the foreign one):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate a;\nextern crate b;\n\npub struct C&lt;T: a::A&gt; {\n    pub t: T,\n}\n\nimpl&lt;T: a::A&gt; b::B for C&lt;T&gt; {}\n</code></pre>\n\n<p>This, however, sometimes requires some boilerplate to convert between <code>C</code> and the \"normal\" type.</p>\n\n<p>This is sometimes called \"NewType pattern\" (as in <a href=\"https://github.com/Ixrec/rust-orphan-rules\" rel=\"nofollow noreferrer\">https://github.com/Ixrec/rust-orphan-rules</a>).</p>\n"}], "owner": {"reputation": 534, "user_id": 3882704, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e5f3c0ad59d68324bd15384465a8f17?s=128&d=identicon&r=PG", "display_name": "Kellen", "link": "https://stackoverflow.com/users/3882704/kellen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 500, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1571432231, "creation_date": 1571241030, "last_edit_date": 1571425778, "question_id": 58417250, "link": "https://stackoverflow.com/questions/58417250/implementing-a-foreign-trait-for-a-local-generic-type", "title": "Implementing a foreign trait for a local generic type", "body": "<p>I'm attempting to implement a trait from crate A for a trait from crate B using static dispatch. I'm wrapping the foreign trait, but am having trouble with the <code>impl&lt;T&gt;</code> line:</p>\n\n<pre><code>extern crate a;\nextern crate b;\n\npub trait C: a::A {}\n\nimpl&lt;T: C&gt; b::B for T {}\n</code></pre>\n\n<p><strong>The end result I am looking for is implementing <code>b::B</code> for implementors of trait <code>C</code>, using static dispatch.</strong></p>\n\n<p>I'm getting the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct&lt;T&gt;`)\n --&gt; c/src/lib.rs:3:1\n  |\n3 | impl&lt;T: C&gt; b::B for T {}\n  | ^^^^^^^^^^^^^^^^^^^^^ type parameter `T` must be used as the type parameter for some local type\n  |\n  = note: only traits defined in the current crate can be implemented for a type parameter\n</code></pre>\n\n<p>I'm able to get around this by using dynamic dispatch \u2014 <code>impl b::B for dyn C</code> \u2014 but want to accomplish this with static dispatch.</p>\n\n<p>I've already tried:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/54400991/error-e0201-when-implementing-foreign-trait-for-local-type-with-parameter\">Error E0201 when implementing foreign trait for local type with parameter</a> \u2014 I'm not trying to implement a trait for <code>Vec</code>, but my own type</li>\n<li><a href=\"https://stackoverflow.com/questions/29256519/i-implemented-a-trait-for-another-trait-but-cannot-call-methods-from-both-traits\">I implemented a trait for another trait but cannot call methods from both traits</a> \u2014 The types don't conflict</li>\n<li><a href=\"https://stackoverflow.com/questions/45116984/the-trait-cannot-be-made-into-an-object\">The trait cannot be made into an object</a> \u2014 I want to use static dispatch</li>\n</ul>\n"}, {"tags": ["types", "casting", "rust", "undefined-behavior"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571240143, "post_id": 58416511, "comment_id": 103176761, "body": "I can&#39;t answer the &quot;why has it changed&quot;, but I agree with you that the code is incorrect to start with. <code>foo</code> is already a function pointer, so you should not take an address to it. That creates a double reference, seemingly to a zero-sized type (thus the magic value <code>1</code>)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1571244773, "post_id": 58416511, "comment_id": 103178972, "body": "This doesn&#39;t exactly answer your question, but you probably want: <code>let ptr = foo as *const fn() as *const c_void;</code>"}], "answers": [{"comments": [{"owner": {"reputation": 949, "user_id": 1219515, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/64ce0ac7d44d2076d23b21ac62214970?s=128&d=identicon&r=PG", "display_name": "Maciej Goszczycki", "link": "https://stackoverflow.com/users/1219515/maciej-goszczycki"}, "edited": false, "score": 1, "creation_date": 1571319268, "post_id": 58418356, "comment_id": 103208300, "body": "Thanks I&#39;ve reported it <a href=\"https://github.com/rust-lang/rust/issues/65499\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/65499</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 949, "user_id": 1219515, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/64ce0ac7d44d2076d23b21ac62214970?s=128&d=identicon&r=PG", "display_name": "Maciej Goszczycki", "link": "https://stackoverflow.com/users/1219515/maciej-goszczycki"}, "edited": false, "score": 0, "creation_date": 1571338754, "post_id": 58418356, "comment_id": 103217974, "body": "@MaciejGoszczycki Thanks for reporting! The responses actually did clear things up for me \u2013 I&#39;ll post an answer based on the responses there."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1571297583, "last_edit_date": 1571297583, "creation_date": 1571245369, "answer_id": 58418356, "question_id": 58416511, "link": "https://stackoverflow.com/questions/58416511/casting-a-function-reference-producing-an-invalid-pointer/58418356#58418356", "title": "Casting a function reference producing an invalid pointer?", "body": "<blockquote>\n  <p>What is the <code>_</code> getting inferred to and why has the behaviour changed?</p>\n</blockquote>\n\n<p>Each time you do a raw pointer cast, you can only change one piece of information (reference or raw pointer; mutability; type). Therefore, if you do this cast:</p>\n\n<pre><code>let ptr = &amp;foo as *const _\n</code></pre>\n\n<p>since you've changed from a reference to a raw pointer, the type inferred for <code>_</code> <em>must</em> be unchanged and is therefore the type of <code>foo</code>, which is some inexpressible type for the function <code>foo</code>.</p>\n\n<p>Instead of doing that, you can directly cast to a function pointer, which is expressible in Rust syntax:</p>\n\n<pre><code>let ptr = foo as *const fn() as *const c_void;\n</code></pre>\n\n<p>As for why it has changed, that's hard to say. It could be a bug in the nightly build. It is worth <a href=\"https://github.com/rust-lang/rust/issues\" rel=\"nofollow noreferrer\">reporting it</a> \u2014 even if it is not a bug, you will likely get a good explanation from the compiler team about what is actually going on!</p>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1571351842, "post_id": 58439378, "comment_id": 103222669, "body": "This makes sense, but I am unconvinced that it&#39;s generally desired behaviour because it is built on a precarious assumption. Within safe Rust code, there is no reason to distinguish pointers to a value of a ZST - because there is only one possibly value which is known at compile time. This breaks down once you need to use a ZST value outside of the Rust type system, such as here. It likely only affects <code>fn</code> item types and non-capturing closures and for those there is a workaround, as in my answer, but it&#39;s still quite a foot-gun!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1571354250, "post_id": 58439378, "comment_id": 103223176, "body": "Ok, I hadn&#39;t read the newer responses on the Github issue. I could get a segfault with that code but, if the code could cause a segfault then I guess the new behaviour is ok."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1571365250, "post_id": 58439378, "comment_id": 103225355, "body": "Great answer. @PeterHall I was thinking the same thing, and I&#39;m still not 100% on the subject, but at least for temporaries and other stack variables, there should be no problem with putting all zero-sized values at 0x1 because the compiler makes no guarantees about stack layout, and you can&#39;t guarantee uniqueness of pointers to ZSTs anyway. This is different from, say, casting a <code>*const i32</code> to <code>*const c_void</code> which, to my understanding, is still guaranteed to preserve the identity of the pointer."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 3, "last_activity_date": 1571339845, "creation_date": 1571339845, "answer_id": 58439378, "question_id": 58416511, "link": "https://stackoverflow.com/questions/58416511/casting-a-function-reference-producing-an-invalid-pointer/58439378#58439378", "title": "Casting a function reference producing an invalid pointer?", "body": "<p>This answer is based on the replies on <a href=\"https://github.com/rust-lang/rust/issues/65499\" rel=\"nofollow noreferrer\">the bug report motivated by this question</a>.</p>\n\n<p>Each function in Rust has its individual <em>function item type</em>, which is distinct from the function item type of every other function. For this reason, an instance of the function item type does not need to store any information at all \u2013 what function it points to is clear from its type. So the variable x in </p>\n\n<pre><code>let x = foo;\n</code></pre>\n\n<p>is a variable of size 0.</p>\n\n<p>Function item types implicitly coerce to <em>function pointer types</em> where necessary. The variable</p>\n\n<pre><code>let x: fn() = foo;\n</code></pre>\n\n<p>is a generic pointer to <em>any</em> function with signature <code>fn()</code>, and thus needs to store a pointer to the function it actually points to, so the size of <code>x</code> is the size of a pointer.</p>\n\n<p>If you take the address of a function, <code>&amp;foo</code>, you are actually taking the address of a zero-sized temporary value. Before <a href=\"https://github.com/rust-lang/rust/commit/ea52be482ab4945fda63cb65b6a198309a041e3c\" rel=\"nofollow noreferrer\">this commit to the <code>rust</code> repo</a>, zero-sized temporaries used to create an allocation on the stack, and <code>&amp;foo</code> returned the address of that allocation. Since this commit, zero-sized types don't create allocations anymore, and instead use the magic address 1. This explains the difference between the different versions of Rust.</p>\n"}], "owner": {"reputation": 949, "user_id": 1219515, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/64ce0ac7d44d2076d23b21ac62214970?s=128&d=identicon&r=PG", "display_name": "Maciej Goszczycki", "link": "https://stackoverflow.com/users/1219515/maciej-goszczycki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 1, "accepted_answer_id": 58439378, "answer_count": 2, "score": 9, "last_activity_date": 1571339845, "creation_date": 1571238568, "last_edit_date": 1571239661, "question_id": 58416511, "link": "https://stackoverflow.com/questions/58416511/casting-a-function-reference-producing-an-invalid-pointer", "title": "Casting a function reference producing an invalid pointer?", "body": "<p>I'm tracking down an error in third party code and I narrowed it down to something along the lines of.</p>\n\n<pre><code>use libc::c_void;\n\npub unsafe fn foo() {}\n\nfn main() {\n    let ptr = &amp;foo as *const _ as *const c_void;\n    println!(\"{:x}\", ptr as usize);\n}\n</code></pre>\n\n<p>Ran on stable 1.38.0 this prints the function pointer, but beta (1.39.0-beta.6) and nightly return '1'. (<a href=\"https://play.rust-lang.org/?version=beta&amp;mode=debug&amp;edition=2018&amp;gist=124b7286b987a31eaf882c1efdf06fab\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>What is the <code>_</code> getting inferred to and why has the behaviour changed?</p>\n\n<p>I assume the correct way to cast this would simply be <code>foo as *const c_void</code>, but this is not my code.</p>\n"}, {"tags": ["file", "rust", "buffer"], "comments": [{"owner": {"reputation": 33, "user_id": 3722517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ccb92223cf0e6d0f71e9789058f32f0?s=128&d=identicon&r=PG&f=1", "display_name": "Sam Wighton", "link": "https://stackoverflow.com/users/3722517/sam-wighton"}, "edited": false, "score": 0, "creation_date": 1571230401, "post_id": 58413733, "comment_id": 103170505, "body": "I get 3 bytes every time if I add a  input_file.seek(SeekFrom::Start(position))?; in the read loop. But all the extra system calls really slow down performance"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1571235411, "post_id": 58413733, "comment_id": 103173756, "body": "<i>Compiled [...] with <code>rustc problem.rs</code></i> \u2014 please don&#39;t do yourself a disservice and avoid using Cargo."}, {"owner": {"reputation": 33, "user_id": 3722517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ccb92223cf0e6d0f71e9789058f32f0?s=128&d=identicon&r=PG&f=1", "display_name": "Sam Wighton", "link": "https://stackoverflow.com/users/3722517/sam-wighton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571304783, "post_id": 58413733, "comment_id": 103199574, "body": "@Shepmaster, the project I am working on does indeed use Cargo. For this minimal example, I reverted back to rustc"}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 3722517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ccb92223cf0e6d0f71e9789058f32f0?s=128&d=identicon&r=PG&f=1", "display_name": "Sam Wighton", "link": "https://stackoverflow.com/users/3722517/sam-wighton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571304722, "post_id": 58413813, "comment_id": 103199537, "body": "Thanks @Shepmaster, <code>read_exact</code> is the behavior that I was looking for"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1571235333, "last_edit_date": 1571235333, "creation_date": 1571230442, "answer_id": 58413813, "question_id": 58413733, "link": "https://stackoverflow.com/questions/58413733/why-does-bufreaderread-not-always-completely-fill-the-given-buffer/58413813#58413813", "title": "Why does BufReader::read not always completely fill the given buffer?", "body": "<p>The default buffer size is 8KB. See the <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html#method.new\" rel=\"nofollow noreferrer\">docs for <code>BufReader::new</code></a>.</p>\n\n<p>8192 bytes isn't divisible by 3, so you get a couple of trailing bytes at the end of each buffer.</p>\n\n<p>You can set the buffer size to something other than 8KB by using the <a href=\"https://doc.rust-lang.org/std/io/struct.BufReader.html#method.with_capacity\" rel=\"nofollow noreferrer\"><code>with_capacity</code> constructor</a>.</p>\n"}], "owner": {"reputation": 33, "user_id": 3722517, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ccb92223cf0e6d0f71e9789058f32f0?s=128&d=identicon&r=PG&f=1", "display_name": "Sam Wighton", "link": "https://stackoverflow.com/users/3722517/sam-wighton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 461, "favorite_count": 0, "accepted_answer_id": 58413813, "answer_count": 1, "score": 3, "last_activity_date": 1571235333, "creation_date": 1571230190, "last_edit_date": 1571235312, "question_id": 58413733, "link": "https://stackoverflow.com/questions/58413733/why-does-bufreaderread-not-always-completely-fill-the-given-buffer", "title": "Why does BufReader::read not always completely fill the given buffer?", "body": "<p>I expected this code to read 3 bytes on each loop and not print, yet every 8000 or so bytes of the file, it only reads two bytes:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\nuse std::fs::File;\nuse std::io::prelude::*;\nuse std::io::BufReader;\nuse std::io::BufWriter;\nuse std::io::SeekFrom;\nuse std::path::Path;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let sequence: [u8; 3] = [1, 2, 3];\n    let file_path = Path::new(\"./test_file\");\n    //fill a file with 1,2,3,1,2,3...\n    {\n        let mut output_file: std::io::BufWriter&lt;std::fs::File&gt;;\n        output_file = BufWriter::new(File::create(file_path)?);\n        for _i in 0..100000 {\n            match output_file.write(&amp;sequence) {\n                Err(why) =&gt; panic!(\"could not write {}\", Error::description(&amp;why)),\n                Ok(_) =&gt; {}\n            }\n        }\n    }\n    //read the file 3 bytes at a time\n    {\n        let mut input_file: std::io::BufReader&lt;std::fs::File&gt;;\n        input_file = BufReader::new(File::open(file_path)?);\n        for i in 0..100000 {\n            let mut raw = [0; 3];\n            let result = match input_file.read(&amp;mut raw) {\n                Err(why) =&gt; panic!(\"could not read {}\", Error::description(&amp;why)),\n                Ok(x) =&gt; x,\n            };\n            // print if something other than 3 bytes were read\n            if result != 3 {\n                println!(\n                    \"file pos {}, data read {}, buffer = [{},{},{}]\",\n                    i * 3,\n                    result,\n                    raw[0],\n                    raw[1],\n                    raw[2]\n                );\n            }\n        }\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>Compiled on a Mac with <code>rustc problem.rs</code> and run with <code>./problem</code>.</p>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>file pos 8190, data read 2, buffer = [1,2,0]\nfile pos 16383, data read 2, buffer = [3,1,0]\nfile pos 24576, data read 2, buffer = [2,3,0]\nfile pos 32769, data read 2, buffer = [1,2,0]\nfile pos 40962, data read 2, buffer = [3,1,0]\nfile pos 49155, data read 2, buffer = [2,3,0]\nfile pos 57348, data read 2, buffer = [1,2,0]\nfile pos 65541, data read 2, buffer = [3,1,0]\n...\n</code></pre>\n\n<p>This seems to suggest something to do with an internal 8192 sized buffer.</p>\n\n<p>Why don't I get 3 bytes each time? I get similar results reading 5 bytes at a time.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1571232114, "post_id": 58413699, "comment_id": 103171571, "body": "<a href=\"https://stackoverflow.com/questions/36213630/how-to-return-new-data-from-a-function-as-a-reference-without-borrow-checker-iss\">How to return new data from a function as a reference without borrow checker issues?</a> is another very similar question."}, {"owner": {"reputation": 767, "user_id": 1887824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/281263b4ead7b1afed450f6a240a7e6e?s=128&d=identicon&r=PG", "display_name": "elsoja", "link": "https://stackoverflow.com/users/1887824/elsoja"}, "edited": false, "score": 0, "creation_date": 1571435610, "post_id": 58413699, "comment_id": 103254044, "body": "Even though the question was already answered, I&#39;d like to point out that there&#39;s a chapter in the Rust book that is fitting to understand this problem: <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch10-03-lifetime-syntax.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "is_accepted": true, "score": 1, "last_activity_date": 1571230821, "creation_date": 1571230821, "answer_id": 58413955, "question_id": 58413699, "link": "https://stackoverflow.com/questions/58413699/rust-expected-lifetime-parameter-problem/58413955#58413955", "title": "rust: expected lifetime parameter problem", "body": "<p>The error message is quite clear here:</p>\n\n<blockquote>\n  <p>this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from <code>a</code> or <code>b</code></p>\n</blockquote>\n\n<p>Providing an explicit lifetime would help the compiler understand what you're trying to do:</p>\n\n<pre><code>fn result&lt;'a&gt;(a: &amp;'a u32, b: &amp;'a u32) -&gt; Vec&lt;&amp;'a u32&gt; {\n    let mut vec: Vec&lt;&amp;'a u32&gt; = Vec::new();\n    for x in *a..*b {\n        vec.push(&amp;x);\n    }\n    vec\n}\n</code></pre>\n\n<p>But the above wouldn't work either, as borrowing <code>x</code> results in borrowing a variable whch only lives in the scope a single iteration:</p>\n\n<blockquote>\n<pre><code> vec.push(&amp;x);\n           ^^ borrowed value does not live long enough\n</code></pre>\n</blockquote>\n\n<p>What you probably want is to avoid borrowing altogether:</p>\n\n<pre><code>fn result(a: u32, b: u32) -&gt; Vec&lt;u32&gt; {\n    let mut vec = Vec::new();\n    for x in a..b {\n        vec.push(x);\n    }\n    vec\n}\n</code></pre>\n\n<p><a href=\"https://rust.godbolt.org/z/gutQkg\" rel=\"nofollow noreferrer\"><strong>live example on godbolt.org</strong></a></p>\n"}], "owner": {"reputation": 13, "user_id": 12226595, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c202cc35126d257b73d4d02c0909e2db?s=128&d=identicon&r=PG&f=1", "display_name": "Dino", "link": "https://stackoverflow.com/users/12226595/dino"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 663, "favorite_count": 0, "closed_date": 1571231208, "accepted_answer_id": 58413955, "answer_count": 1, "score": 1, "last_activity_date": 1571232574, "creation_date": 1571230089, "last_edit_date": 1571230402, "question_id": 58413699, "link": "https://stackoverflow.com/questions/58413699/rust-expected-lifetime-parameter-problem", "closed_reason": "Duplicate", "title": "rust: expected lifetime parameter problem", "body": "<p>I am new to Rust and was making a simple program to practice which takes 2 numbers and prints the numbers between them. This is my code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let a: u32 = 2;\n    let b: u32 = 10;\n    let a = result(&amp;a, &amp;b);\n    println!(\"{:?}\", a);\n}\n\nfn result(a: &amp;u32, b: &amp;u32) -&gt; [Vec&lt;&amp;u32&gt;] {\n    let mut vec = Vec::new();\n    for x in a..b {\n        vec.push(a);\n    }\n    vec\n}\n</code></pre>\n\n<p>When i run this program, i get this error</p>\n\n<pre><code>fn result(a: &amp;u32, b: &amp;u32) -&gt; [Vec&lt;&amp;u32&gt;] {\n|                                     ^ expected lifetime parameter\n</code></pre>\n\n<p>The concepts of borrowing and lifetimes are still very new and strange to me. Please help me in determining where i am wrong.</p>\n"}, {"tags": ["rust", "iterator", "copy", "clone"], "answers": [{"comments": [{"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1571231031, "post_id": 58413740, "comment_id": 103170886, "body": "Thanks for the answer! I created a simple (and useless) example <a href=\"https://gist.github.com/rust-play/4f4dfce0038e58ded9c8a7a465f1c18a\" rel=\"nofollow noreferrer\">here</a> to test that, but Clippy doesn&#39;t seem to warn me that I could use <code>copied()</code> instead of <code>cloned()</code>..."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 3, "creation_date": 1571232243, "post_id": 58413740, "comment_id": 103171648, "body": "@Zak It seems you are right. Clippy  can <a href=\"https://github.com/rust-lang/rust-clippy/pull/3970\" rel=\"nofollow noreferrer\">suggest the most appropriate of  <code>copied</code> or <code>cloned</code></a>, but doesn&#39;t <a href=\"https://github.com/rust-lang/rust-clippy/issues/3870\" rel=\"nofollow noreferrer\"><i>currently</i></a> suggest using <code>copied</code> when you are already using <code>clone</code>."}, {"owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "edited": false, "score": 0, "creation_date": 1571233176, "post_id": 58413740, "comment_id": 103172233, "body": "Ah okay, that&#39;s really helpful... also allowed me to find <a href=\"https://github.com/rust-lang/rust/pull/56534\" rel=\"nofollow noreferrer\">this</a> which explains the original intent of <code>copied()</code>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 9, "last_activity_date": 1571232269, "last_edit_date": 1571232269, "creation_date": 1571230208, "answer_id": 58413740, "question_id": 58413583, "link": "https://stackoverflow.com/questions/58413583/difference-between-copied-and-cloned-on-rust-iterators/58413740#58413740", "title": "Difference between copied and cloned on Rust iterators", "body": "<blockquote>\n  <p>Should I just always use cloned() as it will work in the more general case?</p>\n</blockquote>\n\n<p>Often, the Rust optimiser will be able to figure out that a clone can be replaced with a faster copy. However, this isn't guaranteed, so use <code>copied()</code> where you can, to make sure you end up with the fastest binary.</p>\n"}, {"comments": [{"owner": {"reputation": 846, "user_id": 5091531, "user_type": "registered", "accept_rate": 78, "profile_image": "https://lh3.googleusercontent.com/-7TKGbdvQH1s/AAAAAAAAAAI/AAAAAAAABv0/39zna4pfTqs/photo.jpg?sz=128", "display_name": "Pabi", "link": "https://stackoverflow.com/users/5091531/pabi"}, "edited": false, "score": 1, "creation_date": 1571233781, "post_id": 58414830, "comment_id": 103172629, "body": "This seems like it would be the case. Not a bad answer \ud83e\udd14"}], "tags": [], "owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "is_accepted": true, "score": 9, "last_activity_date": 1571339477, "last_edit_date": 1571339477, "creation_date": 1571233416, "answer_id": 58414830, "question_id": 58413583, "link": "https://stackoverflow.com/questions/58413583/difference-between-copied-and-cloned-on-rust-iterators/58414830#58414830", "title": "Difference between copied and cloned on Rust iterators", "body": "<p>I managed to find (thanks to <a href=\"https://stackoverflow.com/users/493729/peter-hall\">Peter</a>!) <a href=\"https://github.com/rust-lang/rust/pull/56534\" rel=\"noreferrer\">this pull request</a> which explains the original reasoning behind adding <code>copied()</code> in addition to <code>cloned()</code>...</p>\n\n<blockquote>\n  <p>The intent of copied is to avoid accidentally cloning iterator elements after doing a code refactoring which causes a structure to be no longer Copy. This is a relatively common pattern, as it can be seen by calling <code>rg --pcre2 '[.]map[(][|](?:(\\w+)[|] [*]\\1|&amp;(\\w+)[|] \\2)[)]'</code> on Rust main repository. Additionally, many uses of cloned actually want to simply Copy, and changing something to be no longer copyable may introduce unnoticeable performance penalty.</p>\n</blockquote>\n"}], "owner": {"reputation": 1600, "user_id": 3946040, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/J512N.png?s=128&g=1", "display_name": "Zak", "link": "https://stackoverflow.com/users/3946040/zak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1091, "favorite_count": 1, "accepted_answer_id": 58414830, "answer_count": 2, "score": 8, "last_activity_date": 1571339477, "creation_date": 1571229679, "question_id": 58413583, "link": "https://stackoverflow.com/questions/58413583/difference-between-copied-and-cloned-on-rust-iterators", "title": "Difference between copied and cloned on Rust iterators", "body": "<p>I'm trying to figure out the difference between the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.copied\" rel=\"noreferrer\"><code>copied()</code></a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cloned\" rel=\"noreferrer\"><code>cloned()</code></a> methods on Rust's <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\"><code>Iterator</code></a> trait. Looking at the docs on <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"noreferrer\"><code>Clone</code></a>, I can see that it...</p>\n\n<blockquote>\n  <p>Differs from Copy in that Copy is implicit and extremely inexpensive, while Clone is always explicit and may or may not be expensive. [...] Since Clone is more general than Copy, you can automatically make anything Copy be Clone as well.</p>\n</blockquote>\n\n<p>...but for iterators both methods are explicit so what's the point of <code>copied()</code>? Should I just always use <code>cloned()</code> as it will work in the more general case?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "is_accepted": true, "score": 1, "last_activity_date": 1571355920, "creation_date": 1571355920, "answer_id": 58442105, "question_id": 58411718, "link": "https://stackoverflow.com/questions/58411718/rustls-or-briansmith-ring-aes-cbc-option-dont-insert-empty-fragments-analogue/58442105#58442105", "title": "Rustls (or briansmith/ring) AES CBC option DONT_INSERT_EMPTY_FRAGMENTS analogue", "body": "<p>Rustls doesn't support CBC cipher suites or TLS 1.0 or 1.1.  The way CBC is used (MAC-then-Encrypt) in TLS is considered insecure (especially so when used with the option you want), and Rustls doesn't implement insecure algorithms.  Rustls supports TLS 1.2 and 1.3 and only AEAD algorithms (AES-GCM and ChaCha20-Poly1305).</p>\n\n<p>If you want to write a server using Rustls, you'll need to ensure your clients support at least TLS 1.2 and use secure cipher suites.  You should do this anyway if you care about your data security or have any sort of compliance requirements.</p>\n\n<p>As a note, Windows 7 will be EOL in January, so its TLS support shouldn't be a concern after then.</p>\n"}], "owner": {"reputation": 67, "user_id": 1570891, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93f88540037be9808c958e73022b2850?s=128&d=identicon&r=PG", "display_name": "user1570891", "link": "https://stackoverflow.com/users/1570891/user1570891"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 58442105, "answer_count": 1, "score": 0, "last_activity_date": 1571355920, "creation_date": 1571223502, "question_id": 58411718, "link": "https://stackoverflow.com/questions/58411718/rustls-or-briansmith-ring-aes-cbc-option-dont-insert-empty-fragments-analogue", "title": "Rustls (or briansmith/ring) AES CBC option DONT_INSERT_EMPTY_FRAGMENTS analogue", "body": "<p>I am using rustls library (<a href=\"https://github.com/ctz/rustls\" rel=\"nofollow noreferrer\">https://github.com/ctz/rustls</a>) for the TLS connections. Everything is good except that some servers don't establish the connection (fails after HelloClient message) due to they do not support empty fragments for CBC mode (the option name from the OpenSSL is SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS, more details here <a href=\"https://www.openssl.org/~bodo/tls-cbc.txt\" rel=\"nofollow noreferrer\">https://www.openssl.org/~bodo/tls-cbc.txt</a>).\nI know that rustls uses ring library as well (<a href=\"https://github.com/briansmith/ring\" rel=\"nofollow noreferrer\">https://github.com/briansmith/ring</a>), but I couln't find the similar option there also.</p>\n\n<p>I tried to research the rustls and ring code, but no similar option were found.</p>\n\n<p>I expect to establish the tls connection without empty fragments with the server that doesn't support it. E.g. Window 7 uses tls 1.0 (or 1.1) by default.</p>\n\n<p>Thank you for help.</p>\n"}, {"tags": ["rust", "heap", "offset", "allocation", "raw-pointer"], "owner": {"reputation": 469, "user_id": 7324619, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/1fceecbf4e9c3c61e8ee1335da9d83ec?s=128&d=identicon&r=PG&f=1", "display_name": "Asone Tuhid", "link": "https://stackoverflow.com/users/7324619/asone-tuhid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1571293737, "creation_date": 1571222770, "last_edit_date": 1571293737, "question_id": 58411491, "link": "https://stackoverflow.com/questions/58411491/initialize-sized-members-of-dst-in-rust-on-the-heap", "title": "Initialize sized members of DST in Rust (on the heap)", "body": "<p>I'm trying to implement a chunk list a.k.a. a linked list where each node contains multiple elements, a tradeoff between a linked list and a <code>Vec</code>.</p>\n\n<p>The intuitive way to do this is:</p>\n\n<pre><code>pub struct Node&lt;T&gt; {\n    next: /* ref to next node */,\n    data: Vec&lt;T&gt;,\n}\n</code></pre>\n\n<p>The problem here is the fact that, to access elements of the vector from a reference to a node, 2 dereference operations are needed: the first to dereference the actual node and the second to dereference the heap-stored slice of the vector.</p>\n\n<p>My solution was to define <code>Node&lt;T&gt;</code> as a DST with its last field being a slice:</p>\n\n<pre><code>pub struct Node&lt;T&gt; {\n    next: /* ref to next node */,\n    data: [T],\n}\n// this Node is a DST, it doesn't have a size known at compile time\n// and it always needs to be handled behind a pointer, say Box for ownership\n</code></pre>\n\n<p>which makes it interesting to initialise the struct since it can't be instantiated on the stack.</p>\n\n<p>I have tried both the experimental <code>box</code> syntax and <code>std::alloc::alloc</code> but haven't succeeded.</p>\n\n<p>My question is the following: ignoring all good practice,</p>\n\n<ol>\n<li><p>Is this actually any more efficient than the <code>Vec</code> version, if no then why, did I miscount dereferences or does the compiler optimise them away?</p></li>\n<li><p>Is there a way to allocate a DST like this directly on the heap with the slice being allocated as a certain size. More specifically (if this is the way to go), say <code>Node</code> had multiple sized members before the slice, how can I <code>ptr.write(...)</code> any of them (to avoid dropping uninitialised bits) if the compiler might have done some reordering?</p></li>\n</ol>\n\n<p>I believe the second question is related to the discussion about <code>offset_of!</code> but I'm unsure.</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571225320, "post_id": 58411787, "comment_id": 103167498, "body": "Ok. That&#39;s works.  But when I will print content of map then I have error. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cdc6edebc8c38be79891997e65b71cf3\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 45276, "user_id": 176922, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/621b61c5445afea7639b4cf6bb7c455a?s=128&d=identicon&r=PG", "display_name": "Benjamin Bannier", "link": "https://stackoverflow.com/users/176922/benjamin-bannier"}, "reply_to_user": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571226469, "post_id": 58411787, "comment_id": 103168169, "body": "The immediate issue there is that <code>add_to_map</code> borrows <code>map</code> so using it in the same scope can be unsound. I am not sure what exact problem you are trying to solve, but <code>add_to_map</code> seems weird to me; if you could e.g.,  just insert in a place like <code>main</code> you would not be running into this issue (you could delegate computation of the value to a helper). But even with that the <code>HashMap</code> you have here cannot be moved which makes it hard to use (similar code would be possible in languages like C or C++, but it would also be very easy to introduce bugs that way)."}, {"owner": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571226818, "post_id": 58411787, "comment_id": 103168343, "body": "Ok. How do it? I am asking for an example. Maybe I should return a new HashMap from the function?"}, {"owner": {"reputation": 45276, "user_id": 176922, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/621b61c5445afea7639b4cf6bb7c455a?s=128&d=identicon&r=PG", "display_name": "Benjamin Bannier", "link": "https://stackoverflow.com/users/176922/benjamin-bannier"}, "reply_to_user": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571227612, "post_id": 58411787, "comment_id": 103168840, "body": "Just insert in place?"}, {"owner": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571227989, "post_id": 58411787, "comment_id": 103169058, "body": "I don&#39;t understand. Please, look and correct my example. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cdc6edebc8c38be79891997e65b71cf3\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 45276, "user_id": 176922, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/621b61c5445afea7639b4cf6bb7c455a?s=128&d=identicon&r=PG", "display_name": "Benjamin Bannier", "link": "https://stackoverflow.com/users/176922/benjamin-bannier"}, "reply_to_user": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571228576, "post_id": 58411787, "comment_id": 103169415, "body": "I still don&#39;t know what the actual use case is beyond an experiment with lifetimes, but I meant this, <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7a232a2b76c6280e2dddb7713c0161ea\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}, {"owner": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571228924, "post_id": 58411787, "comment_id": 103169609, "body": "I would like modify map (add element) and print map (in next step). I solved it like this:  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3741cfcef12d41763354173e90cf8480\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> Question: Can it be solved in C ++ style (by passing ref)?"}, {"owner": {"reputation": 45276, "user_id": 176922, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/621b61c5445afea7639b4cf6bb7c455a?s=128&d=identicon&r=PG", "display_name": "Benjamin Bannier", "link": "https://stackoverflow.com/users/176922/benjamin-bannier"}, "reply_to_user": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571229776, "post_id": 58411787, "comment_id": 103170098, "body": "No, I don&#39;t think this can be solved &quot;C++ style&quot;. Already in C++ it is not clear whether <code>add_to_map</code> stores <code>map</code> away somewhere else so one would need to keep the original <code>map</code> in place. One workaround for that in C++ are comments which are not checked by the compiler. One could also encode this in the signature by requiring <code>map</code> to be passed as a non-copyable value (e.g., <code>unique_pt&lt;map&gt;</code>) to signal transfer of ownership and then repopulate the source value by returning a similar value from the function. The difference with Rust is that the unsafe pass by reference is illegal."}, {"owner": {"reputation": 45276, "user_id": 176922, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/621b61c5445afea7639b4cf6bb7c455a?s=128&d=identicon&r=PG", "display_name": "Benjamin Bannier", "link": "https://stackoverflow.com/users/176922/benjamin-bannier"}, "reply_to_user": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "edited": false, "score": 0, "creation_date": 1571229823, "post_id": 58411787, "comment_id": 103170135, "body": "I&#39;d go with <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=35d21d0257b4fd459f153bf5b9d7def2\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>. As <code>HashMap</code> stores most of its data on the heap this should not be too inefficient."}], "tags": [], "owner": {"reputation": 45276, "user_id": 176922, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/621b61c5445afea7639b4cf6bb7c455a?s=128&d=identicon&r=PG", "display_name": "Benjamin Bannier", "link": "https://stackoverflow.com/users/176922/benjamin-bannier"}, "is_accepted": true, "score": 4, "last_activity_date": 1571224259, "last_edit_date": 1571224259, "creation_date": 1571223758, "answer_id": 58411787, "question_id": 58411395, "link": "https://stackoverflow.com/questions/58411395/passing-variables-to-function-and-lifetime/58411787#58411787", "title": "Passing variables to function and lifetime", "body": "<pre><code>9  | fn add_to_map&lt;'l&gt;(map: &amp;'l HashMap&lt;u32, &amp;'l Foo&gt;,  element : &amp;'l Foo) \n   |                                             ---                  --- these two types are declared with different lifetimes...\n10\n</code></pre>\n\n<p><code>Foo&lt;'a&gt;</code> appears twice here (<code>'a</code> is the lifetime of <code>x</code> inside <code>Foo</code>). Since you didn't give explicit values for the lifetime <code>'a</code>, the compiler will assume that the <code>Foo</code> as the <code>HashMap</code> value and <code>element</code> <code>Foo</code> will have different lifetimes <code>'a</code>. This approach works well in general.</p>\n\n<p>However, you want to actually insert <code>element</code> into <code>map</code> which requires\nmatching lifetimes. The compiler rejects your code since the lifetimes do not\nmatch. You need to be explicit about the lifetimes of the <code>x</code> inside <code>Foo</code>, e.g.,</p>\n\n<pre><code>// Verbose.\nfn add_to_map&lt;'l&gt;(map: &amp;'l mut HashMap&lt;u32, &amp;'l Foo&lt;'l&gt;&gt;,  element : &amp;'l Foo&lt;'l&gt;) \n</code></pre>\n\n<p>You do not <em>need</em> to give an explicit lifetime of <code>map</code> itself since the compiler can verify at the callsite that <code>map</code> lives at least as long as <code>element</code>,</p>\n\n<pre><code>// Slightly less verbose.\nfn add_to_map&lt;'l&gt;(map: &amp;mut HashMap&lt;u32, &amp;'l Foo&lt;'l&gt;&gt;,  element : &amp;'l Foo&lt;'l&gt;) \n</code></pre>\n\n<p>Note that in any case <code>map</code> needs to be <code>mut</code> in <code>add_to_map</code>.</p>\n"}], "owner": {"reputation": 144, "user_id": 5613164, "user_type": "registered", "profile_image": "https://graph.facebook.com/959533824107532/picture?type=large", "display_name": "Micha\u0142 Hanusek", "link": "https://stackoverflow.com/users/5613164/micha%c5%82-hanusek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 1, "accepted_answer_id": 58411787, "answer_count": 1, "score": 1, "last_activity_date": 1571224259, "creation_date": 1571222459, "question_id": 58411395, "link": "https://stackoverflow.com/questions/58411395/passing-variables-to-function-and-lifetime", "title": "Passing variables to function and lifetime", "body": "<p>I want passing <strong>HashMap</strong> and element - <strong>Foo</strong> to my <strong>function</strong>. \nI don't understand variables lifetimes. Please help.</p>\n\n<p>Result : error[<strong>E0623</strong>]: <strong>lifetime mismatch</strong> </p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug)]\nstruct Foo&lt;'a&gt; {\n    x: &amp;'a i32,\n}\n\nfn add_to_map&lt;'l&gt;(map: &amp;'l HashMap&lt;u32, &amp;'l Foo&gt;,  element : &amp;'l Foo) \n{\n    map.insert(1, element);\n}\n\nfn main()\n{\n    let mut map: HashMap&lt;u32, &amp;Foo&gt; = HashMap::new();\n\n    let v = 5;\n    let mut f = Foo { x: &amp;v };\n    add_to_map(&amp;map, &amp;f);\n    println!(\"now f is {:?}\", f);\n}\n</code></pre>\n\n<p>Compiler output:</p>\n\n<pre><code>error[E0623]: lifetime mismatch\n  --&gt; src/main.rs:11:19\n   |\n9  | fn add_to_map&lt;'l&gt;(map: &amp;'l HashMap&lt;u32, &amp;'l Foo&gt;,  element : &amp;'l Foo) \n   |                                             ---                  --- these two types are declared with different lifetimes...\n10 | {\n11 |     map.insert(1, element);\n   |                   ^^^^^^^ ...but data from `element` flows into `map` here\n\nerror: aborting due to previous error\n</code></pre>\n"}, {"tags": ["rust", "debug-symbols", "rust-cargo", "jemalloc"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1571212909, "post_id": 58408153, "comment_id": 103160787, "body": "Are you interested in the memory or in the impact on the executable size ?"}, {"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1571213759, "post_id": 58408153, "comment_id": 103161234, "body": "Main interest is to know about memory, but impact on executable size also matters a lot. Basically I need to know about both :)"}, {"owner": {"reputation": 471, "user_id": 2319934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/df4fd94526342e5486f1df4362c33abe?s=128&d=identicon&r=PG", "display_name": "SplittyDev", "link": "https://stackoverflow.com/users/2319934/splittydev"}, "edited": false, "score": 0, "creation_date": 1571222825, "post_id": 58408153, "comment_id": 103166127, "body": "As far as I know, jemalloc doesn&#39;t ship with Rust anymore. It should use the system allocator. See <a href=\"https://internals.rust-lang.org/t/jemalloc-was-just-removed-from-the-standard-library/8759\" rel=\"nofollow noreferrer\">this post from November 2018</a> and <a href=\"https://github.com/rust-lang/rust/pull/55238\" rel=\"nofollow noreferrer\">this PR</a>. This shipped in 1.32.0."}], "owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1571240909, "creation_date": 1571211544, "last_edit_date": 1571211637, "question_id": 58408153, "link": "https://stackoverflow.com/questions/58408153/how-much-memory-is-consumed-by-jemalloc-debug-symbol-and-panic-how-to-find-thi", "title": "How much memory is consumed by Jemalloc, Debug Symbol and Panic? how to find this ? where it is located?", "body": "<p>I am new to RUST as well as for programming. I just wrote LED blinking program on raspberry pi 3 using RUST language. It worked well.\nMy debug binary file size is 4.7MB. Its really huge. So I released the file and it got reduced to 2.5MB. I found that due to default operation of Jemalloc, Debug symbol and Panic Rust executables are very large.    Can somebody help me out how much memory is consumed by Jemalloc, Debug Symbol and Panic? How to find this ? where it is located? How can I remove or deallocate Jemalloc?</p>\n\n<p>I am working with Rust 1.38.0 stable version on Raspberry pi 3 using Visual studio code IDE.</p>\n\n<p>main.rs file</p>\n\n<pre><code>use rust_gpiozero::*;\nuse std::thread;\nuse std::time::Duration;\n\n\nfn main() {\n  //create a new LEd attached to pin 17\n  let led = LED::new(17);\n\n  //blink the led 5 times\n  for _ in 0.. 5{\n      led.on();\n      thread::sleep(Duration::from_secs(10));\n      led.off();\n      thread::sleep(Duration::from_secs(10));\n\n  }\n}\n</code></pre>\n\n<p>cargo.toml file</p>\n\n<pre><code>[package]\nname = \"led_blink\"\nversion = \"0.1.0\"\nauthors = [\"pi\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nlibc = \"0.2\"\nrust_gpiozero = \"0.2.0\"\n\n[profile.release]\ncodegen-units = 1\n\n</code></pre>\n\n<p>I want to know about how much memory consumed by jemalloc, debug symbol and panic in total size. and how to remove/Deactivate all three operation by default.\nLooking for help, Thank you</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 3849, "user_id": 5198595, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2e45c7ec5cb67cf3cdf2186d8037e29?s=128&d=identicon&r=PG&f=1", "display_name": "Sunreef", "link": "https://stackoverflow.com/users/5198595/sunreef"}, "edited": false, "score": 0, "creation_date": 1571298522, "post_id": 58407029, "comment_id": 103196122, "body": "I&#39;d argue this question is not a duplicate of the other one. The title of the question is confusing but the OP is not asking how he can run an example but why it works in his case."}], "answers": [{"tags": [], "owner": {"reputation": 3849, "user_id": 5198595, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2e45c7ec5cb67cf3cdf2186d8037e29?s=128&d=identicon&r=PG&f=1", "display_name": "Sunreef", "link": "https://stackoverflow.com/users/5198595/sunreef"}, "is_accepted": false, "score": 3, "last_activity_date": 1571210390, "creation_date": 1571210390, "answer_id": 58407820, "question_id": 58407029, "link": "https://stackoverflow.com/questions/58407029/how-to-run-examples-of-a-rust-project/58407820#58407820", "title": "how to run examples of a rust project", "body": "<p>To answer your first question, the <code>crypto/stark</code> folder is added to the <code>workspace</code> section of the root's <code>Cargo.toml</code>. See <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">the Cargo book</a> about how this section works: </p>\n\n<blockquote>\n  <p>Whenever any crate in the workspace is compiled, output is placed in the workspace root (i.e., next to the root crate's Cargo.toml).</p>\n</blockquote>\n\n<p>For your second question, the <code>small_fib.rs</code> file is placed in the <code>examples</code> folder of <code>crypto/stark</code>. It can be run directly as an example. I found <a href=\"http://xion.io/post/code/rust-examples.html\" rel=\"nofollow noreferrer\">this article</a> to be very informative about Rust examples.</p>\n\n<blockquote>\n  <p>The important thing is that you don\u2019t have to worry what to do with your example code anymore. All you need to do is drop it in the examples/ directory, and let Cargo do the rest.</p>\n</blockquote>\n"}], "owner": {"reputation": 1189, "user_id": 602874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/984aa8b5504603ba7b78775f12d2d958?s=128&d=identicon&r=PG", "display_name": "user602874", "link": "https://stackoverflow.com/users/602874/user602874"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1022, "favorite_count": 0, "closed_date": 1571240635, "answer_count": 1, "score": 3, "last_activity_date": 1571210390, "creation_date": 1571207436, "question_id": 58407029, "link": "https://stackoverflow.com/questions/58407029/how-to-run-examples-of-a-rust-project", "closed_reason": "Duplicate", "title": "how to run examples of a rust project", "body": "<p>1/ It happened to me run examples in this repo <a href=\"https://github.com/0xProject/OpenZKP\" rel=\"nofollow noreferrer\">https://github.com/0xProject/OpenZKP</a></p>\n\n<p>One of way to an example is </p>\n\n<pre><code>cargo run --release --example small_fib\n</code></pre>\n\n<p>I'm just curious why we can run the example <code>small_fib</code> at the root directory even the example small_fib is located in a subdir project as this repo consists of multiple projects.</p>\n\n<p>2/ Another question is that the <code>small_fib</code> example was not specified in example section of the Cargo.toml but we can execute it with</p>\n\n<pre><code>cargo run --release --example small_fib\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1571206648, "post_id": 58405539, "comment_id": 103157850, "body": "As a side note, your <code>no_immediate_children</code> counts <b>all</b> the children recursively, not just the immediate ones\u2026"}, {"owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1571236678, "post_id": 58405539, "comment_id": 103174618, "body": "@Jmb thanks, I have edited that in my code."}], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": true, "score": 2, "last_activity_date": 1571237242, "last_edit_date": 1571237242, "creation_date": 1571199603, "answer_id": 58405708, "question_id": 58405539, "link": "https://stackoverflow.com/questions/58405539/hashmap-inside-struct-error-cannot-move-out-of-xxx-which-is-behind-a-shared-ref/58405708#58405708", "title": "HashMap inside struct error: cannot move out of xxx which is behind a shared reference", "body": "<p>The issue is that <code>.into_iter(self)</code> needs to take ownership of the <code>HashMap</code>, but in <code>no_immediate_children(&amp;self)</code> the <code>HashMap</code> is behind a reference -> i.e. <code>&amp;self</code> instead of <code>self</code>;</p>\n\n<p>You can work around that in two ways, depending on what you want to achieve:</p>\n\n<ol>\n<li><p>If you want to consume the elements of the hash map and leave it empty after the method invocation:</p>\n\n<ul>\n<li>Change the receiver to <code>&amp;mut self</code></li>\n<li><p>Use <code>.drain()</code> instead of <code>.into_iter()</code>: </p>\n\n<pre><code>self.children.drain().map(|(_, mut v)| v.no_immediate_children()).sum::&lt;usize&gt;() + 1\n</code></pre></li>\n</ul></li>\n<li><p>If you just want to get the sum, but do not want to modify the <code>HashMap</code>:</p>\n\n<ul>\n<li><p>Use <code>.iter()</code> instead of <code>.into_iter()</code>:</p>\n\n<pre><code>self.children.iter().map(|(_k, v)| v.no_immediate_children()).sum::&lt;usize&gt;() + 1\n</code></pre></li>\n</ul></li>\n<li><p>You want to consume the whole <code>Node</code> chain:</p>\n\n<ul>\n<li>Change the method signature to <code>fn no_immediate_children(self)</code> and use <code>.into_iter()</code> as it is. </li>\n</ul></li>\n</ol>\n"}], "owner": {"reputation": 1058, "user_id": 2797757, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/4db8a84f0f567cc5df66a9a480ce5b08?s=128&d=identicon&r=PG&f=1", "display_name": "hydradon", "link": "https://stackoverflow.com/users/2797757/hydradon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1112, "favorite_count": 0, "closed_date": 1571237139, "accepted_answer_id": 58405708, "answer_count": 1, "score": 0, "last_activity_date": 1571237300, "creation_date": 1571198115, "last_edit_date": 1571237300, "question_id": 58405539, "link": "https://stackoverflow.com/questions/58405539/hashmap-inside-struct-error-cannot-move-out-of-xxx-which-is-behind-a-shared-ref", "closed_reason": "Duplicate", "title": "HashMap inside struct error: cannot move out of xxx which is behind a shared reference", "body": "<p>I have the following Rust structure which has a <code>HashMap</code> to children structures.</p>\n\n<pre><code>use std::collections::HashMap;\n\n#[derive(Debug)]\nstruct Node {\n    children: HashMap&lt;i32, Node&gt;,\n}\n\nimpl Node {\n    fn no_children(&amp;self) -&gt; usize {\n        if self.children.is_empty() {\n            1\n        } else {\n            1 + self\n                .children\n                .into_iter()\n                .map(|(_, child)| child.no_children())\n                .sum::&lt;usize&gt;()\n        }\n    }\n}\n</code></pre>\n\n<p>I implemented <code>no_children(&amp;self)</code> to find the total number of nodes. However, under <code>self.children</code>, Rust highlights an error because:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of `self.children` which is behind a shared reference\n  --&gt; src/lib.rs:13:17\n   |\n13 |               1 + self\n   |  _________________^\n14 | |                 .children\n   | |_________________________^ move occurs because `self.children` has type `std::collections::HashMap&lt;i32, Node&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I am not sure what is missing. I have tried adding <code>&amp;self.children...</code> but still got the same error.</p>\n"}, {"tags": ["rust", "move"], "answers": [{"comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571204990, "post_id": 58405500, "comment_id": 103157243, "body": "What is the &quot;parent element&quot; in this case?"}], "tags": [], "owner": {"reputation": 2453, "user_id": 1853243, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ka9z.jpg?s=128&g=1", "display_name": "Sreeram Nair", "link": "https://stackoverflow.com/users/1853243/sreeram-nair"}, "is_accepted": false, "score": 0, "last_activity_date": 1571197817, "creation_date": 1571197817, "answer_id": 58405500, "question_id": 58405404, "link": "https://stackoverflow.com/questions/58405404/why-the-value-is-not-moved-with-option-unwrap/58405500#58405500", "title": "Why the value is not moved with Option unwrap?", "body": "<p>The <code>unwrap()</code> method is used to remove the parent element from the selected element and not the element itself. </p>\n\n<p>Lets say <code>Y</code> is parent for 'X' and 'Z' is parent of 'Y' then when you say <code>x.unwrap()</code> X's parent 'Y' is removed and 'Z' becomes the parent of 'X' and now when you say <code>x.unwrap()</code> again then 'Z' is removed.</p>\n"}, {"comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1571202848, "post_id": 58405641, "comment_id": 103156531, "body": "<code>x</code> is <code>Option&lt;&amp;str&gt;</code>, not <code>Option&lt;String&gt;</code>. <code>Option&lt;String&gt;</code> doesn&#39;t implement <code>Copy</code>."}, {"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "reply_to_user": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1571204751, "post_id": 58405641, "comment_id": 103157162, "body": "@SCappella Thanks for the clarification. Updated!"}], "tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": false, "score": 2, "last_activity_date": 1571204762, "last_edit_date": 1571204762, "creation_date": 1571198851, "answer_id": 58405641, "question_id": 58405404, "link": "https://stackoverflow.com/questions/58405404/why-the-value-is-not-moved-with-option-unwrap/58405641#58405641", "title": "Why the value is not moved with Option unwrap?", "body": "<p>Just figured out, <code>x</code> in OP is not moved because <code>Option&lt;&amp;str&gt;</code> implements the <code>Copy</code> trait. On the other hand if the inner type in the option is a more complex type for instance a <code>struct</code>, this wouldn't work:</p>\n\n<pre><code>struct Node&lt;T&gt; { elem: T }\n\nlet y = Some(Node { elem: 3});\n\nprintln!(\"{}\", y.unwrap().elem);\nprintln!(\"{}\", y.unwrap().elem);\n</code></pre>\n\n<p>will give the following error:</p>\n\n<blockquote>\n<pre><code>Line 33, Char 24: use of moved value: `y` (solution.rs)\n   |\n32 |         println!(\"{}\", y.unwrap().elem);\n   |                        - value moved here\n33 |         println!(\"{}\", y.unwrap().elem);\n   |                        ^ value used here after move\n   |\n</code></pre>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "edited": false, "score": 0, "creation_date": 1571204849, "post_id": 58406018, "comment_id": 103157196, "body": "Good answer. Thanks!"}], "tags": [], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "is_accepted": true, "score": 5, "last_activity_date": 1571205425, "last_edit_date": 1571205425, "creation_date": 1571201986, "answer_id": 58406018, "question_id": 58405404, "link": "https://stackoverflow.com/questions/58405404/why-the-value-is-not-moved-with-option-unwrap/58406018#58406018", "title": "Why the value is not moved with Option unwrap?", "body": "<p>You are confusing <code>&amp;str</code> with <code>String</code>, which rather is not <code>Copy</code>. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    // This will work fine.\n    let x = Some(\"data\");\n    println!(\"{:?}\", x.unwrap());\n    println!(\"{:?}\", x.unwrap());\n\n    // however, this will generate an error since value will be moved.\n    let x = Some(\"data\".to_string());\n    println!(\"{:?}\", x.unwrap());\n    println!(\"{:?}\", x.unwrap());\n}\n</code></pre>\n"}], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "accepted_answer_id": 58406018, "answer_count": 3, "score": 1, "last_activity_date": 1571205425, "creation_date": 1571197055, "question_id": 58405404, "link": "https://stackoverflow.com/questions/58405404/why-the-value-is-not-moved-with-option-unwrap", "title": "Why the value is not moved with Option unwrap?", "body": "<p>New to rust here and trying to learn. Consider the following piece of code:</p>\n\n<pre><code>let x = Some(\"air\");\nprintln!(\"{}\", x.unwrap());\nprintln!(\"{}\", x.unwrap());\n</code></pre>\n\n<p>Why does this work? Because the <code>unwrap</code> method has the following signature <code>pub fn unwrap(self) -&gt; T</code>, so it should move <code>self</code> into the method, which means after the first call of <code>x.unwrap</code>, I shouldn't be able to access <code>x</code> anymore. However this still works? Can someone explain what misunderstanding I am taking here?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 1, "creation_date": 1571202332, "post_id": 58405293, "comment_id": 103156417, "body": "rustfmt can do that! It does require nightly to merge everything, though."}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 1, "last_activity_date": 1571205526, "last_edit_date": 1571205526, "creation_date": 1571202268, "answer_id": 58406053, "question_id": 58405293, "link": "https://stackoverflow.com/questions/58405293/is-there-a-rust-crate-or-cargo-upgrade-that-can-format-imports/58406053#58406053", "title": "Is there a Rust crate or Cargo upgrade that can format imports?", "body": "<p>Actually <code>rustfmt</code> can do this. Create a <code>rustfmt.toml</code> configuration file in your project directory and specify the following:</p>\n\n<pre><code>merge_imports = true\n</code></pre>\n\n<p>The <code>rustfmt</code> has <a href=\"https://rust-lang.github.io/rustfmt/\" rel=\"nofollow noreferrer\">more configurable options</a> if you are interested.</p>\n"}], "owner": {"reputation": 29, "user_id": 4602323, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/019fd245686fb0c4b85042d8688fcf6f?s=128&d=identicon&r=PG", "display_name": "Robust Systems 8472-1488", "link": "https://stackoverflow.com/users/4602323/robust-systems-8472-1488"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1573006856, "creation_date": 1571196266, "last_edit_date": 1573006856, "question_id": 58405293, "link": "https://stackoverflow.com/questions/58405293/is-there-a-rust-crate-or-cargo-upgrade-that-can-format-imports", "title": "Is there a Rust crate or Cargo upgrade that can format imports?", "body": "<p>Is there a way to optimize and format all crate imports in scope, to clean up the imports sections? The problem is that the imports get crowded and stack up.</p>\n\n<p>Before:</p>\n\n<pre><code>use actix_web::web::{Data, Payload};\nuse actix_web::Error;\nuse actix_web::{\n    error::{BlockingError, ErrorUnauthorized},\n    web, HttpResponse,\n};\n</code></pre>\n\n<p>After:</p>\n\n<pre><code>use actix_web::{web::\n                {Data, Payload},\n                Error,\n                error::{BlockingError, ErrorUnauthorized},\n                web, HttpResponse,\n};\n</code></pre>\n"}, {"tags": ["debugging", "rust", "emscripten", "webassembly"], "answers": [{"comments": [{"owner": {"reputation": 2662, "user_id": 377248, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2ff67f64a05a15eceb6de6a9421b15d8?s=128&d=identicon&r=PG", "display_name": "clinux", "link": "https://stackoverflow.com/users/377248/clinux"}, "edited": false, "score": 0, "creation_date": 1571433226, "post_id": 58442047, "comment_id": 103253439, "body": "Rather nice. Just need to be able to debug it running within an app. Remote debugging support maybe."}, {"owner": {"reputation": 2662, "user_id": 377248, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2ff67f64a05a15eceb6de6a9421b15d8?s=128&d=identicon&r=PG", "display_name": "clinux", "link": "https://stackoverflow.com/users/377248/clinux"}, "edited": false, "score": 0, "creation_date": 1571434081, "post_id": 58442047, "comment_id": 103253706, "body": "Actually JIT debug support from lldb/gdb should allow it to be debugged within its parent app."}], "tags": [], "owner": {"reputation": 306, "user_id": 11948273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1da02f7ef7d9268c6b67b5baf8276867?s=128&d=identicon&r=PG&f=1", "display_name": "The Wayward Developer", "link": "https://stackoverflow.com/users/11948273/the-wayward-developer"}, "is_accepted": true, "score": 1, "last_activity_date": 1571355486, "creation_date": 1571355486, "answer_id": 58442047, "question_id": 58402459, "link": "https://stackoverflow.com/questions/58402459/can-rust-and-cyberdwarf-be-used-together/58442047#58442047", "title": "Can Rust and CyberDWARF be used together?", "body": "<p>Not CyberDWARF, but you can use LLDB with Wasmtime: <a href=\"https://hacks.mozilla.org/2019/09/debugging-webassembly-outside-of-the-browser/\" rel=\"nofollow noreferrer\">https://hacks.mozilla.org/2019/09/debugging-webassembly-outside-of-the-browser/</a></p>\n"}], "owner": {"reputation": 2662, "user_id": 377248, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2ff67f64a05a15eceb6de6a9421b15d8?s=128&d=identicon&r=PG", "display_name": "clinux", "link": "https://stackoverflow.com/users/377248/clinux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 58442047, "answer_count": 1, "score": 0, "last_activity_date": 1571355486, "creation_date": 1571172608, "last_edit_date": 1571172752, "question_id": 58402459, "link": "https://stackoverflow.com/questions/58402459/can-rust-and-cyberdwarf-be-used-together", "title": "Can Rust and CyberDWARF be used together?", "body": "<p>Emscripten provides CyberDWARF for inspecting variables at runtime via the console as a JS API. Is it possible to use CyberDWARF when compiling Rust to asm.js or Wasm?</p>\n\n<p>Source maps are possible, but it would be nice to be able to inspect variables that appear in the original source.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571167363, "post_id": 58401281, "comment_id": 103147870, "body": "See also <a href=\"https://stackoverflow.com/q/28277230/155423\">Error: \u201cuse of moved value\u201d</a>; <a href=\"https://stackoverflow.com/q/41664099/155423\">How to prevent a value from being moved?</a>; <a href=\"https://stackoverflow.com/q/49309847/155423\">How can I solve \u201cuse of moved value\u201d and \u201cwhich does not implement the <code>Copy</code> trait\u201d?</a>; <a href=\"https://stackoverflow.com/q/54993331/155423\">Option&lt;Receiver&gt; Moved in Previous Loop Iteration</a> etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571167395, "post_id": 58401281, "comment_id": 103147888, "body": "You may also wish to re-read <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html\" rel=\"nofollow noreferrer\">What Is Ownership?</a> and <a href=\"https://doc.rust-lang.org/book/ch05-03-method-syntax.html#defining-methods\" rel=\"nofollow noreferrer\">Defining Methods</a> in <i>The Rust Programming Language</i>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571167435, "post_id": 58401281, "comment_id": 103147908, "body": "You probably want <code>fn push(&amp;mut self, task: Task)</code>"}], "owner": {"reputation": 1092, "user_id": 3865359, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VEZxa.png?s=128&g=1", "display_name": "James Flight", "link": "https://stackoverflow.com/users/3865359/james-flight"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "closed_date": 1571167311, "answer_count": 0, "score": 0, "last_activity_date": 1571167239, "creation_date": 1571166895, "last_edit_date": 1571167239, "question_id": 58401281, "link": "https://stackoverflow.com/questions/58401281/what-is-the-most-idiomatic-way-of-using-struct-methods-that-modify-the-structs", "closed_reason": "Duplicate", "title": "What is the most idiomatic way of using struct methods that modify the struct&#39;s internal state from within a loop?", "body": "<p>It seems to be fine to modify a vector on its own, but as soon as it is wrapped in a struct, it can not be mutated by a method on the struct.</p>\n\n<p>I've created a very simplified version of my use case below, in two versions, one with just a vector, and one with a struct.</p>\n\n<p>Why is it that this code is fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Task {\n    foo: String,\n}\n\nfn main() {\n    let mut list_of_tasks = Vec::new();\n\n    loop {\n        list_of_tasks.push(Task {\n            foo: String::from(\"bar\"),\n        });\n    }\n}\n</code></pre>\n\n<p>But this is not:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Task {\n    foo: String,\n}\n\nstruct ListOfTasks(pub Vec&lt;Task&gt;);\n\nimpl ListOfTasks {\n    fn push(mut self, task: Task) {\n        self.0.push(task);\n    }\n}\n\nfn main() {\n    let list_of_tasks = ListOfTasks(Vec::new());\n\n    loop {\n        list_of_tasks.push(Task {\n            foo: String::from(\"bar\"),\n        });\n    }\n}\n</code></pre>\n\n<p>The second example fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `list_of_tasks`\n  --&gt; src/main.rs:17:9\n   |\n14 |     let list_of_tasks = ListOfTasks(Vec::new());\n   |         ------------- move occurs because `list_of_tasks` has type `ListOfTasks`, which does not implement the `Copy` trait\n...\n17 |         list_of_tasks.push(Task {\n   |         ^^^^^^^^^^^^^ value moved here, in previous iteration of loop\n</code></pre>\n\n<p>I think I'm not understanding something about moving a struct that uses <code>mut self</code>, but can't find any obvious examples online of how to approach this.</p>\n"}, {"tags": ["rust", "macros", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 1, "last_activity_date": 1571208730, "creation_date": 1571208730, "answer_id": 58407348, "question_id": 58400467, "link": "https://stackoverflow.com/questions/58400467/how-do-i-provide-optional-generics-as-macro-rules-arguments/58407348#58407348", "title": "How do I provide optional generics as macro_rules arguments?", "body": "<p>You can use the <code>lifetime</code> specifier to match lifetimes in macro arguments:</p>\n\n<pre><code>trait Foo{}\n\nmacro_rules!impl_foo {\n    ($($l:lifetime),*; $t:tt) =&gt; { impl&lt;$($l),*&gt; Foo for $t&lt;$($l),*&gt; {} };\n    ($t:ty) =&gt; { impl Foo for $t {} };\n}\n</code></pre>\n\n<p>And call it like this:</p>\n\n<pre><code>impl_foo!(A);\nimpl_foo!('a, 'b; B);\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=80e92d010fe6bc89e19b3829f4789f47\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Note that the only place I could find that talked of the <code>lifetime</code> specifier for captures is <a href=\"https://github.com/rust-lang/rfcs/pull/1590\" rel=\"nofollow noreferrer\">the associated RFC</a>. It is in particular conspicuously missing from <a href=\"https://danielkeep.github.io/tlborm/book/mbe-macro-rules.html#captures\" rel=\"nofollow noreferrer\">The little book of Rust macros</a>, even though it was merged in 2016\u2026</p>\n"}], "owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 0, "accepted_answer_id": 58407348, "answer_count": 1, "score": 0, "last_activity_date": 1571402130, "creation_date": 1571163252, "last_edit_date": 1571402130, "question_id": 58400467, "link": "https://stackoverflow.com/questions/58400467/how-do-i-provide-optional-generics-as-macro-rules-arguments", "title": "How do I provide optional generics as macro_rules arguments?", "body": "<p>I want to use <code>macro_rules</code> to create an implementation for a trait. The types should be given as macro arguments. However, some of those types may contain lifetimes, so I need them. I also have a generic type from inside the macro. The result should look like</p>\n\n<pre><code>impl&lt;T&gt; Foo&lt;T&gt; for MyType { .. }\n// Or with lifetime:\nimpl&lt;'a, 'b, T&gt; Foo&lt;T&gt; for LifetimeType&lt;'a, 'b&gt; { .. }\n</code></pre>\n\n<p>How do I structure the macro and how do I call it?</p>\n"}, {"tags": ["rust", "malloc"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571158454, "post_id": 58398469, "comment_id": 103144170, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/51988630/155423\">How can I get Serde to allocate strings from an arena during deserialization?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58398469/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571158485, "post_id": 58398469, "comment_id": 103144185, "body": "You found an environment variable that you think would be helpful, so what happens when you <i>try it</i>?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1571159480, "post_id": 58398469, "comment_id": 103144592, "body": "Do you have control over the generated JSON? A 200Mb JSON file seems wrong."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1571160085, "post_id": 58398469, "comment_id": 103144853, "body": "A 200MB JSON file indicates the wrong format for the job... and why do you you need all of it in memory all the time anyway? Can&#39;t you keep the positions of sub-elements in memory and use a streaming parser + LRU structure?"}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1571164823, "post_id": 58398469, "comment_id": 103146828, "body": "@S&#233;bastienRenauld - Yes, whole data is required in memory. It can be saved to disk when idle though but when needed, all of it needs to be available."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 0, "creation_date": 1571164873, "post_id": 58398469, "comment_id": 103146848, "body": "I dont know what should be the right format. JSON worked easily so I chose that.."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1571164879, "post_id": 58398469, "comment_id": 103146854, "body": "Have you mapped out access patterns on it? As in, do you have hot and cold segments of the JSON data? If so, there may be better options than having all of it in memory."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571164924, "post_id": 58398469, "comment_id": 103146879, "body": "@Shepmaster I tried the variable. When setting too low (&lt; 512) whole programs becomes too slow. On high value it doesn&#39;t have any effect."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1571164989, "post_id": 58398469, "comment_id": 103146903, "body": "@S&#233;bastienRenauld I wish there were. The data is basically used from a text matching engine and the engine needs whole data."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1571165060, "post_id": 58398469, "comment_id": 103146940, "body": "This sounds an awful lot like you&#39;re trying to build a fulltext search engine. I&#39;ve been there, and the solution is two arenas if you&#39;d like to avoid fragmentation."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 0, "creation_date": 1571165067, "post_id": 58398469, "comment_id": 103146943, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/200915/discussion-between-sebastien-renauld-and-gurwinder-singh\">continue this discussion in chat</a>."}, {"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1571165418, "post_id": 58398469, "comment_id": 103147090, "body": "@S&#233;bastienRenauld You&#39;re right. Why two arenas?"}], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 90, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1571167473, "creation_date": 1571154556, "last_edit_date": 1571167473, "question_id": 58398469, "link": "https://stackoverflow.com/questions/58398469/allocate-large-struct-from-mmap-using-malloc-mmap-threshold", "title": "Allocate large struct from mmap using MALLOC_MMAP_THRESHOLD_", "body": "<p>I have a big struct (~200Mb) that I deserialize from a large JSON file from Java using serde_json and this deserialization occurs again when new data is available. The struct has <code>Vec</code>s, a <code>HashMap</code> of strings and structs of strings, etc.</p>\n\n<p>While looking at <a href=\"http://man7.org/linux/man-pages/man3/mallopt.3.html\" rel=\"nofollow noreferrer\">the man page for mallopt(3)</a>, I found that environment variable <code>MALLOC_MMAP_THRESHOLD_</code> can be set to control how much allocation has to be requested for malloc to allocate using mmap. I want to allocate my struct from mmap because the heap is causing memory fragmentation during reloads. I want the old deallocated memory (the one that is replaced with a new deserialized struct) to be returned to the system immediately (and not kept around by the one of the malloc arenas).</p>\n\n<p>Is there a way to achieve this? Should I be using some other data format?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571146989, "post_id": 58395921, "comment_id": 103137805, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/41413336/155423\">Do all primitive types implement the Copy trait?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58395921/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1571147564, "last_edit_date": 1571147564, "creation_date": 1571147493, "answer_id": 58396323, "question_id": 58395921, "link": "https://stackoverflow.com/questions/58395921/why-is-assigning-an-integer-value-from-a-vector-to-another-variable-allowed-in-r/58396323#58396323", "title": "Why is assigning an integer value from a vector to another variable allowed in Rust?", "body": "<p><code>number_list</code> is a list of integers, and integers implement the <a href=\"https://doc.rust-lang.org/stable/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code></a> trait, which means that they are never moved, but are copied instead. For this reason the array keeps ownership of its elements, and <code>largest</code> and <code>number</code> get copies of these elements.</p>\n\n<p>If you try to do the same with a non-copy type, then you get an error:</p>\n\n<pre><code>struct WrappedInt(i32);\n\nfn main() {\n    let number_list = vec![34, 50, 25, 100, 65]\n        .into_iter()\n        .map(|x| WrappedInt(x))\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    let mut largest = number_list[0];\n\n    for number in number_list {\n        if number.0 &gt; largest.0 {\n            largest = number;\n        }\n    }\n\n    println!(\"The largest number is {}\", largest.0);\n    assert_eq!(largest.0, 100);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f064ad491af1c754c275c51178caa4b2\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>gives:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of index of `std::vec::Vec&lt;WrappedInt&gt;`\n --&gt; src/main.rs:9:23\n  |\n9 |     let mut largest = number_list[0];\n  |                       ^^^^^^^^^^^^^^\n  |                       |\n  |                       move occurs because value has type `WrappedInt`, which does not implement the `Copy` trait\n  |                       help: consider borrowing here: `&amp;number_list[0]`\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 10701898, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ReNKL3ITStY/AAAAAAAAAAI/AAAAAAAAAA0/iqjjYhz67oE/photo.jpg?sz=128", "display_name": "Yeetesh Pulstya", "link": "https://stackoverflow.com/users/10701898/yeetesh-pulstya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "accepted_answer_id": 58396323, "answer_count": 1, "score": 2, "last_activity_date": 1571147564, "creation_date": 1571146158, "last_edit_date": 1571146979, "question_id": 58395921, "link": "https://stackoverflow.com/questions/58395921/why-is-assigning-an-integer-value-from-a-vector-to-another-variable-allowed-in-r", "title": "Why is assigning an integer value from a vector to another variable allowed in Rust?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let number_list = vec![34, 50, 25, 100, 65];\n\n    let mut largest = number_list[0];\n\n    for number in number_list {\n        if number &gt; largest {\n            largest = number;\n        }\n    }\n\n    println!(\"The largest number is {}\", largest);\n    assert_eq!(largest, 100);\n}\n</code></pre>\n\n<p>Shouldn't the ownership of first element in the array be given to largest and hence it shouldn't be usable in loop? </p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571138920, "post_id": 58393250, "comment_id": 103133001, "body": "Did you try to follow the type literally and return <code>Err(Box::new(...))</code>? Can&#39;t check right now (I&#39;m on mobile), but this might work."}, {"owner": {"reputation": 133, "user_id": 10671679, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c086dbf7713aa48a259a3d979f9442d6?s=128&d=identicon&r=PG&f=1", "display_name": "theBigCheese88", "link": "https://stackoverflow.com/users/10671679/thebigcheese88"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1571139243, "post_id": 58393250, "comment_id": 103133167, "body": "@Cerberus Hi, thanks for having a look. I tried doing: Box::new(Err(&quot;error&quot;)) which gave the compilation error expected enum <code>std::result::Result</code>, found struct <code>std::boxed::Box</code>          And also tried out your example:which gave the error the trait bound <code>&amp;str: std::error::Error</code> is not satisfied the trait <code>std::error::Error</code> is not implemented for <code>&amp;str</code> note: required for the cast to the object type <code>dyn std::error::Error</code>rustc(E0277)"}], "answers": [{"comments": [{"owner": {"reputation": 133, "user_id": 10671679, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c086dbf7713aa48a259a3d979f9442d6?s=128&d=identicon&r=PG&f=1", "display_name": "theBigCheese88", "link": "https://stackoverflow.com/users/10671679/thebigcheese88"}, "edited": false, "score": 2, "creation_date": 1571140287, "post_id": 58393844, "comment_id": 103133673, "body": "Thanks man, that solves the issue with the code. I will need to read more into RUST to fully understand the inner workings but this fix works as expected. much appreciated!"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": true, "score": 17, "last_activity_date": 1571140372, "last_edit_date": 1571140372, "creation_date": 1571139622, "answer_id": 58393844, "question_id": 58393250, "link": "https://stackoverflow.com/questions/58393250/returning-error-message-to-function-expecting-boxdyn-error/58393844#58393844", "title": "Returning error message to function expecting &#39;Box&lt;dyn Error&gt;&#39;", "body": "<p>Let's start with the absolute minimum reproduction of your issue:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\n\nfn foo() -&gt; Result&lt;String, Box&lt;dyn Error&gt;&gt; {\n    Err(\"Error...\")\n}\n</code></pre>\n\n<p>The error returned is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:4:9\n  |\n4 |     Err(\"Error...\")\n  |         ^^^^^^^^^^ expected struct `std::boxed::Box`, found reference\n  |\n  = note: expected type `std::boxed::Box&lt;dyn std::error::Error&gt;`\n             found type `&amp;'static str`\n</code></pre>\n\n<p>It's saying that the function signature expected you to return an <code>Err</code> containing a <code>Box</code>, but you actually returned a <code>&amp;str</code>. So let's box up that string:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\n\nfn foo() -&gt; Result&lt;String, Box&lt;dyn Error&gt;&gt; {\n    Err(Box::new(\"Error...\"))\n}\n</code></pre>\n\n<p>Now you get a new error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;str: std::error::Error` is not satisfied\n --&gt; src/lib.rs:4:9\n  |\n4 |     Err(Box::new(\"Error...\"))\n  |         ^^^^^^^^^^^^^^^^^^^^ the trait `std::error::Error` is not implemented for `&amp;str`\n  |\n  = note: required for the cast to the object type `dyn std::error::Error`\n</code></pre>\n\n<p>Again, the issue is that you're returning a type that does not match your function's signature - it's expecting the box to contain something that implements the <code>Error</code> trait, but if you <a href=\"https://doc.rust-lang.org/std/error/trait.Error.html#implementors\" rel=\"noreferrer\">look at the docs</a>, you'll notice that <code>&amp;str</code> is not one of the types that implements it. You need to wrap your string in a type that does implement <code>Error</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\nuse std::fmt;\n\n#[derive(Debug)]\nstruct StrError&lt;'a&gt;(&amp;'a str);\n\n// Error doesn't require you to implement any methods, but\n// your type must also implement Debug and Display.\nimpl&lt;'a&gt; Error for StrError&lt;'a&gt; {}\n\nimpl&lt;'a&gt; fmt::Display for StrError&lt;'a&gt;{\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        // Delegate to the Display impl for `&amp;str`:\n        self.0.fmt(f)\n    }\n}\n\nfn foo() -&gt; Result&lt;String, Box&lt;dyn Error&gt;&gt; {\n    Err(Box::new(StrError(\"Error...\")))\n}\n</code></pre>\n\n<p>This code compiles!</p>\n\n<p><strong>EDIT:</strong> I just found out myself that there's a simpler way to do this - there's an implementation of <code>From&lt;&amp;str&gt;</code> for <code>Box&lt;dyn Error&gt;</code>, so if you invoke that, you can avoid the above boilerplate. The same thing is happening under the hood though, more or less, and I hope the more detailed explanation was helpful!.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\n\nfn foo() -&gt; Result&lt;String, Box&lt;dyn Error&gt;&gt; {\n    Err(\"Error...\".into())\n    // `Err(Box::&lt;dyn Error&gt;::from(\"Error...\"))` would also work, but is more ugly!\n}\n</code></pre>\n"}], "owner": {"reputation": 133, "user_id": 10671679, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c086dbf7713aa48a259a3d979f9442d6?s=128&d=identicon&r=PG&f=1", "display_name": "theBigCheese88", "link": "https://stackoverflow.com/users/10671679/thebigcheese88"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2185, "favorite_count": 0, "accepted_answer_id": 58393844, "answer_count": 1, "score": 8, "last_activity_date": 1571140372, "creation_date": 1571137688, "last_edit_date": 1571138169, "question_id": 58393250, "link": "https://stackoverflow.com/questions/58393250/returning-error-message-to-function-expecting-boxdyn-error", "title": "Returning error message to function expecting &#39;Box&lt;dyn Error&gt;&#39;", "body": "<p>I am new to Rust and am trying to propagate errors to be handled in the calling function. From the official rust book I read that Result 'Box&lt; dyn Error>' is used to say capture any type of error but I haven't read far enough to understand how it actually works.  </p>\n\n<p>I have a function called:</p>\n\n<pre><code>fn foo() -&gt; Result&lt;String, Box&lt;dyn Error&gt;&gt; {\n    Command::new(\"an_executable\")\n        .args(&amp;[\"-p\", path])\n        .output()?;\n    if condition {\n        return Err(\"Error...\");\n    }\n    // Do stuff, return String \n}\n</code></pre>\n\n<p>So can someone explain how I should be returning an error if a condition is met with that return type. Do i have to change the return type or just return something different. what would the RUST standard be in this scenario?</p>\n\n<p>The current compilation error is that Err(\"Error...\") mismatched with the return type</p>\n"}, {"tags": ["text", "rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1571119764, "post_id": 58388057, "comment_id": 103123278, "body": "how about this ? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=58bd341a93f64fa7407ca83982652a0d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 3, "last_activity_date": 1571120617, "last_edit_date": 1571120617, "creation_date": 1571120363, "answer_id": 58388329, "question_id": 58388057, "link": "https://stackoverflow.com/questions/58388057/how-to-remove-all-whitespace-and-ascii-elements-like-n-from-my-html-in-rust/58388329#58388329", "title": "How to remove all whitespace and ASCII elements like &quot;\\n&quot; from my HTML in Rust?", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/stable/std/primitive.str.html#method.trim\" rel=\"nofollow noreferrer\"><code>trim</code></a> to remove whitespace from the ends of strings and <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.filter\" rel=\"nofollow noreferrer\"><code>filter</code></a> to remove empty strings from your vector:</p>\n\n<pre><code>let title_txt = title\n    .text()\n    .map(|s| s.trim())\n    .filter(|s| !s.is_empty())\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 10251395, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--jOugtxWcww/AAAAAAAAAAI/AAAAAAAAAAA/5Evak6OEzfc/photo.jpg?sz=128", "display_name": "Liam Seskis", "link": "https://stackoverflow.com/users/10251395/liam-seskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 522, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1571148273, "creation_date": 1571118973, "last_edit_date": 1571148273, "question_id": 58388057, "link": "https://stackoverflow.com/questions/58388057/how-to-remove-all-whitespace-and-ascii-elements-like-n-from-my-html-in-rust", "title": "How to remove all whitespace and ASCII elements like &quot;\\n&quot; from my HTML in Rust?", "body": "<p>I am writing something to extract product data from Amazon but I am not sure on how to normalize the whitespace in the HTML.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn parse_html(html: std::string::String) {\n    let fragment = Html::parse_fragment(&amp;html);\n    let product_title = Selector::parse(\".s-line-clamp-2\").unwrap();\n\n    for title in fragment.select(&amp;product_title) {\n        let title_txt = title.text().collect::&lt;Vec&lt;_&gt;&gt;();\n        println!(\"{:?}\", title_txt);\n    }\n}\n</code></pre>\n\n<p>This works but the data i get is like this <code>[\"\\n    \\n    \\n        \\n\\n\\n\\n\\n\", \"\\n    \\n        \\n            \\n                \", \"Men\\'s Sneakers\", \"\\n            \\n        \\n        \\n    \\n\", \"\\n\\n    \\n\"]</code></p>\n\n<p>I only want this: <code>[\"Men\\'s Sneakers\"]</code></p>\n"}, {"tags": ["java", "memory-management", "rust", "java-native-interface"], "comments": [{"owner": {"reputation": 15619, "user_id": 1548468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0745dce203d52699e63a575b3103ad70?s=128&d=identicon&r=PG", "display_name": "Botje", "link": "https://stackoverflow.com/users/1548468/botje"}, "edited": false, "score": 1, "creation_date": 1571129777, "post_id": 58387338, "comment_id": 103128240, "body": "Are you absolutely sure your struct layout matches the Java object layout? I could not reproduce this in C++ with <code>struct Point { \tuint32_t hdr[3]; \tdouble x, y; };</code> and <code>Point* point = *reinterpret_cast&lt;Point**&gt;(obj);</code> (macOS 10.14.6, openjdk 1.8.0_66-b17 64-bit)"}, {"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 2, "creation_date": 1571132428, "post_id": 58387338, "comment_id": 103129681, "body": "You have exactly zero information as to what lies inside the object referred to by <code>jobject</code>. Using <code>mem::transmute()</code> is therefore merely an exercise in unbridled optimism."}, {"owner": {"reputation": 15619, "user_id": 1548468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0745dce203d52699e63a575b3103ad70?s=128&d=identicon&r=PG", "display_name": "Botje", "link": "https://stackoverflow.com/users/1548468/botje"}, "reply_to_user": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1571132729, "post_id": 58387338, "comment_id": 103129842, "body": "@user207421 I thought so as well, but the OpenJDK implementation is relatively easy to follow: a <code>jobject</code> (search for <code>jobject_ref</code> or <code>JNIHandles::resolve_impl</code>) is actually a pointer to a <code>oop</code> object, which contains a pointer to an <code>oopDesc</code> object which in turn contains the class pointer, GC information and the object fields."}, {"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "reply_to_user": {"reputation": 15619, "user_id": 1548468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0745dce203d52699e63a575b3103ad70?s=128&d=identicon&r=PG", "display_name": "Botje", "link": "https://stackoverflow.com/users/1548468/botje"}, "edited": false, "score": 1, "creation_date": 1571132861, "post_id": 58387338, "comment_id": 103129907, "body": "@Botje None of which is either specificed as an ABI or implemented in this code."}, {"owner": {"reputation": 15619, "user_id": 1548468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0745dce203d52699e63a575b3103ad70?s=128&d=identicon&r=PG", "display_name": "Botje", "link": "https://stackoverflow.com/users/1548468/botje"}, "reply_to_user": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1571132996, "post_id": 58387338, "comment_id": 103129955, "body": "@user207421 Of course. But OP stated specifically that this was just to understand how it works internally. I assumed they were wrong and that a <code>jobject</code> was actually an index into the local reference table, but it really <i>is</i> the Java object, so I learned something from it."}, {"owner": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "reply_to_user": {"reputation": 15619, "user_id": 1548468, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0745dce203d52699e63a575b3103ad70?s=128&d=identicon&r=PG", "display_name": "Botje", "link": "https://stackoverflow.com/users/1548468/botje"}, "edited": false, "score": 1, "creation_date": 1571133499, "post_id": 58387338, "comment_id": 103130217, "body": "@Botje  According to your own comment it would require at least three indirections: <code>jobject-&gt;oop-&gt;oopDesc-&gt;{class pointer, GC information, object fields}</code>. Which means that the <code>jobject</code> is <i>not</i> the Java object, in any useful sense."}, {"owner": {"reputation": 2012, "user_id": 5987669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be176d2b1a1b2a5d648abdb75dc1b15?s=128&d=identicon&r=PG&f=1", "display_name": "Locke", "link": "https://stackoverflow.com/users/5987669/locke"}, "reply_to_user": {"reputation": 288867, "user_id": 207421, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/5cfe5f7d64f44be04f147295f5c7b88e?s=128&d=identicon&r=PG", "display_name": "user207421", "link": "https://stackoverflow.com/users/207421/user207421"}, "edited": false, "score": 0, "creation_date": 1571133652, "post_id": 58387338, "comment_id": 103130305, "body": "@user207421 is completely correct. This was an exercise of both blind optimism and curiosity over how the JNI works. When this attempt inevitability failed and my initial online searches did not yield any useful results, I did not think to look at OpenJDK so I came to stack overflow to try to learn what I should have done differently."}], "answers": [{"tags": [], "owner": {"reputation": 2012, "user_id": 5987669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be176d2b1a1b2a5d648abdb75dc1b15?s=128&d=identicon&r=PG&f=1", "display_name": "Locke", "link": "https://stackoverflow.com/users/5987669/locke"}, "is_accepted": true, "score": 4, "last_activity_date": 1571131650, "creation_date": 1571131650, "answer_id": 58391442, "question_id": 58387338, "link": "https://stackoverflow.com/questions/58387338/jni-object-pointers/58391442#58391442", "title": "JNI Object Pointers", "body": "<h2>Conceptual Explanation</h2>\n\n<p>After reading a <a href=\"https://www.usenix.org/legacy/event/usenix08/tech/full_papers/craciunas/craciunas_html/paper.html\" rel=\"nofollow noreferrer\">paper</a> on memory compaction, I learned that java references are made of two pointers. \nDuring garbage collection, a compaction step occurs. To ensure that the references will still line up, two pointers are used to prevent mangling when objects are moved. A reference consists of a pointer to another pointer that points to the object. When the compaction step occurs and an object is moved through memory, only the second pointer needs to be altered.</p>\n\n<p>In other words a reference is really a pointer to the location in memory that points to an object.</p>\n\n<p><em>I know I mangled that explanation, but hopefully it was mostly readable/accurate.</em></p>\n\n<h2>What I did wrong</h2>\n\n<h3>Code Changed</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"system\" fn Java_Main_analyze(env: JNIEnv, class: JClass, obj: JObject) {\n    unsafe {\n        // It should have been transmuted to a pointer to a pointer and dereferenced twice.\n        let indirect = mem::transmute::&lt;_, *const *const Point&gt;(*obj);\n        println!(\"{:?}\", **indirect);\n    }\n}\n</code></pre>\n\n<h3>New Output</h3>\n\n<p>Once that fix was applied, the object data began to line up correctly. The x and y are the same as in the test object, and all three headers line up with jol's prediction for the memory format (I assume header 3 would have been the same if I had used a signed integer).</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>Point { header1: 1, header2: 0, header3: 4160799044, point_x: -3.472, point_y: 4.0 }\n</code></pre>\n\n<p><strong>In response to @Botje</strong>: My <code>Point</code> struct was correct, but you were unable to recreate the error because you approached the problem correctly from the start while I did not.  </p>\n"}], "owner": {"reputation": 2012, "user_id": 5987669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1be176d2b1a1b2a5d648abdb75dc1b15?s=128&d=identicon&r=PG&f=1", "display_name": "Locke", "link": "https://stackoverflow.com/users/5987669/locke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 331, "favorite_count": 0, "accepted_answer_id": 58391442, "answer_count": 1, "score": 7, "last_activity_date": 1571132195, "creation_date": 1571114241, "last_edit_date": 1571132195, "question_id": 58387338, "link": "https://stackoverflow.com/questions/58387338/jni-object-pointers", "title": "JNI Object Pointers", "body": "<h1>Problem</h1>\n\n<p>When experimenting with the JNI interface, I was wondering if I could take a <code>JObject</code> and transmute it into an equivalent struct to manipulate the fields. However, when I tried I was surprised to see that this did not work. <strong>Ignoring how horrible this idea might be, why didn't it work?</strong></p>\n\n<p><br></p>\n\n<h1>My Approach</h1>\n\n<h2>Java Test Class</h2>\n\n<p>I made a simple class <code>Point</code> to do my test. <code>Point</code> has two fields and a constructor that takes in an x and y as well as a few random methods that return information based on the fields.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public class Point {\n    public final double x;\n    public final double y;\n    // As well as some random methods\n}\n</code></pre>\n\n<h2>Memory Layout</h2>\n\n<p>Using jol, I found the structure of my <code>Point</code> class in the java runtime (shown below).</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>C:\\Users\\home\\IdeaProjects\\test-project&gt;java -cp jol-cli-0.9-full.jar;out\\production\\java-test org.openjdk.jol.Main internals Point\n# Running 64-bit HotSpot VM.\n# Using compressed oop with 3-bit shift.\n# Using compressed klass with 3-bit shift.\n# Objects are 8 bytes aligned.\n# Field sizes by type: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]\n# Array element sizes: 4, 1, 1, 2, 2, 4, 4, 8, 8 [bytes]\n\nInstantiated the sample instance via public Point(double,double)\n\nPoint object internals:\n OFFSET  SIZE     TYPE DESCRIPTION                               VALUE\n      0     4          (object header)                           01 00 00 00 (00000001 00000000 00000000 00000000) (1)\n      4     4          (object header)                           00 00 00 00 (00000000 00000000 00000000 00000000) (0)\n      8     4          (object header)                           31 32 01 f8 (00110001 00110010 00000001 11111000) (-134139343)\n     12     4          (alignment/padding gap)\n     16     8   double Point.x                                   0.0\n     24     8   double Point.y                                   0.0\nInstance size: 32 bytes\nSpace losses: 4 bytes internal + 0 bytes external = 4 bytes total\n</code></pre>\n\n<h2>Test Struct</h2>\n\n<p>I wrote out a simple test struct that matched the memory model described by jol along with some tests to make sure that it had the same alignment and each element had the correct offset. I did this using rust, but it should be the same for any other compiled language.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\n#[repr(C, align(8))]\npub struct Point {\n    header1: u32,\n    header2: u32,\n    header3: u32,\n    point_x: f64,\n    point_y: f64,\n}\n</code></pre>\n\n<h2>Output</h2>\n\n<p>The final part of my test was making a jni function that took in a <code>Point</code> object and transmuted the point object into the point struct.  </p>\n\n<h3>C Header (Included as Reference)</h3>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>/*\n * Class:     Main\n * Method:    analyze\n * Signature: (LPoint;)V\n */\nJNIEXPORT void JNICALL Java_Main_analyze\n  (JNIEnv *, jclass, jobject);\n</code></pre>\n\n<h3>Rust Implementation</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub extern \"system\" fn Java_Main_analyze(env: JNIEnv, class: JClass, obj: JObject) {\n    unsafe {\n        // De-reference the `JObject` to get the object pointer, then transmute the\n        // pointer into my `Point` struct.\n        let obj_ptr = mem::transmute::&lt;_, *const Point&gt;(*obj);\n\n        // Output the debug format of the `Point` struct\n        println!(\"{:?}\", *obj_ptr);\n    }\n}\n</code></pre>\n\n<h2>Runs</h2>\n\n<p>Every time I ran it, I got a different result.</p>\n\n<pre><code>// First Run:\nPoint { header1: 1802087032, header2: 7, header3: 43906792, point_x: \n0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n0000230641669, point_y: \n0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n0000021692881 }\n\n// Second Run:\nPoint { header1: 1802087832, header2: 7, header3: 42529864, point_x: \n0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n0000229832192, point_y: \n0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n0000021012588 }\n\n</code></pre>\n\n<h2>Version Information</h2>\n\n<pre class=\"lang-sh prettyprint-override\"><code>C:\\Users\\home\\IdeaProjects\\test-project&gt;java -version\njava version \"1.8.0_181\"\nJava(TM) SE Runtime Environment (build 1.8.0_181-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)\n</code></pre>\n\n<p><strong>Edit:</strong> I did this on <code>Windows 10 Home 10.0.18362 Build 18362</code></p>\n\n<p><strong>Edit 2:</strong> Since I used rust to approach this problem I used rust's <a href=\"https://crates.io/crates/jni\" rel=\"nofollow noreferrer\"><code>jni</code> crate</a>. It provided the <code>JObject</code> type I mentioned above. It just occurred to me that there might be some confusion since <code>JObject</code> is not the same as the <code>jobject</code> shown in the C header. <code>JObject</code> is a rust wrapper around a pointer to a <code>jobject</code>, hence my dereferencing it before transmuting the pointer.</p>\n"}, {"tags": ["rust", "refcell"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571083238, "post_id": 58383300, "comment_id": 103114742, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/52031002/155423\">How do I move out of a struct field that is an Option?</a>; <a href=\"https://stackoverflow.com/q/27098694/155423\">How can I swap in a new value for a field in a mutable reference to a structure?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58383300/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571084256, "post_id": 58383300, "comment_id": 103115083, "body": "<code>let foo = foo.borrow_mut().take(); if let Some(f) = foo {</code>"}, {"owner": {"reputation": 1507, "user_id": 4296244, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e8c0940effc84e18a8541145ef2dfbfe?s=128&d=identicon&r=PG&f=1", "display_name": "Natjo", "link": "https://stackoverflow.com/users/4296244/natjo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571084740, "post_id": 58383300, "comment_id": 103115282, "body": "Your last idea worked! Thank you very much :)"}], "owner": {"reputation": 1507, "user_id": 4296244, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e8c0940effc84e18a8541145ef2dfbfe?s=128&d=identicon&r=PG&f=1", "display_name": "Natjo", "link": "https://stackoverflow.com/users/4296244/natjo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 550, "favorite_count": 0, "closed_date": 1571099175, "answer_count": 0, "score": 3, "last_activity_date": 1571099186, "creation_date": 1571083032, "last_edit_date": 1571084191, "question_id": 58383300, "link": "https://stackoverflow.com/questions/58383300/how-do-i-consume-the-inner-value-of-a-rcrefcelloption", "closed_reason": "Duplicate", "title": "How do I consume the inner value of a Rc&lt;RefCell&lt;Option&lt;_&gt;&gt;&gt;?", "body": "<p>I have a function of a third party library that needs ownership of a variable. Unfortunately this variable is inside a <code>Rc&lt;RefCell&lt;Option&lt;Foo&gt;&gt;&gt;</code>.</p>\n\n<p>My code looks simplified like this:</p>\n\n<pre><code>use std::cell::RefCell;\nuse std::rc::Rc;\n\npub struct Foo {\n    val: i32,\n}\n\nfn main() {\n    let foo: Rc&lt;RefCell&lt;Option&lt;Foo&gt;&gt;&gt; = Rc::new(RefCell::new(Some(Foo { val: 1 })));\n\n    if let Some(f) = foo.into_inner() {\n        consume_foo(f);\n    }\n}\n\nfn consume_foo(f: Foo) {\n    println!(\"Foo {} consumed\", f.val)\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of an `Rc`\n  --&gt; src/main.rs:11:22\n   |\n11 |     if let Some(f) = foo.into_inner() {\n   |                      ^^^ move occurs because value has type `std::cell::RefCell&lt;std::option::Option&lt;Foo&gt;&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I tried to use <code>std::mem::replace(...)</code> from <a href=\"https://stackoverflow.com/q/27098694/155423\">How can I swap in a new value for a field in a mutable reference to a structure?</a>:</p>\n\n<pre><code>fn main() {\n    let mut foo: Rc&lt;RefCell&lt;Option&lt;Foo&gt;&gt;&gt; = Rc::new(RefCell::new(Some(Foo { val: 1 })));\n\n    let mut foo_replaced = std::mem::replace(&amp;mut foo.into_inner(), None);\n    if let Some(f) = foo_replaced.take() {\n        consume_foo(f);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of an `Rc`\n  --&gt; src/main.rs:11:51\n   |\n11 |     let mut foo_replaced = std::mem::replace(&amp;mut foo.into_inner(), None);\n   |                                                   ^^^ move occurs because value has type `std::cell::RefCell&lt;std::option::Option&lt;Foo&gt;&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>I can't figure out how to do this properly.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571081627, "post_id": 58383014, "comment_id": 103114154, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/30218886/155423\">How to implement Iterator and IntoIterator for a simple struct?</a> / <a href=\"https://stackoverflow.com/q/25730586/155423\">How can I create my own data structure with an iterator that returns mutable references?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58383014/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1571083343, "post_id": 58383014, "comment_id": 103114774, "body": "No, I think this is more like a duplicate of <a href=\"https://stackoverflow.com/questions/42676541/how-do-i-return-an-iterator-that-has-a-reference-to-something-inside-a-refcell\">How do I return an iterator that has a reference to something inside a RefCell?</a> The <code>iter_mut</code> here would be unsound if it worked because you can call it twice to get two <code>&amp;mut</code> references to the same value. The difference between <code>RwLock</code> and <code>RefCell</code> is not relevant to this error."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1571187688, "post_id": 58383014, "comment_id": 103153674, "body": "@trentcl what about <a href=\"https://stackoverflow.com/q/50496879/155423\">Returning a RWLockReadGuard independently from a method</a> or <a href=\"https://stackoverflow.com/q/40095383/155423\">How to return a reference to a sub-value of a value that is under a mutex?</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571189868, "post_id": 58383014, "comment_id": 103154027, "body": "@Shepmaster Both those look similar, but they can be resolved using rental, which I don&#39;t think is true of this one. I&#39;m not sure how to alter the signature of <code>iter_mut</code> so this is solvable -- internal iteration, as suggested in your answer to the question I linked, seems like the most direct approach."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1571231687, "post_id": 58383014, "comment_id": 103171290, "body": "<a href=\"https://stackoverflow.com/questions/32083065/borrow-data-out-of-a-mutex-borrowed-value-does-not-live-long-enough\">Borrow data out of a mutex \u201cborrowed value does not live long enough\u201d</a> is also closely related and the answer there may be helpful. <code>Mutex</code>, like <code>RefCell</code> and <code>RwLock</code>, uses guards to enforce borrowing rules at runtime."}, {"owner": {"reputation": 1753, "user_id": 695561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f94ac428bccaa954a8bc11577d2c474f?s=128&d=identicon&r=PG", "display_name": "paulkernfeld", "link": "https://stackoverflow.com/users/695561/paulkernfeld"}, "edited": false, "score": 0, "creation_date": 1571846446, "post_id": 58383014, "comment_id": 103378104, "body": "Thanks for the links! I found all of them helpful in understanding the issue more deeply. To me, <a href=\"https://stackoverflow.com/questions/32083065/borrow-data-out-of-a-mutex-borrowed-value-does-not-live-long-enough\">Borrow data out of a mutex \u201cborrowed value does not live long enough\u201d</a> is the best duplicate since it&#39;s almost exactly what I was trying to do."}], "owner": {"reputation": 1753, "user_id": 695561, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f94ac428bccaa954a8bc11577d2c474f?s=128&d=identicon&r=PG", "display_name": "paulkernfeld", "link": "https://stackoverflow.com/users/695561/paulkernfeld"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 70, "favorite_count": 0, "closed_date": 1571756468, "answer_count": 0, "score": 0, "last_activity_date": 1571081735, "creation_date": 1571081495, "last_edit_date": 1571081735, "question_id": 58383014, "link": "https://stackoverflow.com/questions/58383014/how-do-i-iterate-over-the-mutable-values-of-a-concurrent-hash-map-built-with-rwl", "closed_reason": "Duplicate", "title": "How do I iterate over the mutable values of a concurrent hash map built with RwLock?", "body": "<p>Is there an elegant way to iterate over each key-value pair in this concurrent hash map?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\nuse std::hash::Hash;\nuse std::sync::RwLock;\n\nconst N_SHARDS: usize = 16;\n\n#[derive(Default)]\nstruct ConcurrentHashMap&lt;K, V&gt;\nwhere\n    K: Eq + Hash,\n{\n    shards: [RwLock&lt;HashMap&lt;K, V&gt;&gt;; N_SHARDS],\n}\n</code></pre>\n\n<p>Hopefully this suggests what I'm trying to accomplish:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;K, V&gt; ConcurrentHashMap&lt;K, V&gt;\nwhere\n    K: Eq + Hash,\n{\n    fn iter_mut(&amp;self) -&gt; impl Iterator&lt;Item = (&amp;K, &amp;mut V)&gt; {\n        self.shards\n            .iter()\n            .flat_map(|shard| shard.write().expect(\"Poisoned\").iter_mut())\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return value referencing temporary value\n  --&gt; src/lib.rs:22:31\n   |\n22 |             .flat_map(|shard| shard.write().expect(\"Poisoned\").iter_mut())\n   |                               --------------------------------^^^^^^^^^^^\n   |                               |\n   |                               returns a value referencing data owned by the current function\n   |                               temporary value created here\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571081172, "post_id": 58382784, "comment_id": 103113981, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/39383809/155423\">How to transform fields during serialization using Serde?</a> / <a href=\"https://stackoverflow.com/q/46753955/155423\">How to transform fields during deserialization using Serde?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58382784/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571081432, "post_id": 58382784, "comment_id": 103114080, "body": "Thank you! One of those answers looks like it might work."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571081500, "post_id": 58382784, "comment_id": 103114101, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4e98ec91d349949a5ec95a21794720d9\" rel=\"nofollow noreferrer\">The duplicate applied to a similar situation as yours</a>."}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 226, "favorite_count": 0, "closed_date": 1571081537, "answer_count": 0, "score": 0, "last_activity_date": 1571081555, "creation_date": 1571080329, "last_edit_date": 1571081004, "question_id": 58382784, "link": "https://stackoverflow.com/questions/58382784/how-do-i-implement-serialize-and-deserialize-if-i-already-have-conversions-to-an", "closed_reason": "Duplicate", "title": "How do I implement Serialize and Deserialize if I already have conversions to and from serde-json Value?", "body": "<p>Serialization and deserialization for most of my structs and enums can be easily implemented using <code>#[derive(Serialize, Deserialize)]</code>.</p>\n\n<p>A few structs require careful crafting to implement. I am new to <code>serde</code>. I succeeded in implementing the <code>From</code> trait to convert one particularly tricky compositional hierarchy of structs and enums with <code>Rc</code>s and <code>RefCell</code>s and <code>Option</code>s and such to and from <code>serde_json::Value</code>. Since I have this conversion working, can I leverage it to implement the <code>Serialize</code> and <code>Deserialize</code> traits? My ultimate goal is to-and-from JSON conversion for use with web service REST calls.</p>\n\n<p>For example, I have conversion from one of my types named <code>ShyValue</code> to <code>Value</code>, in two parts:</p>\n\n<pre><code>impl From&lt;&amp;ShyScalar&gt; for Value {\n    /// Create a Serde Value from a ShyScalar.\n    /// Since Serde Values can only represent what is valid for JSON (e.g. no NaN values),\n    /// encode unsupported values as Value::Strings, often by prepending a suffix.\n    /// The reverse conversion will need to parse these strings out and reconstruct the proper ShyValue.\n    fn from(s: &amp;ShyScalar) -&gt; Self {\n        match s {\n            // ... lots of code removed ...\n        }\n    }\n}\n\nimpl From&lt;&amp;ShyValue&gt; for Value {\n    fn from(v: &amp;ShyValue) -&gt; Self {\n        match v {\n            ShyValue::Scalar(scalar) =&gt; scalar.into(),\n            // ... lots more code removed ...\n        }\n    }\n}\n</code></pre>\n\n<p>Then I have a conversion in the other direction:</p>\n\n<pre><code>impl From&lt;&amp;Value&gt; for ShyValue {\n    fn from(v: &amp;Value) -&gt; Self {\n        match v {\n            Value::Null =&gt; ShyValue::Scalar(ShyScalar::Null),\n            Value::Bool(b) =&gt; b.into(),\n\n            // A Value::String may represent any of several ShyValue variants, so must be parsed.\n            // The prefix (if any) usually determines which variant to create.\n            Value::String(ref nan) if nan.to_lowercase() == \"nan\" =&gt; {\n                ShyValue::Scalar(f64::NAN.into())\n            }\n            Value::String(ref err) if err.starts_with(\"Error: \") =&gt; {\n                ShyValue::error(err[7..].into())\n            }\n            Value::String(ref func_name) if func_name.starts_with(\"FunctionName: \") =&gt; {\n                ShyValue::FunctionName(func_name[13..].into())\n            }\n            Value::String(ref prop_chain) if prop_chain.starts_with(\"PropertyChain: \") =&gt; {\n                ShyValue::property_chain(prop_chain[15..].into())\n            }\n            Value::String(ref variable) if variable.starts_with(\"Variable: \") =&gt; {\n                ShyValue::Variable(variable[10..].into())\n            }\n            Value::String(s) =&gt; s.clone().into(),\n\n            Value::Number(ref n) if (*n).is_i64() =&gt; {\n                ShyValue::Scalar(ShyScalar::Integer(n.as_i64().unwrap()))\n            }\n            Value::Number(ref f) =&gt; ShyValue::Scalar(ShyScalar::Rational(f.as_f64().unwrap())),\n            Value::Array(a) =&gt; ShyValue::Vector(\n                a.iter()\n                    .map(|item| match item {\n                        Value::Null =&gt; ShyScalar::Null,\n                        Value::Bool(b) =&gt; (*b).into(),\n                        Value::String(s) =&gt; s.clone().into(),\n                        Value::Number(ref n) if (*n).is_i64() =&gt; {\n                            ShyScalar::Integer(n.as_i64().unwrap())\n                        }\n                        Value::Number(ref f) =&gt; ShyScalar::Rational(f.as_f64().unwrap()),\n                        _ =&gt; ShyScalar::Error(\"Unsupported type of scalar\".into()),\n                    })\n                    .collect(),\n            ),\n            Value::Object(o) =&gt; {\n                let shy_object = ShyObject::empty();\n                {\n                    let mut assoc = shy_object.as_deref_mut();\n                    for (key, value) in o {\n                        assoc.set(key, value.into());\n                    }\n                }\n                ShyValue::Object(shy_object)\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user933161"}, "edited": false, "score": 0, "creation_date": 1571067860, "post_id": 58379972, "comment_id": 103108617, "body": "I am sorry, filter or filter out?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571068103, "post_id": 58379972, "comment_id": 103108729, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/40455997/155423\">Iterate over lines in a string, including the newline characters</a> or <a href=\"https://stackoverflow.com/q/36941851/155423\">What&#39;s an idiomatic way to print an iterator separated by spaces in Rust?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58379972/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1571068294, "post_id": 58379972, "comment_id": 103108823, "body": "Or easy but bad solution -&gt;  modify your map like this <code>.map(|s| s.to_string() + &quot;\\n&quot;)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1571068621, "post_id": 58379972, "comment_id": 103108971, "body": "I&#39;d use <code>.fold(String::new(), |s, l| s + l + &quot;\\n&quot;)</code> instead of <code>.map</code> and <code>.collect</code>."}], "owner": {"reputation": 133, "user_id": 10671679, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c086dbf7713aa48a259a3d979f9442d6?s=128&d=identicon&r=PG&f=1", "display_name": "theBigCheese88", "link": "https://stackoverflow.com/users/10671679/thebigcheese88"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 302, "favorite_count": 1, "closed_date": 1571068263, "answer_count": 0, "score": 1, "last_activity_date": 1571068359, "creation_date": 1571067447, "last_edit_date": 1571068359, "question_id": 58379972, "link": "https://stackoverflow.com/questions/58379972/how-do-i-keep-newlines-when-using-lines-and-collect-to-return-a-string", "closed_reason": "Duplicate", "title": "How do I keep newlines when using lines() and collect() to return a String?", "body": "<p>I  have a file called <code>a_file.txt</code> and i want to read it like so and filter out the string <code>\"help me\"</code> from each line in that file:</p>\n\n<pre><code>fn main() -&gt; std::io::Result&lt;()&gt; {\n    let _s: String = std::fs::read_to_string(\"a_file.txt\")?\n        .lines()\n        .filter(|line| line.contains(\"help me\"))\n        .map(|s| s.to_string())\n        .collect();\n    Ok(())\n}\n</code></pre>\n\n<p>The <code>map</code> function here makes it so that <code>collect()</code> returns a <code>String</code> not a <code>&amp;str</code>.</p>\n\n<p>This code returns the text but it seems to have removed the <code>\\n</code>. I assume this happens because the <code>lines()</code> function consumes the <code>\\n</code> to make an iterator.</p>\n\n<p>How do I retain the <code>\\n</code>s? I want to remove the specified string from each line so I have to use the <code>lines()</code> function.</p>\n"}, {"tags": ["rust", "future"], "answers": [{"comments": [{"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "edited": false, "score": 0, "creation_date": 1571062255, "post_id": 58378572, "comment_id": 103105679, "body": "thanks, I&#39;m not very understand that when I read it first time."}, {"owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "edited": false, "score": 0, "creation_date": 1571110296, "post_id": 58378572, "comment_id": 103120932, "body": "I&#39;m really appreciate your kindly and detail answer ! Thanks very much !"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 0, "last_activity_date": 1571063840, "last_edit_date": 1571063840, "creation_date": 1571062207, "answer_id": 58378572, "question_id": 58377995, "link": "https://stackoverflow.com/questions/58377995/why-is-my-future-implementation-blocked-after-it-is-polled-once-and-notready/58378572#58378572", "title": "Why is my Future implementation blocked after it is polled once and NotReady?", "body": "<blockquote>\n  <p>Did I implement anything wrong?</p>\n</blockquote>\n\n<p>Yes, you did not read and follow <a href=\"https://docs.rs/futures/0.1.29/futures/future/trait.Future.html#tymethod.poll\" rel=\"nofollow noreferrer\">the documentation for the method you are implementing</a> (emphasis mine):</p>\n\n<blockquote>\n  <p>When a future is not ready yet, the <code>Async::NotReady</code> value will be returned. In this situation the future will also register interest of the current task in the value being produced. This is done by <strong>calling <code>task::park</code></strong> to retrieve a handle to the current <code>Task</code>. When the future is then ready to make progress (e.g. it should be polled again) the <strong><code>unpark</code> method is called on the <code>Task</code></strong>.</p>\n</blockquote>\n\n<p>As a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal, reproducible example</a>, let's use this:</p>\n\n<pre><code>use futures::{future::Future, Async};\nuse std::{\n    mem,\n    sync::{Arc, Mutex},\n    thread,\n    time::Duration,\n};\n\npub struct Timer {\n    data: Arc&lt;Mutex&lt;String&gt;&gt;,\n}\n\nimpl Timer {\n    pub fn new(instance: String) -&gt; Self {\n        let data = Arc::new(Mutex::new(String::new()));\n\n        thread::spawn({\n            let data = data.clone();\n            move || {\n                thread::sleep(Duration::from_secs(1));\n                *data.lock().unwrap() = instance;\n            }\n        });\n\n        Timer { data }\n    }\n}\n\nimpl Future for Timer {\n    type Item = String;\n    type Error = ();\n\n    fn poll(&amp;mut self) -&gt; futures::Poll&lt;Self::Item, Self::Error&gt; {\n        let mut data = self.data.lock().unwrap();\n\n        eprintln!(\"poll was called\");\n\n        if data.is_empty() {\n            Ok(Async::NotReady)\n        } else {\n            let data = mem::replace(&amp;mut *data, String::new());\n            Ok(Async::Ready(data))\n        }\n    }\n}\n\nfn main() {\n    let v = Timer::new(\"Some text\".into()).wait();\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>It only prints out \"poll was called\" once.</p>\n\n<p>You can call <code>task::current</code> (previously <code>task::park</code>) in the implementation of <code>Future::poll</code>, save the resulting value, then use the value with <code>Task::notify</code> (previously <code>Task::unpark</code>) whenever the future may be polled again:</p>\n\n<pre><code>use futures::{\n    future::Future,\n    task::{self, Task},\n    Async,\n};\nuse std::{\n    mem,\n    sync::{Arc, Mutex},\n    thread,\n    time::Duration,\n};\n\npub struct Timer {\n    data: Arc&lt;Mutex&lt;(String, Option&lt;Task&gt;)&gt;&gt;,\n}\n\nimpl Timer {\n    pub fn new(instance: String) -&gt; Self {\n        let data = Arc::new(Mutex::new((String::new(), None)));\n        let me = Timer { data };\n\n        thread::spawn({\n            let data = me.data.clone();\n            move || {\n                thread::sleep(Duration::from_secs(1));\n                let mut data = data.lock().unwrap();\n\n                data.0 = instance;\n                if let Some(task) = data.1.take() {\n                    task.notify();\n                }\n            }\n        });\n\n        me\n    }\n}\n\nimpl Future for Timer {\n    type Item = String;\n    type Error = ();\n\n    fn poll(&amp;mut self) -&gt; futures::Poll&lt;Self::Item, Self::Error&gt; {\n        let mut data = self.data.lock().unwrap();\n\n        eprintln!(\"poll was called\");\n\n        if data.0.is_empty() {\n            let v = task::current();\n            data.1 = Some(v);\n            Ok(Async::NotReady)\n        } else {\n            let data = mem::replace(&amp;mut data.0, String::new());\n            Ok(Async::Ready(data))\n        }\n    }\n}\n\nfn main() {\n    let v = Timer::new(\"Some text\".into()).wait();\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48735952/155423\">Why does Future::select choose the future with a longer sleep period first?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43503953/155423\">Why is `Future::poll` not called repeatedly after returning `NotReady`?</a></li>\n<li><a href=\"https://stackoverflow.com/q/41932137/155423\">What is the best approach to encapsulate blocking I/O in future-rs?</a></li>\n</ul>\n"}], "owner": {"reputation": 425, "user_id": 1609999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a9ed3aba567b518c4750e7581cc89d82?s=128&d=identicon&r=PG", "display_name": "wonderflow", "link": "https://stackoverflow.com/users/1609999/wonderflow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 58378572, "answer_count": 1, "score": -1, "last_activity_date": 1571063840, "creation_date": 1571060150, "last_edit_date": 1571061958, "question_id": 58377995, "link": "https://stackoverflow.com/questions/58377995/why-is-my-future-implementation-blocked-after-it-is-polled-once-and-notready", "title": "Why is my Future implementation blocked after it is polled once and NotReady?", "body": "<p>I implemented the future and made a request of it, but it blocked my <code>curl</code> and the log shows that <code>poll</code> was only invoked once.</p>\n\n<p>Did I implement anything wrong?</p>\n\n<pre><code>use failure::{format_err, Error};\nuse futures::{future, Async};\nuse hyper::rt::Future;\nuse hyper::service::{service_fn, service_fn_ok};\nuse hyper::{Body, Method, Request, Response, Server, StatusCode};\nuse log::{debug, error, info};\nuse std::{\n    sync::{Arc, Mutex},\n    task::Waker,\n    thread,\n};\n\npub struct TimerFuture {\n    shared_state: Arc&lt;Mutex&lt;SharedState&gt;&gt;,\n}\n\nstruct SharedState {\n    completed: bool,\n    resp: String,\n}\n\nimpl Future for TimerFuture {\n    type Item = Response&lt;Body&gt;;\n    type Error = hyper::Error;\n    fn poll(&amp;mut self) -&gt; futures::Poll&lt;Response&lt;Body&gt;, hyper::Error&gt; {\n        let mut shared_state = self.shared_state.lock().unwrap();\n        if shared_state.completed {\n            return Ok(Async::Ready(Response::new(Body::from(\n                shared_state.resp.clone(),\n            ))));\n        } else {\n            return Ok(Async::NotReady);\n        }\n    }\n}\n\nimpl TimerFuture {\n    pub fn new(instance: String) -&gt; Self {\n        let shared_state = Arc::new(Mutex::new(SharedState {\n            completed: false,\n            resp: String::new(),\n        }));\n        let thread_shared_state = shared_state.clone();\n        thread::spawn(move || {\n            let res = match request_health(instance) {\n                Ok(status) =&gt; status.clone(),\n                Err(err) =&gt; {\n                    error!(\"{:?}\", err);\n                    format!(\"{}\", err)\n                }\n            };\n            let mut shared_state = thread_shared_state.lock().unwrap();\n            shared_state.completed = true;\n            shared_state.resp = res;\n        });\n\n        TimerFuture { shared_state }\n    }\n}\n\nfn request_health(instance_name: String) -&gt; Result&lt;String, Error&gt; {\n    std::thread::sleep(std::time::Duration::from_secs(1));\n    Ok(\"health\".to_string())\n}\n\ntype BoxFut = Box&lt;dyn Future&lt;Item = Response&lt;Body&gt;, Error = hyper::Error&gt; + Send&gt;;\nfn serve_health(req: Request&lt;Body&gt;) -&gt; BoxFut {\n    let mut response = Response::new(Body::empty());\n    let path = req.uri().path().to_owned();\n    match (req.method(), path) {\n        (&amp;Method::GET, path) =&gt; {\n            return Box::new(TimerFuture::new(path.clone()));\n        }\n        _ =&gt; *response.status_mut() = StatusCode::NOT_FOUND,\n    }\n    Box::new(future::ok(response))\n}\n\nfn main() {\n    let endpoint_addr = \"0.0.0.0:8080\";\n    match std::thread::spawn(move || {\n        let addr = endpoint_addr.parse().unwrap();\n        info!(\"Server is running on {}\", addr);\n        hyper::rt::run(\n            Server::bind(&amp;addr)\n                .serve(move || service_fn(serve_health))\n                .map_err(|e| eprintln!(\"server error: {}\", e)),\n        );\n    })\n    .join()\n    {\n        Ok(e) =&gt; e,\n        Err(e) =&gt; println!(\"{:?}\", e),\n    }\n}\n</code></pre>\n\n<p>After compile and run this code, a server with port 8080 is running. Call the server with <code>curl</code> and it will block:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>curl 127.0.0.1:8080/my-health-scope\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571048961, "post_id": 58374850, "comment_id": 103098742, "body": "You were just a bit faster, ok :)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571049082, "post_id": 58374850, "comment_id": 103098811, "body": "@Cerberus I don&#39;t mind, your answer use <code>Vec::as_ref</code> mine not, proven again there is not one and only one style in Rust ;)"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1571063224, "post_id": 58374850, "comment_id": 103106209, "body": "Yeat another option would be <code>&amp;**x</code>."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 10, "last_activity_date": 1576785713, "last_edit_date": 1576785713, "creation_date": 1571048868, "answer_id": 58374850, "question_id": 58374572, "link": "https://stackoverflow.com/questions/58374572/rust-compare-optionvecu8-with-optionu8/58374850#58374850", "title": "Rust compare Option&lt;Vec&lt;u8&gt;&gt; with Option&lt;&amp;[u8]&gt;", "body": "<p>You just need to convert <code>Option&lt;Vec&lt;u8&gt;&gt;</code> to <code>Option&lt;&amp;[u8]&gt;</code>, using <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\" rel=\"nofollow noreferrer\"><code>as_ref()</code></a> and <code>Index</code> trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(a: Option&lt;Vec&lt;u8&gt;&gt;, b: Option&lt;&amp;[u8]&gt;) -&gt; bool {\n    a.as_ref().map(|x| &amp;x[..]) == b\n}\n</code></pre>\n\n<p>As of Rust 1.40, you can use <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_deref\" rel=\"nofollow noreferrer\"><code>as_deref()</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(a: Option&lt;Vec&lt;u8&gt;&gt;, b: Option&lt;&amp;[u8]&gt;) -&gt; bool {\n    a.as_deref() == b\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 1, "creation_date": 1571059658, "post_id": 58374869, "comment_id": 103104319, "body": "Ah so could I equivalently do <code>first.map(Vec::as_slice) == second</code>?"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "reply_to_user": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1571060160, "post_id": 58374869, "comment_id": 103104582, "body": "You will need the first <code>as_ref()</code> anyway - I&#39;ve just checked, it will not compile otherwise. But yes, <code>Vec::as_ref</code> and <code>Vec::as_slice</code> seem to be interchangable here."}, {"owner": {"reputation": 1248, "user_id": 10012519, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-UXVWJ2vzUBg/AAAAAAAAAAI/AAAAAAAAAEU/_-laWnURd4A/photo.jpg?sz=128", "display_name": "alexherm", "link": "https://stackoverflow.com/users/10012519/alexherm"}, "edited": false, "score": 0, "creation_date": 1571338261, "post_id": 58374869, "comment_id": 103217777, "body": "What language is this?  Tag it."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571362958, "post_id": 58374869, "comment_id": 103224912, "body": "I don&#39;t understand, what&#39;s wrong? The question is tagged (and if it wasn&#39;t, you&#39;d ask the asker, not me)."}], "tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": false, "score": 11, "last_activity_date": 1571048927, "creation_date": 1571048927, "answer_id": 58374869, "question_id": 58374572, "link": "https://stackoverflow.com/questions/58374572/rust-compare-optionvecu8-with-optionu8/58374869#58374869", "title": "Rust compare Option&lt;Vec&lt;u8&gt;&gt; with Option&lt;&amp;[u8]&gt;", "body": "<p>Maybe it's suboptimal, but this code seems to compile:</p>\n\n<pre><code>fn cmp(first: Option&lt;Vec&lt;u8&gt;&gt;, second: Option&lt;&amp;[u8]&gt;) -&gt; bool {\n    first.as_ref().map(Vec::as_ref) == second\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fbba72592a0635ee2369436ed2a66419\" rel=\"noreferrer\">Playground</a></p>\n\n<p>There are two key transformations here:</p>\n\n<ol>\n<li><p>The first Option holds the owned value, the second - a reference. So we should go from <code>Option&lt;T&gt;</code> (or <code>&amp;Option&lt;T&gt;</code>) to <code>Option&lt;&amp;T&gt;</code>, and this is achieved using the <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\" rel=\"noreferrer\"><code>as_ref</code></a> method of <code>Option</code>.</p></li>\n<li><p>The first <code>Option</code> now holds <code>&amp;Vec&lt;u8&gt;</code>, and we're going to compare it to <code>&amp;[u8]</code>. This is handled again by the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-AsRef%3C%5BT%5D%3E\" rel=\"noreferrer\"><code>as_ref</code></a> method, now defined on the <code>AsRef&lt;[u8]&gt;</code> trait and implemented on <code>Vec</code>.</p></li>\n</ol>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 624, "favorite_count": 0, "accepted_answer_id": 58374850, "answer_count": 2, "score": 8, "last_activity_date": 1576785713, "creation_date": 1571047936, "question_id": 58374572, "link": "https://stackoverflow.com/questions/58374572/rust-compare-optionvecu8-with-optionu8", "title": "Rust compare Option&lt;Vec&lt;u8&gt;&gt; with Option&lt;&amp;[u8]&gt;", "body": "<p>Is there an elegant way to compare <code>Option&lt;Vec&lt;u8&gt;&gt;</code> for equality with <code>Option&lt;&amp;[u8]&gt;</code>? (Or equivalently with <code>Result</code> instead of <code>Option</code>.)</p>\n"}, {"tags": ["rust", "reqwest"], "comments": [{"owner": {"reputation": 209014, "user_id": 125816, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f5aa40b1e7a95599c7a19451f88ff3a?s=128&d=identicon&r=PG", "display_name": "Sergio Tulentsev", "link": "https://stackoverflow.com/users/125816/sergio-tulentsev"}, "edited": false, "score": 1, "creation_date": 1571044959, "post_id": 58373663, "comment_id": 103096647, "body": "<a href=\"https://doc.rust-lang.org/std/result/#the-question-mark-operator-\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/result/#the-question-mark-operator-</a>"}, {"owner": {"reputation": 209014, "user_id": 125816, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f5aa40b1e7a95599c7a19451f88ff3a?s=128&d=identicon&r=PG", "display_name": "Sergio Tulentsev", "link": "https://stackoverflow.com/users/125816/sergio-tulentsev"}, "edited": false, "score": 0, "creation_date": 1571045124, "post_id": 58373663, "comment_id": 103096748, "body": "<a href=\"https://rust-lang.github.io/async-book/07_workarounds/03_err_in_async_blocks.html\" rel=\"nofollow noreferrer\">rust-lang.github.io/async-book/07_workarounds/&hellip;</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1571055632, "post_id": 58373663, "comment_id": 103102095, "body": "Also see: <a href=\"https://stackoverflow.com/questions/52225498/strange-error-cannot-use-the-operator-in-a-function-that-returns\">Strange error: cannot use the <code>?</code> operator in a function that returns <code>()</code></a> and <a href=\"https://stackoverflow.com/questions/48015600/cannot-use-operator-for-functions-that-return-result-error\">Cannot use <code>?</code> operator for functions that return Result&lt;(), error&gt;</a> for more answers."}], "answers": [{"comments": [{"owner": {"reputation": 5562, "user_id": 8495254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hZTpc.png?s=128&g=1", "display_name": "captain-yossarian", "link": "https://stackoverflow.com/users/8495254/captain-yossarian"}, "edited": false, "score": 0, "creation_date": 1590867370, "post_id": 58375422, "comment_id": 109846224, "body": "Just a nit. Try to avoid unwrap() in prod code"}], "tags": [], "owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "is_accepted": false, "score": 3, "last_activity_date": 1571050932, "creation_date": 1571050932, "answer_id": 58375422, "question_id": 58373663, "link": "https://stackoverflow.com/questions/58373663/cannot-use-the-operator-in-a-function-that-returns/58375422#58375422", "title": "cannot use the `?` operator in a function that returns `()`", "body": "<p>The question mark operator can only be used inside functions that return a <code>std::Result</code>. Roughly speaking, you can think of <code>x?</code> as meaning</p>\n\n<pre><code>match x {\n    Err(e) =&gt; return Err(e),\n    Ok(y) =&gt; y,\n}\n</code></pre>\n\n<p>(see documentation <a href=\"https://doc.rust-lang.org/std/result/#the-question-mark-operator-\" rel=\"nofollow noreferrer\">here</a>)</p>\n\n<p>What do you want to happen when <code>await</code> produces an error result? If you're not expecting that to happen, then it should be safe to tell Rust to panic (i.e. crash) if that ever occurs. This is what <code>Result::unwrap</code> is for:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"Started!\");\n    let body = reqwest::get(\"https://news.ycombinator.com\")\n        .await\n        .unwrap()\n        .text()\n        .await\n        .unwrap();\n\n    println!(\"body = {:?}\", body);\n}\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 10251395, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--jOugtxWcww/AAAAAAAAAAI/AAAAAAAAAAA/5Evak6OEzfc/photo.jpg?sz=128", "display_name": "Liam Seskis", "link": "https://stackoverflow.com/users/10251395/liam-seskis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3271, "favorite_count": 0, "closed_date": 1571058798, "answer_count": 1, "score": 0, "last_activity_date": 1571050932, "creation_date": 1571044805, "question_id": 58373663, "link": "https://stackoverflow.com/questions/58373663/cannot-use-the-operator-in-a-function-that-returns", "closed_reason": "Duplicate", "title": "cannot use the `?` operator in a function that returns `()`", "body": "<p>I am very new to rust and I want to write a script to scrape a page and pull all the links from it with their titles. I have failed to even make the get request. :(</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    println!(\"Started!\");\n    let body = reqwest::get(\"https://news.ycombinator.com\")\n    .await?\n    .text()\n    .await?;\n\n    println!(\"body = {:?}\", body);\n}\n</code></pre>\n\n<p>I am clearly not returning anything however I am confused with the syntax can someone explain the ? operator and also help me fix this issue.</p>\n"}, {"tags": ["rust", "rmeta"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 2, "creation_date": 1571037694, "post_id": 58371804, "comment_id": 103093065, "body": "Maybe this <a href=\"https://github.com/rust-lang/rust/issues/63224\" rel=\"nofollow noreferrer\">link</a> is useful for you"}], "owner": {"reputation": 74890, "user_id": 246776, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/PZwCJ.jpg?s=128&g=1", "display_name": "eonil", "link": "https://stackoverflow.com/users/246776/eonil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 189, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1571037600, "creation_date": 1571037600, "question_id": 58371804, "link": "https://stackoverflow.com/questions/58371804/what-is-rmeta-files-and-how-to-see-their-contents", "title": "What is rmeta files and how to see their contents?", "body": "<p>Rust creates <code>.rmeta</code> files. What is this and how to see their contents? For <code>.rlib</code> files, I could use <code>nm</code> to see their contents. But I have no idea for <code>.rmeta</code> files.</p>\n"}, {"tags": ["rust", "clap"], "answers": [{"comments": [{"owner": {"reputation": 169, "user_id": 5240269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13b90ceadf6297bf3d19b1de6f67421b?s=128&d=identicon&r=PG", "display_name": "ECO", "link": "https://stackoverflow.com/users/5240269/eco"}, "edited": false, "score": 0, "creation_date": 1571363266, "post_id": 58384722, "comment_id": 103224977, "body": "EDIT: Hi, im trying to properly parse one of the arguments: <code>let  paths = matches.values_of(&quot;paths&quot;).unwrap_or(&quot;.&#47;&quot;).collect();</code>  and throws me an error: <code>mismatched types  expected struct `clap::Values`, found reference  note: expected type `clap::Values&lt;&#39;_&gt;`          found type `&amp;&#39;static str` </code> I need to return a String if <code>values_of</code> fails and every example that I can find assumes that willl not fail. <code>let  paths = matches.values_of(&quot;paths&quot;).unwrap().collect();</code>  How can I do this?"}], "tags": [], "owner": {"reputation": 56, "user_id": 5021006, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153802567960715/picture?type=large", "display_name": "Joel Macaluso", "link": "https://stackoverflow.com/users/5021006/joel-macaluso"}, "is_accepted": true, "score": 1, "last_activity_date": 1571093214, "last_edit_date": 1571093214, "creation_date": 1571091464, "answer_id": 58384722, "question_id": 58371141, "link": "https://stackoverflow.com/questions/58371141/idiomatic-rust-way-to-properly-parse-clap-argmatches/58384722#58384722", "title": "Idiomatic rust way to properly parse Clap ArgMatches", "body": "<p>Personally I see nothing wrong with using the match statements and folding it or placing it in another function.  But if you want to remove it there are many options.</p>\n\n<p>There is the ability to use the <code>.default_value_if()</code> method which is <code>impl</code> for <code>clap::Arg</code> and have a different default value depending on which match arm is matched.</p>\n\n<p>From the <a href=\"https://docs.rs/clap/2.33.0/clap/struct.Arg.html\" rel=\"nofollow noreferrer\">clap documentation</a></p>\n\n<pre><code>//sets  value of arg \"other\" to \"default\" if value of \"--opt\" is \"special\"\n\nlet m = App::new(\"prog\")\n    .arg(Arg::with_name(\"opt\")\n        .takes_value(true)\n        .long(\"opt\"))\n    .arg(Arg::with_name(\"other\")\n        .long(\"other\")\n        .default_value_if(\"opt\", Some(\"special\"), \"default\"))\n    .get_matches_from(vec![\n        \"prog\", \"--opt\", \"special\"\n    ]);\n\nassert_eq!(m.value_of(\"other\"), Some(\"default\"));\n</code></pre>\n\n<p>In addition you can add a validator to your <code>operation</code> OR convert your valid operation values into flags.</p>\n\n<p>Here's an example converting your match arm values into individual flags (smaller example for clarity).</p>\n\n<pre><code>extern crate clap;\n\nuse clap::{Arg,App};\n\nfn command_line_interface&lt;'a&gt;() -&gt; clap::ArgMatches&lt;'a&gt; {\n    //Sets the command line interface of the program.\n    App::new(\"something\")\n            .version(\"0.1\")\n            .arg(Arg::with_name(\"rename\")\n                 .help(\"renames something\")\n                 .short(\"r\")\n                 .long(\"rename\"))\n            .arg(Arg::with_name(\"prepend\")\n                 .help(\"prepends something\")\n                 .short(\"p\")\n                 .long(\"prepend\"))\n            .arg(Arg::with_name(\"append\")\n                 .help(\"appends something\")\n                 .short(\"a\")\n                 .long(\"append\"))\n            .get_matches()\n}\n\n#[derive(Debug)]\nenum Operation {\n    Rename,\n    Append,\n    Prepend,\n}\n\n\nfn main() {\n    let matches  = command_line_interface();\n\n    let operation = if matches.is_present(\"rename\") {\n        Operation::Rename\n    } else if matches.is_present(\"prepend\"){\n        Operation::Prepend\n    } else {\n        //DEFAULT\n        Operation::Append\n    };\n    println!(\"Value of operation is {:?}\",operation);\n}\n</code></pre>\n\n<p>I hope this helps!</p>\n\n<p>EDIT:</p>\n\n<p>You can also use <a href=\"https://docs.rs/clap/2.33.0/clap/struct.ArgMatches.html#method.subcommand\" rel=\"nofollow noreferrer\">Subcommands</a> with your specific operations.  It all depends on what you want to interface to be like.</p>\n\n<pre><code> let app_m = App::new(\"git\")\n     .subcommand(SubCommand::with_name(\"clone\"))\n     .subcommand(SubCommand::with_name(\"push\"))\n     .subcommand(SubCommand::with_name(\"commit\"))\n     .get_matches();\n\nmatch app_m.subcommand() {\n    (\"clone\",  Some(sub_m)) =&gt; {}, // clone was used\n    (\"push\",   Some(sub_m)) =&gt; {}, // push was used\n    (\"commit\", Some(sub_m)) =&gt; {}, // commit was used\n    _                       =&gt; {}, // Either no subcommand or one not tested for...\n}\n</code></pre>\n"}], "owner": {"reputation": 169, "user_id": 5240269, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13b90ceadf6297bf3d19b1de6f67421b?s=128&d=identicon&r=PG", "display_name": "ECO", "link": "https://stackoverflow.com/users/5240269/eco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 963, "favorite_count": 0, "accepted_answer_id": 58384722, "answer_count": 1, "score": 1, "last_activity_date": 1571093214, "creation_date": 1571034410, "question_id": 58371141, "link": "https://stackoverflow.com/questions/58371141/idiomatic-rust-way-to-properly-parse-clap-argmatches", "title": "Idiomatic rust way to properly parse Clap ArgMatches", "body": "<p>I'm learning rust and trying to make a find like utility (yes another one), im using clap and trying to support command line and config file for the program's parameters(this has nothing to do with the clap yml file).</p>\n\n<p>Im trying to parse the commands and if no commands were passed to the app, i will try to load them from a config file.\nNow I don't know how to do this in an idiomatic way.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let matches = App::new(\"findx\")\n        .version(crate_version!())\n        .author(crate_authors!())\n        .about(\"find + directory operations utility\")\n        .arg(\n            Arg::with_name(\"paths\")\n               ...\n        )\n        .arg(\n            Arg::with_name(\"patterns\")\n              ...\n        )\n        .arg(\n            Arg::with_name(\"operation\")\n            ...\n        )\n        .get_matches();\n    let paths;\n    let patterns;\n    let operation;\n    if matches.is_present(\"patterns\") &amp;&amp; matches.is_present(\"operation\") {\n        patterns = matches.values_of(\"patterns\").unwrap().collect();\n        paths = matches.values_of(\"paths\").unwrap_or(clap::Values&lt;&amp;str&gt;{\"./\"}).collect(); // this doesn't work\n        operation = match matches.value_of(\"operation\").unwrap() { // I dont like this\n            \"Append\" =&gt; Operation::Append,\n            \"Prepend\" =&gt; Operation::Prepend,\n            \"Rename\" =&gt; Operation::Rename,\n            _ =&gt; {\n                print!(\"Operation unsupported\");\n                process::exit(1);\n            }\n        };\n    }else if Path::new(\"findx.yml\").is_file(){\n        //TODO: try load from config file\n    }else{\n        eprintln!(\"Command line parameters or findx.yml file must be provided\");\n        process::exit(1);\n    }\n\n\n    if let Err(e) = findx::run(Config {\n        paths: paths,\n        patterns: patterns,\n        operation: operation,\n    }) {\n        eprintln!(\"Application error: {}\", e);\n        process::exit(1);\n    }\n}\n</code></pre>\n\n<p>There is an idiomatic way to extract <code>Option</code> and <code>Result</code> types values to the same scope, i mean all examples that i have read, uses <code>match</code> or <code>if let Some(x)</code> to consume the <code>x</code> value inside the scope of the pattern matching, but I need to assign the value to a variable.</p>\n\n<p>Can someone help me with this, or point me to the right direction?</p>\n\n<p>Best Regards </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1571033435, "post_id": 58370809, "comment_id": 103091384, "body": "Is it possible that your <code>main.rs</code> was compilable for <code>&gt;cargo build</code> and not for  <code>&gt;rustc</code> ?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1571033880, "post_id": 58370809, "comment_id": 103091559, "body": "The point is, it shouldn&#39;t print as <code>Finished</code> if it can&#39;t compile successfully. Is it error messages or warnings ? It may be more clear if you add screenshots to the question."}, {"owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1571034130, "post_id": 58370809, "comment_id": 103091640, "body": "Yeah, you are right. I got another colorful word: red\u201derror\u201d."}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "edited": false, "score": 0, "creation_date": 1571036634, "post_id": 58371224, "comment_id": 103092623, "body": "Follow your advice,I got another error: Option \u2019color\u2019 given more than once"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "edited": false, "score": 0, "creation_date": 1571047557, "post_id": 58371224, "comment_id": 103098076, "body": "This means that <code>cargo</code> was already giving it properly. So I guess this is a limitation of PowerShell."}, {"owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "edited": false, "score": 0, "creation_date": 1571165041, "post_id": 58371224, "comment_id": 103146930, "body": "I got it. It\u2019s wrong with PowerShell 5 on win7. Back to win10, I got the excepted colors. Thank you for your kindnesses and patience."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1571034805, "creation_date": 1571034805, "answer_id": 58371224, "question_id": 58370809, "link": "https://stackoverflow.com/questions/58370809/why-cargo-build-can-t-offer-colorful-error-messages/58371224#58371224", "title": "Why cargo build can\u2019t offer colorful error messages?", "body": "<p>Like a lot of programs that can output color, <code>rustc</code> detects if its output goes directly to a console or is redirected to a file. This is because color is usually generated by inserting special control characters in the output and those characters would pollute the file.</p>\n\n<p>When <code>cargo</code> calls <code>rustc</code>, it intercepts its output and prints it in one go at the end, so that it can call <code>rustc</code> in parallel multiple times without their output being mixed-up. Unfortunately, this hides the fact that it is running in a console from <code>rustc</code> (since strictly speaking it isn't: it's running into <code>cargo</code> which is itself running in the console).</p>\n\n<p><code>rustc</code> has a command-line argument to force color even when not running in a console: <code>--color always</code>. On Linux, <code>cargo</code> enables this argument when it calls <code>rustc</code>, so error messages do have color. I suspect that PowerShell handles color differently from Linux consoles which prevents the same from working for you. You can try it by setting the <a href=\"https://doc.rust-lang.org/cargo/reference/environment-variables.html\" rel=\"nofollow noreferrer\"><code>RUSTFLAGS</code> environment variable</a> to <code>--color always</code> before calling <code>cargo build</code>.</p>\n"}], "owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 58371224, "answer_count": 1, "score": 0, "last_activity_date": 1571034805, "creation_date": 1571032573, "last_edit_date": 1571034451, "question_id": 58370809, "link": "https://stackoverflow.com/questions/58370809/why-cargo-build-can-t-offer-colorful-error-messages", "title": "Why cargo build can\u2019t offer colorful error messages?", "body": "<p>In PowerShell, If I use \u201crustc\u201d to compile \u201cmain.rs\u201d, I could get grammar error messages in colors.</p>\n\n<p>With \u201ccargo build\u201d,I only could get 2 colorful words \u201cCompiling...\u201d\u201derror...\u201d with unicolor grammar error messages .</p>\n\n<p>What wrong with the color?</p>\n"}, {"tags": ["memory-management", "rust"], "comments": [{"owner": {"reputation": 18468, "user_id": 5249307, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c640cd731ca8e455d79860519b6b208?s=128&d=identicon&r=PG", "display_name": "donkopotamus", "link": "https://stackoverflow.com/users/5249307/donkopotamus"}, "edited": false, "score": 0, "creation_date": 1571031534, "post_id": 58370586, "comment_id": 103090849, "body": "A <code>*mut u8</code> does not occupy a single byte ..."}], "answers": [{"tags": [], "owner": {"reputation": 18468, "user_id": 5249307, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c640cd731ca8e455d79860519b6b208?s=128&d=identicon&r=PG", "display_name": "donkopotamus", "link": "https://stackoverflow.com/users/5249307/donkopotamus"}, "is_accepted": false, "score": 2, "last_activity_date": 1571033303, "creation_date": 1571033303, "answer_id": 58370925, "question_id": 58370586, "link": "https://stackoverflow.com/questions/58370586/rust-alloc-memory-layout-not-consistent-with-size/58370925#58370925", "title": "Rust alloc memory layout not consistent with size", "body": "<p>This question is not rust specific but rather a question regarding how memory allocation works.  Memory allocators need to:</p>\n\n<ul>\n<li><p>consider the alignment requirements of the underlying architecture ... for example, the returned pointer may wish to be divisible by the processor word size;</p></li>\n<li><p>store the size of the allocated space (for de-allocation purposes)</p></li>\n</ul>\n\n<p>Thus consider allocating a single 32-bit integer ... the allocator will wish to allocate space to store:</p>\n\n<ol>\n<li>a word for storing the size of the space allocated;</li>\n<li>the 32-bit integer (which takes half a word in this case)</li>\n</ol>\n\n<p>As allocation wishes to be word aligned, the next allocation will occur two words, or 16 bytes, after the first.</p>\n\n<p>As to your second question, a <code>* mut u8</code> does not occupy a single byte, as surely the value the given code printed for it demonstrates.</p>\n"}], "owner": {"reputation": 2763, "user_id": 3728573, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/85cbc54f49bd3d6453e69c834ba21071?s=128&d=identicon&r=PG&f=1", "display_name": "Alex H", "link": "https://stackoverflow.com/users/3728573/alex-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1571033303, "creation_date": 1571031072, "question_id": 58370586, "link": "https://stackoverflow.com/questions/58370586/rust-alloc-memory-layout-not-consistent-with-size", "title": "Rust alloc memory layout not consistent with size", "body": "<p>I must be misunderstanding something here but I wrote a simple piece of code to test memory addresses and am getting some strange results:</p>\n\n<p>Here is the code:</p>\n\n<p>use std::alloc::{alloc, Layout};</p>\n\n<pre><code>fn main() {\n    let r1 : *mut i32;\n    let r2 : *mut i32;\n    let r3 : *mut i32;\n    let r4 : *mut u8; \n    let r5 : *mut i32;\n    unsafe { \n        r1 = alloc(Layout::new::&lt;i32&gt;()) as *mut i32;\n        r2 = alloc(Layout::new::&lt;i32&gt;()) as *mut i32;\n        r3 = alloc(Layout::new::&lt;i32&gt;()) as *mut i32;\n        r4 = alloc(Layout::new::&lt;i8&gt;()); \n        r5 = alloc(Layout::new::&lt;i32&gt;()) as *mut i32;\n    }   \n    println!(\"Raw pointer r1: {:p}\", r1);\n    println!(\"Raw pointer r2: {:p}\", r2);\n    println!(\"Raw pointer r3: {:p}\", r3);\n    println!(\"Raw pointer r4: {:p}\", r4);\n    println!(\"Raw pointer r5: {:p}\", r5);\n}  \n</code></pre>\n\n<p>and when I run it I get:</p>\n\n<pre><code>Raw pointer r1: 0x7fdb17402a60\nRaw pointer r2: 0x7fdb17402a70\nRaw pointer r3: 0x7fdb17402a80\nRaw pointer r4: 0x7fdb17402a90\nRaw pointer r5: 0x7fdb17402aa0\n</code></pre>\n\n<p>Two questions:</p>\n\n<ol>\n<li><p>I see that according to the docs i32s take up 4 bytes, so why is the address space difference between r1 and r2 0x10 instead of 0x04? Same question for cases between r4 and r5 where I expected only a 1 byte offset.</p></li>\n<li><p>Why is *mut 8, which is what <code>alloc</code> returns, sufficient as a pointer? We would not be able to represent the 64 bit virtual memory addresses using just a byte right? </p></li>\n</ol>\n\n<p>I'm trying to learn these unsafe aspects of rust because there I will be working on some kernel related project and it is necessary to work with raw pointers. </p>\n"}, {"tags": ["rust", "type-systems"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1571059763, "post_id": 58370228, "comment_id": 103104366, "body": "This looks like a bug. The type <code>f32</code> should be inferable but, somehow, the bound <code>for&lt;&#39;a&gt; &amp;&#39;a Float: AllCombos&lt;Float&gt;</code>  is causing the type-checker algorithm to go down a recursive path before it tries the more straightforward route of inferring from the argument type."}, {"owner": {"reputation": 14053, "user_id": 2189130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/trlri.png?s=128&g=1", "display_name": "kmdreko", "link": "https://stackoverflow.com/users/2189130/kmdreko"}, "edited": false, "score": 0, "creation_date": 1616054814, "post_id": 58370228, "comment_id": 117884175, "body": "This is an older question, but I&#39;ve answered a similar question <a href=\"https://stackoverflow.com/questions/66631251/why-do-i-get-an-overflow-evaluating-the-requirement-error-for-a-simple-trait-i\">here</a>. Summary: this is a compiler issue that has yet to be resolved and there&#39;s no good workaround."}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 87, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1571060241, "creation_date": 1571028380, "last_edit_date": 1571060241, "question_id": 58370228, "link": "https://stackoverflow.com/questions/58370228/what-are-the-different-strategies-for-resolving-a-recursive-type-bound", "title": "What are the different strategies for resolving a recursive type bound?", "body": "<p>I have the following code that attempts to create a composite trait that includes all the different value/reference combinations for a method of two arguments.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![recursion_limit = \"10\"]\n\n// Create a trait with some methods\npub trait Methods2&lt;Other&gt; {\n    type Output;\n    fn min(self, other: Other) -&gt; Self::Output;\n}\n\n// Create a composite trait that contain multiple traits\ntrait AllCombos&lt;NonRef&gt;:\n    Methods2&lt;NonRef, Output = NonRef&gt; + for&lt;'a&gt; Methods2&lt;&amp;'a NonRef, Output = NonRef&gt;\n{\n}\n\nimpl&lt;T, NonRef&gt; AllCombos&lt;NonRef&gt; for T where\n    T: Methods2&lt;NonRef, Output = NonRef&gt; + for&lt;'a&gt; Methods2&lt;&amp;'a NonRef, Output = NonRef&gt;\n{\n}\n\n// Implement this trait for f32\nimpl Methods2&lt;f32&gt; for f32 {\n    type Output = f32;\n    fn min(self, other: f32) -&gt; Self::Output {\n        self.min(other)\n    }\n}\n\nimpl Methods2&lt;f32&gt; for &amp;f32 {\n    type Output = f32;\n    fn min(self, other: f32) -&gt; Self::Output {\n        (*self).min(other)\n    }\n}\n\nimpl Methods2&lt;&amp;f32&gt; for f32 {\n    type Output = f32;\n    fn min(self, other: &amp;f32) -&gt; Self::Output {\n        self.min(*other)\n    }\n}\n\nimpl Methods2&lt;&amp;f32&gt; for &amp;f32 {\n    type Output = f32;\n    fn min(self, other: &amp;f32) -&gt; Self::Output {\n        (*self).min(*other)\n    }\n}\n\n// Create a struct with a generic float inside\n#[derive(Debug)]\nstruct MyStruct&lt;Float&gt; {\n    x: Float,\n}\n\n// Implement to Methods2 trait for MyStruct\nimpl&lt;Float&gt; Methods2&lt;MyStruct&lt;Float&gt;&gt; for MyStruct&lt;Float&gt;\nwhere\n    Float: AllCombos&lt;Float&gt;,\n    for&lt;'a&gt; &amp;'a Float: AllCombos&lt;Float&gt;,\n{\n    type Output = MyStruct&lt;Float&gt;;\n    fn min(self, other: MyStruct&lt;Float&gt;) -&gt; Self::Output {\n        MyStruct::&lt;Float&gt; {\n            x: self.x.min(other.x),\n        }\n    }\n}\n\nimpl&lt;Float&gt; Methods2&lt;MyStruct&lt;Float&gt;&gt; for &amp;MyStruct&lt;Float&gt;\nwhere\n    Float: AllCombos&lt;Float&gt;,\n    for&lt;'a&gt; &amp;'a Float: AllCombos&lt;Float&gt;,\n{\n    type Output = MyStruct&lt;Float&gt;;\n    fn min(self, other: MyStruct&lt;Float&gt;) -&gt; Self::Output {\n        MyStruct::&lt;Float&gt; {\n            x: (&amp;self.x).min(other.x),\n        }\n    }\n}\n\nimpl&lt;Float&gt; Methods2&lt;&amp;MyStruct&lt;Float&gt;&gt; for MyStruct&lt;Float&gt;\nwhere\n    Float: AllCombos&lt;Float&gt;,\n    for&lt;'a&gt; &amp;'a Float: AllCombos&lt;Float&gt;,\n{\n    type Output = MyStruct&lt;Float&gt;;\n    fn min(self, other: &amp;MyStruct&lt;Float&gt;) -&gt; Self::Output {\n        MyStruct::&lt;Float&gt; {\n            x: self.x.min(&amp;other.x),\n        }\n    }\n}\n\nimpl&lt;Float&gt; Methods2&lt;&amp;MyStruct&lt;Float&gt;&gt; for &amp;MyStruct&lt;Float&gt;\nwhere\n    Float: AllCombos&lt;Float&gt;,\n    for&lt;'a&gt; &amp;'a Float: AllCombos&lt;Float&gt;,\n{\n    type Output = MyStruct&lt;Float&gt;;\n    fn min(self, other: &amp;MyStruct&lt;Float&gt;) -&gt; Self::Output {\n        MyStruct::&lt;Float&gt; {\n            x: (&amp;self.x).min(&amp;other.x),\n        }\n    }\n}\n\n// Lifts a variable into MyStruct\nfn lift&lt;Float&gt;(x: Float) -&gt; MyStruct&lt;Float&gt;\nwhere\n    Float: AllCombos&lt;Float&gt;,\n    for&lt;'a&gt; &amp;'a Float: AllCombos&lt;Float&gt;,\n{\n    MyStruct { x }\n}\n\n// Create an element\nfn main() {\n    let bar = lift(4.0_f32).min(lift(2.0_f32));\n    //let bar = lift::&lt;f32&gt;(4.0_f32).min(lift::&lt;f32&gt;(2.0_f32));\n    println!(\"{:?}\", bar.x);\n}\n</code></pre>\n\n<p>This generates the compiler error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `&amp;'a MyStruct&lt;_&gt;: Methods2&lt;MyStruct&lt;_&gt;&gt;`\n   --&gt; src/main.rs:119:15\n    |\n119 |     let bar = lift(4.0_f32).min(lift(2.0_f32));\n    |               ^^^^\n    |\n    = help: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n    = note: required because of the requirements on the impl of `for&lt;'a&gt; AllCombos&lt;MyStruct&lt;_&gt;&gt;` for `&amp;'a MyStruct&lt;_&gt;`\n    = note: required because of the requirements on the impl of `Methods2&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;_&gt;&gt;`\n    = note: required because of the requirements on the impl of `for&lt;'a&gt; AllCombos&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;_&gt;&gt;`\n    = note: required because of the requirements on the impl of `Methods2&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;`\n    = note: required because of the requirements on the impl of `for&lt;'a&gt; AllCombos&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;`\n    = note: required because of the requirements on the impl of `Methods2&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;`\n    = note: required because of the requirements on the impl of `for&lt;'a&gt; AllCombos&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;`\n    = note: required because of the requirements on the impl of `Methods2&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;&gt;`\n    = note: required because of the requirements on the impl of `for&lt;'a&gt; AllCombos&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;&gt;&gt;` for `&amp;'a MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;MyStruct&lt;_&gt;&gt;&gt;&gt;&gt;`\nnote: required by `lift`\n   --&gt; src/main.rs:109:1\n    |\n109 | / fn lift&lt;Float&gt;(x: Float) -&gt; MyStruct&lt;Float&gt;\n110 | | where\n111 | |     Float: AllCombos&lt;Float&gt;,\n112 | |     for&lt;'a&gt; &amp;'a Float: AllCombos&lt;Float&gt;,\n113 | | {\n114 | |     MyStruct { x }\n115 | | }\n    | |_^\n</code></pre>\n\n<p>Now, this can be resolve by replacing the call to <code>lift</code> with the full qualified syntax, which was commented out in the above code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let bar = lift::&lt;f32&gt;(4.0_f32).min(lift::&lt;f32&gt;(2.0_f32));\n</code></pre>\n\n<p>Though that works, it a larger code, it results in annotations everywhere, which is burdensome.  I'd like the original call</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let bar = lift(4.0_f32).min(lift(2.0_f32));\n</code></pre>\n\n<p>to work.  I can sort of make this happen by replacing the implementation of the <code>AllCombos</code> trait</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T, NonRef&gt; AllCombos&lt;NonRef&gt; for T where\n    T: Methods2&lt;NonRef, Output = NonRef&gt;\n        + for&lt;'a&gt; Methods2&lt;&amp;'a NonRef, Output = NonRef&gt;\n{\n}\n</code></pre>\n\n<p>with explicit implementations for each type</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl AllCombos&lt;f32&gt; for f32 {}\nimpl AllCombos&lt;f32&gt; for &amp;f32 {}\nimpl AllCombos&lt;MyStruct&lt;f32&gt;&gt; for MyStruct&lt;f32&gt; {}\nimpl AllCombos&lt;MyStruct&lt;f32&gt;&gt; for &amp;MyStruct&lt;f32&gt; {}\n</code></pre>\n\n<p>Then, everything works as expected.  However, this is somewhat inconvenient because it must be specified for all new types, twice.  Are there different options that preserves the generic implementation of <code>AllCombos</code>, but doesn't subsequently require fully qualified syntax for all function calls to methods within that trait?</p>\n"}, {"tags": ["rust", "embedded", "svd"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571032245, "post_id": 58369597, "comment_id": 103091029, "body": "Why do you want the old format? This code should compile as well."}, {"owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571063183, "post_id": 58369597, "comment_id": 103106179, "body": "@Cerberus What do you mean by the old format?"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1571065425, "post_id": 58369597, "comment_id": 103107407, "body": "In other words, why do you want multiple folders with <code>mod.rs</code> in each and not multiple files?"}, {"owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1571066681, "post_id": 58369597, "comment_id": 103108028, "body": "@Cerberus Hm. I know this is strange. But to be honest, when I build the library and inspect it with <code>objdump</code> with -d flag the older library clearly shows me all the functions and the instructions associated with those functions. However, for my own version it only has less number of functions when compared to the original. I was thinking that the reason was due to my version did not contain separate modules. My actual requirement is to get a dump of the compiled library as similar to the original library so that it contains all the functions and their instructions clearly."}], "owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1571029378, "creation_date": 1571022174, "last_edit_date": 1571029378, "question_id": 58369597, "link": "https://stackoverflow.com/questions/58369597/library-generated-from-svd2rust-is-not-as-the-standard-format-with-modules", "title": "Library generated from `svd2rust` is not as the standard format with modules", "body": "<p>According to <a href=\"https://github.com/japaric/stm32f30x/tree/master/src\" rel=\"nofollow noreferrer\">this</a> crate all the functions are clearly nested inside modules and each of the folder contains mod.rs file which contains the source code. I use the same <code>svd</code> file and used the <code>svd2rust</code> tool to generate the crate myself following the same instructions listed <a href=\"https://docs.rs/svd2rust/0.16.1/svd2rust/\" rel=\"nofollow noreferrer\">here</a>. Even after following the instructions in exact manner, I did not get the exact format, for example: instead of <code>stm32f30x/src/gpioa/afrh/mod.rs</code> I get a path of stm32f30x/src/gpioa/afrh.rs and I dont have an <code>afrh</code> directory that contains <code>mod.rs</code>. </p>\n\n<p>I am a beginner to rust and please forgive me if I am being stupid. If possible please explain the reason for this and any command that I could used to generate exact order to generate the library same as in <a href=\"https://github.com/japaric/stm32f30x/tree/master/src/gpioa/afrh\" rel=\"nofollow noreferrer\">here</a>. </p>\n\n<p>Following is an image of my gpioa directory, there I dont have anymore folders and no <code>mod.rs</code> file.</p>\n\n<p>PS: I checked the code and it contains all the functions with the modules. I just need to separate these modules as it has done in the original library</p>\n\n<p><a href=\"https://i.stack.imgur.com/ILCM3.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ILCM3.png\" alt=\"this is my directory\"></a></p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 47, "last_activity_date": 1571014733, "creation_date": 1571014733, "answer_id": 58368936, "question_id": 58368801, "link": "https://stackoverflow.com/questions/58368801/how-do-i-check-if-a-thing-is-in-a-vector/58368936#58368936", "title": "How do I check if a thing is in a vector", "body": "<p>While you could construct a loop, an easier way would be to use the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.any\" rel=\"noreferrer\"><code>any</code></a> method on an iterator for your vector.</p>\n\n<p><code>any</code> takes a closure that returns true or false. The closure is called for each of the items in turn until it finds one that returns true. Note that the iterator returns references to the values (thus the <code>&amp;</code> in <code>|&amp;i|</code>).</p>\n\n<pre><code>let n= vec![\"-i\",\"mmmm\"];\n\nif n.iter().any(|&amp;i| i==\"-i\") {\n    println!(\"Yes\");\n}\n</code></pre>\n\n<p>Since <code>any</code> operates on iterators, it can be used with any type of container. There are a large number of similar methods available on iterators, such as <code>all</code>, <code>find</code>, etc. See the standard library documentation for <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"noreferrer\"><code>Iterators</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "is_accepted": false, "score": 46, "last_activity_date": 1571021876, "creation_date": 1571021876, "answer_id": 58369562, "question_id": 58368801, "link": "https://stackoverflow.com/questions/58368801/how-do-i-check-if-a-thing-is-in-a-vector/58369562#58369562", "title": "How do I check if a thing is in a vector", "body": "<p>There is the <code>contains</code> (<a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.contains\" rel=\"noreferrer\">https://doc.rust-lang.org/std/vec/struct.Vec.html#method.contains</a>) method on <code>Vec</code>.</p>\n\n<p>Example:</p>\n\n<pre><code>let n = vec![\"-i\",\"mmmm\"];\n\nif n.contains(&amp;\"-i\") { \n    println!(\"yes\");\n} else {\n    println!(\"no\");\n}\n</code></pre>\n\n<p>It is somewhat <a href=\"https://github.com/rust-lang/rust/issues/42671\" rel=\"noreferrer\">restrictive</a>, for instance it doesn't allow checking if a <code>Vec&lt;String&gt;</code> contains <code>x</code> if <code>x</code> is of type <code>&amp;str</code>. In that case, you will have to use the <code>.iter().any(...)</code> method described by @harmic</p>\n"}], "owner": {"reputation": 915, "user_id": 9716278, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-y_OzgTqtpA8/AAAAAAAAAAI/AAAAAAAABmM/yM8i9oN9vmw/photo.jpg?sz=128", "display_name": "9716278", "link": "https://stackoverflow.com/users/9716278/9716278"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 15037, "favorite_count": 5, "accepted_answer_id": 58368936, "answer_count": 2, "score": 31, "last_activity_date": 1571021876, "creation_date": 1571012614, "question_id": 58368801, "link": "https://stackoverflow.com/questions/58368801/how-do-i-check-if-a-thing-is-in-a-vector", "title": "How do I check if a thing is in a vector", "body": "<p>How do I check if a thing is in a vector?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let n= vec![\"-i\",\"mmmm\"];\nif \"-i\" in n { \n    println!(\"yes\");\n} else {\n    println!(\"no\");\n</code></pre>\n\n<p>I'm guessing that I need to put this in a loop and then do <code>if \"-i\" in x</code> where <code>x</code> is the iter var. But I was hopping there is a handy method available or I've confused the syntax and there is a similar way to do this.</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 814, "user_id": 10591515, "user_type": "registered", "profile_image": "https://graph.facebook.com/2363120117050209/picture?type=large", "display_name": "Ana Khorguani", "link": "https://stackoverflow.com/users/10591515/ana-khorguani"}, "edited": false, "score": 0, "creation_date": 1571054868, "post_id": 58368329, "comment_id": 103101721, "body": "Thanks a lot, I got you points and your suggested solution seems way optimal than my code. Would it be also possible to explain why trying this: a1.iter().chain(intermediate) gives an error with chain method: type mismatch resolving ... ? because I think this should be giving iterator as well as once(start) does, not?"}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "reply_to_user": {"reputation": 814, "user_id": 10591515, "user_type": "registered", "profile_image": "https://graph.facebook.com/2363120117050209/picture?type=large", "display_name": "Ana Khorguani", "link": "https://stackoverflow.com/users/10591515/ana-khorguani"}, "edited": false, "score": 0, "creation_date": 1571093743, "post_id": 58368329, "comment_id": 103117877, "body": "@AnaKhorguani answer has been updated to address your question."}, {"owner": {"reputation": 814, "user_id": 10591515, "user_type": "registered", "profile_image": "https://graph.facebook.com/2363120117050209/picture?type=large", "display_name": "Ana Khorguani", "link": "https://stackoverflow.com/users/10591515/ana-khorguani"}, "edited": false, "score": 0, "creation_date": 1571094512, "post_id": 58368329, "comment_id": 103118080, "body": "Ah, I see now. Thank you very much :)"}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 5, "last_activity_date": 1571093720, "last_edit_date": 1571093720, "creation_date": 1571006547, "answer_id": 58368329, "question_id": 58367776, "link": "https://stackoverflow.com/questions/58367776/chain-vector-and-intoiterator-element-in-rust/58368329#58368329", "title": "Chain Vector and IntoIterator element in Rust", "body": "<p>Here are a few hints:</p>\n\n<ul>\n<li>You have created three separate vectors (one explicitly, two using <code>collect</code>) when in fact you only need one.</li>\n<li>You can use the <a href=\"https://doc.rust-lang.org/std/iter/fn.once.html\" rel=\"nofollow noreferrer\"><code>std::iter::once</code></a> iterator to produce iterators for the start and end integers</li>\n<li>No need to collect the intermediate range. The <code>intermediate</code> argument implements <code>IntoIterator</code>, so you can feed it directly to <a href=\"https://doc.rust-lang.org/stable/core/iter/trait.Iterator.html#method.chain\" rel=\"nofollow noreferrer\"><code>chain</code></a>. So, you can chain together the start, intermediate and end.</li>\n<li>No need to use the 'return' keyword at the end of a function - the result of a function is the value of the last expression in it (as long as there is no semicolon on the end).</li>\n</ul>\n\n<p>Applying those tips your function would look like this:</p>\n\n<pre><code>use std::iter::once;\n\npub fn intervals&lt; I&gt;(start: u32, end: u32, intermediate: I) -&gt; Vec&lt;u32&gt;\nwhere\n    I: IntoIterator&lt;Item = u32&gt;,\n{\n    once(start).chain(intermediate).chain(once(end)).collect()\n}\n</code></pre>\n\n<p>One additional thing to note, to answer your question from the comments:</p>\n\n<blockquote>\n  <p>why trying this: a1.iter().chain(intermediate) gives an error with chain method</p>\n</blockquote>\n\n<p>Calling <code>Vec::iter()</code> returns an iterator that returns <strong>references</strong> to the values in the vector. This makes sense: calling <code>iter()</code> does not consume the vector, and its contents remain intact: you could iterate over it multiple times if you wanted.</p>\n\n<p>On the other hand, invoking <code>into_iter()</code> from the <code>IntoIterator</code> trait returns an iterator that returns the <strong>values</strong>. This also makes sense: <code>into_iter()</code> does consume the object you are calling it on, so the iterator then takes ownership of the items that were previously owned by the object.</p>\n\n<p>Trying to chain together two such iterators does not work because they are each iterating different types. One resolution would be to consume a1 as well, like this:</p>\n\n<pre><code>let mut iter : Vec&lt;u32&gt; = a1.into_iter().chain(intermediate).collect();\n</code></pre>\n"}], "owner": {"reputation": 814, "user_id": 10591515, "user_type": "registered", "profile_image": "https://graph.facebook.com/2363120117050209/picture?type=large", "display_name": "Ana Khorguani", "link": "https://stackoverflow.com/users/10591515/ana-khorguani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 481, "favorite_count": 1, "accepted_answer_id": 58368329, "answer_count": 1, "score": 1, "last_activity_date": 1571093720, "creation_date": 1571000701, "question_id": 58367776, "link": "https://stackoverflow.com/questions/58367776/chain-vector-and-intoiterator-element-in-rust", "title": "Chain Vector and IntoIterator element in Rust", "body": "<p>I want to write a function in Rust that will return the vector composed of start integer, then all intermediate integers and then end integer. The assertion it should hold is this: </p>\n\n<pre><code>assert_eq!(intervals(0, 4, 1..4), vec![0, 1, 2, 3, 4]);\n</code></pre>\n\n<p>The hint is to use <strong>chain method for iterators</strong>. The function declaration is predefined, I implemented it in one way, which is the following code:</p>\n\n<pre><code>pub fn intervals&lt; I&gt;(start: u32, end: u32, intermediate: I) -&gt; Vec&lt;u32&gt;\nwhere\n    I: IntoIterator&lt;Item = u32&gt;,\n{\n    let mut a1 = vec![];\n    a1.push(start);\n\n    let inter: Vec&lt;u32&gt; = intermediate.into_iter().collect();\n    let mut iter : Vec&lt;u32&gt; = a1.iter().chain(inter.iter()).map(|x| *x).collect();\n\n    iter.push(end);\n    return iter;\n}\n</code></pre>\n\n<p>But I am quite convinced this is not really optimal way to do this. I am sure I am doing lots of unnecessary things in the middle two lines. I tried to use intermediate directly like this: </p>\n\n<pre><code>let mut iter: Vec&lt;u32&gt; = a1.iter().chain(intermediate).map(|x| *x).collect();\n</code></pre>\n\n<p>But I am getting this error for chain method and I don't know how to solve it:</p>\n\n<pre><code>type mismatch resolving &lt;I as std::iter::IntoIterator&gt;::Item==&amp;u32, \nexpected u32, found &amp;u32\n</code></pre>\n\n<p>I am super new in Rust so any advice would be helpful to understand what's the right way to use intermediate parameter here. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571149694, "post_id": 58367487, "comment_id": 103139484, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/33687447/155423\">How to get a reference to a concrete type from a trait object?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58367487/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 479, "user_id": 3589318, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db6d45e9ee6d8f320981d034c269d99e?s=128&d=identicon&r=PG&f=1", "display_name": "McDuffin", "link": "https://stackoverflow.com/users/3589318/mcduffin"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1571154994, "post_id": 58367487, "comment_id": 103142556, "body": "In my use case the &quot;create_vector&quot; object does not have a static lifetime, which I believe means that one cannot downcast via Any? I&#39;ve edited the question accordingly"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1571158831, "post_id": 58367487, "comment_id": 103144332, "body": "<i>static lifetimes seems unattractive in a language whose calling card is safe, efficient memory management</i> \u2014 this appears to be a non-sequitur. These two things, while related, aren&#39;t relevant to each other in this situation."}], "answers": [{"tags": [], "owner": {"reputation": 479, "user_id": 3589318, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db6d45e9ee6d8f320981d034c269d99e?s=128&d=identicon&r=PG&f=1", "display_name": "McDuffin", "link": "https://stackoverflow.com/users/3589318/mcduffin"}, "is_accepted": true, "score": 0, "last_activity_date": 1571301822, "creation_date": 1571301822, "answer_id": 58428425, "question_id": 58367487, "link": "https://stackoverflow.com/questions/58367487/testing-iterator-over-dynamic-trait-objects/58428425#58428425", "title": "Testing iterator over dynamic trait objects", "body": "<p>In the absence of any better ideas, one possible workaround is to make use of the Debug trait for <code>A</code>s and <code>B</code>s: testing the formatted debugging output for equality is often equivalent to the intended notion of equality between <code>A</code>s and <code>B</code>s.</p>\n\n<pre><code>/* ... */\nassert_eq!(\n    format!(\"{:?}\", *iter\n        .next()\n        .expect(\"Should have initial element from iterator\")),\n    format(\"{:?}\", A { value: 3 })\n);\nassert_eq!(\n    format!(\"{:?}\", *iter\n        .next()\n        .expect(\"Should have second element from iterator\")),\n    format(\"{:?}\", A { value: 5 })\n);\nassert_eq!(\n    format!(\"{:?}\", *iter\n        .next()\n        .expect(\"Should have third element from iterator\")),\n    format(\"{:?}\",         \n    B {\n        value_1: 3,\n        value_2: 1\n    })\n);\nassert_eq!(\n    format!(\"{:?}\", *iter\n        .next()\n        .expect(\"Should have third element from iterator\")),\n    format(\"{:?}\",         \n    B {\n        value_1: 5,\n        value_2: 2\n    })\n);\n</code></pre>\n"}], "owner": {"reputation": 479, "user_id": 3589318, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db6d45e9ee6d8f320981d034c269d99e?s=128&d=identicon&r=PG&f=1", "display_name": "McDuffin", "link": "https://stackoverflow.com/users/3589318/mcduffin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 58428425, "answer_count": 1, "score": 0, "last_activity_date": 1571301822, "creation_date": 1570997933, "last_edit_date": 1571160898, "question_id": 58367487, "link": "https://stackoverflow.com/questions/58367487/testing-iterator-over-dynamic-trait-objects", "title": "Testing iterator over dynamic trait objects", "body": "<p>I have two types <code>A</code> and <code>B</code> that implement the <code>Fooable</code> trait. I have an array of <code>A</code>s, and an array of <code>B</code>s, and create an iterator over the two arrays, the iterator having Item type <code>&amp;dyn Fooable</code>. I want to write a test to confirm that the iterator outputs the correct objects, something like:</p>\n\n<pre><code>struct C {\n    as_array: [A; 2],\n    bs_arry: [B; 2],\n}\n\nimpl C {\n    fn contents_iter(&amp;self) -&gt; FoosIterator {\n        FoosIterator {\n            a_iter: (&amp;self.as_array).into_iter(),\n            b_iter: (&amp;self.bs_arry).into_iter(),\n        }\n    }\n}\n\nstruct FoosIterator&lt;'a&gt; {\n    a_iter: &lt;&amp;'a [A; 2] as IntoIterator&gt;::IntoIter,\n    b_iter: &lt;&amp;'a [B; 2] as IntoIterator&gt;::IntoIter,\n}\n\nimpl&lt;'a&gt; Iterator for FoosIterator&lt;'a&gt; {\n    type Item = &amp;'a dyn Fooable;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        match self.a_iter.next() {\n            Some(upper_slot) =&gt; Some(upper_slot),\n            None =&gt; self.b_iter.next().map(|x| x as &amp;dyn Fooable),\n        }\n    }\n}\n\ntrait Fooable: std::fmt::Debug {\n    fn calculate_num(&amp;self) -&gt; i32;\n}\n\n#[derive(PartialEq, Debug)]\nstruct A {\n    value: i32,\n}\n\nimpl Fooable for A {\n    fn calculate_num(&amp;self) -&gt; i32 {\n        self.value\n    }\n}\n\n#[derive(PartialEq, Debug)]\nstruct B {\n    value_1: i32,\n    value_2: i32,\n}\n\nimpl Fooable for B {\n    fn calculate_num(&amp;self) -&gt; i32 {\n        self.value_1 * 5 + self.value_2\n    }\n}\n\n#[test]\nfn test_contents_iter() {\n    let c = C {\n        as_array: [A { value: 3 }, A { value: 5 }],\n        bs_arry: [\n            B {\n                value_1: 3,\n                value_2: 1,\n            },\n            B {\n                value_1: 5,\n                value_2: 2,\n            },\n        ],\n    };\n    let mut iter = c.contents_iter();\n    assert_eq!(\n        *iter\n            .next()\n            .expect(\"Should have initial element from iterator\"),\n        A { value: 3 }\n    );\n    assert_eq!(\n        *iter\n            .next()\n            .expect(\"Should have second element from iterator\"),\n        A { value: 5 }\n    );\n    assert_eq!(\n        *iter\n            .next()\n            .expect(\"Should have third element from iterator\"),\n        B {\n            value_1: 3,\n            value_2: 1\n        }\n    );\n    assert_eq!(\n        *iter\n            .next()\n            .expect(\"Should have fourth element from iterator\"),\n        B {\n            value_1: 5,\n            value_2: 2\n        }\n    );\n}\n</code></pre>\n\n<p>The problem is that objects of type <code>&amp;dyn Fooable</code> do not implement the <code>PartialEq</code> trait, so cannot be compared for equality:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `==` cannot be applied to type `dyn Fooable`\n  --&gt; src/lib.rs:73:5\n   |\n73 | /     assert_eq!(\n74 | |         *iter\n75 | |             .next()\n76 | |             .expect(\"Should have initial element from iterator\"),\n77 | |         A { value: 3 }\n78 | |     );\n   | |      ^\n   | |      |\n   | |______dyn Fooable\n   |        A\n   |\n   = note: an implementation of `std::cmp::PartialEq` might be missing for `dyn Fooable`\n   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n</code></pre>\n\n<p>As I understand it (for instance from <a href=\"https://stackoverflow.com/questions/25339603/how-to-test-for-equality-between-trait-objects\">How to test for equality between trait objects?</a>) there is no way to implement this trait for a dynamic type. Is there any way to achieve something like the aim here? I suppose one could instead expose some of the data constituting objects of type <code>A</code> and <code>B</code> in the <code>Fooable</code> trait, and use this to check that the objects outputted are the correct ones (in my actual use case the <code>A</code>s and <code>B</code>s are more complicated than in my toy example above).</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1570996408, "post_id": 58367174, "comment_id": 103084731, "body": "Also, <code>main</code> calls <code>w.fun1()</code> and still has <code>w</code> in its scope\u2026"}, {"owner": {"reputation": 147, "user_id": 9620900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g6DQE.png?s=128&g=1", "display_name": "mikeProgrammer", "link": "https://stackoverflow.com/users/9620900/mikeprogrammer"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1570996899, "post_id": 58367174, "comment_id": 103084878, "body": "Yeap, I don&#39;t understand why it works. For example this is not allowed:  <a href=\"https://stackoverflow.com/q/58364807/9620900\">stackoverflow.com/q/58364807/9620900</a>"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1570996975, "post_id": 58367174, "comment_id": 103084893, "body": "Did you read <a href=\"https://doc.rust-lang.org/1.8.0/book/references-and-borrowing.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.8.0/book/references-and-borrowing.html</a>?"}, {"owner": {"reputation": 147, "user_id": 9620900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g6DQE.png?s=128&g=1", "display_name": "mikeProgrammer", "link": "https://stackoverflow.com/users/9620900/mikeprogrammer"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1570997267, "post_id": 58367174, "comment_id": 103084980, "body": "I have read rust-book section about borrowing and references many times. I didn&#39;t find answer for my question there."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1571000185, "post_id": 58367174, "comment_id": 103085626, "body": "Doesn&#39;t &quot;<i>we take a reference, and rather than owning the resource, it borrows ownership. This means that after the call to foo(), we can use our original bindings again.</i>&quot; answer your question? Or maybe I just didn&#39;t understand what exactly your question is?"}, {"owner": {"reputation": 147, "user_id": 9620900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g6DQE.png?s=128&g=1", "display_name": "mikeProgrammer", "link": "https://stackoverflow.com/users/9620900/mikeprogrammer"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1571001169, "post_id": 58367174, "comment_id": 103085822, "body": "Oh, this section I understand in 100%. But I think my example is quite different. When I call <code>w.fun1()</code> I am borrowing <code>w</code> as mutable, then in <code>fun1()</code> I am calling <code>fun2()</code> on <code>self</code>, so I am borrowing <code>self</code> (<code>w</code> in fact) as mutable second time. Isn&#39;t this an example of multiple mutable reference to the same variable in one scope? Or I misunderstand something. Because scope of main in which <code>w</code> is borrowed as mutable didn&#39;t end when <code>fun2()</code> borrows second time <code>w</code> as mutable."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1571001650, "post_id": 58367174, "comment_id": 103085927, "body": "No, they are not in the same scope. Sure, they might all exist at the same time, but only one of them is non-borrowed."}], "answers": [{"tags": [], "owner": {"reputation": 14545, "user_id": 42188, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/0b0abbefc6a9375882ea3cc0c6da61c8?s=128&d=identicon&r=PG", "display_name": "muhuk", "link": "https://stackoverflow.com/users/42188/muhuk"}, "is_accepted": true, "score": 2, "last_activity_date": 1571887833, "creation_date": 1571887833, "answer_id": 58533736, "question_id": 58367174, "link": "https://stackoverflow.com/questions/58367174/how-does-multiple-mutable-reference-prevention-work-in-rust/58533736#58533736", "title": "How does multiple mutable reference prevention work in Rust?", "body": "<p>This is allowed because the borrow checker can conclude there is only one mutable reference being accessed during execution.  While <code>fun2</code> is running, no other statement in <code>fun1</code> is being executed.  When the next statement in <code>fun1</code> (if there was any) starts executing, <code>fun2</code> has already dropped its mutable reference.</p>\n\n<p>In the other question linked:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut x1 = String::from(\"hello\");\n    let r1 = &amp;mut x1;\n    let r2 = &amp;mut x1;\n\n    r1.insert(0, 'w');\n}\n</code></pre>\n\n<p>We can say <code>r2</code> is never used, but borrow checker decided it shouldn't be allowed.  Consider this example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut x1 = String::from(\"hello\");\n    let r1 = &amp;mut x1;\n    r1.insert(0, 'w');\n\n    let r2 = &amp;mut x1;\n    r2.insert(0, 'x');\n}\n</code></pre>\n\n<p>This compiles and runs correctly.  I suppose borrow checker assumes the lifetime <code>r1</code> ends before <code>r2</code> is created.  If this makes sense, calling methods that mutate <code>self</code> shouldn't be so surprising.</p>\n\n<p>(I don't know why the 1st piece of code does not compile, but I am glad rust team made it that way.  <code>r2</code> should not be there anyway.)</p>\n"}], "owner": {"reputation": 147, "user_id": 9620900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g6DQE.png?s=128&g=1", "display_name": "mikeProgrammer", "link": "https://stackoverflow.com/users/9620900/mikeprogrammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 58533736, "answer_count": 1, "score": 0, "last_activity_date": 1571887833, "creation_date": 1570995674, "question_id": 58367174, "link": "https://stackoverflow.com/questions/58367174/how-does-multiple-mutable-reference-prevention-work-in-rust", "title": "How does multiple mutable reference prevention work in Rust?", "body": "<p>Why it is allowed to do something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut w = MyStruct;\n    w.fun1();\n}\n\nstruct MyStruct;\n\nimpl MyStruct {\n    fn fun1(&amp;mut self) {\n        self.fun2();\n    }\n\n    fn fun2(&amp;mut self) {\n        println!(\"Hello world 2\");\n    }\n}\n</code></pre>\n\n<p>In the above code <code>fun1()</code> gets <code>mut MyStruct</code> and calls <code>fun2()</code> also with <code>mut MyStruct</code>. Is it double mutable reference in one scope?</p>\n"}, {"tags": ["rust", "static-libraries"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1570994709, "post_id": 58366861, "comment_id": 103084312, "body": "I think <code>.rlib</code>s are just static libraries with some additional metadata. What platform are you on? On Linux, you should be able to use the standard tools that work for <code>.a</code> files, e.g. <code>ar</code>, <code>nm</code> or <code>objdump</code>. E.g. <code>objdump -d whatever.rlib</code> gives me the disassembly of all functions in an rlib. A <a href=\"https://github.com/Yamakaky/rust-unmangle\" rel=\"nofollow noreferrer\">script to unmangle the Rust symbols</a> may be helpful as well."}, {"owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570995870, "post_id": 58366861, "comment_id": 103084603, "body": "Thank you so much. I used objdump and and it seems to be working.  Do you know a way that I could use a way to demangle the rust symbols?  Sorry I am just a beginner to rust and have not much experience with it"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1570997192, "post_id": 58366861, "comment_id": 103084960, "body": "Apparently I linked the wrong thing in the last comment. <code>cargo install rustfilt</code> and piping the output of <code>objdump</code> to <code>rustfilt</code> should give you reasonable output."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1571302356, "last_edit_date": 1571302356, "creation_date": 1571063071, "answer_id": 58378808, "question_id": 58366861, "link": "https://stackoverflow.com/questions/58366861/tools-for-inspecting-rlib-files/58378808#58378808", "title": "Tools for inspecting .rlib files", "body": "<p>The <code>.rlib</code> format is specific to Rust, and its format is unspecified. It is essentially the respective platform's static library format with some additional metadata in additional archive members. This means that you can use whatever tool you would use on your platform to inspect static libraries.</p>\n\n<p>On Linux, you can use <code>objdump -d</code> to dump the disassembly of all functions in an <code>.rlib</code> file. All symbols will be mangled and hard to read, though, which can be fixed with <code>rustfilt</code>:</p>\n\n<pre><code>cargo install rustfilt\nobjdump -d whatever.rlib | rustfilt\n</code></pre>\n"}], "owner": {"reputation": 473, "user_id": 5901897, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/0fbf2a86a3396d3a1110eda374b0166b?s=128&d=identicon&r=PG&f=1", "display_name": "hEShaN", "link": "https://stackoverflow.com/users/5901897/heshan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 614, "favorite_count": 0, "accepted_answer_id": 58378808, "answer_count": 1, "score": 0, "last_activity_date": 1571302356, "creation_date": 1570993416, "last_edit_date": 1571063997, "question_id": 58366861, "link": "https://stackoverflow.com/questions/58366861/tools-for-inspecting-rlib-files", "title": "Tools for inspecting .rlib files", "body": "<p>I have a rlib generated from <a href=\"https://github.com/japaric/stm32f30x\" rel=\"nofollow noreferrer\">this</a> repository (a HAL library that could be used in embedded Rust) and I would like to identify the instruction sequences of functions in the library for my research work. Though there are many tools that are there for different languages, I couldn't find a tool that could work with rlib's. I found <a href=\"https://stackoverflow.com/questions/24603672/rust-library-for-inspecting-rlib-binaries\">Rust library for inspecting .rlib binaries</a>, but the tool noted here does not seem to be working.</p>\n"}, {"tags": ["rust", "tuples", "pattern-matching", "destructuring"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1571036105, "post_id": 58366693, "comment_id": 103092429, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/47667195/destructuring-tuples-into-typed-variables\">Destructuring tuples into typed variables</a>"}], "answers": [{"tags": [], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "is_accepted": true, "score": 4, "last_activity_date": 1570992468, "last_edit_date": 1570992468, "creation_date": 1570992189, "answer_id": 58366694, "question_id": 58366693, "link": "https://stackoverflow.com/questions/58366693/is-it-possible-to-destructure-a-tuple-with-an-irrefutable-pattern-in-a-function/58366694#58366694", "title": "Is it possible to destructure a tuple with an irrefutable pattern in a function declaration?", "body": "<p>What you have to do is type the whole tuple not the components inside it,</p>\n\n<pre><code>// this function accepts (k,v) tuple\nfn baz(\n    (k, v): (&amp;str, u8) // notice the parens\n) -&gt; bool {\n    true\n}\n</code></pre>\n\n\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 58366694, "answer_count": 1, "score": 1, "last_activity_date": 1570992789, "creation_date": 1570992189, "last_edit_date": 1570992789, "question_id": 58366693, "link": "https://stackoverflow.com/questions/58366693/is-it-possible-to-destructure-a-tuple-with-an-irrefutable-pattern-in-a-function", "title": "Is it possible to destructure a tuple with an irrefutable pattern in a function declaration?", "body": "<p>In rust I can currently do,</p>\n\n<pre><code>// this function accepts k,v\nfn foo(\n    k: &amp;str, v: u8\n) -&gt; bool {\n    true\n}\n</code></pre>\n\n<p>But I can not destructure the arguments in the signature,</p>\n\n<pre><code>// this function accepts (k,v) tuple\nfn bar(\n    (k: &amp;str, v: u8) // notice the parens\n) -&gt; bool {\n    true\n}\n</code></pre>\n\n<p>Is it possible to destructure a tuple with an irrefutable pattern?</p>\n"}, {"tags": ["reference", "rust", "closures", "lifetime"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570991714, "post_id": 58366511, "comment_id": 103083626, "body": "How exactly do you propose to convert <code>&amp;S</code> (borrowed) into <code>K</code> (owned) by just returning <code>s</code> (borrowed), exactly? There&#39;s something very fishy going on there."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570995355, "post_id": 58366511, "comment_id": 103084480, "body": "@S&#233;bastienRenauld I think <code>K</code> is not necessarily owned. In particular, we chould have <code>K==&amp;S</code> (at least that&#39;s what I think)."}], "answers": [{"comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1570998058, "post_id": 58366718, "comment_id": 103085169, "body": "I simplified my problem too much, sorry. Actually, I tried this, but this does not work out if I actually want to use <code>f</code> within <code>take_closure</code>. I think I - at least - have to specify arbitrary lifetime for <code>FnMut</code> (see my edited question). Thanks anyway for your answer."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 0, "last_activity_date": 1570992342, "creation_date": 1570992342, "answer_id": 58366718, "question_id": 58366511, "link": "https://stackoverflow.com/questions/58366511/identity-closure-on-references/58366718#58366718", "title": "Identity closure on references", "body": "<p>You can specify when you declare your function that <code>K</code> must not outlive <code>&amp;T</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn take_closure&lt;'a, T: 'a, K: 'a&gt;(f: impl FnMut(&amp;'a T)-&gt;K) {}\n\nstruct S;\nfn test() {\n    take_closure(|s: &amp;S| s)\n}\n</code></pre>\n"}], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1570997965, "creation_date": 1570990913, "last_edit_date": 1570997965, "question_id": 58366511, "link": "https://stackoverflow.com/questions/58366511/identity-closure-on-references", "title": "Identity closure on references", "body": "<p>I have a function that takes a closure. The closure takes a reference and returns any type <code>K</code>:</p>\n\n<pre><code>fn take_closure&lt;T, K&gt;(f: impl FnMut(&amp;T)-&gt;K) {/*...*/}\n</code></pre>\n\n<p>If I call <code>take_closure</code> with an identity function, i.e.</p>\n\n<pre><code>struct S;\nfn test() {\n    take_closure(|s: &amp;S| s)\n}\n</code></pre>\n\n<p>the compiler complains:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n</code></pre>\n\n<p>I think the problem is that <code>K</code> is one single type, but the closure must work for all lifetimes so that the closure's result must be something like <code>K + '(lifetime of closure parameter)</code>.</p>\n\n<p>Specifying that <code>K</code> lives as long as <code>&amp;T</code> does not really help:</p>\n\n<pre><code>fn take_closure&lt;'a, T: 'a + Default, K: 'a&gt;(mut f: impl FnMut(&amp;'a T)-&gt;K) {\n    let t = Default::default();\n    f(&amp;t); // error[E0597]: `t` does not live long enough\n}\n</code></pre>\n\n<p>Thus, I tried higher-rank trait bounds:</p>\n\n<pre><code>fn take_closure&lt;F, T: Default, K&gt;(mut f: F)\n    where for&lt;'a&gt; F: FnMut(&amp;'a T)-&gt;K // &lt;- (how) can I specify that K: 'a \n{\n    let t = Default::default();\n    f(&amp;t);\n}\n\n#[derive(Default)]\nstruct S;\nfn test() {\n    take_closure(|s: &amp;S| s) // error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n}\n</code></pre>\n\n<p>Is there a way to specify <code>take_closure</code> accordingly? I.e. can I somehow specify that <code>for&lt;'a&gt;</code>, my <code>FnMut(&amp;'a T)</code> produces a <code>K</code> satisfying lifetime <code>'a</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 1, "creation_date": 1570990038, "post_id": 58366181, "comment_id": 103083185, "body": "Please share the actual error. Also, what is OutputPin and which crates/use lines are needed to compile your code?"}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 3, "last_activity_date": 1570991574, "creation_date": 1570991574, "answer_id": 58366606, "question_id": 58366181, "link": "https://stackoverflow.com/questions/58366181/mutable-optional-outputpin/58366606#58366606", "title": "Mutable optional OutputPin", "body": "<p>I believe I've duplicated your set up. If something isn't right, please <strong>edit</strong> your question with the relevant details.</p>\n\n<p>src/main.rs:</p>\n\n<pre><code>use rppal::gpio::{Gpio, OutputPin, Pin};\n\nstruct Chip {\n    wake_pin: Option&lt;OutputPin&gt;,\n}\n\nimpl Chip {\n    pub fn new(wake_pin: Option&lt;Pin&gt;) -&gt; Chip {\n        Chip {\n            wake_pin: wake_pin.map(|pin| pin.into_output()),\n        }\n    }\n\n    pub fn awake(&amp;self) {\n        // Fails\n        if let Some(pin) = self.wake_pin {\n            pin.set_low();\n        }\n    }\n}\n\nfn main() {\n    let wake_pin = Gpio::new()\n        .expect(\"Can not init gpio\")\n        .get(255)\n        .expect(\"Could not attach to wake pin\");\n\n    let chip = Chip::new(Some(wake_pin));\n}\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"tmp\"\nversion = \"0.0.1\"\nedition = \"2018\"\n\n[dependencies]\nrppal = \"0.11.3\"\n</code></pre>\n\n<p>Attempting to compile this (with <code>cargo check</code> or similar), we get a warning and two errors.</p>\n\n<pre><code>warning: unused variable: `chip`\n  --&gt; src/main.rs:28:9\n   |\n28 |     let chip = Chip::new(Some(wake_pin));\n   |         ^^^^ help: consider prefixing with an underscore: `_chip`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nerror[E0507]: cannot move out of `self.wake_pin.0` which is behind a shared reference\n  --&gt; src/main.rs:16:28\n   |\n16 |         if let Some(pin) = self.wake_pin {\n   |                     ---    ^^^^^^^^^^^^^ help: consider borrowing here: `&amp;self.wake_pin`\n   |                     |\n   |                     data moved here\n   |                     move occurs because `pin` has type `rppal::gpio::pin::OutputPin`, which does not implement the `Copy` trait\n\nerror[E0596]: cannot borrow `pin` as mutable, as it is not declared as mutable\n  --&gt; src/main.rs:17:13\n   |\n16 |         if let Some(pin) = self.wake_pin {\n   |                     --- help: consider changing this to be mutable: `mut pin`\n17 |             pin.set_low();\n   |             ^^^ cannot borrow as mutable\n\nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations: E0507, E0596.\nFor more information about an error, try `rustc --explain E0507`.\nerror: Could not compile `tmp`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>Since you're presumably going to use <code>chip</code> later, we can silence the warning by temporarily renaming it to <code>_chip</code>.</p>\n\n<p><code>let _chip = Chip::new(Some(wake_pin));</code></p>\n\n<p>The first error tells us that we can't move the pin out of <code>self</code> since we're only borrowing <code>self</code>. It would be rather rude to invalidate the data behind self if we're only borrowing it. However, the compiler is telling us a solution. <code>help: consider borrowing here: `&amp;self.wake_pin`</code></p>\n\n<p>It ends up not quite being right, but it's the right direction.</p>\n\n<pre><code>if let Some(pin) = &amp;self.wake_pin {\n    pin.set_low();\n}\n</code></pre>\n\n<p>Now instead of <code>pin</code> having type <code>OutputPin</code> (an owned value), it has type <code>&amp;OutputPin</code> (a borrowed value).</p>\n\n<p>We still get the second error though (with a slightly different phrasing). The point is that <code>pin.set_low()</code> requires <code>pin</code> to be a mutable reference. Right now, we're taking <code>self</code> as an immutable reference (<code>pub fn awake(&amp;self)</code>). If we're going to mutate <code>self</code> or any of its fields, we need to take it mutably. This also means we need to make sure <code>pin</code> is borrowed mutably.</p>\n\n<pre><code>pub fn awake(&amp;mut self) {\n    if let Some(pin) = &amp;mut self.wake_pin {\n        pin.set_low();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 307, "user_id": 3189988, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/Vxc3I.gif?s=128&g=1", "display_name": "fragsalat", "link": "https://stackoverflow.com/users/3189988/fragsalat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 58366606, "answer_count": 1, "score": -1, "last_activity_date": 1588166538, "creation_date": 1570988579, "last_edit_date": 1588166538, "question_id": 58366181, "link": "https://stackoverflow.com/questions/58366181/mutable-optional-outputpin", "title": "Mutable optional OutputPin", "body": "<p>I'm stuck with ownership; I but can't make the <code>Option&lt;OutputPin&gt;</code> in my function usable. How should it be?</p>\n\n<pre><code>struct Chip {\n    wake_pin: Option&lt;OutputPin&gt;,\n}\n\nimpl Chip {\n    pub fn new(wake_pin: Option&lt;Pin&gt;) -&gt; Chip {\n        Chip {\n            wake_pin: wake_pin.map(|pin| pin.into_output()),\n        }\n    }\n\n    pub fn awake(&amp;self) {\n        // Fails\n        if let Some(pin) = self.wake_pin {\n            pin.set_low();\n        }\n    }\n}\n\nfn main() {\n    let wake_pin = Gpio::new()\n        .expect(\"Can not init gpio\")\n        .get(255)\n        .expect(\"Could not attach to wake pin\");\n\n    let chip = Chip::new(Some(wake_pin));\n}\n</code></pre>\n\n<p>I am using the rppal crate and the compiler fails in the <code>if let Some</code> area. I tried to borrow <code>wake_pin</code>, get the <code>Option</code> as a reference and some other things but I don't understand the ownership rules completely.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570991423, "post_id": 58366166, "comment_id": 103083544, "body": "1. <code>cargo run --release</code>; 2. Your abuse of <code>unsafe</code> when you could&#39;ve done without robbed the compiler of a few valuable optimizations even with <code>--release</code>; 3. You didn&#39;t actually show us the java code, so we can&#39;t even tell you whether you benchmarked the same thing."}, {"owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570992475, "post_id": 58366166, "comment_id": 103083807, "body": "@S&#233;bastienRenauld 1. I tried that; 2. It&#39;s not abuse, it appears to be necessary to convert <code>ptr</code> to a <code>slice</code> - but more importantly, how to confirm, or how to get around not using <code>unsafe</code>?; 3. I thought of keeping the question short and focused on how to understand where Rust spends time. I&#39;ve updated the question with the Go program that can be seen to run in 4 seconds, and consume 25% CPU."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570992833, "post_id": 58366166, "comment_id": 103083898, "body": "For #1, why did you report the unoptimized run time in the question? Not that I&#39;m calling results in shade or anything, but it&#39;s a bit misleading."}, {"owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570993044, "post_id": 58366166, "comment_id": 103083952, "body": "@S&#233;bastienRenauld Because I want to find out from the commenters what I am doing wrong. To me the compilation results show it is &quot;optimized&quot;. Is that misleading output from <code>rustc</code>? We can also exclude the suspicion that the file gets mapped differently, because the result is consistently 10x worse no matter in which order I execute the Go program. (eg Go first - 3 seconds - Rust - 30+ seconds - Go again - less than a second (the file is buffered by the OS) - Rust again - 30+ seconds) Plus the CPU utilisation is trying to tell me something."}, {"owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570993364, "post_id": 58366166, "comment_id": 103084029, "body": "@S&#233;bastienRenauld Also, am I using the wrong packages for the job? I am using <a href=\"https://docs.rs/mmap/0.1.1/mmap/struct.MemoryMap.html\" rel=\"nofollow noreferrer\">docs.rs/mmap/0.1.1/mmap/struct.MemoryMap.html</a> for <code>mmap</code>, I looked at the source for the mapping - it looks a fairly straightforward use of <code>libc</code> functions."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1570993481, "post_id": 58366166, "comment_id": 103084060, "body": "If nobody has touched this question before I get home, I&#39;ll dig into it; I don&#39;t have the tools to get through this properly on this laptop. Profiling should turn up a few things, as the 25% CPU usage would be very noticeable."}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 0, "creation_date": 1570995982, "post_id": 58366166, "comment_id": 103084628, "body": "I&#39;ve compiled this on rustc 1.37 and run it on a linux laptop with a 1GB random file: the code reports a runtime of 2 seconds and I don&#39;t see the cpu usage you describe (except if running a non-release build)"}, {"owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "reply_to_user": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 0, "creation_date": 1571004363, "post_id": 58366166, "comment_id": 103086434, "body": "@JussiKukkonen that was 1.36 and Mac OSX. Same result after <code>rustup update</code> upgraded to 1.38.0, <code>cargo build --release</code> with <code>opt-level=3</code> for <code>profile.release</code>. But glad to see it is not something dumb with the way I am doing it, just possibly something Mac-specific."}, {"owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "edited": false, "score": 1, "creation_date": 1571042839, "post_id": 58366166, "comment_id": 103095559, "body": "If anyone is watching, here&#39;s the update. Adding time measurements of function calls reveals there&#39;s something wrong with that <code>mmap</code> crate after all:  ``` a772d8c4 in 37.119 Time breakdown: mmap: 32.859 .data(): 0.000 from_raw_parts: 0.000 crc32.write: 4.233 ```"}], "answers": [{"tags": [], "owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "is_accepted": false, "score": 1, "last_activity_date": 1571059991, "last_edit_date": 1571059991, "creation_date": 1571044501, "answer_id": 58373585, "question_id": 58366166, "link": "https://stackoverflow.com/questions/58366166/performance-analysis/58373585#58373585", "title": "Performance analysis", "body": "<p>Turns out there's OS specifics here.</p>\n\n<pre><code>let map = MemoryMap::new(\n    rem,\n    &amp;[\n        MapOption::MapFd(fd),\n        MapOption::MapNonStandardFlags(libc::MAP_SHARED),\n        MapOption::MapReadable,\n        MapOption::MapOffset(offset),\n    ],\n)\n.map_err(|e| std::io::Error::new(std::io::ErrorKind::Other, e))?;\n</code></pre>\n\n<p>The crate I am using does not expose access to <code>MAP_SHARED</code> explicitly for some reason, and given the comments to the question it probably does not make a difference on Linux. Mac OSX appears to treat <code>MAP_SHARED</code> differently from when that flag is not specified, making <code>mmap</code> syscall substantially slower. When <code>MAP_SHARED</code> is specified, it is back to about 3 seconds for the \"warm\" run on Mac.</p>\n"}], "owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1571059991, "creation_date": 1570988498, "last_edit_date": 1570994615, "question_id": 58366166, "link": "https://stackoverflow.com/questions/58366166/performance-analysis", "title": "Performance analysis", "body": "<p>Looking at a very simple program, how to figure out where the CPU is spent:</p>\n\n<pre><code>use mmap::*;\nuse crc::{crc32, Hasher32};\n\nuse std::cmp::min;\nuse std::env::args;\nuse std::fs::File;\nuse std::fs::metadata;\nuse std::os::unix::io::AsRawFd;\nuse std::slice::from_raw_parts;\nuse std::time::Instant;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n   let filename = args().nth(1).unwrap();\n   let t0 = Instant::now();\n   let file = File::open(String::from(&amp;filename[..]))?;\n   let fd = file.as_raw_fd();\n   let fs = metadata(filename)?;\n   let sz = fs.len() as usize;\n\n   let mut offset: usize = 0;\n   let mut c32 = crc32::Digest::new(crc32::IEEE);\n   while offset &lt; sz {\n      let rem = sz - offset;\n      let rem = min(rem, 1024 * 1024);\n\n      let map = MemoryMap::new(rem, &amp;[MapOption::MapFd(fd),\n                                      MapOption::MapReadable,\n                                      MapOption::MapOffset(offset)]).\n                map_err(|e| std::io::Error::new(std::io::ErrorKind::Other, e))?;\n      let buf = map.data();\n      c32.write(unsafe { from_raw_parts(buf, rem) });\n      offset += rem;\n   }\n   println!(\"{:08x} in {:.3}\", c32.sum32(), t0.elapsed().as_secs());\n   Ok(())\n}\n</code></pre>\n\n<p>This is intended to memory-map the file provided on command line, and compute the CRC32 of it. I am not looking for other implementations that may achieve that, because my intention is to practice interactions with <code>libc</code> functions.</p>\n\n<p>The program appears to operate correctly, but consumes much more time and CPU than equivalent Go or Java program I wrote, even though I think it is compiled with optimisations:</p>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[profile.dev]\nopt-level = 3\n\n[package]\nname = \"mmap\"\nversion = \"0.1.0\"\nauthors = [\"Gee\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\n\nmmap = \"~0.1.1\"\ncrc = \"^1.0.0\"\n</code></pre>\n\n<p>Mac OSX, SSD, executing Go and Rust programs in various order to eliminate the impact of \"cold\" file buffers and \"warm\" buffers - produces about 4 seconds cold for Go, and less than a second warm run for Go, but always 30+ seconds for Rust. Tried <code>cargo build --release</code>, too. CPU utilisation by Rust program is substantially higher, too (eg 25% for Go, 80+% for Rust). I would expect CPU utilisation to come mostly from CRC-32 computation and copying the file contents between some buffers. The difference is then in something that causes Rust to do extra work here.</p>\n\n<p>Go program scanning a 1GB XML file using the same method, <code>syscall.Mmap</code>, mapping 1MB at a time:</p>\n\n<pre><code>$ ../a ~/demo/dest.xml \na772d8c4 in 3.978\n</code></pre>\n\n<p>Cargo run:</p>\n\n<pre><code>$ cargo run ~/demo/dest.xml \n    Finished dev [optimized + debuginfo] target(s) in 0.13s\n     Running `target/debug/mmap /Users/ololo/demo/dest.xml`\na772d8c4 in 33\n</code></pre>\n\n<hr>\n\n<p>In the comments there was a request to show a Java program. Here's the Go program that can be seen to read that file in 3.9 seconds:</p>\n\n<pre><code>package main\n\nimport(\n   \"fmt\"\n   \"hash/crc32\"\n   \"os\"\n   \"syscall\"\n   \"time\"\n)\n\nfunc main() {\n   t0 := time.Now()\n   fn := os.Args[1]\n   fd, err := os.Open(fn)\n   if err != nil {\n      fmt.Printf(\"Couldn't open %s\", err)\n      return\n   }\n   defer fd.Close()\n\n   fi, err := fd.Stat()\n   if err != nil {\n      fmt.Printf(\"Couldn't stat: %s\", err)\n      return\n   }\n\n   sz := fi.Size()\n\n   cksum := crc32.NewIEEE()\n   var off int64\n\n   off = 0\n   for sz &gt; off {\n      rem := 1024 * 1024\n      if sz - off &lt; int64(rem) {\n         rem = int(sz - off)\n      }\n      data, err := syscall.Mmap(int(fd.Fd()), off, rem, syscall.PROT_READ, syscall.MAP_SHARED)\n      if err != nil {\n         fmt.Printf(\"Couldn't mmap at %d\", off)\n         return\n      }\n      off += int64(rem)\n      n, err := cksum.Write(data)\n      if err != nil || n != len(data) {\n         fmt.Printf(\"Somehow could not cksum %d\", len(data))\n         return\n      }\n\n      syscall.Munmap(data)\n   }\n\n   fmt.Printf(\"%x in %.3f\\n\", cksum.Sum32(), time.Now().Sub(t0).Seconds())\n}\n</code></pre>\n"}, {"tags": ["rust", "overloading", "traits"], "comments": [{"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 1, "creation_date": 1570988102, "post_id": 58365520, "comment_id": 103082610, "body": "I think <a href=\"https://doc.rust-lang.org/std/io/struct.Cursor.html\" rel=\"nofollow noreferrer\">Cursor</a> is the go-to way to wrap <code>Vec&lt;u8&gt;</code> into a <code>Read</code>-able thing"}, {"owner": {"reputation": 889, "user_id": 748875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32ac6252cd00de88e39b9b2e8d5356d4?s=128&d=identicon&r=PG", "display_name": "Simon", "link": "https://stackoverflow.com/users/748875/simon"}, "reply_to_user": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 0, "creation_date": 1570999077, "post_id": 58365520, "comment_id": 103085413, "body": "Thanks! Cursor is what I was looking for!"}], "answers": [{"comments": [{"owner": {"reputation": 889, "user_id": 748875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32ac6252cd00de88e39b9b2e8d5356d4?s=128&d=identicon&r=PG", "display_name": "Simon", "link": "https://stackoverflow.com/users/748875/simon"}, "edited": false, "score": 0, "creation_date": 1570998938, "post_id": 58366162, "comment_id": 103085384, "body": "Thanks for your answer. I had tried that syntax too, should have mentioned it! But it still doesn&#39;t work and recurse infinitely. I find that behaviour disturbing at the very least."}], "tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": false, "score": 2, "last_activity_date": 1570988490, "creation_date": 1570988490, "answer_id": 58366162, "question_id": 58365520, "link": "https://stackoverflow.com/questions/58365520/how-to-select-the-proper-trait-implementation-in-rust/58366162#58366162", "title": "How to select the proper trait implementation in Rust?", "body": "<p>You can disambiguate by referencing the trait method directly, e.g.:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io::Read;\n\n#[derive(Debug)]\npub struct ReadableVec&lt;T&gt;(Vec&lt;T&gt;);\n\nimpl Read for ReadableVec&lt;u8&gt; {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; std::io::Result&lt;usize&gt; {\n        println!(\"Read!\");\n        Read::read(&amp;mut &amp;self.0[..], buf)\n    }\n}\n\nfn main() {\n    let mut buf = ReadableVec(vec![60, 116]);\n    buf.read(&amp;mut []);\n}\n</code></pre>\n\n<p>This is called <a href=\"https://doc.rust-lang.org/1.30.0/book/first-edition/ufcs.html\" rel=\"nofollow noreferrer\">Universal Function Call Syntax</a> (can't find this chapter in the new book, so I'm linking the first edition).</p>\n\n<p>I do not think this is sufficient to make the implementation of <code>Read</code> correct though, as this would only advance the (temporary) slice. See my comment on <code>Cursor</code>.</p>\n"}], "owner": {"reputation": 889, "user_id": 748875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32ac6252cd00de88e39b9b2e8d5356d4?s=128&d=identicon&r=PG", "display_name": "Simon", "link": "https://stackoverflow.com/users/748875/simon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1570988490, "creation_date": 1570983840, "last_edit_date": 1570984318, "question_id": 58365520, "link": "https://stackoverflow.com/questions/58365520/how-to-select-the-proper-trait-implementation-in-rust", "title": "How to select the proper trait implementation in Rust?", "body": "<p>I have a trait that expects either <a href=\"https://docs.rs/reqwest/0.9.22/reqwest/struct.Response.html\" rel=\"nofollow noreferrer\">reqwest::Response</a> or <a href=\"http://doc.rust-lang.org/1.38.0/alloc/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">Vec</a> as argument, only to throw them in a <a href=\"https://docs.rs/select/0.4.3/select/document/struct.Document.html\" rel=\"nofollow noreferrer\">select::document::Document</a>. To come to that end, I need to somehow get an implementation of <code>io::Read</code> for <code>Vec&lt;u8&gt;</code> in order to use <code>Document::from_read</code>.</p>\n\n<p>Here's what I came up with:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use select::document::Document;\nuse std::{io::Read, io::Result};\n\n#[derive(Debug)]\npub struct ReadableVec&lt;T&gt;(Vec&lt;T&gt;);\n\nimpl Read for ReadableVec&lt;u8&gt; {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;usize&gt; {\n        println!(\"Read!\");\n        let mut r: &amp;[u8] = &amp;self.0[..];\n        r.read(buf)                           //&lt; issue is here!!\n    }\n}\n\nfn main() {\n    let buf = ReadableVec(vec![60, 116]);\n    let doc = Document::from_read(buf);\n    println!(\"{:?}\", doc)\n}\n</code></pre>\n\n<p>My question is: why is <code>r.read(buf)</code> calling the <code>Read</code> implementation of <code>ReadableVec</code> instead of <code>&amp;[u8]</code>, thus making my function to recursively call itself? The type of <code>r</code> seems very clearly instructed by the line above.</p>\n\n<p><em>PS: if there's a better solution to handle both <code>Vec&lt;u8&gt;</code> and <code>reqwest::Response</code>, it'll be appreciated in the comments! ;)</em></p>\n"}, {"tags": ["compiler-errors", "rust"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1570981490, "post_id": 58365071, "comment_id": 103080827, "body": "Can you implement a trait on those modules and then expose the fact that your array contains boxed <code>impl Trait</code>? That might be a hell of a lot easier than going through the whole anonymous-function-in-vector dance"}], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 4713626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86244d796b90bf8d817ab5ea3459a207?s=128&d=identicon&r=PG&f=1", "display_name": "bcmyers", "link": "https://stackoverflow.com/users/4713626/bcmyers"}, "edited": false, "score": 0, "creation_date": 1570982138, "post_id": 58365266, "comment_id": 103080997, "body": "lazy_static comes from here <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\">crates.io/crates/lazy_static</a>"}], "tags": [], "owner": {"reputation": 63, "user_id": 4713626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86244d796b90bf8d817ab5ea3459a207?s=128&d=identicon&r=PG&f=1", "display_name": "bcmyers", "link": "https://stackoverflow.com/users/4713626/bcmyers"}, "is_accepted": false, "score": 0, "last_activity_date": 1570982696, "last_edit_date": 1570982696, "creation_date": 1570982084, "answer_id": 58365266, "question_id": 58365071, "link": "https://stackoverflow.com/questions/58365071/in-rust-can-i-expose-an-array-of-functions-from-my-module/58365266#58365266", "title": "In Rust, can I expose an array of functions from my module?", "body": "<pre><code>struct Game;\nstruct MoveError;\n\nmod rule1 {\n    use super::*;\n    pub(crate) fn validate(game: &amp;Game, s: String) -&gt; Result&lt;(), MoveError&gt; {\n        unimplemented!()\n    }\n}\n\nmod rule2 {\n    use super::*;\n    pub(crate) fn validate(game: &amp;Game, s: String) -&gt; Result&lt;(), MoveError&gt; {\n        unimplemented!()\n    }\n}\n\nconst VALIDATIONS: &amp;[fn(&amp;Game, String) -&gt; Result&lt;(), MoveError&gt;] = &amp;[\n    rule1::validate,\n    rule2::validate,\n];\n\n// or...\n\nuse lazy_static::lazy_static;\n\nlazy_static! {\n    static ref VALIDATIONS_2: &amp;[Box&lt;dyn Fn(&amp;Game, String) -&gt; Result&lt;(), MoveError&gt;&gt;] = &amp;[\n        Box::new(rule1::validate),\n        Box::new(rule2::validate)\n    ];    \n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1570982268, "creation_date": 1570982268, "answer_id": 58365307, "question_id": 58365071, "link": "https://stackoverflow.com/questions/58365071/in-rust-can-i-expose-an-array-of-functions-from-my-module/58365307#58365307", "title": "In Rust, can I expose an array of functions from my module?", "body": "<p>Your problem has nothing to do with functions.</p>\n\n<p>You can reproduce it with the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const validation: [u32] = &amp;[ 42 ];\n</code></pre>\n\n<p>which gives</p>\n\n<pre><code>error[E0277]: the size for values of type `[u32]` cannot be known at compilation time\n --&gt; src/lib.rs:1:19\n  |\n1 | const validation: [u32] = &amp;[ 42 ];\n  |                   ^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `[u32]`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n</code></pre>\n\n<p>The issue is that <code>[T]</code> is not a <code>Sized</code> type, no matter what <code>T</code> is. This means you cannot use it in <code>const</code>.</p>\n\n<p>You can however use a reference:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const validation: &amp;[u32] = &amp;[ 42 ];\n</code></pre>\n\n<p>or a sized array:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const validation: [u32; 1] = [ 42 ];\n</code></pre>\n\n<p>Same applies to your original problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nconst validations: &amp;[Validate] = &amp;[\n//                 ^\n    rule1::validate,\n    rule2::validate\n];\n</code></pre>\n"}], "owner": {"reputation": 30833, "user_id": 275501, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/f7c3dc8ca7088469d8d0a1c53e671913?s=128&d=identicon&r=PG", "display_name": "goofballLogic", "link": "https://stackoverflow.com/users/275501/goofballlogic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 58365307, "answer_count": 2, "score": 1, "last_activity_date": 1570982696, "creation_date": 1570980814, "last_edit_date": 1570982409, "question_id": 58365071, "link": "https://stackoverflow.com/questions/58365071/in-rust-can-i-expose-an-array-of-functions-from-my-module", "title": "In Rust, can I expose an array of functions from my module?", "body": "<p>I'm implementing a game engine, and want to have a set of modules, each of which implements certain rules. Each module exposes a function which conforms to this definition:</p>\n\n<pre><code>fn validate(game: &amp;Game, next_move: String) -&gt; Result&lt;(), MoveError&gt;\n</code></pre>\n\n<p>Rather than have consumers of these rules <code>use</code> every rule module, I'd like to expose a set (<code>array</code>? <code>Vec&lt;&gt;</code>?) of these validate functions. I was assuming it would be an array of function pointers, something like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod rule1;\nmod rule2;\n\ntype Validate = fn(&amp;Game, String) -&gt; Result&lt;(), MoveError&gt;;\n\nconst validations: [Validate] = &amp;[\n    rule1::validate,\n    rule2::validate\n];\n\n</code></pre>\n\n<p>but Rust says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `[for&lt;'r&gt; fn(&amp;'r Game, std::string::String) -&gt; std::result::Result&lt;(), MoveError&gt;]` cannot be known at compilation time\n --&gt; src/lib.rs:6:20\n  |\n6 | const validations: [Validate] = &amp;[\n  |                    ^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `[for&lt;'r&gt; fn(&amp;'r Game, std::string::String) -&gt; std::result::Result&lt;(), MoveError&gt;]`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n</code></pre>\n\n<p>I've read the linked article and am none the wiser. What's the first step in fixing this error (or perhaps in correcting my lack of understanding)</p>\n"}, {"tags": ["multithreading", "rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1570980553, "post_id": 58364807, "comment_id": 103080583, "body": "You should only ask one question per post. I suggest you edit your post to remove the 2nd question and ask it in its own post."}, {"owner": {"reputation": 147, "user_id": 9620900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g6DQE.png?s=128&g=1", "display_name": "mikeProgrammer", "link": "https://stackoverflow.com/users/9620900/mikeprogrammer"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1570995720, "post_id": 58364807, "comment_id": 103084567, "body": "Ok, I did it. Here is link: <a href=\"https://stackoverflow.com/q/58367174/9620900\">stackoverflow.com/q/58367174/9620900</a> if u want to answer."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1570996309, "post_id": 58364807, "comment_id": 103084711, "body": "What would be the advantage of having multiple mutable references to <code>x1</code> in your code? Where would you want to use <code>r2</code> where you couldn&#39;t also just use <code>r1</code>?"}, {"owner": {"reputation": 147, "user_id": 9620900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g6DQE.png?s=128&g=1", "display_name": "mikeProgrammer", "link": "https://stackoverflow.com/users/9620900/mikeprogrammer"}, "edited": false, "score": 0, "creation_date": 1570997060, "post_id": 58364807, "comment_id": 103084917, "body": "Whole Java works in the way I described above. You can have million of objects containing reference to the same piece of data in the same scope or am I wrong?"}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 10, "last_activity_date": 1609014338, "last_edit_date": 1609014338, "creation_date": 1570980526, "answer_id": 58365030, "question_id": 58364807, "link": "https://stackoverflow.com/questions/58364807/why-rust-prevents-from-multiple-mutable-references/58365030#58365030", "title": "Why Rust prevents from multiple mutable references?", "body": "<p>The fact that Rust prevent two mutable references at the same time to prevent data races is a common misconception. This is only one of the reasons. Preventing two mutable references makes it possible to keep invariants on types easily and let the compiler enforce that the invariant are not violated.</p>\n<p>Take this piece of C++ code for an example:</p>\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;vector&gt;\n\nint main() {\n    std::vector&lt;int&gt; foo = { 1, 2, 3 };\n    \n    for (auto&amp; e: foo) {\n        if (e % 2 == 0) {\n            foo.push_back(e+1);\n        }\n    }\n\n    return 0;\n}\n</code></pre>\n<p>This is unsafe because you cannot mutate a vector while you are iterating it. Mutating the vector might reallocate its internal buffer, which invalidates all references. In C++, this is a UB. In Python, Java or C# (and probably most other languages), you would get a runtime exception.</p>\n<p>Rust however, prevents this kind of issues at compile time:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut foo = vec![1, 2, 3];\n    \n    for e in foo {\n        if e % 2 == 0 {\n            foo.push(e+1);\n        }\n    }\n}\n</code></pre>\n<p>gives an error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `foo`\n --&gt; src/main.rs:6:13\n  |\n2 |     let mut foo = vec![1, 2, 3];\n  |         ------- move occurs because `foo` has type `std::vec::Vec&lt;i32&gt;`, which does not implement the `Copy` trait\n3 |     \n4 |     for e in foo {\n  |              ---\n  |              |\n  |              value moved here\n  |              help: consider borrowing to avoid moving into the for loop: `&amp;foo`\n5 |         if e % 2 == 0 {\n6 |             foo.push(e+1);\n  |             ^^^ value borrowed here after move\n</code></pre>\n"}], "owner": {"reputation": 147, "user_id": 9620900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/g6DQE.png?s=128&g=1", "display_name": "mikeProgrammer", "link": "https://stackoverflow.com/users/9620900/mikeprogrammer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 878, "favorite_count": 2, "accepted_answer_id": 58365030, "answer_count": 1, "score": 8, "last_activity_date": 1609014338, "creation_date": 1570979017, "last_edit_date": 1570995445, "question_id": 58364807, "link": "https://stackoverflow.com/questions/58364807/why-rust-prevents-from-multiple-mutable-references", "title": "Why Rust prevents from multiple mutable references?", "body": "<p>Like in the topic, why Rust prevents from multiple mutable references? I have read chapter in rust-book, and I understand that when we have multi-threaded code we are secured from data races but let's look at this code: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut x1 = String::from(\"hello\");\n    let r1 = &amp;mut x1;\n    let r2 = &amp;mut x1;\n\n    r1.insert(0, 'w');\n\n}\n</code></pre>\n\n<p>This code is not running simultaneously so there is no possibility for data races. \nWhat is more when I am creating new thread and I want to use variable from parent thread in a new thread I have to move it so only new thread is an owner of the parent variable. </p>\n\n<p>The only reason I can see is that programmer can lose himself in his code when it is growing up. We have multiple places in which one piece of data can be modified and even the code is not running parallel we can get some bugs.</p>\n"}, {"tags": ["javascript", "rust", "webassembly", "wasm-pack", "x-content-type-options"], "comments": [{"owner": {"reputation": 39159, "user_id": 1541563, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/U4EOh.png?s=128&g=1", "display_name": "Patrick Roberts", "link": "https://stackoverflow.com/users/1541563/patrick-roberts"}, "edited": false, "score": 0, "creation_date": 1570975058, "post_id": 58364162, "comment_id": 103079355, "body": "Hey, if you post the previous link in a comment, I can tell you if there was an answer there or not."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "reply_to_user": {"reputation": 39159, "user_id": 1541563, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/U4EOh.png?s=128&g=1", "display_name": "Patrick Roberts", "link": "https://stackoverflow.com/users/1541563/patrick-roberts"}, "edited": false, "score": 0, "creation_date": 1570975121, "post_id": 58364162, "comment_id": 103079370, "body": "<a href=\"https://stackoverflow.com/questions/58311656/x-wasm-was-blocked-because-of-a-disallowed-mime-type-application-wasm\" title=\"x wasm was blocked because of a disallowed mime type application wasm\">stackoverflow.com/questions/58311656/&hellip;</a>"}, {"owner": {"reputation": 39159, "user_id": 1541563, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/U4EOh.png?s=128&g=1", "display_name": "Patrick Roberts", "link": "https://stackoverflow.com/users/1541563/patrick-roberts"}, "edited": false, "score": 0, "creation_date": 1570975247, "post_id": 58364162, "comment_id": 103079395, "body": "Yeah, no one answered it. It was posted Oct 9 and deleted yesterday without a comment or answer."}], "answers": [{"comments": [{"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1571071958, "post_id": 58380726, "comment_id": 103110345, "body": "I already did, but it generated the JavaScript above. The libraries I&#39;m using, like stdweb, use snippets. Could that be related?"}, {"owner": {"reputation": 306, "user_id": 11948273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1da02f7ef7d9268c6b67b5baf8276867?s=128&d=identicon&r=PG&f=1", "display_name": "The Wayward Developer", "link": "https://stackoverflow.com/users/11948273/the-wayward-developer"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1571075360, "post_id": 58380726, "comment_id": 103111747, "body": "Is this an extension by any chance or a normal web page?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1571075413, "post_id": 58380726, "comment_id": 103111768, "body": "Doubt. I reproduce the same issue on chrome without any extensions"}, {"owner": {"reputation": 306, "user_id": 11948273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1da02f7ef7d9268c6b67b5baf8276867?s=128&d=identicon&r=PG&f=1", "display_name": "The Wayward Developer", "link": "https://stackoverflow.com/users/11948273/the-wayward-developer"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1571076799, "post_id": 58380726, "comment_id": 103112307, "body": "I was asking if you are developing an extension, but then I assume you are not."}, {"owner": {"reputation": 306, "user_id": 11948273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1da02f7ef7d9268c6b67b5baf8276867?s=128&d=identicon&r=PG&f=1", "display_name": "The Wayward Developer", "link": "https://stackoverflow.com/users/11948273/the-wayward-developer"}, "reply_to_user": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1571076954, "post_id": 58380726, "comment_id": 103112365, "body": "Try to replace the wasm import line with direct instantiation of the module (<a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Loading_and_running\" rel=\"nofollow noreferrer\">developer.mozilla.org/en-US/docs/WebAssembly/&hellip;</a>)."}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1571109067, "post_id": 58380726, "comment_id": 103120671, "body": "I&#39;ll try. Should I consider this a bug for wasm-pack?"}, {"owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "edited": false, "score": 0, "creation_date": 1571109909, "post_id": 58380726, "comment_id": 103120865, "body": "Oh never mind, I made a typo in my toolchain that made it unable to pass <code>--target web</code> to wasm-pack. Thanks!"}], "tags": [], "owner": {"reputation": 306, "user_id": 11948273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1da02f7ef7d9268c6b67b5baf8276867?s=128&d=identicon&r=PG&f=1", "display_name": "The Wayward Developer", "link": "https://stackoverflow.com/users/11948273/the-wayward-developer"}, "is_accepted": true, "score": 6, "last_activity_date": 1571070600, "creation_date": 1571070600, "answer_id": 58380726, "question_id": 58364162, "link": "https://stackoverflow.com/questions/58364162/loading-module-was-blocked-because-of-a-disallowed-mime-type-application-wasm/58380726#58380726", "title": "Loading module was blocked because of a disallowed MIME type (\u201capplication/wasm\u201d)", "body": "<p>The importing of WebAssembly modules is not yet standardized. You should set the <code>--target</code> argument of wasm-pack to <code>web</code> to generate JavaScript to use in a browser.</p>\n"}], "owner": {"reputation": 7096, "user_id": 3990767, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0a5741a212e3b0e6bd46a8a1e6d76a4a?s=128&d=identicon&r=PG", "display_name": "SOFe", "link": "https://stackoverflow.com/users/3990767/sofe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2391, "favorite_count": 0, "accepted_answer_id": 58380726, "answer_count": 1, "score": 7, "last_activity_date": 1615368786, "creation_date": 1570974425, "last_edit_date": 1615368786, "question_id": 58364162, "link": "https://stackoverflow.com/questions/58364162/loading-module-was-blocked-because-of-a-disallowed-mime-type-application-wasm", "title": "Loading module was blocked because of a disallowed MIME type (\u201capplication/wasm\u201d)", "body": "<p>I serve a static file server (through HTTP), which contains data generated by <code>wasm-pack</code>. Using the examples from the rustwasm book, I added this code to my index HTML page:</p>\n\n<pre><code>        &lt;script type=\"module\"&gt;\n            import init from \"./pkg/fstree_web.js\";\n\n            async function run() {\n                await init();\n            }\n\n            run();\n        &lt;/script&gt;\n</code></pre>\n\n<p>However, on Firefox, I get the error message as indicated in the title:</p>\n\n<blockquote>\n  <p>module from \u201c<a href=\"http://localhost:8000/pkg/fstree_web_bg.wasm\" rel=\"noreferrer\">http://localhost:8000/pkg/fstree_web_bg.wasm</a>\u201d was blocked because of a disallowed MIME type (\u201capplication/wasm\u201d).</p>\n</blockquote>\n\n<p>I suspected HTTPS issues or localhost issues, so I additionally tried <code>127.0.0.1</code>, and even tried an https://***.ngrok.io tunnel, and Firefox still rejects loading the wasm module with this error message.</p>\n\n<p>It links to an MDN article about X-Content-Type-Options, but I am not sure how it is relevant. My server is already sending <code>Content-Type: application/wasm</code>.</p>\n\n<p>The JavaScript code generated by wasm-pack starts with this:</p>\n\n<pre><code>import { __cargo_web_snippet_72fc447820458c720c68d0d8e078ede631edd723 } from './snippets/stdweb-bb142200b065bd55/inline133.js';\nimport { __cargo_web_snippet_97495987af1720d8a9a923fa4683a7b683e3acd6 } from './snippets/stdweb-bb142200b065bd55/inline134.js';\nimport { __cargo_web_snippet_dc2fd915bd92f9e9c6a3bd15174f1414eee3dbaf } from './snippets/stdweb-bb142200b065bd55/inline135.js';\nimport { __cargo_web_snippet_1c30acb32a1994a07c75e804ae9855b43f191d63 } from './snippets/stdweb-bb142200b065bd55/inline136.js';\nimport { wasm_bindgen_initialize } from './snippets/stdweb-bb142200b065bd55/inline293.js';\nimport * as wasm from './fstree_web_bg.wasm';\n</code></pre>\n\n<p>Does Firefox want me to send *.wasm as a <code>application/javascript</code>? Or what is wrong?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570974604, "post_id": 58364138, "comment_id": 103079256, "body": "Thanks, that helps a lot, but this part: <i>result += (byte - b&#39;0&#39;); is a kludge and lacks the Sub definition</i> confuses me. I think <code>*byte</code> is different from what I&#39;m doing. My intention is to read the buffer that contains ASCII data as bytes and convert it into a number. <code>*byte</code> is going to be the ASCII code of <code>0..9</code>, not <code>0..9</code>. I&#39;ll edit the question to add this detail, sorry for not mentioning it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570974773, "post_id": 58364138, "comment_id": 103079288, "body": "@Tam&#225;sSzelei Yeah, that&#39;s a <i>huge</i> difference. Editing my answer to match."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570975892, "post_id": 58364138, "comment_id": 103079521, "body": "@Tam&#225;sSzelei corrected. I&#39;ve implemented the proper conversion from an ASCII char array to a number for you :-)"}, {"owner": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570976863, "post_id": 58364138, "comment_id": 103079708, "body": "Thanks! This indeed works well for the u32 case, but I also want the function to be able to return u8 as well. If I change the test the number 122 and <code>T</code> to <code>u8</code>, I get <code>the trait bound u8: std::convert::From&lt;u32&gt; is not satisfied</code>. I tried adding another <code>From</code> bound, but that made it blow up with errors I&#39;m not able to decipher."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570978835, "post_id": 58364138, "comment_id": 103080161, "body": "I&#39;ll be through airport security in a tiny bit; when I am, I&#39;ll edit further, although what I will give you is an even more generic answer. I don&#39;t believe it is worth it personally, as it is easier to down convert an <code>u32</code> down to <code>u8</code> than the reverse (hint: not possible)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570981357, "post_id": 58364138, "comment_id": 103080791, "body": "@Tam&#225;sSzelei Actually, I was looking over it. You gain nothing but complications by requiring the inner state to be an <code>u8</code> vs. a <code>u32</code> as <code>to_digit()</code> is defined as <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.to_digit\" rel=\"nofollow noreferrer\"><code>fn to_digit(self, radix: u32) -&gt; Option&lt;u32&gt;</code></a>, which means not going for a <code>u32</code> requires intermediate conversions at every step via <code>TryFrom</code>. Really, really not worth, particularly for an intermediate state that never leaks out."}, {"owner": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570982303, "post_id": 58364138, "comment_id": 103081044, "body": "So are you suggesting that &quot;casting&quot; the known u8 values is a better idea then?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570982590, "post_id": 58364138, "comment_id": 103081119, "body": "That&#39;s not where the <code>u8</code>/<code>u32</code> debate is. Parsing an ASCII digit using <code>char</code> returns an <code>u32</code>, and that&#39;s where the point of contention is. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ed5f2fe6b607e626bb2bd014d08426c1\" rel=\"nofollow noreferrer\">Doing away with it is doable</a> but requires an intermediate generic and <i>tons</i> of conversions."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570982639, "post_id": 58364138, "comment_id": 103081133, "body": "@Tam&#225;sSzelei to be precise, the <i>only</i> place where <code>u32</code> is explicitly required is <code>buffer += (*o as char).to_digit(10).unwrap_or(0).into();</code>. The rest could be done with <code>From&lt;R&gt;</code> where <code>R</code> is numeric as long as <code>Into&lt;R&gt;</code> exists."}, {"owner": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 0, "creation_date": 1570984311, "post_id": 58364138, "comment_id": 103081566, "body": "Fair enough, thanks a lot for extended discussion - I guess I overreached a bit with my first rust project :) but I learned a lot from this. I ended up removing all generics (just returning a fixed <code>u32</code>) and using <code>value.to_le_bytes()[0]</code> where I want a <code>u8</code> (when I know the value fits in a <code>u8</code>)."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "edited": false, "score": 1, "creation_date": 1570984448, "post_id": 58364138, "comment_id": 103081603, "body": "@Tam&#225;sSzelei overextension and discussions are two of the three main ways to learn! (The third one being not doing things right). There was no harm done and, to be honest, I&#39;ve also benefited a bit from having to think of a way to fit your requirements. Keep them going and have fun with Rust :-)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1570975876, "last_edit_date": 1570975876, "creation_date": 1570974148, "answer_id": 58364138, "question_id": 58364053, "link": "https://stackoverflow.com/questions/58364053/how-can-i-define-a-generic-function-that-can-return-a-given-integer-type/58364138#58364138", "title": "How can I define a generic function that can return a given integer type?", "body": "<p>Welcome to the joys of having to specify every single operation you're using as a generic. It's a pain, but it is worth.</p>\n\n<p>You have two problems:</p>\n\n<ol>\n<li><code>result *= 10;</code> without a corresponding <code>From&lt;_&gt;</code> definition. This is because, when you specify \"10\", there is no way for the compiler to know what \"10\" as a <code>T</code> means - it knows primitive types, and any conversion you defined by implementing <code>From&lt;_&gt;</code> traits</li>\n<li>You're mixing up two operations - coercion from a vector of characters to an integer, and your operation.</li>\n</ol>\n\n<p>We need to make two assumptions for this:</p>\n\n<ul>\n<li><p>We will require <code>From&lt;u32&gt;</code> so we can cap our numbers to <code>u32</code></p></li>\n<li><p>We will also clarify your logic and convert each <code>u8</code> to <code>char</code> so we can use <code>to_digit()</code> to convert <em>that</em> to <code>u32</code>, before making use of <code>From&lt;u32&gt;</code> to get a <code>T</code>.</p>\n\n<pre><code>use std::ops::{MulAssign, AddAssign};\nfn parse_to_i&lt;T: From&lt;u32&gt; + MulAssign + AddAssign&gt;(buf: &amp;[u8]) -&gt; T {\n    let mut buffer:T = (0 as u32).into();\n    for o in buf {\n        buffer *= 10.into();\n        buffer += (*o as char).to_digit(10).unwrap_or(0).into();\n    }\n    buffer\n}\n</code></pre></li>\n</ul>\n\n<p>You can convince yourself of its behavior <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=60807e59ed4380e111e90cb398492d85\" rel=\"nofollow noreferrer\"><strong>on the playground</strong></a></p>\n\n<p>The multiplication is resolved by force-casting the constant as <code>u8</code>, which makes it benefit from our requirement of <code>From&lt;u8&gt;</code> for T and allows the rust compiler to know we're not doing silly stuff.</p>\n\n<p>The final change is to set <code>result</code> to have a default value of 0.</p>\n\n<p>Let me know if this makes sense to you (or if it doesn't), and I'll be glad to elaborate further if there is a problem :-)</p>\n"}], "owner": {"reputation": 21282, "user_id": 140367, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/686b6807a5e05236c44c9472e99e146a?s=128&d=identicon&r=PG", "display_name": "Tam&#225;s Szelei", "link": "https://stackoverflow.com/users/140367/tam%c3%a1s-szelei"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 56, "favorite_count": 0, "accepted_answer_id": 58364138, "answer_count": 1, "score": 0, "last_activity_date": 1570975876, "creation_date": 1570973532, "last_edit_date": 1570974695, "question_id": 58364053, "link": "https://stackoverflow.com/questions/58364053/how-can-i-define-a-generic-function-that-can-return-a-given-integer-type", "title": "How can I define a generic function that can return a given integer type?", "body": "<p>I'd like to define a function that can return a number whose type is specified when the function is called. The function takes a buffer (<code>Vec&lt;u8&gt;</code>) and returns numeric value, e.g.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let byte = buf_to_num&lt;u8&gt;(&amp;buf);\nlet integer = buf_to_num&lt;u32&gt;(&amp;buf);\n</code></pre>\n\n<p>The buffer contains an ASCII string that represents a number, e.g. <code>b\"827\"</code>, where each byte is the ASCII code of a digit.</p>\n\n<p>This is my non-working code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>  extern crate num;\n  use num::Integer;\n  use std::ops::{MulAssign, AddAssign};\n\n  fn buf_to_num&lt;T: Integer + MulAssign + AddAssign&gt;(buf: &amp;Vec::&lt;u8&gt;) -&gt; T {\n    let mut result : T;\n    for byte in buf {\n      result *= 10;\n      result += (byte - b'0');\n    }\n    result\n  } \n</code></pre>\n\n<p>I get mismatched type errors for both the addition and the multiplication lines (<code>expected type T, found u32</code>). So I guess my problem is how to tell the type system that <code>T</code> can be expressed in terms of a literal <code>10</code> or in terms of the result of <code>(byte - b'0')</code>? </p>\n"}, {"tags": ["logging", "rust", "runtime"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1570972479, "post_id": 58363760, "comment_id": 103078755, "body": "It is not Rust itself but the <a href=\"https://docs.rs/log/0.4.8/log/index.html#warning\" rel=\"nofollow noreferrer\"><code>logcrate</code></a>. The doc says: <i>The logging system may only be initialized once</i>, and does not provide a function to unset it. You could try and patch the source for your experiments."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570972741, "post_id": 58363760, "comment_id": 103078808, "body": "Add <code>lazy_static</code> as a test dependency and use that as a way to run something once before any test runs."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570989752, "post_id": 58363760, "comment_id": 103083099, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/30177845/how-to-initialize-the-logger-for-integration-tests\">How to initialize the logger for integration tests?</a>"}], "owner": {"reputation": 4687, "user_id": 3819850, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rwYcz.png?s=128&g=1", "display_name": "CinchBlue", "link": "https://stackoverflow.com/users/3819850/cinchblue"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 165, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1570973284, "creation_date": 1570971253, "last_edit_date": 1570973284, "question_id": 58363760, "link": "https://stackoverflow.com/questions/58363760/why-does-rust-not-allow-you-to-initialize-logging-twice-at-runtime", "title": "Why does Rust not allow you to initialize logging twice at runtime?", "body": "<p>I have a <a href=\"https://github.com/CinchBlue/rust-logging-tests\" rel=\"nofollow noreferrer\">set of benchmarking tests</a> to test initialization and logging with logging libraries. But my code is panicking in a suite test, although each tests can be run individually okay.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[bench]\nfn bench_fern_multi_unfiltered_line(b: &amp;mut Bencher) {\n    // Given: we initialize the config with the correct parameters\n    init_fern();\n\n    // When: we test enough iterations\n    // Then: we should get performance numbers\n    b.iter(|| {\n        for i in 0..1000 {\n            log_multi_info_lines()\n        }\n    });\n}\n\n#[bench]\nfn bench_log4rs_single_unfiltered_line(b: &amp;mut Bencher) {\n    // Given: we initialize the config with the correct parameters\n    init_log4rs();\n\n    // When: we test enough iterations\n    // Then: we should get performance numbers\n    b.iter(|| {\n        for i in 0..1000 {\n            log_single_info_line()\n        }\n    });\n}\n</code></pre>\n\n<p>The code runs fine for any first given test in a suite, although it then panics on the next one:</p>\n\n<pre><code>---- tests::bench_log4rs_multi_unfiltered_line stdout ----\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: SetLoggerError(())', src\\libcore\\result.rs:1165:5\n\n...\n\n---- tests::bench_log4rs_single_unfiltered_line stdout ----\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: SetLoggerError(())', src\\libcore\\result.rs:1165:5\n</code></pre>\n\n<p>The code panics even if I'm only testing 1 library at a time. So it still happens when you try to do this twice.</p>\n\n<p>There probably is a workaround regarding un-setting the current backend logging config at runtime, but I wanted to understand: why does Rust not allow this in its current state?</p>\n\n<p>Rustup + Rust version: </p>\n\n<pre><code>active toolchain\n----------------\n\nnightly-x86_64-pc-windows-msvc (default)\nrustc 1.40.0-nightly (2e7244807 2019-10-04)\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 9861218, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Mustafa k", "link": "https://stackoverflow.com/users/9861218/mustafa-k"}, "edited": false, "score": 0, "creation_date": 1570976588, "post_id": 58363474, "comment_id": 103079668, "body": "thankyou so much. i am a fairly new rust programmer and i usually use the standard input i dont know why i didnt see this earlier."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1570969039, "creation_date": 1570969039, "answer_id": 58363474, "question_id": 58363253, "link": "https://stackoverflow.com/questions/58363253/how-to-split-a-string-in-rust-that-i-take-as-an-input-with-read/58363474#58363474", "title": "How to split a String in Rust that I take as an input with read!()", "body": "<p>As far as I know, <code>read!</code> is not a standard macro. A quick search reveals that is probably is from the <a href=\"https://docs.rs/text_io/0.1.7/text_io\" rel=\"nofollow noreferrer\"><code>text_io</code></a> crate (if you are using external crates you should tell so in the question).</p>\n\n<p>From the docs in that crate:</p>\n\n<blockquote>\n  <p>The <code>read!()</code> macro will always read until the next ascii whitespace character (<code>\\n</code>, <code>\\r</code>, <code>\\t</code> or space).</p>\n</blockquote>\n\n<p>So what you are seeing is by design.</p>\n\n<p>If you want to read a whole line from <code>stdin</code> you may try the standard function <a href=\"https://doc.rust-lang.org/std/io/struct.Stdin.html#method.read_line\" rel=\"nofollow noreferrer\"><code>std::Stdin::read_line</code></a>.</p>\n"}, {"comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570969770, "post_id": 58363497, "comment_id": 103078208, "body": "You&#39;re not actually solving the OP&#39;s problem - which stems from the <code>read!()</code> macro implementation details, as rodrigo&#39;s answer successfully points out. The problem is that, even though the code is correct, the macro used to capture input stops at the first whitespace."}, {"owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570969916, "post_id": 58363497, "comment_id": 103078236, "body": "OP would have identified where the problem was with the methodology of breaking it up into smaller parts"}], "tags": [], "owner": {"reputation": 2892, "user_id": 391691, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vCKhh.jpg?s=128&g=1", "display_name": "Simson", "link": "https://stackoverflow.com/users/391691/simson"}, "is_accepted": false, "score": 0, "last_activity_date": 1571010174, "last_edit_date": 1571010174, "creation_date": 1570969186, "answer_id": 58363497, "question_id": 58363253, "link": "https://stackoverflow.com/questions/58363253/how-to-split-a-string-in-rust-that-i-take-as-an-input-with-read/58363497#58363497", "title": "How to split a String in Rust that I take as an input with read!()", "body": "<p>You are missing test cases which could locate the source of the problem. Split the code into a function and replace the <code>read!()</code>-macro with a test case, which you could put in main for now, where you provide different strings to the function and observe the output.</p>\n\n<pre><code>fn strspilit(s:String){\n    let mut i:usize = 0;\n    for token in s.split_whitespace() {\n        println!(\"token {} {}\", i, token);\n        i+=1;\n    }\n}\n\n\nfn main() {\n    println!(\"Hello, world!\");\n    strspilit(\"Hello Huge World\".to_string());\n\n}\n</code></pre>\n\n<p>Then you will see your code is working as it should <a href=\"https://stackoverflow.com/a/58363474/391691\">but as notices in other answers</a> the read!() macro is only returning the string until the first white space so you should probably use another way of reading your input.</p>\n"}], "owner": {"reputation": 13, "user_id": 9861218, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Mustafa k", "link": "https://stackoverflow.com/users/9861218/mustafa-k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 381, "favorite_count": 0, "accepted_answer_id": 58363474, "answer_count": 2, "score": 1, "last_activity_date": 1571053669, "creation_date": 1570967108, "last_edit_date": 1571053669, "question_id": 58363253, "link": "https://stackoverflow.com/questions/58363253/how-to-split-a-string-in-rust-that-i-take-as-an-input-with-read", "title": "How to split a String in Rust that I take as an input with read!()", "body": "<p>I want to split a <code>String</code> that I give as an input according to white spaces in it.\nI have used the <code>split_whitespaces()</code> function but when I use this function on a custom input it just gives me the first <code>String</code> slice.</p>\n\n<pre><code>let s:String = read!();\nlet mut i:usize = 0;\nfor token in s.split_whitespace() {\n    println!(\"token {} {}\", i, token);\n    i+=1;\n}\n</code></pre>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 292, "user_id": 5661266, "user_type": "registered", "accept_rate": 40, "profile_image": "https://graph.facebook.com/10205593199614644/picture?type=large", "display_name": "mmeisson", "link": "https://stackoverflow.com/users/5661266/mmeisson"}, "is_accepted": false, "score": 2, "last_activity_date": 1570964326, "creation_date": 1570964326, "answer_id": 58362897, "question_id": 58362850, "link": "https://stackoverflow.com/questions/58362850/what-is-the-difference-between-panic-and-processexit/58362897#58362897", "title": "What is the difference between panic and process::exit", "body": "<p>Afaik, a panic is never supposed to happen in a released program. It gives informations for developpers, but not anything user friendly. I'd say \"use it for errors that should not happen in prod\". There is probably behind something like an <code>exit(101);</code></p>\n\n<p>exit just terminates your process with the code you give to it. An <code>exit(0)</code> should mean \"Everything is okay\".</p>\n"}, {"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1570970789, "last_edit_date": 1570970789, "creation_date": 1570965668, "answer_id": 58363061, "question_id": 58362850, "link": "https://stackoverflow.com/questions/58362850/what-is-the-difference-between-panic-and-processexit/58363061#58363061", "title": "What is the difference between panic and process::exit", "body": "<p>There may or may not be a difference depending on your definition of what happens when a panic happens (defined in <code>Cargo.toml</code>). Depending on whether you have it set to <code>unwind</code> or <code>abort</code>, different things will happen:</p>\n\n<ul>\n<li>With <code>unwind</code>, this will (as the name suggests) unwind the stack. With this, in particular, it is possible to get a full stack trace</li>\n<li>With <code>abort</code>, you will only get the last callee</li>\n</ul>\n\n<p><code>process::exit()</code>, on the other hand, is a \"clean\" exit - you will not get a last callee, and you'll get a regular process exit status.</p>\n\n<p>Due to this, you'll ideally want to keep to the following:</p>\n\n<ul>\n<li>For planned shutdowns, use <code>exit()</code>. Do note that a known error is considered a planned shutdown</li>\n<li>For unplanned shutdowns (i.e. exceptional failures) consider <code>panic!()</code>, as you'll both benefit from being able to get a stack trace when this happens, and the failure case should be exceptional enough that it is effectively unaccounted for and stems from an unplanned scenario</li>\n</ul>\n"}], "owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 58363061, "answer_count": 2, "score": 1, "last_activity_date": 1570970789, "creation_date": 1570963850, "question_id": 58362850, "link": "https://stackoverflow.com/questions/58362850/what-is-the-difference-between-panic-and-processexit", "title": "What is the difference between panic and process::exit", "body": "<p>As per the title, what is the difference between these two and when should I consider using one over the other?</p>\n"}, {"tags": ["rust", "async-await"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1570963987, "post_id": 58361842, "comment_id": 103077033, "body": "You&#39;re creating the vec to hold boxes of closures returning boxes, but trying to add there pins of boxes of closures returning pins of boxes. What do you gen if you simply replace <code>Box::pin</code> with <code>Box::new</code>?"}, {"owner": {"reputation": 61, "user_id": 2849597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6ca62a7a32e96bb5f6ed71ca795e83?s=128&d=identicon&r=PG&f=1", "display_name": "Peter", "link": "https://stackoverflow.com/users/2849597/peter"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1570992178, "post_id": 58361842, "comment_id": 103083742, "body": "Thanks for the hint, then I get the error message (and others). I corrected my original post."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1601316524, "creation_date": 1601316524, "answer_id": 64107422, "question_id": 58361842, "link": "https://stackoverflow.com/questions/58361842/how-to-join-all-from-a-vec-of-closures-that-return-asyncs/64107422#64107422", "title": "How to join_all from a Vec of closures that return asyncs?", "body": "<p><code>join_all</code> requires an iterator of futures, not an iterator of functions returning futures:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn join_all&lt;I&gt;(i: I) -&gt; JoinAll&lt;&lt;I as IntoIterator&gt;::Item&gt;\nwhere\n    I: IntoIterator,\n    &lt;I as IntoIterator&gt;::Item: Future,\n</code></pre>\n<p>Additionally, your futures can't be pinned and so <code>join_all</code> cannot use them.</p>\n<p>The shortest fix is to:</p>\n<ol>\n<li>Call the closure</li>\n<li>Pin the future</li>\n</ol>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future; // 0.3.5\nuse std::{future::Future, pin::Pin};\n\nasync fn hello(name: &amp;str) -&gt; String {\n    format!(&quot;Hello {}!&quot;, name)\n}\n\npub async fn example() {\n    let urls = vec![&quot;Peter&quot;, &quot;Hans&quot;, &quot;Jake&quot;];\n    let mut requests: Vec&lt;Box&lt;dyn Fn() -&gt; Pin&lt;Box&lt;dyn Future&lt;Output = String&gt;&gt;&gt;&gt;&gt; = vec![];\n    for url in urls {\n        requests.push(Box::new(move || Box::pin(hello(&amp;url))));\n    }\n    let responses: Vec&lt;String&gt; = future::join_all(requests.into_iter().map(|r| r())).await;\n\n    println!(&quot;Response: {:?}&quot;, responses);\n}\n</code></pre>\n<p>This can be written more succinctly as:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::{self, FutureExt, LocalBoxFuture}; // 0.3.5\n\nasync fn hello(name: &amp;str) -&gt; String {\n    format!(&quot;Hello {}!&quot;, name)\n}\n\npub async fn example() {\n    let urls = vec![&quot;Peter&quot;, &quot;Hans&quot;, &quot;Jake&quot;];\n    let mut requests: Vec&lt;Box&lt;dyn Fn() -&gt; LocalBoxFuture&lt;'static, String&gt;&gt;&gt; = vec![];\n    for url in urls {\n        requests.push(Box::new(move || hello(&amp;url).boxed_local()));\n    }\n    let responses: Vec&lt;String&gt; = future::join_all(requests.into_iter().map(|r| r())).await;\n\n    println!(&quot;Response: {:?}&quot;, responses);\n}\n</code></pre>\n<p>However, none of that is needed for your specific example:</p>\n<ol>\n<li>The closure doesn't provide any value</li>\n<li>You have one type of future so there's no need for dynamic dispatch</li>\n<li>You don't even need a <code>Vec</code></li>\n</ol>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future; // 0.3.5\n\nasync fn hello(name: &amp;str) -&gt; String {\n    format!(&quot;Hello {}!&quot;, name)\n}\n\npub async fn example() {\n    let urls = vec![&quot;Peter&quot;, &quot;Hans&quot;, &quot;Jake&quot;];\n\n    let hellos = urls.iter().map(|u| hello(u));\n    let responses = future::join_all(hellos).await;\n\n    println!(&quot;Response: {:?}&quot;, responses);\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/58704424/155423\">How can I put an async function into a map in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/58354633/155423\">Cannot use `impl Future` to store async function in a vector</a></li>\n</ul>\n"}], "owner": {"reputation": 61, "user_id": 2849597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6ca62a7a32e96bb5f6ed71ca795e83?s=128&d=identicon&r=PG&f=1", "display_name": "Peter", "link": "https://stackoverflow.com/users/2849597/peter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 783, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1601316524, "creation_date": 1570955501, "last_edit_date": 1601315712, "question_id": 58361842, "link": "https://stackoverflow.com/questions/58361842/how-to-join-all-from-a-vec-of-closures-that-return-asyncs", "title": "How to join_all from a Vec of closures that return asyncs?", "body": "<p>I want to generate a <code>Vec</code> of <code>.await</code>s and execute them with <code>join_all</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::join_all; // 0.3.5\nuse std::future::Future;\n\nasync fn hello(name: &amp;str) -&gt; String {\n    format!(&quot;Hello {}!&quot;, name)\n}\n\nasync fn main() {\n    let urls = vec![&quot;Peter&quot;, &quot;Hans&quot;, &quot;Jake&quot;];\n    let mut requests: Vec&lt;Box&lt;dyn Fn() -&gt; Box&lt;dyn Future&lt;Output = String&gt;&gt;&gt;&gt; = vec![];\n    for url in urls {\n        requests.push(Box::new(|| Box::new(hello(&amp;url))));\n    }\n    let responses: Vec&lt;String&gt; = join_all(requests).await;\n\n    println!(&quot;Response: {:?}&quot;, responses);\n}\n</code></pre>\n<p>I get the error message:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` cannot be unpinned\n  --&gt; src/main.rs:15:45\n   |\n15 |     let responses : Vec&lt;String&gt;  = join_all(requests).await;\n   |                                             ^^^^^^^^ the trait `std::marker::Unpin` is not implemented for `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;`\n   | \n  ::: /playground/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs:83:14\n   |\n83 |     I::Item: Future,\n   |              ------ required by this bound in `futures::future::join_all`\n   |\n   = note: required because of the requirements on the impl of `futures::Future` for `std::boxed::Box&lt;dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;&gt;`\n\nerror[E0277]: `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` is not a future\n  --&gt; src/main.rs:15:45\n   |\n15 |     let responses : Vec&lt;String&gt;  = join_all(requests).await;\n   |                                             ^^^^^^^^ `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` is not a future\n   | \n  ::: /playground/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs:83:14\n   |\n83 |     I::Item: Future,\n   |              ------ required by this bound in `futures::future::join_all`\n   |\n   = help: the trait `futures::Future` is not implemented for `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;`\n   = note: required because of the requirements on the impl of `futures::Future` for `std::boxed::Box&lt;dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;&gt;`\n\nerror[E0277]: `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` cannot be unpinned\n  --&gt; src/main.rs:15:36\n   |\n15 |     let responses : Vec&lt;String&gt;  = join_all(requests).await;\n   |                                    ^^^^^^^^^^^^^^^^^^ the trait `std::marker::Unpin` is not implemented for `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;`\n   | \n  ::: /playground/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs:28:8\n   |\n28 |     F: Future,\n   |        ------ required by this bound in `futures::future::JoinAll`\n   |\n   = note: required because of the requirements on the impl of `futures::Future` for `std::boxed::Box&lt;dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;&gt;`\n\nerror[E0277]: `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` is not a future\n  --&gt; src/main.rs:15:36\n   |\n15 |     let responses : Vec&lt;String&gt;  = join_all(requests).await;\n   |                                    ^^^^^^^^^^^^^^^^^^ `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` is not a future\n   | \n  ::: /playground/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join_all.rs:28:8\n   |\n28 |     F: Future,\n   |        ------ required by this bound in `futures::future::JoinAll`\n   |\n   = help: the trait `futures::Future` is not implemented for `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;`\n   = note: required because of the requirements on the impl of `futures::Future` for `std::boxed::Box&lt;dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;&gt;`\n\nerror[E0277]: `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` cannot be unpinned\n  --&gt; src/main.rs:15:36\n   |\n15 |     let responses : Vec&lt;String&gt;  = join_all(requests).await;\n   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Unpin` is not implemented for `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;`\n   |\n   = note: required because of the requirements on the impl of `futures::Future` for `std::boxed::Box&lt;dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;&gt;`\n\nerror[E0277]: `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` is not a future\n  --&gt; src/main.rs:15:36\n   |\n15 |     let responses : Vec&lt;String&gt;  = join_all(requests).await;\n   |                                    ^^^^^^^^^^^^^^^^^^^^^^^^ `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;` is not a future\n   |\n   = help: the trait `futures::Future` is not implemented for `dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;`\n   = note: required because of the requirements on the impl of `futures::Future` for `std::boxed::Box&lt;dyn std::ops::Fn() -&gt; std::boxed::Box&lt;dyn futures::Future&lt;Output = std::string::String&gt;&gt;&gt;`\n\nerror[E0277]: `main` has invalid return type `impl futures::Future`\n --&gt; src/main.rs:9:17\n  |\n9 | async fn main() {\n  |                 ^ `main` can only return types that implement `std::process::Termination`\n  |\n  = help: consider using `()`, or a `Result`\n\nerror[E0752]: `main` function is not allowed to be `async`\n --&gt; src/main.rs:9:1\n  |\n9 | async fn main() {\n  | ^^^^^^^^^^^^^^^ `main` function is not allowed to be `async`\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 2, "last_activity_date": 1570959511, "creation_date": 1570959511, "answer_id": 58362318, "question_id": 58360894, "link": "https://stackoverflow.com/questions/58360894/what-is-the-proper-way-to-coerce-an-iterator-to-return-a-value-instead-of-a-refe/58362318#58362318", "title": "What is the proper way to coerce an iterator to return a value instead of a reference (or vice versa)?", "body": "<p>There is a <a href=\"https://github.com/rust-lang/rust/issues/25725\" rel=\"nofollow noreferrer\"><strong>long-standing issue</strong></a> regarding this. The technical details are a bit heavy, but essentially, due to underlying, technical reasons, you cannot take ownership of a fixed-size array and return owned references without a lot of hocus pocus. This becomes obvious when you think about what a fixed-size array is and how it is stored in memory, and how you can get elements out without cloning them.</p>\n\n<p>As a result, due to the implementations you found already, you can only get borrowed references. You <strong>can</strong> bypass this with <code>arrayvec</code> (as they have a sound implementation of <code>IntoIterator</code> for <code>ArrayVec</code> with owned types), or you can require that all your <code>T: Clone</code> and deal with it that way, at a cost of extra items in memory (temporarily; 90% of the time the compiler optimizes this away).</p>\n"}], "owner": {"reputation": 103, "user_id": 6844357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d541bd049c48ae96f417f03952e395b?s=128&d=identicon&r=PG&f=1", "display_name": "SiNiquity", "link": "https://stackoverflow.com/users/6844357/siniquity"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1570959511, "creation_date": 1570945202, "last_edit_date": 1570949871, "question_id": 58360894, "link": "https://stackoverflow.com/questions/58360894/what-is-the-proper-way-to-coerce-an-iterator-to-return-a-value-instead-of-a-refe", "title": "What is the proper way to coerce an iterator to return a value instead of a reference (or vice versa)?", "body": "<p>The general setup is I have an array of values I'd like to <code>map()</code> and then <code>chain()</code> with 1 additional value. I've learned from <a href=\"https://stackoverflow.com/a/44427004/6844357\">this answer</a> that the proper way to construct that final value is to use <code>std::iter::once</code>. <strong>This works and eliminated the below problem, but I would still like to understand it better</strong>.</p>\n\n<p>In my broken, likely rust-anti-pattern-riddled example, I was using an array of a single element and then calling <code>into_iter()</code>. This produced a value / reference type-mismatch in the chain.</p>\n\n<p><strong>Question:</strong> What is the Rust-idiomatic mechanism for correcting this value / reference mismatch? Particularly if <code>clone</code> and <code>copy</code> are unavailable.</p>\n\n<h3>Background: Why is there a type mis-match to begin with?</h3>\n\n<p>This much I believe I understand. Based on the definition of <a href=\"https://doc.rust-lang.org/std/iter/struct.Map.html\" rel=\"nofollow noreferrer\">std::iter::Map</a>, the item type for the iterator is <code>type Item = B</code> where <code>B</code> is constrained by <code>F: FnMut(&lt;I as Iterator&gt;::Item) -&gt; B</code> (i.e. the mapped type). However <a href=\"https://doc.rust-lang.org/std/primitive.array.html\" rel=\"nofollow noreferrer\">array</a> defines the following 2 <code>IntoIterator</code> implementations, both of which appear to produce references.</p>\n\n<pre><code>impl&lt;'a, const N: usize, T&gt; IntoIterator for &amp;'a [T; N] where\n    [T; N]: LengthAtMost32, \ntype Item = &amp;'a T\n\nimpl&lt;'a, const N: usize, T&gt; IntoIterator for &amp;'a mut [T; N] where\n    [T; N]: LengthAtMost32, \ntype Item = &amp;'a mut T\n</code></pre>\n\n<p>Example demonstrating the issue:</p>\n\n<pre><code>#[derive(PartialEq, Eq, Clone, Copy)]\nenum Enum1 {\n    A, B, C\n}\n\n#[derive(PartialEq, Eq, Clone, Copy)]\nenum Enum2 {\n    X, Y, Z\n}\n\nstruct Data {\n    // Other data omitted\n    e1: Enum1,\n    e2: Enum2\n}\nstruct Consumer {\n    // Other data omitted\n\n    /** Predicate which evaluates if this consumer can consume given Data */\n    consumes: Box&lt;dyn Fn(&amp;Data) -&gt; bool&gt;\n}\n\n\nfn main() {\n    // Objective: 3 consumers which consume data with A, B, and X respectively\n    let v: Vec&lt;Consumer&gt; = [Enum1::A, Enum1::B].iter()\n        .map(|&amp;e1| Consumer { consumes: Box::new(move |data| data.e1 == e1) })\n        // This chain results in an iterator type-mismatch: \n        // expected &amp;Consumer, found Consumer\n        .chain([Consumer { consumes: Box::new(move |data| data.e2 == Enum2::X) }].into_iter())\n        .collect(); // Fails as well due to the chain failure\n\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>error[E0271]: type mismatch resolving `&lt;std::slice::Iter&lt;'_, Consumer&gt; as std::iter::IntoIterator&gt;::Item == Consumer`\n  --&gt; src/main.rs:52:10\n   |\n52 |         .chain([Consumer { consumes: Box::new(move |data| data.e2 == Enum2::X) }].into_iter())\n   |          ^^^^^ expected reference, found struct `Consumer`\n   |\n   = note: expected type `&amp;Consumer`\n              found type `Consumer`\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=85ef1672544f21a29dce56ccd4e22c55\" rel=\"nofollow noreferrer\">Rust playground example</a>.</p>\n"}, {"tags": ["rust", "rust-actix"], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 2, "last_activity_date": 1570942590, "creation_date": 1570942590, "answer_id": 58360708, "question_id": 58360661, "link": "https://stackoverflow.com/questions/58360661/why-can-actix-rt-be-used-directly-in-the-code-even-if-it-wasnt-declared/58360708#58360708", "title": "Why can actix_rt be used directly in the code, even if it wasn&#39;t declared?", "body": "<p>In the Rust 2018 Edition, <code>extern crate</code> <a href=\"https://doc.rust-lang.org/nightly/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"nofollow noreferrer\">is no longer required</a>. Putting a crate as a dependency allows it to be accessed as a module. There's nothing you need to do to make your crate accessible like this.</p>\n\n<p>This is very different from the standard library prelude, which <code>use</code>s all the items in the prelude implicitly <a href=\"https://doc.rust-lang.org/stable/std/prelude/index.html\" rel=\"nofollow noreferrer\">(with <code>use std::prelude::v1::*;</code></a>). With <code>extern crate</code> or adding an external crate as a dependency, the types, functions and traits have to be qualified. In your example, you have to use <code>actix_rt::System::new(\"basic\")</code> rather than simply <code>System::new(\"basic\")</code>. Compare this to <code>std::prelude::v1::Option</code>, which can be used as <code>Option&lt;T&gt;</code> without any prefix.</p>\n"}], "owner": {"reputation": 15, "user_id": 4365226, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-V3IL6Sxi1_c/AAAAAAAAAAI/AAAAAAAAAI8/qL5Fk9qAMHo/photo.jpg?sz=128", "display_name": "Brad C", "link": "https://stackoverflow.com/users/4365226/brad-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 338, "favorite_count": 0, "accepted_answer_id": 58360708, "answer_count": 1, "score": 1, "last_activity_date": 1570942822, "creation_date": 1570941813, "last_edit_date": 1570942822, "question_id": 58360661, "link": "https://stackoverflow.com/questions/58360661/why-can-actix-rt-be-used-directly-in-the-code-even-if-it-wasnt-declared", "title": "Why can actix_rt be used directly in the code, even if it wasn&#39;t declared?", "body": "<p>I just added actix_rt in Cargo.toml and didn't declare it at the first line with the use keyword. Then I could use it in the code. I know some frequently used functions are included in the prelude of Rust, but I had no idea 3rd party libraries could do the some thing. Can I create a crate like that?</p>\n\n<p>Any one could tell me why or give me some tips or some reference links? I'd appreciate it.</p>\n\n<pre><code>[dependencies]\nactix-rt = \"0.2.5\"\nactix-web = \"1.0.8\"\n</code></pre>\n\n<pre><code>use std::io;\n\nfn main() -&gt; io::Result&lt;()&gt; {\n    let sys = actix_rt::System::new(\"basic\");\n\n    sys.run()\n}\n</code></pre>\n"}, {"tags": ["rust", "deserialization", "json-deserialization", "serde"], "comments": [{"owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "edited": false, "score": 0, "creation_date": 1570924075, "post_id": 58359340, "comment_id": 103071433, "body": "1- I dont think deserialization performance will be an issue (for huge data set faster serialization methode can be used like bincode) 2 - For portability use <a href=\"https://doc.rust-lang.org/std/macro.include_bytes.html\" rel=\"nofollow noreferrer\"><code>include_bytes</code></a>, then you can deserialize the required bytes (avoid using json this will incrasse binary size for nothing)"}, {"owner": {"reputation": 55, "user_id": 11748992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66892637e4600495281137d46605c857?s=128&d=identicon&r=PG&f=1", "display_name": "Nils Andr&#233;", "link": "https://stackoverflow.com/users/11748992/nils-andr%c3%a9"}, "reply_to_user": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "edited": false, "score": 0, "creation_date": 1570965389, "post_id": 58359340, "comment_id": 103077345, "body": "@AsyaCorbeau is there any reason to use <a href=\"https://doc.rust-lang.org/std/macro.include_bytes.html\" rel=\"nofollow noreferrer\"><code>include_bytes!</code></a> over <a href=\"https://doc.rust-lang.org/std/macro.include_str.html\" rel=\"nofollow noreferrer\"><code>include_str!</code></a>?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570985070, "post_id": 58359340, "comment_id": 103081790, "body": "@NilsAndr&#233; none, as JSON implies valid utf8, which is the only requirement separating an array of bytes from a string in rust."}, {"owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "edited": false, "score": 0, "creation_date": 1571165992, "post_id": 58359340, "comment_id": 103147336, "body": "True but as i said with binary encoding the executable size will be decreased (without any compression overhead), JSON is useless when its not readed by humans/there is no encoding limitations and there is an overhead : deserializing JSON require a lot  more work than an optimized binary encoding, optionaly this can avoid all JSON limitations at the cost of interoperability (that you can recover by using JSON as assets and transcoding theme at compile time)"}], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 11748992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66892637e4600495281137d46605c857?s=128&d=identicon&r=PG&f=1", "display_name": "Nils Andr&#233;", "link": "https://stackoverflow.com/users/11748992/nils-andr%c3%a9"}, "edited": false, "score": 0, "creation_date": 1570986905, "post_id": 58359502, "comment_id": 103082302, "body": "For compile time generation of objects, would I use <code>serde</code> or have to do my own parser?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 55, "user_id": 11748992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66892637e4600495281137d46605c857?s=128&d=identicon&r=PG&f=1", "display_name": "Nils Andr&#233;", "link": "https://stackoverflow.com/users/11748992/nils-andr%c3%a9"}, "edited": false, "score": 0, "creation_date": 1570991153, "post_id": 58359502, "comment_id": 103083471, "body": "@NilsAndr&#233; The option is yours on that one. The last time I had to do this, I had the advantage of being able to transform the structure into something that both took less space and killed an intermediary parsing step, and I used <a href=\"https://github.com/stepancheg/rust-protobuf\" rel=\"nofollow noreferrer\">protocol buffers</a> (combined with serde) along with a pre-processing step as a proc macro. I would <b>not</b> recommend this approach unless you absolutely have to."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 55, "user_id": 11748992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66892637e4600495281137d46605c857?s=128&d=identicon&r=PG&f=1", "display_name": "Nils Andr&#233;", "link": "https://stackoverflow.com/users/11748992/nils-andr%c3%a9"}, "edited": false, "score": 0, "creation_date": 1570991208, "post_id": 58359502, "comment_id": 103083490, "body": "@NilsAndr&#233; to reiterate: what you &quot;gain&quot; in not having a JSON parsing step on bootup of your application, you lose <i>massively</i> by having a defined-by-you parsing step, because the data will get parsed no matter what, by something, for you to be able to use it. The gains are small and the headache is large."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574106832, "post_id": 58359502, "comment_id": 104105218, "body": "A build script would accomplish the same as your procedural macro and be simpler."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 4, "last_activity_date": 1574106808, "last_edit_date": 1574106808, "creation_date": 1570923661, "answer_id": 58359502, "question_id": 58359340, "link": "https://stackoverflow.com/questions/58359340/deserialize-file-using-serde-json-at-compile-time/58359502#58359502", "title": "Deserialize file using serde_json at compile time", "body": "<p>This is straightforward, but leads to some potential issues. First, we need to deal with something: do we want to load the <em>tree of objects</em> from a file, or parse that at runtime?</p>\n\n<p>99% of the time, parsing on boot into a <code>static ref</code> is enough for people, so I'm going to give you that solution; I will point you to the \"other\" version at the end, but that requires a <em>lot</em> more work and is domain-specific.</p>\n\n<p>The macro (because it has to be a macro) you are looking for to be able to include a file at compile-time is in the standard library: <a href=\"https://doc.rust-lang.org/std/macro.include_str.html\" rel=\"nofollow noreferrer\"><code>std::include_str!</code></a>. As the name suggests, it takes your file at compile-time and generates a <code>&amp;'static str</code> from it for you to use. You are then free to do whatever you like with it (such as parsing it).</p>\n\n<p>From there, it is a simple matter to then use <a href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/\" rel=\"nofollow noreferrer\"><code>lazy_static!</code></a> to generate a <code>static ref</code> to our JSON <code>Value</code> (or whatever it may be that you decide to go for) for every part of the program to use. In your case, for instance, it could look like this:</p>\n\n<pre><code>const GAME_JSON: &amp;str = include_str!(\"my/file.json\");\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Game {\n    name: String,\n}\n\nlazy_static! {\n    static ref GAMES: Vec&lt;Game&gt; = serde_json::from_str(&amp;GAME_JSON).unwrap();\n}\n</code></pre>\n\n<p>You need to be aware of two things when doing this:</p>\n\n<ol>\n<li>This will <em>massively</em> bloat your file size, as the <code>&amp;str</code> isn't compressed in any way. Consider gzip</li>\n<li>You'll need to worry about the usual concerns around multiple, threaded access to the same <code>static ref</code>, but since it isn't mutable you only really need to worry about a portion of it</li>\n</ol>\n\n<hr>\n\n<p>The other way requires dynamically generating your objects at compile-time using a procedural macro. As stated, I wouldn't recommend it unless you <em>really</em> have a <em>really</em> expensive startup cost when parsing that JSON; most people will not, and the last time I had this was when dealing with deeply-nested multi-GB JSON files.</p>\n\n<p>The crates you want to look out for are <code>proc_macro2</code> and <code>syn</code> for the code generation; the rest is very similar to how you would write a normal method.</p>\n"}, {"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": false, "score": 0, "last_activity_date": 1588341068, "creation_date": 1588341068, "answer_id": 61543785, "question_id": 58359340, "link": "https://stackoverflow.com/questions/58359340/deserialize-file-using-serde-json-at-compile-time/61543785#61543785", "title": "Deserialize file using serde_json at compile time", "body": "<p>When you are deserializing something at runtime, you're essentially building some representation in program memory from another representation on disk. But at compile-time, there's no notion of \"program memory\" yet - where will this data deserialize too?</p>\n\n<p>However, what you're trying to achieve is, in fact, possible. The main idea is like following: to create something in program memory, you must write some code which will create the data. What if you're able to generate the code automatically, based on the serialized data? That's what <a href=\"https://crates.io/crates/uneval\" rel=\"nofollow noreferrer\">uneval</a> crate does (disclaimer: I'm the author, so you're encouraged to look through the source to see if you can do better).</p>\n\n<p>To use this approach, you'll have to create <code>build.rs</code> with approximately the following content:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// somehow include the Games struct with its Serialize and Deserialize implementations\nfn main() {\n    let games: Games = serde_json::from_str(include_str!(\"data/games.json\")).unwrap();\n    uneval::to_out_dir(games, \"games.rs\");\n}\n</code></pre>\n\n<p>And in you initialization code you'll have the following:</p>\n\n<pre><code>let data: Games = include!(concat!(env!(\"OUT_DIR\"), \"/games.rs\"));\n</code></pre>\n\n<hr>\n\n<p>Note, however, that this might be fairly hard to do in ergonomic way, since the necessary struct definitions now must be shared between the <code>build.rs</code> and the crate itself, as I mentioned in the comment. It might be a little easier if you split your crate in two, keeping struct definitions (and only them) in one crate, and the logic which uses them - in another one. There's some other ways - with <code>include!</code> trickery, or by using the fact that the build script is an ordinary Rust binary and can include other modules as well, - but this will complicate things even more.</p>\n"}], "owner": {"reputation": 55, "user_id": 11748992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/66892637e4600495281137d46605c857?s=128&d=identicon&r=PG&f=1", "display_name": "Nils Andr&#233;", "link": "https://stackoverflow.com/users/11748992/nils-andr%c3%a9"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1433, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1588341068, "creation_date": 1570921985, "question_id": 58359340, "link": "https://stackoverflow.com/questions/58359340/deserialize-file-using-serde-json-at-compile-time", "title": "Deserialize file using serde_json at compile time", "body": "<p>At the beginning of my program, I read data from a file:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let file = std::fs::File::open(\"data/games.json\").unwrap();\nlet data: Games = serde_json::from_reader(file).unwrap();\n</code></pre>\n\n<p>I would like to know how it would be possible to do this at compile time for the following reasons:</p>\n\n<ol>\n<li>Performance: no need to deserialize at runtime</li>\n<li>Portability: the program can be run on any machine without the need to have the json file containing the data with it.</li>\n</ol>\n\n<p>I might also be useful to mention that, the data can be read only which means the solution can store it as static.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1570918204, "post_id": 58358932, "comment_id": 103070427, "body": "Are you trying to reinvent <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_default\" rel=\"nofollow noreferrer\"><code>Option::unwrap_or_default</code></a>?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1570918222, "post_id": 58358932, "comment_id": 103070429, "body": "&quot;it doesn&#39;t work&quot; \u2192 what doesn&#39;t work?"}, {"owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1570918744, "post_id": 58358932, "comment_id": 103070521, "body": "@mcarton That function is what I&#39;m trying to do. I guess I&#39;ll read the source code to see how it was written. Thank you for your input."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1570921877, "post_id": 58358932, "comment_id": 103071069, "body": "That function uses a different(and arguably better) method than you are using, but your method would work fine if you added a type argument list (<code>fn unwrap_option&lt;T&gt;(...</code>) and fixed what I assume to be a typo, changing <code>string.unwrap()</code> to <code>data.unwrap()</code>."}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 1, "last_activity_date": 1570925577, "creation_date": 1570925577, "answer_id": 58359620, "question_id": 58358932, "link": "https://stackoverflow.com/questions/58358932/how-to-define-a-function-that-accepts-any-argument-which-implements-the-default/58359620#58359620", "title": "How to define a function that accepts any argument which implements the default trait", "body": "<p>You're almost there!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Notice you were missing a generic parameter\nfn unwrap_option /*-&gt;*/ &lt;T&gt; /*&lt;-*/ (data: Option&lt;T&gt;) -&gt; T \n\n    where T: Default\n{\n\n    if let Some(data) = data {\n        data\n    } else {\n        T::default()\n    }\n}\n</code></pre>\n\n<p>This tries to get a value using an <code>if let</code> statement, and then returns the default if it is <code>None</code>. Another way to write this is the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn unwrap_option&lt;T: Default&gt;(x: Option&lt;T&gt;) -&gt; T {\n    match x {                   // Have we got data?\n        Some(x) =&gt; x,           // We do? Return it then\n        None    =&gt; T::default(),// We don't? Get default then\n    }\n}\n</code></pre>\n\n<p>But, as mentioned in the comments using <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_default\" rel=\"nofollow noreferrer\"><code>Option::unwrap_or_default</code></a> is probably a better idea. </p>\n"}], "owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 58359620, "answer_count": 1, "score": 0, "last_activity_date": 1570925577, "creation_date": 1570917724, "last_edit_date": 1570918706, "question_id": 58358932, "link": "https://stackoverflow.com/questions/58358932/how-to-define-a-function-that-accepts-any-argument-which-implements-the-default", "title": "How to define a function that accepts any argument which implements the default trait", "body": "<p>My aim is to create a custom unwrap option function that works on any type which implements the default trait and in the case the type has no data (none) it returns the default for that type. Here is my attempt:</p>\n\n<pre><code>fn unwrap_option(data: Option&lt;T&gt;) -&gt; T \n\n    where T: Default\n{\n\n    if(data.is_none()){\n        return T::default();\n    }\n    else{\n        return string.unwrap();\n    }\n\n}\n</code></pre>\n\n<p>But it doesn't work.</p>\n"}, {"tags": ["rust", "iterator", "lifetime"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570915475, "post_id": 58358439, "comment_id": 103069838, "body": "Silly question. Does it have to be <code>IntoIterator</code> for <code>StackVec&lt;&#39;a, T&gt;</code>? Can it not be <code>IntoIterator</code> for <code>&amp;&#39;_ StackVec&lt;&#39;a, T&gt;</code>, which solves all your lifetime problems since you will still own the <code>StackVec</code> while iterating?"}, {"owner": {"reputation": 305, "user_id": 5543581, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/10153778183144297/picture?type=large", "display_name": "Chris Starling", "link": "https://stackoverflow.com/users/5543581/chris-starling"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570916336, "post_id": 58358439, "comment_id": 103070049, "body": "The assignment and to implement the iterator for both <code>StackVec</code> and <code>&amp;StackVec</code> so yes I was able to do it for <code>&amp;StackVec</code> just by returning an iterator of the slice but I need both."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570916656, "post_id": 58358439, "comment_id": 103070136, "body": "Okay :-) Chris Pearce sorted your issue out for the owned <code>IntoIterator</code> so it&#39;s all good"}], "answers": [{"comments": [{"owner": {"reputation": 305, "user_id": 5543581, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/10153778183144297/picture?type=large", "display_name": "Chris Starling", "link": "https://stackoverflow.com/users/5543581/chris-starling"}, "edited": false, "score": 0, "creation_date": 1570916494, "post_id": 58358655, "comment_id": 103070093, "body": "Brilliant! I didn&#39;t think to look at the iterator methods. Thank you. I would still be interested to know if there is a solution that uses the slice, but your answer is perfect. Thank you."}, {"owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "reply_to_user": {"reputation": 305, "user_id": 5543581, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/10153778183144297/picture?type=large", "display_name": "Chris Starling", "link": "https://stackoverflow.com/users/5543581/chris-starling"}, "edited": false, "score": 0, "creation_date": 1570921375, "post_id": 58358655, "comment_id": 103070986, "body": "No worries. Updated the answer to offer a solution for the unowned slice version."}], "tags": [], "owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "is_accepted": true, "score": 1, "last_activity_date": 1570921332, "last_edit_date": 1570921332, "creation_date": 1570915389, "answer_id": 58358655, "question_id": 58358439, "link": "https://stackoverflow.com/questions/58358439/how-to-implement-intoiterator-on-a-stackvec/58358655#58358655", "title": "How to implement IntoIterator on a StackVec", "body": "<p>As a fairly simple extension of your original idea, you can limit the number of elements that an iterator can return using the <code>take</code> method. That turns your <code>IntoIterator</code> implementation into:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nimpl&lt;'a, T: 'a&gt; IntoIterator for StackVec&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n    type IntoIter = std::iter::Take&lt;core::slice::IterMut&lt;'a, T&gt;&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.storage.into_iter().take(self.len)\n    }\n}\n</code></pre>\n\n<p>You ran into issues with your other attempt to implement <code>IntoIterator</code> because the <code>into_iter</code> method takes ownership of <code>self</code>. This means that once the function exits, you need to make sure you've moved or copied all of the you want to use in your iterator out of <code>self</code>. Since <code>as_slice</code> only borrows, you can't return an iterator to the slice from your function (the data it's borrowing from will be dropped).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, T: 'a&gt; IntoIterator for StackVec&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    type IntoIter = core::slice::Iter&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        //       ^ no &amp; or &amp;mut here means this function takes ownership of self\n        self.as_slice().into_iter()\n    }\n}\n</code></pre>\n\n<p>You can still create a non-owning iterator of your <code>StackVec</code> struct, but you wouldn't do it with <code>IntoIterator</code>. Instead, simply create a method on your struct called <code>iter</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn iter(&amp;self) -&gt; impl Iterator&lt;Item=&amp;T&gt; {\n    self.storage.iter().take(self.len)\n}\n</code></pre>\n"}], "owner": {"reputation": 305, "user_id": 5543581, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/10153778183144297/picture?type=large", "display_name": "Chris Starling", "link": "https://stackoverflow.com/users/5543581/chris-starling"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 289, "favorite_count": 0, "accepted_answer_id": 58358655, "answer_count": 1, "score": 1, "last_activity_date": 1570921332, "creation_date": 1570913835, "question_id": 58358439, "link": "https://stackoverflow.com/questions/58358439/how-to-implement-intoiterator-on-a-stackvec", "title": "How to implement IntoIterator on a StackVec", "body": "<p>I am trying to write a <code>Vec</code> like object with a fixed size to be used on the stack.</p>\n\n<p>This is part of an online course I am trying to complete <a href=\"https://cs140e.sergio.bz/assignments/1-shell/\" rel=\"nofollow noreferrer\">Assignment 1, Phase 2A</a>.</p>\n\n<p>I am having problems implementing the <code>IntoIterator</code> trait.</p>\n\n<p>The code for the <code>StructVec</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![no_std]\n\npub struct StackVec&lt;'a, T: 'a&gt; {\n    storage: &amp;'a mut [T],\n    len: usize\n}\n\nimpl&lt;'a, T: 'a&gt; StackVec&lt;'a, T&gt; {\n    pub fn new(storage: &amp;'a mut [T]) -&gt; StackVec&lt;'a, T&gt; {\n        StackVec { storage, len: 0 }\n    }\n\n    pub fn with_len(storage: &amp;'a mut [T], len: usize) -&gt; StackVec&lt;'a, T&gt; {\n        StackVec { storage, len }\n    }\n\n    pub fn capacity(&amp;self) -&gt; usize {\n        self.storage.len()\n    }\n\n    pub fn truncate(&amp;mut self, len: usize) {\n        if len &lt; self.len {\n            self.len = len;\n        }\n    }\n\n    pub fn into_slice(self) -&gt; &amp;'a mut [T] {\n        &amp;mut self.storage[..self.len]\n    }\n\n    pub fn as_slice(&amp;self) -&gt; &amp;[T] {\n        &amp;self.storage[..self.len]\n    }\n\n    pub fn as_mut_slice(&amp;mut self) -&gt; &amp;mut [T] {\n        &amp;mut self.storage[..self.len]\n    }\n\n    pub fn len(&amp;self) -&gt; usize {\n        self.len\n    }\n\n    pub fn is_empty(&amp;self) -&gt; bool {\n        self.len == 0\n    }\n\n    pub fn is_full(&amp;self) -&gt; bool {\n        self.len == self.storage.len()\n    }\n\n    pub fn push(&amp;mut self, value: T) -&gt; Result&lt;(), ()&gt; {\n        if self.is_full() {\n            return Err(());\n        }\n        self.storage[self.len] = value;\n        self.len += 1;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>I was able to get implement the <code>IntoIterator</code> trait by returning the iterator of the underlying array:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, T: 'a&gt; IntoIterator for StackVec&lt;'a, T&gt; {\n    type Item = &amp;'a mut T;\n    type IntoIter = core::slice::IterMut&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.storage.into_iter()\n    }\n}\n</code></pre>\n\n<p>However that's not really what I want as it will iterate through the entire array instead of just the items that were pushed onto it.</p>\n\n<p>I've tried returning an iterator from an array slice of the underlying array but I get caught out by lifetimes:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, T: 'a&gt; IntoIterator for StackVec&lt;'a, T&gt; {\n    type Item = &amp;'a T;\n    type IntoIter = core::slice::Iter&lt;'a, T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.as_slice().into_iter()\n    }\n}\n</code></pre>\n\n<p>Fails to compile with the error</p>\n\n<pre><code>error[E0597]: `self` does not live long enough\n   --&gt; src/lib.rs:165:9\n    |\n165 |         self.as_slice().into_iter()\n    |         ^^^^ borrowed value does not live long enough\n166 |     }\n    |     - borrowed value only lives until here\n    |\nnote: borrowed value must be valid for the lifetime 'a as defined on the impl at 160:1...\n   --&gt; src/lib.rs:160:1\n    |\n160 | / impl&lt;'a, T: 'a&gt; IntoIterator for StackVec&lt;'a, T&gt; {\n161 | |     type Item = &amp;'a T;\n162 | |     type IntoIter = core::slice::Iter&lt;'a, T&gt;;\n163 | |\n...   |\n166 | |     }\n167 | | }\n    | |_^\n</code></pre>\n\n<p>I've also tried creating a new <code>Iterator</code> entirely but I get caught out again!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Iter&lt;'a, T: 'a&gt; {\n    stack_vec: StackVec&lt;'a, T&gt;,\n    start: usize,\n}\n\nimpl&lt;'a, T: 'a&gt; Iterator for Iter&lt;'a, T&gt; {\n    type Item = T;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let start = self.start;\n        if start &lt; self.stack_vec.len {\n            self.start += 1;\n            Some(self.stack_vec[start])\n        } else {\n            None\n        }\n    }\n\n    fn size_hint(&amp;self) -&gt; (usize, Option&lt;usize&gt;) {\n        let size = self.stack_vec.len - self.start;\n        (size, Some(size))\n    }\n}\n</code></pre>\n\n<p>Fails to compile with the error:</p>\n\n<pre><code>error[E0508]: cannot move out of type `[T]`, a non-copy slice\n   --&gt; src/lib.rs:148:18\n    |\n148 |             Some(self.stack_vec[start])\n    |                  ^^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n</code></pre>\n\n<p>I've tried looking at crates that do the same thing but either they use the <code>std</code> library which I can't use for this assignment, or I don't understand how to port their code to mine.</p>\n\n<p><a href=\"https://github.com/bluss/arrayvec\" rel=\"nofollow noreferrer\">https://github.com/bluss/arrayvec</a></p>\n\n<p><a href=\"https://github.com/danielhenrymantilla/stackvec-rs/blob/master/src/stackvec/traits/into_iter.rs\" rel=\"nofollow noreferrer\">https://github.com/danielhenrymantilla/stackvec-rs/blob/master/src/stackvec/traits/into_iter.rs</a></p>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["rust", "bincode"], "answers": [{"tags": [], "owner": {"reputation": 4831, "user_id": 689394, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07d1795a5234cffedd9ed3ad59f4cad3?s=128&d=identicon&r=PG", "display_name": "matt", "link": "https://stackoverflow.com/users/689394/matt"}, "is_accepted": false, "score": 1, "last_activity_date": 1581720505, "creation_date": 1581720505, "answer_id": 60234426, "question_id": 58358179, "link": "https://stackoverflow.com/questions/58358179/using-sled-how-do-i-serialize-and-deserialize/60234426#60234426", "title": "Using Sled, how do I serialize and deserialize?", "body": "<p>I cannot reproduce this issue with the code given above, I'm unsure if the sled implementation has perhaps changed a size of something related to the range function, and now match the expectations of the code, or if this was just a bug.</p>\n\n<p>None the less, I ran into this error message due to some carelessness on my part.</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), Error&gt; {\n    let db = sled::open(\"foo.sled_db\").unwrap();\n    let codec = bincode::config();\n\n    db.insert(\"uhoh\", codec.serialize(&amp;0)?)?;\n    let ser = &amp;db.get(\"uhoh\")?.unwrap();\n    let de1: i32 = codec.deserialize(ser)?;\n    println!(\"ok... {}\", de1);\n    let de2: usize = codec.deserialize(ser)?;\n    println!(\"not ok {}\", de2);\n}\n</code></pre>\n\n<ul>\n<li>I've omitted implementations of <code>From&lt;sled::Error&gt;</code> and <code>From&lt;bincode::Error&gt;</code> for Error, to simplify things.</li>\n</ul>\n\n<blockquote>\n  <p>ok... 0</p>\n  \n  <p>Error: Bincode(Io(Custom { kind: UnexpectedEof, error: \"failed to fill whole  buffer\" })</p>\n</blockquote>\n\n<p>The thing to note here is that (as you say) value which was serialized is smaller,\nthan the type we attempt to deserialize into.</p>\n\n<pre><code>println!(\n       \"{} {}\",\n       core::mem::size_of::&lt;usize&gt;(),\n       core::mem::size_of_val(&amp;0)\n);\n\nprintln!(\n        \"{} {}\",\n        core::mem::size_of::&lt;usize&gt;(),\n        core::mem::size_of::&lt;i32&gt;()\n);\n</code></pre>\n\n<blockquote>\n  <p>8 4</p>\n  \n  <p>8 4</p>\n</blockquote>\n\n<p>To fix this I serialized this with the value <code>&amp;0usize</code> instead of <code>&amp;0</code>.\nUsing serde serialization for sled keys and values indeed does seem fine, but you do need to be careful about the inferred size of values.</p>\n"}], "owner": {"reputation": 1969, "user_id": 18194, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4b0fa76af3c08ef9573c75202bbcb149?s=128&d=identicon&r=PG", "display_name": "Russell Myers", "link": "https://stackoverflow.com/users/18194/russell-myers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 672, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1581720505, "creation_date": 1570911956, "question_id": 58358179, "link": "https://stackoverflow.com/questions/58358179/using-sled-how-do-i-serialize-and-deserialize", "title": "Using Sled, how do I serialize and deserialize?", "body": "<p>I'm playing around with the crate <a href=\"https://crates.io/crates/sled\" rel=\"nofollow noreferrer\">sled</a> and attempting a simple serialization and deserialization exercise using <a href=\"https://crates.io/crates/bincode\" rel=\"nofollow noreferrer\">bincode</a> just to get a handle on usage.</p>\n\n<p>While I can get insertion to work, attempting to get a range of results seems more difficult. Here I attempt to put in two records: a key of 42 with the value of \"Alice\" and a key of 69 with a value of \"Bob and then retrieve and print them. I'm having a hard time reconciling deserialization of the vectors that come out:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::db::Database;\nuse sled::Db;\nuse bincode;\n\n\npub struct SledDatabase {\n    db: Db,\n}\n\nimpl Database for SledDatabase {\n    fn create(&amp;self) {\n        // Not handling errors; just an example.\n        let key: i64 = 42;\n        println!(\"ser {:?}\", bincode::serialize(&amp;key).unwrap());\n        self.db.insert(bincode::serialize(&amp;key).unwrap(), bincode::serialize(\"Alice\").unwrap());\n        let key2: i64 = 69;\n        self.db.insert(bincode::serialize(&amp;key2).unwrap(), bincode::serialize(\"Bob\").unwrap());\n    }\n\n    fn query(&amp;self, value : i64) {\n        let range = value.to_ne_bytes();\n        let mut iter = self.db.range(range..);\n        while let Some(item) = iter.next() {\n            let (k, v) = item.unwrap();\n            println!(\"res {:?}\", k);\n            let key: i64 = bincode::deserialize(&amp;k).unwrap();\n            let value: String = bincode::deserialize(&amp;v).unwrap();\n            println!(\"age = {}\", key);\n            println!(\"name = {}\", value);\n        }\n    }\n}\n\nimpl SledDatabase {\n    pub fn connect() -&gt; SledDatabase {\n        // use sled::{ConfigBuilder, Error};\n        // let config = ConfigBuilder::new().temporary(true).build();\n        SledDatabase { db: Db::open(\"sled.db\").unwrap() }\n    }\n}\n</code></pre>\n\n<p>Attempting to interact with this using a console entry listener I've pieced together, I get the following output:</p>\n\n<pre><code>ser [42, 0, 0, 0, 0, 0, 0, 0]\n&gt;&gt; 1\nres [42]\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Io(Custom { kind: UnexpectedEof, error: \"failed to fill whole buffer\" })', src/libcore/result.rs:1084:5\n</code></pre>\n\n<p>This occurs on either attempt to deserialize (either the <code>String</code> or the <code>i64</code> value. Interestingly, the output seems to indicate that either sled or bincode are truncating the key value.</p>\n\n<p>The <a href=\"https://docs.rs/crate/sled/0.28.0\" rel=\"nofollow noreferrer\">examples of sled usage</a> don't seem to address retrieving values, but looking through some documentation and parts of the source, I get the sense that serde serialization is a valid way of getting things in and out of sled.</p>\n"}, {"tags": ["rust", "gtk", "gtk-rs"], "comments": [{"owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570911686, "post_id": 58358008, "comment_id": 103069002, "body": "The docs state that <code>connect_draw</code> is used to attach a signal handler (<a href=\"https://gtk-rs.org/docs/gtk/trait.WidgetExt.html#tymethod.connect_draw\" rel=\"nofollow noreferrer\">gtk-rs.org/docs/gtk/trait.WidgetExt.html#tymethod.connect_d&zwnj;&#8203;raw</a>). It seems that you&#39;re adding a second handler, not reseting it."}, {"owner": {"reputation": 1507, "user_id": 4296244, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e8c0940effc84e18a8541145ef2dfbfe?s=128&d=identicon&r=PG&f=1", "display_name": "Natjo", "link": "https://stackoverflow.com/users/4296244/natjo"}, "reply_to_user": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570911783, "post_id": 58358008, "comment_id": 103069026, "body": "I thought so, but I couldn&#39;t find any functionality to replace the handler."}], "answers": [{"tags": [], "owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "is_accepted": true, "score": 1, "last_activity_date": 1570912656, "creation_date": 1570912656, "answer_id": 58358271, "question_id": 58358008, "link": "https://stackoverflow.com/questions/58358008/update-drawing-function-of-a-drawingarea/58358271#58358271", "title": "Update drawing function of a DrawingArea", "body": "<p>Using the <code>connect_draw</code> function attaches another signal handler, but will not replace existing handlers. However, the function returns a <code>SignalHandlerId</code> which you should then be able to use to disonnect your original signal handler using the <code>signal_handler_disconnect</code> function (see <a href=\"https://gtk-rs.org/docs/glib/signal/fn.signal_handler_disconnect.html\" rel=\"nofollow noreferrer\">https://gtk-rs.org/docs/glib/signal/fn.signal_handler_disconnect.html</a>).</p>\n"}], "owner": {"reputation": 1507, "user_id": 4296244, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e8c0940effc84e18a8541145ef2dfbfe?s=128&d=identicon&r=PG&f=1", "display_name": "Natjo", "link": "https://stackoverflow.com/users/4296244/natjo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "accepted_answer_id": 58358271, "answer_count": 1, "score": 0, "last_activity_date": 1570912656, "creation_date": 1570910534, "question_id": 58358008, "link": "https://stackoverflow.com/questions/58358008/update-drawing-function-of-a-drawingarea", "title": "Update drawing function of a DrawingArea", "body": "<p>I want to update a cairo drawing inside a DrawingArea. I tried to achieve this by calling <code>DrawingArea::connect_draw(...)</code> with a new function as the parameter. My issue is that it does not replace the original drawing function, but calls both when showing the window.\nHere is an example</p>\n\n<pre><code>extern crate cairo;\nextern crate gio;\nextern crate gtk;\n\nuse gio::prelude::*;\nuse gtk::prelude::*;\n\nfn main() {\n    let application = gtk::Application::new(Some(\"com.example\"), Default::default())\n        .expect(\"Initialization failed...\");\n\n    application.connect_activate(|app| {\n        build_ui(app);\n    });\n\n    application.run(&amp;vec![]);\n}\n\nfn build_ui(application: &amp;gtk::Application) {\n    let window = get_window(application);\n    let drawing_area = Box::new(gtk::DrawingArea::new)();\n\n    // Set drawing function\n    drawing_area.connect_draw(|_, ctx| draw(ctx, 0.5, 2.0));\n    // Change drawing function\n    drawing_area.connect_draw(|_, ctx| draw(ctx, 0.9, 1.0)); // &lt;-- Why is this not working as expected?\n\n    window.add(&amp;drawing_area);\n    window.show_all();\n}\n\nfn get_window(application: &amp;gtk::Application) -&gt; gtk::ApplicationWindow {\n    let window = gtk::ApplicationWindow::new(application);\n    window.set_default_size(500i32, 500i32);\n\n    // Set transparency\n    set_visual(&amp;window, None);\n    window.connect_screen_changed(set_visual);\n    window.set_app_paintable(true);\n\n    window\n}\n\nfn draw(ctx: &amp;cairo::Context, param1: f64, param2: f64) -&gt; gtk::Inhibit {\n    ctx.scale(500f64, 500f64);\n\n    ctx.set_source_rgba(1.0, 0.2, 0.2, param1);\n    ctx.arc(0.5, 0.5, 0.2, 0.0, 3.1414 * param2);\n    ctx.fill();\n\n    Inhibit(false)\n}\n\nfn set_visual(window: &amp;gtk::ApplicationWindow, _screen: Option&lt;&amp;gdk::Screen&gt;) {\n    if let Some(screen) = window.get_screen() {\n        if let Some(ref visual) = screen.get_rgba_visual() {\n            window.set_visual(Some(visual));\n        }\n    }\n}\n</code></pre>\n\n<p>I expect half a circle to be shown. Yet the old, full circle is still there, even though I tried to replace connect_draw. How can I properly replace this?</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1570908225, "post_id": 58357421, "comment_id": 103068266, "body": "The difference actually is in <code>(&amp;k, &amp;v)</code> and <code>(k, v)</code>. Both snippets work with <code>rows.push((k, v))</code> and neither work with <code>(&amp;k, &amp;v)</code>."}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 1, "creation_date": 1570909333, "post_id": 58357421, "comment_id": 103068492, "body": "Short answer: When iterating over <code>&amp;my_btree</code>, the values are borrowed, so you get references with a lifetime tied to the collection. But when iterating over <code>my_btree</code>, you get owned values. If you create references of them, they are only alive until <code>k</code> and <code>v</code> go out of scope."}, {"owner": {"reputation": 790, "user_id": 1355121, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7fde47be1461f757f6e7bbac40c4df97?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1355121/nick"}, "reply_to_user": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1570914330, "post_id": 58357421, "comment_id": 103069604, "body": "@Zefick: thanks for your answer, but I am forced to have references in the end (see my code block at the bottom) which is why I have the (&amp;k, &amp;v) and it was mostly to demonstrate why those are different from each other."}], "answers": [{"comments": [{"owner": {"reputation": 790, "user_id": 1355121, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7fde47be1461f757f6e7bbac40c4df97?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1355121/nick"}, "edited": false, "score": 0, "creation_date": 1570914512, "post_id": 58357663, "comment_id": 103069647, "body": "Thanks a lot for your detailed answer! That really helps. I had missed the fact that there were two different <code>IntoIterator</code>&#39;s"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 790, "user_id": 1355121, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7fde47be1461f757f6e7bbac40c4df97?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1355121/nick"}, "edited": false, "score": 1, "creation_date": 1570914574, "post_id": 58357663, "comment_id": 103069664, "body": "@Nick there are three, actually, but the third one is obvious (<code>&amp;&#39;a mut BTreeMap</code>), and was not immediately relevant for this question."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1570908060, "creation_date": 1570908060, "answer_id": 58357663, "question_id": 58357421, "link": "https://stackoverflow.com/questions/58357421/difference-between-iterating-over-btreemap-and-btreemap/58357663#58357663", "title": "Difference between Iterating over BTreeMap and &amp;BTreeMap", "body": "<p>The subtlety with this is with the double implementation of <code>IntoIterator</code> for <code>BTreeMap</code> (and most collections, actually). You can see it in the <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html#impl-IntoIterator\" rel=\"nofollow noreferrer\">documentation</a>, in order:</p>\n\n<ul>\n<li><code>impl&lt;K, V&gt; IntoIterator for BTreeMap&lt;K, V&gt;</code></li>\n</ul>\n\n<p>This is your first case. What you are doing is moving the <code>BTreeMap</code> and consuming it to produce a <code>(K, V)</code> iterator. You can convince yourself of this with the following snippet:</p>\n\n<pre><code>let mut my_btree:BTreeMap&lt;i64, String&gt; = BTreeMap::new();\nmy_tree.insert(3, \"this is a test\".to_string());\nlet mut rows = Vec::new();\nfor (k, v) in my_btree { // BTreeMap&lt;i64, String&gt;\n    rows.push((k, v))\n}\n</code></pre>\n\n<p>This consumes <code>my_btree</code> and yields <code>(K, V)</code> pairs, one by one. Since these pairs are <em>owned</em>, you can safely push them into the <code>Vec</code> you provided. In your snippet, you had <code>&amp;k</code> and <code>&amp;v</code> - and these references would never work seeing as the items would be immediately dropped from scope.</p>\n\n<ul>\n<li><code>impl&lt;'a, K, V&gt; IntoIterator for &amp;'a BTreeMap&lt;K, V&gt;</code></li>\n</ul>\n\n<p>This is your second case. In this case, your iterator is now <code>(&amp;'a K, &amp;'a V)</code> and you can easily convince yourself of this by trying to move the <code>Vec</code> out of scope of the <code>BTreeMap</code>, like so:</p>\n\n<pre><code>fn does_not_work&lt;'a&gt;() -&gt; Vec&lt;(&amp;'a i64, &amp;'a String)&gt; {\n    let my_btree:BTreeMap&lt;i64, String&gt; = BTreeMap::new();\n    let mut rows = Vec::new();\n    for (k, v) in &amp;my_btree { // BTreeMap&lt;i64, String&gt;\n        rows.push((k, v))\n    }\n    rows\n}\n</code></pre>\n\n<p>This will not compile because you inserted a bunch of references to elements in your <code>BTreeMap</code>, and you then drop it (due to it moving out of scope) - all those references would be invalid if the borrow checker didn't come to the rescue.</p>\n\n<p>So, that is the difference - in one case, you are consuming the <code>BTreeMap</code> to operate on owned structs, in the other you are working on references.</p>\n\n<p>Your example functions due to this - you are never actually dereferencing the map due to the <code>&amp;ss.x</code> iterator, which never consumes the map.</p>\n"}], "owner": {"reputation": 790, "user_id": 1355121, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7fde47be1461f757f6e7bbac40c4df97?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1355121/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 58357663, "answer_count": 1, "score": 1, "last_activity_date": 1570908060, "creation_date": 1570906246, "question_id": 58357421, "link": "https://stackoverflow.com/questions/58357421/difference-between-iterating-over-btreemap-and-btreemap", "title": "Difference between Iterating over BTreeMap and &amp;BTreeMap", "body": "<p>I am trying to understand the difference between</p>\n\n<pre><code>let rows = Vec::new();\nfor (k, v) in my_btree { // BTreeMap&lt;i64, String&gt;\n    rows.push((&amp;k, &amp;v)) // k and v don't live long enough.\n}\n</code></pre>\n\n<p>and:</p>\n\n<pre><code>let rows = Vec::new();\nfor (k, v) in &amp;my_btree { // BTreeMap&lt;i64, String&gt;\n    rows.push((k, v))\n}\n</code></pre>\n\n<p>Can someone please explain the difference between iterating over <code>&amp;my_btree</code> and iterating over <code>my_btree</code>?</p>\n\n<p>Specifically I would like to understand how ownership changes and what memory is being referred to in both of those examples above</p>\n\n<p>Here is a full example of what I am trying to do (target_function is a library I am working with that has a function signature like it has here, so that can't change):</p>\n\n<pre><code>use std::collections::BTreeMap;\n\nstruct SomeStruct {\n    x: BTreeMap&lt;i64, String&gt;\n}\n\nfn target_function(rows: &amp;[(&amp;i64, &amp;String)]) {\n    for row in rows.iter() {\n        println!(\"{:#?}\", row);\n    }    \n}\nfn test(ss: SomeStruct) {\n    let mut rows = Vec::new();\n\n    for (k, v) in &amp;ss.x {\n        rows.push((k, v));\n    }\n    target_function(&amp;rows[..]);\n}\n\nfn main() {\n    let mut a = BTreeMap::new();\n    a.insert(1, \"hello\".to_string());\n    a.insert(2, \"goodbye\".to_string());\n\n    let mystruct = SomeStruct{x: a};\n    test(mystruct);\n}\n</code></pre>\n"}, {"tags": ["gcc", "rust", "llvm", "target", "rust-compiler-plugin"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1570906344, "post_id": 58356600, "comment_id": 103067790, "body": "<code>--help</code> will give you all you need to know"}, {"owner": {"reputation": 436, "user_id": 5881955, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5f0f7ca992e1f5b6b9b38358c66643f5?s=128&d=identicon&r=PG&f=1", "display_name": "TomE8", "link": "https://stackoverflow.com/users/5881955/tome8"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1570976083, "post_id": 58356600, "comment_id": 103079558, "body": "I dont think it helps in this situation..."}, {"owner": {"reputation": 6958, "user_id": 857727, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3772f7ef99bd17c1e77d77edbf76c13d?s=128&d=identicon&r=PG&f=1", "display_name": "arnt", "link": "https://stackoverflow.com/users/857727/arnt"}, "edited": false, "score": 0, "creation_date": 1571131873, "post_id": 58356600, "comment_id": 103129395, "body": "You haven&#39;t even explained what you want to achieve, so how could we possibly tell you what helps?"}], "answers": [{"tags": [], "owner": {"reputation": 436, "user_id": 5881955, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5f0f7ca992e1f5b6b9b38358c66643f5?s=128&d=identicon&r=PG&f=1", "display_name": "TomE8", "link": "https://stackoverflow.com/users/5881955/tome8"}, "is_accepted": true, "score": 0, "last_activity_date": 1571392281, "creation_date": 1571392281, "answer_id": 58448322, "question_id": 58356600, "link": "https://stackoverflow.com/questions/58356600/how-to-use-a-gcc-flag-in-rustc/58448322#58448322", "title": "How to use a gcc flag in rustc", "body": "<p>The solution for the -mlongcall flag is to use the flag: <code>-Ctarget-features=+longcall</code> as suggested in this issue: <a href=\"https://github.com/rust-lang/rust/issues/65403\" rel=\"nofollow noreferrer\">add mlongcall flag to rustc</a></p>\n"}], "owner": {"reputation": 436, "user_id": 5881955, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5f0f7ca992e1f5b6b9b38358c66643f5?s=128&d=identicon&r=PG&f=1", "display_name": "TomE8", "link": "https://stackoverflow.com/users/5881955/tome8"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "accepted_answer_id": 58448322, "answer_count": 1, "score": 0, "last_activity_date": 1571392281, "creation_date": 1570900656, "question_id": 58356600, "link": "https://stackoverflow.com/questions/58356600/how-to-use-a-gcc-flag-in-rustc", "title": "How to use a gcc flag in rustc", "body": "<p>I am trying to run a Rust program on a powerpc arch. </p>\n\n<p>When I build my code in C I use the flag -mlongcall.</p>\n\n<p>I am trying to understand how can I use the \"-mlongcall\" flag in my rust build. In general, it would be nice to know if I can use flags that I know from gcc in my Rust build.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 12442, "user_id": 849697, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0c91f58ffa7bbf4151cae13b5c8b9ccd?s=128&d=identicon&r=PG", "display_name": "xxjjnn", "link": "https://stackoverflow.com/users/849697/xxjjnn"}, "edited": false, "score": 0, "creation_date": 1570899419, "post_id": 58356395, "comment_id": 103065947, "body": "<code>rustc --verbose helloworld.rs</code> - still nothing =( What a puzzling language"}, {"owner": {"reputation": 174, "user_id": 1354814, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pmtMb.jpg?s=128&g=1", "display_name": "riginding", "link": "https://stackoverflow.com/users/1354814/riginding"}, "edited": false, "score": 1, "creation_date": 1570899584, "post_id": 58356395, "comment_id": 103065993, "body": "rustc will just create a binary. if you want to run your programm there should be a helloworld binary now.  Most people don&#39;t directly use rustc. I would recommend using cargo."}, {"owner": {"reputation": 380, "user_id": 12036942, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wL6IV.jpg?s=128&g=1", "display_name": "nrdxp", "link": "https://stackoverflow.com/users/12036942/nrdxp"}, "edited": false, "score": 0, "creation_date": 1570952884, "post_id": 58356395, "comment_id": 103074833, "body": "puzzling language? In what other compiled language does the compiler automatically run the code? This is pretty standard behavior for a compiler actually."}, {"owner": {"reputation": 12442, "user_id": 849697, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0c91f58ffa7bbf4151cae13b5c8b9ccd?s=128&d=identicon&r=PG", "display_name": "xxjjnn", "link": "https://stackoverflow.com/users/849697/xxjjnn"}, "edited": false, "score": 0, "creation_date": 1570961064, "post_id": 58356395, "comment_id": 103076410, "body": "\ud83d\ude05 been using Ruby and Js for too long... forgot about compiled languages!"}], "answers": [{"tags": [], "owner": {"reputation": 1599, "user_id": 2074794, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/AMt3A.jpg?s=128&g=1", "display_name": "kaveh", "link": "https://stackoverflow.com/users/2074794/kaveh"}, "is_accepted": false, "score": 2, "last_activity_date": 1570899606, "creation_date": 1570899606, "answer_id": 58356447, "question_id": 58356395, "link": "https://stackoverflow.com/questions/58356395/rust-not-printing-to-terminal/58356447#58356447", "title": "Rust not printing to terminal", "body": "<p><code>rustc</code> only compiles your code. You need to call the output binary to get it working.</p>\n\n<p>Try <code>./helloworld</code> or whatever the name of the output file is.</p>\n"}, {"tags": [], "owner": {"reputation": 118, "user_id": 5222625, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-5T2Lc_73Ih0/AAAAAAAAAAI/AAAAAAAAAig/bbe4HzIAkaU/photo.jpg?sz=128", "display_name": "Lymphatus", "link": "https://stackoverflow.com/users/5222625/lymphatus"}, "is_accepted": true, "score": 5, "last_activity_date": 1570899640, "creation_date": 1570899640, "answer_id": 58356455, "question_id": 58356395, "link": "https://stackoverflow.com/questions/58356395/rust-not-printing-to-terminal/58356455#58356455", "title": "Rust not printing to terminal", "body": "<p><code>rustc</code> is the compiler of the Rust language, it just produces an executable to be run. If you want to actually see the output you must run the <code>./helloworld</code> command.</p>\n\n<p>You can read about it <a href=\"https://doc.rust-lang.org/rustc/what-is-rustc.html\" rel=\"noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 12442, "user_id": 849697, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/0c91f58ffa7bbf4151cae13b5c8b9ccd?s=128&d=identicon&r=PG", "display_name": "xxjjnn", "link": "https://stackoverflow.com/users/849697/xxjjnn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 461, "favorite_count": 0, "accepted_answer_id": 58356455, "answer_count": 2, "score": 2, "last_activity_date": 1570899661, "creation_date": 1570899205, "last_edit_date": 1570899661, "question_id": 58356395, "link": "https://stackoverflow.com/questions/58356395/rust-not-printing-to-terminal", "title": "Rust not printing to terminal", "body": "<p>rustc is not outputting anything to terminal when using <code>println!</code>.</p>\n\n<p>Code:</p>\n\n<pre><code>fn main() {\n   println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>Running it:</p>\n\n<pre><code>me@mclaptop:~\n&gt; rustc helloworld.rs\n\nme@mclaptop:~\n&gt;\n</code></pre>\n\n<p>Why does it not print anything?</p>\n"}, {"tags": ["recursion", "rust", "generator"], "answers": [{"comments": [{"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 1, "creation_date": 1570896787, "post_id": 58355745, "comment_id": 103065234, "body": "Thanks a lot, I just tried and both approaches work just fine! For the second solution I had to use <a href=\"https://gist.github.com/vxgmichel/45ddea42c6965927761e51d3f0a1213b#file-recgen-rs-L36-L37\" rel=\"nofollow noreferrer\"><code>let mut inner_generator: Box&lt;dyn Iterator&lt;Item = u64&gt;&gt; = Box::new(recursive_generator());</code></a>, can you confirm that this is what you meant?"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1570906121, "post_id": 58355745, "comment_id": 103067728, "body": "Yes, exactly. Your version with coercion or this version with cast are equivalent: <code>Box::new(f()) as Box&lt;dyn Iterator&lt;Item=u64&gt;</code>"}, {"owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 0, "creation_date": 1570906754, "post_id": 58355745, "comment_id": 103067899, "body": "Thanks again, I finally managed to get <a href=\"https://gist.github.com/vxgmichel/95b769bc9b2c68bfcbb2fbcc86cac919#file-primegen-rs\" rel=\"nofollow noreferrer\">my implementation</a> to work :)"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "reply_to_user": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "edited": false, "score": 1, "creation_date": 1570906950, "post_id": 58355745, "comment_id": 103067950, "body": "It reminds me of this <a href=\"https://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf\" rel=\"nofollow noreferrer\">cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf</a>  but I don&#39;t know the details very well. Have fun :)"}], "tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 1, "last_activity_date": 1570894723, "creation_date": 1570894723, "answer_id": 58355745, "question_id": 58355602, "link": "https://stackoverflow.com/questions/58355602/recursive-generator-in-rust/58355745#58355745", "title": "Recursive generator in Rust", "body": "<p>The error <a href=\"https://doc.rust-lang.org/nightly/error-index.html#E0720\" rel=\"nofollow noreferrer\">explanation E0720</a> mentions that an <code>impl Trait</code> type must expand to one that doesn't contain other <code>impl Trait</code> types, but here the type is of course recursive, since that's the point.</p>\n\n<p>This can be worked around by using boxed trait objects instead - <code>Box&lt;Iterator&lt;Item=u64&gt;&gt;</code> works well here and avoids the problem.</p>\n\n<p>Either adjust <code>recursive_generator</code> to return <code>Box&lt;Iterator&lt;Item=u64&gt;&gt;</code>, or change the line of the recursive call to use the boxed iterator just for that recursive case.</p>\n"}], "owner": {"reputation": 10866, "user_id": 2846140, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/98e4467bcd1c05090a5c79e997c81296?s=128&d=identicon&r=PG&f=1", "display_name": "Vincent", "link": "https://stackoverflow.com/users/2846140/vincent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 58355745, "answer_count": 1, "score": 1, "last_activity_date": 1570903451, "creation_date": 1570893665, "last_edit_date": 1570903451, "question_id": 58355602, "link": "https://stackoverflow.com/questions/58355602/recursive-generator-in-rust", "title": "Recursive generator in Rust", "body": "<p>I am trying to port this <a href=\"https://stackoverflow.com/a/19391111/2846140\">python prime number generator</a> to rust using <a href=\"https://doc.rust-lang.org/std/ops/trait.Generator.html\" rel=\"nofollow noreferrer\">rust generators</a> and this <a href=\"https://stackoverflow.com/a/30279122/2846140\">generator-to-iterator wrapper</a>. </p>\n\n<p>My problem is that the original implementation is recursive, and I didn't manage to get passed the following error:</p>\n\n<pre><code>error[E0720]: opaque type expands to a recursive type\n  --&gt; src/main.rs:27:29\n   |\n27 | fn recursive_generator() -&gt; impl Iterator&lt;Item = u64&gt; {\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ expands to a recursive type\n   |\n   = note: expanded type is `GeneratorToIterator&lt;[generator@src/main.rs:28:25: \n   48:6 {u64, (), impl std::iter::Iterator}]&gt;`\n\n</code></pre>\n\n<p>Below is the implementation of the recursive generator producing this error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nfn recursive_generator() -&gt; impl Iterator&lt;Item = u64&gt; {\n    GeneratorToIterator(move || {\n        // Yield a few values\n        yield 1;\n        yield 2;\n        yield 3;\n\n        // Initialize the inner generator\n        let mut inner_value: u64 = 0;\n        let mut inner_generator = recursive_generator();\n\n        // Get the first value of the inner generator\n        match inner_generator.next(){\n             Some(x) =&gt; inner_value += x,\n             None =&gt; {},\n        }\n\n        // Yield some other values\n        yield 4;\n        yield 5;\n        yield 6;\n    })\n}\n</code></pre>\n\n<p>The full implementation (with the <code>GeneratorToIterator</code> definition) can be found <a href=\"https://gist.github.com/vxgmichel/45ddea42c6965927761e51d3f0a1213b\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>I found this <a href=\"https://stackoverflow.com/questions/51488432/recursive-generator-in-rust-causing-cycle-error-workaround\">related question</a> but I did not manage to compile their <code>gen_to_iter</code> function.</p>\n\n<p>EDIT: Thanks to @bluss answer, I've finally been able to implement <a href=\"https://gist.github.com/vxgmichel/95b769bc9b2c68bfcbb2fbcc86cac919#file-primegen-rs\" rel=\"nofollow noreferrer\">a working version of the prime number generator</a> in rust.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1570899385, "post_id": 58355347, "comment_id": 103065939, "body": "Even if the language designers couldn&#39;t think of a use-case at the time, what would be the point of putting a special case in the compiler just to restrict it?"}, {"owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1570901605, "post_id": 58355347, "comment_id": 103066524, "body": "@BenjaminLindley I didn&#39;t think that. I&#39;m just asking if there are any other reasons/use-cases for this apart from  the one I mentioned."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1570902710, "post_id": 58355347, "comment_id": 103066804, "body": "Well your question asks why they are even possible. For them not be possible, the compiler would have to have a special exception for them. You might want to clarify that."}], "answers": [{"comments": [{"owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1570893223, "post_id": 58355483, "comment_id": 103064340, "body": "I was actually thinking about the copy trait (keep in mind I really don&#39;t have much knowledge yet). In my mind, I couldn&#39;t find a reason for an immutable reference to a type which will be copied anyway. Why use a reference which can give you a value but the value won&#39;t ever change (cannot change a borrowed variable) instead of just copying the value and using that. Both (copied variable and reference) would onto the stack. And assuming integer types, the size would also be simmilar. Does the secret lie in multithreading where the borrowed value could change and you can access it through a ref?"}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "reply_to_user": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1570893738, "post_id": 58355483, "comment_id": 103064455, "body": "The Copy trait doesn&#39;t mean things <i>will</i> be copied, only that they <i>could</i>. So it&#39;s the small types concept I was guessing about in the third paragraph (come to think of it, likely also some vector types larger than pointers). For small copy types which fit in a register, there&#39;s no performance gain in using immutable references, but it&#39;s a bit of a pain to specialize functions to have both owned and borrowed data. This is one point where Rust&#39;s reference system gets a bit noisy unnecessarily."}, {"owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1570894059, "post_id": 58355483, "comment_id": 103064533, "body": "Okay maybe I should have specified just <code>i32</code> or <code>u32</code> but as far as I understood those are typical copy types so they all behave the same in this case. In the semi-duplicate the answer states &quot;As for the general case, however, I see no reason making an immutable reference to a primitive type except of when it is done in generic code&quot; and they also mention &quot;by-reference iterators&quot; - do you agree with that or is your case with multiple threads also a possible use-case for these kind of references?"}, {"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "reply_to_user": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1570895006, "post_id": 58355483, "comment_id": 103064793, "body": "It&#39;s a possible use, but when the shared data is that small there&#39;s no reason to do it, so it just falls under generic code."}], "tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 0, "last_activity_date": 1570892839, "creation_date": 1570892839, "answer_id": 58355483, "question_id": 58355347, "link": "https://stackoverflow.com/questions/58355347/why-do-immutable-references-to-copy-types-in-rust-exist/58355483#58355483", "title": "Why do immutable references to copy types in rust exist?", "body": "<p>Immutable references are, naturally, used to provide access to the referenced data. For instance, you could have loaded a dictionary and have multiple threads reading from it at the same time, each using their own immutable reference. Because the references are immutable those threads will not corrupt that common data. </p>\n\n<p>Using only mutable references, you can't be sure of that so you need to make full copies. Copying data takes time and space, which are always limited. The primary question for performance tends to be if your data fits in CPU cache. </p>\n\n<p>I'm guessing you were thinking of \"copy\" types as ones that fit in the same space as the reference itself, i.e. <code>sizeof(type) &lt;= sizeof(type*)</code>. Rust's <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">Copy</a> trait indicates data that could be safely copied, no matter the size. These are orthogonal concepts; for instance, a pointer might not be safely copied without adjusting a refernce count, or an array might be copyable but take gigabytes of memory. This is why <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html\" rel=\"nofollow noreferrer\"><code>Rc&lt;T&gt;</code></a> has the Clone trait, not Copy. </p>\n"}, {"comments": [{"owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1570906516, "post_id": 58357316, "comment_id": 103067834, "body": "My question basically boils down to the last part. What&#39;s the advantage of using <code>&amp;i32</code> instead of <code>i32</code> in your <code>print_the_age</code> function. Any changes won&#39;t be visible outside the function, both go on the stack, .. what else is there? :)"}, {"owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1570987645, "post_id": 58357316, "comment_id": 103082476, "body": "Okay I think I understand a bit better. However the part about semantic relationship confuses me a bit. <i>Here&#39;s a reference, it won&#39;t change and anything you do to it won&#39;t affect me</i>, Wouldn&#39;t this also be true for a copy? <i>Here&#39;s a copy, it obviously can&#39;t change and you can do anything to it but it won&#39;t affect me.</i> Isn&#39;t this almost the same as with a reference? Something which might help me understand, Would you actually use <code>&amp;i32</code> in your <code>print_the_age</code> function or would you use <code>i32</code> in a real world application?"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 1, "last_activity_date": 1570913819, "last_edit_date": 1570913819, "creation_date": 1570905618, "answer_id": 58357316, "question_id": 58355347, "link": "https://stackoverflow.com/questions/58355347/why-do-immutable-references-to-copy-types-in-rust-exist/58357316#58357316", "title": "Why do immutable references to copy types in rust exist?", "body": "<p>An immutable reference to a <code>Copy</code>-type is still \"an immutable reference\". The code that gets passed the reference can't change the original value. It can make a (hopefully) trivial copy of that value, but it can still only ever change that copy after doing so.</p>\n\n<p>That is, the original owner of the value is ensured that - while receivers of the reference may decide to make a copy and change that - the state of whatever is referenced can't ever change. If the receiver wants to change the value, it can feel free; nobody else is going to see it, though.</p>\n\n<p>Immutable references to primitives are not different, and while being <code>Copy</code> everywhere, you are probably more inclined to what \"an immutable reference\" means semantically for primitive types. For instance</p>\n\n<pre><code>fn print_the_age(age: &amp;i32) { ... }\n</code></pre>\n\n<p>That function could make a copy via <code>*age</code> and change it. But the caller will not see that change and it does not make much sense to do so in the first place. </p>\n\n<hr>\n\n<p>Update due to comment: There is no advantage per se, at least as far as primitives are concerned (larger types may be costly to copy). It does boil down to the semantic relationship between the owner of the <code>i32</code> and the receiver: \"Here is a reference, it is guaranteed to not change while you have that reference, I - the owner - can't change or move or deallocate and there is no other thread else including myself that could possibly do that\".</p>\n\n<p>Consider where the reference is coming from: If you receive an <code>&amp;i32</code>, wherever it is coming from can't change and can't deallocate. The `i32\u00b4 may be part of a larger type, which - due to handing out a reference - can't move, change or get de-allocated; the receiver is guaranteed of that. It's hard to say there is an advantage per se in here; it might be advantageous to communicate more detailed type (and lifetime!) relationships this way.</p>\n"}, {"comments": [{"owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "edited": false, "score": 0, "creation_date": 1570987043, "post_id": 58358023, "comment_id": 103082330, "body": "That&#39;s the only use-case I could think of as you can see in my question. Are you saying this is indeed the only one?"}], "tags": [], "owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "is_accepted": false, "score": 1, "last_activity_date": 1570910965, "last_edit_date": 1570910965, "creation_date": 1570910647, "answer_id": 58358023, "question_id": 58355347, "link": "https://stackoverflow.com/questions/58355347/why-do-immutable-references-to-copy-types-in-rust-exist/58358023#58358023", "title": "Why do immutable references to copy types in rust exist?", "body": "<p>They're very useful, because they can be passed to generic functions that expect a reference:</p>\n\n<pre><code>fn map_vec&lt;T, U&gt;(v: &amp;Vec&lt;T&gt;, f: impl Fn(&amp;T) -&gt; U) -&gt; Vec&lt;U&gt; {...}\n</code></pre>\n\n<p>If immutable references of non-<code>Copy</code> types were forbidden, we would need two versions:</p>\n\n<pre><code>fn map_vec_own&lt;T: !Copy, U&gt;(v: &amp;Vec&lt;T&gt;, f: impl Fn(&amp;T) -&gt; U) -&gt; Vec&lt;U&gt; {...}\nfn map_vec_copy&lt;T: Copy, U&gt;(v: &amp;Vec&lt;T&gt;, f: impl Fn( T) -&gt; U) -&gt; Vec&lt;U&gt; {...}\n</code></pre>\n"}], "owner": {"reputation": 2556, "user_id": 10883465, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-E5Lki7kUGF8/AAAAAAAAAAI/AAAAAAAAAAA/AKxrwcY1dMAbpAmyyBJtdSM1p4AdgBm_QQ/mo/photo.jpg?sz=128", "display_name": "Joelius", "link": "https://stackoverflow.com/users/10883465/joelius"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "accepted_answer_id": 58357316, "answer_count": 3, "score": 0, "last_activity_date": 1570913819, "creation_date": 1570891829, "last_edit_date": 1570892224, "question_id": 58355347, "link": "https://stackoverflow.com/questions/58355347/why-do-immutable-references-to-copy-types-in-rust-exist", "title": "Why do immutable references to copy types in rust exist?", "body": "<p>So I just started learning rust (first few chapters of \"the book\") and am obviously quite a noob. I finished the ownership-basics chapter (4) and wrote some test programs to make sure I understood everything. I seem to have the basics down but I asked myself why immutable references to copy-types are even possible. I will try to explain my thoughts with examples.</p>\n\n<p>I thought that you maybe want to store a reference to a copy-type so you can check it's value later instead of having a copy of the old value but this can't be it since the underlying value can't be changed as long as it's been borrowed.<br>\nThe most basic example of this would be this code:</p>\n\n<pre><code>let mut x = 10; // push i32\nlet x_ref = &amp;x; // push immutable reference to x\n// x = 100;        change x which is disallowed since it's borrowed currently\nprintln!(\"{}\", x_ref); // do something with the reference since you want the current value of x\n</code></pre>\n\n<p>The only reason for this I can currently think of (with my current knowledge) is that they just exist so you can call generic methods which require references (like <code>cmp</code>) with them.<br>\nThis code demonstrates this:</p>\n\n<pre><code>let x = 10;               // push i32\n// let ordering = 10.cmp(x); try to compare it but you can't since cmp wants a reference\nlet ordering = 10.cmp(&amp;x) // this works since it's now a reference\n</code></pre>\n\n<p>So, is that the only reason you can create immutable references to copy-types?</p>\n\n<p>Disclaimer:<br>\nI don't see <em>Just continue reading the book</em> as a valid answer. However I fully understand if you say something like <em>Yes you need those for this and this use-case (optional example), it will be covered in chapter X</em>. I hope you understand what I mean :)</p>\n\n<p>EDIT:<br>\nMaybe worth mentioning, I'm a C# programmer and not new to programming itself.</p>\n\n<p>EDIT 2:<br>\nI don't know if this is technically a duplicate of <a href=\"https://stackoverflow.com/questions/32021676/why-use-an-immutable-reference-to-i32\">this question</a> but I do not fully understand the question and the answer so I hope for a more simple answer understandable by a <em>real noob</em>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1213, "user_id": 544707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LVoaL.jpg?s=128&g=1", "display_name": "Anler", "link": "https://stackoverflow.com/users/544707/anler"}, "edited": false, "score": 1, "creation_date": 1570890732, "post_id": 58354952, "comment_id": 103063716, "body": "This is what <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.try_fold\" rel=\"nofollow noreferrer\">try_fold</a> and <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.try_for_each\" rel=\"nofollow noreferrer\">try_for_each</a> are for."}, {"owner": {"reputation": 99, "user_id": 11274749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f411d49deedda4f2ad58be22a05a6c?s=128&d=identicon&r=PG&f=1", "display_name": "SRugina", "link": "https://stackoverflow.com/users/11274749/srugina"}, "reply_to_user": {"reputation": 1213, "user_id": 544707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LVoaL.jpg?s=128&g=1", "display_name": "Anler", "link": "https://stackoverflow.com/users/544707/anler"}, "edited": false, "score": 0, "creation_date": 1570900313, "post_id": 58354952, "comment_id": 103066201, "body": "@Anler from what I understand, you&#39;re suggesting I replace the maps and flat map with try_fold or try_for_each ... but the docs you&#39;ve linked don&#39;t explain how/if you can get the error out from nested iterators..."}], "answers": [{"tags": [], "owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "is_accepted": true, "score": 1, "last_activity_date": 1570910069, "last_edit_date": 1570910069, "creation_date": 1570905775, "answer_id": 58357344, "question_id": 58354952, "link": "https://stackoverflow.com/questions/58354952/how-to-do-error-handling-of-nested-iters/58357344#58357344", "title": "How to do error handling of nested `.iter()`s?", "body": "<p>Being interested in the problem, I tried to implement this with <code>map</code> and <code>try_fold</code>. Using <code>flat_map</code> directly didn't work for me, as I couldn't get around the fact that the first inner loop has to produce a <code>Result</code>. I moved the error messages into the functions, but that could easily be undone if you explicitly wanted to avoid it.</p>\n\n<pre><code>struct Event {\n    id: usize,\n}\n\n#[derive(Debug)]\nstruct EventResponse {\n    id: usize,\n    participants: Vec&lt;i32&gt;,\n}\n\nfn main() {\n    let orgs = vec![1, 3, 14, 12];\n\n    let events: Result&lt;Vec&lt;EventResponse&gt;, &amp;str&gt; = orgs\n        .iter()\n        .map(|org_id| {\n            get_events_for(*org_id)?\n                .iter()\n                .map(get_event_with_participants)\n                .collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;()\n        })\n        .collect::&lt;Result&lt;Vec&lt;_&gt;, _&gt;&gt;()\n        .map(|org_responses| org_responses.into_iter().flatten().collect());\n}\n\nfn get_events_for(id: usize) -&gt; Result&lt;Vec&lt;Event&gt;, &amp;'static str&gt; {\n    // pretend we are checking against a database of existing org ids, if the org id does not exist, then return an error\n    if id == 3 {\n        Ok(vec![Event { id }])\n    } else {\n        Err(\"That Org id does not exist\")\n    }\n}\n\nfn get_event_with_participants(event: &amp;Event) -&gt; Result&lt;EventResponse, &amp;'static str&gt; {\n    //pretend the participants are fetched from a database\n    let foundParticipants = true;\n    if foundParticipants {\n        Ok(EventResponse {\n            id: event.id,\n            participants: vec![1, 2, 5],\n        })\n    } else {\n        Err(\"Participants for that event were not found\")\n    }\n}\n</code></pre>\n\n<p>For <code>try_fold</code>, the main function would become:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let orgs = vec![1, 3, 14, 12];\n\n    let events: Result&lt;Vec&lt;EventResponse&gt;, &amp;str&gt; =\n        orgs.iter().try_fold(Vec::new(), |mut responses, &amp;org| {\n            responses = get_events_for(org)?\n                .into_iter()\n                .try_fold(responses, |mut responses, event| {\n                    let response = get_event_with_participants(&amp;event)?;\n                    responses.push(response);\n                    Ok(responses)\n                })?;\n            Ok(responses)\n        });\n}\n</code></pre>\n\n<p>Personally I'm a fan of the <code>map</code> version, as modifying a <code>Vec</code> using <code>try_fold</code> feels awkward since you have to return the accumulator despite modifying the <code>Vec</code> directly.</p>\n\n<p>Another version to consider is to just use loops, which appears to be far simpler in this situation since you can use the <code>?</code> operator for errors:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let orgs = vec![1, 3, 14, 12];\n\n    let events = get_all_responses(orgs);\n}\n\nfn get_all_responses(\n    orgs: impl IntoIterator&lt;Item = usize&gt;,\n) -&gt; Result&lt;Vec&lt;EventResponse&gt;, &amp;'static str&gt; {\n    let mut responses = Vec::new();\n    for org in orgs.into_iter() {\n        for event in get_events_for(org)? {\n            responses.push(get_event_with_participants(&amp;event)?)\n        }\n    }\n    Ok(responses)\n}\n</code></pre>\n"}], "owner": {"reputation": 99, "user_id": 11274749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f411d49deedda4f2ad58be22a05a6c?s=128&d=identicon&r=PG&f=1", "display_name": "SRugina", "link": "https://stackoverflow.com/users/11274749/srugina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 58357344, "answer_count": 1, "score": 1, "last_activity_date": 1570910069, "creation_date": 1570889130, "last_edit_date": 1570889985, "question_id": 58354952, "link": "https://stackoverflow.com/questions/58354952/how-to-do-error-handling-of-nested-iters", "title": "How to do error handling of nested `.iter()`s?", "body": "<p>I am trying to do error handling when using <code>.iter()</code> in combination with <code>.flat_map</code>, which has an <code>.iter().map()</code> within it. </p>\n\n<p>The scenario is getting all the <code>Event</code>s that belong to a set of organisations, where the nested <code>.iter().map()</code> is used to get the participants of each event, combine that with the event and return an <code>EventResponse</code> stuct.</p>\n\n<p>A non-specific-scenario way of describing the issue would be 'How to get <code>Result&lt;Vec&lt;T&gt;, err&gt;</code> from nested flat_map of <code>Result&lt;Vec&lt;T&gt;, err&gt;</code>, which has nested map of <code>Result&lt;T, err&gt;</code>'</p>\n\n<p>Below is an abstracted/simplified version of the code I'm using, that gives me the same errors as my actual code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Event {\n    id: usize,\n}\n\n#[derive(Debug)]\nstruct EventResponse {\n    id: usize,\n    participants: Vec&lt;i32&gt;,\n}\n\nfn main() {\n    let orgs = vec![1, 3, 14, 12];\n\n    let events: Result&lt;Vec&lt;EventResponse&gt;, &amp;str&gt; = orgs\n        .iter()\n        .flat_map::&lt;Result&lt;Vec&lt;EventResponse&gt;, &amp;str&gt;, _&gt;(|org_id| {\n            get_events_for(*org_id)\n                .map_err(|_| \"That Org id does not exist\")\n                .map(|events| {\n                    events\n                        .iter()\n                        .map::&lt;Result&lt;EventResponse, &amp;str&gt;, _&gt;(|event| {\n                            get_event_with_participants(event)\n                                .map(|event_response| event_response)\n                                .map_err(|_| \"Participants for that event were not found\")\n                        })\n                        .collect()\n                })\n        })\n        .collect();\n}\n\nfn get_events_for(id: usize) -&gt; Result&lt;Vec&lt;Event&gt;, ()&gt; {\n    // pretend we are checking against a database of existing org ids, if the org id does not exist, then return an error\n    if id == 3 {\n        Ok(vec![Event { id }])\n    } else {\n        Err(())\n    }\n}\n\nfn get_event_with_participants(event: &amp;Event) -&gt; Result&lt;EventResponse, ()&gt; {\n    //pretend the participants are fetched from a database\n    let foundParticipants = true;\n    if foundParticipants {\n        Ok(EventResponse {\n            id: event.id,\n            participants: vec![1, 2, 5],\n        })\n    } else {\n        Err(())\n    }\n}\n\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5d408c00cb3276425bad883d19047e05\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>The type annotations are to show what is expected to be returned at each stage. I expect <code>events</code> to be of type <code>Result&lt;Vec&lt;EventResponse&gt;, &amp;str&gt;</code> but I am getting 2 errors:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0277]: a collection of type `std::vec::Vec&lt;EventResponse&gt;` cannot be built from an iterator over elements of type `std::result::Result&lt;EventResponse, &amp;str&gt;`\n  --&gt; example.rs:27:26\n   |\n27 |                         .collect()\n   |                          ^^^^^^^ a collection of type `std::vec::Vec&lt;EventResponse&gt;` cannot be built from `std::iter::Iterator&lt;Item=std::result::Result&lt;EventResponse, &amp;str&gt;&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;std::result::Result&lt;EventResponse, &amp;str&gt;&gt;` is not implemented for `std::vec::Vec&lt;EventResponse&gt;`\n\nerror[E0277]: a collection of type `std::result::Result&lt;std::vec::Vec&lt;EventResponse&gt;, &amp;str&gt;` cannot be built from an iterator over elements of type `std::vec::Vec&lt;EventResponse&gt;`\n  --&gt; example.rs:30:10\n   |\n30 |         .collect();\n   |          ^^^^^^^ a collection of type `std::result::Result&lt;std::vec::Vec&lt;EventResponse&gt;, &amp;str&gt;` cannot be built from `std::iter::Iterator&lt;Item=std::vec::Vec&lt;EventResponse&gt;&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;std::vec::Vec&lt;EventResponse&gt;&gt;` is not implemented for `std::result::Result&lt;std::vec::Vec&lt;EventResponse&gt;, &amp;str&gt;`\n</code></pre>\n\n<p>EDIT: The <code>get_events_for</code> function <b>cannot be modified</b>, however, the <code>get_event_with_participants</code> function <b>can be modified</b>, if that helps.</p>\n"}, {"tags": ["asynchronous", "types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 145, "user_id": 8110881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L2H3B.jpg?s=128&g=1", "display_name": "Kenneth", "link": "https://stackoverflow.com/users/8110881/kenneth"}, "edited": false, "score": 0, "creation_date": 1570962328, "post_id": 58357166, "comment_id": 103076652, "body": "Thank you very much. I try to use the way of &quot;store the async function it self&quot; but when try to run it, I got some problem.  the run code is <code>for func in v2 { async { func().await }}</code>, the compiler said the Future doesn&#39;t implement <code>Pin</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 145, "user_id": 8110881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L2H3B.jpg?s=128&g=1", "display_name": "Kenneth", "link": "https://stackoverflow.com/users/8110881/kenneth"}, "edited": false, "score": 0, "creation_date": 1570963790, "post_id": 58357166, "comment_id": 103076972, "body": "@Kenneth: Ah, you want to wait for the <code>Futures</code> too? that makes sense. The problem is that <code>.await</code> requires the <code>Unpin</code> marker, but our code does not require it. You might add the <code>+ Unpin</code> to the <code>dyn Future</code> but then you will not be able to fill the vector, because <code>async functions</code> are not <code>Unpin</code>... Let me fix my answer in a minute..."}, {"owner": {"reputation": 145, "user_id": 8110881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L2H3B.jpg?s=128&g=1", "display_name": "Kenneth", "link": "https://stackoverflow.com/users/8110881/kenneth"}, "edited": false, "score": 0, "creation_date": 1570972157, "post_id": 58357166, "comment_id": 103078695, "body": "Thank for the <code>Pin::from()</code> advice. I finally used a <code>async_std::task::block_on()</code> to run the async block, and it works like a charm. But here is another problem, what if the <code>fn haha</code> need a parameter to input? I mean if then function become <code>fn haha(word: &amp;mut String){ println(&quot;haha {}&quot;, word);}</code>, which causing that we cannot push the function into the container because we have to call the function when pushing, and we don&#39;t have the parameter when pushing."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 145, "user_id": 8110881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L2H3B.jpg?s=128&g=1", "display_name": "Kenneth", "link": "https://stackoverflow.com/users/8110881/kenneth"}, "edited": false, "score": 0, "creation_date": 1570972841, "post_id": 58357166, "comment_id": 103078834, "body": "@Kenneth: You can capture the arguments into the lambda, maybe you&#39;ll need to move them: <code>v2.push(Box::new(move || Box::new(haha(xxx))));</code>. If you want to provide the argument when waiting for the future you&#39;ll need to adapt the <code>Fn</code> trait into the <code>Vec</code>. If you want to store Fns with different arguments in the same <code>Vec</code>... well you would need another layer of indirection (another trait, another dynamic dispatch, another <code>Box</code>) but that would be a totally different problem, unrelated to the <code>async</code> part. But beware that using a <code>&amp;mut</code> argument in an async function may be tricky."}, {"owner": {"reputation": 145, "user_id": 8110881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L2H3B.jpg?s=128&g=1", "display_name": "Kenneth", "link": "https://stackoverflow.com/users/8110881/kenneth"}, "edited": false, "score": 0, "creation_date": 1570973520, "post_id": 58357166, "comment_id": 103079002, "body": "Oh, yes, I want to store functions in a vector, and provide different parameters to the functions when get the the functions out and execute them. Sounds like things I want to do with async functions will need lots of wrapping"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 6, "last_activity_date": 1574281678, "last_edit_date": 1574281678, "creation_date": 1570904567, "answer_id": 58357166, "question_id": 58354633, "link": "https://stackoverflow.com/questions/58354633/cannot-use-impl-future-to-store-async-function-in-a-vector/58357166#58357166", "title": "Cannot use `impl Future` to store async function in a vector", "body": "<p>You cannot use the <code>impl Trait</code> this way. To be able to store different types that implement a trait into the same container you have to use dynamic dispatch, by storing something like <code>Box&lt;dyn Trait&gt;</code>.</p>\n\n<p>In your particular case, you do not specify if you want to store the async functions themselves or the future generated by the async functions, the solution would be somewhat different.</p>\n\n<p>To store just the futures, you write a container such as:</p>\n\n<pre><code>let mut v: Vec&lt;Box&lt;dyn Future&lt;Output = ()&gt;&gt;&gt; = vec![];\n</code></pre>\n\n<p>And then just call the function, box it and store it in the container:</p>\n\n<pre><code>v.push(Box::new(haha()));\n</code></pre>\n\n<p>If instead you want to store the async function itself, without calling it, you need a container with a double <code>dyn</code>:</p>\n\n<pre><code>let mut v2: Vec&lt;Box&lt;dyn Fn() -&gt; Box&lt;dyn Future&lt;Output = ()&gt;&gt;&gt;&gt; = vec![];\n</code></pre>\n\n<p>Now, since your <code>haha</code> function does not implement this <code>Fn</code> trait you need an adaptor. A lambda function will do, but don't forget the double <code>Box</code>:</p>\n\n<pre><code>v2.push(Box::new(|| Box::new(haha())));\n</code></pre>\n\n<p>Unfortunately, with these solutions you will be able to create the vector, but not to <code>.await</code> for your futures. For that you need the futures to implement the <code>Unpin</code> marker. That guarantees to the compiler that the future will not move while it is running (if it did, the implementation would be totally unsafe). You could add the <code>+ Unpin</code> requirement to the futures, but <code>async fn</code> are not <code>Unpin</code> so you could not fill the vector. The easiest way to fix it is to use this handy function from <code>std</code>:</p>\n\n<blockquote>\n  <p><code>pub fn into_pin(boxed: Box&lt;T&gt;) -&gt; Pin&lt;Box&lt;T&gt;&gt;</code></p>\n</blockquote>\n\n<pre><code>for f in v2 {\n    f().into_pin().await;\n}\n</code></pre>\n\n<p>Unfortunately, it is still unstable. Fortunately, there is a <code>From</code> impl that does exactly the same. So you can just write:</p>\n\n<pre><code>for f in v2 {\n    Pin::from(f()).await;\n}\n</code></pre>\n\n<p>In your comment below you write this code to wait for the futures:</p>\n\n<pre><code>for f in v2 {\n    async { f().await }\n}\n</code></pre>\n\n<p>Note that an <code>async</code> block itself will evaluate to another future, so here you are just wrapping each future into another future, but nobody is waiting for that one. Actually you'll get a warning about it:</p>\n\n<blockquote>\n  <p>warning: unused implementer of <code>std::future::Future</code> that must be used.</p>\n</blockquote>\n\n<p>Remember that in order to properly wait for all the futures you will need an async runtime.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1601315596, "last_edit_date": 1601315596, "creation_date": 1574282668, "answer_id": 58963082, "question_id": 58354633, "link": "https://stackoverflow.com/questions/58354633/cannot-use-impl-future-to-store-async-function-in-a-vector/58963082#58963082", "title": "Cannot use `impl Future` to store async function in a vector", "body": "<p><a href=\"https://stackoverflow.com/a/58357166/155423\">rodrigo's answer</a> is correct, but I'd prefer to use <code>Box::pin</code> and bake the <code>Pin</code> type into the API of the collection. This makes using the <code>Future</code> trait object (or closure trait object producing a <code>Future</code> trait object) easier:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{future::Future, pin::Pin};\n\ntype PinFutureObj&lt;Output&gt; = Pin&lt;Box&lt;dyn Future&lt;Output = Output&gt;&gt;&gt;;\n\nasync fn collection_of_pinned_future_trait_objects() {\n    let v: Vec&lt;PinFutureObj&lt;()&gt;&gt; = vec![\n        Box::pin(haha()),\n        Box::pin(hehe()),\n        Box::pin(haha()),\n        Box::pin(hehe()),\n    ];\n\n    for f in v {\n        f.await\n    }\n}\n\nasync fn collection_of_closure_trait_objects() {\n    let v: Vec&lt;Box&lt;dyn Fn() -&gt; PinFutureObj&lt;()&gt;&gt;&gt; = vec![\n        Box::new(|| Box::pin(haha())),\n        Box::new(|| Box::pin(hehe())),\n        Box::new(|| Box::pin(haha())),\n        Box::new(|| Box::pin(hehe())),\n    ];\n\n    for f in v {\n        f().await\n    }\n}\n\nasync fn haha() {\n    println!(&quot;haha&quot;);\n}\n\nasync fn hehe() {\n    println!(&quot;hehe&quot;);\n}\n</code></pre>\n<p>I'd also start introducing type aliases for the longer types.</p>\n<p>In fact, this type alias already exists in the futures crate as <a href=\"https://docs.rs/futures/0.3.5/futures/future/type.LocalBoxFuture.html\" rel=\"nofollow noreferrer\"><code>LocalBoxFuture</code></a> and can be created via <a href=\"https://docs.rs/futures/0.3.5/futures/future/trait.FutureExt.html#method.boxed_local\" rel=\"nofollow noreferrer\"><code>FutureExt::boxed_local</code></a>. There's also <a href=\"https://docs.rs/futures/0.3.5/futures/future/type.BoxFuture.html\" rel=\"nofollow noreferrer\"><code>BoxFuture</code></a> produced by <a href=\"https://docs.rs/futures/0.3.5/futures/future/trait.FutureExt.html#method.boxed\" rel=\"nofollow noreferrer\"><code>FutureExt::boxed</code></a> which adds common trait bounds.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::{FutureExt, LocalBoxFuture}; // 0.3.5\n\nasync fn collection_of_pinned_future_trait_objects() {\n    let v: Vec&lt;LocalBoxFuture&lt;'static, ()&gt;&gt; = vec![\n        haha().boxed_local(),\n        hehe().boxed_local(),\n        haha().boxed_local(),\n        hehe().boxed_local(),\n    ];\n\n    for f in v {\n        f.await\n    }\n}\n\nasync fn collection_of_closure_trait_objects() {\n    let v: Vec&lt;Box&lt;dyn Fn() -&gt; LocalBoxFuture&lt;'static, ()&gt;&gt;&gt; = vec![\n        Box::new(|| haha().boxed_local()),\n        Box::new(|| hehe().boxed_local()),\n        Box::new(|| haha().boxed_local()),\n        Box::new(|| hehe().boxed_local()),\n    ];\n\n    for f in v {\n        f().await\n    }\n}\n\nasync fn haha() {\n    println!(&quot;haha&quot;);\n}\n\nasync fn hehe() {\n    println!(&quot;hehe&quot;);\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/58704424/155423\">How can I put an async function into a map in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/52001592/155423\">Why can impl trait not be used to return multiple / conditional types?</a></li>\n</ul>\n"}], "owner": {"reputation": 145, "user_id": 8110881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L2H3B.jpg?s=128&g=1", "display_name": "Kenneth", "link": "https://stackoverflow.com/users/8110881/kenneth"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2558, "favorite_count": 1, "accepted_answer_id": 58357166, "answer_count": 2, "score": 4, "last_activity_date": 1601315596, "creation_date": 1570886765, "last_edit_date": 1574263819, "question_id": 58354633, "link": "https://stackoverflow.com/questions/58354633/cannot-use-impl-future-to-store-async-function-in-a-vector", "title": "Cannot use `impl Future` to store async function in a vector", "body": "<p>I am trying to store <code>async</code> functions in a vector, but it seems like <code>impl</code> cannot be used in the vector type definition:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::future::Future;\n\nfn main() {\n    let mut v: Vec&lt;fn() -&gt; impl Future&lt;Output = ()&gt;&gt; = vec![];\n\n    v.push(haha);\n}\n\nasync fn haha() {\n    println!(\"haha\");\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n --&gt; src/main.rs:4:28\n  |\n4 |     let mut v: Vec&lt;fn() -&gt; impl Future&lt;Output = ()&gt;&gt; = vec![];\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>How do I write the type inside the vector?</p>\n\n<p>I found that there may be a workaround by using a type alias, so I changed the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::future::Future;\n\ntype Haha = impl Future&lt;Output = ()&gt;;\n\nfn main() {\n    let mut v: Vec&lt;fn() -&gt; Haha&gt; = vec![];\n\n    v.push(haha);\n}\n\nasync fn haha() {\n    println!(\"haha\");\n}\n</code></pre>\n\n<p>This doesn't work either; this time the error occurs in the type alias:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0658]: `impl Trait` in type aliases is unstable\n --&gt; src/main.rs:3:1\n  |\n3 | type Haha = impl Future&lt;Output = ()&gt;;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: for more information, see https://github.com/rust-lang/rust/issues/63063\n\nerror[E0308]: mismatched types\n --&gt; src/main.rs:8:12\n  |\n8 |     v.push(haha);\n  |            ^^^^ expected opaque type, found a different opaque type\n  |\n  = note: expected type `fn() -&gt; Haha`\n             found type `fn() -&gt; impl std::future::Future {haha}`\n  = note: distinct uses of `impl Trait` result in different opaque types\n\nerror: could not find defining uses\n --&gt; src/main.rs:3:1\n  |\n3 | type Haha = impl Future&lt;Output = ()&gt;;\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>How do I fix it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "reply_to_user": {"reputation": 1480, "user_id": 8746648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726e6151726f9d185620a833825b61f3?s=128&d=identicon&r=PG", "display_name": "asynts", "link": "https://stackoverflow.com/users/8746648/asynts"}, "edited": false, "score": 0, "creation_date": 1571019976, "post_id": 58352271, "comment_id": 103088818, "body": "@synts   In Windows,if the directory\u2019s been copied, created time of all the files would be changed to same time,but not actually the same time \u2014 ordering with fs::Metadata::created(), you\u2019d got an unordered list."}, {"owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "reply_to_user": {"reputation": 1480, "user_id": 8746648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726e6151726f9d185620a833825b61f3?s=128&d=identicon&r=PG", "display_name": "asynts", "link": "https://stackoverflow.com/users/8746648/asynts"}, "edited": false, "score": 0, "creation_date": 1571021585, "post_id": 58352271, "comment_id": 103089027, "body": "To correct, \u201c in system-ordered ordering\u201d"}, {"owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "reply_to_user": {"reputation": 1480, "user_id": 8746648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726e6151726f9d185620a833825b61f3?s=128&d=identicon&r=PG", "display_name": "asynts", "link": "https://stackoverflow.com/users/8746648/asynts"}, "edited": false, "score": 0, "creation_date": 1571047256, "post_id": 58352271, "comment_id": 103097956, "body": "In Windows,it often renames automatically files as: f, f(1), f(2),f(3)...   \u2014If I delete f(2), it would insert another f(2)\u2014 What a disaster!"}, {"owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "reply_to_user": {"reputation": 1480, "user_id": 8746648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726e6151726f9d185620a833825b61f3?s=128&d=identicon&r=PG", "display_name": "asynts", "link": "https://stackoverflow.com/users/8746648/asynts"}, "edited": false, "score": 0, "creation_date": 1571047794, "post_id": 58352271, "comment_id": 103098204, "body": "So ,at first, I should check for secs, make sure the situation."}], "answers": [{"tags": [], "owner": {"reputation": 78, "user_id": 6430716, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/nDQse.png?s=128&g=1", "display_name": "Outfrost", "link": "https://stackoverflow.com/users/6430716/outfrost"}, "is_accepted": true, "score": 1, "last_activity_date": 1570888718, "creation_date": 1570888718, "answer_id": 58354891, "question_id": 58352271, "link": "https://stackoverflow.com/questions/58352271/how-to-turn-the-file-created-time-into-an-integer/58354891#58354891", "title": "How to turn the file-created-time into an integer?", "body": "<p>Welcome to Stack Overflow!</p>\n\n<p>You can directly compare instances of <code>std::time::SystemTime</code> that you get from <code>std::fs::Metadata::created()</code>, but I assume your use case specifically requires second-precision comparisons. In that case:</p>\n\n<p><code>SystemTime</code> itself does not offer unit conversion methods, but it does offer <code>duration_since()</code> and the constant <code>UNIX_EPOCH</code>. From <a href=\"https://doc.rust-lang.org/std/time/struct.SystemTime.html#associatedconstant.UNIX_EPOCH\" rel=\"nofollow noreferrer\">the documentation</a>:</p>\n\n<blockquote>\n  <pre class=\"lang-rust prettyprint-override\"><code>pub const UNIX_EPOCH: SystemTime\n</code></pre>\n  \n  <p>An anchor in time which can be used to create new <code>SystemTime</code> instances or learn about where in time a <code>SystemTime</code> lies.</p>\n  \n  <p>This constant is defined to be \"1970-01-01 00:00:00 UTC\" on all systems with respect to the system clock.</p>\n</blockquote>\n\n<p>Once you provide this kind of point of reference to <code>duration_since()</code>, and obtain a <code>Duration</code>, you can use <code>Duration</code>'s unit conversion methods to get the integers that you need. Example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a = someFileMetadata.created().expect(\"Creation time unsupported\");\nlet b = someOtherFileMetadata.created().expect(\"Creation time unsupported\");\n\nlet a_secs = a.duration_since(SystemTime::UNIX_EPOCH)\n              .expect(\"File A thinks it was created before Epoch\")\n              .as_secs();\nlet b_secs = b.duration_since(SystemTime::UNIX_EPOCH)\n              .expect(\"File B thinks it was created before Epoch\")\n              .as_secs();\n\nif a_secs &gt; b_secs {\n    println!(\"File A was created later than file B!\");\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 10661272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6f2c60d8183aa580323450d25d70536c?s=128&d=identicon&r=PG&f=1", "display_name": "sheyrl", "link": "https://stackoverflow.com/users/10661272/sheyrl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 1, "accepted_answer_id": 58354891, "answer_count": 1, "score": 1, "last_activity_date": 1571034242, "creation_date": 1570868622, "last_edit_date": 1571034242, "question_id": 58352271, "link": "https://stackoverflow.com/questions/58352271/how-to-turn-the-file-created-time-into-an-integer", "title": "How to turn the file-created-time into an integer?", "body": "<p>With fs::Metadata::created, I can get the created time of the file.</p>\n\n<p>To compare between files in seconds, not milliseconds or whatever, the simple way is to turn the created time into an integer measured in seconds...</p>\n\n<p>But how?  </p>\n"}, {"tags": ["rust", "async-await"], "comments": [{"owner": {"reputation": 1253, "user_id": 103192, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/a0a0bf451db6d1e06be88b4ce3cd72a1?s=128&d=identicon&r=PG", "display_name": "Rawler", "link": "https://stackoverflow.com/users/103192/rawler"}, "edited": false, "score": 0, "creation_date": 1584014034, "post_id": 58351482, "comment_id": 107309031, "body": "I were looking for the same thing, for the use-case of being able to <code>poll()</code> in an async test. (Assert non-readiness). I now found this, that solves at least my own need for the context; <a href=\"https://docs.rs/futures/0.3.4/futures/macro.poll.html\" rel=\"nofollow noreferrer\">docs.rs/futures/0.3.4/futures/macro.poll.html</a>. If this helps your use-case I could turn it into a response to help future people searching."}], "answers": [{"comments": [{"owner": {"reputation": 105, "user_id": 800366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61eea0efe8e63b656460580eaa288af5?s=128&d=identicon&r=PG", "display_name": "tipograf ieromonah", "link": "https://stackoverflow.com/users/800366/tipograf-ieromonah"}, "edited": false, "score": 0, "creation_date": 1611596040, "post_id": 58353120, "comment_id": 116497363, "body": "typo alert! on pull function <code>self.doorbell.read()</code> read() should be ring(), I think"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 105, "user_id": 800366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61eea0efe8e63b656460580eaa288af5?s=128&d=identicon&r=PG", "display_name": "tipograf ieromonah", "link": "https://stackoverflow.com/users/800366/tipograf-ieromonah"}, "edited": false, "score": 0, "creation_date": 1611656265, "post_id": 58353120, "comment_id": 116515016, "body": "@tipografieromonah Incorrect- <code>self.doorbell</code> on <code>FrontDoor</code> is an <code>Arc&lt;RwLock&lt;_&gt;&gt;</code>, so <code>read()</code> is the correct call :-)"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1570875635, "creation_date": 1570875635, "answer_id": 58353120, "question_id": 58351482, "link": "https://stackoverflow.com/questions/58351482/is-there-a-way-to-get-a-reference-to-the-current-tasks-context-in-an-async-func/58353120#58353120", "title": "Is there a way to get a reference to the current task&#39;s context in an async function in rust?", "body": "<p>Before actually answering the question, it is useful to remember what a <code>Context</code> is; whenever you are writing an implementation of a <code>Future</code> that depends on outside resources (say, I/O), you do not want to busy-wait anything. As a result, you'll most likely have implementations of <code>Future</code> where you'll return <code>Pending</code> and then wake it up. <code>Context</code> (and <code>Waker</code>) exist for that purpose.</p>\n\n<p>However, this is what they are: low-level, implementation details. If you are using a <code>Future</code> already as opposed to writing a low-level implementation of one, the <code>Waker</code> will most likely be contained <em>somewhere</em>, but not directly accessible to you.</p>\n\n<p>As a result of this, a <code>Waker</code> directly leaking is an implementation detail leak 99.9% of the time and not actually recommended. A <code>Waker</code> being used as part of a <em>bigger</em> <code>struct</code> is perfectly fine, however, but this is where you'll need to implement your own <code>Future</code> from scratch. <strong>There is no other valid use case for this</strong>, and in normal terms, you should never need direct access to a <code>Waker</code>.</p>\n\n<p>Due to the limitations of the playground, I sadly cannot show you a live example of when it is useful to get this <code>Waker</code>; however, such a future setup may be used in such a situation: let's assume we're building the front door of a house. We have a doorbell and a door, and we want to be notified when somebody rings the doorbell. However, we don't want to have to wait at the door for visitors.</p>\n\n<p>We therefore make two objects: a <code>FrontDoor</code> and a <code>Doorbell</code>, and we give the option to <code>wire()</code> the <code>Doorbell</code> to connect the two.</p>\n\n<pre><code>pub struct FrontDoor {\n    doorbell: Arc&lt;RwLock&lt;Doorbell&gt;&gt;\n}\n\nimpl FrontDoor {\n    pub fn new() -&gt; FrontDoor {\n        FrontDoor {\n            doorbell: Arc::new(RwLock::new(Doorbell {\n                waker: None,\n                visitor: false\n            }))\n        }\n    }\n    pub fn wire(&amp;self) -&gt; Arc&lt;RwLock&lt;Doorbell&gt;&gt; {\n        self.doorbell.clone() // We retrieve the bell\n    }\n}\n\nimpl Future for FrontDoor {\n\n    type Output = ();\n\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context) -&gt; Poll&lt;Self::Output&gt; {\n        self.doorbell.read().map(|guard| {\n            match guard.visitor {\n                true =&gt; Poll::Ready(()),\n                false =&gt; Poll::Pending\n            }\n        }).unwrap_or(Poll::Pending)\n    }\n}\n\n\npub struct Doorbell {\n    waker: Option&lt;Waker&gt;,\n    pub visitor: bool\n}\n\nimpl Doorbell {\n    pub fn ring(&amp;mut self) {\n        self.visitor = true;\n        self.waker.as_ref().map(|waker| waker.wake_by_ref());\n    }\n}\n</code></pre>\n\n<p>Our <code>FrontDoor</code> implements <code>Future</code>, which means we can just throw it on an executor of your choice; <code>waker</code> is contained in the <code>Doorbell</code> object and allows us to \"ring\" and wake up our future.</p>\n"}], "owner": {"reputation": 5869, "user_id": 2543666, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/4e7c6887ce958029525412ab297b5895?s=128&d=identicon&r=PG", "display_name": "Thayne", "link": "https://stackoverflow.com/users/2543666/thayne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 413, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1570875635, "creation_date": 1570861595, "question_id": 58351482, "link": "https://stackoverflow.com/questions/58351482/is-there-a-way-to-get-a-reference-to-the-current-tasks-context-in-an-async-func", "title": "Is there a way to get a reference to the current task&#39;s context in an async function in rust?", "body": "<p>In a rust async function is there any way to get access to the current <a href=\"https://doc.rust-lang.org/std/task/struct.Context.html\" rel=\"nofollow noreferrer\">Context</a> without writing an explicit implementation of a <code>Future</code>?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 26, "user_id": 12305278, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-kYk7s-i9EZQ/AAAAAAAAAAI/AAAAAAAAADQ/S5bWpojKeXc/photo.jpg?sz=128", "display_name": "s810", "link": "https://stackoverflow.com/users/12305278/s810"}, "is_accepted": true, "score": 1, "last_activity_date": 1572555534, "creation_date": 1572555534, "answer_id": 58651086, "question_id": 58351423, "link": "https://stackoverflow.com/questions/58351423/cannot-return-reference-to-temporary-value-in-a-flat-map/58651086#58651086", "title": "Cannot return reference to temporary value in a flat_map", "body": "<p>Returning a reference to an item outside of the function that it is created in directly violates Rust's ownership feature - <a href=\"https://doc.rust-lang.org/nomicon/ownership.html\" rel=\"nofollow noreferrer\">see here</a>. </p>\n\n<p>When wanting to return data within a slice, use a Vec.</p>\n\n<p>Solution below:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cc76fd3f1bc0aef7b7c2a60a35d40cc6\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cc76fd3f1bc0aef7b7c2a60a35d40cc6</a></p>\n"}], "owner": {"reputation": 33, "user_id": 12204563, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mD98d2HyNe6-n1ApYHkv9qai0CiM5URynqBeGMP=k-s128", "display_name": "\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041a\u043e\u043c\u0438\u0441\u0441\u0430\u0440\u043e\u0432", "link": "https://stackoverflow.com/users/12204563/%d0%90%d0%bb%d0%b5%d0%ba%d1%81%d0%b0%d0%bd%d0%b4%d1%80-%d0%9a%d0%be%d0%bc%d0%b8%d1%81%d1%81%d0%b0%d1%80%d0%be%d0%b2"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 428, "favorite_count": 0, "accepted_answer_id": 58651086, "answer_count": 1, "score": 3, "last_activity_date": 1572555534, "creation_date": 1570861127, "last_edit_date": 1570885963, "question_id": 58351423, "link": "https://stackoverflow.com/questions/58351423/cannot-return-reference-to-temporary-value-in-a-flat-map", "title": "Cannot return reference to temporary value in a flat_map", "body": "<p>With the following simplified/abstracted version of my problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let arr = vec![1., 2., 3., 4., 5., 6., 7., 8., 9.];\n    let size = arr.len();\n\n    let wave = |res: &amp;Vec&lt;f64&gt;, step| {\n        let size = res.len();\n        let factor = size / (2 * step);\n        res.chunks_exact(2)\n            .collect::&lt;Vec&lt;_&gt;&gt;()\n            .chunks_exact(factor)\n            .flat_map(|arr| {\n                arr.into_iter().flat_map(|x| {\n                    &amp;[(x[0] + x[1]), (x[0] - x[1])]\n                })\n            })\n            .cloned()\n            .collect::&lt;Vec&lt;_&gt;&gt;()\n    };\n\n    println!(\"{:?}\", &amp;arr);\n\n    let mut res = arr.clone();\n    for step in 1..size / 2 {\n        res = wave(&amp;res, step);\n        println!(\"{:?}\", &amp;res);\n    }\n}\n</code></pre>\n\n<p>Got error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0515]: cannot return reference to temporary value\n  --&gt; src/main.rs:34:21\n   |\n34 |                     &amp;[(x[0] + x[1]), (x[0] - x[1])]\n   |                     ^------------------------------\n   |                     ||\n   |                     |temporary value created here\n   |                     returns a reference to data owned by the current function\n</code></pre>\n\n<p>If remove <code>.cloned()</code> method, but appears next problem:</p>\n\n<p>mismatched types:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:23:15\n   |\n23 |         res = wave(&amp;res, step);\n   |               ^^^^^^^^^^^^^^^^ expected f64, found &amp;f64\n   |\n   = note: expected type `std::vec::Vec&lt;f64&gt;`\n              found type `std::vec::Vec&lt;&amp;f64&gt;`\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 421, "user_id": 3584499, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh3.googleusercontent.com/-eQCrRr6bG6g/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcpOfMMpn9zx6gIRNLLA0CvzC_-gA/photo.jpg?sz=128", "display_name": "12412316", "link": "https://stackoverflow.com/users/3584499/12412316"}, "edited": false, "score": 0, "creation_date": 1571481513, "post_id": 58353200, "comment_id": 103261262, "body": "The error message is telling <code>a</code> is borrowing <code>set</code>. But <code>Option&lt;&amp;T&gt;</code> doesn&#39;t seem to borrow <code>set</code> itself. The type signature of <code>take</code> differs just in <code>&amp;mut self</code>."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 421, "user_id": 3584499, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh3.googleusercontent.com/-eQCrRr6bG6g/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcpOfMMpn9zx6gIRNLLA0CvzC_-gA/photo.jpg?sz=128", "display_name": "12412316", "link": "https://stackoverflow.com/users/3584499/12412316"}, "edited": false, "score": 0, "creation_date": 1571507563, "post_id": 58353200, "comment_id": 103267559, "body": "@user3584499 Rust&#39;s ownership/borrowing system is not tuned to discern individual elements of a set; as such, when you acquire a reference to a member of a set, you also acquire indirectly the same type of reference to the set itself. When you think about it, it is pretty logical, as well; and it allows anybody needing more fine-tuned constraints to implement it themselves via interior mutability"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 0, "last_activity_date": 1570876278, "creation_date": 1570876278, "answer_id": 58353200, "question_id": 58351150, "link": "https://stackoverflow.com/questions/58351150/immutable-borrow-occurs-when-get-from-hashset/58353200#58353200", "title": "immutable borrow occurs when get from HashSet", "body": "<p>The important part of <code>get</code> is the following: <code>-&gt; Option&lt;&amp;T&gt;</code>.</p>\n\n<p>Contrary to what you seem to be believing, this method gives you a <strong>reference</strong>, not the actual object (and doing so also establishes an immutable borrow on the item). As a result, when you then <code>remove()</code> said object (and get a mutable borrow over the collection), the reference is evidently immediately invalidated, and as a result, it is impossible for you to <code>unwrap()</code> it.</p>\n\n<p>You may be looking to <code>take()</code> the set element instead of <code>get()</code>. This will return the object and remove the item from the set, instead of returning a reference; it also means that you will no longer need the call to <code>remove()</code> either (<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=939455e660b053e90f31d9952c9a6977\" rel=\"nofollow noreferrer\"><strong>playground</strong></a>):</p>\n\n<pre><code>let mut set = HashSet::&lt;u32&gt;::new();\nset.insert(1);\nlet a = set.take(&amp;1).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 421, "user_id": 3584499, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh3.googleusercontent.com/-eQCrRr6bG6g/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcpOfMMpn9zx6gIRNLLA0CvzC_-gA/photo.jpg?sz=128", "display_name": "12412316", "link": "https://stackoverflow.com/users/3584499/12412316"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1570876278, "creation_date": 1570858100, "question_id": 58351150, "link": "https://stackoverflow.com/questions/58351150/immutable-borrow-occurs-when-get-from-hashset", "title": "immutable borrow occurs when get from HashSet", "body": "<pre class=\"lang-rust prettyprint-override\"><code>let mut set = HashSet::&lt;u32&gt;::new();\n\nlet a = set.get(&amp;1);\nset.remove(&amp;1);\na.unwrap(); // cannot borrow `set` as mutable because it is also borrowed as immutable\n</code></pre>\n\n<p>Here is my code. I see what the error means and why rust prevent me doing it.\nBut I can't find any type annotation in <code>set.rs</code> to make that error happen.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code> pub fn get&lt;Q: ?Sized&gt;(&amp;self, value: &amp;Q) -&gt; Option&lt;&amp;T&gt;\n        where T: Borrow&lt;Q&gt;,\n              Q: Hash + Eq\n</code></pre>\n\n<p>This is the declaration of <code>set.get</code> but I can't see anything relevant.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570856810, "post_id": 58350593, "comment_id": 103056404, "body": "It might be helpful to include a complete example with main in Rust playground (<a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">play.rust-lang.org</a>).  I started to take a look and noticed that you are mising <code>&amp;</code> before self in your method signature.  see: <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch05-03-method-syntax.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.30.0/book/2018-edition/&hellip;</a>"}, {"owner": {"reputation": 21, "user_id": 7170627, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-njkHJPV_wPo/AAAAAAAAAAI/AAAAAAAAABY/V-deBeTCsII/photo.jpg?sz=128", "display_name": "Icatream", "link": "https://stackoverflow.com/users/7170627/icatream"}, "reply_to_user": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570859051, "post_id": 58350593, "comment_id": 103056726, "body": "@Ultrasaurus I&#39;ve add the playground link. <code>&amp;</code>, i suppose this function would change the Node itself. And i don&#39;t know how to change self reference into the new node, so i used <code>self</code>. If someone can modify this, that helps too."}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570981903, "post_id": 58350593, "comment_id": 103080916, "body": "Unrelated to your error, I don&#39;t see how your program creates a linked list... see playground example with just &quot;new&quot; <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fd945b1e846217ac7d5acf2d0b45b9f1\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570981971, "post_id": 58350593, "comment_id": 103080944, "body": "I found this unofficial rust learning resource that has a lot of linked list examples that might be helpful: <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">rust-unofficial.github.io/too-many-lists</a>"}, {"owner": {"reputation": 21, "user_id": 7170627, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-njkHJPV_wPo/AAAAAAAAAAI/AAAAAAAAABY/V-deBeTCsII/photo.jpg?sz=128", "display_name": "Icatream", "link": "https://stackoverflow.com/users/7170627/icatream"}, "reply_to_user": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1571020241, "post_id": 58350593, "comment_id": 103088850, "body": "@Ultrasaurus The struct Node was from something else. Just <code>Node::new(1234)</code>, this will create a linked list, 4-&gt;3-&gt;2-&gt;1-&gt;None. <code>Node::new(1)</code> will create 1-&gt;None. I&#39;ll look at the learning resource, thanks."}], "answers": [{"tags": [], "owner": {"reputation": 21, "user_id": 7170627, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-njkHJPV_wPo/AAAAAAAAAAI/AAAAAAAAABY/V-deBeTCsII/photo.jpg?sz=128", "display_name": "Icatream", "link": "https://stackoverflow.com/users/7170627/icatream"}, "is_accepted": true, "score": 0, "last_activity_date": 1573022539, "last_edit_date": 1573022539, "creation_date": 1573021359, "answer_id": 58724194, "question_id": 58350593, "link": "https://stackoverflow.com/questions/58350593/mutable-borrow-in-rust/58724194#58724194", "title": "Mutable borrow in Rust", "body": "<p>@Ultrasaurus thanks for the learning resource <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">https://rust-unofficial.github.io/too-many-lists/</a>. Now i solve the problem, although it takes several time. </p>\n\n<p>The final code is here <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bd538fa094dfde6799798dd6696aa0cb\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>There is a little bit weird, that my <code>LinkedNumber.head</code> is <code>Node</code>, cause the <code>LinkedNumber</code> always has a head, might be zero, but not null. Maybe it should be <code>Box&lt;Node&gt;</code>.</p>\n\n<p>At line 71, i use <code>ptr::read</code>, it will</p>\n\n<blockquote>\n  <p>Reads the value from <code>src</code> without moving it.</p>\n</blockquote>\n\n<p><code>mem::take</code> is ok, either. But it needs to initial <code>Node</code> with a default value by <code>trait Default</code>.</p>\n\n<p>Than i use <code>Box::new</code> to move the node from stack into heap. (There's no necessary to do this, if <code>LinkedNumber.head</code> is <code>Box&lt;Node&gt;</code>)</p>\n\n<p>At line 73, mark the raw_pointer <code>*const Node</code> of the head.</p>\n\n<p>At line 94, if the link was break into two, cast <code>*const Node</code> into <code>*mut Node</code>, dereference it, set <code>(*ptr).next</code> with the last node of the original link.</p>\n\n<p>How to test: change the number in <code>num.reverse_at(3)</code> at line 171, it works fine.</p>\n"}], "owner": {"reputation": 21, "user_id": 7170627, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-njkHJPV_wPo/AAAAAAAAAAI/AAAAAAAAABY/V-deBeTCsII/photo.jpg?sz=128", "display_name": "Icatream", "link": "https://stackoverflow.com/users/7170627/icatream"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 58724194, "answer_count": 1, "score": 0, "last_activity_date": 1573022539, "creation_date": 1570850934, "last_edit_date": 1571019751, "question_id": 58350593, "link": "https://stackoverflow.com/questions/58350593/mutable-borrow-in-rust", "title": "Mutable borrow in Rust", "body": "<p>I'm new on Rust, i'm just doing some exercise.\nThere is a linked list. For example, <strong>0->1->2->3->4</strong>, cut it off at index 2, then reverse both, and then compose them. => <strong>0&lt;-1&lt;-2</strong> <strong>3&lt;-4</strong> =>  <strong>2->1->0->4->3</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(debug)]\nstruct Node{\n    val: usize,\n    next: Option&lt;Box&lt;Node&gt;&gt;,\n}\n\nimpl Node {\n    fn new(i: usize) -&gt; Node {\n    ...\n    }\n\n    fn reverse_at(self, k: usize) -&gt; Box&lt;Node&gt; {\n        let mut prev = None;\n        let mut curr = Box::new(self);\n\n        let first_part_tail = &amp;mut curr;\n\n        let mut i: usize = 0;\n        while i &lt;= k {\n            let next = curr.next.take();\n            curr.next = prev;\n            match next {\n                Some(next_node) =&gt; {\n                    prev = Some(curr);\n                    curr = next_node;\n                }\n                None =&gt; return curr,\n            }\n            i += 1;\n        }\n\n        let head = prev.unwrap();\n        prev = None;\n        loop {\n            let next = curr.next.take();\n            curr.next = prev;\n            match next {\n                Some(next_node) =&gt; {\n                    prev = Some(curr);\n                    curr = next_node;\n                }\n                None =&gt; {\n                    first_part_tail.next = Some(curr);\n                    return head;\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I need to get the mutable borrow of the first node<strong>0</strong>, and set <strong>0</strong>.next=<strong>4</strong> after getting the last node<strong>4</strong> at the end of function. But node<strong>0</strong>'s ownership is already been send to node<strong>1</strong>.\nObviously, <code>error[E0499]: cannot borrow `curr.next` as mutable more than once at a time</code> happens, i don't know what to do. This stuck me for a long time. Any help please.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=68521e3214b020258f81b8bc4a8d15d0\" rel=\"nofollow noreferrer\">play.rust-lang.org/...</a></p>\n\n<p><code>&amp;</code>, i suppose this function would change the Node itself. And i don't know how to change self reference into the new node, so i used <code>self</code>. If someone can modify this, that helps too.\nMaybe, change this function to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn reverse_at(&amp;mut self, k:usize){\n    ...\n}\n</code></pre>\n"}, {"tags": ["rust", "ipc", "unix-socket"], "answers": [{"tags": [], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "is_accepted": false, "score": 1, "last_activity_date": 1570857698, "last_edit_date": 1570857698, "creation_date": 1570857145, "answer_id": 58351067, "question_id": 58350422, "link": "https://stackoverflow.com/questions/58350422/unistdread-always-returns-0/58351067#58351067", "title": "unistd::read() always returns 0", "body": "<p>At appears that sending that <code>buf</code> won't work due to how String works. To fix this you need to pass <code>&amp;mut[u8]</code> to the read function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>Ok(msgsock) =&gt; loop {\n                //let mut buf = [0u8; MESSAGE_CAPACITY];\n                let mut buf = [0u8; MESSAGE_CAPACITY];\n                    let rval = read(msgsock, &amp;mut buf[..])?;\n                    if rval == 0 {\n                        println!(\"Ending connection\");\n                        break;\n                    } else {\n                        println!(\"Message recived, emulating heavy task.\");\n                        // TODO ignore all the incoming messages \n                        heavy_task(std::str::from_utf8(&amp;buf)?);\n                        // TODO re-enable accepting new messages\n                    }\n}\n</code></pre>\n"}], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1570857698, "creation_date": 1570848457, "question_id": 58350422, "link": "https://stackoverflow.com/questions/58350422/unistdread-always-returns-0", "title": "unistd::read() always returns 0", "body": "<p>I want to implement a server/client program with unix domain socket. The program \n1. on startup, creates a socket and a unix address in the abstract namespace\n2. tries to bind the socket to the address, if the binding fails and returns <code>EADDRINUSE</code>, it creates a client, otherwise, if the binding is successful, creates a server. The server keeps running in the background forever.\n3. establishes a UDS IPC.</p>\n\n<p>However in my <code>server</code> function, the result of <a href=\"https://docs.rs/nix/0.15.0/nix/unistd/fn.read.html\" rel=\"nofollow noreferrer\">read()</a> always seems to return 0; thus not retrieving any message at all.</p>\n\n<p>Execution:\nTerminal A:</p>\n\n<pre><code>$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\n     Running `target/debug/testrs`\nPrimary instance detected, launching server.\nListening...\nEnding connection\nEnding connection\nEnding connection\n^C\n</code></pre>\n\n<p>Terminal B: (After the run command)</p>\n\n<pre><code>$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\n     Running `target/debug/testrs`\nSecondary instance detected, launching client.\nMessage sent.\nExiting...\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\n     Running `target/debug/testrs`\nSecondary instance detected, launching client.\nMessage sent.\nExiting...\n$ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.01s\n     Running `target/debug/testrs`\nSecondary instance detected, launching client.\nMessage sent.\nExiting...\n</code></pre>\n\n<p>Misc:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Reference implementation: http://osr507doc.sco.com/en/netguide/dusockT.code_samples.html\nuse {\n    nix::{\n        errno::Errno::EADDRINUSE,\n        sys::socket::{\n            accept, bind, connect, listen, socket, AddressFamily, SockAddr, SockFlag, SockType,\n            UnixAddr,\n        },\n        unistd::{close, read, write},\n        Error::Sys,\n    },\n    std::{error::Error, os::unix::io::RawFd},\n};\n\nmacro_rules! Expected {\n    () =&gt; {\n        Result&lt;(), Box&lt;dyn Error&gt;&gt;\n    };\n    // ($t:ty) =&gt; {\n    //     Result&lt;$t, Box&lt;dyn Error&gt;&gt;\n    // }\n}\n\nstatic SOCK_ADDR: &amp;'static str = \"com.localserver.myapp.sock\";\nconst MESSAGE_CAPACITY: usize = 64; // can't create static size array\n\nfn heavy_task(arg: &amp;str) {\n    println!(\"Received message: {}\", arg);\n    std::thread::sleep(std::time::Duration::from_secs(5));\n}\n</code></pre>\n\n<p>Server:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn server(sock: RawFd) -&gt; Expected!() {\n    listen(sock, 0)?;\n    println!(\"Listening...\");\n    loop {\n        match accept(sock) {\n            Ok(msgsock) =&gt; loop {\n                //let mut buf = [0u8; MESSAGE_CAPACITY];\n                let mut buf = String::with_capacity(MESSAGE_CAPACITY);\n                unsafe {\n                    let rval = read(msgsock, buf.as_bytes_mut())?;\n                    if rval == 0 {\n                        println!(\"Ending connection\");\n                        break;\n                    } else {\n                        println!(\"Message recived, emulating heavy task.\");\n                        // TODO ignore all the incoming messages \n                        heavy_task(&amp;buf);\n                        // TODO re-enable accepting new messages\n                    }\n                }\n                close(msgsock)?;\n            },\n            // EBADF here\n            Err(e) =&gt; {\n                close(sock)?;\n                panic!(\"Error accepting socket {:?}\", e)\n            }\n        }\n    }\n    // Ok(()) // unreachable\n}\n</code></pre>\n\n<p>Client:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn client(sock: RawFd, addr: &amp;SockAddr) -&gt; Expected!() {\n    match connect(sock, addr) {\n        Ok(_) =&gt; {\n            let mut buf = String::from(\"Message from client\");\n            unsafe {\n                write(sock, buf.as_bytes_mut())?;\n            }\n            close(sock)?;\n            Ok(())\n        }\n        Err(e) =&gt; {\n            close(sock)?;\n            panic!(\"Error connecting to socket: {}\", e);\n        }\n    }\n}\n</code></pre>\n\n<p>Main:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() -&gt; Expected!() {\n    let sock: RawFd = socket(\n        AddressFamily::Unix,\n        SockType::Stream,\n        SockFlag::empty(),\n        None, // Protocol\n    )?;\n\n    let addr = SockAddr::Unix(UnixAddr::new_abstract(SOCK_ADDR.as_bytes())?);\n\n    // Unlink before bind\n    // However Abstract domain sockets (which we are using) are automatically\n    // cleaned up by the kernel so no need to unlink\n\n    match bind(sock, &amp;addr) {\n        Err(e) =&gt; match e {\n            Sys(EADDRINUSE) =&gt; {\n                println!(\"Secondary instance detected, launching client.\");\n                match client(sock, &amp;addr) {\n                    Ok(_) =&gt; println!(\"Message sent.\"),\n                    Err(_) =&gt; println!(\"Message sending failed.\"),\n                }\n                println!(\"Exiting...\");\n            }\n            _ =&gt; {\n                panic!(\"Socket binding failed due to: {:?}\", e);\n            }\n        },\n        Ok(_) =&gt; {\n            println!(\"Primary instance detected, launching server.\");\n            server(sock)?;\n        }\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>I've tried <em>not</em> closing connection here in the server:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if rval == 0 {\n    // println!(\"Ending connection\");\n    // break;\n} \n</code></pre>\n\n<p>In which case the server fails saying <code>EBADF</code> \nHow can I read these messages from client?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 6119, "user_id": 878182, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/fe9bb29f576661916e29a8d327493d6b?s=128&d=identicon&r=PG", "display_name": "Alistair A. Israel", "link": "https://stackoverflow.com/users/878182/alistair-a-israel"}, "is_accepted": true, "score": 3, "last_activity_date": 1570844359, "creation_date": 1570844359, "answer_id": 58350142, "question_id": 58350023, "link": "https://stackoverflow.com/questions/58350023/impl-requires-a-base-type-for-array-like-type-in-rust/58350142#58350142", "title": "&quot;impl requires a base type&quot; for array-like type in Rust", "body": "<p>Your line</p>\n\n<pre><code>type Vec3 = [f64; 3];\n</code></pre>\n\n<p>doesn't really declare a new type, it merely declares a <a href=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html#creating-type-synonyms-with-type-aliases\" rel=\"nofollow noreferrer\">type alias</a> called <code>Vec3</code> for an array <code>[f64; 3]</code>.</p>\n\n<p>When we run <code>rustc --explain E0118</code>, the Rust compiler helpfully describes it for us:</p>\n\n<pre><code>You're trying to write an inherent implementation for something which isn't a\nstruct nor an enum.\n</code></pre>\n\n<p>So, you can only use <code>impl</code> for a <code>struct</code> or an <code>enum</code>. A quick fix in your case is to declare <code>Vec3</code> as a <a href=\"https://doc.rust-lang.org/book/ch05-01-defining-structs.html#using-tuple-structs-without-named-fields-to-create-different-types\" rel=\"nofollow noreferrer\">tuple Struct</a>:</p>\n\n<pre><code>struct Vec3([f64; 3]);\n</code></pre>\n\n<p>But then that means rewriting your <code>display</code> method somewhat. For clarity, we'll destructure to a local variable:</p>\n\n<pre><code>    let Self(vec) = self;\n    println!(\"x = {}, y = {}, z = {}\", vec[0], vec[1], vec[2]);\n</code></pre>\n\n<p>You can see a working example on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=43122f5fdbd157b9925a5fd2f660c329\" rel=\"nofollow noreferrer\">Playground (43122f5fdbd157b9925a5fd2f660c329)</a>.</p>\n"}], "owner": {"reputation": 5341, "user_id": 3467698, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/9ae079231f5aec46808b1c7853833e72?s=128&d=identicon&r=PG", "display_name": "Fomalhaut", "link": "https://stackoverflow.com/users/3467698/fomalhaut"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 58350142, "answer_count": 1, "score": 0, "last_activity_date": 1570844359, "creation_date": 1570842505, "question_id": 58350023, "link": "https://stackoverflow.com/questions/58350023/impl-requires-a-base-type-for-array-like-type-in-rust", "title": "&quot;impl requires a base type&quot; for array-like type in Rust", "body": "<p>I defined a type as an array with fixed size and I try to implement some custom methods for it.</p>\n\n<pre><code>type Vec3 = [f64; 3];\n\nimpl Vec3 {\n    fn display(&amp;self) {\n        println!(\"x = {}, y = {}, z = {}\", self[0], self[1], self[2]);\n    }\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre><code>error[E0118]: no base type found for inherent implementation\n --&gt; src/main.rs:7:6\n  |\n7 | impl Vec3 {\n  |      ^^^^ impl requires a base type\n  |\n  = note: either implement a trait on it or create a newtype to wrap it instead\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>What is the nature of this error and how do I fix my code?</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570836608, "post_id": 58349489, "comment_id": 103053999, "body": "Are you actually certain that you need <code>&amp;&#39;static CStr</code>, particularly the <code>&#39;static</code> part? Where does that exotic requirement come from?"}, {"owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570837569, "post_id": 58349489, "comment_id": 103054179, "body": "I don&#39;t need it to be static, but what I&#39;m looking for is a <code>&amp;CStr</code> which references memory stored in the binary, like a <code>&amp;str</code> litteral does. It just seems like it should be possible."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570838007, "post_id": 58349489, "comment_id": 103054248, "body": "That <i>massively</i> changes the question. I&#39;m going to keep the original answer for posterity, as it <i>is</i> possible, and I&#39;ll give you the non-<code>&#39;static</code> version."}], "answers": [{"comments": [{"owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "edited": false, "score": 0, "creation_date": 1570890345, "post_id": 58349592, "comment_id": 103063597, "body": "I&#39;m sorry, I was a little unclear with my earlier comment. <code>const</code> is the hard constraint, and it was my understanding that all <code>const</code> references must be <code>&#39;static</code>. But if that&#39;s not the case, <code>&#39;static</code> is not a constraint."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 2, "last_activity_date": 1570838357, "last_edit_date": 1570838357, "creation_date": 1570837086, "answer_id": 58349592, "question_id": 58349489, "link": "https://stackoverflow.com/questions/58349489/const-static-cstr/58349592#58349592", "title": "Const &amp;&#39;static CStr", "body": "<p>A <code>CStr</code> is a <a href=\"https://doc.rust-lang.org/std/ffi/struct.CStr.html\" rel=\"nofollow noreferrer\"><em>borrowed type</em></a> and, as such, isn't made \"on its own\". Below the hood, it isn't much more than a reference to a <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"nofollow noreferrer\"><code>CString</code></a>, and can be created from either:</p>\n\n<ul>\n<li>Borrowing a <code>CString</code> (obvious). The original (source) <code>CString</code> must not be dropped and the lifetime of <code>CStr</code> is only valid for as long as the source exists</li>\n<li>From a slice of bytes, via <a href=\"https://doc.rust-lang.org/std/ffi/struct.CStr.html#method.from_bytes_with_nul\" rel=\"nofollow noreferrer\"><code>CStr::from_bytes_with_nul</code></a>. The <code>CStr</code> is only valid for as long as the original slice (which itself is only valid for as long as the source data allocated <em>somewhere</em>)</li>\n</ul>\n\n<p>Creating a <code>CStr</code> through a <code>CString</code> is straightforward:</p>\n\n<pre><code>let cstring:CString = CString::new(\"foobar\".as_bytes()).unwrap();\nlet cstr:&amp;CStr = cstring.as_c_str();\nprintln!(\"{:?}\", cstr);\n</code></pre>\n\n<p>Converting an existing slice is also straightforward:</p>\n\n<pre><code>let cstr2:&amp;CStr = CStr::from_bytes_with_nul(\"foobar\\0\".as_bytes()).unwrap();\nprintln!(\"{:?}\", cstr2);\n</code></pre>\n\n<p>Do note that the lifetime of these will evidently, again, depend on the lifetime of whatever you used to create the <code>&amp;CStr</code> - as indicated by the lifetime parameter on its declaration</p>\n\n<hr>\n\n<p><strong>Kept for posterity</strong>: <code>'static</code> was not a hard requirement</p>\n\n<p>To create a <code>const &amp;'static CStr</code>, you're going to struggle, and you're going to need an external crate for a specific macro (<code>lazy_static</code>), but it is doable, like so:</p>\n\n<pre><code>#[macro_use] extern crate lazy_static;\nuse std::ffi::CStr;\n\nlazy_static! {\n    static ref FOO:&amp;'static CStr = unsafe {\n        CStr::from_bytes_with_nul_unchecked(\"foobar\\0\".as_bytes())\n    };\n}\n\nfn test(input: &amp;'static CStr) {\n    println!(\"{:?}\", FOO.to_str());\n}\n\nfn main() {\n    test(&amp;FOO);\n}\n</code></pre>\n\n<p>The point of <code>lazy_static</code> is to allow function calls when defining static references; we can leverage this to construct our <code>CStr</code> on-the-fly, and since it is a static reference, borrowing it is valid for up to and including <code>'static</code>. Mission accomplished.</p>\n"}, {"tags": [], "owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "is_accepted": false, "score": 2, "last_activity_date": 1570909079, "creation_date": 1570909079, "answer_id": 58357806, "question_id": 58349489, "link": "https://stackoverflow.com/questions/58349489/const-static-cstr/58357806#58357806", "title": "Const &amp;&#39;static CStr", "body": "<p>There is a crate for this, <a href=\"https://docs.rs/byte-strings/0.1.3\" rel=\"nofollow noreferrer\">byte_strings</a>. To summarize the crate, the basic idea is to use a union with a <code>&amp;'static [u8]</code> (or <code>&amp;'static str</code>) member and a <code>&amp;'static CStr</code> member:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>union transmute {\n    src: &amp;'static [u8],\n    dst: &amp;'static ::std::ffi::CStr,\n}\n</code></pre>\n\n<p>Since constructing unions is <code>const</code> and accessing a <code>const</code> union's field is also <code>const</code>, reading <code>dst</code> is effectively a <code>const</code> mem::transmute. Since <code>CStr</code> is currently just a wrapper for a <code>[c_char]</code>, a <code>&amp;[u8]</code> can be safely trunsmuted to <code>&amp;CStr</code>, however, in the future, the representation of <code>CStr</code>s will likely change. You can do a sanity check that <code>&amp;CStr</code> is the same size as <code>&amp;[u8]</code> by using a little hack with the lengths of zero-size arrays:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const transmute_is_sound_guard: [(); std::mem::size_of::&lt;&amp;'static [u8]&gt;()]\n    = [(); std::mem::size_of::&lt;&amp;'static ::std::ffi::CStr&gt;()];\n</code></pre>\n\n<p>If they don't have the same size, Rust's type checker will complain. <strong>Bringing it all together, you can create a macro to make a <code>const &amp;'static CStr</code></strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ffi::CStr;\nuse std::mem::size_of;\n\nmacro_rules! unsafe_cstr {\n    ($e: expr) =&gt; {{\n        union Transmute {\n            src: &amp;'static str,\n            dst: &amp;'static CStr,\n        }\n\n        const _TRANSMUTE_CHECK: [(); size_of::&lt;&amp;'static str&gt;()]\n            = [(); size_of::&lt;&amp;'static CStr&gt;()];\n\n        const RES: &amp;'static CStr = unsafe {\n            (Transmute { src: concat!($e, \"\\0\") }).dst\n        };\n\n        RES\n    }}                                                                           \n}\n\nfn main() {\n    const C: &amp;'static CStr = unsafe_cstr!(\"Hello, World!\");\n    println!(\"{:?}\", C)\n}\n</code></pre>\n\n<p>Unfortunately, this macro still isn't safe, because it doesn't check for null bytes within the <code>&amp;str</code> slice, which can only be done with a procedural macro. The byte_strings crate <a href=\"https://docs.rs/byte-strings-proc-macro/0.1.1/src/byte_strings_proc_macro/identity_non_null.rs.html#18-50\" rel=\"nofollow noreferrer\">contains such a macro</a>, as well as macros for concatenating byte string literals and other convenience macros.</p>\n"}, {"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 4, "last_activity_date": 1598493904, "creation_date": 1598493904, "answer_id": 63608103, "question_id": 58349489, "link": "https://stackoverflow.com/questions/58349489/const-static-cstr/63608103#63608103", "title": "Const &amp;&#39;static CStr", "body": "<p>As of Rust 1.46.0 (current beta toolchain at time of writing) this is possible, now that <code>std::mem::transmute</code> is stable as a <code>const fn</code>. You can also use <code>const fn</code>s to check that the contents of the string are valid (i.e. no null bytes), since you can use basic conditional expressions and loops as well. Panicking via <code>panic!</code> isn't yet possible in constant contexts, but you can use implicitly panicking code (e.g. <code>[][0]</code>) to raise an error at compile time. All told, here's a fully functional example that uses nothing but <code>const fn</code>s and declarative macros to allow creating <code>&amp;'static CStr</code>s in constant contexts, including checking the contents for illegal null bytes.</p>\n<pre><code>#[allow(unconditional_panic)]\nconst fn illegal_null_in_string() {\n    [][0]\n}\n\n#[doc(hidden)]\npub const fn validate_cstr_contents(bytes: &amp;[u8]) {\n    let mut i = 0;\n    while i &lt; bytes.len() {\n        if bytes[i] == b'\\0' {\n            illegal_null_in_string();\n        }\n        i += 1;\n    }\n}\n\nmacro_rules! cstr {\n    ( $s:literal ) =&gt; {{\n        $crate::validate_cstr_contents($s.as_bytes());\n        unsafe { std::mem::transmute::&lt;_, &amp;std::ffi::CStr&gt;(concat!($s, &quot;\\0&quot;)) }\n    }};\n}\n\nconst VALID: &amp;std::ffi::CStr = cstr!(&quot;hello world&quot;);\n// const INVALID: &amp;std::ffi::CStr = cstr!(&quot;hello\\0world&quot;);\n\nfn main() {\n    println!(&quot;Output: {:?}&quot;, VALID);\n}\n</code></pre>\n<p>Note that this does rely on implementation details of <code>CStr</code> (specifically that the layout is compatible with <code>[u8]</code>), so this shouldn't be used in production code.</p>\n"}], "owner": {"reputation": 706, "user_id": 2640937, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/2bdde9ada4ed0bf5df04bad03a51642d?s=128&d=identicon&r=PG", "display_name": "Vaelus", "link": "https://stackoverflow.com/users/2640937/vaelus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 494, "favorite_count": 0, "accepted_answer_id": 63608103, "answer_count": 3, "score": 3, "last_activity_date": 1598493904, "creation_date": 1570836218, "question_id": 58349489, "link": "https://stackoverflow.com/questions/58349489/const-static-cstr", "title": "Const &amp;&#39;static CStr", "body": "<p>I haven't found anything in the standard library about how to make a <code>const &amp;'static CStr</code>. I've tried to make my own macro to convert a <code>&amp;'static str</code> literal to a <code>&amp;'static CStr</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! cstr {\n    ($e: expr) =&gt; {{\n        const buffer: &amp;str = concat!($e, \"\\0\");\n        unsafe {std::ffi::CStr::from_bytes_with_nul_unchecked(buffer.as_bytes())}\n    }}                                                                           \n}     \n</code></pre>\n\n<p>But it has a couple problems:</p>\n\n<ol>\n<li>This works fine in typical cases, but if <code>expr</code> contains a null byte, it invokes undefined behavior</li>\n<li><code>str::as_bytes</code> is not <code>const</code>, so the <code>&amp;CStr</code> is not const</li>\n</ol>\n\n<p>Is there any way to create a <code>const &amp;'static CStr</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1570825219, "post_id": 58347910, "comment_id": 103051098, "body": "Use <code>flatten()</code> after map"}], "answers": [{"tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": false, "score": 3, "last_activity_date": 1570825214, "creation_date": 1570825214, "answer_id": 58347972, "question_id": 58347910, "link": "https://stackoverflow.com/questions/58347910/is-there-a-way-to-convert-a-vecvect-to-vect-combining-all-the-vect/58347972#58347972", "title": "Is there a way to convert a `Vec&lt;Vec&lt;T&gt;&gt;` to `Vec&lt;T&gt;`, combining all the `Vec&lt;T&gt;`s into one `Vec&lt;T&gt;`?", "body": "<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flat_map\" rel=\"nofollow noreferrer\"><code>flat_map</code></a>:</p>\n\n<pre><code>let events = orgs\n    .iter()\n    .flat_map(get_events_for)\n    .collect();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 6661, "user_id": 1330741, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LbeLm.jpg?s=128&g=1", "display_name": "fmendez", "link": "https://stackoverflow.com/users/1330741/fmendez"}, "is_accepted": true, "score": 2, "last_activity_date": 1570849300, "last_edit_date": 1570849300, "creation_date": 1570836320, "answer_id": 58349500, "question_id": 58347910, "link": "https://stackoverflow.com/questions/58347910/is-there-a-way-to-convert-a-vecvect-to-vect-combining-all-the-vect/58349500#58349500", "title": "Is there a way to convert a `Vec&lt;Vec&lt;T&gt;&gt;` to `Vec&lt;T&gt;`, combining all the `Vec&lt;T&gt;`s into one `Vec&lt;T&gt;`?", "body": "<p>This is what a more complete implementation would look like using some of the answers already given here:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct Event {\n    id: usize\n}\n\nfn main() {\n  let orgs = vec![1, 3, 14, 12];\n\n  let events: Vec&lt;Event&gt; = orgs\n    .iter()\n    .flat_map(|org_id| {\n        get_events_for(*org_id)\n    })\n    .collect();\n\n  println!(\"{:?}\", events);\n\n}\n\nfn get_events_for(id: usize) -&gt; Vec&lt;Event&gt; {\n   vec![Event {id}]\n}\n</code></pre>\n\n<p>The output would look like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>[Event { id: 1 }, Event { id: 3 }, Event { id: 14 }, Event { id: 12 }]\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a2c01231c3ef3ca7576db33b4c0f2e61\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 99, "user_id": 11274749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8f411d49deedda4f2ad58be22a05a6c?s=128&d=identicon&r=PG&f=1", "display_name": "SRugina", "link": "https://stackoverflow.com/users/11274749/srugina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 58349500, "answer_count": 2, "score": 1, "last_activity_date": 1570849300, "creation_date": 1570824809, "question_id": 58347910, "link": "https://stackoverflow.com/questions/58347910/is-there-a-way-to-convert-a-vecvect-to-vect-combining-all-the-vect", "title": "Is there a way to convert a `Vec&lt;Vec&lt;T&gt;&gt;` to `Vec&lt;T&gt;`, combining all the `Vec&lt;T&gt;`s into one `Vec&lt;T&gt;`?", "body": "<p>Let's say I have a Vector of Organisation ids</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let orgs = vec![1, 3, 14, 12];\n</code></pre>\n\n<p>I then call <code>.iter()</code> on each to get the events of each organisation, where the function <code>get_events_for()</code> returns <code>Vec&lt;Event&gt;</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let events = orgs\n    .iter()\n    .map(|org_id| {\n        get_events_for(org_id)\n    })\n    .collect();\n</code></pre>\n\n<p>Currently, events is equal to <code>Vec&lt;Vec&lt;Event&gt;&gt;</code>, so how would one go about converting that to just <code>Vec&lt;Event&gt;</code>?</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570825737, "post_id": 58347867, "comment_id": 103051270, "body": "This looks like it might be a duplicate of <a href=\"https://stackoverflow.com/questions/28587698/whats-the-difference-between-placing-mut-before-a-variable-name-and-after-the\">What&#39;s the difference between placing &quot;mut&quot; before a variable name and after the &quot;:&quot;?</a> Do the answers to that question answer your own?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570825831, "post_id": 58347867, "comment_id": 103051306, "body": "Also see <a href=\"https://stackoverflow.com/questions/50124680/why-does-rust-allow-mutation-through-a-reference-field-using-an-immutable-bindin\">Why does Rust allow mutation through a reference field using an immutable binding?</a> which is not about your question specifically, but might help you understand the dual meaning of <code>mut</code> better."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 5631945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YhsbE.jpg?s=128&g=1", "display_name": "AzAli", "link": "https://stackoverflow.com/users/5631945/azali"}, "edited": false, "score": 0, "creation_date": 1570829912, "post_id": 58348020, "comment_id": 103052543, "body": "yeah it is true, it was my fault I have corrected that in my question"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1570833074, "post_id": 58348020, "comment_id": 103053292, "body": "@BenjaminLindley Correct. Not entirely sure what I was thinking but it definitely wasn&#39;t the right thing."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 0, "last_activity_date": 1570833118, "last_edit_date": 1570833118, "creation_date": 1570825483, "answer_id": 58348020, "question_id": 58347867, "link": "https://stackoverflow.com/questions/58347867/what-is-the-difference-between-these-lines-in-rust/58348020#58348020", "title": "what is the difference between these lines in RUST?", "body": "<p>Let's start with the similarity: neither of them compiles, because you cannot acquire a mutable reference (<code>&amp;mut</code>) of an object that is itself not defined as <code>mut</code>.</p>\n\n<p>As for the <strong>correct</strong> version, it is the following:</p>\n\n<pre><code>let mut my_str = String::from(\"ali\");\nlet str2 = &amp;mut my_str;\n</code></pre>\n\n<p><code>my_str</code> needs to be defined as mutable if we are to grab a mutable reference to it, so that makes the first line unambiguous.</p>\n\n<p>On the second line, the <code>mut</code> prefix to <code>str2</code> is only necessary if you are going to modify what reference <code>str2</code> points to. As long as you are only modifying the content of the string (without changing what string you are modifying) you do not need it.</p>\n"}], "owner": {"reputation": 1, "user_id": 5631945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YhsbE.jpg?s=128&g=1", "display_name": "AzAli", "link": "https://stackoverflow.com/users/5631945/azali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1570833118, "creation_date": 1570824552, "last_edit_date": 1570829864, "question_id": 58347867, "link": "https://stackoverflow.com/questions/58347867/what-is-the-difference-between-these-lines-in-rust", "title": "what is the difference between these lines in RUST?", "body": "<p>what is the difference between these two scenario I have the same functionality with 2 different model and it is a bit confusing for me !\n<br></p>\n\n<pre><code>//model_1\n\nlet mut my_str = String::from(\"ali\");\nlet str1 = &amp;mut my_str; // defining str1 without \"mut\"\n\n//model_2\n\nlet mut my_str = String::from(\"ali\");\nlet mut str1 = &amp;mut my_str // defining str1 with \"mut\"\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 4, "last_activity_date": 1570825209, "creation_date": 1570825209, "answer_id": 58347971, "question_id": 58347832, "link": "https://stackoverflow.com/questions/58347832/how-to-return-reference-to-temporary-value/58347971#58347971", "title": "How to return reference to temporary value?", "body": "<p>Quite reliably and simply, actually - we don't return <code>&amp;T</code>, and instead, we return a trait that the guard implements that allows us to get to <code>&amp;T</code>: <code>Deref</code>!</p>\n\n<pre><code>impl&lt;T&gt; TimedCache&lt;T&gt; {\n    fn get(&amp;self) -&gt; impl Deref&lt;Target = T&gt; + '_ {\n        let lock = self.data.read();\n        lock.unwrap()\n    }\n}\n</code></pre>\n\n<p>This has all the advantages of having a reference, and none of the drawbacks - you don't even need to know that you're actually manipulating a <code>RwLock</code> read guard. To the outside, this looks like an object implementing <code>deref()</code>.</p>\n\n<p>A full sample of this, including example of use, is on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b59db58bd7d0ff6d912ae84645037db5\" rel=\"nofollow noreferrer\"><strong>playground</strong></a></p>\n"}], "owner": {"reputation": 631, "user_id": 2093346, "user_type": "registered", "accept_rate": 24, "profile_image": "https://www.gravatar.com/avatar/62bd73ee4a132a0cd3d1496598fff329?s=128&d=identicon&r=PG", "display_name": "Quarktum", "link": "https://stackoverflow.com/users/2093346/quarktum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 58347971, "answer_count": 1, "score": 0, "last_activity_date": 1570825209, "creation_date": 1570824409, "question_id": 58347832, "link": "https://stackoverflow.com/questions/58347832/how-to-return-reference-to-temporary-value", "title": "How to return reference to temporary value?", "body": "<p>Hi I was wondering how can I achieve the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct TimedCache&lt;T&gt; {\n    data: RwLock&lt;T&gt;,\n    f: fn() -&gt; T,\n}\n\nimpl&lt;T&gt; TimedCache&lt;T&gt; {\n    fn get(&amp;self) -&gt; &amp;T {\n        &amp;self.data.read().unwrap()\n    }\n}\n</code></pre>\n\n<p>Because I obtain: <code>cannot return reference to temporary value</code></p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1570819908, "creation_date": 1570819908, "answer_id": 58346968, "question_id": 58346865, "link": "https://stackoverflow.com/questions/58346865/array-of-methods-in-rust/58346968#58346968", "title": "Array of methods in Rust", "body": "<p>The solution is quite simple, really. Because you're going to need a structure that allows you to obtain a mutable borrow on-demand, you're going to want a <code>RwLock</code>. And because I'm guessing what you're building is an HTTP router, to bypass lifetime requirements on <code>Foo</code>, you're going to want to wrap that <code>RwLock</code> in an <code>Arc</code>, like so:</p>\n\n<pre><code>use std::collections::HashMap;\nuse std::sync::{Arc, RwLock};\n\nstruct Foo(bool);\n\nimpl Foo {\n    fn say(&amp;self) {\n        println!(\"I'm {}\", self.0);\n    }\n    fn morph(&amp;mut self) {\n        self.0 = !self.0;\n    }\n}\n\nfn main() {\n    let mut foo = Arc::new(RwLock::new(Foo(true)));\n\n    let mut routes: HashMap&lt;String, Box&lt;FnMut()&gt;&gt; = HashMap::new();\n    routes.insert(\"foo/say\".to_string(), Box::new(|| foo.read().unwrap().say()));  //&lt; First (immutable) borrow of foo\n    routes.insert(\"foo/morph\".to_string(), Box::new(|| foo.write().unwrap().morph())); //&lt; Second (mutable) borrow of foo\n    routes.insert(\"bar\".to_string(), Box::new(|| println!(\"hello\"))); //&lt; Compiler also says immutable foo is used here\n}\n</code></pre>\n\n<p>Do note that I've abused the fact that everything can just borrow <code>foo</code> read-only for this. If you ever need to <code>move</code> stuff in closures, <code>Arc</code> implements <code>Clone</code>, so you should definitely take advantage of this.</p>\n\n<p>The rest is fine - as long as your closures all have the same signature, boxing them and storing them in any collection is idiomatic.</p>\n"}], "owner": {"reputation": 889, "user_id": 748875, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32ac6252cd00de88e39b9b2e8d5356d4?s=128&d=identicon&r=PG", "display_name": "Simon", "link": "https://stackoverflow.com/users/748875/simon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 58346968, "answer_count": 1, "score": 0, "last_activity_date": 1570861406, "creation_date": 1570819368, "last_edit_date": 1570861406, "question_id": 58346865, "link": "https://stackoverflow.com/questions/58346865/array-of-methods-in-rust", "title": "Array of methods in Rust", "body": "<p>I'm trying to write a requests \"router\" in Rust: a list of expressions associated to the functions to call when a match occurs. The functions might be methods coming from various objects, which of course leads the borrow checker to complain. Here's a sample of what I'd like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\n\nstruct Foo(bool);\n\nimpl Foo {\n    fn say(&amp;self) {\n        println!(\"I'm {}\", self.0);\n    }\n    fn morph(&amp;mut self) {\n        self.0 = !self.0;\n    }\n}\n\nfn main() {\n    let mut foo = Foo(true);\n\n    let mut routes: HashMap&lt;String, Box&lt;FnMut()&gt;&gt; = HashMap::new();\n    routes.insert(\"foo/say\".to_string(), Box::new(|| foo.say()));  //&lt; First (immutable) borrow of foo\n    routes.insert(\"foo/morph\".to_string(), Box::new(|| foo.morph())); //&lt; Second (mutable) borrow of foo\n    routes.insert(\"bar\".to_string(), Box::new(|| println!(\"hello\"))); //&lt; Compiler also says immutable foo is used here\n}\n</code></pre>\n\n<p>I understand why the borrow checker isn't happy about this, but <strong>I'm wondering what might be the idiomatic way of implementing that in Rust</strong>.</p>\n\n<p><em>Side note: any general comment on the best way to get a list/array/hashmap or any collection of heterogeneous functions will be appreciated.</em></p>\n"}, {"tags": ["arrays", "rust", "permutation"], "comments": [{"owner": {"reputation": 5816, "user_id": 1976843, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86b252b544ecc188ea1f120e9c2c97ee?s=128&d=identicon&r=PG", "display_name": "JEY", "link": "https://stackoverflow.com/users/1976843/jey"}, "edited": false, "score": 1, "creation_date": 1570817264, "post_id": 58346166, "comment_id": 103047905, "body": "please provide at least some pseudo code of the algorithm you want."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 2, "creation_date": 1570817290, "post_id": 58346166, "comment_id": 103047921, "body": "One word of warning - stackoverflow isn&#39;t a coding service where one writes pseudocode and gets ready-made solutions. I&#39;m letting this one slide, but the next time I see a similar quality question from you I&#39;ll flag it as &quot;Low quality&quot;."}, {"owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570817457, "post_id": 58346166, "comment_id": 103047984, "body": "@S&#233;bastienRenauld, sure, I will try to bring up a partial solution if I can get to it."}], "answers": [{"comments": [{"owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "edited": false, "score": 0, "creation_date": 1570819913, "post_id": 58346620, "comment_id": 103048948, "body": "That includes all combinations but not all permutations, how can I add all permutations as well? For example for [1,2,4] also having [2,1,4],[1,4,2],[4,1,2],..."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "edited": false, "score": 0, "creation_date": 1570820054, "post_id": 58346620, "comment_id": 103049022, "body": "Implement <code>permutations()</code> yourself, either by wrapping <code>combinations()</code> or following <a href=\"https://itnext.io/permutations-combinations-algorithms-cheat-sheet-68c14879aba5\" rel=\"nofollow noreferrer\">this algorithm primer</a>. The hard part of your question was how to combine heterogenous return sizes and working off dynamic factorials."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 2, "last_activity_date": 1570818102, "creation_date": 1570818102, "answer_id": 58346620, "question_id": 58346166, "link": "https://stackoverflow.com/questions/58346166/all-permutations-up-until-n-x/58346620#58346620", "title": "All permutations up until n = x", "body": "<p>The short-and-sweet answer involves combining calls to <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.combinations\" rel=\"nofollow noreferrer\"><code>IterTools::combinations</code></a>. There will be one caveat, though - we're going to need to return an owned struct, and this rules out slices in favor of vectors. The difference is almost negligible and you can always turn them back into slices:</p>\n\n<pre><code>user itertools::IterTools;\nlet items = [1, 2, 3, 4];\nlet combinations = (1..=items.len()).fold(vec![], |mut state, to_take| {\n  state.append(&amp;mut items.iter().combinations(to_take).collect::&lt;Vec&lt;_&gt;&gt;());\n  state\n});\nprintln!(\"{:?}\", combinations)\n</code></pre>\n\n<p>The <code>combinations()</code> method itself is very straightforward to implement yourself in case you do not want to burden yourself with the (superior) implementation contained in <code>itertools</code>.</p>\n"}], "owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 355, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1570818329, "creation_date": 1570815797, "last_edit_date": 1570818329, "question_id": 58346166, "link": "https://stackoverflow.com/questions/58346166/all-permutations-up-until-n-x", "title": "All permutations up until n = x", "body": "<p>Having a certain integer (for example n = 3) I want to have an array where each element is one of the possible permutations of the numbers up until n = 3. Example:</p>\n\n<pre><code> n = 3, so numbers: [0,1,2]\n\n permutations: [(0),(1),(2), (0,1),(1,0),(0,2),...,(0,1,2),(0,2,1),(1,0,2),(1,2,0),...]\n</code></pre>\n\n<p>(This probably can be represented as an array of arrays in Rust)<br>\nHow can this be achieved in Rust?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1571845813, "creation_date": 1571845813, "answer_id": 58526708, "question_id": 58346023, "link": "https://stackoverflow.com/questions/58346023/how-to-publish-an-optimized-binary-using-cargo-publish/58526708#58526708", "title": "How to publish an optimized binary using cargo publish?", "body": "<p>You publish source code to crates.io. When a user runs <code>cargo install &lt;my-crate&gt;</code>, it downloads the source and compiles it with <code>--release</code>. You don't have to do anything.</p>\n"}], "owner": {"reputation": 659, "user_id": 6845084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253b377ee6c971f363de927136d30117?s=128&d=identicon&r=PG", "display_name": "Palash Nigam", "link": "https://stackoverflow.com/users/6845084/palash-nigam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "accepted_answer_id": 58526708, "answer_count": 1, "score": 1, "last_activity_date": 1571845813, "creation_date": 1570815081, "last_edit_date": 1571845723, "question_id": 58346023, "link": "https://stackoverflow.com/questions/58346023/how-to-publish-an-optimized-binary-using-cargo-publish", "title": "How to publish an optimized binary using cargo publish?", "body": "<p>I am trying to publish my first crate to crates.io.</p>\n\n<p>When I build my project locally, I can pass the <code>--release</code> flag to get an optimized binary but when I do <code>cargo publish --dry-run</code> it seems to be building an unoptimized binary as this was the second-to-last line of the output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Finished dev [unoptimized + debuginfo] target(s) in 24.79s\n</code></pre>\n\n<p>If possible, I would like to build and publish an optimized binary to crates.io.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1570815962, "post_id": 58345900, "comment_id": 103047357, "body": "KISS: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2e6f7a8172fe52b9503d495cf06b9f45\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1570816111, "post_id": 58345900, "comment_id": 103047432, "body": "Note: to declare a generic over impl just do <code>impl&lt;&#39;a&gt;</code> but this wouldn&#39;t have help you here."}], "answers": [{"comments": [{"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570823217, "post_id": 58346440, "comment_id": 103050335, "body": "I&#39;ve edited my question... in addition to removing lifetimes, it looks like you removed a <code>&amp;</code> from <code>One(byte_array) =&gt; &amp;byte_array,</code> ... that seems to be the main problem.    I guess maybe <code>ref</code> returns a reference, and then <code>&amp;byte_array</code> was a locally scoped reference to the struct field reference ?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570823308, "post_id": 58346440, "comment_id": 103050372, "body": "@Ultrasaurus Correct! Since your method takes <code>&amp;self</code> the content of your pattern matches will be references themselves even if you <code>match self</code> (since you do not have ownership of the object), and as a result, the <code>&amp;</code> would lead to a reference-of-a-reference"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1570823679, "last_edit_date": 1570823679, "creation_date": 1570817206, "answer_id": 58346440, "question_id": 58345900, "link": "https://stackoverflow.com/questions/58345900/how-to-declare-enum-lifetime-with-impl-function/58346440#58346440", "title": "how to declare enum lifetime with impl function?", "body": "<p>Stargateur gave you the code without the explanation; let's see if I can fill in the gaps.</p>\n\n<p>The reason your code does not work is that declaring a lifetime on a <code>struct</code> associates this lifetime <strong>with the struct</strong>. In other words, every method using or returning <code>'a</code> in your case will take or return the same <code>'a</code> irrespective of where and how this was placed. This is worthwhile when you have a reference inside a <code>struct</code>, which you do not. As a result, this is not necessary.</p>\n\n<p>If you had wanted to go the whole hog and specify lifetimes, you could have done it like so:</p>\n\n<pre><code>#[derive(Debug)]\nenum SomeBytes {\n  One([u8; 1]),\n  Two([u8; 2]),\n}\n\nimpl SomeBytes {\n\n  pub fn get_bytes&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a [u8] {\n    use SomeBytes::*;\n\n    match self {\n      One(ref byte_array) =&gt; byte_array,\n      Two(ref byte_array) =&gt; byte_array,\n    }\n  }\n}\n</code></pre>\n\n<p>The lifetime is defined as a property of the <em>method</em>, not the <code>struct</code>. Its additional requirement is obvious - <code>&amp;self</code> needs to be guaranteed for the lifetime <code>'a</code> that its return parameter will also obey.</p>\n\n<p>However, this is pedantry; in practice, this lifetime requirement is not mandatory and can be dropped in favour of the simpler, more automatic version:</p>\n\n<pre><code>  pub fn get_bytes(&amp;self) -&gt; &amp;[u8] {\n    use SomeBytes::*;\n\n    match self {\n      One(ref byte_array) =&gt; byte_array,\n      Two(ref byte_array) =&gt; byte_array,\n    }\n  }\n</code></pre>\n\n<p>Note: To make the example work, <code>&amp;</code> also needed to be removed before <code>byte_array</code> on right side of the match. Since your method takes <code>&amp;self</code> the content of your pattern matches will be references themselves even if you match self (since you do not have ownership of the object), and as a result, the <code>&amp;</code> would lead to a reference-of-a-reference</p>\n"}], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 58346440, "answer_count": 1, "score": 1, "last_activity_date": 1570823679, "creation_date": 1570814473, "last_edit_date": 1570822995, "question_id": 58345900, "link": "https://stackoverflow.com/questions/58345900/how-to-declare-enum-lifetime-with-impl-function", "title": "how to declare enum lifetime with impl function?", "body": "<p>I'd like to declare an enum with an accessor function that returns the values that were provided when the value is created.  Below is a contrived example that illustrates the error:</p>\n\n<pre><code>use std::mem;\n\n#[derive(Debug)]\nenum SomeBytes&lt;'a&gt; {\n  One([u8; 1]),\n  Two([u8; 2]),\n}\n\nimpl SomeBytes&lt;'a&gt; {\n\n  pub fn get_bytes(&amp;'a self) -&gt; &amp;'a[u8] {\n    use SomeBytes::*;\n\n    match *self {\n      One(byte_array) =&gt; &amp;byte_array,\n      Two(byte_array) =&gt; &amp;byte_array,\n    }\n  }\n}\n\nfn main() {\n  let var1 = SomeBytes::One(*b\"A\");\n  let var2 = SomeBytes::Two(*b\"AB\");\n\n  println!(\"one byte = {:?}\", var1);\n  println!(\"sizeof one byte = {:?}\", mem::size_of_val(&amp;var1));\n  println!(\"two bytes = {:?}\", var2);\n  println!(\"sizeof two bytes = {:?}\", mem::size_of_val(&amp;var2));\n}\n</code></pre>\n\n<p>errors:</p>\n\n<pre><code>  Compiling playground v0.0.1 (/playground)\nerror[E0261]: use of undeclared lifetime name `'a`\n --&gt; src/main.rs:9:16\n  |\n9 | impl SomeBytes&lt;'a&gt; {\n  |                ^^ undeclared lifetime\n\nerror[E0261]: use of undeclared lifetime name `'a`\n  --&gt; src/main.rs:11:21\n   |\n11 |   pub fn get_bytes(&amp;'a self) -&gt; &amp;'a[u8] {\n   |                     ^^ undeclared lifetime\n\nerror[E0261]: use of undeclared lifetime name `'a`\n  --&gt; src/main.rs:11:34\n   |\n11 |   pub fn get_bytes(&amp;'a self) -&gt; &amp;'a[u8] {\n   |                                  ^^ undeclared lifetime\n</code></pre>\n\n<p>How do I write this code so that it will compile?</p>\n\n<p>See <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b15cd6b8cb7f93130fcec1aa5cd8b202\" rel=\"nofollow noreferrer\">Rust playground</a></p>\n\n<p>If I remove all the lifetimes from my code (which current comments/answers say are not needed, then the example looks like this:</p>\n\n<pre><code>use std::mem;\n\n#[derive(Debug)]\nenum SomeBytes {\n  One([u8; 1]),\n  Two([u8; 2]),\n}\n\nimpl SomeBytes {\n\n  pub fn get_bytes(&amp;self) -&gt; &amp;[u8] {\n    use SomeBytes::*;\n\n    match *self {\n      One(byte_array) =&gt; &amp;byte_array,\n      Two(byte_array) =&gt; &amp;byte_array,\n    }\n  }\n}\n\nfn main() {\n  let var1 = SomeBytes::One(*b\"A\");\n  let var2 = SomeBytes::Two(*b\"AB\");\n\n  println!(\"one byte = {:?}\", var1);\n  println!(\"sizeof one byte = {:?}\", mem::size_of_val(&amp;var1));\n  println!(\"two bytes = {:?}\", var2);\n  println!(\"sizeof two bytes = {:?}\", mem::size_of_val(&amp;var2));\n}\n</code></pre>\n\n<p>which gives me the following error:</p>\n\n<pre><code>Compiling playground v0.0.1 (/playground)\nerror[E0515]: cannot return value referencing local variable `byte_array`\n  --&gt; src/main.rs:14:5\n   |\n14 | /     match *self {\n15 | |       One(byte_array) =&gt; &amp;byte_array,\n16 | |       Two(byte_array) =&gt; &amp;byte_array,\n   | |                          ----------- `byte_array` is borrowed here\n17 | |     }\n   | |_____^ returns a value referencing data owned by the current function\n\nerror[E0515]: cannot return value referencing local variable `byte_array`\n  --&gt; src/main.rs:14:5\n   |\n14 | /     match *self {\n15 | |       One(byte_array) =&gt; &amp;byte_array,\n   | |                          ----------- `byte_array` is borrowed here\n16 | |       Two(byte_array) =&gt; &amp;byte_array,\n17 | |     }\n   | |_____^ returns a value referencing data owned by the current function\n</code></pre>\n\n<p>I must have added lifetimes in an attempt to fix the above error, but that wasn't the solution.  I was attempting to tell the compiler that I don't want to return something owned by the current function...  Can someone explain the appropriate fix?</p>\n"}, {"tags": ["vector", "rust", "add"], "answers": [{"comments": [{"owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "edited": false, "score": 0, "creation_date": 1570816350, "post_id": 58346109, "comment_id": 103047525, "body": "Thank you, I just did not understand a part of the answer. When you say &quot;The only downside is that this version is less flexible. The output still needs to be a vector; you couldn&#39;t switch to a hash set or what have you. &quot; What do you mean by being less flexible and the output needs to be a vector? What would be the advantage of the hashSet method if the objective is to always work with a vector?"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "edited": false, "score": 1, "creation_date": 1570817082, "post_id": 58346109, "comment_id": 103047828, "body": "@Miguel Sometimes the objective isn&#39;t to always work with a vector. Or even when you&#39;re still working with vectors, if the type of the underlying data changes, you&#39;ll need a brand new vector. For example, if <code>strings</code> is a vector of type <code>Vec&lt;String&gt;</code>, then you wouldn&#39;t be able to do <code>strings.for_each().map(|s| *s = s.len())</code> since that would change the type of each string and the vector as a whole."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 4, "last_activity_date": 1570817110, "last_edit_date": 1570817110, "creation_date": 1570815508, "answer_id": 58346109, "question_id": 58345708, "link": "https://stackoverflow.com/questions/58345708/how-do-i-add-the-same-integer-to-each-element-of-a-vector-in-rust/58346109#58346109", "title": "How do I add the same integer to each element of a vector in Rust?", "body": "<p>The Rust way to do this is very similar to Python: use iterators! The rough equivalent to Python's list comprehension is <code>iter::map</code> to get the new elements, and <code>iter::collect</code> to collect into a new vector (or some other kind of collection).</p>\n\n<p>So for example, if <code>bar</code> is a <code>Vec&lt;i32&gt;</code> (or any other primitive integer type) and you want to add 10 to each element, try</p>\n\n<pre><code>bar = bar.into_iter().map(|x| x + 10).collect();\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d7b75a4340d276dcca971f9a5b8b0d27\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>Alternatively, you could mutate the elements in-place with</p>\n\n<pre><code>bar.iter_mut().for_each(|x| *x += 10);\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=73b12592255bb96659c98b0c47f4279a\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<p>This is basically like a for loop, but a bit more succinct. This is generally going to be more efficient than the first method since you don't need to allocate a new vector (a sufficiently smart compiler may be able to avoid this). The only downside is that this version is less flexible. The output still needs to be a vector; you couldn't switch to a hash set or what have you. You also wouldn't be able to keep a copy of the old vector. See below for some examples of what's possible.</p>\n\n<pre><code>fn main() {\n    let mut bar = vec![2, 4, 5, 6, 7];\n    // Overwrite the old vector\n    bar = bar.into_iter().map(|x| x + 10).collect();\n    println!(\"new bar: {:?}\", bar);\n\n    let bar = vec![2, 4, 5, 6, 7];\n    // Make a completely new vector\n    // Note that this works only because i32 implements the Copy trait,\n    // so we can make copies of the elements of bar without any problems\n    // In more general situations, we may need to clone each element\n    let foo: Vec&lt;_&gt; = bar.iter().map(|&amp;x| x + 10).collect();\n    println!(\"old bar: {:?} (it's still around)\", bar);\n    println!(\"new foo: {:?}\", foo);\n\n    use std::collections::HashSet;\n    let bar = vec![2, 4, 5, 6, 7];\n    // transform the data and collect it into a HashSet\n    // instead of a vector\n    let bar: HashSet&lt;_&gt; = bar.into_iter().map(|x| x + 10).collect();\n    println!(\"new bar: {:?} (note that now bar is unordered)\", bar);\n\n    let mut bar = vec![2, 4, 5, 6, 7];\n    // Overwrite the old vector in place\n    bar.iter_mut().for_each(|x| *x += 10);\n    println!(\"new bar: {:?}\", bar);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8407ce7ab730184f654397311f8b365a\" rel=\"nofollow noreferrer\">(playground)</a></p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1594059899, "post_id": 62762149, "comment_id": 110988382, "body": "When possible, iterators are preferred. Direct index access can incur overhead due to checking for out-of-bounds access. <code>&amp;mut Vec&lt;_&gt;</code> is non-idiomatic (<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>). There are self-modifying operators (<code>+=</code>). <code>p.iter()</code> is usually written as <code>&amp;</code>. It&#39;s not needed to dereference in the printing for loop (<a href=\"https://stackoverflow.com/q/30450399/155423\">Does println! borrow or own the variable?</a>)."}, {"owner": {"reputation": 2151, "user_id": 1944642, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/tMbm5.png?s=128&g=1", "display_name": "Vladir Parrado Cruz", "link": "https://stackoverflow.com/users/1944642/vladir-parrado-cruz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1594060265, "post_id": 62762149, "comment_id": 110988532, "body": "Thanks a lot for your suggestions and revision @Shepmaster, I will dig into this and try to improve this code."}], "tags": [], "owner": {"reputation": 2151, "user_id": 1944642, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/tMbm5.png?s=128&g=1", "display_name": "Vladir Parrado Cruz", "link": "https://stackoverflow.com/users/1944642/vladir-parrado-cruz"}, "is_accepted": false, "score": 0, "last_activity_date": 1594231485, "last_edit_date": 1594231485, "creation_date": 1594059655, "answer_id": 62762149, "question_id": 58345708, "link": "https://stackoverflow.com/questions/58345708/how-do-i-add-the-same-integer-to-each-element-of-a-vector-in-rust/62762149#62762149", "title": "How do I add the same integer to each element of a vector in Rust?", "body": "<p>This is basic code which illustrates how to do it the way the question assumes by default. It might be useful for beginners with Rust like me:</p>\n<pre><code>fn increment_mut(p: &amp;mut Vec&lt;i32&gt;, to_add: i32){\n    for i in 0..p.len() {\n        p[i] += to_add;\n    }\n}\n\nfn main() {\n    let mut p = vec![2, 4, 5, 6, 7];\n    increment_mut(&amp;mut p, 10);\n\n    // Print the complete vector in Debug.\n    println!(&quot;{:?}&quot;, p)\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n[12, 14, 15, 16, 17]\n</code></pre>\n<h2>Using <code>iter_mut</code></h2>\n<pre><code>fn increment_mut2(p: &amp;mut Vec&lt;i32&gt;, to_add: i32) {\n    for x in p.iter_mut() {\n        *x += to_add;\n    }\n}\n\nfn main() {\n    let mut p = vec![2, 4, 5, 6, 7];\n    increment_mut2(&amp;mut p, 10);\n\n    // Print the complete vector in Debug.\n    println!(&quot;{:?}&quot;, p)\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n[12, 14, 15, 16, 17]\n</code></pre>\n"}], "owner": {"reputation": 1114, "user_id": 10111567, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Miguel", "link": "https://stackoverflow.com/users/10111567/miguel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 536, "favorite_count": 0, "accepted_answer_id": 58346109, "answer_count": 2, "score": 2, "last_activity_date": 1594231485, "creation_date": 1570813558, "last_edit_date": 1594060354, "question_id": 58345708, "link": "https://stackoverflow.com/questions/58345708/how-do-i-add-the-same-integer-to-each-element-of-a-vector-in-rust", "title": "How do I add the same integer to each element of a vector in Rust?", "body": "<p>In Python, if I have a list and want to add 10 to each element I would do:</p>\n<pre class=\"lang-py prettyprint-override\"><code>bar = [2,4,5,6,7]\nbar = [x + 10 for x in bar]\n</code></pre>\n<p>resulting in: <code>[12,14,15,16,17]</code>. How can this be done in Rust? Is the only way doing a for loop and going through each vector element?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1570812570, "post_id": 58345218, "comment_id": 103046002, "body": "Rust&#39;s built-in array has to have a constant length, a size known at compile time that varies will not do. For that, you&#39;ll have to use growable array type <code>Vec</code>. But not all hopes are lost; <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2000-const-generics.md\" rel=\"nofollow noreferrer\">RFC 2000 constant generics</a> is to address this exact limitation."}], "answers": [{"comments": [{"owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "edited": false, "score": 0, "creation_date": 1570829112, "post_id": 58345861, "comment_id": 103052336, "body": "Appreciate the examples, since I&#39;m still wrapping my brain around Rust syntax. For the first example, it seems I can set bytes field with <code>v.to_be_bytes().to_vec()</code> which compiles, so at least now I can play with some different implementations, even inefficient for many small numbers.  Thx!"}], "tags": [], "owner": {"reputation": 56, "user_id": 5021006, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153802567960715/picture?type=large", "display_name": "Joel Macaluso", "link": "https://stackoverflow.com/users/5021006/joel-macaluso"}, "is_accepted": false, "score": 2, "last_activity_date": 1570814288, "creation_date": 1570814288, "answer_id": 58345861, "question_id": 58345218, "link": "https://stackoverflow.com/questions/58345218/syntax-for-declaring-an-array-type-with-variable-size-known-at-compile-time/58345861#58345861", "title": "syntax for declaring an array type with variable size (known at compile time)?", "body": "<p>Array are allocated on the stack so it would be much easier to create a struct that has this property using the heap.</p>\n\n<p>My suggestion is to either use a Vec for the bytes field</p>\n\n<pre><code>#[derive(Debug)]\nstruct Value {\n    t: TypeMarker,\n    bytes: Vec&lt;u8&gt;\n}\n</code></pre>\n\n<p>or to use a boxed array:</p>\n\n<pre><code>#![feature(float_to_from_bytes)]\n\nuse std::boxed::Box;\n\n#[derive(Debug)]\nenum TypeMarker {\n    NUMBER = 0x00,  // f64\n    // BOOLEAN: u8 = 0x01, // bool\n    // STRING: u8 = 0x02,  // UTF-8 string\n}\n\n#[derive(Debug)]\nstruct Value {\n    t: TypeMarker,\n    bytes: Box&lt;[u8]&gt;,\n}\n\nimpl From&lt;f64&gt; for Value{\n    fn from(v: f64) -&gt; Self {\n        Value {\n            t: TypeMarker::NUMBER,\n            bytes: Box::new(v.to_be_bytes()),\n        }\n    }\n}\n\nimpl From&lt;i32&gt; for Value{\n    fn from(v: i32) -&gt; Self {\n        Value {\n            t: TypeMarker::NUMBER,\n            bytes: Box::new(v.to_be_bytes()),\n        }\n    }\n}\n\n\nfn main() {\n  let num = 4.0;\n  println!(\"num = {:?}\", num);\n\n  let v1 = Value::from(4.0);\n  println!(\"Value::from(4.0) = {:?}\", v1);\n\n  let v2:Value = num.into();\n  println!(\"num.into() = {:?}\", v2);\n\n}\n</code></pre>\n\n<p>You can get some additional reading on using dynamically sized types <a href=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Hope this helps! Good luck!</p>\n"}], "owner": {"reputation": 2420, "user_id": 682349, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=128&d=identicon&r=PG", "display_name": "Ultrasaurus", "link": "https://stackoverflow.com/users/682349/ultrasaurus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 732, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1570814288, "creation_date": 1570811206, "question_id": 58345218, "link": "https://stackoverflow.com/questions/58345218/syntax-for-declaring-an-array-type-with-variable-size-known-at-compile-time", "title": "syntax for declaring an array type with variable size (known at compile time)?", "body": "<p>I'd like to create a struct that has a byte array, where a particular instance may have different sizes based on the creation of the struct known at compile time.</p>\n\n<p>I've created a contrived example using a struct that has a byte representation of a floating point number with a separate type field. The working implementation below:</p>\n\n<pre><code>#![feature(float_to_from_bytes)]\n\n#[derive(Debug)]\nenum TypeMarker {\n    NUMBER = 0x00,  // f64\n    // BOOLEAN: u8 = 0x01, // bool\n    // STRING: u8 = 0x02,  // UTF-8 string\n}\n\n#[derive(Debug)]\nstruct Value {\n    t: TypeMarker,\n    bytes: [u8; 8]\n}\n\nimpl From&lt;f64&gt; for Value {\n    fn from(v: f64) -&gt; Self {\n        Value {\n            t: TypeMarker::NUMBER,\n            bytes: v.to_be_bytes()\n        }\n    }\n}\n\nfn main() {\n  let num = 4.0;\n  println!(\"num = {:?}\", num);\n\n  let v1 = Value::from(4.0);\n  println!(\"Value::from(4.0) = {:?}\", v1);\n\n  let v2:Value = num.into();\n  println!(\"num.into() = {:?}\", v2);\n\n}\n</code></pre>\n\n<p>This working example (see also <a href=\"https://github.com/ultrasaurus/idiomatic-rust/commit/2037b28f85af8323003d7c2b0b0ccecec4798ad5\" rel=\"nofollow noreferrer\">repo on github</a>) uses rust nightly. </p>\n\n<p>Running the example...\n<code>cargo +nightly run --example into</code></p>\n\n<p>produces the result I expect:</p>\n\n<pre><code>num = 4.0\nValue::from(4.0) = Value { t: NUMBER, bytes: [64, 16, 0, 0, 0, 0, 0, 0] }\nnum.into() = Value { t: NUMBER, bytes: [64, 16, 0, 0, 0, 0, 0, 0] }\n</code></pre>\n\n<p>However, what I want to do is to support various types of numbers where the size is known at compile time. To illustrate this question, the example below adds <code>impl From&lt;i32&gt;</code> (which is 4 bytes long):</p>\n\n<pre><code>#![feature(float_to_from_bytes)]\n\n#[derive(Debug)]\nenum TypeMarker {\n    NUMBER = 0x00,  // f64\n    // BOOLEAN: u8 = 0x01, // bool\n    // STRING: u8 = 0x02,  // UTF-8 string\n}\n\n#[derive(Debug)]\nstruct Value {\n    t: TypeMarker,\n    bytes: [u8; 8]\n}\n\nimpl From&lt;f64&gt; for Value {\n    fn from(v: f64) -&gt; Self {\n        Value {\n            t: TypeMarker::NUMBER,\n            bytes: v.to_be_bytes()\n        }\n    }\n}\n\nimpl From&lt;i32&gt; for Value {\n    fn from(v: i32) -&gt; Self {\n        Value {\n            t: TypeMarker::NUMBER,\n            bytes: v.to_be_bytes()\n        }\n    }\n}\n\n\nfn main() {\n  let num = 4.0;\n  println!(\"num = {:?}\", num);\n\n  let v1 = Value::from(4.0);\n  println!(\"Value::from(4.0) = {:?}\", v1);\n\n  let v2:Value = num.into();\n  println!(\"num.into() = {:?}\", v2);\n\n}\n</code></pre>\n\n<p>this produces the following error</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; examples/into.rs:33:20\n   |\n33 |             bytes: v.to_be_bytes()\n   |                    ^^^^^^^^^^^^^^^ expected an array with a fixed size of 8 elements, found one with 4 elements\n   |\n   = note: expected type `[u8; 8]`\n              found type `[u8; 4]`\n</code></pre>\n\n<p>I would like to declare <code>Value</code> struct so that it can be created with variable sized arrays of bytes (where the size is known at compile time).</p>\n\n<p>I've tried:</p>\n\n<pre><code>struct Value {\n    t: TypeMarker,\n    bytes: [u8; usize]\n}\n</code></pre>\n\n<pre><code>error[E0423]: expected value, found builtin type `usize`\n  --&gt; examples/into.rs:17:17\n   |\n17 |     bytes: [u8; usize]\n   |                 ^^^^^ not a value\n\nerror[E0277]: arrays only have std trait implementations for lengths 0..=32\n  --&gt; examples/into.rs:17:5\n   |\n17 |     bytes: [u8; usize]\n   |     ^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[u8; _]`\n   |\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `[u8; _]`\n   = note: required because of the requirements on the impl of `std::fmt::Debug` for `&amp;[u8; _]`\n   = note: required for the cast to the object type `dyn std::fmt::Debug`\n\n</code></pre>\n\n<p>So then I tried:</p>\n\n<pre><code>struct Value {\n    t: TypeMarker,\n    bytes: [u8; _]\n}\n</code></pre>\n\n<p>that didn't work either:</p>\n\n<pre><code>error: expected expression, found reserved identifier `_`\n  --&gt; examples/into.rs:17:17\n   |\n17 |     bytes: [u8; _]\n   |                 ^ expected expression\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>This seems like it should be possible and I think I've read the syntax for this once, but I've re-read many sections of the <a href=\"https://doc.rust-lang.org/book/\" rel=\"nofollow noreferrer\">Rust book</a> and looked at dozens of other posts and can't quite seem to figure out the syntax.  </p>\n\n<p>Question: How to change <code>bytes</code> declaration to fix the example above that illustrates the error?  And, if that is not supported or not idiomatic, what approach would work?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1969, "user_id": 18194, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4b0fa76af3c08ef9573c75202bbcb149?s=128&d=identicon&r=PG", "display_name": "Russell Myers", "link": "https://stackoverflow.com/users/18194/russell-myers"}, "is_accepted": true, "score": 2, "last_activity_date": 1570815276, "last_edit_date": 1570815276, "creation_date": 1570811002, "answer_id": 58345166, "question_id": 58345165, "link": "https://stackoverflow.com/questions/58345165/rust-function-requires-return-keyword-why/58345166#58345166", "title": "Rust function requires return keyword. Why?", "body": "<pre><code>fn connect() -&gt; Connection {\n    sqlite::open(\":memory:\").unwrap()\n}\n</code></pre>\n\n<p>Removing the semi-colon, changes the line from a <a href=\"https://doc.rust-lang.org/reference/statements.html\" rel=\"nofollow noreferrer\">statement</a> to an <a href=\"https://doc.rust-lang.org/reference/expressions.html\" rel=\"nofollow noreferrer\">expression</a>, which has a return value, which Rust can then infer as a return value for the function.</p>\n\n<p>This is covered at the very end <a href=\"https://doc.rust-lang.org/book/ch03-03-how-functions-work.html\" rel=\"nofollow noreferrer\">Chapter 3 of the Rust language</a> book as a specific example.</p>\n"}], "owner": {"reputation": 1969, "user_id": 18194, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/4b0fa76af3c08ef9573c75202bbcb149?s=128&d=identicon&r=PG", "display_name": "Russell Myers", "link": "https://stackoverflow.com/users/18194/russell-myers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 58345166, "answer_count": 1, "score": 0, "last_activity_date": 1570815276, "creation_date": 1570811002, "question_id": 58345165, "link": "https://stackoverflow.com/questions/58345165/rust-function-requires-return-keyword-why", "title": "Rust function requires return keyword. Why?", "body": "<p>I've been playing with Rust a bit, and I'm experimenting with eliminating <code>return</code> statements that aren't necessary. In one case, I feel as though a <code>return</code> statement shouldn't be required here, but I'm getting complaints that \"the body has no tail\". It seems like it should with the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use sqlite;\nuse sqlite::Connection\n\nfn main() {\n    let connection = connect();\n\n    query(connection);\n}\n\n// The offending function\nfn connect() -&gt; Connection {\n    // Simple example, shouldn't use unwrap\n    sqlite::open(\":memory:\").unwrap();\n}\n</code></pre>\n\n<p>I can add a <code>return</code> statement to the offending function like the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn connect() -&gt; Connection {\n    return sqlite::open(\":memory:\").unwrap();\n}\n</code></pre>\n\n<p>But I'm curious why this doesn't work.</p>\n"}, {"tags": ["memory", "websocket", "rust", "mutex", "shared-memory"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570803926, "post_id": 58343186, "comment_id": 103041717, "body": "And why should it not be? Have you timed how long it takes for <code>listen</code> to call the callback you provided? Is it even being called? If so, is it called after or before 1s? This <code>listen()</code> method is opaque and not provided in the question; it could be taking 6 hours to do anything, for all we know."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570803994, "post_id": 58343186, "comment_id": 103041758, "body": "Why don&#39;t you use a channel?"}, {"owner": {"reputation": 105, "user_id": 7231732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hsQm7.png?s=128&g=1", "display_name": "Louis Beaumont", "link": "https://stackoverflow.com/users/7231732/louis-beaumont"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570806280, "post_id": 58343186, "comment_id": 103043071, "body": "Thanks @S&#233;bastienRenauld found out out is called when a client connect actually ..."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570806378, "post_id": 58343186, "comment_id": 103043114, "body": "@LouisBeaumont Always investigate with either a breakpoint or a good old <code>println!()</code> before assuming it&#39;s a problem within a core part of the language :-)"}, {"owner": {"reputation": 105, "user_id": 7231732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hsQm7.png?s=128&g=1", "display_name": "Louis Beaumont", "link": "https://stackoverflow.com/users/7231732/louis-beaumont"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570806476, "post_id": 58343186, "comment_id": 103043168, "body": "I wasn&#39;t assuming it&#39;s a problem of the language, was asking how to have out different of None :), @FrenchBoiethios I don&#39;t know about channels but will look into it thanks (but there is so few examples unfortunately)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570806551, "post_id": 58343186, "comment_id": 103043209, "body": "@LouisBeaumont That&#39;s the way you do what you want in Rust, not with a global variable. The ergonomic and performance are better."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570807313, "post_id": 58343186, "comment_id": 103043621, "body": "@LouisBeaumont Most people rarely use the core networking toolkit, preferring to layer <code>tokio</code> on top due to its significant advantages, particularly when handling more than one connection."}], "owner": {"reputation": 105, "user_id": 7231732, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hsQm7.png?s=128&g=1", "display_name": "Louis Beaumont", "link": "https://stackoverflow.com/users/7231732/louis-beaumont"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1570805869, "creation_date": 1570803459, "last_edit_date": 1570805869, "question_id": 58343186, "link": "https://stackoverflow.com/questions/58343186/rust-memory-sharing-between-thread", "title": "Rust memory sharing between thread", "body": "<p>I'm trying to share a <a href=\"https://docs.rs/ws/0.9.0/ws/trait.Handler.html\" rel=\"nofollow noreferrer\">Handler</a>(for websocket communication) and its properties between different threads using Mutex and Arc.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let shared_server = Arc::new(Mutex::new(Server { out: None }));\nlet c_shared_server = shared_server.clone();\nthread::spawn(move || {\n    listen(format!(\"{}:{}\", String::from(\"127.0.0.1\"), 3012), |out| {\n        c_shared_server.lock().unwrap().out = Some(out.clone());\n        move |msg| {\n            Ok(())\n        }\n    }).unwrap()\n});\nlet ten_millis = time::Duration::from_millis(1000);\nthread::sleep(ten_millis);\nprintln!(\"{:?}\", shared_server.lock().unwrap());\n</code></pre>\n\n<blockquote>\n  <p>Server { out: None }</p>\n</blockquote>\n\n<p>out shouldn't be None here, I want to use it then, any idea how i could accomplish this ?</p>\n"}, {"tags": ["winapi", "rust"], "comments": [{"owner": {"reputation": 7273, "user_id": 2193968, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1beed39f2b04409ff584a0af1d59325c?s=128&d=identicon&r=PG", "display_name": "Jerry Jeremiah", "link": "https://stackoverflow.com/users/2193968/jerry-jeremiah"}, "edited": false, "score": 1, "creation_date": 1570760440, "post_id": 58333397, "comment_id": 103024228, "body": "I don&#39;t know rust, but:  Don&#39;t you need to pass in an allocated piece of memory for the buffer?  Where do you allocate memory for the buffer?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1570774561, "post_id": 58333397, "comment_id": 103027244, "body": "The question is why. Why don&#39;t you just take the <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\" rel=\"nofollow noreferrer\"><code>File</code></a> struct?"}], "answers": [{"tags": [], "owner": {"reputation": 3, "user_id": 5875668, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ec9be762e4dd7b22e9acf2e4abe66bb?s=128&d=identicon&r=PG&f=1", "display_name": "Dan", "link": "https://stackoverflow.com/users/5875668/dan"}, "is_accepted": false, "score": 0, "last_activity_date": 1570761874, "creation_date": 1570761874, "answer_id": 58333570, "question_id": 58333397, "link": "https://stackoverflow.com/questions/58333397/opening-a-file-in-rust-using-windows-api/58333570#58333570", "title": "Opening a file in Rust using Windows API", "body": "<p>I figured it out.</p>\n\n<pre><code>let mut buffer_read = vec![0; 5];\n\nReadFile(file, buffer_read.as_mut_ptr() as _, 5, std::ptr::null_mut(), std::ptr::null_mut());\nprintln!(\"{}\", String::from_utf8(buffer_read));\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1570775648, "last_edit_date": 1592644375, "creation_date": 1570775648, "answer_id": 58335479, "question_id": 58333397, "link": "https://stackoverflow.com/questions/58333397/opening-a-file-in-rust-using-windows-api/58335479#58335479", "title": "Opening a file in Rust using Windows API", "body": "<p>Just because you <em>can</em> just link to the windows C <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-readfile\" rel=\"nofollow noreferrer\">file API</a> in Rust, does not mean you should. In particular, this robs you of a whole bunch of safeties granted by the language itself and mistakes made by you.</p>\n<p>In particular, your code currently has UB, as passing <code>NULL</code> to the last two parameters of <code>ReadFile</code> simultaneously is a situation explicitly warned against:</p>\n<blockquote>\n<p><strong>lpNumberOfBytesRead</strong></p>\n<p>A pointer to the variable that receives the number of bytes read when using a synchronous hFile parameter. ReadFile sets this value to zero before doing any work or error checking. Use NULL for this parameter if this is an asynchronous operation to avoid potentially erroneous results.</p>\n<p>This parameter can be NULL only when the <strong>lpOverlapped</strong> parameter is not NULL.</p>\n</blockquote>\n<p>In your case, the idiomatic way of doing this safely is the following:</p>\n<pre><code>let mut buffer_read = vec![0, 5];\nlet fhandle = std::fs::File::open(&quot;path/to/your/file&quot;)?;\nfhandle.read_exact(&amp;mut buffer_read)?;\nprintln!(&quot;{}&quot;, String::from_utf8(buffer_read));\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 5875668, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ec9be762e4dd7b22e9acf2e4abe66bb?s=128&d=identicon&r=PG&f=1", "display_name": "Dan", "link": "https://stackoverflow.com/users/5875668/dan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 0, "accepted_answer_id": 58335479, "answer_count": 2, "score": -3, "last_activity_date": 1570775648, "creation_date": 1570760248, "question_id": 58333397, "link": "https://stackoverflow.com/questions/58333397/opening-a-file-in-rust-using-windows-api", "title": "Opening a file in Rust using Windows API", "body": "<pre><code>let mut file = OpenFile(dll_path.as_bytes_with_nul().as_ptr() as _, &amp;mut ofstruct, 0) as *mut c_void;\nlet mut buffer_read: LPVOID = std::ptr::null_mut();\n\nReadFile(file, buffer_read, 5, std::ptr::null_mut(), std::ptr::null_mut());\n\nprintln!(\"{:?}\", buffer_read.is_null());\n</code></pre>\n\n<p>I'm having trouble finding the correct types for <code>buffer_read</code>, it's always null.</p>\n"}, {"tags": ["rust", "async-await", "future", "rust-actix"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570773274, "post_id": 58332707, "comment_id": 103026855, "body": "What do you need to <code>Pin</code> a future for? I&#39;d understand pinning the generator of the future for pinning the future itself feels very esoteric."}, {"owner": {"reputation": 89, "user_id": 3905292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e8802a093e310ecbe1f1d50bc8feac6?s=128&d=identicon&r=PG", "display_name": "Zac Pullar-Strecker", "link": "https://stackoverflow.com/users/3905292/zac-pullar-strecker"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570784632, "post_id": 58332707, "comment_id": 103031546, "body": "That happens because of the async-trait crate. See <a href=\"https://github.com/dtolnay/async-trait#explanation\" rel=\"nofollow noreferrer\">github.com/dtolnay/async-trait#explanation</a>"}], "answers": [{"tags": [], "owner": {"reputation": 89, "user_id": 3905292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e8802a093e310ecbe1f1d50bc8feac6?s=128&d=identicon&r=PG", "display_name": "Zac Pullar-Strecker", "link": "https://stackoverflow.com/users/3905292/zac-pullar-strecker"}, "is_accepted": true, "score": 1, "last_activity_date": 1571010895, "creation_date": 1571010895, "answer_id": 58368678, "question_id": 58332707, "link": "https://stackoverflow.com/questions/58332707/how-can-i-call-a-pinned-future-from-an-actix-handler/58368678#58368678", "title": "How can I call a Pinned future from an actix handler?", "body": "<p>The actual problem was not that the future was pinned, but that it implemented the wrong future trait.</p>\n\n<p><a href=\"https://rust-lang.github.io/async-book/04_pinning/01_chapter.html\" rel=\"nofollow noreferrer\">This section on Pinning</a> explains that <code>poll</code> is implemented for <code>Pin&lt;ref T: Future&gt;</code>.</p>\n\n<p>Hence, the <code>into_actor</code> signature <code>self: impl Future -&gt; WrapFuture&lt;_&gt;</code> was fine. The problem was that the <code>async</code> method returned a future implementing <code>std::future::Future</code> while <code>into_actor</code> expected <code>futures01::future::Future</code>.</p>\n\n<p>Calling <code>.compat()</code> on the future before calling <code>.into_actor</code> fixes the problem. </p>\n\n<p>See <a href=\"https://rust-lang-nursery.github.io/futures-rs/blog/2019/04/18/compatibility-layer.html\" rel=\"nofollow noreferrer\">this post</a> for more detail about converting futures.</p>\n"}], "owner": {"reputation": 89, "user_id": 3905292, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e8802a093e310ecbe1f1d50bc8feac6?s=128&d=identicon&r=PG", "display_name": "Zac Pullar-Strecker", "link": "https://stackoverflow.com/users/3905292/zac-pullar-strecker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 433, "favorite_count": 0, "accepted_answer_id": 58368678, "answer_count": 1, "score": 1, "last_activity_date": 1571010895, "creation_date": 1570753603, "last_edit_date": 1570755361, "question_id": 58332707, "link": "https://stackoverflow.com/questions/58332707/how-can-i-call-a-pinned-future-from-an-actix-handler", "title": "How can I call a Pinned future from an actix handler?", "body": "<p>I have an async trait method which returns a std Future:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>Pin&lt;Box&lt;dyn Future&lt;Output = Result&lt;Vec&lt;ResultType&gt;, Box&lt;(dyn Error + 'static)&gt;&gt;&gt; + Send&gt;&gt;\n</code></pre>\n\n<p><code>ResultType</code> is an associated type of the trait which is <code>Sync + Send</code>.</p>\n\n<p>Note that this type <strong>is not Unpin</strong>.</p>\n\n<p>I want to call this from an actix handler, then do something with the result.</p>\n\n<p>For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl StreamHandler&lt;ws::Message, ws::ProtocolError&gt; for MyActor {\n    fn handle(&amp;mut self, msg: ws::Message) {\n        let fut = get_future();\n        let actor_fut = fut\n            .into_actor(&amp;self)\n            .map(|r, _actor, ctx| {\n                ctx.text(r.map(|| ...))\n            });\n\n        ctx.spawn(actor_fut);\n    }\n}\n</code></pre>\n\n<p>This fails because <code>into_actor</code> takes ownership of the future, which is not allowed by <code>Pin</code>. The cleaned error message looks like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>error[E0599]: no method named `into_actor` found for type `Pin&lt;Box&lt;dyn Future&lt;Output = Result&lt;Vec&lt;ResultType&gt;, Box&lt;dyn Error&gt;&gt;&gt; + Send&gt;&gt;` in the current scope\n   --&gt; src/app_socket.rs:194:26\n    |\n194 |                         .into_actor(&amp;self)\n    |                          ^^^^^^^^^^ method not found in `Pin&lt;Box&lt;dyn Future&lt;Output = Result&lt;Vec&lt;ResultType&gt;, Box&lt;dyn Error&gt;&gt;&gt; + Send&gt;&gt;`\n    |\n    = note: the method `into_actor` exists but the following trait bounds were not satisfied:\n            `&amp;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send : WrapFuture&lt;_&gt;`\n            `&amp;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send : WrapStream&lt;_&gt;`\n            `&amp;mut dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send : WrapFuture&lt;_&gt;`\n            `&amp;mut dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send : WrapStream&lt;_&gt;`\n            `&amp;mut Pin&lt;std::boxed::Box&lt;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send&gt;&gt; : WrapFuture&lt;_&gt;`\n            `&amp;mut Pin&lt;std::boxed::Box&lt;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send&gt;&gt; : WrapStream&lt;_&gt;`\n            `&amp;Pin&lt;std::boxed::Box&lt;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send&gt;&gt; : WrapFuture&lt;_&gt;`\n            `&amp;Pin&lt;std::boxed::Box&lt;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send&gt;&gt; : WrapStream&lt;_&gt;`\n            `dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send : WrapFuture&lt;_&gt;`\n            `dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send : WrapStream&lt;_&gt;`\n            `Pin&lt;std::boxed::Box&lt;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send&gt;&gt; : WrapFuture&lt;_&gt;`\n            `Pin&lt;std::boxed::Box&lt;dyn Future&lt;Output = Result&lt;std::vec::Vec&lt;ResultType&gt;, std::boxed::Box&lt;dyn std::error::Error&gt;&gt;&gt; + Send&gt;&gt; : WrapStream&lt;_&gt;`\n</code></pre>\n\n<p>How can I do this?</p>\n"}, {"tags": ["arrays", "rust", "sieve-of-eratosthenes"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 12197651, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b42daa34057986e2fd8e9f4e154a0d53?s=128&d=identicon&r=PG&f=1", "display_name": "brasides", "link": "https://stackoverflow.com/users/12197651/brasides"}, "edited": false, "score": 0, "creation_date": 1571016411, "post_id": 58331830, "comment_id": 103088244, "body": "Hey thanks for all your suggestions! I incorporated some of the changes you mentioned into the edit above. I&#39;d love to hear your take on them."}], "tags": [], "owner": {"reputation": 1022, "user_id": 5863987, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/z7wZz.png?s=128&g=1", "display_name": "NieDzejkob", "link": "https://stackoverflow.com/users/5863987/niedzejkob"}, "is_accepted": true, "score": 2, "last_activity_date": 1570746521, "last_edit_date": 1570746521, "creation_date": 1570745986, "answer_id": 58331830, "question_id": 58331674, "link": "https://stackoverflow.com/questions/58331674/how-to-set-upper-bound-in-array-size-in-nth-prime-using-eratoshenes-sieve/58331830#58331830", "title": "How to set upper bound in array size in nth prime using Eratoshenes Sieve?", "body": "<h3>Using a variable array size</h3>\n\n<p>Unfortunately, it is not possible to have a variable-length array on the stack. You can use a vector to allocate it on the heap:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut primes: Vec&lt;bool&gt; = vec![true; estimate_size(n)];\n</code></pre>\n\n<h3>Estimating the required size</h3>\n\n<p>This problem <a href=\"https://stackoverflow.com/a/29550463/5863987\">has been described here before</a>, although not in Rust. The idea is to use an upper bound formula for the n-th prime:</p>\n\n<p>p<sub>n</sub> &lt; n ln (n ln n)</p>\n\n<p>For <code>u32</code>, you can use floats to calculate this:</p>\n\n<pre><code>// I'm making it a separate function for demonstration purposes. You might want to not do that.\nfn estimate_size(n: u32) -&gt; usize {\n    let n = n as f64;\n    (n * (n * n.ln()).ln()).ceil() as usize\n}\n</code></pre>\n\n<h3>Rust code style</h3>\n\n<p>As far as improving your code goes, I don't see why you're using <code>usize</code>s, since you're only storing zeroes and ones. This is a perfect use-case for <code>bool</code>, which should result in an eight-fold reduction in memory use.</p>\n\n<p>The <code>output</code> variable isn't really necessary, it would be better to use a <code>return</code> to exit early. You could then label the end of the function with <code>unreachable!()</code>.</p>\n\n<p>Also, the innermost loop can also be written this way, and I think that's nicer:</p>\n\n<pre><code>for j in (2*i ..= primes.len()).step_by(i) {\n    primes[j] = false;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2427, "user_id": 4983398, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fbc9ed33d775a17d6965fd2efbfe4b52?s=128&d=identicon&r=PG", "display_name": "Gardener", "link": "https://stackoverflow.com/users/4983398/gardener"}, "is_accepted": false, "score": 1, "last_activity_date": 1570806172, "creation_date": 1570806172, "answer_id": 58343972, "question_id": 58331674, "link": "https://stackoverflow.com/questions/58331674/how-to-set-upper-bound-in-array-size-in-nth-prime-using-eratoshenes-sieve/58343972#58343972", "title": "How to set upper bound in array size in nth prime using Eratoshenes Sieve?", "body": "<p>The standard formula for the size of a sieve is ln (n ln n) for n \u2265 6.  See <a href=\"https://en.wikipedia.org/wiki/Prime-counting_function#Inequalities\" rel=\"nofollow noreferrer\">Wikipedia</a>.  </p>\n\n<p>If you use the ceiling function, ceiling(ln (n ln(n)), then the formula works for n >= 3.  However, it does not work for 1 and 2.  For n=1, you get an error for taking ln(0) on the second ln() call, but it should be 2.  For n=2, the sieve needs to be 3.</p>\n\n<p>So, check for n &lt;3 as shown below.  </p>\n\n<pre><code>fn get_sieve_size(n: u32) -&gt; usize {\n    if n &lt; 3 {\n        (n + 1) as usize\n    } else {\n        let n = n as f64;\n        (n * (n * n.ln()).ln()).ceil() as usize\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 12197651, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b42daa34057986e2fd8e9f4e154a0d53?s=128&d=identicon&r=PG&f=1", "display_name": "brasides", "link": "https://stackoverflow.com/users/12197651/brasides"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "accepted_answer_id": 58331830, "answer_count": 2, "score": 2, "last_activity_date": 1571017593, "creation_date": 1570744899, "last_edit_date": 1571017593, "question_id": 58331674, "link": "https://stackoverflow.com/questions/58331674/how-to-set-upper-bound-in-array-size-in-nth-prime-using-eratoshenes-sieve", "title": "How to set upper bound in array size in nth prime using Eratoshenes Sieve?", "body": "<p>With n as input, I am trying to output the nth prime. The Eratosthenes Sieve seemed a good way to do this, but I am having trouble with the size of the array to be sieved.</p>\n\n<p>I use an array in which every member is 1, and represents a number. If the sieve filters out the number, the value is changed to 0, which means the number is not prime. Once it arrives at the nth member which has a value of 1, the index value is returned.</p>\n\n<p>I am trying to set a reasonable array size for any given n. But I have two problems.</p>\n\n<ol>\n<li><p>Because I seem to be required to set the size of the array to a constant value, I cannot find a way to use the size of n to approximate the required array size. This means I am always using an array of 10e6 magnitude, even when n is small.</p></li>\n<li><p>This approach relies on having a large array, because it uses early values to change later values. This means that for n > 10e7, my array blows the stack. Is there a way around this problem without going to the heap?</p></li>\n</ol>\n\n<p>I've tried to solve the first problem by using <code>const</code> like this:</p>\n\n<pre><code>pub fn nth(n: u32) -&gt; u32 {\n    const ARRAY_SIZE : usize = f(n) // where f(n) is some approximation of required array size\n    let mut primes: [usize; ARRAY_SIZE] = [1; ARRAY_SIZE];\n    ...\n}\n</code></pre>\n\n<p>However, it does not get around the requirement to have a fixed array size.</p>\n\n<p>Any suggestions? Also I am very new to rust and any suggestions to make it more rust-like are welcome.</p>\n\n<p>Below is my attempt which has a fixed size array and works for values of n &lt;= 10,000:</p>\n\n<pre><code>pub fn nth(n: u32) -&gt; u32 {\n    // Eratosthene's Sieve Algorithm\n    let mut output: u32 = 0;\n    let mut primes: [usize; 104_827] = [1; 104_827];\n    primes[0] = 0;\n    primes[1] = 0;\n\n    let mut prime_count = 0;\n\n    for i in 2..(primes.len() as usize) {\n        if primes[i] == 1 {\n            if prime_count == n as usize { output = i as u32; }\n            prime_count += 1;\n\n            let mut j: usize = 2;\n            while i * j &lt;= primes.len() as usize {\n                primes[i * j] = 0;\n                j += 1;\n            }\n        }\n    }\n    output\n}\n</code></pre>\n\n<hr>\n\n<p>edit:\nThanks for the great answers! I've changed the function to use the <code>(n * (n * n.ln()).ln())</code> estimation, replaced the array of usize with a vector of bools. Shame I can't seem to make the lower values of this work on just the stack, because the array-based method is faster than the vector-based method, when the array size is close to the approximation.</p>\n\n<p>I tried to use the early return and dispense with <code>output</code> but couldn't figure out how to make it work. I have my code at the end of this edit with lines commented out with where I tried to put the early return and <code>unreachable!()</code> but it always panicked on me. If someone can point out my mistake that would be great.</p>\n\n<p>I was going to change the inner-most <code>while</code> loop into a <code>for</code> loop as suggested by NieDzejkob, but when I ran the numbers for speed of <code>while</code> vs <code>for</code>, I found the <code>while</code> loop to be faster. Does anyone know why this might be?</p>\n\n<p>Also I had some problems with 0-9th, 11th, and 12th primes, so I just set the approximation to work above this range.</p>\n\n<blockquote>\n  <p>100th prime while_func = 547, for_func = 547<br>\n      prime while_func 152.431\u00b5s vs for_func 216.043\u00b5s<br>\n  1000th prime while_func = 7927, for_func = 7927<br>\n      prime while_func 2.099213ms vs for_func 3.362854ms<br>\n  10000th prime while_func = 104743, for_func = 104743<br>\n      prime while_func 28.162967ms vs for_func 44.967197ms<br>\n  100000th prime while_func = 1299721, for_func = 1299721<br>\n      prime while_func 339.324756ms vs for_func 559.755934ms<br>\n  1000000th prime while_func = 15485867, for_func = 15485867<br>\n      prime while_func 4.151047728s vs for_func 6.950281943s  </p>\n</blockquote>\n\n<pre><code>pub fn nth(n: u32) -&gt; u32 {\n    // Eratosthene's Sieve Algorithm\n    let estimate = estimate_size(n);\n    let mut primes: Vec&lt;bool&gt; = vec![true; estimate + 1];\n\n    primes[0] = false;\n    primes[1] = false;\n\n    let mut output: u32 = 0; // remove if unreachable!() works\n    let mut prime_count: u32 = 0;\n\n    for i in 2..(estimate) {\n        if primes[i] == true {\n            if prime_count == n { output = i as u32; }\n//            if prime_count == n { return i as u32; }\n            prime_count += 1;\n\n            let mut j: usize = 2;\n            while i * j &lt;= estimate {\n                primes[i * j] = false;\n                j += 1;\n            }\n//            for j in (2*i ..= estimate).step_by(i) {\n//                primes[j] = false;\n//            }\n        }\n    }\n    output\n//  unreachable!()\n}\n\nfn estimate_size(n: u32) -&gt; usize {\n    if n &lt; 14 {\n        44 as usize\n    } else {\n        let n = n as f64;\n        (n * (n * n.ln()).ln()).ceil() as usize\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "jwt", "deserialization", "serde"], "answers": [{"tags": [], "owner": {"reputation": 43, "user_id": 1295753, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3be019935a0ce59a774aa81858b1d070?s=128&d=identicon&r=PG", "display_name": "tylerj", "link": "https://stackoverflow.com/users/1295753/tylerj"}, "is_accepted": false, "score": 0, "last_activity_date": 1570813260, "creation_date": 1570813260, "answer_id": 58345643, "question_id": 58325600, "link": "https://stackoverflow.com/questions/58325600/how-should-i-enforce-deserialization-types-for-jsonwebtokens-in-rust/58345643#58345643", "title": "How should I enforce Deserialization types for jsonwebtokens in rust?", "body": "<p>The solution I ended up using was to implement the following train for each claim struct I have.</p>\n\n<pre><code>trait ClaimType {\n    fn is_type() -&gt; TokenType;\n    fn has_type(&amp;self) -&gt; TokenType;\n}\n</code></pre>\n\n<p>Then in my validate I did</p>\n\n<pre><code>if T::is_type() == tokendata.claims.has_type() {\n    return Ok(tokendata.claims);\n}\n\nErr(InvalidToken{\n    cause: \"Wrong token type\".to_string()\n})\n</code></pre>\n\n<p>Im sure there is probably a way to use a macro to impl the trait for me, or have the library itself enforce some deserialization check. But the above gets it done</p>\n"}], "owner": {"reputation": 43, "user_id": 1295753, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3be019935a0ce59a774aa81858b1d070?s=128&d=identicon&r=PG", "display_name": "tylerj", "link": "https://stackoverflow.com/users/1295753/tylerj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 90, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1570813260, "creation_date": 1570718705, "question_id": 58325600, "link": "https://stackoverflow.com/questions/58325600/how-should-i-enforce-deserialization-types-for-jsonwebtokens-in-rust", "title": "How should I enforce Deserialization types for jsonwebtokens in rust?", "body": "<p>The following is a token creation tool I have created using jsonwebtoken.\nI want to somehow enforce the expected token type such that if I pass a token string in and tell it the claim set I expect, it wont return a successful result.</p>\n\n<p>Below includes test cases with comments about where I think this service should fail, and a comment in the code where I think the assertion should take place. </p>\n\n<p>How can I enforce these claim types to be sure I get the token type I want?</p>\n\n<pre><code>use jwt;\nuse jwt::{ Header, Validation };\nuse std::convert::AsRef;\nuse serde::de::DeserializeOwned;\nuse serde::Serialize;\n\n#[derive(Debug, Serialize, Deserialize, PartialEq)]\nenum TokenType {\n    User,\n    Reg,\n}\n#[derive(Debug, Serialize, Deserialize, PartialEq)]\npub struct RegisterClaims {\n    typ:TokenType,\n    org_name:String,\n    name:String,\n    email:String,\n    exp: usize,\n}\n\n#[derive(Debug, Serialize, Deserialize, PartialEq)]\npub struct UserClaims {\n    typ:TokenType,\n    usr_id:String,\n    sub:String,\n    exp: usize,\n}\n\n#[derive(Debug)]\npub struct InvalidToken {\n    cause: String,\n}\n\npub struct TokenFactory {\n    secret:String,\n}\n\nimpl TokenFactory {\n    pub fn new(secret:String) -&gt; TokenFactory {\n        TokenFactory {\n            secret\n        }\n    }\n\n    pub fn validate&lt;T: DeserializeOwned&gt;(&amp;self, raw_token:String) -&gt; Result&lt;T, InvalidToken&gt; {\n        match jwt::decode::&lt;T&gt;(&amp;raw_token, self.secret.as_ref(), &amp;Validation::default()) {\n            Ok(tokendata) =&gt; {\n                /*\n                some how assert the type of T to match and return an Err if not matched\n                What\n                */\n                Ok(tokendata.claims)\n            },\n            Err(err) =&gt; {\n                // todo: in the future check error kind and give better errors\n                Err(InvalidToken{\n                    cause: err.to_string()\n                })\n            }\n        }\n    }\n\n    pub fn mint_token&lt;T: Serialize&gt;(&amp;self, claims:&amp;T) -&gt; String {\n        jwt::encode(&amp;Header::default(), claims, self.secret.as_ref()).unwrap()\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n    use crate::util;\n    use std::borrow::Borrow;\n\n    #[test]\n    fn test_valid() {\n        let usr = UserClaims {\n            typ: TokenType::User,\n            sub:\"foobar@gmail.com\".to_string(),\n            exp:util::current_time_secs()+1,\n            usr_id:\"usr-1234\".to_string(),\n        };\n\n        let tf = TokenFactory::new(\"my_sceret\".to_string());\n\n        let token = tf.mint_token(usr.borrow());\n\n        let usr_claims: UserClaims = tf.validate(token).unwrap();\n\n        assert_eq!(usr.sub, usr_claims.sub);\n    }\n\n    #[test]\n    fn test_mixed() {\n        let reg = RegisterClaims {\n            typ:TokenType::Reg,\n            org_name:\"foo\".to_string(),\n            name:\"bar\".to_string(),\n            email:\"foobar@inc\".to_string(),\n            exp:util::current_time_secs()+1,\n        };\n\n        let tf = TokenFactory::new(\"my_sceret\".to_string());\n\n        let token = tf.mint_token(reg.borrow());\n\n        let usr_claims: UserClaims = tf.validate(token).unwrap(); // want it to fail here\n\n        assert_eq!(reg, usr_claims); // fails here\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1570732149, "post_id": 58324940, "comment_id": 103016208, "body": "Creating a reference from a null pointer is undefined behaviour, immediately, regardless of what you do with the reference."}, {"owner": {"reputation": 13, "user_id": 12195421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e1f25ae2dddd731c0bbc5f6f393694?s=128&d=identicon&r=PG&f=1", "display_name": "bob4433", "link": "https://stackoverflow.com/users/12195421/bob4433"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570763535, "post_id": 58324940, "comment_id": 103024760, "body": "Yes, didn&#39;t I indicate it as such? By &quot;works&quot;, I mean it compiles. That code won&#39;t even print &quot;checked_call_with_ref: null&quot; if you run it on the playground."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570777920, "post_id": 58324940, "comment_id": 103028530, "body": "Sure, you indicated that it is &quot;potentially undefined behaviour&quot;, which I think is a bit weaker than &quot;definitely undefined behaviour, regardless of what you do with the reference&quot;. (The comment wasn&#39;t necessarily meant for you, but rather for other people looking at this question in the future \u2013 you never know what kind of context will be useful for them.)"}, {"owner": {"reputation": 13, "user_id": 12195421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e1f25ae2dddd731c0bbc5f6f393694?s=128&d=identicon&r=PG&f=1", "display_name": "bob4433", "link": "https://stackoverflow.com/users/12195421/bob4433"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570783553, "post_id": 58324940, "comment_id": 103031036, "body": "I see your point. I edited the question appropriately."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 12195421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e1f25ae2dddd731c0bbc5f6f393694?s=128&d=identicon&r=PG&f=1", "display_name": "bob4433", "link": "https://stackoverflow.com/users/12195421/bob4433"}, "edited": false, "score": 0, "creation_date": 1570725959, "post_id": 58326285, "comment_id": 103013536, "body": "I&#39;m dealing with potentially null pointers on my code. I edited my question to reflect this. I can either 1) do a null check on every call site of the function, violating DRY principle or 2) do a ptr -&gt; ref -&gt; ptr conversion, then check that last resulting pointer but I was told that this is <a href=\"https://www.reddit.com/r/rust/comments/deeoph/hey_rustaceans_got_an_easy_question_ask_here/f35wpof\" rel=\"nofollow noreferrer\">undefined behavior</a>."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 3, "last_activity_date": 1570721392, "last_edit_date": 1570721392, "creation_date": 1570720918, "answer_id": 58326285, "question_id": 58324940, "link": "https://stackoverflow.com/questions/58324940/how-to-bound-a-type-on-a-recursive-stdopsderef/58326285#58326285", "title": "How to bound a type on a recursive std::ops::Deref?", "body": "<p><code>Deref</code> coercions are applied automatically by the compiler, so there is rarely any reason to make it an explicit bound. Just write <code>call_foo</code> to accept <code>&amp;A</code>.</p>\n\n<pre><code>fn call_foo(obj: &amp;A) {\n    print!(\"Call from fn: \");\n    obj.foo();\n}\n</code></pre>\n\n<p>See also</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/53294663/program-with-multiple-ampersand-works-fine\">Program with multiple ampersand works fine</a></li>\n<li><a href=\"https://stackoverflow.com/questions/53341819/what-is-the-relation-between-auto-dereferencing-and-deref-coercion\">What is the relation between auto-dereferencing and deref coercion?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are Rust&#39;s exact auto-dereferencing rules?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 0, "last_activity_date": 1570827109, "last_edit_date": 1570827109, "creation_date": 1570825665, "answer_id": 58348049, "question_id": 58324940, "link": "https://stackoverflow.com/questions/58324940/how-to-bound-a-type-on-a-recursive-stdopsderef/58348049#58348049", "title": "How to bound a type on a recursive std::ops::Deref?", "body": "<p>One solution is to introduce a helper trait that you recursively define for types that dereference to <code>A</code>:</p>\n\n<pre><code>use std::ops::Deref;\n\nstruct A;\n\nimpl A {\n    fn foo(&amp;self) {\n        println!(\"foo\");\n    }\n}\n\nstruct B;\n\nimpl Deref for B {\n    type Target = A;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;A\n    }\n}\n\nstruct C;\n\nimpl Deref for C {\n    type Target = B;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;B\n    }\n}\n\ntrait DerefA {\n    fn get_a(&amp;self) -&gt; &amp;A;\n}\n\nimpl DerefA for A {\n    fn get_a(&amp;self) -&gt; &amp;A {\n        self\n    }\n}\n\nimpl&lt;T&gt; DerefA for T\nwhere\n    T: Deref,\n    T::Target: DerefA,\n{\n    fn get_a(&amp;self) -&gt; &amp;A {\n        (**self).get_a()\n    }\n}\n\nfn glonk&lt;T: DerefA&gt;(p: *const T) {\n    if p.is_null() {\n        println!(\"Called with null pointer.\");\n    } else {\n        let a = unsafe { &amp;*p };\n        a.get_a().foo();\n    }\n}\n\nfn main() {\n    let c = C;\n    let ref_to_c = &amp;c;\n    let ptr_to_c: *const C = ref_to_c;\n    glonk(ptr_to_c);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b36f60edd1957ceb63d7c82a9ad3b4f0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>The helper trait <code>DerefA</code> is implemented for <code>A</code> itself, and then recursively for any type that dereferences to a type implementing <code>DerefA</code>. We don't get to use the compilers implicit dereferencing for our custom trait, so we need to explicitly call <code>get_a()</code> to derefence the whole chain to <code>A</code>.</p>\n\n<p>I personally would be very reluctant to use something like this in real code, but it does what you asked for, and I also think it's a fun solution.</p>\n"}], "owner": {"reputation": 13, "user_id": 12195421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5e1f25ae2dddd731c0bbc5f6f393694?s=128&d=identicon&r=PG&f=1", "display_name": "bob4433", "link": "https://stackoverflow.com/users/12195421/bob4433"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "accepted_answer_id": 58348049, "answer_count": 2, "score": 1, "last_activity_date": 1570827109, "creation_date": 1570716649, "last_edit_date": 1570783487, "question_id": 58324940, "link": "https://stackoverflow.com/questions/58324940/how-to-bound-a-type-on-a-recursive-stdopsderef", "title": "How to bound a type on a recursive std::ops::Deref?", "body": "<p>I want to bound a type based on a function it can reach via deref coercions. Problem is bounding on Deref only works on one level of coercion.</p>\n\n<pre><code>\nstruct A {}\n\nimpl A {\n    fn foo(&amp;self) {\n        println!(\"foo\");\n    }\n}\n\nstruct B {}\n\nimpl Deref for B {\n    type Target = A;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;A{}\n    }\n}\n\nstruct C {}\n\nimpl Deref for C {\n    type Target = B;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;B{}\n    }\n}\n\nfn call_with_ref(obj: &amp;A) {\n    print!(\"call_with_ref: \");\n    obj.foo();\n}\n\nfn checked_call_with_ref(obj: &amp;A) {\n    let ptr: *const A = obj;\n    if !ptr.is_null() {\n        print!(\"checked_call_with_ref: \");\n        obj.foo();   \n    } else {\n        println!(\"checked_call_with_ref: null\")\n    }\n}\n\nfn call_with_pointer&lt;T: Deref&lt;Target = A&gt;&gt;(ptr: *const T) {\n    if !ptr.is_null() {\n        print!(\"call_with_pointer: \");\n        unsafe { (*ptr).foo() };   \n    }\n}\n\nfn main() {\n    let c = C{};\n    let ref_to_c = &amp;c;\n    let mut ptr_to_c: *const C = ref_to_c;\n    ref_to_c.foo(); // works\n    call_with_ref(ref_to_c); // works\n    // call_with_pointer(ptr_to_C); // does not work bec. it derefs to B\n\n    unsafe { checked_call_with_ref(&amp;*ptr_to_c) }; // works on non-nulls\n    ptr_to_c = std::ptr::null();\n    unsafe { checked_call_with_ref(&amp;*ptr_to_c) }; // undefined behavior on null pointers\n\n    // have to put null check on each call site\n    if let Some(ref_to_obj) = unsafe { ptr_to_c.as_ref() } {\n        call_with_ref(ref_to_obj);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a7996ab3ac565e1d45091bbc1087080d\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>The foo function here is only implemented by <code>A</code>. Refs to <code>B</code> can call it with a direct coerce while refs to <code>C</code> can still call it via deref-ing to B. <code>Deref&lt;Target = A&gt;</code> is not the proper bound as <code>C</code> implements <code>Deref&lt;Target = B&gt;</code>. Does Rust have some sort of <code>Coercible</code> trait?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 7367, "user_id": 933879, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9ea2cb8b89abb71678e847a5a88949ed?s=128&d=identicon&r=PG", "display_name": "Nathan Friedly", "link": "https://stackoverflow.com/users/933879/nathan-friedly"}, "edited": false, "score": 1, "creation_date": 1570733409, "post_id": 58328812, "comment_id": 103016719, "body": "Posted the Cargo.toml. I had looked at your linked question already, but I don&#39;t think it answer the issue I was having.  I&#39;m on a nightly from about 4 days before that stabilization merge, but it&#39;s locked in to keep the team all on the same version.  However, I figured out the issue with my last variation and posted an answer below that works without needing any additional libraries (or a newer rust version)."}, {"owner": {"reputation": 56, "user_id": 5021006, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153802567960715/picture?type=large", "display_name": "Joel Macaluso", "link": "https://stackoverflow.com/users/5021006/joel-macaluso"}, "reply_to_user": {"reputation": 7367, "user_id": 933879, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9ea2cb8b89abb71678e847a5a88949ed?s=128&d=identicon&r=PG", "display_name": "Nathan Friedly", "link": "https://stackoverflow.com/users/933879/nathan-friedly"}, "edited": false, "score": 1, "creation_date": 1570734301, "post_id": 58328812, "comment_id": 103017109, "body": "Terrific that you solved the issue.  Wish I could have been of more help!"}], "tags": [], "owner": {"reputation": 56, "user_id": 5021006, "user_type": "registered", "profile_image": "https://graph.facebook.com/10153802567960715/picture?type=large", "display_name": "Joel Macaluso", "link": "https://stackoverflow.com/users/5021006/joel-macaluso"}, "is_accepted": false, "score": 1, "last_activity_date": 1570731052, "creation_date": 1570731052, "answer_id": 58328812, "question_id": 58323612, "link": "https://stackoverflow.com/questions/58323612/how-do-i-assert-that-a-rust-futures-preview-future-has-not-yet-resolved/58328812#58328812", "title": "How do I assert that a Rust futures-preview future has not yet resolved", "body": "<p>Could you kindly post your Cargo.toml and any use statements that belong to the example code? I can't run your code but after looking over your test example and error message I believe there are some <a href=\"https://stackoverflow.com/questions/27454761/what-is-a-crate-attribute-and-where-do-i-add-it\">related questions</a> (and here) that may help you.</p>\n\n<p>Can you try updating to the latest version of nightly and see if it fixes the issue? It appears the feature was <a href=\"https://github.com/rust-lang/rust/pull/63118\" rel=\"nofollow noreferrer\">recently stabilized</a>.</p>\n\n<pre><code>rustup update nightly\n</code></pre>\n\n<p>This is assuming you are using the nightly version of the rust compiler.</p>\n\n<p>Best of luck.</p>\n"}, {"tags": [], "owner": {"reputation": 7367, "user_id": 933879, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9ea2cb8b89abb71678e847a5a88949ed?s=128&d=identicon&r=PG", "display_name": "Nathan Friedly", "link": "https://stackoverflow.com/users/933879/nathan-friedly"}, "is_accepted": false, "score": 0, "last_activity_date": 1570733978, "last_edit_date": 1570733978, "creation_date": 1570732944, "answer_id": 58329232, "question_id": 58323612, "link": "https://stackoverflow.com/questions/58323612/how-do-i-assert-that-a-rust-futures-preview-future-has-not-yet-resolved/58329232#58329232", "title": "How do I assert that a Rust futures-preview future has not yet resolved", "body": "<p>Figured it out (with a little help). My final attempt was close but was doing too much. This is a simplified version that actually works:</p>\n\n<pre><code>    #[test]\n    fn test_trigger_future_untriggered() {\n        let tf = TriggerFuture::default();\n        let f1 = tf.future();\n\n        tf.trigger();\n\n        ThreadPool::default()\n            .spawn_wait::&lt;_, _, &amp;str&gt;(async {\n                use futures_timer::Delay;\n                let delay = Delay::new(std::time::Duration::from_millis(50));\n                let res = future::select(f1, delay).await;\n                match res {\n                    Either::Left(..) =&gt; Err(\"The TriggerFuture resolved first\"),\n                    Either::Right(..) =&gt; Ok(()),\n                }\n            })\n            .expect(\"The Delay should have resolved first\");\n    }\n</code></pre>\n"}], "owner": {"reputation": 7367, "user_id": 933879, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9ea2cb8b89abb71678e847a5a88949ed?s=128&d=identicon&r=PG", "display_name": "Nathan Friedly", "link": "https://stackoverflow.com/users/933879/nathan-friedly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1570733978, "creation_date": 1570712716, "last_edit_date": 1570732982, "question_id": 58323612, "link": "https://stackoverflow.com/questions/58323612/how-do-i-assert-that-a-rust-futures-preview-future-has-not-yet-resolved", "title": "How do I assert that a Rust futures-preview future has not yet resolved", "body": "<p>I'm trying to bring my dependencies up-to-date. I have some code that uses futures-preview and futures-timer. Earlier versions of futures-timer included the ability to put a timeout on a future, and I have a test that uses this feature, but it was <a href=\"https://github.com/async-rs/futures-timer/commit/f3d1d77cf6e9c7c84a7f128913676e7cf2ae16ef\" rel=\"nofollow noreferrer\">removed</a> from recent releases. </p>\n\n<p>Is there a straightforward way of just checking to see if the future has resolved and then fail the test if it has? (Also, is \"resolved\" the correct word?)</p>\n\n<p>I tried playing around with <code>f1.poll()</code> but couldn't quite figure out the return type and how to work with it.</p>\n\n<p>I also tried using the <a href=\"https://docs.rs/async-std/0.99.9/async_std/future/fn.timeout.html\" rel=\"nofollow noreferrer\">timeout from async_std</a> but I got a bunch of errors along these lines:</p>\n\n<pre><code>error[E0008]: cannot bind by-move into a pattern guard\n   --&gt; /Users/nathan/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-0.99.9/src/net/driver/mod.rs:207:17\n    |\n207 |             Err(err) if err.kind() == io::ErrorKind::WouldBlock =&gt; {}\n    |                 ^^^ moves value into pattern guard\n    |\n    = help: add `#![feature(bind_by_move_pattern_guards)]` to the crate attributes to enable\n</code></pre>\n\n<p>Unless I'm mistaken, that's asking me to modify async-std, right? Is there a way around that?</p>\n\n<p>Here's my test:</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    use super::*;\n    use crate::threadpool::ThreadPool;\n    use futures_timer::TryFutureExt;\n\n    // ....\n\n    #[test]\n    fn test_trigger_future_untriggered() {\n        let tf = TriggerFuture::default();\n        let f1 = tf.future();\n\n        ThreadPool::default()\n            .spawn_wait::&lt;_, _, ()&gt;(async {\n                f1.map(|_| Result::&lt;(), std::io::Error&gt;::Ok(()))\n                    .timeout(std::time::Duration::from_millis(50))\n                    .await\n                    .expect_err(\"expected timeout\");\n                Ok(())\n            })\n            .expect(\"expected!\");\n    }\n}\n</code></pre>\n\n<p>Update: Here's one more thing I tried. With futures-timer v1.0.1, it fails as expected if I uncomment the <code>tf.trigger()</code>, but it runs forever when I don't. What's wrong here?</p>\n\n<pre><code>    #[test]\n    fn test_trigger_future_untriggered() {\n        let tf = TriggerFuture::default();\n        let f1 = tf.future();\n\n        // tf.trigger();\n\n        ThreadPool::default()\n            .spawn_wait::&lt;_, _, _&gt;(async {\n                use futures_timer::Delay;\n                let delay = Delay::new(std::time::Duration::from_millis(50));\n                future::select(f1, delay).then(|either| {\n                    match either {\n                        Either::Left((_, b)) =&gt; b.map(move |y| (Err(\"this future shoudn't resolve\"), y)).left_future(),\n                        Either::Right((_, a)) =&gt; a.map(move |x| (Ok(\"expected timeout\"), x)).right_future(),\n                    }\n                }).await.0\n            })\n            .expect(\"expected!\");\n    }\n</code></pre>\n\n<p>Here is my Cargo.toml as requested:</p>\n\n<pre><code>[package]\nname = \"shared_futures\"\nversion = \"0.1.0\"\npublish = false\nedition = \"2018\"\n\n[dependencies]\nfutures-preview = { version = \"0.3.0-alpha.19\", features = [ \"async-await\", \"compat\" ] }\ncrossbeam-channel = \"0.3.9\"\nnum_cpus = \"1.10.1\"\n# Note: the timeout feature was removed in futures-timer v0.6\nfutures-timer = \"1.0.1\"\n\n[features]\nsanitizer_safe = []\n\n[lib]\nname = \"shared_futures\"\ncrate-type = [\"rlib\"]\n</code></pre>\n"}, {"tags": ["rust", "iterator", "trait-objects", "mutable-reference"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1570707162, "post_id": 58321712, "comment_id": 103002594, "body": "The only difficulty with this comes from the requirement that you want <i>mutable</i> references to the tuple items, which I believe is only possible with unsafe code. For shared references this is easy to implement."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1570707545, "post_id": 58321712, "comment_id": 103002799, "body": "No that&#39;s not true. I will update the post and you will see."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570708795, "post_id": 58321712, "comment_id": 103003517, "body": "OK, you&#39;ve proven me wrong. In this particular case, you can indeed create all necessary mutable references right in the function itself, so the compiler can verify that each tuple element is mutably referenced only once. Collections of variable length often require unsafe code for mutable iterators, since the compiler can&#39;t prove that each reference is only returned once."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570709110, "post_id": 58321712, "comment_id": 103003689, "body": "After you have included an answer in the question, I&#39;m not sure what the question is now."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1570709218, "post_id": 58321712, "comment_id": 103003758, "body": "Yes... I found an answer, but I HAAATE it because it is ugly. I am looking for a better way to do the same thing. If there is no better answers come through I may end up write a macro to hide the ugly stuff."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1570711229, "post_id": 58321712, "comment_id": 103004936, "body": "I&#39;d honestly use a macro for this specific case."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570714595, "post_id": 58321712, "comment_id": 103007058, "body": "The reason it&#39;s ugly is because you&#39;re not supposed to do it."}, {"owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570774072, "post_id": 58321712, "comment_id": 103027102, "body": "@trentcl Why I shouldn&#39;t do it? The code is legal and does the correct thing. It does not violate any rules."}], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "is_accepted": false, "score": 1, "last_activity_date": 1570864428, "last_edit_date": 1570864428, "creation_date": 1570837844, "answer_id": 58349663, "question_id": 58321712, "link": "https://stackoverflow.com/questions/58321712/how-to-iterate-over-tuple-of-trait-objects-or-unsized-types/58349663#58349663", "title": "How to iterate over tuple of trait objects or unsized types", "body": "<p>Just figured out that I don't have to specify the type:</p>\n\n<pre><code>fn mut_tuple_to_iter(v:&amp;mut ((), i32)) -&gt;impl Iterator&lt;Item=&amp;mut dyn D&gt; {\n    once(&amp;mut v.0 as _).chain(once(&amp;mut v.1 as _))\n}\n</code></pre>\n\n<p>will work. This makes it much less ugly already!</p>\n\n<p>Of cause, a macro will help a lot:</p>\n\n<pre><code>macro_rules! chained_elements {\n    ($exp: expr) =&gt; {\n        core::iter::once($exp as _)\n    };\n    ($exp: expr, $($rest:tt)*) =&gt; {\n        core::iter::once($exp as _)\n        .chain(chained_elements!($($rest)*))\n    }\n}\n</code></pre>\n\n<p>Now you can write</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use core::iter::once;\n\ntrait D {}\nimpl D for () {}\nimpl D for i32 {}\n\nmacro_rules! chained_elements {\n    ($exp: expr) =&gt; {\n        core::iter::once($exp as _)\n    };\n    ($exp: expr, $($rest:tt)*) =&gt; {\n        core::iter::once($exp as _)\n        .chain(chained_elements!($($rest)*))\n    }\n}\n\nfn mut_tuple_to_iter(v: &amp;mut ((), i32)) -&gt; impl Iterator&lt;Item = &amp;mut dyn D&gt; {\n    chained_elements!(&amp;mut v.0, &amp;mut v.1)\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0948f3118fe8f6a33c67f8b586351703\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<h1>Discussions</h1>\n\n<p>I have been exploring the design space in rust for a long time, but in some cases the above is the only solution.</p>\n\n<p>The reason of it is that when you have to use trait objects (for example, to reduce generic explosion), as call-by-value is not an option (yet), call-by-mutable-reference is the best thing you can have. In such cases, a pattern like the above seems inevitable.</p>\n"}], "owner": {"reputation": 9010, "user_id": 812034, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/b646bea073b6f95ee97064322877a87a?s=128&d=identicon&r=PG", "display_name": "Earth Engine", "link": "https://stackoverflow.com/users/812034/earth-engine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1570864428, "creation_date": 1570706448, "last_edit_date": 1570708058, "question_id": 58321712, "link": "https://stackoverflow.com/questions/58321712/how-to-iterate-over-tuple-of-trait-objects-or-unsized-types", "title": "How to iterate over tuple of trait objects or unsized types", "body": "<p>This question was originally found in <a href=\"https://www.reddit.com/r/rust/comments/8cfqvb/is_there_a_way_to_iterate_over_a_tuple/\" rel=\"nofollow noreferrer\">this post in reddit</a>.</p>\n\n<p>Whilst experienced Rust user will spot out that the elements in a tuple does not have to be the same (if they are, you should use array!), and so it does not make sense to iterate through them, there are still some cases this is useful.</p>\n\n<p>Those cases are that the types of the tuple can be casted to the same unsized type (for example <code>[u8]</code> or <code>dyn Trait</code>).</p>\n\n<p>Demostration:</p>\n\n<pre><code>trait Dummy {}\nimpl Dummy for () {}\nimpl Dummy for i32 {}\n\nfn mut_tuple_to_iter(v: &amp;mut ((), i32)) -&gt; impl Iterator&lt;Item = &amp;mut dyn D&gt; {\n    //How do I implement this?\n}\n</code></pre>\n\n<p>I couldn't find a beautiful way to write the above. Any idea?</p>\n\n<hr>\n\n<p>To see a possible answer that is not beautiful enough, here it is:</p>\n\n<pre><code>use core::iter::once;\n\ntrait D {}\nimpl D for () {}\nimpl D for i32 {}\n\nfn mut_tuple_to_iter(v: &amp;mut ((), i32)) -&gt; impl Iterator&lt;Item = &amp;mut dyn D&gt; {\n    once(&amp;mut v.0 as &amp;mut dyn D).chain(once(&amp;mut v.1 as &amp;mut dyn D))\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3478eb45b08e47e98f6cdccb7fba64a7\" rel=\"nofollow noreferrer\">Play ground link</a></p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1570697150, "post_id": 58318857, "comment_id": 102997212, "body": "Why don&#39;t you make the <code>send</code> method generic, instead?"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570697323, "post_id": 58318857, "comment_id": 102997306, "body": "Because I pass the struct to another function and I don&#39;t want that function to be able to send <i>any</i> <code>prost::Message</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1570697635, "post_id": 58318857, "comment_id": 102997497, "body": "Well, in this case, you must use a <code>PhantomData</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570743902, "post_id": 58318857, "comment_id": 103020761, "body": "<code>PhantomData&lt;T&gt;</code> gives the wrong variance for send-like semantics; you want <code>PhantomData&lt;fn(T)&gt;</code>."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570797042, "post_id": 58318857, "comment_id": 103037798, "body": "@trentcl: Can you explain a bit more for a noob? (Maybe in an answer)"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 90, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1570697080, "creation_date": 1570697080, "question_id": 58318857, "link": "https://stackoverflow.com/questions/58318857/unused-template-parameter-on-rust-struct", "title": "Unused template parameter on Rust struct", "body": "<p>I have this code (simplified):</p>\n\n<pre><code>pub struct MessageSender&lt;T: prost::Message&gt; {\n    send_channel: crossbeam::Sender&lt;Vec&lt;u8&gt;&gt;,\n}\n\nimpl&lt;T&gt; MessageSender&lt;T&gt; where T: prost::Message {\n    pub fn send(&amp;self, output: &amp;T) {\n        let mut buf: Vec&lt;u8&gt; = Vec::with_capacity(output.encoded_len());\n        output.encode(&amp;mut buf).unwrap();\n        self.send_channel.send(buf).unwrap();\n    }\n}\n</code></pre>\n\n<p>Hopefully the intent is clear - I want a <code>struct</code> that can send a specific <code>struct</code> that implements <code>prost::Message</code>, but I only actually need that template parameter for the <code>send()</code> function. I can fix this by adding <code>_marker: PhantomData&lt;T&gt;</code> to the <code>struct</code>.</p>\n\n<p>Is that the right thing to do here? Also why is it necessary? Seems a bit annoying because then I have to initialise that marker everywhere I create one of these structs.</p>\n"}, {"tags": ["multithreading", "rust", "mutex", "reference-counting"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1570695649, "post_id": 58318337, "comment_id": 102996467, "body": "Do you know <a href=\"https://doc.rust-lang.org/std/sync/mpsc/index.html\" rel=\"nofollow noreferrer\">MPSC</a> (or the <a href=\"https://crates.io/crates/crossbeam\" rel=\"nofollow noreferrer\">crossbeam</a> crate)?"}], "answers": [{"comments": [{"owner": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "edited": false, "score": 0, "creation_date": 1571346278, "post_id": 58321866, "comment_id": 103221069, "body": "OK that makes sense, I got this to work, with a similar Arc&lt;RwLock&gt;&gt; lock on WriteHalf,  read half probably will need the same to force close it.  I hope all this locking is fast :)  Would not dream of writing synchronized code like that in Java or mutexs in C.  BTW protocol is to be STOMP (<a href=\"https://stomp.github.io/\" rel=\"nofollow noreferrer\">stomp.github.io</a>)"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "edited": false, "score": 0, "creation_date": 1571346814, "post_id": 58321866, "comment_id": 103221255, "body": "@teknopaul if for some reason your locking operation ends up blocking, the <code>futures_locks</code> crate contains future-optimized locking primitives. There are also other (non-locking) options providing the same thing; at the end of the day, it is about what constraints you have."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "edited": false, "score": 1, "creation_date": 1571348068, "post_id": 58321866, "comment_id": 103221681, "body": "@teknopaul Actually. Something just hit me - what makes you think this is different to java? <code>Mutex</code> is essentially <code>synchronized</code>, since the underlying behavior is the same. Primitive updates can be done lock-free with <a href=\"https://doc.rust-lang.org/std/sync/atomic/\" rel=\"nofollow noreferrer\"><code>std::sync::Atomic</code> primitives</a>, which are exactly the same as their java equivalent. The <b>only</b> thing you cannot do in Rust that you can do in java is <code>volatile</code>."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 2, "last_activity_date": 1570706952, "creation_date": 1570706952, "answer_id": 58321866, "question_id": 58318337, "link": "https://stackoverflow.com/questions/58318337/create-two-mutable-references-that-are-thread-safe-to-a-struct-in-rust/58321866#58321866", "title": "Create two mutable references that are thread safe to a struct in Rust", "body": "<p>Let's start by clearing a few things:</p>\n\n<blockquote>\n  <p>does not seem to be a way to write single threaded tokio code that avoids mutexes</p>\n</blockquote>\n\n<p>The <code>Mutex</code> requirement has nothing to do with single-threadedness but with mutable borrows. Whenever you spawn a future, that future is its own entity; it isn't magically part of your <code>struct</code> and most <em>definitely</em> does not know how to keep a <code>&amp;mut self</code>. That is the point of the <code>Mutex</code> - it allows you to dynamically acquire a mutable reference to inner state - and the <code>Arc</code> allows you to have access to the <code>Mutex</code> itself in multiple places.</p>\n\n<p>Their non-synchronized equivalents are <code>Rc</code> and <code>Cell</code>/<code>RefCell</code>, by the way, and their content (whether synchronized or unsynchronized) should be an owned type.</p>\n\n<p>The <code>Send</code> requirement actually shows up when you use <code>futures</code> on top of <code>tokio</code>, as an <a href=\"https://docs.rs/tokio/0.1.22/tokio/executor/trait.Executor.html#tymethod.spawn\" rel=\"nofollow noreferrer\"><code>Executor</code></a> requires futures spawned on it to be <code>Send</code> (for obvious reasons - you <em>could</em> make a <code>spawn_local</code> method, but that'd cause more problems than it solves).</p>\n\n<p>Now, back to your problem. I'm going to give you the <em>shortest path</em> to an answer to your problem. This, however, will not be completely the right way of doing things; however, since I do not know what protocol you're going to lay on top of <code>TcpStream</code> or what kind of requirements you have, I cannot point you in the right direction (yet). Comments are there for that reason - give me more requirements and I'll happily edit this!</p>\n\n<p>Anyway. Back to the problem. Since <code>Mutex&lt;_&gt;</code> is better used with an owned type, we're going to do that right now and \"fix\" both your <code>Reader</code> and <code>Writer</code>:</p>\n\n<pre><code>pub struct Reader {\n    session: Arc&lt;RwLock&lt;Session&gt;&gt;,\n    read_half: ReadHalf&lt;TcpStream&gt;,\n}\n\npub struct Writer {\n    session: Arc&lt;RwLock&lt;StompSession&gt;&gt;,\n    write_half: WriteHalf&lt;TcpStream&gt;,\n}\n</code></pre>\n\n<p>Since we changed this, we also need to reflect it elsewhere, but to be able to do this we're going to need to consume <code>self</code>. It is fine, however, as we're going to have an <code>Arc&lt;Mutex&lt;_&gt;&gt;</code> copy in either object we return:</p>\n\n<pre><code>impl Session {\n\n    pub fn split(self, sock: TcpStream) -&gt; (Reader, Writer) {\n        let (read_half, write_half) = sock.split();\n\n        let session = Arc::new(RwLock::new(self));\n        ( Reader::new(session.clone(), read_half), Writer::new(session, write_half) )\n    }\n}\n</code></pre>\n\n<p>And lo and behold, it compiles and each <code>Writer</code>/<code>Reader</code> pair now has its own borrowable (mutably and non-mutably) reference to our session!</p>\n\n<p>The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=24cee3e82171d5ae9efb2e0e55a5f6cd\" rel=\"nofollow noreferrer\"><strong>playground snippet</strong></a> highlights the changes made. As I said, it works now, but it's going to bite you in the ass the moment you try to do something as you're going to need something on top of both <code>ReadHalf</code> and <code>WriteHalf</code> to be able to use them properly.</p>\n"}], "owner": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 434, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1603219469, "creation_date": 1570695347, "last_edit_date": 1603219469, "question_id": 58318337, "link": "https://stackoverflow.com/questions/58318337/create-two-mutable-references-that-are-thread-safe-to-a-struct-in-rust", "title": "Create two mutable references that are thread safe to a struct in Rust", "body": "<p>I'm trying to create async Reader and Writer in tokio, these require Send, and must be thread safe.  (does not seem to be a way to write single threaded tokio code that avoids mutexts)</p>\n\n<p>The reader and writer both need to interact, e.g read data <em>might</em> result in a response.</p>\n\n<p>I would like both Reader and Writer to have a thread safe pointer to a Session that can ensure communication between the two.</p>\n\n<pre><code>/// function on the \nimpl Session {\n\npub fn split(&amp;mut self, sock: TcpStream) -&gt; (Reader, Writer) {\n    let (read_half, write_half) = sock.split();\n\n    let session = Arc::new(RwLock::new(self)); // &lt;- expected lifetime\n\n    ( Reader::new(session, read_half), Writer::new(Arc::clone(session), write_half) )\n}\n...\n}\n\npub struct Reader {\n    session: Arc&lt;RwLock&lt;&amp;mut StompSession&gt;&gt;,\n    read_half: ReadHalf&lt;TcpStream&gt;,\n    ...\n\npub struct Writer {\n    session: Arc&lt;RwLock&lt;&amp;mut StompSession&gt;&gt;,\n    write_half: WriteHalf&lt;TcpStream&gt;,\n    ....\n</code></pre>\n\n<p>I dont really understand the difference between <code>Arc&lt;RwLock&lt;&amp;mut StompSession&gt;&gt;</code>  and <code>Arc&lt;RwLock&lt;StompSession&gt;&gt;</code> both can only be talking about pointers.</p>\n\n<p>Naturally come at this by stuggling with the borrow checker and rust book only has examples for RRwLock with integers, not mutable \"objects\".</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1570699610, "post_id": 58318039, "comment_id": 102998542, "body": "So it&#39;s working, when you do <code>cargo build</code> but not <code>carg build--release</code>? \ud83e\udd14"}, {"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1570699723, "post_id": 58318039, "comment_id": 102998618, "body": "yes its working for cargo build and cargo run also. but not cargo build --release."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570707228, "post_id": 58318039, "comment_id": 103002638, "body": "@ganesh what rust toolchain are you using with what compiler. The error points at a segfault within rustc, which is <i>exceedingly</i> rare and typically points to a malformed installation."}, {"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570709054, "post_id": 58318039, "comment_id": 103003656, "body": "@S&#233;bastienRenauld Using rust stable version 1.38.0 on rust compiler. VScode IDE is using for raspberry pi 3B."}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1571126302, "post_id": 58332012, "comment_id": 103126389, "body": "Thank you it worked for me.  I got released, Binary file size is also reduced to 2.5MB. If possible may I know how much memory is consumed by Jamalloc, Debug Symbol and Panic? Or how to find this ? where it is located?"}, {"owner": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "reply_to_user": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "edited": false, "score": 0, "creation_date": 1571193164, "post_id": 58332012, "comment_id": 103154646, "body": "This is a separate question which you should ask separately. I don&#39;t know the answer, and even if I did, this comment is too small to properly answer."}], "tags": [], "owner": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "is_accepted": true, "score": 1, "last_activity_date": 1570828329, "last_edit_date": 1570828329, "creation_date": 1570747277, "answer_id": 58332012, "question_id": 58318039, "link": "https://stackoverflow.com/questions/58318039/could-not-able-to-release-a-file-getting-error-could-not-compile-libc/58332012#58332012", "title": "Could not able to release a file. getting error: could not compile &#39;libc&#39;", "body": "<p>If you're using rustup-provided binaries, then this is a <a href=\"https://github.com/rust-lang/rust/issues/62896\" rel=\"nofollow noreferrer\">known issue upstream</a>.  There is a workaround in that issue, which is to set the following in <code>Cargo.toml</code>:</p>\n\n<pre><code>[profile.release]\ncodegen-units = 1\n</code></pre>\n\n<p>As an alternative, you can use the Debian <code>rustc</code> and <code>cargo</code> packages instead of rustup, which should work just fine.  You can either download the packages from <a href=\"https://packages.debian.org/rustc\" rel=\"nofollow noreferrer\">https://packages.debian.org/rustc</a> and <a href=\"https://packages.debian.org/cargo\" rel=\"nofollow noreferrer\">https://packages.debian.org/cargo</a>, or you can add an appropriate APT line into <code>/etc/sources.list</code> (see <a href=\"https://deb.debian.org/\" rel=\"nofollow noreferrer\">https://deb.debian.org/</a> for an example).  Note that Debian does not always have the latest version, but they should work.</p>\n"}], "owner": {"reputation": 23, "user_id": 12193571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cfd1c63ec17b19f141ab9fcd8990a524?s=128&d=identicon&r=PG&f=1", "display_name": "ganesh", "link": "https://stackoverflow.com/users/12193571/ganesh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1200, "favorite_count": 0, "accepted_answer_id": 58332012, "answer_count": 1, "score": 1, "last_activity_date": 1570828329, "creation_date": 1570694215, "last_edit_date": 1570699578, "question_id": 58318039, "link": "https://stackoverflow.com/questions/58318039/could-not-able-to-release-a-file-getting-error-could-not-compile-libc", "title": "Could not able to release a file. getting error: could not compile &#39;libc&#39;", "body": "<p>I am very new to this language and coding field. Beginner to coding field as well.\n I tried to build and release file but getting an error Compiling libc v0.2.62</p>\n\n<pre><code>error: Could not compile `libc`\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>pi@raspberrypi:~/Ganesh_Rust/Real_time/led_blink/src $ cargo run\n    Finished dev [unoptimized + debuginfo] target(s) in 0.09s\n     Running `/home/pi/Ganesh_Rust/Real_time/led_blink/target/debug/led_blink`\npi@raspberrypi:~/Ganesh_Rust/Real_time/led_blink/src $ cargo build --release\n   Compiling libc v0.2.62\nerror: Could not compile `libc`.\n\nCaused by:\n  process didn't exit successfully: `rustc --crate-name build_script_build /home/pi/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.62/build.rs --color always --crate-type bin --emit=dep-info,link -C opt-level=3 --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=b79e3ef31fa8c249 -C extra-filename=-b79e3ef31fa8c249 --out-dir /home/pi/Ganesh_Rust/Real_time/led_blink/target/release/build/libc-b79e3ef31fa8c249 -L dependency=/home/pi/Ganesh_Rust/Real_time/led_blink/target/release/deps --cap-lints allow` (signal: 11, SIGSEGV: invalid memory reference)\n</code></pre>\n\n<p>code: this program which i wrote in VS code to blink LED on raspberry pi 3    </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rust_gpiozero::*;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n  //create a new LEd attached to pin 17 of raspberry pi \n  let led = LED::new(17);\n\n  //blink the led 5 times\n  for _ in 0.. 5{\n      led.on();\n      thread::sleep(Duration::from_secs(10));\n      led.off();\n      thread::sleep(Duration::from_secs(10));\n}\n}  \n</code></pre>\n\n<p>cargo.toml file: </p>\n\n<pre><code>[package]\nname = \"led_blink\"\nversion = \"0.1.0\"\nauthors = [\"pi\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nrust_gpiozero = \"0.2.0\"\n</code></pre>\n\n<p>I am getting output on Raspberry pi but executable file and binary files are large (5MB). So i thought if i do release maybe i can reduce size so tried to release using cargo build --release command but getting this error.   </p>\n"}, {"tags": ["variables", "generics", "types", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1570693940, "post_id": 58317904, "comment_id": 102995626, "body": "As you said: You can&#39;t change the type. Also I don&#39;t see why you would need that from your comment. You need beforehand to know which type you expect (you can&#39;t change the type of values inside a <code>Vec</code> at runtime as well, can you?). I see two possibilities. Use <a href=\"https://doc.rust-lang.org/std/default/trait.Default.html\" rel=\"nofollow noreferrer\"><code>Default::default</code></a> and add the requirement <code>T: Default</code> and then you can write: <code>let mut p: Point&lt;f32&gt; = Point::Default</code>"}, {"owner": {"reputation": 45685, "user_id": 69809, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/yCVF0.jpg?s=128&g=1", "display_name": "Groo", "link": "https://stackoverflow.com/users/69809/groo"}, "edited": false, "score": 0, "creation_date": 1570694768, "post_id": 58317904, "comment_id": 102996037, "body": "You could do this in a weakly typed language, but in strongly typed languages which support generics, you cannot change the generic parameter. E.g. if you write <code>Point&lt;int&gt; p = new Point&lt;int&gt;(1, 2);</code>  in C#, you cannot write <code>p = new Point&lt;float&gt;(1f, 2f);</code> afterwards. If the class was mutable, you couldn&#39;t even write <code>p.X = 2.1f;</code> because <code>p</code> is a struct containing integers. Think of generic classes as templates for concrete classes that are set in stone when you specify a parameter."}, {"owner": {"reputation": 39, "user_id": 8315238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f147e8a5e1db8a7888daef57df425305?s=128&d=identicon&r=PG&f=1", "display_name": "kegesch", "link": "https://stackoverflow.com/users/8315238/kegesch"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1570694876, "post_id": 58317904, "comment_id": 102996096, "body": "@hellow this not exactly what i want to do. See my edited question."}, {"owner": {"reputation": 39, "user_id": 8315238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f147e8a5e1db8a7888daef57df425305?s=128&d=identicon&r=PG&f=1", "display_name": "kegesch", "link": "https://stackoverflow.com/users/8315238/kegesch"}, "reply_to_user": {"reputation": 45685, "user_id": 69809, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/yCVF0.jpg?s=128&g=1", "display_name": "Groo", "link": "https://stackoverflow.com/users/69809/groo"}, "edited": false, "score": 0, "creation_date": 1570694939, "post_id": 58317904, "comment_id": 102996120, "body": "@Groo yes i understand that. I just want to know a best practice code how to approach my problem."}], "answers": [{"tags": [], "owner": {"reputation": 48, "user_id": 9244181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4564e69f41a21a08aeb46368f4a2233?s=128&d=identicon&r=PG&f=1", "display_name": "user9244181", "link": "https://stackoverflow.com/users/9244181/user9244181"}, "is_accepted": false, "score": 1, "last_activity_date": 1583617096, "creation_date": 1583617096, "answer_id": 60582432, "question_id": 58317904, "link": "https://stackoverflow.com/questions/58317904/mutate-type-of-generic-variable-in-rust/60582432#60582432", "title": "Mutate type of generic variable in Rust", "body": "<p>You can set your multi variable type in <code>enum</code>, </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Num {\n    int(i32),\n    float(f64)\n}\n\nfn main() {\n    let mut p = Point { x: Num::int(1), y: Num::int(1) };\n    p = Point { x: Num::float(1.0), y: Num::float(1.0) };\n}\n</code></pre>\n"}], "owner": {"reputation": 39, "user_id": 8315238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f147e8a5e1db8a7888daef57df425305?s=128&d=identicon&r=PG&f=1", "display_name": "kegesch", "link": "https://stackoverflow.com/users/8315238/kegesch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 318, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1583617096, "creation_date": 1570693653, "last_edit_date": 1570694828, "question_id": 58317904, "link": "https://stackoverflow.com/questions/58317904/mutate-type-of-generic-variable-in-rust", "title": "Mutate type of generic variable in Rust", "body": "<p>I know that you can't mutate the type of a variable.\nSo coming from other programming languages where following would work: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Point&lt;T&gt; {\n    x: T,\n    y: T,\n}\n\nfn main() {\n    let mut p = Point { x: 1, y: 1 }; // p is type of Point&lt;u8&gt; now\n    p = Point { x: 1.0, y: 1.0 }; // p should be type of Point&lt;float&gt; now\n}\n</code></pre>\n\n<p>My use case for this would, that you assign a default value to variable and i specific case you change the value. But both are e.g. of the generic type <code>Point&lt;T&gt;</code> and the rest of the code just works with this generic type and not a specific one.</p>\n\n<p>What is the best practice in Rust to achieve this kind of workflow?</p>\n\n<p><em>EDIT:</em></p>\n\n<p>A better example to understand what i want to accomplish is maybe following: \n<code>DateTime&lt;Tz&gt;</code> is given by the crate <code>chrono</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nfn main() {\n   let is_utc = ....;\n\n   let mut datetime = Local::now(); // datetime is now of type DateType&lt;Local&gt;\n\n   if is_utc {\n       datetime = Utc::now(); // datetime is now of type DateType&lt;Utc&gt;\n   }\n\n   format(datetime);\n}\n\n\nfn format&lt;Tz: TimeZone&gt;(datetime: DateTime&lt;Tz&gt;) where Tz::Offset : fmt::Display {\n    // here is someother code to justify this extra function :)\n    datetime.format(\"%a %b %e %k:%M:%S %Z %Y\");\n}\n</code></pre>\n\n<p>So the function <code>format</code> does not are what <code>Tz</code> is except it should be of type <code>TimeZone</code>. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "edited": false, "score": 0, "creation_date": 1570690382, "post_id": 58316486, "comment_id": 102994034, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51809603/why-does-serde-jsonfrom-reader-take-ownership-of-the-reader\">Why does serde_json::from_reader take ownership of the reader?</a> So, you just need to call serde_json::to_writer(&amp;mut out, &amp;1)."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1570778945, "post_id": 58316486, "comment_id": 103028974, "body": "I don&#39;t think this is an exact duplicate. In the other question, the problem is that the function takes ownership, and we need to create a borrow. Here, <code>out</code> already <i>is</i> a mutable borrow, but the compiler does not create an implicit reborrow, as it usually does when passing on mutable references to function calls, so we need to explicitly reborrow <code>out</code>."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 2, "last_activity_date": 1570905070, "last_edit_date": 1570905070, "creation_date": 1570780115, "answer_id": 58336587, "question_id": 58316486, "link": "https://stackoverflow.com/questions/58316486/how-to-call-serde-jsonto-writer-twice-with-the-same-mutable-borrow/58336587#58336587", "title": "How to call serde_json::to_writer twice with the same mutable borrow?", "body": "<p>The reason for this behaviour is somewhat subtle. When passing a shared reference as parameter to a function, Rust will simply copy the reference. The type <code>&amp;T</code> is <code>Copy</code> for all <code>T</code>, since we are allowed to have any number of shared references at the same time.</p>\n\n<p>Mutable references, on the other hand, are not <code>Copy</code>, since there can be only one of them at any given time. According to the usual Rust semantics for non-<code>Copy</code> types, this means that mutable references should be moved when passed as a parameter. So why does this code work?</p>\n\n<pre><code>fn foo(_: &amp;mut i32) {}\n\nfn main() {\n    let mut i = 42;\n    let r = &amp;mut i;\n    foo(r);\n    foo(r);\n}\n</code></pre>\n\n<p>The reason is that the compiler creates an <em>implicit reborrow</em> whenever it assigns to a variable that is explicitly declared as a mutable reference, so the function calls are translated to <code>foo(&amp;mut *r)</code>. This creates a new borrow that only lasts for the duration of the function call, and the original reference <code>r</code> becomes available again once the lifetime of the reborrow ends.</p>\n\n<p>However, implicit reborrows are only generated for variables that are explicitly declared with a mutable reference type. If we change the definition of <code>foo()</code> above to</p>\n\n<pre><code>fn foo&lt;T&gt;(_: T) {}\n</code></pre>\n\n<p>the code will stop compiling. Now the parameter of <code>foo()</code> is not declared as a mutable reference anymore, so the compiler will not introduce an implicit reborrow, and will move ownership of <code>r</code> into the function in the first call instead, resulting in an error in the second function call.</p>\n\n<p>The same thing happens in your code. The function <code>to_writer()</code> is declared as</p>\n\n<pre><code>pub fn to_writer&lt;W, T: ?Sized&gt;(writer: W, value: &amp;T) -&gt; Result&lt;()&gt;\nwhere\n    W: io::Write,\n    T: Serialize,\n</code></pre>\n\n<p>Since the argument <code>writer</code> is not declared as a mutable reference, you need to create an explicit reborrow to avoid a move:</p>\n\n<pre><code>serde_json::to_writer(&amp;mut *out, &amp;1)?;\n</code></pre>\n\n<p>The alternative solution you gave in your question works as well \u2013 the <code>write_wrapper()</code> function receives an explicitly declared mutable reference as argument, so calls to this function trigger implicit reborrows.</p>\n"}], "owner": {"reputation": 4376, "user_id": 163832, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/ef473f09095e5132ecaf3c25655cafa4?s=128&d=identicon&r=PG", "display_name": "Kannan Goundan", "link": "https://stackoverflow.com/users/163832/kannan-goundan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 58336587, "answer_count": 1, "score": 5, "last_activity_date": 1570905070, "creation_date": 1570687953, "last_edit_date": 1570688500, "question_id": 58316486, "link": "https://stackoverflow.com/questions/58316486/how-to-call-serde-jsonto-writer-twice-with-the-same-mutable-borrow", "title": "How to call serde_json::to_writer twice with the same mutable borrow?", "body": "<p>I'm trying to write a function that calls <a href=\"https://docs.serde.rs/serde_json/ser/fn.to_writer.html\" rel=\"noreferrer\"><code>serde_json::to_writer</code></a> twice to write two things, but I can't figure out how.</p>\n\n<p>Here's one attempt (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ba84dbb8bf57466b92ec432894e86e44\" rel=\"noreferrer\">playground link</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde_json;\n\nfn main() {\n    let mut out = std::fs::File::create(\"out.txt\").unwrap();\n    write_stuff(&amp;mut out);\n}\n\nfn write_stuff&lt;W: ?Sized&gt;(out: &amp;mut W) -&gt; Result&lt;(), std::io::Error&gt;\nwhere\n    W: std::io::Write,\n{\n    serde_json::to_writer(out, &amp;1).unwrap();  // `out`: value moved here\n    serde_json::to_writer(out, &amp;2).unwrap();  // `out`: value used here after move\n    Ok(())\n}\n</code></pre>\n\n<p><strong>Edit</strong>: Figured out a way to get things to compile, but is there an easier way (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=93cd2ecee8b003f6f8c11eb9a0d943ab\" rel=\"noreferrer\">playground link</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate serde_json;\n\nfn main() {\n    let mut out = std::fs::File::create(\"out.txt\").unwrap();\n    write_stuff(&amp;mut out);\n}\n\nfn write_stuff&lt;W: ?Sized&gt;(out: &amp;mut W)\nwhere\n    W: std::io::Write,\n{\n    write_wrapper(out);\n    write_wrapper(out);\n}\n\nfn write_wrapper&lt;W: ?Sized&gt;(out: &amp;mut W)\nwhere\n    W: std::io::Write,\n{\n    serde_json::to_writer(out, &amp;1).unwrap();  \n}\n</code></pre>\n"}, {"tags": ["rust", "game-engine", "2d-games", "game-development"], "answers": [{"tags": [], "owner": {"reputation": 2568, "user_id": 4411558, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90e851e46386fc187059016dd06bbd36?s=128&d=identicon&r=PG", "display_name": "\u5f20\u5b9e\u552f", "link": "https://stackoverflow.com/users/4411558/%e5%bc%a0%e5%ae%9e%e5%94%af"}, "is_accepted": false, "score": 0, "last_activity_date": 1570684299, "creation_date": 1570684299, "answer_id": 58315807, "question_id": 58314563, "link": "https://stackoverflow.com/questions/58314563/borrowing-gamemaster-self-to-gamestate/58315807#58315807", "title": "Borrowing GameMaster (self) to GameState", "body": "<p>I have a similar problem a while ago but I think the only choices are:</p>\n\n<ol>\n<li><p>use <code>Rc&lt;RefCell&lt;&gt;&gt;</code> everywhere. Remember to also use <code>Weak</code> or add a special destroy method if you ever need to garbage collect these objects since they hold reference to each other.</p></li>\n<li><p>use raw pointers and unsafe code. The problem is that with unsafe deference, you also lose the mutability check (<code>RefCell</code> ensures only one mutable reference exists at a time) in addition to the lifetime check.</p></li>\n</ol>\n"}], "owner": {"reputation": 31, "user_id": 4645635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7eadbc3851859e120c3259638736dd5?s=128&d=identicon&r=PG", "display_name": "Hannes Mann", "link": "https://stackoverflow.com/users/4645635/hannes-mann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1570684299, "creation_date": 1570674064, "question_id": 58314563, "link": "https://stackoverflow.com/questions/58314563/borrowing-gamemaster-self-to-gamestate", "title": "Borrowing GameMaster (self) to GameState", "body": "<p>I'm fairly new to Rust and I've been trying to get a simple game working with <a href=\"https://github.com/ggez/ggez\" rel=\"nofollow noreferrer\">ggez</a>. </p>\n\n<p>Now, normally in C++ or C# I would structure my game around having an instance of a \"master\" class that takes care of settings, frame limiting, window creation, event handling, etc and \"state\" classes that are held by the master class. I would pass a pointer to the master class when creating the state class (something like <code>game_master*</code>) so that the state class can access the resources of the master class.</p>\n\n<p>In Rust I can't pass a <code>&amp;mut self</code> because the state could potentially outlive the reference. </p>\n\n<pre><code>pub fn new(_ctx: &amp;mut Context) -&gt; GameMaster {\n    let game = GameMaster {\n        state: None,\n        pending_state: None\n    };\n\n    game.state = Some(Box::new(TestState::new_with_master(&amp;mut game))) &lt;----- NOPE\n    game\n}\n</code></pre>\n\n<p>I think this could be solved with lifetimes but I haven't found a way to get lifetimes working with traits. Passing the master in as a reference on every function call doesn't work either because only one mutable reference can be held at a time.</p>\n\n<pre><code>fn update(&amp;mut self, ctx: &amp;mut Context) -&gt; GameResult&lt;()&gt; {\n    if self.state.is_some() {\n        (*self.state.as_mut().unwrap()).update(ctx, &amp;mut self) &lt;----- NOPE\n    } \n    else {\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>Is there no good way to do this in Rust?</p>\n"}]