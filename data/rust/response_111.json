[{"tags": ["generics", "math", "rust"], "comments": [{"owner": {"reputation": 1009, "user_id": 1442626, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uhrOk.jpg?s=128&g=1", "display_name": "Liam Gray", "link": "https://stackoverflow.com/users/1442626/liam-gray"}, "edited": false, "score": 0, "creation_date": 1487806444, "post_id": 42404227, "comment_id": 71955455, "body": "I&#39;m not entirely sure on the question, but my first thought is that <code>Cont</code> itself doesn&#39;t have the Add operator \u2014 only the <code>NoCopy</code> objects \u2014 even thought <code>Cont</code> is what you&#39;re adding to a <code>NoCopy</code>? Another option could be making <code>cont</code> mutable and having <code>cont = Cont(cont.0 + rel)</code>?"}, {"owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "reply_to_user": {"reputation": 1009, "user_id": 1442626, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uhrOk.jpg?s=128&g=1", "display_name": "Liam Gray", "link": "https://stackoverflow.com/users/1442626/liam-gray"}, "edited": false, "score": 0, "creation_date": 1487809063, "post_id": 42404227, "comment_id": 71956378, "body": "This is just an example. In real, this way may be problematic, since I have many fields in my struct, and also want to use it in borrowed contexts"}], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 9, "last_activity_date": 1487817217, "last_edit_date": 1487817217, "creation_date": 1487808205, "answer_id": 42404655, "question_id": 42404227, "link": "https://stackoverflow.com/questions/42404227/generic-math-without-copying-in-rust/42404655#42404655", "title": "Generic math without copying in rust", "body": "<p>One option is to implement <code>Add</code> on references:</p>\n\n<pre><code>impl&lt;'a, T: Copy + Add&lt;Output = T&gt;&gt; Add for &amp;'a NoCopy&lt;T&gt; {\n    type Output = NoCopy&lt;T&gt;;\n    fn add(self, rhs: Self) -&gt; NoCopy&lt;T&gt; {\n        NoCopy(self.0+rhs.0)\n    }\n}\n</code></pre>\n\n<p>This is ok since shared references are <code>Copy</code>.  Note I added a <code>Copy</code> constraint to <code>T</code> to make this implementation simple (true for integers); if <code>T</code> isn't copy then the one-liner method might need to change.</p>\n\n<p>You do have to add references when using it, which is a shame, but it otherwise works:</p>\n\n<pre><code>fn main() {\n    let x = NoCopy(1);\n    let mut cont = Cont(x);\n    let rel = NoCopy(2);\n    cont.0=&amp;cont.0+&amp;rel;\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=fa82d80ea6cf97cb0d4f93202c46b0d9&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground</a>)</p>\n"}], "owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 340, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1487817217, "creation_date": 1487805888, "last_edit_date": 1487807461, "question_id": 42404227, "link": "https://stackoverflow.com/questions/42404227/generic-math-without-copying-in-rust", "title": "Generic math without copying in rust", "body": "<p>I want to write some generic math functions, without assuming that my types are copyable. This seems not to be possible, since math operators consume the values, instead of borrowing them. So it is required to copy the object, just for simple math. I could also just move them, but this is not possible in borrowed context, which I need, when I want to mutate a struct.</p>\n\n<p>Here some simple example, where are problems:</p>\n\n<pre><code>use std::ops::Add;\n\nstruct NoCopy&lt;T&gt;(T); //some non-copyable struct, (maybe a vector)\nstruct Cont&lt;T&gt;(NoCopy&lt;T&gt;); //some struct contaioning a noncopyable struct\n\nimpl&lt;T: Add&lt;Output=T&gt;&gt; Add for NoCopy&lt;T&gt; {\n    type Output = NoCopy&lt;T&gt;;\n    fn add(self, x: NoCopy&lt;T&gt;) -&gt; NoCopy&lt;T&gt; {\n        NoCopy(self.0+x.0)\n    }\n}\n\nfn main() {\n    let x = NoCopy(1);\n    let cont = Cont(x);\n    let rel = NoCopy(2);\n    cont.0=cont.0+rel; //addition makes struct cont invalid, so i have to copy\n}\n</code></pre>\n\n<p>And when I just want to calculate something with a not copyable object of a struct (for example the length of a vector), it won't work, since the value will either be consumed, so the struct gets invalid, or the borrow checker says \"cannot move out of borrowed context\".\nHow would I correctly use a generic math, when mutating structs?\nIs it only possible for copyable types (or explicit cloning)?</p>\n"}, {"tags": ["casting", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487841622, "post_id": 42403296, "comment_id": 71969079, "body": "I know what <code>unwrap</code> is tempting, however it might be best to teach newcomers to use <code>expect</code> instead. It does make diagnosing what went wrong esaier after all."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 4, "last_activity_date": 1487849094, "last_edit_date": 1487849094, "creation_date": 1487801634, "answer_id": 42403296, "question_id": 42402632, "link": "https://stackoverflow.com/questions/42402632/non-scalar-cast-boxfnmutany/42403296#42403296", "title": "Non-scalar cast: `Box&lt;FnMut&lt;&amp;Any&gt;&gt;`", "body": "<p>There are a few problems here.</p>\n\n<p>First, what you're trying to do (cast from <code>FnMut&lt;&amp;TSource, &amp;mut TTarget&gt;</code> to <code>FnMut&lt;&amp;Any, &amp;mut Any&gt;</code>) isn't valid.  If you had succeeded you would have been able to call a function expecting a <code>&amp;TSource</code> with a different type - so you'd have broken type safety and caused undefined behaviour.</p>\n\n<p>To fix this, you can wrap it in a closure which downcasts the <code>Any</code> and handles any errors (in this example it will <code>panic</code> as I use <code>unwrap</code>):</p>\n\n<pre><code>    Box::new(\n        move |a, b| {\n            let a = a.downcast_ref().expect(\"a was the wrong type.\");\n            let b = b.downcast_mut().expect(\"b was the wrong type.\");\n            (self.select)(a, b)\n        }\n    )\n</code></pre>\n\n<p>At this point the next problem becomes apparent: <code>TypedSelector</code> owns the original boxed closure (<code>select</code>), but this new closure needs access to it.  There are three ways to pass values in Rust, and none work as is:</p>\n\n<ul>\n<li>By value (move) won't work unless <code>selector</code> takes <code>self</code> by value (and hence destroys it in the process)</li>\n<li>By immutable <code>&amp;reference</code> wouldn't allow you to call the <code>FnMut</code></li>\n<li>By mutable <code>&amp;mut reference</code> similarly can't be done from the immutable <code>&amp;self</code>.</li>\n</ul>\n\n<p>So something needs to change. I'm going to arbitrarily pick the most fully featured but heavy-weight option, and use <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> to have shared reference-counted pointers to the internally-mutable <code>FnMut</code>; this might not be the option which is best for your situation:</p>\n\n<pre><code>fn selector(&amp;self) -&gt; Box&lt;FnMut(&amp;Any, &amp;mut Any)+'static&gt; {\n    let wrapped = self.select.clone();\n    Box::new(\n        move |a, b| {\n            let a = a.downcast_ref().expect(\"a was the wrong type.\");\n            let b = b.downcast_mut().expect(\"b was the wrong type.\");\n\n            // Mutably borrow the shared closure (checked at runtime)\n            let mut f = wrapped.borrow_mut(); \n\n            (&amp;mut *f)(a, b)\n        }\n    )\n    //self.select as Box&lt;FnMut(&amp;Any, &amp;mut Any)&gt;\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=d70256fceab073c128d9778e83a40ca8&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground link</a>)</p>\n"}], "owner": {"reputation": 262, "user_id": 7140196, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a95eb78cd884fcb99a27a0e4c170035d?s=128&d=identicon&r=PG&f=1", "display_name": "vuilehaid", "link": "https://stackoverflow.com/users/7140196/vuilehaid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 42403296, "answer_count": 1, "score": 4, "last_activity_date": 1487849094, "creation_date": 1487798960, "question_id": 42402632, "link": "https://stackoverflow.com/questions/42402632/non-scalar-cast-boxfnmutany", "title": "Non-scalar cast: `Box&lt;FnMut&lt;&amp;Any&gt;&gt;`", "body": "<p>I am trying to return a closure that takes an <code>&amp;Any</code> as argument. Following code returns a compiler error.</p>\n\n<pre><code>trait Selector {\n    fn id(&amp;self) -&gt; i64;\n    fn selector(&amp;self) -&gt; Box&lt;FnMut(&amp;Any, &amp;mut Any)&gt;;\n}\nstruct TypedSelector&lt;TSource, TTarget&gt; {\n    id: i64,\n    select: Box&lt;FnMut(&amp;TSource, &amp;mut TTarget)&gt;,\n}\nimpl&lt;TSource, TTarget&gt; Selector for TypedSelector&lt;TSource, TTarget&gt;\n    where TSource: 'static,\n          TTarget: 'static\n{\n    fn id(&amp;self) -&gt; i64 {\n        self.id\n    }\n    fn selector(&amp;self) -&gt; Box&lt;FnMut(&amp;Any, &amp;mut Any)&gt; {\n        self.select as Box&lt;FnMut(&amp;Any, &amp;mut Any)&gt;\n    }\n}\n</code></pre>\n\n<p>The compiler error is the following:</p>\n\n<pre><code>error: non-scalar cast: `Box&lt;for&lt;'r, 'r&gt; std::ops::FnMut(&amp;'r TSource, &amp;'r mut TTarget) + 'static&gt;` as `Box&lt;for&lt;'r, 'r&gt; std::ops::FnMut(&amp;'r std::any::Any + 'static, &amp;'r mut std::any::Any + 'static)&gt;`\n   --&gt; src\\main.rs:190:9\n    |\n190 |         self.select as Box&lt;FnMut(&amp;Any, &amp;mut Any)&gt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Am I missing some type annotations?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1487781677, "post_id": 42397199, "comment_id": 71941744, "body": "&quot;<i>it would let you call it twice and get two <code>&amp;&#39;a mut</code> references</i>&quot; -&gt; I don&#39;t think so. For example, look at <a href=\"https://play.rust-lang.org/?gist=e1fa7f12abeb7255bac4deaed23a2ce0&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">this code</a>. I used <code>transmute()</code> to make the method work, but I still can&#39;t create two mutable references. Also: I specifically want the returned reference to have the &quot;longer&quot; lifetime, namely <code>&#39;a</code>."}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 4, "creation_date": 1487782098, "post_id": 42397199, "comment_id": 71942020, "body": "Yes you can: <a href=\"https://play.rust-lang.org/?gist=819f30fafa65066e9f9d8c766cf17106&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 6, "last_activity_date": 1487783313, "last_edit_date": 1487783313, "creation_date": 1487781245, "answer_id": 42397199, "question_id": 42397056, "link": "https://stackoverflow.com/questions/42397056/cannot-infer-an-appropriate-lifetime-for-pattern-due-to-conflicting-requirement/42397199#42397199", "title": "&quot;cannot infer an appropriate lifetime for pattern due to conflicting requirements&quot; in `ref mut` pattern", "body": "<p>It looks like the conflict is that the return value:</p>\n\n<ul>\n<li>Must be valid for at least the lifetime <code>'a</code></li>\n<li>Must not outlive <code>&amp;mut self</code>, which is only the lifetime of the function call.</li>\n</ul>\n\n<p>If this were allowed, it would let you call it twice and get two <code>&amp;'a mut</code> references to the same <code>String</code> contents:</p>\n\n<pre><code>let mut w = RefWrap { wrap: &amp;mut s };\nlet ref1 = w.unwrap();\nlet ref2 = w.unwrap();  // two mutable references!\n</code></pre>\n\n<p>The reason is that the way Rust reasons about whether something is borrowed is by tying lifetimes together - but here you are explicitly saying that the return value's lifetime is unrelated to <code>&amp;mut self</code>, which means it doesn't extend the borrow - and then you can borrow again with another call.</p>\n\n<p>The solution here, to get the original reference lifetime out without risking a second <code>&amp;mut</code> reference overlapping it, is to take <code>self</code> by value (move) so that it can't be used again.  The compiler is happy with this:</p>\n\n<pre><code>impl&lt;'a&gt; RefWrap&lt;'a&gt; {\n    fn unwrap(self) -&gt; &amp;'a mut String {\n        match *self.wrap {\n            Some(ref mut s) =&gt; s,\n            None =&gt; panic!(),\n        }\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=9c89cec9d2e21598ede8706553c65c84&amp;version=nightly&amp;backtrace=0\" rel=\"noreferrer\">Playground</a>)</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1183, "favorite_count": 1, "accepted_answer_id": 42397199, "answer_count": 1, "score": 8, "last_activity_date": 1487783313, "creation_date": 1487780850, "last_edit_date": 1495542716, "question_id": 42397056, "link": "https://stackoverflow.com/questions/42397056/cannot-infer-an-appropriate-lifetime-for-pattern-due-to-conflicting-requirement", "title": "&quot;cannot infer an appropriate lifetime for pattern due to conflicting requirements&quot; in `ref mut` pattern", "body": "<pre><code>struct RefWrap&lt;'a&gt; {\n    wrap: &amp;'a mut Option&lt;String&gt;,\n}\n\nimpl&lt;'a&gt; RefWrap&lt;'a&gt; {\n    fn unwrap(&amp;mut self) -&gt; &amp;'a mut String {\n        match *self.wrap {\n            Some(ref mut s) =&gt; s,\n            None =&gt; panic!(),\n        }\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=fd85a8da40b1cdb333ff190b99fcd77a&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>As far as I understand, this code is correct (the returned reference really has the lifetime <code>'a</code>. But Rust produces the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for pattern due to conflicting requirements\n --&gt; &lt;anon&gt;:8:18\n  |\n8 |             Some(ref mut s) =&gt; s,\n  |                  ^^^^^^^^^\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=1f7ea385c6556746d3a3305afd526a50&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Using immutable references</a>, it works without an error.</p>\n\n<p>There has been <a href=\"https://stackoverflow.com/questions/28089695/lifetime-of-variable-in-a-match-pattern\">one similar question</a>, but I'm pretty sure it's not helpful in this case.</p>\n"}, {"tags": ["serialization", "rust", "serde", "cbor"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1487772005, "post_id": 42392935, "comment_id": 71934531, "body": "I... don&#39;t think you can do that. You can&#39;t recover the struct unless you know its concrete type, and you can&#39;t call methods on it unless you have a pointer to its vtable -- which you can&#39;t figure out unless you have access to its concrete type. Can you serialize a vtable?"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1487772552, "post_id": 42392935, "comment_id": 71934966, "body": "Seems to be the case, but I was hoping someone would point out something I&#39;m missing. I have a non-idiomatic solution for this but adds coupling to the code... so I&#39;m looking for something better."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 3, "creation_date": 1487779961, "post_id": 42392935, "comment_id": 71940549, "body": "Are you sure you want polymorphism and not simply an enum? Do you need your code to work with user supplied types?"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1487785375, "post_id": 42392935, "comment_id": 71944273, "body": "I.... you know... but....no. You are correct, @ker. The &quot;non-idiomatic&quot; solution I had becomes far more natural when using enums with data associated to them. I keep trying to use enums as standard C enums, but I can change my design to use enums. If you post your suggestions as an answer, I&#39;ll accept it."}, {"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 1, "creation_date": 1487799928, "post_id": 42392935, "comment_id": 71952767, "body": "What about deserializing into an implementation that also implements <code>Into</code> for all other <code>Contract</code> implementations?"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1487853042, "post_id": 42392935, "comment_id": 71976860, "body": "@w.brian, that sounds plausible, but I ended up going with switching my design to using an enum of types implementing Contract with an associated struct of the corresponding type, that serializes flawlessly and then I do pattern matching on the enum and operate on the associated data. That was probably a better design from the start, but sometimes you have to go the wrong way first."}], "answers": [{"comments": [{"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1487939493, "post_id": 42434625, "comment_id": 72021311, "body": "Used the structures Bar and Baz as the associated data for the enum, but went pretty much with this design otherwise. Thanks!"}, {"owner": {"reputation": 3861, "user_id": 590967, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/88ccc433efa17e12844762353ce93b8c?s=128&d=identicon&r=PG", "display_name": "Shisoft", "link": "https://stackoverflow.com/users/590967/shisoft"}, "edited": false, "score": 0, "creation_date": 1509632167, "post_id": 42434625, "comment_id": 81103388, "body": "What about if there is arbitrary set of type from a trait with type parameters?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 3861, "user_id": 590967, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/88ccc433efa17e12844762353ce93b8c?s=128&d=identicon&r=PG", "display_name": "Shisoft", "link": "https://stackoverflow.com/users/590967/shisoft"}, "edited": false, "score": 0, "creation_date": 1509721703, "post_id": 42434625, "comment_id": 81147496, "body": "@Shisoft not sure I understand. Why don&#39;t you open a new question?"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 9, "last_activity_date": 1487936874, "last_edit_date": 1487936874, "creation_date": 1487927186, "answer_id": 42434625, "question_id": 42392935, "link": "https://stackoverflow.com/questions/42392935/how-do-i-deserialize-into-trait-not-a-concrete-type/42434625#42434625", "title": "How do I deserialize into trait, not a concrete type?", "body": "<p>It looks like you fell into the same trap that I fell into when I moved from C++ to Rust. Trying to use polymorphism to model a fixed set of variants of a type. Rust's enums (similar to Haskell's enums, and equivalent to Ada's variant record types) are different from classical enums in other languages, because the enum variants can have fields of their own.</p>\n\n<p>I suggest you change your code to</p>\n\n<pre><code>#[derive(Debug, Serialize, Deserialize)]\nenum Contract {\n    Bar { data: Vec&lt;Foo&gt; },\n    Baz { data: Vec&lt;Foo&gt;, tag: String },\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Foo {\n    x: u32,\n    y: u32,\n}\n\nimpl Contract {\n    fn do_something(&amp;self) {\n        match *self {\n            Contract::Bar { ref data } =&gt; println!(\"I'm a Bar and this is my data {:?}\", data),\n            Contract::Baz { ref data, ref tag } =&gt; {\n                println!(\"I'm Baz {} and this is my data {:?}\", tag, data)\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 99, "user_id": 7432829, "user_type": "registered", "profile_image": "https://graph.facebook.com/10210812703887811/picture?type=large", "display_name": "Marcin", "link": "https://stackoverflow.com/users/7432829/marcin"}, "edited": false, "score": 0, "creation_date": 1614915327, "post_id": 53997439, "comment_id": 117537099, "body": "how would you &#39;unpack&#39; the struct from the second example? at the moment the output would be <code>File(File{path:&quot;foo&quot;})</code>. What&#39;s the cleanest implementation to get <code>File{path:&quot;foo&quot;}</code> instead?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1546363792, "last_edit_date": 1546363792, "creation_date": 1546363191, "answer_id": 53997439, "question_id": 42392935, "link": "https://stackoverflow.com/questions/42392935/how-do-i-deserialize-into-trait-not-a-concrete-type/53997439#53997439", "title": "How do I deserialize into trait, not a concrete type?", "body": "<p>Adding on to <a href=\"https://stackoverflow.com/a/42434625/155423\">oli_obk's answer</a>, you can use Serde's <a href=\"https://serde.rs/enum-representations.html\" rel=\"nofollow noreferrer\">enum representation</a>  to distinguish between the types.</p>\n\n<p>Here, I use the internally-tagged representation to deserialize these two similar objects into the appropriate variant:</p>\n\n<pre><code>{\n  \"driver\": \"file\",\n  \"path\": \"/var/log/foo\"\n}\n</code></pre>\n\n<pre><code>{\n  \"driver\": \"http\",\n  \"port\": 8080,\n  \"endpoint\": \"/api/bar\"\n}\n</code></pre>\n\n\n\n<pre><code>use serde; // 1.0.82\nuse serde_derive::*; // 1.0.82\nuse serde_json; // 1.0.33\n\n#[derive(Debug, Deserialize, PartialEq)]\n#[serde(tag = \"driver\")]\nenum Driver {\n    #[serde(rename = \"file\")]\n    File { path: String },\n    #[serde(rename = \"http\")]\n    Http { port: u16, endpoint: String }\n}\n\nfn main() {\n    let f = r#\"   \n{\n  \"driver\": \"file\",\n  \"path\": \"/var/log/foo\"\n}\n\"#;\n\n    let h = r#\"\n{\n  \"driver\": \"http\",\n  \"port\": 8080,\n  \"endpoint\": \"/api/bar\"\n}\n\"#;\n\n    let f: Driver = serde_json::from_str(f).unwrap();\n    assert_eq!(f, Driver::File { path: \"/var/log/foo\".into() });\n\n    let h: Driver = serde_json::from_str(h).unwrap();\n    assert_eq!(h, Driver::Http { port: 8080, endpoint: \"/api/bar\".into() });\n}\n</code></pre>\n\n<p>You don't have to squash it all into one enum, you can create separate types as well:</p>\n\n<pre><code>#[derive(Debug, Deserialize, PartialEq)]\n#[serde(tag = \"driver\")]\nenum Driver {\n    #[serde(rename = \"file\")]\n    File(File),\n    #[serde(rename = \"http\")]\n    Http(Http),\n}\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct File {\n    path: String,\n}\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct Http {\n    port: u16,\n    endpoint: String,\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1596703279, "post_id": 63253738, "comment_id": 111897739, "body": "Thanks for your answer, Shep! Was this inspired by the answer I just received to another of my questions? <a href=\"https://stackoverflow.com/questions/57560593/why-do-i-get-an-unsupportedtype-error-when-serializing-to-toml-with-a-manually-i/63272188#63272188\" title=\"why do i get an unsupportedtype error when serializing to toml with a manually i\">stackoverflow.com/questions/57560593/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 1, "creation_date": 1596717718, "post_id": 63253738, "comment_id": 111904702, "body": "@Dash83 it was actually due to <a href=\"https://stackoverflow.com/q/63253424/155423\">How can I use serde to deserialize into a hierarchical decentralized configuration?</a>, which I wanted to close as a duplicate of this and <a href=\"https://stackoverflow.com/q/44231020/155423\">How can deserialization of polymorphic trait objects be added in Rust if at all?</a> (which I&#39;m sad that both questions exist to start with). Neither question had an answer showing how to use typetag though."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1596568858, "creation_date": 1596568858, "answer_id": 63253738, "question_id": 42392935, "link": "https://stackoverflow.com/questions/42392935/how-do-i-deserialize-into-trait-not-a-concrete-type/63253738#63253738", "title": "How do I deserialize into trait, not a concrete type?", "body": "<p>You can use <a href=\"https://crates.io/crates/typetag\" rel=\"noreferrer\">typetag</a> to solve the problem. Add <code>#[typetag::serde]</code> (or <code>::deserialize</code>, as shown here) to the trait and each implementation:</p>\n<pre><code>use serde::Deserialize;\n\n#[typetag::deserialize(tag = &quot;driver&quot;)]\ntrait Contract {\n    fn do_something(&amp;self);\n}\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct File {\n    path: String,\n}\n\n#[typetag::deserialize(name = &quot;file&quot;)]\nimpl Contract for File {\n    fn do_something(&amp;self) {\n        eprintln!(&quot;I'm a File {}&quot;, self.path);\n    }\n}\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct Http {\n    port: u16,\n    endpoint: String,\n}\n\n#[typetag::deserialize(name = &quot;http&quot;)]\nimpl Contract for Http {\n    fn do_something(&amp;self) {\n        eprintln!(&quot;I'm an Http {}:{}&quot;, self.endpoint, self.port);\n    }\n}\n\nfn main() {\n    let f = r#&quot;\n{\n  &quot;driver&quot;: &quot;file&quot;,\n  &quot;path&quot;: &quot;/var/log/foo&quot;\n}\n&quot;#;\n\n    let h = r#&quot;\n{\n  &quot;driver&quot;: &quot;http&quot;,\n  &quot;port&quot;: 8080,\n  &quot;endpoint&quot;: &quot;/api/bar&quot;\n}\n&quot;#;\n\n    let f: Box&lt;dyn Contract&gt; = serde_json::from_str(f).unwrap();\n    f.do_something();\n\n    let h: Box&lt;dyn Contract&gt; = serde_json::from_str(h).unwrap();\n    h.do_something();\n}\n</code></pre>\n<pre><code>[dependencies]\nserde_json = &quot;1.0.57&quot;\nserde = { version = &quot;1.0.114&quot;, features = [&quot;derive&quot;] }\ntypetag = &quot;0.1.5&quot;\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/44231020/155423\">How can deserialization of polymorphic trait objects be added in Rust if at all?</a></li>\n</ul>\n"}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1977, "favorite_count": 2, "accepted_answer_id": 42434625, "answer_count": 3, "score": 10, "last_activity_date": 1596568858, "creation_date": 1487770361, "last_edit_date": 1487778935, "question_id": 42392935, "link": "https://stackoverflow.com/questions/42392935/how-do-i-deserialize-into-trait-not-a-concrete-type", "title": "How do I deserialize into trait, not a concrete type?", "body": "<p>I'm trying to do struct serialization, in which the bytes would eventually be sent down a pipe, reconstructed and methods be called on them.</p>\n\n<p>I created a trait these structs would implement as appropriate and I'm using serde and serde-cbor for serialization:</p>\n\n<pre><code>extern crate serde_cbor;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde;\n\nuse serde_cbor::ser::*;\nuse serde_cbor::de::*;\n\ntrait Contract {\n    fn do_something(&amp;self);\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Foo {\n    x: u32,\n    y: u32,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Bar {\n    data: Vec&lt;Foo&gt;,\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Baz {\n    data: Vec&lt;Foo&gt;,\n    tag: String,\n}\n\nimpl Contract for Bar {\n    fn do_something(&amp;self) {\n        println!(\"I'm a Bar and this is my data {:?}\", self.data);\n    }\n}\n\nimpl Contract for Baz {\n    fn do_something(&amp;self) {\n        println!(\"I'm Baz {} and this is my data {:?}\", self.tag, self.data);\n    }\n}\n\nfn main() {\n    let data = Bar { data: vec![Foo { x: 1, y: 2 }, Foo { x: 3, y: 4 }, Foo { x: 7, y: 8 }] };\n    data.do_something();\n\n    let value = to_vec(&amp;data).unwrap();\n    let res: Result&lt;Contract, _&gt; = from_reader(&amp;value[..]);\n    let res = res.unwrap();\n    println!(\"{:?}\", res);\n    res.do_something();\n}\n</code></pre>\n\n<p>When I try to reconstruct the bytes using the trait as the type (given that I wouldn't know which underlying object is being sent), the compiler complains that the trait does not implement the <code>Sized</code> trait:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `Contract: std::marker::Sized` is not satisfied\n  --&gt; src/main.rs:52:15\n   |\n52 |     let res: Result&lt;Contract, _&gt; = from_reader(&amp;value[..]);\n   |              ^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Sized` is not implemented for `Contract`\n   |\n   = note: `Contract` does not have a constant size known at compile-time\n   = note: required by `std::result::Result`\n</code></pre>\n</blockquote>\n\n<p>I guess it makes sense since the compiler doesn't know how big the struct is supposed to be and doesn't know how to line up the bytes for it. If I change the line where I deserialize the object to specify the actual struct type, it works:</p>\n\n<pre><code>let res: Result&lt;Bar, _&gt; = from_reader(&amp;value[..]);\n</code></pre>\n\n<p>Is there a better pattern to achieve this serialization + polymorphism behavior?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1487783005, "post_id": 42392332, "comment_id": 71942681, "body": "Yes, that solves it. Is it correct to say that <code>self.ll.front_mut()</code> creates an <code>Option</code> on the stack and the <code>&amp;</code> before it tries to return the reference to the Option which of course is not living long enough as it&#39;s dropped at the end of the method?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "edited": false, "score": 0, "creation_date": 1487784888, "post_id": 42392332, "comment_id": 71943956, "body": "Yes, the returned Option is a temporary, so you can&#39;t return a reference."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 4, "last_activity_date": 1487768775, "creation_date": 1487768775, "answer_id": 42392332, "question_id": 42392250, "link": "https://stackoverflow.com/questions/42392250/return-reference-to-linkedlist-element/42392332#42392332", "title": "Return reference to Linkedlist element", "body": "<p>The problem is not the reference inside the <code>Option</code>, it's the <code>Option</code> object itself. Return it by value, not by reference.</p>\n\n<pre><code>impl Bar {\n    fn foo_alloc(&amp;mut self) -&gt; Option&lt;&amp;mut Foo&gt; {\n        let foo = Foo{};\n        self.ll.push_back(foo);\n        self.ll.front_mut()\n    }\n}\n</code></pre>\n\n<p>I've also removed the lifetime annotations, because the default lifetime deduction does the correct thing here.</p>\n"}], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 42392332, "answer_count": 1, "score": 2, "last_activity_date": 1487768775, "creation_date": 1487768497, "question_id": 42392250, "link": "https://stackoverflow.com/questions/42392250/return-reference-to-linkedlist-element", "title": "Return reference to Linkedlist element", "body": "<p>I want to implement a function which instantiates a new element, adds it to a linked list and then returns the reference to the element it just created. This is what I came up with:</p>\n\n<pre><code>use std::collections::LinkedList;\n\nstruct Bar {\n    ll: LinkedList&lt;Foo&gt;\n}\n\nstruct Foo {}\n\n\nimpl Bar {\n    fn foo_alloc&lt;'a&gt;(&amp;'a mut self) -&gt; &amp;Option&lt;&amp;'a mut Foo&gt; {\n        let foo = Foo{};\n        self.ll.push_back(foo);\n        &amp;self.ll.front_mut()\n    }\n}\n</code></pre>\n\n<p>I thought that when I bind the lifetime of the returned reference to the <code>Bar</code> instance (via <code>&amp;'a mut self</code>) then this should be enough, but apparently it is not.</p>\n\n<p>Here's the error:</p>\n\n<pre><code>error: borrowed value does not live long enough\n  --&gt; src/main.rs:14:10\n   |\n14 |         &amp;self.ll.front_mut()\n   |          ^^^^^^^^^^^^^^^^^^^ does not live long enough\n15 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the body at 11:59...\n  --&gt; src/main.rs:11:60\n   |\n11 |       fn foo_alloc&lt;'a&gt;(&amp;'a mut self) -&gt; &amp;Option&lt;&amp;'a mut Foo&gt; {\n   |  ____________________________________________________________^ starting here...\n12 | |         let foo = Foo{};\n13 | |         self.ll.push_back(foo);\n14 | |         &amp;self.ll.front_mut()\n15 | |     }\n   | |_____^ ...ending here\n</code></pre>\n"}, {"tags": ["generics", "rust", "type-level-computation"], "answers": [{"comments": [{"owner": {"reputation": 938, "user_id": 4163506, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/57e96b2432b47a690aecb5f532739f8c?s=128&d=identicon&r=PG&f=1", "display_name": "Lazarus535", "link": "https://stackoverflow.com/users/4163506/lazarus535"}, "edited": false, "score": 0, "creation_date": 1487769887, "post_id": 42392334, "comment_id": 71932903, "body": "I tried to do it like in Haskell (kind of anyways...). I know not to take this kind of stuff overboard. :-) Thank you for the excellent answer!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 938, "user_id": 4163506, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/57e96b2432b47a690aecb5f532739f8c?s=128&d=identicon&r=PG&f=1", "display_name": "Lazarus535", "link": "https://stackoverflow.com/users/4163506/lazarus535"}, "edited": false, "score": 1, "creation_date": 1487770151, "post_id": 42392334, "comment_id": 71933122, "body": "@Lazarus535: But... But... Overboard is FUN! :D"}, {"owner": {"reputation": 938, "user_id": 4163506, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/57e96b2432b47a690aecb5f532739f8c?s=128&d=identicon&r=PG&f=1", "display_name": "Lazarus535", "link": "https://stackoverflow.com/users/4163506/lazarus535"}, "edited": false, "score": 0, "creation_date": 1487770568, "post_id": 42392334, "comment_id": 71933429, "body": "It definitely is! I am actually rewriting a small project now in Rust but i always get distracted with such stuff. :-D"}, {"owner": {"reputation": 325758, "user_id": 415784, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/2WX9Z.jpg?s=128&g=1", "display_name": "Nawaz", "link": "https://stackoverflow.com/users/415784/nawaz"}, "edited": false, "score": 0, "creation_date": 1545206754, "post_id": 42392334, "comment_id": 94541360, "body": "Fixed the issue in <code>Mul</code>. @MatthieuM., please review it. :-)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1545280374, "last_edit_date": 1545280374, "creation_date": 1487768782, "answer_id": 42392334, "question_id": 42391439, "link": "https://stackoverflow.com/questions/42391439/rust-type-level-multiplication/42392334#42392334", "title": "Rust type-level multiplication", "body": "<p>I think you are misusing generics, and that is the root of your issue.</p>\n\n<p>Generics in Rust have <em>inputs</em> and <em>outputs</em>:</p>\n\n<ul>\n<li>The inputs are specified as parameters between <code>&lt;&gt;</code></li>\n<li>The outputs (also called associated types) are specified inside the type</li>\n</ul>\n\n<p>The intuition is that for a given set of inputs, a single type is selected for each output.</p>\n\n<p>In your case, we have to rework the traits for that:</p>\n\n<pre><code>trait Add&lt;Rhs: Nat&gt;: Nat {\n    type Result: Nat;\n}\n</code></pre>\n\n<p>The definition of the trait says:</p>\n\n<ul>\n<li><code>Add</code> requires that <code>Self</code> be <code>Nat</code></li>\n<li><code>Add</code> is implemented for a right-hand side argument which must be <code>Nat</code></li>\n<li>A given implementation of <code>Add</code> has a <code>Result</code> type, which must be <code>Nat</code></li>\n</ul>\n\n<p>Now we can implement it:</p>\n\n<pre><code>impl&lt;T: Nat&gt; Add&lt;T&gt; for Zero {\n    type Result = T;\n}\n\nimpl&lt;A: Nat, B: Nat&gt; Add&lt;B&gt; for Succ&lt;A&gt;\n    where A: Add&lt;Succ&lt;B&gt;&gt;\n{\n    type Result = &lt; A as Add&lt;Succ&lt;B&gt;&gt; &gt;::Result;\n}\n</code></pre>\n\n<p>Note that functions are completely unnecessary, the result of \"A + B\" is:</p>\n\n<pre><code>&lt;A as Add&lt;B&gt;&gt;::Result\n</code></pre>\n\n<p>Now, on to multiplication:</p>\n\n<pre><code>trait Mul&lt;Rhs: Nat&gt;: Nat {\n    type Result: Nat;\n}\n\nimpl&lt;T: Nat&gt; Mul&lt;T&gt; for Zero {\n    type Result = Zero;\n}\n\n\n// The first attempt does not work, but I'm keeping it here as \n// it is good for learning purpose.\n// \n// impl&lt;A: Nat, B: Nat&gt; Mul&lt;B&gt; for Succ&lt;A&gt;\n//    where A: Mul&lt;B&gt; + Add&lt; &lt;A as Mul&lt;B&gt;&gt;::Result &gt;\n// {\n//    type Result = &lt;A as Add&lt; &lt;A as Mul&lt;B&gt;&gt;::Result &gt;&gt;::Result;\n// }\n//\n// Think: \n//   1. Why exactly does it not work? \n//   2. What exactly is going on here?\n//   3. How would you multiply numbers in terms of addition? \n//   4. m * n = m + m + m ... (n times)? Or: n + n + .. (m times)?\n// \n// Answering these questions will help learning the intricacies of\n// Rust's traits/type-system and how they work. \n\nimpl&lt;A: Nat, B: Nat&gt; Mul&lt;B&gt; for Succ&lt;A&gt;\nwhere\n    A: Mul&lt;B&gt;,\n    B: Add&lt;&lt;A as Mul&lt;B&gt;&gt;::Result&gt;,\n{\n    type Result = &lt;B as Add&lt;&lt;A as Mul&lt;B&gt;&gt;::Result&gt;&gt;::Result;\n}\n</code></pre>\n\n<p>And this now compiles:</p>\n\n<pre><code>fn main() {\n    type One = Succ&lt;Zero&gt;;\n    type Two = &lt;One as Add&lt;One&gt;&gt;::Result;\n    type Four = &lt;Two as Mul&lt;Two&gt;&gt;::Result;\n}\n</code></pre>\n\n<p>Note that such Peano arithmetic has fairly annoying limitations though, notably in the depth of recursion. Your addition is O(N), your multiplication is O(N^2), ...</p>\n\n<p>If you are interested in more efficient representations and computations, I advise you to check the <a href=\"https://crates.io/crates/typenum\" rel=\"nofollow noreferrer\">typenum</a> crate which is the state of the art.</p>\n"}], "owner": {"reputation": 938, "user_id": 4163506, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/57e96b2432b47a690aecb5f532739f8c?s=128&d=identicon&r=PG&f=1", "display_name": "Lazarus535", "link": "https://stackoverflow.com/users/4163506/lazarus535"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 466, "favorite_count": 0, "accepted_answer_id": 42392334, "answer_count": 1, "score": 6, "last_activity_date": 1545280374, "creation_date": 1487766293, "last_edit_date": 1487767811, "question_id": 42391439, "link": "https://stackoverflow.com/questions/42391439/rust-type-level-multiplication", "title": "Rust type-level multiplication", "body": "<p>I'm trying to implement type-level multiplication in Rust.</p>\n\n<p>Addition is already working, but I got issues with a \"temporary\" type variable.</p>\n\n<p>The code:</p>\n\n<pre><code>use std::marker::PhantomData;\n\n//Trait for the type level naturals\ntrait Nat {}\nimpl Nat for Zero {}\nimpl&lt;T: Nat&gt; Nat for Succ&lt;T&gt; {}\n\n//Zero and successor types\nstruct Zero;\nstruct Succ&lt;T: Nat&gt;(PhantomData&lt;T&gt;);\n\n//Type level addition\ntrait Add&lt;B,C&gt; \n  where Self: Nat,\n        B: Nat,\n        C: Nat \n  {}\n\nimpl&lt;B: Nat&gt; Add&lt;B,B&gt; for Zero {}\nimpl&lt;A: Nat,B: Nat,C: Nat&gt; Add&lt;B,C&gt; for Succ&lt;A&gt;\n  where A: Add&lt;Succ&lt;B&gt;,C&gt;\n  {}\n\nfn add&lt;A: Nat, B: Nat, C: Nat&gt;(\n  a: PhantomData&lt;A&gt;, \n  b: PhantomData&lt;B&gt;) \n  -&gt; PhantomData&lt;C&gt; \n    where A: Add&lt;B,C&gt; { PhantomData }\n\n//Type level multiplication\ntrait Mult&lt;B,C&gt;\n  where Self: Nat,\n        B: Nat,\n        C: Nat,\n  {}\n\nimpl&lt;B: Nat&gt; Mult&lt;B,Zero&gt; for Zero {}\n\n//ERROR HERE: \"unconstrained type parameter 'C'\"\n//impl&lt;A: Nat, B: Nat,C: Nat, D: Nat&gt; Mult&lt;B,D&gt; for Succ&lt;A&gt;\n//  where A: Mult&lt;B,C&gt;,\n//        B: Add&lt;C,D&gt;\n//        {}\n\n\nfn main() {\n    let x: PhantomData&lt;Succ&lt;Succ&lt;Zero&gt;&gt;&gt; = PhantomData;\n    let y: PhantomData&lt;Succ&lt;Zero&gt;&gt; = PhantomData;\n\n    //uncomment ': i32' in the next line to see infered type\n    let z /*: i32*/ = add(x,y);\n}\n</code></pre>\n\n<p>The posted code compiles just fine and addition works.\nIf I uncomment the ERROR HERE section I get the following error message:</p>\n\n<pre><code>error[E0207]: the type parameter `C` is not constrained by the impl trait, self type, or predicates\n  --&gt; src/main.rs:40:21\n   |\n40 | impl&lt;A: Nat, B: Nat,C: Nat, D: Nat&gt; Mult&lt;B,D&gt; for Succ&lt;A&gt;\n   |                     ^ unconstrained type parameter\n\nerror: aborting due to previous error\n\nerror: Could not compile `4_18_generics`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n\n\n<ul>\n<li><p>Is there a way to use such \"temporary/intermediate\" type parameters?</p></li>\n<li><p>Is multiplication possible in any other way (I am currently not thinking of)?</p></li>\n<li><p>Is it generally not possible?</p></li>\n<li><p>Will it be possible in a future version of the language?</p></li>\n</ul>\n"}, {"tags": ["generics", "rust", "traits", "rust-macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487779459, "post_id": 42381185, "comment_id": 71940146, "body": "<i>Sometimes it&#39;s tedious to figure out what all traits to add to where to get the types you want</i> \u2014 sometimes it&#39;s tedious to get code that explicitly states its dependencies and doesn&#39;t mysteriously fail when some arbitrary type somewhere decides to rename a method; and I consider that a <b>good thing</b>. Rust is not Go. Automatically inferring membership in a trait is not a good thing, as the <i>signature</i> of a function is not the only thing that makes up the contract inferred by a trait. There are aspects that cannot be expressed in code, and that&#39;s why a human has to apply a trait."}, {"owner": {"reputation": 173, "user_id": 7332766, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/09c09b5a09dd0212bb9db55e05bcd4b1?s=128&d=identicon&r=PG&f=1", "display_name": "divbyzero", "link": "https://stackoverflow.com/users/7332766/divbyzero"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487839350, "post_id": 42381185, "comment_id": 71967637, "body": "I agree. My particular use case here is not one of those times, because it make one have to look deeper under the hood than a high level use case should require in theory (i.e. a numeric trait for integers without using an external crate), for example, <code>1..n</code> requires a trait, the type signature for a <code>std::ops::Add</code> that can support <code>a + b + c</code> starts to go deeper, and then you realize trait for <code>Zero</code> is not in stable. FWIW i share the sentiment on <code>go</code>."}], "answers": [{"comments": [{"owner": {"reputation": 173, "user_id": 7332766, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/09c09b5a09dd0212bb9db55e05bcd4b1?s=128&d=identicon&r=PG&f=1", "display_name": "divbyzero", "link": "https://stackoverflow.com/users/7332766/divbyzero"}, "edited": false, "score": 0, "creation_date": 1487740199, "post_id": 42381330, "comment_id": 71914952, "body": "Actually this causes problems as the compiler doesn&#39;t infer the common set of traits implemented by these types, and so you have to put each bound individually"}, {"owner": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 1, "creation_date": 1487769478, "post_id": 42381330, "comment_id": 71932609, "body": "You can do something like <code>trait DataSupported : Display + Debug {}</code> and write all traits you need there. You won&#39;t have to list those traits in <code>impl</code>s."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 35314, "user_id": 344347, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1d83837bce9d9a2656c4f5704d40c430?s=128&d=identicon&r=PG", "display_name": "Pavel Strakhov", "link": "https://stackoverflow.com/users/344347/pavel-strakhov"}, "edited": false, "score": 0, "creation_date": 1487782801, "post_id": 42381330, "comment_id": 71942527, "body": "@PavelStrakhov thanks, I&#39;ll update my answer with that."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1487783513, "last_edit_date": 1495540810, "creation_date": 1487728596, "answer_id": 42381330, "question_id": 42381185, "link": "https://stackoverflow.com/questions/42381185/specifying-generic-parameter-to-belong-to-a-small-set-of-types/42381330#42381330", "title": "Specifying generic parameter to belong to a small set of types", "body": "<p>You could use a marker trait for the types you want to support:</p>\n\n<pre><code>trait DataSupported {}\n\nimpl DataSupported for u64 {}\nimpl DataSupported for u32 {}\n\nimpl&lt;T&gt; Data&lt;T&gt; where T: DataSupported {}\n</code></pre>\n\n<p>As <a href=\"https://stackoverflow.com/questions/42381185/specifying-generic-parameter-to-belong-to-a-small-set-of-types/42381330#comment71932609_42381330\">Pavel Strakhov mentioned</a>, if you need to use this trait for a few <code>impl</code>s and you need other trait bounds, then you can just make those traits as bounds of your marker trait instead, which will keep your <code>impl</code>s terse:</p>\n\n<pre><code>trait DataSupported: Num + Debug {}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1548161907, "creation_date": 1548161907, "answer_id": 54308827, "question_id": 42381185, "link": "https://stackoverflow.com/questions/42381185/specifying-generic-parameter-to-belong-to-a-small-set-of-types/54308827#54308827", "title": "Specifying generic parameter to belong to a small set of types", "body": "<p>You can use a macro to add implementations based on a list of types:</p>\n\n<pre><code>macro_rules! data_impl {\n    ($($t: ty),+) =&gt; {\n        $(\n            impl Data&lt;$t&gt; {\n                // methods go here\n            }\n        )+\n    }\n}\n\ndata_impl!(u32, u64, i32, i64);\n</code></pre>\n\n<p>It's probably worth adding <code>#[allow(dead_code)]</code> to each method to prevent warnings, since you'll be defining lots of specialised methods that may not be used in your application if you don't use them for <em>every</em> possible type. This is exactly the same thing that the compiler does anyway if you define methods over a parameter <code>T</code> (a process called monomorphisation). The difference is that the macro-generated methods are defined during the compiler's parse step (before linting) while monomorphisation happens later in the pipeline.</p>\n"}], "owner": {"reputation": 173, "user_id": 7332766, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/09c09b5a09dd0212bb9db55e05bcd4b1?s=128&d=identicon&r=PG&f=1", "display_name": "divbyzero", "link": "https://stackoverflow.com/users/7332766/divbyzero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 315, "favorite_count": 0, "accepted_answer_id": 42381330, "answer_count": 2, "score": 1, "last_activity_date": 1548162010, "creation_date": 1487727629, "last_edit_date": 1548162010, "question_id": 42381185, "link": "https://stackoverflow.com/questions/42381185/specifying-generic-parameter-to-belong-to-a-small-set-of-types", "title": "Specifying generic parameter to belong to a small set of types", "body": "<p>Is it possible with to constrain a generic parameter to be one of the select few types without figuring out what traits precisely define those type?  e.g.</p>\n\n<pre><code>impl&lt;T&gt; Data&lt;T&gt; where T == u32 || T == u64 \n</code></pre>\n\n<p>Sometimes it's tedious to figure out what all traits to add to <code>where</code> to get the types you want, and sometimes one wouldn't want to allow a type even when it makes syntactic sense because of semantics. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 31, "user_id": 6642191, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-9YGGmcHKHi8/AAAAAAAAAAI/AAAAAAAAAEc/_KUSvfDKZrE/photo.jpg?sz=128", "display_name": "k.nyao", "link": "https://stackoverflow.com/users/6642191/k-nyao"}, "edited": false, "score": 0, "creation_date": 1487743635, "post_id": 42381215, "comment_id": 71916317, "body": "I solved the problem by your help! Thank you for your kindness."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1487727866, "creation_date": 1487727866, "answer_id": 42381215, "question_id": 42380121, "link": "https://stackoverflow.com/questions/42380121/how-do-i-treat-generics/42381215#42381215", "title": "How do I treat generics?", "body": "<p>The key to the answer is in this note from the compiler:</p>\n\n<blockquote>\n  <p>note: the method <code>new</code> exists but the following trait bounds were not satisfied: <code>Body : std::marker::Sized</code>, <code>Body : Body</code></p>\n</blockquote>\n\n<p>You've defined <code>B</code> as a type alias for <code>Body</code>, so the names <code>B</code> and <code>Body</code> both mean the same thing in your program (at least in this module).</p>\n\n<p>When you define a trait, the compiler also defines a type with the same name. However, that type cannot be instantiated directly (unlike a class in C++/C#/Java/etc.). Yet, that's exactly what you're trying to do!</p>\n\n<p>The trait bound <code>Body : std::marker::Sized</code> is not satisfied because <code>Body</code>, being the type defined by the compiler corresponding to the trait of the same name, is an unsized type. Unsized types can only be used in pointers and references (e.g. <code>&amp;Body</code>, <code>Box&lt;Body&gt;</code>, etc.).</p>\n\n<p>The trait bound <code>Body : Body</code> is not satisfied because your trait is not <a href=\"https://huonw.github.io/blog/2015/01/object-safety/\" rel=\"noreferrer\">object-safe</a>. It's not object-safe because the method <code>new</code> doesn't have a <code>self</code> parameter (this is what the compiler means in the last note: <code>method `new` has no receiver</code>).</p>\n\n<p>Normally, you would define a struct or an enum and implement the trait for that type, and then use that type when instantiating <code>RecursiveCall</code>. Try replacing <code>type B = Body;</code> with the following:</p>\n\n<pre><code>struct B;\n\nimpl Body for B {\n    fn new() -&gt; B {\n        B\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 31, "user_id": 6642191, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-9YGGmcHKHi8/AAAAAAAAAAI/AAAAAAAAAEc/_KUSvfDKZrE/photo.jpg?sz=128", "display_name": "k.nyao", "link": "https://stackoverflow.com/users/6642191/k-nyao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 42381215, "answer_count": 1, "score": 2, "last_activity_date": 1487727866, "creation_date": 1487720724, "last_edit_date": 1487721007, "question_id": 42380121, "link": "https://stackoverflow.com/questions/42380121/how-do-i-treat-generics", "title": "How do I treat generics?", "body": "<p>I would like to calculate a factorial using generics, but I get an error in <code>main</code>.</p>\n\n<p>My full code:</p>\n\n<pre><code>pub trait Body {\n    fn new() -&gt; Self;\n\n    fn fact(&amp;self, x: usize) -&gt; usize {\n        match x {\n            1 =&gt; 1,\n            _ =&gt; x * self.fact(x - 1),\n        }\n    }\n}\n\n#[derive(Clone, Debug)]\npub struct RecursiveCall&lt;T: Body&gt; {\n    level: usize,\n    indicator: String,\n    n_repeat: usize,\n    body: T,\n}\n\nimpl&lt;T&gt; RecursiveCall&lt;T&gt;\n    where T: Body\n{\n    fn new(n_repeat: usize) -&gt; RecursiveCall&lt;T&gt; {\n        RecursiveCall {\n            level: 0,\n            indicator: \"- \".to_string(),\n            n_repeat: n_repeat,\n            body: &lt;T as Body&gt;::new(),\n        }\n    }\n\n    fn pre_trace(&amp;self, fname: &amp;str, arg: &amp;usize) {\n        let args: String = arg.to_string();\n        println!(\"{}\",\n                 (vec![self.indicator.as_str(); self.level]).join(\"\") +\n                 self.level.to_string().as_str() + \":\" + fname + \"(\" +\n                 args.as_str() + \")\");\n    }\n\n    fn post_trace(&amp;self, fname: &amp;str, arg: &amp;usize, ret: &amp;usize) {\n        println!(\"{}\",\n                 (vec![self.indicator.as_str(); self.level]).join(\"\") +\n                 self.level.to_string().as_str() + \":\" + fname + \"=\" +\n                 ret.to_string().as_str());\n    }\n\n    fn print_trace(&amp;mut self) {\n        &amp;self.pre_trace(\"fact\", &amp;self.n_repeat);\n        self.level += 1;\n        let ret = &amp;self.body.fact(self.n_repeat);\n        self.level -= 1;\n        &amp;self.post_trace(\"fact\", &amp;self.n_repeat, ret);\n\n        println!(\"Difference={}\", &amp;ret.to_string().as_str());\n    }\n}\n\ntype B = Body;\nfn main() {\n    let t = RecursiveCall::&lt;B&gt;::new();\n}\n</code></pre>\n\n<p>This error occurs in <code>main()</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no associated item named `new` found for type `RecursiveCall&lt;Body + 'static&gt;` in the current scope\n  --&gt; src/main.rs:61:13\n   |\n61 |     let t = RecursiveCall::&lt;B&gt;::new();\n   |             ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: the method `new` exists but the following trait bounds were not satisfied: `Body : std::marker::Sized`, `Body : Body`\n   = help: items from traits can only be used if the trait is implemented and in scope; the following traits define an item `new`, perhaps you need to implement one of them:\n   = help: candidate #1: `Body`\n   = help: candidate #2: `std::sys_common::thread_info::NewThread`\n   = help: candidate #3: `std::iter::ZipImpl`\n\nerror[E0277]: the trait bound `Body + 'static: std::marker::Sized` is not satisfied\n  --&gt; src/main.rs:61:13\n   |\n61 |     let t = RecursiveCall::&lt;B&gt;::new();\n   |             ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Sized` is not implemented for `Body + 'static`\n   |\n   = note: `Body + 'static` does not have a constant size known at compile-time\n   = note: required by `RecursiveCall`\n\nerror[E0277]: the trait bound `Body + 'static: Body` is not satisfied\n  --&gt; src/main.rs:61:13\n   |\n61 |     let t = RecursiveCall::&lt;B&gt;::new();\n   |             ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Body` is not implemented for `Body + 'static`\n   |\n   = note: required by `RecursiveCall`\n\nerror[E0038]: the trait `Body` cannot be made into an object\n  --&gt; src/main.rs:61:13\n   |\n61 |     let t = RecursiveCall::&lt;B&gt;::new();\n   |             ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Body` cannot be made into an object\n   |\n   = note: method `new` has no receiver\n</code></pre>\n"}, {"tags": ["unix", "rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1487730486, "post_id": 42379689, "comment_id": 71912198, "body": "I don&#39;t think Rust&#39;s <code>std</code> has a way to change a file owner. But the <code>libc</code> crate (<a href=\"https://crates.io/crates/libc\" rel=\"nofollow noreferrer\">crates.io/crates/libc</a>) has a <code>chmod</code> function."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1487769042, "post_id": 42379689, "comment_id": 71932256, "body": "I suspect it&#39;s not included in <code>std</code> because it would have to be platform dependent."}], "answers": [{"tags": [], "owner": {"reputation": 143, "user_id": 5673010, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb78390568a1c374588c01c63253cd07?s=128&d=identicon&r=PG&f=1", "display_name": "dippi", "link": "https://stackoverflow.com/users/5673010/dippi"}, "is_accepted": true, "score": 6, "last_activity_date": 1487789292, "last_edit_date": 1495541836, "creation_date": 1487787458, "answer_id": 42399298, "question_id": 42379689, "link": "https://stackoverflow.com/questions/42379689/is-there-a-way-to-change-file-metadata-e-g-owner-on-unix-platforms-with-rust/42399298#42399298", "title": "Is there a way to change file metadata (e.g. owner) on Unix platforms with Rust?", "body": "<p>Some OS specific funtionality can be found in the <code>std::os</code> module: for example <a href=\"https://doc.rust-lang.org/std/os/unix/fs/trait.MetadataExt.html\" rel=\"nofollow noreferrer\"><code>std::os::unix::fs::MetadataExt</code></a> allows to read <code>uid</code>/ <code>guid</code> or <a href=\"https://doc.rust-lang.org/std/os/unix/fs/trait.PermissionsExt.html\" rel=\"nofollow noreferrer\"><code>std::os::unix::fs::PermissionsExt</code></a> handles file modes. However AFAIK there is no <code>std</code> support for changing owner / group.</p>\n\n<p>As <a href=\"https://stackoverflow.com/users/493729/peter-hall\">PeterHall</a> commented, there is a <code>chmod</code> (and <code>chown</code>) function in the <code>libc</code> crate.</p>\n\n<p>For further examples and inspiration, I suggest you to have a look to the <a href=\"https://github.com/uutils/coreutils\" rel=\"nofollow noreferrer\">coreutils</a> project that implements many common GNU CLI utils, among which you can find the metadata manipulation ones.</p>\n"}], "owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1027, "favorite_count": 0, "accepted_answer_id": 42399298, "answer_count": 1, "score": 7, "last_activity_date": 1487789292, "creation_date": 1487718287, "last_edit_date": 1487720111, "question_id": 42379689, "link": "https://stackoverflow.com/questions/42379689/is-there-a-way-to-change-file-metadata-e-g-owner-on-unix-platforms-with-rust", "title": "Is there a way to change file metadata (e.g. owner) on Unix platforms with Rust?", "body": "<p>The standard library provides a way to change file permissions, so I'm wondering if I'm missing something.</p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487714102, "post_id": 42378514, "comment_id": 71906689, "body": "See also: <a href=\"http://stackoverflow.com/q/29345708/155423\">stackoverflow.com/q/29345708/155423</a>; <a href=\"http://stackoverflow.com/q/27893501/155423\">stackoverflow.com/q/27893501/155423</a>."}], "answers": [{"tags": [], "owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "is_accepted": false, "score": 2, "last_activity_date": 1487713715, "last_edit_date": 1487713715, "creation_date": 1487713567, "answer_id": 42378604, "question_id": 42378514, "link": "https://stackoverflow.com/questions/42378514/how-can-i-enforce-equality-of-two-associated-type-parameters-of-traits/42378604#42378604", "title": "How can I enforce equality of two associated type parameters of traits?", "body": "<p>I found a solution. It's not done by a <code>where</code> clause, but this way:</p>\n\n<pre><code>fn g&lt;T: A, U: A&lt;A = T::A&gt;&gt;(a: T, b: U) { // where T::A is equal to B::A\n    f(a.getter(), b.getter())\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1552485586, "last_edit_date": 1552485586, "creation_date": 1487713891, "answer_id": 42378681, "question_id": 42378514, "link": "https://stackoverflow.com/questions/42378514/how-can-i-enforce-equality-of-two-associated-type-parameters-of-traits/42378681#42378681", "title": "How can I enforce equality of two associated type parameters of traits?", "body": "<p>A <code>where</code> clause works fine:</p>\n\n<pre><code>fn g&lt;T, U&gt;(a: T, b: U)\nwhere\n    T: A,\n    U: A&lt;A = T::A&gt;, // where T::A is equal to B::A\n{\n    f(a.getter(), b.getter())\n}\n</code></pre>\n"}], "owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1552485586, "creation_date": 1487713193, "last_edit_date": 1487715397, "question_id": 42378514, "link": "https://stackoverflow.com/questions/42378514/how-can-i-enforce-equality-of-two-associated-type-parameters-of-traits", "title": "How can I enforce equality of two associated type parameters of traits?", "body": "<p>I have a function <code>f</code> which takes two arguments of the same type, and a function <code>g</code> which takes two arguments of different types, but both types have to store the same value, so that <code>g</code> can call <code>f</code> with the values contained in the arguments to <code>f</code>. I currently implemented something like this:</p>\n\n<pre><code>fn f&lt;T&gt;(a: T, b: T) {}\n\ntrait A {\n    type A;\n    fn getter(&amp;self) -&gt; Self::A;\n}\n\nfn g&lt;T: A, U: A&gt;(a: T, b: U) {\n    f(a.getter(), b.getter())\n}\n</code></pre>\n\n<p>What do I have to add to the definition of <code>g</code> to make it work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 1, "creation_date": 1487691253, "post_id": 42370839, "comment_id": 71892616, "body": "How about using a <code>Rc&lt;Tex&gt;</code> instead of <code>Tex</code> directly?"}, {"owner": {"reputation": 97, "user_id": 5866466, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bba8b450bca84ed864bbfb30351e7970?s=128&d=identicon&r=PG&f=1", "display_name": "David Frickert", "link": "https://stackoverflow.com/users/5866466/david-frickert"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487691720, "post_id": 42370839, "comment_id": 71893018, "body": "@kennytm Should I make my temporary sprite &#39;spr&#39; <code>Rc&lt;Tex&gt;</code>? I&#39;m still a bit newbie to Rust so I never used <code>Rc</code> (seeing docs)."}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487692285, "post_id": 42370839, "comment_id": 71893491, "body": "@DavidFrickert Unfortunately <code>game.player.sprite</code> needs to be <code>Rc&lt;Tex&gt;</code> as well, because there can only be one copy of plain <code>Tex</code>. Yeah once you go <code>Rc</code> it will be needed everywhere it touches."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487692616, "post_id": 42370839, "comment_id": 71893717, "body": "@kennytm please add that as an answer! I think it nicely complements the one I just added."}, {"owner": {"reputation": 97, "user_id": 5866466, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bba8b450bca84ed864bbfb30351e7970?s=128&d=identicon&r=PG&f=1", "display_name": "David Frickert", "link": "https://stackoverflow.com/users/5866466/david-frickert"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487693139, "post_id": 42370839, "comment_id": 71894135, "body": "@kennytm Thanks for the suggestion! It worked wonders!"}], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 5866466, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bba8b450bca84ed864bbfb30351e7970?s=128&d=identicon&r=PG&f=1", "display_name": "David Frickert", "link": "https://stackoverflow.com/users/5866466/david-frickert"}, "edited": false, "score": 0, "creation_date": 1487692955, "post_id": 42372076, "comment_id": 71893982, "body": "Thanks for the great answer! I&#39;ve added the <code>impl Game</code> that missed. Meanwhile I&#39;m messing around with <code>Rc</code> but I&#39;m having some weird error, somehow <code>Path</code> is not finding my images anymore."}, {"owner": {"reputation": 97, "user_id": 5866466, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bba8b450bca84ed864bbfb30351e7970?s=128&d=identicon&r=PG&f=1", "display_name": "David Frickert", "link": "https://stackoverflow.com/users/5866466/david-frickert"}, "edited": false, "score": 0, "creation_date": 1487693930, "post_id": 42372076, "comment_id": 71894681, "body": "So, if you don&#39;t mind me asking, what would be more efficient: <code>Rc</code> or references? The way I applied <code>Rc&lt;Tex&gt;</code> involved cloning: <code>let mut spr: Rc&lt;Tex&gt; = game.player.sprite.clone()</code> and <code>game.player.sprite = spr.clone()</code>, but references don&#39;t need cloning so I would suppose references are better. Though I might be using <code>Rc</code> wrong."}, {"owner": {"reputation": 97, "user_id": 5866466, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bba8b450bca84ed864bbfb30351e7970?s=128&d=identicon&r=PG&f=1", "display_name": "David Frickert", "link": "https://stackoverflow.com/users/5866466/david-frickert"}, "edited": false, "score": 0, "creation_date": 1487694179, "post_id": 42372076, "comment_id": 71894875, "body": "By the way (I&#39;m sorry I&#39;m bothering you so much!), actually, I didn&#39;t create the <code>struct Position</code>, I think I got it included because of one of my <code>use</code>&#39;s (i think <code>piston_window</code>. Can I create a <code>struct Position</code>and override the one included?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 97, "user_id": 5866466, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bba8b450bca84ed864bbfb30351e7970?s=128&d=identicon&r=PG&f=1", "display_name": "David Frickert", "link": "https://stackoverflow.com/users/5866466/david-frickert"}, "edited": false, "score": 1, "creation_date": 1487695568, "post_id": 42372076, "comment_id": 71895872, "body": "@DavidFrickert If you can manage your textures&#39; lifetime, so that they live longer than the remaining parts of the program without leaking, then yes, keeping references will work. This will require adding some lifetime parameters and having a resource manager (something that will own the textures and only free them when appropriate), but should lead to better efficiency than <code>Rc</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1594048478, "last_edit_date": 1594048478, "creation_date": 1487692590, "answer_id": 42372076, "question_id": 42370839, "link": "https://stackoverflow.com/questions/42370839/how-do-i-copy-clone-a-struct-that-derives-neither/42372076#42372076", "title": "How do I copy/clone a struct that derives neither?", "body": "<blockquote>\n<p>How do I copy/clone a struct that derives neither?</p>\n</blockquote>\n<p>You don't. The only thing you can do is take some kind of reference to it.</p>\n<hr />\n<p>In this case, it is a very good thing that the library has chosen to not implement <code>Clone</code> or <code>Copy</code>. If you were able to clone the structure, you'd be allocating a lot of memory frequently and needlessly. Instead, the library has forced you to think about when you allocate that memory. One of the solutions is to load all the textures at application startup and reference them:</p>\n<p>Change your structures to hold references:</p>\n<pre><code>#[derive(PartialEq)]\nenum ObjectType {\n    Blocking,\n    Passing,\n}\n\nstruct Object&lt;'a&gt; {\n    sprite: &amp;'a Tex,\n    obj_type: ObjectType,\n    position: Position,\n}\n\nstruct Game&lt;'a&gt; {\n    gl: GlGraphics,\n    images: Vec&lt;Object&lt;'a&gt;&gt;,\n    player: Player&lt;'a&gt;,\n}\n\nstruct Player&lt;'a&gt; {\n    sprite: &amp;'a Tex,\n    position: Position,\n}\n\n#[derive(Copy, Clone, PartialEq)]\nstruct Position {\n    x: i32,\n    y: i32,\n}\n\nstruct Textures {\n    player_n: Tex,\n    player_s: Tex,\n    player_e: Tex,\n    player_w: Tex,\n    wall: Tex,\n    floor: Tex,\n}\n</code></pre>\n<p>Load the textures early on in <code>main</code>. Note that there's no need to use <code>Path</code> explicitly, as it takes <code>AsRef&lt;Path&gt;</code>:</p>\n<pre><code>let textures = Textures {\n    player_n: Tex::from_path(&quot;./assets/player_n.png&quot;).unwrap(),\n    player_s: Tex::from_path(&quot;./assets/player_s.png&quot;).unwrap(),\n    player_e: Tex::from_path(&quot;./assets/player_e.png&quot;).unwrap(),\n    player_w: Tex::from_path(&quot;./assets/player_w.png&quot;).unwrap(),\n    wall: Tex::from_path(&quot;./assets/wall.png&quot;).unwrap(),\n    floor: Tex::from_path(&quot;./assets/floor.png&quot;).unwrap()\n};\n</code></pre>\n<p>Then pass references to those textures:</p>\n<pre><code>match key {\n    Key::Up =&gt; {\n        pos.y -= 1;\n        spr = Some(&amp;textures.player_n)\n    }\n    Key::Down =&gt; {\n        pos.y += 1;\n        spr = Some(&amp;textures.player_s)\n    }\n    Key::Left =&gt; {\n        pos.x -= 1;\n        spr = Some(&amp;textures.player_w)\n    }\n    Key::Right =&gt; {\n        pos.x += 1;\n        spr = Some(&amp;textures.player_e)\n    }\n    _ =&gt; (),\n}\nfor elem in game.images.iter() {\n    if pos == elem.position &amp;&amp; elem.obj_type == ObjectType::Passing {\n        game.player.position = pos;\n\n        if let Some(spr) = spr {\n            game.player.sprite = spr;\n        }\n    }\n}\n</code></pre>\n<p>Note that this also consolidates the places that errors can occur. There's no longer an <code>unwrap</code> inside the guts of the loop.</p>\n<p>I was unable to get your code to finish compiling as the code is not complete but this should help get started:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error: no method named `render` found for type `Game&lt;'_&gt;` in the current scope\n   --&gt; src/main.rs:122:18\n    |\n122 |             game.render(&amp;r);\n    |                  ^^^^^^\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope; the following trait defines an item `render`, perhaps you need to implement it:\n    = help: candidate #1: `piston_window::RenderEvent`\n\nerror: no method named `update` found for type `Game&lt;'_&gt;` in the current scope\n   --&gt; src/main.rs:125:18\n    |\n125 |             game.update(&amp;u);\n    |                  ^^^^^^\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope; the following traits define an item `update`, perhaps you need to implement one of them:\n    = help: candidate #1: `piston_window::UpdateEvent`\n    = help: candidate #2: `piston_window::&lt;unnamed&gt;::UpdateTexture`\n    = help: candidate #3: `deflate::checksum::RollingChecksum`\n    = help: candidate #4: `cocoa::appkit::NSOpenGLContext`\n    = help: candidate #5: `cocoa::appkit::NSOpenGLContext`\n</code></pre>\n<hr />\n<p>In some cases, you may be able to wrap your types in an <code>Rc</code> or <code>Arc</code> and clone that. Cloning a <code>Rc</code>/<code>Arc</code> only increments a reference counter, regardless of the implementation of <code>Clone</code> for the underlying type (or the absence of such an implementation).</p>\n"}], "owner": {"reputation": 97, "user_id": 5866466, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bba8b450bca84ed864bbfb30351e7970?s=128&d=identicon&r=PG&f=1", "display_name": "David Frickert", "link": "https://stackoverflow.com/users/5866466/david-frickert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1924, "favorite_count": 0, "accepted_answer_id": 42372076, "answer_count": 1, "score": 2, "last_activity_date": 1594048478, "creation_date": 1487689266, "last_edit_date": 1487692871, "question_id": 42370839, "link": "https://stackoverflow.com/questions/42370839/how-do-i-copy-clone-a-struct-that-derives-neither", "title": "How do I copy/clone a struct that derives neither?", "body": "<p>I'm trying to do some game programming with Piston, but i'm struggling with <code>opengl_graphics::Texture</code>, since it does not derive <code>Copy</code> or <code>Clone</code>.</p>\n\n<pre><code>extern crate piston_window;\nextern crate piston;\nextern crate graphics;\nextern crate opengl_graphics;\n\nuse opengl_graphics::Texture as Tex;\nuse piston_window::*;\nuse std::path::Path;\nuse opengl_graphics::GlGraphics;\n\n#[derive(PartialEq)]\nenum ObjectType {\n    Blocking,\n    Passing,\n}\nstruct Object {\n    sprite: Tex,\n    obj_type: ObjectType,\n    position: Position,\n}\nstruct Game {\n    gl: GlGraphics,\n    images: Vec&lt;Object&gt;,\n    player: Player,\n}\nstruct Player {\n    sprite: Tex,\n    position: Position,\n}\nstruct Position {\n    x: i32,\n    y: i32,\n}\n\nimpl Game {\n    fn render(&amp;mut self, args: &amp;RenderArgs) {\n\n        let iter = self.images.iter();\n        let player = &amp;self.player;\n        self.gl.draw(args.viewport(), |c, g| {\n\n            clear([1.0, 1.0, 1.0, 1.0], g);\n\n            for img in iter {\n                let pos = img.get_position();\n                let transform = c.transform.trans(((pos.x * 64)) as f64, ((pos.y * 64)) as f64);\n                image(img.get_sprite(), transform, g);\n            }\n            image(player.get_sprite(),\n                  c.transform.trans((player.get_position().x * 64) as f64,\n                                    (player.get_position().y * 64) as f64),\n                  g);\n        });\n    }\n\n\n    fn update(&amp;mut self, args: &amp;UpdateArgs) {}\n}\n</code></pre>\n\n<p>The main game loop:</p>\n\n<pre><code>fn main() {\n    let (width, height) = (64*10, 64*10);\n    let opengl = OpenGL::V3_2;\n    let mut window: PistonWindow =\n        WindowSettings::new(\"piston\", (width, height))\n        .exit_on_esc(true)\n        .opengl(opengl)\n        .build()\n        .unwrap();\n    window.hide();\n    println!(\"Loading...\");\n    let mut player = Player { sprite: Tex::from_path(&amp;Path::new(\n                            \"./assets/player_n.png\")).unwrap(),\n                            position: Position { x: 3, y: 3 },\n    };\n\n    let mut game = Game {\n        gl: GlGraphics::new(opengl),\n        images: Vec::new(),\n        player: player,\n    };\n\n    for i in 0..10 {\n        for j in 0..10 {\n            if i == 0 || i == 9 || j == 0 || j == 9 {\n                let obj = Object { sprite: Tex::from_path(&amp;Path::new(\n                        \"./assets/wall.png\")).unwrap(),                                                 \n                    obj_type: ObjectType::Blocking,\n                        position: Position { x: i, y: j },\n                };\n                game.images.push(obj);\n\n            } else {\n                let obj = Object { sprite: Tex::from_path(&amp;Path::new(\n                        \"./assets/floor.png\")).unwrap(),                                                \n                    obj_type: ObjectType::Passing,\n                        position: Position { x: i, y: j },\n                };\n                game.images.push(obj);\n            }\n        }\n    }\n    window.show();\n    while let Some(e) = window.next() {\n\n        if let Some(Button::Keyboard(key)) = e.press_args() {\n            let mut pos = game.player.position.clone();\n            let mut spr: Option&lt;Tex&gt; = None;          \n            match key {\n                Key::Up =&gt; { pos.y -= 1; spr = Some(Tex::from_path(&amp;Path::new(\n                        \"./assets/player_n.png\")).unwrap()); },\n                Key::Down =&gt; { pos.y += 1; spr = Some(Tex::from_path(&amp;Path::new(\n                        \"./assets/player_s.png\")).unwrap()); },\n                Key::Left =&gt; { pos.x -= 1; spr = Some(Tex::from_path(&amp;Path::new(\n                        \"./assets/player_w.png\")).unwrap()); },              \n                Key::Right =&gt; { pos.x += 1; spr = Some(Tex::from_path(&amp;Path::new(\n                        \"./assets/player_e.png\")).unwrap()); },\n                _ =&gt; (),\n            }\n            for elem in game.images.iter() {\n                if pos.x == elem.position.x &amp;&amp; pos.y == elem.position.y &amp;&amp; elem.obj_type == ObjectType::Passing {\n                    game.player.position = pos;\n\n                    game.player.sprite = spr.clone().unwrap();\n\n                }\n            }\n        }        \n        if let Some(r) = e.render_args() {\n            game.render(&amp;r);       \n        }\n        if let Some(u) = e.update_args() {\n            game.update(&amp;u); \n        }\n    }\n}\n</code></pre>\n\n<p>Produces the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no method named `clone` found for type `std::option::Option&lt;opengl_graphics::Texture&gt;` in the current scope\n   --&gt; src/main.rs:159:46\n159 |                     game.player.sprite = spr.clone().unwrap();\n    |                                              ^^^^^\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied: `opengl_graphics::Texture : std::clone::Clone`\n</code></pre>\n\n<p>I understand why I get this error, since <code>opengl_graphics::Texture</code> doesn't derive <code>Copy</code> I can't clone <code>Option&lt;opengl_texture&gt;</code>. What workaround is there for this?</p>\n\n<p>I tried messing around with references but that didn't work.</p>\n"}, {"tags": ["assembly", "arduino", "linker", "rust"], "comments": [{"owner": {"reputation": 62072, "user_id": 16007, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/e859640aaeb4b305e163a990be827cf9?s=128&d=identicon&r=PG&f=1", "display_name": "old_timer", "link": "https://stackoverflow.com/users/16007/old-timer"}, "edited": false, "score": 0, "creation_date": 1487685850, "post_id": 42368675, "comment_id": 71888431, "body": "can you disassemble (arm-whatever-objdump -D) the binary in question and show the specific values produced by the linker for those linker variables?"}, {"owner": {"reputation": 35113, "user_id": 3826372, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/P0peM.png?s=128&g=1", "display_name": "Ross Ridge", "link": "https://stackoverflow.com/users/3826372/ross-ridge"}, "edited": false, "score": 0, "creation_date": 1487699911, "post_id": 42368675, "comment_id": 71898500, "body": "If I had to guess, it would be because Rust validates the pointer in some way and a pointer past the end of the <code>.text</code> section isn&#39;t valid."}, {"owner": {"reputation": 53, "user_id": 5295899, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dY6j2.jpg?s=128&g=1", "display_name": "David McGillicuddy", "link": "https://stackoverflow.com/users/5295899/david-mcgillicuddy"}, "edited": false, "score": 0, "creation_date": 1487749671, "post_id": 42368675, "comment_id": 71919373, "body": "I have updated the repository with the result of <code>arm-none-aebi-objdump -CD</code> for the <a href=\"https://github.com/djmcgill/minimal-to-the-moon/blob/master/full-obj-dump-working\" rel=\"nofollow noreferrer\">working</a> and <a href=\"https://github.com/djmcgill/minimal-to-the-moon/blob/master/full-obj-dump-not-working\" rel=\"nofollow noreferrer\">failing</a> code."}], "owner": {"reputation": 53, "user_id": 5295899, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dY6j2.jpg?s=128&g=1", "display_name": "David McGillicuddy", "link": "https://stackoverflow.com/users/5295899/david-mcgillicuddy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 411, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1487684935, "creation_date": 1487683803, "last_edit_date": 1487684935, "question_id": 42368675, "link": "https://stackoverflow.com/questions/42368675/why-does-getting-the-address-of-certain-linker-variables-halt-samd21-execution-i", "title": "Why does getting the address of certain linker variables halt SAMD21 execution in Rust with LLVM but not in C with GCC?", "body": "<p>I'm trying to get my Arduino MKRZero working in Rust. I successfully blinked the LED, and my next step was to copy the global data from text into data.</p>\n\n<p>I have the following linker variables defined:</p>\n\n<p><strong>Rust</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern {\n    static __StackTop: u32;\n    static mut __etext: u32;\n    static mut __data_start__: u32;\n    static mut __data_end__: u32;\n    static mut __bss_start__: u32;\n    static mut __bss_end__: u32;\n} \n</code></pre>\n\n<p><strong>C</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>extern uint32_t __etext;\nextern uint32_t __data_start__;\nextern uint32_t __data_end__;\nextern uint32_t __bss_start__;\nextern uint32_t __bss_end__;\nextern uint32_t __StackTop;\n</code></pre>\n\n<p>To cut a long story short, the Rust code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut pSrc: *mut u32;\npSrc = &amp;mut __etext;\n</code></pre>\n\n<p>causes execution to halt i.e. the LED does not blink. Commenting out that line and proceeding to the code that zeros the BSS segment</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut pDest: *mut u32;\npDest = &amp;mut __bss_start__;\n</code></pre>\n\n<p>causes the blinker code to work just fine. As far as I can see, getting the address of the <code>__etext</code> linker variable halts execution but getting the address of <code>__bss_start__</code> is fine.</p>\n\n<p>The C version of this has no problems at all:</p>\n\n<pre><code>  uint32_t *pSrc, *pDest;\n  pSrc = &amp;__etext;\n  pDest = &amp;__data_start__;\n  // &lt;fill pDest with pSrc&gt;\n\n  for (pDest = &amp;__bss_start__; pDest &lt; &amp;__bss_end__; pDest++)\n  {\n      *pDest = 0;\n  }\n</code></pre>\n\n<p>The linker scripts are identical for both pieces of code (and can be found in the repositories linked below). The C is compiled with <code>arm-none-eabi-gcc</code> and the Rust with LLVM with this target JSON to pass to LLVM:</p>\n\n<pre><code>{\n    \"llvm-target\"         : \"thumbv6m-none-eabi\",\n    \"data-layout\"         : \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\",\n    \"linker\"              : \"arm-none-eabi-gcc\",\n    \"pre-link-args\"       : [ \"-nostartfiles\", \"-Tlayout.ld\" ],\n    \"target-endian\"       : \"little\",\n    \"target-pointer-width\": \"32\",\n    \"arch\"                : \"arm\",\n    \"os\"                  : \"none\",\n    \"executables\"         : true\n}\n</code></pre>\n\n<p>See the <code>build.sh</code> scripts in each to see exactly the commands run.\nThe data layout was obtained from the command</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>clang --target=thumbv6m-none-eabi -S -emit-llvm empty.c -o empty.ll\n</code></pre>\n\n<p>The repository of C code is <a href=\"https://github.com/djmcgill/c-to-the-moon\" rel=\"nofollow noreferrer\">here</a> and the Rust code is <a href=\"https://github.com/djmcgill/minimal-to-the-moon\" rel=\"nofollow noreferrer\">here</a>. The offending line is <code>src/main.rs:38</code>.</p>\n\n<p>I've included the output of <code>arm-none-eabi-objdump -Cd</code> for 1) the C code, 2) the Rust code with the error line commented, and 3) the Rust code with the error line running. However I can't read assembly well enough to parse this to identify my error.</p>\n\n<p>I suppose my next step would be to use LLVM for the C code instead of GCC to see if that's causing any issues, or just producing a C library from Rust and calling it in my C main. Attaching a debugger will be difficult on the MKRZero so I might have to buy a regular zero or some other SAMD21 breakout board and try it on that too.</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing", "interior-mutability"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1487652703, "post_id": 42358738, "comment_id": 71868294, "body": "The other option is to use a <code>Cell</code> inside the array. Did you try that?"}], "answers": [{"comments": [{"owner": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "edited": false, "score": 0, "creation_date": 1487684774, "post_id": 42359110, "comment_id": 71887659, "body": "Interesting.  :)  I suppose one could take <code>x: Cell&lt;[u8; 3]&gt;</code> too to give array syntax, but that risks moving more data.  In fact, I&#39;ve a bunch of these <code>x</code> that chop up a slice from elsewhere, so I&#39;d need <code>transmute</code> to use <code>Cell</code>, but this is nice to know about.  I could probably do the <code>x: Cell&lt;[u8; 3]&gt;</code> version if there was a <code>split_at_mut</code> for <code>Cell&lt;&amp;mut [T]&gt;</code> or something.  Thanks!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "edited": false, "score": 0, "creation_date": 1487686238, "post_id": 42359110, "comment_id": 71888685, "body": "You <i>could</i> do <code>let a = A { x: &amp;unsafe { mem::transmute([0u8; 3]) }};</code> - but it isn&#39;t exactly pretty either :)"}, {"owner": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "edited": false, "score": 0, "creation_date": 1487767459, "post_id": 42359110, "comment_id": 71931074, "body": "I do think a crate that safely handles transmuting between <code>&amp;mut [T]</code> and <code>&amp;mut [Cell&lt;T&gt;]</code> and between <code>&amp;mut [T; n]</code> and <code>&amp;mut [Cell&lt;T&gt;; n]</code> sounds useful. :)"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "edited": false, "score": 0, "creation_date": 1487768869, "post_id": 42359110, "comment_id": 71932133, "body": "Yes. But it&#39;s not so easy because Rust doesn&#39;t currently allow you to be generic over the length of an array. You&#39;d have to use a macro to implement it for every size up to some supported maximum."}, {"owner": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "edited": false, "score": 0, "creation_date": 1487805187, "post_id": 42359110, "comment_id": 71954945, "body": "It exists for slices in <a href=\"https://github.com/huonw/alias\" rel=\"nofollow noreferrer\">github.com/huonw/alias</a> via <a href=\"https://github.com/rust-lang/rfcs/pull/1789\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/pull/1789</a>"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1488248331, "last_edit_date": 1488248331, "creation_date": 1487653464, "answer_id": 42359110, "question_id": 42358738, "link": "https://stackoverflow.com/questions/42358738/interior-mutability-vs-data-hiding-to-hold-fixed-the-referant-of-a-mutable-borro/42359110#42359110", "title": "Interior mutability vs data hiding to hold fixed the referant of a mutable borrow", "body": "<p>Rather than use a <code>Cell&lt;A&gt;</code> you could make the array inside the <code>A</code> contain <code>Cell&lt;u8&gt;</code>s:</p>\n\n<pre><code>use std::cell::Cell;\n\npub struct A&lt;'a&gt; {\n    x: &amp;'a [Cell&lt;u8&gt;; 3],\n}\n\nfn main() {\n    // let y = &amp;mut [7u8; 3];\n    let a = A { x: &amp;[Cell::new(0u8), Cell::new(0u8), Cell::new(0u8)] };\n    a.x[0].set(3);\n    // a.x = y;\n    {\n        let b = &amp;a;\n        b.x[1].set(2);\n    }\n    println!(\"{:?}\", a.x);\n}\n</code></pre>\n\n<p>This will still behave how you want, with the same performance, but now the <code>a</code> variable is immutable, so you can't change <code>a.x</code>. You also don't need to make the array reference mutable either.</p>\n\n<p>The slight downside with your example is that you can't use the array repetition syntax, since <code>Cell&lt;T&gt;</code> does not implement <code>Copy</code>. This seems like an omission, but there is some explanation as to why that is <a href=\"https://users.rust-lang.org/t/why-is-cell-not-copy/2208/5\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "is_accepted": false, "score": 1, "last_activity_date": 1487705846, "last_edit_date": 1487705846, "creation_date": 1487705022, "answer_id": 42376165, "question_id": 42358738, "link": "https://stackoverflow.com/questions/42358738/interior-mutability-vs-data-hiding-to-hold-fixed-the-referant-of-a-mutable-borro/42376165#42376165", "title": "Interior mutability vs data hiding to hold fixed the referant of a mutable borrow", "body": "<p>Another approach is to define </p>\n\n<pre><code>pub struct A&lt;'a&gt; { pub x: HideMut&lt;'a,[u8; 3]&gt; }\n</code></pre>\n\n<p>where</p>\n\n<pre><code>use std::ops::{Deref,DerefMut};\n\nstruct HideMut&lt;'a,T&gt;(&amp;'a mut T) where T: ?Sized + 'a;\n\nimpl&lt;'a,T&gt; HideMut&lt;'a,T&gt; where T: ?Sized {\n    pub fn new(m: &amp;'a mut T) -&gt; HideMut&lt;'a,T&gt; { HideMut(m) }\n}\n\nimpl&lt;'a,T&gt; Deref for HideMut&lt;'a,T&gt; where T: ?Sized {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;T { self.0 }\n}\n\nimpl&lt;'a,T&gt; DerefMut for HideMut&lt;'a,T&gt; where T: ?Sized {\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut T { self.0 }\n}\n</code></pre>\n\n<p>As written, this does not prevent the problem per se, but it requires you call the <code>HideMut::new()</code> constructor to violate it.  </p>\n\n<p>Now if we define <code>HideMut</code> in the same module as <code>A</code>, and maybe do not even export it, then we actually do achieve the desired hiding without any interior mutability.  </p>\n\n<p>This second form fails my original requirements because now you cannot use the constructor <code>A { }</code>, but depending upon your reasons for not wanting to write a constructor for <code>A</code> it may work out. </p>\n\n<p>In either form, this avoids borrowing the whole of <code>A</code> as a method would do.</p>\n"}], "owner": {"reputation": 4036, "user_id": 667457, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/33f9a9233b25c8230f5b5edb38493842?s=128&d=identicon&r=PG", "display_name": "Jeff Burdges", "link": "https://stackoverflow.com/users/667457/jeff-burdges"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 42359110, "answer_count": 2, "score": 2, "last_activity_date": 1548289793, "creation_date": 1487651566, "last_edit_date": 1548289793, "question_id": 42358738, "link": "https://stackoverflow.com/questions/42358738/interior-mutability-vs-data-hiding-to-hold-fixed-the-referant-of-a-mutable-borro", "title": "Interior mutability vs data hiding to hold fixed the referant of a mutable borrow", "body": "<p>If we run <a href=\"https://play.rust-lang.org/?code=%20%20%20%20pub%20struct%20A%3C%27a%3E%20%7B%0A%20%20%20%20%20%20%20%20x%3A%20%26%27a%20mut%20[u8%3B%203]%2C%0A%20%20%20%20%7D%0A%0A%20%20%20%20fn%20main%28%29%20%7B%0A%20%20%20%20%20%20%20%20let%20y%20%3D%20%26mut%20[7u8%3B%203]%3B%0A%20%20%20%20%20%20%20%20let%20%2F*mut*%2F%20a%20%3D%20A%20%7B%20x%3A%20%26mut%20[0u8%3B%203]%20%7D%3B%0A%20%20%20%20%20%20%20%20a.x[0]%20%3D%203%3B%0A%20%20%20%20%20%20%20%20%2F%2F%20a.x%20%3D%20y%3B%0A%20%20%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20let%20b%20%3D%20%26%2F*mut*%2F%20a%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20b.x[1]%20%3D%202%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20println!%28%22%7B%3A%3F%7D%22%2C%20a.x%29%3B%0A%20%20%20%20%7D%0A%0A%0A&amp;version=stable&amp;backtrace=1\" rel=\"nofollow noreferrer\">this</a> then we correctly get the error \"cannot assign to immutable field <code>a.x</code>\".  </p>\n\n<p>If we remove the two <code>//</code> comments, and comment out this bad line, then we get the error \"cannot assign to data in a <code>&amp;</code> reference\".  This makes sense because <code>&amp;mut</code> does not provide interior mutability.  We can reborrow an <code>&amp;A</code> freely, so this must not give mutable access, ala <code>&amp;&amp;mut</code> is <code>&amp;&amp;</code>. </p>\n\n<p>If we remove both the <code>//</code> comments and the <code>/* */</code> comments, then the whole thing compiles, permitting the bad line that violates our invariant that <code>a.x</code> must never be pointed to anything else. </p>\n\n<pre><code>pub struct A&lt;'a&gt; {\n    pub x: &amp;'a mut [u8; 3],\n}\n\nfn main() {\n    let y = &amp;mut [7u8; 3];\n    let /*mut*/ a = A { x: &amp;mut [0u8; 3] };\n    a.x[0] = 3;\n    a.x = y;  //// This must be prevented!\n    {\n        // let b = &amp;/*mut*/ a;\n        // b.x[1] = 2;\n    }\n    println!(\"{:?}\", a.x);\n}\n</code></pre>\n\n<p>How should one maintain this invariant that <code>x</code> must not be changed?  We could make the field private while providing public dereferencing methods, except writing constructors for <code>A</code> in unacceptable. </p>\n\n<p>We can avoid the obnoxious constructor by making a <code>A</code> a private member of a wrapper <code>struct AA(A)</code> which itself hosts the public dereferencing methods.  Now <code>AA</code> needs a trivial constructor, but it does not need arguments for all fields of <code>A</code>, does not impact order of execution, etc.  This becomes painful if we need some traits implemented for both <code>A</code> and <code>AA</code> though. </p>\n\n<p>Yet, another approach would be to use interior mutability by working with <code>Cell&lt;A&gt;</code>, accessing it with <a href=\"https://github.com/Amanieu/rfcs/blob/movecell/text/0000-movecell.md\" rel=\"nofollow noreferrer\"><code>Cell::replace</code></a>, and putting it back later.  This sounds highly problematic, but shows that more solutions exist. </p>\n\n<p>Any cleaner approaches? </p>\n"}, {"tags": ["pointers", "reference", "rust", "smart-pointers", "memory-layout"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 12, "last_activity_date": 1527002453, "last_edit_date": 1527002453, "creation_date": 1487651054, "answer_id": 42358671, "question_id": 42358389, "link": "https://stackoverflow.com/questions/42358389/why-is-the-size-of-a-pointer-to-something-on-the-heap-larger-than-the-size-of-a/42358671#42358671", "title": "Why is the size of a pointer to something on the heap larger than the size of a stack variable?", "body": "<p>You didn't show your code for how you are invoking <code>mem::size_of_val</code> but I guess from the results that you are doing this:</p>\n\n<pre><code>println!(\"var1 size = {}\", mem::size_of_val(&amp;var1)); // 4\nprintln!(\"var2 size = {}\", mem::size_of_val(&amp;var2)); // 8\n</code></pre>\n\n<p>The size of <code>var1</code> is the size of an <code>i32</code> (4 bytes), while the size of <code>var2</code> is the size of a <code>Box</code>, which is just a pointer (it would be two pointers if it was a trait object). A pointer is always a <code>usize</code> (8 bytes on a 64bit system).</p>\n\n<p>If you dereference the box first, then the size will be that of the box's contents and you'll get the result you expect:</p>\n\n<pre><code>println!(\"var2 size = {}\", mem::size_of_val(&amp;*var2)); // 4\n</code></pre>\n\n<blockquote>\n  <p>Also, is the use of \"<code>*</code>\" (i.e., <code>*var2</code>) in the <code>println!()</code> supposed to do anything different? I get 10 either way.</p>\n</blockquote>\n\n<p>The <code>println!</code> macro, along with <code>format!</code> and a few others, will always prepend a <code>&amp;</code> to a value to make sure that it's borrowed, not moved or copied. When the value is needed it will be automatically dereferenced as many times as is necessary. See <a href=\"https://stackoverflow.com/a/30451360/493729\">this answer</a> for more detail.</p>\n"}], "owner": {"reputation": 40992, "user_id": 40106, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/164ca8ba426bdb10381290b9617d3ea7?s=128&d=identicon&r=PG&f=1", "display_name": "4thSpace", "link": "https://stackoverflow.com/users/40106/4thspace"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 970, "favorite_count": 0, "accepted_answer_id": 42358671, "answer_count": 1, "score": 4, "last_activity_date": 1547487993, "creation_date": 1487649459, "last_edit_date": 1547487993, "question_id": 42358389, "link": "https://stackoverflow.com/questions/42358389/why-is-the-size-of-a-pointer-to-something-on-the-heap-larger-than-the-size-of-a", "title": "Why is the size of a pointer to something on the heap larger than the size of a stack variable?", "body": "<p>I have the following stack- and heap-allocated variables:</p>\n\n<pre><code>let var1 = 10;\nlet var2 = Box::new(10);\n</code></pre>\n\n<p>Printing these outputs the same value, <code>10</code>:</p>\n\n<pre><code>println!(\"var1 ={} var2 ={}\", var1, * var2);\n</code></pre>\n\n<p>When I check the size using <code>mem::size_of_val()</code>, <code>var1</code> is 4 and <code>var2</code> is 8.</p>\n\n<p>Isn't <code>var2</code> a pointer to the heap? Why would a pointer be larger than the stack variable (<code>var1</code>)?</p>\n\n<p>Also, is the use of \"<code>*</code>\" (i.e., <code>*var2</code>) in the <code>println!()</code> supposed to do anything different? I get 10 either way.</p>\n"}, {"tags": ["linked-list", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1487644013, "last_edit_date": 1487644013, "creation_date": 1487639757, "answer_id": 42357016, "question_id": 42356929, "link": "https://stackoverflow.com/questions/42356929/is-it-possible-to-pop-a-certain-element-off-the-standard-librarys-linkedlist/42357016#42357016", "title": "Is it possible to pop a certain element off the standard library&#39;s LinkedList?", "body": "<p>Sure. It requires O(n) time though, so it's not a <strong>good</strong> idea:</p>\n\n<pre><code>use std::collections::LinkedList;\n\nfn main() {\n    let mut list: LinkedList&lt;i32&gt; = (1..10).collect();\n\n    let mut tail = list.split_off(5);\n\n    let x = list.pop_back();\n    let y = tail.pop_front();\n\n    list.append(&amp;mut tail);\n\n    println!(\"({:?}, {:?})\", x, y); // (Some(5), Some(6))\n    println!(\"{:?}\", list);         // [1, 2, 3, 4, 7, 8, 9]\n}\n</code></pre>\n\n<p>Use <a href=\"https://doc.rust-lang.org/std/collections/struct.LinkedList.html#method.split_off\" rel=\"nofollow noreferrer\"><code>split_off</code></a> to create two lists. This takes O(n) time to walk through the list to the requested node. This also panics if the index is invalid.</p>\n\n<p>You can then either take the tail of the first list (<a href=\"https://doc.rust-lang.org/std/collections/struct.LinkedList.html#method.pop_back\" rel=\"nofollow noreferrer\"><code>pop_back</code></a>) or the head of the second list (<a href=\"https://doc.rust-lang.org/std/collections/struct.LinkedList.html#method.pop_front\" rel=\"nofollow noreferrer\"><code>pop_front</code></a>). You can then splice the lists back together with <a href=\"https://doc.rust-lang.org/std/collections/struct.LinkedList.html#method.append\" rel=\"nofollow noreferrer\"><code>append</code></a>. These all work on O(1) time.</p>\n"}], "owner": {"reputation": 127, "user_id": 7429873, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/v0P5B.jpg?s=128&g=1", "display_name": "GoldenChrysanthem", "link": "https://stackoverflow.com/users/7429873/goldenchrysanthem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1487644013, "creation_date": 1487639128, "last_edit_date": 1487639481, "question_id": 42356929, "link": "https://stackoverflow.com/questions/42356929/is-it-possible-to-pop-a-certain-element-off-the-standard-librarys-linkedlist", "title": "Is it possible to pop a certain element off the standard library&#39;s LinkedList?", "body": "<p>Is it possible to pop a certain element off the standard library's <a href=\"https://doc.rust-lang.org/std/collections/struct.LinkedList.html\" rel=\"nofollow noreferrer\"><code>LinkedList</code></a>? Could it be possible to reorder a linked list so the selected element appears at the end and then you pop it off? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1487633800, "post_id": 42355656, "comment_id": 71862955, "body": "This works, but relies on the fact that <code>$</code> is ASCII and thus takes up one byte. A more general solution might use <a href=\"https://doc.rust-lang.org/std/primitive.char.html#method.len_utf8\" rel=\"nofollow noreferrer\"><code>char::len_utf8</code></a>: <code>i != s.len() - &#39;c&#39;.len_utf8()</code>."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 2, "creation_date": 1487674432, "post_id": 42355656, "comment_id": 71880509, "body": "I want in on the code golf: <code>s.chars().skip_while(|i| i != &#39;$&#39;).skip(1).next().is_some()</code> is much clearer than any index computations imo"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1487633621, "last_edit_date": 1487633621, "creation_date": 1487631230, "answer_id": 42355656, "question_id": 42355502, "link": "https://stackoverflow.com/questions/42355502/is-it-possible-to-combine-two-patterns-one-with-a-match-guard-in-the-same-matc/42355656#42355656", "title": "Is it possible to combine two patterns, one with a match guard, in the same match arm?", "body": "<p>It is <strong>impossible</strong> to have the match-guard (the <code>if</code> thingy) apply to only one pattern alternative (the things separated by <code>|</code> symbols). There is only one match-guard per arm and it applies to all patterns of that arm.</p>\n\n<p>However, there are many solutions for your specific problem. For example:</p>\n\n<pre><code>if s.find('$').map(|i| i != s.len() - 1).unwrap_or(false) {\n    expr2();\n} else {\n    expr1();\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 739, "favorite_count": 2, "accepted_answer_id": 42355656, "answer_count": 1, "score": 13, "last_activity_date": 1487633647, "creation_date": 1487630389, "last_edit_date": 1487633647, "question_id": 42355502, "link": "https://stackoverflow.com/questions/42355502/is-it-possible-to-combine-two-patterns-one-with-a-match-guard-in-the-same-matc", "title": "Is it possible to combine two patterns, one with a match guard, in the same match arm?", "body": "<p>I want to check if a string contains '$' and if there is something after the '$':</p>\n\n<p>I tried this code:</p>\n\n<pre><code>fn test(s: String) {\n    match s.find('$') {\n        None | (Some(pos) if pos == s.len() - 1) =&gt; {\n          expr1();\n        }\n        _ =&gt; { expr2(); }\n    }\n}\n</code></pre>\n\n<p>But it doesn't compile:</p>\n\n<blockquote>\n<pre><code>error: expected one of `)` or `,`, found `if`\n</code></pre>\n</blockquote>\n\n<p>Is it impossible to combine <code>None</code> and <code>Some</code> in one match-arm?</p>\n\n<p>If so, is there a simple way to not duplicate <code>expr1()</code> except moving it into a separate function?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1050, "user_id": 202309, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/860c1bf8d958c8eb8d4ba2607b313093?s=128&d=identicon&r=PG", "display_name": "ysimonson", "link": "https://stackoverflow.com/users/202309/ysimonson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487633497, "post_id": 42354963, "comment_id": 71862830, "body": "Sorry, I was worried that the question was already getting too wordy, and that the answer might be obvious to others. I&#39;ll flesh it out further."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487636247, "post_id": 42354963, "comment_id": 71863772, "body": "After taking the presented code and making it compile (adding extern crates, implementing <code>Display</code>, correcting imports, removing <code>...</code>, etc. \u2014 all signs that you didn&#39;t test this code locally) the code compiles without the error you say. It&#39;s fairly unlikely that you will get any useful help until you provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Specifically, an answer is most likely when someone can copy directly from your question, paste it locally, and get the same error message."}, {"owner": {"reputation": 1050, "user_id": 202309, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/860c1bf8d958c8eb8d4ba2607b313093?s=128&d=identicon&r=PG", "display_name": "ysimonson", "link": "https://stackoverflow.com/users/202309/ysimonson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487638744, "post_id": 42354963, "comment_id": 71864573, "body": "@Shepmaster as stated in the conversation we had before you deleted your comments, I&#39;ve been having trouble creating a minimal example. This question, in general, has been difficult to disentangle because it&#39;s part of a large codebase that is not (yet) open source. I&#39;ll leave a comment though on what fixed it for me, for posterity."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487639042, "post_id": 42354963, "comment_id": 71864649, "body": "Yeah, I deleted my comments because I saw you had updated the question and removed the text that indicated that the example doesn&#39;t reproduce the problem, which I took to mean that the example now reproduced the problem. At that point, I thought my comments were irrelevant."}], "answers": [{"tags": [], "owner": {"reputation": 1050, "user_id": 202309, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/860c1bf8d958c8eb8d4ba2607b313093?s=128&d=identicon&r=PG", "display_name": "ysimonson", "link": "https://stackoverflow.com/users/202309/ysimonson"}, "is_accepted": true, "score": 2, "last_activity_date": 1487683405, "last_edit_date": 1487683405, "creation_date": 1487639087, "answer_id": 42356919, "question_id": 42354963, "link": "https://stackoverflow.com/questions/42354963/cannot-find-trait-implementations-for-associated-types/42356919#42356919", "title": "Cannot find trait implementations for associated types", "body": "<p>This turned out to be due to version conflicts. I had switched to <code>postgres</code>'s master branch to fix a separate version conflict, but <code>r2d2_postgres</code> was referencing a different version of <code>postgres</code>.</p>\n\n<p>Luckily, as explained in <a href=\"https://github.com/sfackler/rust-postgres/issues/235\" rel=\"nofollow noreferrer\">this issue</a>, <code>Cargo.toml</code> has a <code>[replace]</code> section that allows you to handle it like this: </p>\n\n<pre><code>[replace]\n\"postgres:0.13.6\" = { git = \"https://github.com/sfackler/rust-postgres\" }\n</code></pre>\n"}], "owner": {"reputation": 1050, "user_id": 202309, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/860c1bf8d958c8eb8d4ba2607b313093?s=128&d=identicon&r=PG", "display_name": "ysimonson", "link": "https://stackoverflow.com/users/202309/ysimonson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 42356919, "answer_count": 1, "score": 1, "last_activity_date": 1487683405, "creation_date": 1487627891, "last_edit_date": 1487634749, "question_id": 42354963, "link": "https://stackoverflow.com/questions/42354963/cannot-find-trait-implementations-for-associated-types", "title": "Cannot find trait implementations for associated types", "body": "<p>I have code that used to work on nightly-2016-11-15. When I upgraded to 1.15.1 stable, I started getting a bunch of errors about type implementations not being found. Here's an example:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `errors::Error: core::convert::From&lt;r2d2_postgres::&lt;unnamed&gt;::error::Error&gt;` is not satisfied\n  --&gt; src/pg/datastore.rs:79:23\n   |\n79 |         let results = conn.query(\"DELETE FROM accounts WHERE id=$1 RETURNING 1\", &amp;[&amp;account_id])?;\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `core::convert::From&lt;r2d2_postgres::&lt;unnamed&gt;::error::Error&gt;` is not implemented for `errors::Error`\n   |\n   = help: the following implementations were found:\n   = help:   &lt;errors::Error as core::convert::From&lt;r2d2_postgres::Error&gt;&gt;\n   = help:   &lt;errors::Error as core::convert::From&lt;postgres::error::Error&gt;&gt;\n   = help:   &lt;errors::Error as core::convert::From&lt;r2d2::GetTimeout&gt;&gt;\n   = help:   &lt;errors::Error as core::convert::From&lt;rocksdb::Error&gt;&gt;\n   = help: and 3 others\n   = note: required by `core::convert::From::from`\n</code></pre>\n\n<p>... even though there is a relevant <code>From</code> implementation. Here's a shortened version:</p>\n\n<pre><code>use std::error::Error as StdError;\nuse r2d2::GetTimeout;\nuse postgres::error::Error as PostgresError;\nuse r2d2_postgres::Error as R2D2PostgresError;\nuse super::fmt;\n\n#[derive(Eq, PartialEq, Clone, Debug)]\npub enum Error {\n    Unexpected(String),\n    ...\n}\n\nimpl StdError for Error {\n    fn description(&amp;self) -&gt; &amp;str {\n        ...\n    }\n\n    fn cause(&amp;self) -&gt; Option&lt;&amp;StdError&gt; {\n        None\n    }\n}\n\nimpl From&lt;R2D2PostgresError&gt; for Error {\n    fn from(err: R2D2PostgresError) -&gt; Error {\n        Error::Unexpected(format!(\"{}\", err))\n    }\n}\n\nimpl From&lt;PostgresError&gt; for Error {\n    fn from(err: PostgresError) -&gt; Error {\n        Error::Unexpected(pg_error_to_description(err))\n    }\n}\n\nimpl From&lt;GetTimeout&gt; for Error {\n    fn from(err: GetTimeout) -&gt; Error {\n        Error::Unexpected(format!(\"Could not fetch connection: {}\", err))\n    }\n}\n</code></pre>\n\n<p>I think this has something to do with the use of associated types, as it doesn't appear to happen in other contexts. Additionally, the namespace <code>r2d2_postgres::&lt;unnamed&gt;::error::Error</code> doesn't make sense - what is <code>&lt;unnamed&gt;</code>? Here is <a href=\"https://github.com/sfackler/r2d2-postgres/blob/master/src/lib.rs#L112\" rel=\"nofollow noreferrer\">the relevant type association</a>.</p>\n"}, {"tags": ["multithreading", "rust", "mutex"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487636352, "post_id": 42353366, "comment_id": 71863814, "body": "FYI, <code>panic!</code> takes a format string. <code>println!(&quot;WHAT IMPOSSIBLE!&quot;); panic!();</code> =&gt; <code>panic!(&quot;WHAT IMPOSSIBLE!&quot;);</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487636636, "post_id": 42353366, "comment_id": 71863910, "body": "Could you clarify what you expect the behavior to be of this code? When I run it with the sleep either commented or uncommented, the program never exits. The only obvious difference is that without the sleep, there are a great many &quot;You want me to read&quot; printed out."}, {"owner": {"reputation": 31, "user_id": 1736194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63e5adbcb9a8694f9c6998c6cdf96e69?s=128&d=identicon&r=PG", "display_name": "cevans01", "link": "https://stackoverflow.com/users/1736194/cevans01"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487685947, "post_id": 42353366, "comment_id": 71888497, "body": "The expected behavior is that after about 4 seconds (and many prints of &quot;You want me to read?&quot;), the program will print &quot;flag is = Idle&quot; and &quot;after notify_one()&quot;"}, {"owner": {"reputation": 31, "user_id": 1736194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63e5adbcb9a8694f9c6998c6cdf96e69?s=128&d=identicon&r=PG", "display_name": "cevans01", "link": "https://stackoverflow.com/users/1736194/cevans01"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487686116, "post_id": 42353366, "comment_id": 71888610, "body": "Observed behavior: When the sleep(450) is included, the program seems to either never end printing or will take much much longer than 4 seconds to exit. It seems the <code>poll_thread</code> is never notified that the <code>Command</code> has returned to <code>Command::Idle</code>"}], "owner": {"reputation": 31, "user_id": 1736194, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63e5adbcb9a8694f9c6998c6cdf96e69?s=128&d=identicon&r=PG", "display_name": "cevans01", "link": "https://stackoverflow.com/users/1736194/cevans01"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 339, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1487636996, "creation_date": 1487621268, "last_edit_date": 1487636996, "question_id": 42353366, "link": "https://stackoverflow.com/questions/42353366/condition-variable-not-playing-well-with-threadsleep", "title": "Condition variable not playing well with thread::sleep", "body": "<p>I'm not sure I understand Rust's concurrency support with <code>Mutex</code>es and condition variables. In the following code, the <code>main</code> thread sets the <code>poll_thread</code> to be idle for two seconds, then to \"read a register\" for 2 seconds, and then return to \"idle\":</p>\n\n<pre><code>use std::thread;\nuse std::sync::{Arc, Mutex, Condvar};\nuse std::time;\n\n#[derive(PartialEq, Debug)]\nenum Command {\n    Idle,\n    ReadRegister(u32),\n}\n\nfn poll_thread(sync_pair: Arc&lt;(Mutex&lt;Command&gt;, Condvar)&gt;) {\n    let &amp;(ref mutex, ref cvar) = &amp;*sync_pair;\n\n    loop {\n        let mut flag = mutex.lock().unwrap();\n        while *flag == Command::Idle {\n            flag = cvar.wait(flag).unwrap();\n        }\n\n        match *flag {\n            Command::Idle =&gt; {\n                println!(\"WHAT IMPOSSIBLE!\");\n                panic!();\n            }\n            Command::ReadRegister(i) =&gt; {\n                println!(\"You want me to read {}?\", i);\n                thread::sleep(time::Duration::from_millis(450));\n                println!(\"Ok, here it is: {}\", 42);\n            }\n        }\n    }\n}\n\npub fn main() {\n    let pair = Arc::new((Mutex::new(Command::Idle), Condvar::new()));\n    let pclone = pair.clone();\n    let rx_thread = thread::spawn(|| poll_thread(pclone));\n\n    let &amp;(ref mutex, ref cvar) = &amp;*pair;\n\n    for i in 0..10 {\n        thread::sleep(time::Duration::from_millis(500));\n        if i == 4 {\n            println!(\"Setting ReadRegister\");\n            let mut flag = mutex.lock().unwrap();\n            *flag = Command::ReadRegister(5);\n            println!(\"flag is = {:?}\", *flag);\n            cvar.notify_one();\n        } else if i == 8 {\n            println!(\"Setting Idle\");\n            let mut flag = mutex.lock().unwrap();\n            *flag = Command::Idle;\n            println!(\"flag is = {:?}\", *flag);\n            cvar.notify_one();\n        }\n    }\n    println!(\"after notify_one()\");\n\n    rx_thread.join();\n}\n</code></pre>\n\n<p>This works as expected, but when the line to sleep for 450 milliseconds is uncommented, the code will often remain in the \"read\" state and not return to waiting on the condition variable <code>cvar.wait()</code>. Sometimes it will return to idle after, say, 15 seconds!</p>\n\n<p>I would think that when <code>poll_thread</code> reaches the bottom of the <code>loop</code>, it would release the lock, allowing <code>main</code> to acquire and set <code>flag = Command::Idle</code>, and within roughly half a second, <code>poll_thread</code> would return to idle, but it appears that isn't happening when <code>poll_thread</code> sleeps. Why?</p>\n"}, {"tags": ["string", "struct", "rust", "hyper"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487619098, "post_id": 42352499, "comment_id": 71856386, "body": "I&#39;d suggest you do further research on what that error message means."}, {"owner": {"reputation": 341, "user_id": 3191204, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/d34894c4ab958a3123fc29ed30906ac4?s=128&d=identicon&r=PG", "display_name": "arthas_dk", "link": "https://stackoverflow.com/users/3191204/arthas-dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487621392, "post_id": 42352499, "comment_id": 71857432, "body": "I just added more complete examples. If I can convert the JSON or Struct object into a raw string then I dont need to implement a trait for hyper::client::Body&lt;&#39;_&gt;. The question is about the conversion."}], "answers": [{"comments": [{"owner": {"reputation": 341, "user_id": 3191204, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/d34894c4ab958a3123fc29ed30906ac4?s=128&d=identicon&r=PG", "display_name": "arthas_dk", "link": "https://stackoverflow.com/users/3191204/arthas-dk"}, "edited": false, "score": 0, "creation_date": 1487628354, "post_id": 42354768, "comment_id": 71860759, "body": "Amazing answer. I&#39;ll try this tonight. Until now, for me, Rust doesnt have a high learning curve; instead it solves problems in a simples way that forces us to think of the New possibilities."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1487627096, "last_edit_date": 1495541351, "creation_date": 1487627096, "answer_id": 42354768, "question_id": 42352499, "link": "https://stackoverflow.com/questions/42352499/how-can-i-convert-a-struct-or-json-into-a-raw-string/42354768#42354768", "title": "How can I convert a struct or JSON into a raw string?", "body": "<blockquote>\n  <p>I Know that the error E0277 is about the implementation of a trait for the \"Hyper::client::Body&lt;'_>\", but look, this is not the question; the question is: how to convert a struct or JSON into a raw string, nothing more.</p>\n</blockquote>\n\n<p>It is 100% <strong>impossible</strong> to convert to a raw string.</p>\n\n<p>You see, \"raw strings\" <strong>don't exist once the source code has been parsed</strong> \u2014 they are only a conceit of the source code. There's no way to convert <em>anything</em> into a raw string because it doesn't exist to be converted <em>to</em>.</p>\n\n<p>All that exists are string slices (<code>&amp;str</code>) and owned strings (<code>String</code>).</p>\n\n<p>This solves OP's question, nothing more, as requested. Anyone interested in the solution to the underlying problem is welcome to continue reading.</p>\n\n<hr>\n\n<p>Checking the <a href=\"https://docs.rs/hyper/0.10.4/hyper/client/struct.RequestBuilder.html#method.body\" rel=\"nofollow noreferrer\">documentation for <code>RequestBuilder::body</code></a>, you can see that it accepts any type that can be converted into a <code>Body</code>:</p>\n\n<pre><code>impl&lt;'a&gt; RequestBuilder&lt;'a&gt; {\n    fn body&lt;B: Into&lt;Body&lt;'a&gt;&gt;&gt;(self, body: B) -&gt; RequestBuilder&lt;'a&gt;;\n}\n</code></pre>\n\n<p>If you then review the <a href=\"https://docs.rs/hyper/0.10.4/hyper/client/enum.Body.html\" rel=\"nofollow noreferrer\">documentation for <code>Body</code></a>, you will see what implementations of <code>From</code> exist for it:</p>\n\n<pre><code>impl&lt;'a, R: Read&gt; From&lt;&amp;'a mut R&gt; for Body&lt;'a&gt; {\n    fn from(r: &amp;'a mut R) -&gt; Body&lt;'a&gt;;\n}\n</code></pre>\n\n<p>Coupled with the knowledge that <a href=\"https://doc.rust-lang.org/std/convert/trait.Into.html\" rel=\"nofollow noreferrer\"><code>From</code> implies <code>Into</code></a>, you know that you can pass anything that implements <code>Read</code> to <code>body</code>. Actually, the <strong>compiler tells you this in the error message</strong>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `hyper::client::Body&lt;'_&gt;: std::convert::From&lt;std::string::String&gt;` is not satisfied\n  --&gt; src/main.rs:37:10\n   |\n37 |         .body(encoded_request)\n   |          ^^^^ the trait `std::convert::From&lt;std::string::String&gt;` is not implemented for `hyper::client::Body&lt;'_&gt;`\n   |\n   = help: the following implementations were found:\n   = help:   &lt;hyper::client::Body&lt;'a&gt; as std::convert::From&lt;&amp;'a mut R&gt;&gt;\n   = note: required because of the requirements on the impl of `std::convert::Into&lt;hyper::client::Body&lt;'_&gt;&gt;` for `std::string::String`\n</code></pre>\n\n<p>This is the problem - there's actually <em>more</em> ways of converting to a <code>Body</code>, and the documentation doesn't show them<sup>1</sup>! Checking out <a href=\"https://github.com/hyperium/hyper/blob/v0.10.4/src/client/mod.rs#L414-L426\" rel=\"nofollow noreferrer\">the source</a>, you can see:</p>\n\n<pre><code>impl&lt;'a&gt; Into&lt;Body&lt;'a&gt;&gt; for &amp;'a str {\n    #[inline]\n    fn into(self) -&gt; Body&lt;'a&gt; {\n        self.as_bytes().into()\n    }\n}\n\nimpl&lt;'a&gt; Into&lt;Body&lt;'a&gt;&gt; for &amp;'a String {\n    #[inline]\n    fn into(self) -&gt; Body&lt;'a&gt; {\n        self.as_bytes().into()\n    }\n}\n</code></pre>\n\n<p>This means that you can pass in a reference to the string, which will then be converted to a <code>Body</code>, just like <a href=\"https://stackoverflow.com/a/42352956/155423\">vitalyd guessed</a>:</p>\n\n<pre><code>let mut response = client.post(url)\n    .body(&amp;encoded_request)\n    .send()\n    .unwrap();\n</code></pre>\n\n<hr>\n\n<p><strong>1</strong> I'm going to look to see if this is a filed issue already or not, cause this sure seems incorrect. </p>\n"}], "owner": {"reputation": 341, "user_id": 3191204, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/d34894c4ab958a3123fc29ed30906ac4?s=128&d=identicon&r=PG", "display_name": "arthas_dk", "link": "https://stackoverflow.com/users/3191204/arthas-dk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 958, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1487627096, "creation_date": 1487617795, "last_edit_date": 1487622105, "question_id": 42352499, "link": "https://stackoverflow.com/questions/42352499/how-can-i-convert-a-struct-or-json-into-a-raw-string", "title": "How can I convert a struct or JSON into a raw string?", "body": "<p>I have tests and  I need to send JSON data to my server. I have the following test:</p>\n\n<pre><code>extern crate hyper;\nextern crate rustc_serialize;\n\nuse std::io::Read;\nuse hyper::*;\n\n#[derive(RustcDecodable, RustcEncodable)]\nstruct LegacyJsonRequest {\n    jsonrpc: String,\n    method: String,\n    params: String,\n    id: i32,\n    auth: String,\n}\n\n#[test]\nfn apiinfo_jsonrpc_tests() {\n    let client = Client::new();\n\n    let url = \"http://localhost:6767/api_jsonrpc.php\";\n\n    let mut http_reader = header::Headers::new();\n    http_reader.set_raw(\"Content-Type\", vec![b\"application/json\".to_vec()]);\n\n    //TODO: How to use a struct and 'export' it to a raw string literal???\n    let request_data = LegacyJsonRequest {\n        jsonrpc: \"2.0\".to_string(),\n        method: \"apiinfo.version\".to_string(),\n        params: \"[]\".to_string(),\n        auth: \"[]\".to_string(),\n        id: 1,\n    };\n\n    let encoded_request = rustc_serialize::json::encode(&amp;request_data).unwrap();\n\n    let mut response = client.post(url)\n        .body(encoded_request)\n        .send()\n        .unwrap();\n\n}\n</code></pre>\n\n<p>With this code, the following error is returned:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `hyper::client::Body&lt;'_&gt;: std::convert::From&lt;std::string::String&gt;` is not satisfied\n</code></pre>\n\n<p>If I <strong>drop the struct and JSON encoded code and create a simple raw string literal</strong> and reference it on the body method, it works. Example:</p>\n\n<pre><code>extern crate hyper;\nextern crate rustc_serialize;\n\nuse std::io::Read;\nuse hyper::*;\n\n#[derive(RustcDecodable, RustcEncodable)]\nstruct LegacyJsonRequest {\n    jsonrpc: String,\n    method: String,\n    params: String,\n    id: i32,\n    auth: String,\n}\n\n#[test]\nfn apiinfo_jsonrpc_tests() {\n    let client = Client::new();\n\n    let url = \"http://localhost:6767/api_jsonrpc.php\";\n\n    let mut http_reader = header::Headers::new();\n    http_reader.set_raw(\"Content-Type\", vec![b\"application/json\".to_vec()]);\n\n    let request_data =\n        r#\"{\"jsonrpc\":\"2.0\", \"method\": \"apiinfo.version\", \"params\": {}, \"auth\": {}, \"id\": \"1\"}\"#;\n\n    let mut response = client.post(url)\n        .body(request_data)\n        .send()\n        .unwrap();\n\n}\n</code></pre>\n\n<p>So: How can I convert my struct or JSON into a <strong>raw string</strong>? </p>\n\n<p>I Know that the error E0277 is about the implementation of a trait for the \"Hyper::client::Body&lt;'_>\", but look, this is not the question; the question is: how to convert a struct or JSON into a raw string, nothing more. Thanks.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1487613497, "post_id": 42351142, "comment_id": 71853543, "body": "Related: according to <a href=\"http://stackoverflow.com/a/30726157/1233251\">this answer</a>, the rlib keeps a list of functions marked as inline."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487615436, "post_id": 42351142, "comment_id": 71854562, "body": "<i>why is the plain function not exported from the object file</i> \u2014 I&#39;d assume that this code is simple enough that it&#39;s <b>always</b> inlined, thus it can never be called, so there&#39;s no reason to have object code. <i>I want to inspect the generated assembly for the functions in my crate</i> \u2014 once inlined, that assembly may or may not look at all like the inlined and optimized assembly, so inspecting it before inlining may not even be useful."}], "answers": [{"comments": [{"owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1487650966, "post_id": 42356930, "comment_id": 71867783, "body": "Makes sense, thanks! The reason I want to see the assembly code of the function is to make sure some specific bounds check have been eliminated. I&#39;m guessing if they&#39;re eliminated without inline, they will be eliminated with inline as well (but the reverse is not necessarily true since the surrounding code might help the compiler eliminate more checks). Is there a better way to see the standalone assembly of the function than creating a public non-inline wrapper for each function?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "edited": false, "score": 0, "creation_date": 1487674332, "post_id": 42356930, "comment_id": 71880418, "body": "@Dogbert: <i>I&#39;m guessing if they&#39;re eliminated without inline, they will be eliminated with inline as well (but the reverse is not necessarily true since the surrounding code might help the compiler eliminate more checks)</i> =&gt; what seems reasonable may not always hold; I am wondering if the order in which optimizations are applied could not prevent the elision of bounds-checking by having prior optimizations muddying the waters when the function is inlined :/"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 5, "last_activity_date": 1487639130, "creation_date": 1487639130, "answer_id": 42356930, "question_id": 42351142, "link": "https://stackoverflow.com/questions/42351142/why-are-pub-functions-marked-inline-not-present-in-the-compiled-object-file/42356930#42356930", "title": "Why are pub functions marked `#[inline]` not present in the compiled object file?", "body": "<p>Before Rust 1.13.0, native code was in fact always generated for <code>#[inline]</code> functions. This <a href=\"https://github.com/rust-lang/rust/pull/36524\" rel=\"noreferrer\">changed</a> in <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1130-2016-11-10\" rel=\"noreferrer\">Rust 1.13.0</a>: <code>#[inline]</code> functions that are not used in the crate are not compiled into native code. The <a href=\"https://github.com/rust-lang/rust/issues/36280\" rel=\"noreferrer\">primary motivation</a> for this change is that libraries that contain a lot of inline functions that they don't use themselves are much faster to compile if they aren't translated to native code at all.</p>\n\n<p>The compiler still emits the function in an intermediate representation so that the compiler can inline and optimize it in other crates.</p>\n\n<blockquote>\n  <p>(I need this because I want to inspect the generated assembly for the functions in my crate without having to remove all inline attributes or wrapping every inline function in a public non-inline function.)</p>\n</blockquote>\n\n<p>The whole point of inline functions is to allow the compiler to emit distinct assembly code based on how the function is used. For example, an inline function that receives arguments might have their arguments participate in <a href=\"https://en.wikipedia.org/wiki/Constant_folding\" rel=\"noreferrer\">constant folding</a> if some arguments are constants. Sometimes, an inlined function call can compile down to zero instructions (when Rust claims zero-cost abstractions, they really mean it!), but you couldn't tell that from the non-inlined function call! Therefore, I suspect that what you want to do would just misguide you; you wouldn't be looking at the code that the compiler would actually emit when your inline function is used.</p>\n"}], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 750, "favorite_count": 0, "accepted_answer_id": 42356930, "answer_count": 1, "score": 4, "last_activity_date": 1487639130, "creation_date": 1487612751, "last_edit_date": 1487614997, "question_id": 42351142, "link": "https://stackoverflow.com/questions/42351142/why-are-pub-functions-marked-inline-not-present-in-the-compiled-object-file", "title": "Why are pub functions marked `#[inline]` not present in the compiled object file?", "body": "<p>I created a brand new crate with <code>cargo new a</code> and typed this in <code>src/lib.rs</code>:</p>\n\n<pre><code>pub fn xor(a: i32, b: i32) -&gt; i32 {\n    a ^ b\n}\n\n#[inline]\npub fn xor_inline(a: i32, b: i32) -&gt; i32 {\n    a ^ b\n}\n</code></pre>\n\n<p>When I compile with <code>cargo build --release</code>, the generated <code>.rlib</code> contains only <code>xor</code> and not <code>xor_inline</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ gnm -D -C target/release/deps/liba-6a3c2798185fafee.rlib\ngnm: __.SYMDEF: File format not recognized\n\na-6a3c2798185fafee.0.o:\n0000000000000000 T a::xor::hf0d97103d53d3286\ngnm: rust.metadata.bin: File format not recognized\ngnm: a-6a3c2798185fafee.0.bytecode.deflate: File format not recognized\n</code></pre>\n\n<p><sup>(<code>gnm</code> is GNU <code>nm</code> installed on MacOS via Homebrew.)</sup></p>\n\n<p>I have two questions:</p>\n\n<ol>\n<li><p>Why is <code>xor_inline</code> not inside the object file? I believe its source must be present in <code>rust.metadata.bin</code> so that cross-crate inlining works, but why is the plain function not exported from the object file?</p></li>\n<li><p>Is there any flag in <code>rustc</code> that I can use with <code>cargo rustc --release -- ...</code> to ensure all <code>#[inline]</code> functions are present in the object file? (Perhaps a different <code>--crate-type</code> or one of the flags under <code>-C</code>?)</p></li>\n</ol>\n\n<p>(I need this because I want to inspect the generated assembly for the functions in my crate without having to remove all inline attributes or wrapping every inline function in a public non-inline function.)</p>\n"}, {"tags": ["documentation", "rust", "rust-cargo", "rustdoc"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487603878, "post_id": 42348075, "comment_id": 71847440, "body": "This makes no sense to me. Why do you want to do this?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1487604074, "post_id": 42348075, "comment_id": 71847577, "body": "I <i>think</i> you have to add <code>ignore</code> after the first three backticks."}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487604133, "post_id": 42348075, "comment_id": 71847625, "body": "@Shepmaster Because there is no <code>myValue</code> (Could be fixed in this example by adding a let). What I need it for is to use an associated method of a trait on a type which I do not want to show in the documentation because it is not restricted to that one."}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1487604197, "post_id": 42348075, "comment_id": 71847665, "body": "@LukasKalbertodt no cargo just won&#39;t run it then except you use something like --all"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487750042, "post_id": 42348075, "comment_id": 71919551, "body": "Related question: <a href=\"http://stackoverflow.com/questions/40550665\">stackoverflow.com/questions/40550665</a>"}], "answers": [{"comments": [{"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 0, "creation_date": 1487604571, "post_id": 42348240, "comment_id": 71847933, "body": "The code will still be compiled, so the test will fail"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 0, "creation_date": 1487604733, "post_id": 42348240, "comment_id": 71848066, "body": "With ignore, or no_run?"}, {"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 0, "creation_date": 1487604892, "post_id": 42348240, "comment_id": 71848190, "body": "with <code>no_run</code>; <code>ignore</code> isn&#39;t a perfect solution, because it is for tests which are too expensive but can be run when appropriate"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "reply_to_user": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 0, "creation_date": 1487605381, "post_id": 42348240, "comment_id": 71848505, "body": "How about just a comment?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1562691454, "post_id": 42348240, "comment_id": 100453065, "body": "The link is not correct anymore and I didn&#39;t find where it&#39;s written now."}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": true, "score": 12, "last_activity_date": 1597604221, "last_edit_date": 1597604221, "creation_date": 1487604083, "answer_id": 42348240, "question_id": 42348075, "link": "https://stackoverflow.com/questions/42348075/how-to-put-a-line-into-the-documentation-which-is-ignored-for-doc-tests/42348240#42348240", "title": "How to put a line into the documentation which is ignored for doc tests?", "body": "<p>The <a href=\"https://doc.rust-lang.org/rustdoc/documentation-tests.html#attributes\" rel=\"nofollow noreferrer\">documentation</a> says you can do this:</p>\n<pre><code>/// ```rust,ignore\n/// highlighted as rust code but ignored by rustdoc\n/// ```\n</code></pre>\n<p>There is also <code>rust,no_run</code> which compiles but doesn't run the example code.</p>\n<p>Alternatively, you could use the same solution as you would in ordinary code: comment it out.</p>\n<pre><code>/// ```rust\n/// let x=5;\n/// // x = 6;  // won't be run\n/// assert_eq!(x, 5);\n/// ```\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 0, "creation_date": 1487604302, "post_id": 42348251, "comment_id": 71847738, "body": "Is there also a way to run it? So to run every line except the ignored one?"}, {"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "reply_to_user": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "edited": false, "score": 3, "creation_date": 1487604356, "post_id": 42348251, "comment_id": 71847786, "body": "You can create several blocks, some ignored, some running normally. They are always displayed, they just don&#39;t run etc."}], "tags": [], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "is_accepted": false, "score": 5, "last_activity_date": 1487604581, "last_edit_date": 1487604581, "creation_date": 1487604102, "answer_id": 42348251, "question_id": 42348075, "link": "https://stackoverflow.com/questions/42348075/how-to-put-a-line-into-the-documentation-which-is-ignored-for-doc-tests/42348251#42348251", "title": "How to put a line into the documentation which is ignored for doc tests?", "body": "<p>If  you want to ignore a part of Rust code in doctests, you might want to read the section on <a href=\"https://doc.rust-lang.org/book/documentation.html#running-documentation-tests\" rel=\"nofollow noreferrer\">running documentation tests</a>. Basically extract that code into a different block and set that block to <code>rust,ignore</code>.</p>\n\n<p>This will ignore <code>IGNORE_FOR_COMPILATION_BUT_SHOW</code> completely, but the rest will run:</p>\n\n<pre><code>///```rust,ignore\n///IGNORE_FOR_COMPILATION_BUT_SHOW: let cloned = myValue.clone(); \n///```\n\n///```rust\n/// # let cloned = 5.clone();\n/// ```\n</code></pre>\n\n<p>If you want rustdoc to compile your doc tests, but not run it, you can use <code>rust,no_run</code></p>\n"}], "owner": {"reputation": 959, "user_id": 6779010, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/i7Jj0.png?s=128&g=1", "display_name": "torkleyy", "link": "https://stackoverflow.com/users/6779010/torkleyy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 583, "favorite_count": 1, "accepted_answer_id": 42348240, "answer_count": 2, "score": 5, "last_activity_date": 1597604221, "creation_date": 1487603563, "last_edit_date": 1487604375, "question_id": 42348075, "link": "https://stackoverflow.com/questions/42348075/how-to-put-a-line-into-the-documentation-which-is-ignored-for-doc-tests", "title": "How to put a line into the documentation which is ignored for doc tests?", "body": "<p>How can I write a line into the documenation code but let the compiler ignore it?</p>\n\n<p>I want to write</p>\n\n<pre><code>/// # Examples\n///\n/// To clone something, do\n///\n/// ```\n/// IGNORE_FOR_COMPILATION_BUT_SHOW: let cloned = myValue.clone();\n/// # let cloned = 5.clone();\n/// ```\n</code></pre>\n\n<p>And I want to get:</p>\n\n<h3>Examples</h3>\n\n<p>To clone somthing, do</p>\n\n<pre><code>let cloned = myValue.clone();\n</code></pre>\n\n<hr>\n\n<p>But the compiler should still compile the example (cloning the 5).</p>\n\n<p><strong>EDIT</strong>: I also want cargo to run the example, but leave out one line.</p>\n"}, {"tags": ["loops", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "edited": false, "score": 0, "creation_date": 1487623833, "post_id": 42346686, "comment_id": 71858653, "body": "I also found an answer using <code>RefCell</code>, but I don&#39;t think, this is better than in the link."}], "owner": {"reputation": 585, "user_id": 2489725, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/d2bef286279a42a6c44019403a45b910?s=128&d=identicon&r=PG", "display_name": "porky11", "link": "https://stackoverflow.com/users/2489725/porky11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 27, "favorite_count": 0, "closed_date": 1487599747, "answer_count": 0, "score": 1, "last_activity_date": 1487599676, "creation_date": 1487599478, "last_edit_date": 1487599676, "question_id": 42346686, "link": "https://stackoverflow.com/questions/42346686/how-to-implement-a-rust-function-that-modifies-multiple-elements-of-a-vector", "closed_reason": "Duplicate", "title": "How to implement a Rust function that modifies multiple elements of a vector?", "body": "<p>I have this code:</p>\n\n<pre><code>struct Physical;\n\nfn collision(a: &amp;mut Physical, b: &amp;mut Physical) {\n    //accelerate a and b depending on their values\n}\n\nfn main_loop(vec: &amp;mut Vec&lt;Physical&gt;) {\n    for i in 0..vec.len() {\n        for j in i+1..vec.len() {\n            collision(&amp;mut vec[i], &amp;mut vec[j]);\n        }\n    }\n}\n\nfn main() {\n    let mut vec = vec![Physical, Physical, Physical];\n    loop {\n        main_loop(&amp;mut vec);\n    }\n}\n</code></pre>\n\n<p>This doesn't compile, because the mutable references are both in the same vector.</p>\n\n<p>It would be possible to change <code>collision</code> to take indices and the mutable vector, but it looks ugly. I also want to change the <code>Container</code> type later to make the collision more efficient. I may even want to use multiple containers for my objects, so this won't be an option.</p>\n\n<p>How can this be done the best way?</p>\n"}, {"tags": ["memory-management", "rust"], "answers": [{"comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1487638158, "post_id": 42344637, "comment_id": 71864390, "body": "It&#39;s not quite true that &quot;no type actually fulfills a <code>Drop</code> bound&quot; (for example, <code>Vec&lt;T&gt;</code> does, as of Rust 1.15.1), but you&#39;re right that using a <code>Drop</code> bound is not the correct way to detect a type that has a destructor/drop glue."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1487669369, "post_id": 42344637, "comment_id": 71876695, "body": "Huh, that&#39;s weird. Gotta read up on that, thanks for the hint."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1487669438, "post_id": 42344637, "comment_id": 71876753, "body": "oh... it&#39;s any type with an explicit drop impl that fulfills the bound."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 3, "last_activity_date": 1487669525, "last_edit_date": 1487669525, "creation_date": 1487593726, "answer_id": 42344637, "question_id": 42344057, "link": "https://stackoverflow.com/questions/42344057/how-to-detect-when-calling-drop-is-needed-for-a-type/42344637#42344637", "title": "How to detect when calling &#39;drop&#39; is needed for a type?", "body": "<p>You cannot reason about <code>Drop</code> in generic bounds. Types which don't have an explicit <code>Drop</code> impl, don't fulfill a <code>Drop</code> bound:</p>\n\n<pre><code>fn foo&lt;T: Drop&gt;(t: T) {}\n\nfoo(5);\nfoo(\"5\".to_owned());\n</code></pre>\n\n<p>Only types with an explicit <code>Drop</code> impl fulfill this bound:</p>\n\n<pre><code>foo(vec![42]); // works\n</code></pre>\n\n<p><code>Drop</code> is silently handled by the compiler in the background (otherwise you'd have to specify it everywhere). This means, that not even specialization or OIBITs can be used as a workaround.</p>\n\n<p>That said, you can detect whether any (even a generated) drop impl exists (but you shouldn't) by turning a value of the type into a trait object and checking whether the vtable's drop entry is <code>NULL</code> or not.</p>\n"}, {"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1487614787, "post_id": 42348808, "comment_id": 71854254, "body": "The description in the documentation that you linked to seems to imply that: all types either <i>require drop glue</i> or  <i>implement Copy</i>, but never both. This doesn&#39;t sound right."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1487627865, "post_id": 42348808, "comment_id": 71860571, "body": "@PeterHall It does not imply that all types do one of these things, and in fact explicitly mentions types which are neither. But is indeed true that being <code>Copy</code> is mutually exclusive with having drop glue -- types which are themselves <code>Drop</code> or contain things that are <code>Drop</code> (the criteria for having drop glue) can never be <code>Copy</code>."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 5, "last_activity_date": 1487605596, "creation_date": 1487605596, "answer_id": 42348808, "question_id": 42344057, "link": "https://stackoverflow.com/questions/42344057/how-to-detect-when-calling-drop-is-needed-for-a-type/42348808#42348808", "title": "How to detect when calling &#39;drop&#39; is needed for a type?", "body": "<p><a href=\"https://doc.rust-lang.org/std/intrinsics/fn.needs_drop.html\" rel=\"noreferrer\"><code>std::intrinsics::needs_drop</code></a> is still unstable, but if you can deal with that, it's the best way to check this.</p>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 390, "favorite_count": 0, "accepted_answer_id": 42348808, "answer_count": 2, "score": 7, "last_activity_date": 1487669525, "creation_date": 1487592061, "question_id": 42344057, "link": "https://stackoverflow.com/questions/42344057/how-to-detect-when-calling-drop-is-needed-for-a-type", "title": "How to detect when calling &#39;drop&#39; is needed for a type?", "body": "<p>When types such as <code>Vec</code> run <code>truncate</code>, they call <code>ptr::drop_in_place</code> on every member of the vector.</p>\n\n<p>This turns out not to be a performance problem for primitive types such as int's, float's etc... because the drop calls are optimized out.</p>\n\n<p>For more involved container types (ones I've written for my own use), iterating over elements may not be so trivial <em>(and may not always get optimized away)</em>.</p>\n\n<p>Is there a way to check if a type has a drop trait so visiting all members can be avoided in that case?</p>\n"}, {"tags": ["optimization", "rust"], "comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1487577285, "post_id": 42338158, "comment_id": 71830422, "body": "You may want to look at using unsafe code with pointers (essentially the C++ code) instead of using the current <code>Iterator</code> solution which is <i>much</i> safer (prevents pointer overruns and consequent segfaults) and more intuitive but adds more overhead."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1487583186, "post_id": 42338158, "comment_id": 71833671, "body": "Do you know of <code>std::mem::swap</code>? Also, have you tried using <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.get_unchecked\" rel=\"nofollow noreferrer\"><code>get_unchecked</code></a> to avoid indices (in case bounds checks are not elided)? Have you checked that the time spent really is in this loop?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1487590293, "post_id": 42338158, "comment_id": 71838190, "body": "I can&#39;t reproduce the time you experience. On my machine the Rust code executes in about 30 &#181;s, exactly as the C++ code does. (edit: I decided to write an answer about this)"}, {"owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "edited": false, "score": 2, "creation_date": 1487599117, "post_id": 42338158, "comment_id": 71844242, "body": "&quot;The Rust program was built using cargo --release&quot;  I guess you also ran it using cargo run --release?"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1487631826, "post_id": 42338158, "comment_id": 71862239, "body": "rnstlr: I may actually have done exactly that mistake! I feel like an idiot :-) Thank&#39;s for the tip!"}], "answers": [{"comments": [{"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1487631311, "post_id": 42344582, "comment_id": 71862025, "body": "Man, amazing answer! I ran your code (Intel Xeon E3-1575M v5), and got:  rust: Duration { secs: 0, nanos: 21839 } cpp:  Duration { secs: 0, nanos: 6576 }  (with some variability)"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1487631638, "post_id": 42344582, "comment_id": 71862164, "body": "Changing the order of execution, so the cpp code goes first, seems to change the results slightly. The C-version seems to be about twice as fast on average."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1487631937, "post_id": 42344582, "comment_id": 71862283, "body": "No way near the difference I got at first. Which, I hate to admit, was probably because I was accidentally running the wrong binary (the unoptimized one).  A great thank you to you for your detailed investigation! Something I&#39;ve really come to appreciate when learning Rust, is the very pleasant tone in the Rust community. Thanks!"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1487632187, "post_id": 42344582, "comment_id": 71862375, "body": "@avl_sweden You are very welcome :)  (I am still wondering why LLVM is not able to generate better code, though...)"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 8, "last_activity_date": 1487593561, "creation_date": 1487593561, "answer_id": 42344582, "question_id": 42338158, "link": "https://stackoverflow.com/questions/42338158/speeding-up-the-loop/42344582#42344582", "title": "Speeding up the loop", "body": "<p>I cannot reproduce the timings you are getting. You probably have an error in how you measure (or I have \ud83d\ude09). On my machine both versions run in exactly the same time.</p>\n\n<p>In this answer, I will first compare the assembly output of both, the C++ and the Rust version. Afterwards I will describe how to reproduce <em>my</em> timings.</p>\n\n<hr>\n\n<h1>Assembly comparison</h1>\n\n<p>I generated the assembly code with the amazing Compiler Explorer (<a href=\"https://godbolt.org/g/xZMOjT\" rel=\"noreferrer\">Rust code</a>, <a href=\"https://godbolt.org/g/fr8ZCO\" rel=\"noreferrer\">C++ Code</a>). I compiled the C++ code with optimizations activated (<code>-O3</code>), too, to make it a fair game (C++ compiler optimizations had no impact on the measured timings though). Here is the resulting assembly (Rust left, C++ right):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>example::foo_rust:                    |  foo_cpp(char*, char*):\n    test    rsi, rsi                  |      cmp     rdi, rsi\n    je      .LBB0_5                   |      je      .L3\n    mov     r8d, 4                    |  \n.LBB0_2:                              |  .L5:\n    cmp     rsi, 4                    |  \n    mov     rdx, rsi                  |  \n    cmova   rdx, r8                   |  \n    test    rdi, rdi                  |  \n    je      .LBB0_5                   |  \n    cmp     rdx, 3                    |  \n    jb      .LBB0_6                   |  \n    movzx   ecx, byte ptr [rdi]       |      movzx   edx, BYTE PTR [rdi]\n    movzx   eax, byte ptr [rdi + 2]   |      movzx   eax, BYTE PTR [rdi+2]\n                                      |      add     rdi, 4\n    mov     byte ptr [rdi], al        |      mov     BYTE PTR [rdi-2], al\n    mov     byte ptr [rdi + 2], cl    |      mov     BYTE PTR [rdi-4], dl\n    lea     rdi, [rdi + rdx]          |  \n    sub     rsi, rdx                  |      cmp     rsi, rdi\n    jne     .LBB0_2                   |      jne     .L5 \n.LBB0_5:                              |  .L3:\n                                      |      xor     eax, eax\n    ret                               |      ret\n.LBB0_6:                              |  \n    push    rbp                       +-----------------+  \n    mov     rbp, rsp                                    |  \n    lea     rdi, [rip + panic_bounds_check_loc.3]       |  \n    mov     esi, 2                                      |  \n    call    core::panicking::panic_bounds_check@PLT     |\n</code></pre>\n\n<p>You can immediately see that C++ does in fact produce a lot less assembly (without optimization C++ produced nearly as many instruction as Rust does). I am not sure about all of the additional instructions Rust produces, but at least half of them are for bound checking. But this bound checking is, as far as I understand, not for the actual accesses via <code>[]</code> but just once every loop iteration. This is just for the case that the slice's length is not divisible by 4. But I guess the Rust assembly could be better still (even with bound checks).</p>\n\n<p>As mentioned in the comments, you can remove bound checking by using <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.get_unchecked\" rel=\"noreferrer\"><code>get_unchecked()</code></a> and <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.get_unchecked_mut\" rel=\"noreferrer\"><code>get_unchecked_mut()</code></a>. Note however, that this did not influence the performance in my measurements!</p>\n\n<p>Lastly: you should use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.swap\" rel=\"noreferrer\"><code>[&amp;]::swap(i, j)</code></a> here.</p>\n\n<pre><code>for chunk in imagebuf.chunks_mut(4) {\n    chunk.swap(0, 2);\n}\n</code></pre>\n\n<p>This, again, did not notably influence performance. But it's shorter and better code.</p>\n\n<hr>\n\n<h1>Measuring</h1>\n\n<p>I used this C++ code (in <code>foocpp.cpp</code>):</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>extern \"C\" void foo_cpp(char *imagebuf, char *endbuf);\n\nvoid foo_cpp(char* imagebuf, char* endbuf) {\n    for(;imagebuf!=endbuf;imagebuf+=4) {\n        char c=imagebuf[0];\n        imagebuf[0]=imagebuf[2];\n        imagebuf[2]=c;\n    }\n}\n</code></pre>\n\n<p>I compiled it with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>gcc -c -O3 foocpp.cpp &amp;&amp; ar rvs libfoocpp.a foocpp.o\n</code></pre>\n\n<p>Then I used this Rust code to measure everything: </p>\n\n<pre><code>#![feature(test)]\n\nextern crate libc;\nextern crate test;\n\nuse test::black_box;\nuse std::time::Instant;\n\n#[link(name = \"foocpp\")]\nextern {\n    fn foo_cpp(start: *mut libc::c_char, end: *const libc::c_char);\n}\n\npub fn foo_rust(imagebuf: &amp;mut [u8]) {\n    for chunk in imagebuf.chunks_mut(4) {\n        let temp = chunk[0];\n        chunk[0] = chunk[2];\n        chunk[2] = temp;\n    }\n}\n\nfn main() {\n    let mut buf = [0u8; 40_000];\n\n    let before = Instant::now();\n\n    foo_rust(black_box(&amp;mut buf));\n    black_box(buf);\n\n    println!(\"rust: {:?}\", Instant::now() - before);\n\n    // ----------------------------------\n\n    let mut buf = [0u8 as libc::c_char; 40_000];\n\n    let before = Instant::now();\n\n    let ptr = buf.as_mut_ptr();\n    let end = unsafe { ptr.offset(buf.len() as isize) };\n    unsafe { foo_cpp(black_box(ptr), black_box(end)); }\n    black_box(buf);\n\n    println!(\"cpp:  {:?}\", Instant::now() - before);\n}\n</code></pre>\n\n<p>The <code>black_box()</code> all over the place prevents the compiler from optimizing where it isn't supposed to. I executed it with (nightly compiler):</p>\n\n<pre><code>LIBRARY_PATH=.:$LIBRARY_PATH cargo run --release\n</code></pre>\n\n<p>Giving me (i7-6700HQ) values like these:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rust: Duration { secs: 0, nanos: 30583 }\ncpp:  Duration { secs: 0, nanos: 30810 }\n</code></pre>\n\n<p>The times fluctuate <em>a lot</em> (way more than the difference between both versions). I am not exactly sure why the additional assembly generated by Rust does not result in a slower execution, though.</p>\n"}], "owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 42344582, "answer_count": 1, "score": 3, "last_activity_date": 1487593561, "creation_date": 1487573492, "last_edit_date": 1487576106, "question_id": 42338158, "link": "https://stackoverflow.com/questions/42338158/speeding-up-the-loop", "title": "Speeding up the loop", "body": "<p>I have the following piece of code:</p>\n\n<pre><code>for chunk in imagebuf.chunks_mut(4) {\n    let temp = chunk[0];\n    chunk[0] = chunk[2];\n    chunk[2] = temp;\n}\n</code></pre>\n\n<p>For an array of 40000 <code>u8</code>s, it takes about 2.5 ms on my machine, compiled using <code>cargo build --release</code>.</p>\n\n<p>The following C++ code takes about 100 us for the exact same data (verified by implementing it and using FFI to call it from rust):</p>\n\n<pre><code>for(;imagebuf!=endbuf;imagebuf+=4) {\n    char c=imagebuf[0];\n    imagebuf[0]=imagebuf[2];\n    imagebuf[2]=c;\n}\n</code></pre>\n\n<p>I'm thinking it <em>should</em> be possible to speed up the Rust implementation to perform as fast as the C++ version. </p>\n\n<p>The Rust program was built using <code>cargo --release</code>, the C++ program was built without any optimization flags.</p>\n\n<p>Any hints?</p>\n"}, {"tags": ["rust", "binary-tree", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 737, "user_id": 1556321, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/c35059586043765d90bdf737d5becf6e?s=128&d=identicon&r=PG&f=1", "display_name": "SuperCheezGi", "link": "https://stackoverflow.com/users/1556321/supercheezgi"}, "edited": false, "score": 0, "creation_date": 1487609245, "post_id": 42337237, "comment_id": 71850963, "body": "If I understand this correctly, the value assigned to <code>self.buffers</code> using <code>mem::replace</code> is thrown away once it gets assigned to using <code>vertical_split</code>? If I wanted to prevent memory wasting, could I add an empty variant to <code>LayoutNode</code>?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 737, "user_id": 1556321, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/c35059586043765d90bdf737d5becf6e?s=128&d=identicon&r=PG&f=1", "display_name": "SuperCheezGi", "link": "https://stackoverflow.com/users/1556321/supercheezgi"}, "edited": false, "score": 1, "creation_date": 1487623523, "post_id": 42337237, "comment_id": 71858479, "body": "Yes, the value moved into <code>self.buffers</code> by <code>mem::replace</code> will be overwritten when the assignment is performed once <code>vertical_split</code> returns. And yes, if <code>Buffer::empty()</code> is &quot;expensive&quot;, you might want to add an empty variant to <code>LayoutNode</code>, but then every match on that type will have to &quot;handle&quot; it (which can be as simple as coding it as <code>unreachable!()</code>)."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 3, "last_activity_date": 1487569225, "creation_date": 1487569225, "answer_id": 42337237, "question_id": 42335840, "link": "https://stackoverflow.com/questions/42335840/how-do-i-appease-the-borrow-checker-with-nested-data-structures/42337237#42337237", "title": "How do I appease the borrow checker with nested data structures?", "body": "<p><code>mem::replace</code> is often used in situations like this to set the field to a dummy, but valid value while you're producing the new value. This is necessary to ensure that if the thread panics while producing the new value, the destructor will not free the same objects twice.</p>\n\n<p>In your case, it might look something like this:</p>\n\n<pre><code>impl Editor {\n    pub fn new() -&gt; Editor {\n        Editor {\n            buffers: LayoutNode::Buf(Buffer::empty()),\n        }\n    }\n\n    pub fn vertical_split(&amp;mut self) {\n        // buffers needs to be a part of itself\n        self.buffers = LayoutNode::vertical_split(\n            mem::replace(&amp;mut self.buffers, LayoutNode::Buf(Buffer::empty())));\n    }\n}\n</code></pre>\n\n<p>It works like this: <code>mem::replace</code> receives a mutable reference to the variable or field to replace and the value to assign, and returns the old value. You get ownership of the result, so you can move it freely.</p>\n"}], "owner": {"reputation": 737, "user_id": 1556321, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/c35059586043765d90bdf737d5becf6e?s=128&d=identicon&r=PG&f=1", "display_name": "SuperCheezGi", "link": "https://stackoverflow.com/users/1556321/supercheezgi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 42337237, "answer_count": 1, "score": 2, "last_activity_date": 1487569225, "creation_date": 1487560082, "last_edit_date": 1487561182, "question_id": 42335840, "link": "https://stackoverflow.com/questions/42335840/how-do-i-appease-the-borrow-checker-with-nested-data-structures", "title": "How do I appease the borrow checker with nested data structures?", "body": "<p>I'm working on a (rather ambitious) text editor, and I'm trying to implement arbitrary vertical and horizontal splits to display text buffers in, something like this:</p>\n\n<pre><code>     buffer\n-----------------\nbuffer |\n-------|  buffer\nbuffer |\n</code></pre>\n\n<p>I have this structure represented as a binary tree-type thing:</p>\n\n<pre><code>    h\n   / \\\n  v   b\n / \\\nb   h\n   / \\\n  b   b\n</code></pre>\n\n<p>where <code>v</code> is a vertical split, <code>h</code> is a horizontal split, and <code>b</code> is a buffer.</p>\n\n<p>In code form, it is this:</p>\n\n<pre><code>pub enum LayoutNode {\n    Buf(Buffer),\n    Split(Box&lt;Split&gt;),\n}\n\npub enum Split {\n    Vertical(LayoutNode, LayoutNode),\n    Horizontal(LayoutNode, LayoutNode)\n}\n\npub struct Buffer {\n    content: String,\n    // more buffer-related stuff\n}\n</code></pre>\n\n<p>All is well. My vertical split method:</p>\n\n<pre><code>impl LayoutNode {\n    pub fn vertical_split(layout: LayoutNode) -&gt; LayoutNode {\n        LayoutNode::Split(Box::new(Split::Vertical(layout, LayoutNode::Buf(Buffer::new()))))\n        // Buffer::new() returns an empty Buffer\n    }\n}\n</code></pre>\n\n<p>This function compiles, but is not the whole story. I have a data structure responsible for the editor's layout nodes, called <code>Editor</code>:</p>\n\n<pre><code>impl Editor {\n    pub fn new() -&gt; Editor {\n        Editor {\n            buffers: LayoutNode::Buf(Buffer::empty()),\n            // more editor-related stuff\n        }\n    }\n\n    pub fn vertical_split(&amp;mut self) {\n        // buffers needs to be a part of itself\n        self.buffers = LayoutNode::vertical_split(self.buffers);\n        // cannot move out of borrowed content    ^\n    }\n}\n</code></pre>\n\n<p>I've taken a look at <code>mem::replace</code> but I'm not sure that it's what I need for this case with nested data structures. The <code>rustc --explain</code> page for <code>E0507</code> isn't very helpful in this regard.</p>\n\n<p>How do I work with the borrow checker in this case? I'd rather not clone everything, since that will easily waste a lot of memory with a new copy of every file upon each split.</p>\n"}, {"tags": ["rust", "traits", "virtual-functions"], "comments": [{"owner": {"reputation": 17388, "user_id": 921321, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/3f4c4737cb30134f58cc76f06ef5113a?s=128&d=identicon&r=PG", "display_name": "Lukazoid", "link": "https://stackoverflow.com/users/921321/lukazoid"}, "edited": false, "score": 1, "creation_date": 1487549725, "post_id": 42334404, "comment_id": 71821574, "body": "Sounds like <a href=\"https://github.com/rust-lang/rfcs/issues/1024\" rel=\"nofollow noreferrer\">Allow a trait to implement its parent trait</a> is what you are after with a default impl of <code>Debug</code> for your trait."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1487555198, "last_edit_date": 1487555198, "creation_date": 1487554651, "answer_id": 42335161, "question_id": 42334404, "link": "https://stackoverflow.com/questions/42334404/how-do-i-provide-a-default-debug-implementation/42335161#42335161", "title": "How do I provide a default Debug implementation?", "body": "<p>You can create your own trait method. Types that wish to have enhanced debugging <em>and</em> implement <code>Debug</code> can delegate: </p>\n\n<pre><code>use std::fmt;\nuse std::fmt::{ Formatter, Debug };\n\n#[derive(Debug)]\nstruct Container(Box&lt;Data&gt;);\n\ntrait Data {\n    fn debug_fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        write!(f, \"Data {{ ... }}\")\n    }\n}\n\nimpl Debug for Data {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        self.debug_fmt(f)\n    }\n}\n\n#[derive(Debug)]\nstruct Overrides(i32);\n\nimpl Data for Overrides {\n    fn debug_fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        self.fmt(f)\n    }\n}\n\n#[derive(Debug)]\nstruct Defaults(i32);\nimpl Data for Defaults {}\n\nfn main() {\n    let a = Container(Box::new(Overrides(42)));\n    println!(\"{:?}\", a);\n    let a = Container(Box::new(Defaults(42)));\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<hr>\n\n<p>An alternate solution that requires the unstable specialization feature:</p>\n\n<pre><code>#![feature(specialization)]\n\nuse std::fmt;\nuse std::fmt::{Formatter, Debug};\n\nstruct Container&lt;D&gt;(Box&lt;D&gt;) where D: Data;\n\nimpl&lt;D&gt; Debug for Container&lt;D&gt;\n    where D: Data\n{\n    default fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        write!(f, \"Container(Data {{ ... }})\")\n    }\n}\n\nimpl&lt;D&gt; Debug for Container&lt;D&gt;\n    where D: Data + Debug\n{\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        write!(f, \"Container({:?})\", self.0)\n    }\n}\n\ntrait Data {}\n\n#[derive(Debug)]\nstruct Overrides(i32);\nimpl Data for Overrides {}\n\nstruct Defaults(i32);\nimpl Data for Defaults {}\n\nfn main() {\n    let a = Container(Box::new(Overrides(42)));\n    println!(\"{:?}\", a);\n    let a = Container(Box::new(Defaults(42)));\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>Note that this places the burden on the container.</p>\n"}], "owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1335, "favorite_count": 1, "accepted_answer_id": 42335161, "answer_count": 1, "score": 10, "last_activity_date": 1487555198, "creation_date": 1487548554, "last_edit_date": 1487554320, "question_id": 42334404, "link": "https://stackoverflow.com/questions/42334404/how-do-i-provide-a-default-debug-implementation", "title": "How do I provide a default Debug implementation?", "body": "<p>It is considered good practice to <code>#[derive(Debug)]</code> for most structs you create to aid in debugging. However, this is not possible if your struct contains a type without <code>Debug</code>, such as traits. But if the trait is under my control, is there something I can do to let users' implementations of said trait show up in the debug message?</p>\n\n<p>I could require that people who implement my trait also implement <code>Debug</code>, but I don't like having to add that arbitrary requirement:</p>\n\n<pre><code>trait MyTrait: Debug { ... }\n</code></pre>\n\n<p>I could just implement <code>Debug</code> for my trait:</p>\n\n<pre><code>trait MyTrait { ... }\n\nimpl Debug for MyTrait {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        write!(f, \"MyTrait {{ ... }}\")\n    }\n}\n</code></pre>\n\n<p>This doesn't allow implementations to override <code>Debug</code> - it's almost as if the function is not virtual. How can I make this work?</p>\n\n<pre><code>use std::fmt;\nuse std::fmt::{ Formatter, Debug };\n\n#[derive(Debug)]\nstruct A {\n    a: Box&lt;Data&gt;,\n}\n\ntrait Data {}\n\nimpl Debug for Data {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; fmt::Result {\n        write!(f, \"Data{{ ... }}\")\n    }\n}\n\n#[derive(Debug)]\nstruct B(i32);\n\nimpl Data for B {}\n\nfn main() {\n    let a = A{ a: Box::new(B(42)) };\n    println!(\"{:?}\", a);\n}\n</code></pre>\n\n<p>Outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>A { a: Data{ ... } }\n</code></pre>\n\n<p>What I want:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>A { a: B(42) }\n</code></pre>\n\n<p>I only want the first output when <code>B</code> does not implement <code>Debug</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1487542190, "post_id": 42333349, "comment_id": 71819349, "body": "&quot;Any idea [...]&quot; Yes. <code>f32</code> indeed does not implement <code>Eq</code> because floating point types do not provide a &quot;pure&quot; equality relationship. Do you really need your <code>Document</code> to implement <code>Eq</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487542573, "post_id": 42333349, "comment_id": 71819487, "body": "Please review what <a href=\"http://floating-point-gui.de/errors/comparison/\" rel=\"nofollow noreferrer\">floating point equality means</a>."}, {"owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1487542588, "post_id": 42333349, "comment_id": 71819493, "body": "@E_net4 hmm, didn&#39;t know that. Yes, I have to implement <code>Eq</code> for that struct."}], "owner": {"reputation": 28096, "user_id": 375966, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/add92525ab635b5119671269d24c1449?s=128&d=identicon&r=PG", "display_name": "Afshin Mehrabani", "link": "https://stackoverflow.com/users/375966/afshin-mehrabani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 44, "favorite_count": 0, "closed_date": 1487543339, "answer_count": 0, "score": 0, "last_activity_date": 1487542051, "creation_date": 1487541162, "last_edit_date": 1487542051, "question_id": 42333349, "link": "https://stackoverflow.com/questions/42333349/using-f32-in-a-struct", "closed_reason": "Duplicate", "title": "Using f32 in a struct", "body": "<p>I'm trying to create a <code>struct</code> that has an <code>f32</code> but I'm getting this error after trying to compare two of the same datatype:</p>\n\n<blockquote>\n  <p>the trait <code>std::cmp::Eq</code> is not implemented for <code>f32</code></p>\n</blockquote>\n\n<p>Here is what I have tried:</p>\n\n<pre><code>#[derive(Eq)]\npub struct Document {\n    pub score: f32,\n}\n\nimpl PartialEq for Document {\n    fn eq(&amp;self, other: &amp;Document) -&gt; bool {\n        self.score == other.score\n    }\n}\n\nfn main() {\n\n    let num: Document = Document { score: 1.0f32 };\n    let num2: Document = Document { score: 1.0f32 };\n\n    assert!(num == num2);\n\n}\n</code></pre>\n\n<p>And here is the <a href=\"https://play.rust-lang.org/?code=%23%5Bderive(Eq)%5D%0Apub%20struct%20Document%20%7B%0A%20%20%20%20pub%20score%3A%20f32%2C%0A%7D%0A%0Aimpl%20PartialEq%20for%20Document%20%7B%0A%20%20%20%20fn%20eq(%26self%2C%20other%3A%20%26Document)%20-%3E%20bool%20%7B%0A%20%20%20%20%20%20%20%20self.score%20%3D%3D%20other.score%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20main()%20%7B%0A%0A%20%20%20%20let%20num%3A%20Document%20%3D%20Document%20%7B%20score%3A%201.0f32%20%7D%3B%0A%20%20%20%20let%20num2%3A%20Document%20%3D%20Document%20%7B%20score%3A%201.0f32%20%7D%3B%0A%0A%20%20%20%20assert!(num%20%3D%3D%20num2)%3B%0A%0A%7D&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Rust Play</a>. Any idea what is going on?</p>\n"}, {"tags": ["assembly", "rust", "x86-64", "micro-optimization"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1487582946, "post_id": 42332615, "comment_id": 71833517, "body": "Since you are optimizing, you do know that number of instructions does not necessarily correlate with program speed? For example, going to vectorized instructions might require more instructions, and yet process more bytes per cycle."}], "answers": [{"comments": [{"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1487626745, "post_id": 42341575, "comment_id": 71860045, "body": "I think you&#39;re right and these instructions come from trait object deallocation. I&#39;ll have to re-investigate my original code and double check I just got confused by what were these instructions attriubted to in <code>kcachegrind</code>."}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1487636474, "post_id": 42341575, "comment_id": 71863846, "body": "After all, it seems it&#39;s not the case in my original program. The destructor there never gets called, yet the alignment calculation sequence is there. It seems to me it&#39;s just llvm optimizer failing somewhere."}, {"owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "edited": false, "score": 0, "creation_date": 1487643077, "post_id": 42341575, "comment_id": 71865731, "body": "Could it be that calling a method on any trait object requires 0x10 alignment. eg to lookup vtable (or something in it)?"}], "tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 1, "last_activity_date": 1487668832, "last_edit_date": 1487668832, "creation_date": 1487585136, "answer_id": 42341575, "question_id": 42332615, "link": "https://stackoverflow.com/questions/42332615/why-does-dereferencing-arct-where-t-mytrait-align-to-0x10/42341575#42341575", "title": "Why does dereferencing `Arc&lt;T&gt; where T : MyTrait` align to 0x10?", "body": "<p>That instruction sequence (at least when I run it) is in the function <code>_ZN33_$LT$alloc..arc..Arc$LT$T$GT$$GT$9drop_slow17h09d36c48f370a93dE</code>, which demangles to <code>&lt;alloc::arc::Arc&lt;T&gt;&gt;::drop_slow</code>.  This is the deallocation function.  <a href=\"https://doc.rust-lang.org/src/alloc/arc.rs.html#448\" rel=\"nofollow noreferrer\">Looking at the source</a>:</p>\n\n<pre><code>unsafe fn drop_slow(&amp;mut self) {\n    let ptr = *self.ptr;\n\n    // Destroy the data at this time, even though we may not free the box\n    // allocation itself (there may still be weak pointers lying around).\n    ptr::drop_in_place(&amp;mut (*ptr).data);\n\n    if self.inner().weak.fetch_sub(1, Release) == 1 {\n        atomic::fence(Acquire);\n        deallocate(ptr as *mut u8, size_of_val(&amp;*ptr), align_of_val(&amp;*ptr))\n    }\n}\n</code></pre>\n\n<p>The sequence is finding the offset the the <code>data</code> member of <code>ArcInner&lt;T&gt;</code>, which is defined as (roughly):</p>\n\n<pre><code>struct ArcInner&lt;T: ?Sized&gt; {\n    strong: atomic::AtomicUSize,  // 64-bit or 8 byte atomic count\n    weak: atomic::AtomicUsize,    // ditto\n    data: T,                      // The actual data payload.\n}\n</code></pre>\n\n<p>As background, a <a href=\"https://doc.rust-lang.org/core/raw/struct.TraitObject.html\" rel=\"nofollow noreferrer\">trait object</a> contains a data pointer and vtable pointer, and the <a href=\"http://huonw.github.io/blog/2015/01/peeking-inside-trait-objects/\" rel=\"nofollow noreferrer\">vtable starts with destructor, size, and alignment</a>.</p>\n\n<p>Update: correct my understanding thanks to dpc.dw's additional research/answer.</p>\n\n<p>The <code>data</code> memeber needs to be aligned suitably for the type <code>T</code>.  However, since we're accessing this via <code>Arc&lt;Trait&gt;</code>, at this point the compiler doesn't know what that alignment is!  We might have stored a theoretical SIMD type with 64 byte alignment, for example.  However, the fat trait object pointer does contain the alignment, from which the offset to <code>data</code> can be computed.  This is what's happening here:</p>\n\n<pre><code>// assumption: rbx is pointer to trait object\nmovq    (%rbx), %r14       // Get the ArcInner data pointer into r14\nmovq    8(%rbx), %r15      // Get vtable pointer into r15\nmovq    16(%r15), %rdi     // Load T alignment from vtable into rdi\nleaq    15(%rdi), %rax     // rax := align+15\nnegq    %rdi               // rdi = -rdi (-align)\nandq    %rax, %rdi         // rdi = (align+15) &amp; (-align)\naddq    %r14, %rdi         // Add now aligned offset to `data` to call drop\ncallq   *(%r15)            // Call destructor (first entry in vtable in r15)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1487668852, "post_id": 42358107, "comment_id": 71876336, "body": "I&#39;ve updated my answer to be a bit more accurate, thanks."}], "tags": [], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "is_accepted": true, "score": 1, "last_activity_date": 1487647690, "creation_date": 1487647690, "answer_id": 42358107, "question_id": 42332615, "link": "https://stackoverflow.com/questions/42332615/why-does-dereferencing-arct-where-t-mytrait-align-to-0x10/42358107#42358107", "title": "Why does dereferencing `Arc&lt;T&gt; where T : MyTrait` align to 0x10?", "body": "<p>Thanks to Chris Emerson's answer I realized it has something to do with vtable and alignment rules. Then I asked around on Mozilla's Rust IRC channel and aatch and talchas figured it out:</p>\n\n<p><code>rustc</code> will always calculate aligned offset for the data (<code>T</code>) stored in the <code>ArcInner&lt;T&gt;</code> - since it can be different for each <code>struct</code> implementing <code>T</code>. This is not a big deal - since these instructions are very fast, and will be subject to good instruction level CPU pararelization.</p>\n"}], "owner": {"reputation": 3376, "user_id": 134409, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1ec6b4e77bfbae1b992957792572630?s=128&d=identicon&r=PG", "display_name": "dpc.pw", "link": "https://stackoverflow.com/users/134409/dpc-pw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 1, "accepted_answer_id": 42358107, "answer_count": 2, "score": 3, "last_activity_date": 1487668832, "creation_date": 1487536747, "last_edit_date": 1487647680, "question_id": 42332615, "link": "https://stackoverflow.com/questions/42332615/why-does-dereferencing-arct-where-t-mytrait-align-to-0x10", "title": "Why does dereferencing `Arc&lt;T&gt; where T : MyTrait` align to 0x10?", "body": "<p>I'm over-micro-optimizing my library, and I was looking at generated ASM. I noticed that calling a method of <code>Arc&lt;T&gt; where T : MyTrait</code> produces something that I believe is aligning the pointer stored in <code>ArcInner</code> to 0x10.</p>\n\n<p>I've reproduced it with this code:</p>\n\n<pre><code>#![feature(test)]\nextern crate test;\n\nuse std::sync::Arc;\n\nstruct DA;\n\ntrait Drain {\n    fn log(&amp;self, &amp;DA);\n}\n\nstruct BlackBoxDrain;\n\nimpl Drain for BlackBoxDrain {\n    fn log(&amp;self, da: &amp;DA) {\n        test::black_box::&lt;&amp;DA&gt;(da);\n    }\n}\n\nfn f(d: Arc&lt;Drain&gt;) {\n    d.log(&amp;DA)\n}\n\nfn main() {\n    let arc_d = Arc::new(BlackBoxDrain);\n    f(arc_d);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=ac0c6712c4eac257c5e06437e35e3b33&amp;version=nightly&amp;backtrace=2\" rel=\"nofollow noreferrer\">Rust playground</a> (Set Nightly + Release and click ASM)</p>\n\n<p>The ASM code in question is:</p>\n\n<pre><code>movq    16(%r15), %rdi\nleaq    15(%rdi), %rax\nnegq    %rdi\nandq    %rax, %rdi\naddq    %r14, %rdi\n</code></pre>\n\n<p>It's important that this operation be as fast as possible. Since the ASM dereference is 5 instructions, and 3 of them seem potentially needless, I'd like to understand why is this happening and if I can help it. Maybe I just don't understand the assembler instructions here.</p>\n\n<p>Edit: My minimal example is not exactly the same, as it looks like crate boundary is required to prevent compiler/linker for optimizing out that sequence. But the sequence is exactly the same in my case, in a tight (rust bench) loop, there are no destructors involved: only a method call on a <code>Arc&lt;TraitObject&gt;</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 1, "creation_date": 1487524856, "post_id": 42330159, "comment_id": 71813215, "body": "you can just write: <code>.map_err(From::from)</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487525346, "post_id": 42330159, "comment_id": 71813404, "body": "<a href=\"http://meta.stackexchange.com/q/39223/281829\">One question per post, please</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487525512, "post_id": 42330159, "comment_id": 71813465, "body": "I will say that <code>self: &amp;mut Parser&lt;&#39;a&gt;</code> is <b>not</b> idiomatic, that&#39;s normally <code>&amp;mut self</code>."}], "answers": [{"comments": [{"owner": {"reputation": 5259, "user_id": 482317, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/baddc1ebd4dbe1bdb3fa853c18fe155f?s=128&d=identicon&r=PG", "display_name": "Andrea Bergia", "link": "https://stackoverflow.com/users/482317/andrea-bergia"}, "edited": false, "score": 0, "creation_date": 1487525834, "post_id": 42330397, "comment_id": 71813582, "body": "Thanks, I missed the part about the signature. I&#39;ve also taken a look at <a href=\"https://doc.rust-lang.org/book/error-handling.html#the-real-try-macro\" rel=\"nofollow noreferrer\">the real <code>try!</code></a> macro and now I think I understand much better."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1487526036, "last_edit_date": 1487526036, "creation_date": 1487525118, "answer_id": 42330397, "question_id": 42330159, "link": "https://stackoverflow.com/questions/42330159/why-isnt-my-error-type-changed-automatically-when-using-the-and-then-combinator/42330397#42330397", "title": "Why isn&#39;t my error type changed automatically when using the and_then combinator?", "body": "<blockquote>\n  <p>I was expecting the conversion to be performed automatically, since by using the <code>try!</code> macro the conversion is automatic (from what I've understood).</p>\n</blockquote>\n\n<p>But you aren't <em>using</em> the <code>try!</code> macro!</p>\n\n<pre><code>fn read_utf8(self: &amp;mut Parser&lt;'a&gt;, len: usize) -&gt; Result&lt;String, ParseError&gt; {\n    self.consume_bytes(len)\n        .and_then(|bytes| String::from_utf8(bytes.to_vec()))\n}\n</code></pre>\n\n<p>Code that you aren't calling cannot have any effect on your code, thankfully.</p>\n\n<hr>\n\n<p>Review the signature for <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then\" rel=\"nofollow noreferrer\"><code>Result::and_then</code></a>: </p>\n\n<pre><code>fn and_then&lt;U, F&gt;(self, op: F) -&gt; Result&lt;U, E&gt; \n    where F: FnOnce(T) -&gt; Result&lt;U, E&gt;\n</code></pre>\n\n<p>It takes a closure that returns a <code>Result</code> with the <strong>same error type</strong> that we started with. There is no automatic conversion of error types happening here. There <em>may</em> be some conversion of the success type, depending on what the closure chooses to do.</p>\n\n<p>This is why your version that converts the error type inside <code>and_then</code> works, because you've converted the error type from <code>FromUtf8Error</code> to <code>ParseError</code>, making the error type returned by the closure match what <code>and_then</code> expects.</p>\n"}], "owner": {"reputation": 5259, "user_id": 482317, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/baddc1ebd4dbe1bdb3fa853c18fe155f?s=128&d=identicon&r=PG", "display_name": "Andrea Bergia", "link": "https://stackoverflow.com/users/482317/andrea-bergia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 0, "accepted_answer_id": 42330397, "answer_count": 1, "score": 0, "last_activity_date": 1487526036, "creation_date": 1487523963, "last_edit_date": 1487525928, "question_id": 42330159, "link": "https://stackoverflow.com/questions/42330159/why-isnt-my-error-type-changed-automatically-when-using-the-and-then-combinator", "title": "Why isn&#39;t my error type changed automatically when using the and_then combinator?", "body": "<p>I have encountered something that I don't understand about <code>Result</code>, <code>From</code>, <code>and_then</code>.</p>\n\n<p>I have this function in my <code>impl Parser</code> that will give me either a slice of bytes or a <code>ParseError</code> when there are not enough bytes:</p>\n\n<pre><code>fn consume_bytes(self: &amp;mut Parser&lt;'a&gt;, len: usize) -&gt; Result&lt;&amp;[u8], ParseError&gt; {\n    // ...\n}\n</code></pre>\n\n<p>I'm trying to define another function:</p>\n\n<pre><code>fn read_utf8(self: &amp;mut Parser&lt;'a&gt;, len: usize) -&gt; Result&lt;String, ParseError&gt; {\n    self.consume_bytes(len)\n        .and_then(|bytes| String::from_utf8(bytes.to_vec()))\n}\n</code></pre>\n\n<p>This fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n   --&gt; src/parser.rs:147:31\n    |\n147 |             .and_then(|bytes| String::from_utf8(bytes.to_vec()))\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `parser::ParseError`, found struct `std::string::FromUtf8Error`\n    |\n    = note: expected type `std::result::Result&lt;_, parser::ParseError&gt;`\n               found type `std::result::Result&lt;std::string::String, std::string::FromUtf8Error&gt;`\n</code></pre>\n\n<p>Because I have defined an implementation of <code>From</code>, I was expecting the conversion to be performed automatically, since by using the <code>try!</code> macro the conversion is automatic (from what I've understood):</p>\n\n<pre><code>impl From&lt;FromUtf8Error&gt; for ParseError {\n    fn from(err: FromUtf8Error) -&gt; ParseError {\n        ParseError::InvalidConstantPoolEntry(err)\n    }\n}\n</code></pre>\n\n<p>This is another attempt that fails with the same error message:</p>\n\n<pre><code>fn read_utf8(self: &amp;mut Parser&lt;'a&gt;, len: usize) -&gt; Result&lt;String, ParseError&gt; {\n    self.consume_bytes(len)\n        .and_then(|bytes| String::from_utf8(bytes.to_vec()))\n        .map_err(|e| From::from(e))\n}\n</code></pre>\n\n<p>This version, where the <code>map_err</code> is <em>inside</em> the <code>and_then</code> lambda, works:</p>\n\n<pre><code>fn read_utf8(self: &amp;mut Parser&lt;'a&gt;, len: usize) -&gt; Result&lt;String, ParseError&gt; {\n    self.consume_bytes(len)\n        .and_then(|bytes| String::from_utf8(bytes.to_vec()).map_err(|e| From::from(e)))\n}\n</code></pre>\n\n<p>Why doesn't <code>and_then</code> work as I expected?</p>\n\n<hr>\n\n<p>PS: What's more idiomatic: the version I'm trying to write above or using the <code>?</code> operator/the <code>try!</code> macro?</p>\n\n<pre><code>fn read_utf8(self: &amp;mut Parser&lt;'a&gt;, len: usize) -&gt; Result&lt;String, ParseError&gt; {\n    let bytes = self.consume_bytes(len)?;\n    Ok(String::from_utf8(bytes.to_vec())?)\n}\n</code></pre>\n"}, {"tags": ["csv", "rust"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1487513302, "post_id": 42327875, "comment_id": 71808926, "body": "This isn&#39;t reproducible. Please provide the exact CSV data you&#39;re using and show the full output of your program. Please also explain what you expect to happen. The CSV crate should have no problems with Chinese characters, so you&#39;ve likely misdiagnosed the issue."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 5, "creation_date": 1487516374, "post_id": 42327875, "comment_id": 71810096, "body": "Perhaps the problem is the CSV not being encoded in UTF-8.  Most Rust code will <i>only</i> work with UTF-8.  If the file is encoded with UTF-16, UTF-32, Big5, GBK, or anything else, that is likely the problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1487516478, "post_id": 42327875, "comment_id": 71810128, "body": "@DK. shouldn&#39;t <i>something</i> have complained that it wasn&#39;t UTF-8 though?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487516605, "post_id": 42327875, "comment_id": 71810174, "body": "@Shepmaster &quot;program has a panic! bug&quot; - that&#39;s vague enough that it <i>could</i> be a UTF-8 error... or pretty much anything else.  I&#39;m guessing, here."}, {"owner": {"reputation": 881, "user_id": 646565, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/Cu0yq.jpg?s=128&g=1", "display_name": "freinn", "link": "https://stackoverflow.com/users/646565/freinn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487516765, "post_id": 42327875, "comment_id": 71810239, "body": "@Shepmaster yes, is so hard to realize that this is the error &#172;&#172;_, you need super powers. Also, the answer must be the entire program working, even with a input that is space-separated-values. Is better to do all the work so the OP does nothing."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 881, "user_id": 646565, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/Cu0yq.jpg?s=128&g=1", "display_name": "freinn", "link": "https://stackoverflow.com/users/646565/freinn"}, "edited": false, "score": 1, "creation_date": 1487516928, "post_id": 42327875, "comment_id": 71810304, "body": "@freinn <i>even with a input that is space-separated-values</i> \u2014 then it wouldn&#39;t be a <b>comma</b>-separated value (CSV) file."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1487517968, "post_id": 42327875, "comment_id": 71810696, "body": "The term CSV is frequently used even if the delimiter isn&#39;t a comma. Modifying the delimiter is supported, but it is only allowed to be a single byte: <a href=\"https://docs.rs/csv/0.15.0/csv/struct.Reader.html#method.delimiter\" rel=\"nofollow noreferrer\">docs.rs/csv/0.15.0/csv/struct.Reader.html#method.delimiter</a> (The CSV crate reads &quot;ASCII-compatible&quot; data.)"}, {"owner": {"reputation": 21, "user_id": 7588505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ab4eb66f83b147dd2020f9b1f89c37d?s=128&d=identicon&r=PG&f=1", "display_name": "songroom", "link": "https://stackoverflow.com/users/7588505/songroom"}, "edited": false, "score": 0, "creation_date": 1487598938, "post_id": 42327875, "comment_id": 71844105, "body": "I add the csv data image,thank you"}, {"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487669261, "post_id": 42327875, "comment_id": 71876610, "body": "@songroom No Shepmaster means you should copy-and-paste the content of <code>.&#47;data&#47;simple.csv</code> here, and also paste the output of your program from the terminal."}, {"owner": {"reputation": 21, "user_id": 7588505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ab4eb66f83b147dd2020f9b1f89c37d?s=128&d=identicon&r=PG&f=1", "display_name": "songroom", "link": "https://stackoverflow.com/users/7588505/songroom"}, "edited": false, "score": 0, "creation_date": 1488547732, "post_id": 42327875, "comment_id": 72292820, "body": "how to copy csv file to here?"}], "answers": [{"comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1487513081, "post_id": 42328001, "comment_id": 71808841, "body": "This doesn&#39;t parse CSV."}, {"owner": {"reputation": 881, "user_id": 646565, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/Cu0yq.jpg?s=128&g=1", "display_name": "freinn", "link": "https://stackoverflow.com/users/646565/freinn"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1487514404, "post_id": 42328001, "comment_id": 71809318, "body": "@BurntSushi5 and? The question ask for <b>reading</b> chinese Unicode characters."}, {"owner": {"reputation": 881, "user_id": 646565, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/Cu0yq.jpg?s=128&g=1", "display_name": "freinn", "link": "https://stackoverflow.com/users/646565/freinn"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1487516649, "post_id": 42328001, "comment_id": 71810194, "body": "@BurntSushi5 yes, and my answer reads any kind of file, being csv or not."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487517943, "post_id": 42328001, "comment_id": 71810685, "body": "The OP&#39;s code includes the line like <code>let (s1, s2, dist): (String, String, usize) = record.unwrap()</code> where each record&#39;s fields are parsed to the user-specified types. Could you update your answer to show the equivalent?"}, {"owner": {"reputation": 881, "user_id": 646565, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/Cu0yq.jpg?s=128&g=1", "display_name": "freinn", "link": "https://stackoverflow.com/users/646565/freinn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487520392, "post_id": 42328001, "comment_id": 71811606, "body": "@Shepmaster done. Not the most beautiful code but it works."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1487524451, "post_id": 42328001, "comment_id": 71813075, "body": "This is still wrong. It doesn&#39;t parse CSV which is what the <b>OP wants</b> because the question starts with &quot;How to read a <b>csv</b>&quot;."}, {"owner": {"reputation": 881, "user_id": 646565, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/Cu0yq.jpg?s=128&g=1", "display_name": "freinn", "link": "https://stackoverflow.com/users/646565/freinn"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1487526837, "post_id": 42328001, "comment_id": 71813958, "body": "@BurntSushi5 fine now?"}, {"owner": {"reputation": 21, "user_id": 7588505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ab4eb66f83b147dd2020f9b1f89c37d?s=128&d=identicon&r=PG&f=1", "display_name": "songroom", "link": "https://stackoverflow.com/users/7588505/songroom"}, "edited": false, "score": 0, "creation_date": 1487599045, "post_id": 42328001, "comment_id": 71844180, "body": "can i read the csv file that includes Chinese characters using the CSV crate?"}], "tags": [], "owner": {"reputation": 881, "user_id": 646565, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/Cu0yq.jpg?s=128&g=1", "display_name": "freinn", "link": "https://stackoverflow.com/users/646565/freinn"}, "is_accepted": false, "score": -3, "last_activity_date": 1487527216, "last_edit_date": 1487527216, "creation_date": 1487512125, "answer_id": 42328001, "question_id": 42327875, "link": "https://stackoverflow.com/questions/42327875/how-to-read-a-csv-that-includes-chinese-characters-in-rust/42328001#42328001", "title": "How to read a CSV that includes Chinese characters in Rust?", "body": "<p>Part 1: Read Unicode (Chinese or not) characters:</p>\n\n<p>The easiest way to achieve your goal is to use the <a href=\"https://doc.rust-lang.org/stable/std/io/trait.Read.html#method.read_to_string\" rel=\"nofollow noreferrer\"><code>read_to_string</code></a> function that mutates the <code>String</code> you pass to it, appending the Unicode content of your file to that passed <code>String</code>:</p>\n\n<pre><code>use std::io::prelude::*;\nuse std::fs::File;\n\nfn main() {\n    let mut f = File::open(\"file.txt\").unwrap();\n    let mut buffer = String::new();\n\n    f.read_to_string(&amp;mut buffer);\n\n    println!(\"{}\", buffer)\n}\n</code></pre>\n\n<p>Part 2: Parse a CSV file, its delimiter being a <strong>','</strong>:</p>\n\n<pre><code>extern crate regex;\nuse regex::Regex;\n\nuse std::io::prelude::*;\nuse std::fs::File;\n\nfn main() {\n    let mut f = File::open(\"file.txt\").unwrap();\n    let mut buffer = String::new();\n    let delimiter = \",\";\n\n    f.read_to_string(&amp;mut buffer);\n    let modified_buffer = buffer.replace(\"\\n\", delimiter);\n    let mut regex_str = \"([^\".to_string();\n\n    regex_str.push_str(delimiter);\n    regex_str.push_str(\"]+)\");\n\n    let mut final_part = \"\".to_string();\n    final_part.push_str(delimiter);\n    final_part.push_str(\"?\");\n\n    regex_str.push_str(&amp;final_part);\n\n    let regex_str_copy = regex_str.clone();\n    regex_str.push_str(&amp;regex_str_copy);\n    regex_str.push_str(&amp;regex_str_copy);\n\n    let re = Regex::new(&amp;regex_str).unwrap();\n\n    for cap in re.captures_iter(&amp;modified_buffer) {\n        let (s1, s2, dist): (String, String, usize) =\n            (cap[1].to_string(), cap[2].to_string(), cap[3].parse::&lt;usize&gt;().unwrap());\n         println!(\"({}, {}): {}\", s1, s2, dist);\n    }\n}\n</code></pre>\n\n<p>Sample input and output <a href=\"http://pastebin.com/cVUQm6eS\" rel=\"nofollow noreferrer\">here</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": -1, "last_activity_date": 1487684232, "last_edit_date": 1495542317, "creation_date": 1487684232, "answer_id": 42368851, "question_id": 42327875, "link": "https://stackoverflow.com/questions/42327875/how-to-read-a-csv-that-includes-chinese-characters-in-rust/42368851#42368851", "title": "How to read a CSV that includes Chinese characters in Rust?", "body": "<p>I'm not sure what could be done to make the error message more clear:</p>\n\n<blockquote>\n  <p>Decode(\"Could not convert bytes 'FromUtf8Error { bytes: [208, 213, 195, 251], error: Utf8Error { valid_up_to: 0 } }' to UTF-8.\")</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/string/struct.FromUtf8Error.html\" rel=\"nofollow noreferrer\"><code>FromUtf8Error</code></a> is documented in the standard library, and the text of the error says \"Could not convert bytes to UTF-8\" (although there's some extra detail in the middle).</p>\n\n<p>Simply put, your data isn't in UTF-8 and it <strong>must</strong> be. That's all that the Rust standard library (and thus most libraries) really deal with. You will need to figure out what encoding it is in and then find some way of converting from that to UTF-8. There may be a <a href=\"https://crates.io/\" rel=\"nofollow noreferrer\">crate</a> to help with either of those cases. </p>\n\n<p>Perhaps even better, you can save the file as UTF-8 from the beginning. Sadly, it's relatively common for people to hit this issue when using Excel, because <a href=\"https://stackoverflow.com/questions/4221176/excel-to-csv-with-utf8-encoding\">Excel does <strong>not</strong> have a way to easily export UTF-8 CSV files</a>. It always writes a CSV file in the system locale encoding.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": -1, "last_activity_date": 1489243370, "creation_date": 1489243370, "answer_id": 42736509, "question_id": 42327875, "link": "https://stackoverflow.com/questions/42327875/how-to-read-a-csv-that-includes-chinese-characters-in-rust/42736509#42736509", "title": "How to read a CSV that includes Chinese characters in Rust?", "body": "<p>I have a way to solve it. Thanks all.</p>\n\n<pre><code>extern crate csv;\nextern crate rustc_serialize;\nextern crate encoding;\nuse encoding::{Encoding, EncoderTrap, DecoderTrap};\nuse encoding::all::{GB18030};\nuse std::io::prelude::*;\n\nfn main() {\n    let path = \"C:\\\\Users\\\\Desktop\\\\test.csv\";\n    let mut f = File::open(path).expect(\"cannot open file\");\n    let mut reader: Vec&lt;u8&gt; = Vec::new();\n    f.read_to_end(&amp;mut reader).expect(\"can not read file\");\n    let mut chars = String::new();\n    GB18030.decode_to(&amp;mut reader, DecoderTrap::Ignore, &amp;mut chars);\n    let mut rdr = csv::Reader::from_string(chars).has_headers(true);\n    for row in rdr.decode() {\n        let (x, y, r): (String, String, String) = row.unwrap();\n        println!(\"({}, {}): {:?}\", x, y, r);\n    }\n}\n</code></pre>\n\n<p>output:</p>\n\n<p><img src=\"https://i.stack.imgur.com/JLqpQ.png\" alt=\"enter image description here\"></p>\n"}], "owner": {"reputation": 21, "user_id": 7588505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3ab4eb66f83b147dd2020f9b1f89c37d?s=128&d=identicon&r=PG&f=1", "display_name": "songroom", "link": "https://stackoverflow.com/users/7588505/songroom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 813, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1489243370, "creation_date": 1487511390, "last_edit_date": 1489243304, "question_id": 42327875, "link": "https://stackoverflow.com/questions/42327875/how-to-read-a-csv-that-includes-chinese-characters-in-rust", "title": "How to read a CSV that includes Chinese characters in Rust?", "body": "<p>When I read a CSV file that includes Chinese characters using <a href=\"https://crates.io/crates/csv\" rel=\"nofollow noreferrer\">the csv crate</a>, it has a error.</p>\n\n<pre><code>fn main() {\n    let mut rdr =\n        csv::Reader::from_file(\"C:\\\\Users\\\\Desktop\\\\test.csv\").unwrap().has_headers(false);\n    for record in rdr.decode() {\n        let (a, b): (String, String) = record.unwrap();\n        println!(\"a:{},b:{}\", a, b);\n    }\n    thread::sleep_ms(500000);\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Running `target\\release\\rust_Work.exe`\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Decode(\"Could not convert bytes \\'FromUtf8Error { bytes: [208, 213, 195, 251], error: Utf8Error { va\nlid_up_to: 0 } }\\' to UTF-8.\")', ../src/libcore\\result.rs:788\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\nerror: Process didn't exit successfully: `target\\release\\rust_Work.exe` (exit code: 101)\n</code></pre>\n\n<p>test.csv:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> 1. \u59d3\u540d   \u6027\u522b    \u5e74\u7eaa    \u5206\u6570     \u7b49\u7ea7 \n 2. \u5c0f\u4e8c    \u7537     12      88      \u826f\u597d\n 3. \u5c0f\u4e09    \u7537     13      89      \u826f\u597d \n 4. \u5c0f\u56db    \u7537     14      91      \u4f18\u79c0\n</code></pre>\n\n<p><img src=\"https://i.stack.imgur.com/Mo4QT.png\" alt=\"enter image description here\"></p>\n"}, {"tags": ["rust", "rustup"], "answers": [{"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487470697, "post_id": 42322929, "comment_id": 71799185, "body": "Thanks, was thrown by <code>install</code> inferring <i>toolchain</i> where <code>uninstall</code> doesn&#39;t. - reported <a href=\"https://github.com/rust-lang-nursery/rustup.rs/issues/957\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/rustup.rs/issues/957</a>"}, {"owner": {"reputation": 179, "user_id": 2769475, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c574e988a6f3881724ea6f7319c8d5eb?s=128&d=identicon&r=PG", "display_name": "sylvain", "link": "https://stackoverflow.com/users/2769475/sylvain"}, "edited": false, "score": 0, "creation_date": 1600379274, "post_id": 42322929, "comment_id": 113077963, "body": "This does not seem to remove specific toolchains already installed under <code>~&#47;.rustup&#47;toolchains&#47;</code> ... Did <code>for i in nightly-*; do rustup toolchain remove ${i&#47;%-x86_64-unknown-linux-gnu}; done</code>. The toolchains were taking a huge amount of space (~36 GB)."}], "tags": [], "owner": {"reputation": 24768, "user_id": 6447491, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed5fefbc17fb33075285ddec5e483b8?s=128&d=identicon&r=PG", "display_name": "Michael Jungo", "link": "https://stackoverflow.com/users/6447491/michael-jungo"}, "is_accepted": true, "score": 42, "last_activity_date": 1487470590, "creation_date": 1487470590, "answer_id": 42322929, "question_id": 42322879, "link": "https://stackoverflow.com/questions/42322879/how-to-remove-rust-compiler-toolchains-with-rustup/42322929#42322929", "title": "How to remove Rust compiler toolchains with Rustup?", "body": "<p>The command you're looking for is:</p>\n\n<pre><code>rustup toolchain remove nightly\n</code></pre>\n\n<p><code>remove</code> and <code>uninstall</code> both work for this.</p>\n\n<p>For more details see:</p>\n\n<pre><code>rustup help toolchain\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10586, "favorite_count": 2, "accepted_answer_id": 42322929, "answer_count": 1, "score": 24, "last_activity_date": 1544276595, "creation_date": 1487469937, "last_edit_date": 1487471144, "question_id": 42322879, "link": "https://stackoverflow.com/questions/42322879/how-to-remove-rust-compiler-toolchains-with-rustup", "title": "How to remove Rust compiler toolchains with Rustup?", "body": "<p>The Rustup documentation shows how to <a href=\"https://github.com/rust-lang-nursery/rustup.rs#working-with-nightly-rust\" rel=\"noreferrer\">install Rust nightly</a>, but not how to remove it.</p>\n\n<p>While the docs do show how to uninstall <code>rustup</code> entirely, I'd like to keep the stable branch.</p>\n\n<p>How can I uninstall Rust nightly?</p>\n\n<hr>\n\n<p>Note that I attempted to do the opposite of <code>rustup install nightly</code>... (<code>rustup uninstall nightly</code>, <code>rustup remove nightly</code> &amp; <code>rustup delete nightly</code>) to no avail.</p>\n\n<p>Even though I read the documentation it wasn't clear that <code>nightly</code> was a <code>toolchain</code>, a <code>channel</code>... or something else.</p>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1487466639, "last_edit_date": 1487466639, "creation_date": 1487466173, "answer_id": 42322494, "question_id": 42322024, "link": "https://stackoverflow.com/questions/42322024/repeating-a-rust-task-with-tokio-timer/42322494#42322494", "title": "Repeating a Rust task with tokio_timer", "body": "<p>I'm not sure what part of the error message is causing you trouble, but...</p>\n\n<blockquote>\n  <p>type mismatch</p>\n</blockquote>\n\n<p>You've provided the wrong type</p>\n\n<blockquote>\n  <p>the type <code>fn() {my_cron_func}</code> implements the trait <code>std::ops::FnMut&lt;()&gt;</code></p>\n</blockquote>\n\n<p>When using <code>my_cron_func</code>, which is a function that takes no arguments</p>\n\n<blockquote>\n  <p>but the trait <code>std::ops::FnMut&lt;((),)&gt;</code> is required</p>\n</blockquote>\n\n<p>But a function that takes a single argument, the empty tuple, is required.</p>\n\n<blockquote>\n  <p>(expected tuple, found ())</p>\n</blockquote>\n\n<p>And the compiler tries to narrow down the problem.</p>\n\n<p>If you review the documentation for the library you are using, specifically <a href=\"https://docs.rs/tokio-timer/0.1.0/tokio_timer/struct.Interval.html\" rel=\"nofollow noreferrer\"><code>tokio_timer::Interval</code></a>, you can see that it implements <code>futures::Stream</code> with the associated type <code>Item = ()</code>.</p>\n\n<p>This changes the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `(): futures::Future` is not satisfied\n  --&gt; src/main.rs:19:36\n   |\n19 |     let background_tasks = wakeups.for_each(my_cron_func);\n   |                                    ^^^^^^^^ the trait `futures::Future` is not implemented for `()`\n   |\n   = note: required because of the requirements on the impl of `futures::IntoFuture` for `()`\n\nerror[E0277]: the trait bound `(): futures::Future` is not satisfied\n  --&gt; src/main.rs:20:10\n   |\n20 |     core.run(background_tasks).unwrap();\n   |          ^^^ the trait `futures::Future` is not implemented for `()`\n   |\n   = note: required because of the requirements on the impl of `futures::IntoFuture` for `()`\n   = note: required because of the requirements on the impl of `futures::Future` for `futures::stream::ForEach&lt;tokio_timer::Interval, fn(()) {my_cron_func}, ()&gt;`\n</code></pre>\n\n<p>Reviewing the <a href=\"https://docs.rs/futures/0.1/futures/stream/trait.Stream.html#method.for_each\" rel=\"nofollow noreferrer\">documentation for <code>futures::Stream</code></a>, we can see that the closure passed to <code>for_each</code> needs to return a value that can be turned into a future that will yield <code>()</code>:</p>\n\n<pre><code>fn for_each&lt;F, U&gt;(self, f: F) -&gt; ForEach&lt;Self, F, U&gt; \n    where F: FnMut(Self::Item) -&gt; U,\n          U: IntoFuture&lt;Item=(), Error=Self::Error&gt;,\n          Self: Sized\n</code></pre>\n\n<p>Your function attempts to return something, except that there's no return type and you've used a <code>;</code> to end the function:</p>\n\n<pre><code>fn my_cron_func(a: ()) {\n    println!(\"Repeating\");\n    Ok(());\n}\n</code></pre>\n\n<p><a href=\"https://docs.rs/futures/0.1/futures/future/fn.ok.html\" rel=\"nofollow noreferrer\"><code>futures::future::ok</code></a> does the trick:</p>\n\n<pre><code>fn my_cron_func(_: ()) -&gt; futures::future::FutureResult&lt;(), tokio_timer::TimerError&gt; {\n    println!(\"Repeating\");\n    futures::future::ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 785, "user_id": 1789295, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c372250f31231c3e183b65f70ffb3c6f?s=128&d=identicon&r=PG", "display_name": "Mark Sivill", "link": "https://stackoverflow.com/users/1789295/mark-sivill"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2392, "favorite_count": 2, "accepted_answer_id": 42322494, "answer_count": 1, "score": 7, "last_activity_date": 1487466639, "creation_date": 1487461854, "last_edit_date": 1487465424, "question_id": 42322024, "link": "https://stackoverflow.com/questions/42322024/repeating-a-rust-task-with-tokio-timer", "title": "Repeating a Rust task with tokio_timer", "body": "<p>I'm creating a repeating task in Rust using the Tokio framework. The following code is based on a <a href=\"https://github.com/tokio-rs/tokio-timer/issues/6\" rel=\"noreferrer\">completed change request</a> to add this feature to the tokio-timer crate.</p>\n\n<p>When trying to compile, I get the error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0281]: type mismatch: the type `fn() {my_cron_func}` implements the trait `std::ops::FnMut&lt;()&gt;`, but the trait `std::ops::FnMut&lt;((),)&gt;` is required (expected tuple, found ())\n  --&gt; src/main.rs:19:36\n   |\n19 |     let background_tasks = wakeups.for_each(my_cron_func);\n   |                                    ^^^^^^^^\n\nerror[E0281]: type mismatch: the type `fn() {my_cron_func}` implements the trait `std::ops::FnOnce&lt;()&gt;`, but the trait `std::ops::FnOnce&lt;((),)&gt;` is required (expected tuple, found ())\n  --&gt; src/main.rs:19:36\n   |\n19 |     let background_tasks = wakeups.for_each(my_cron_func);\n   |                                    ^^^^^^^^\n\nerror[E0281]: type mismatch: the type `fn() {my_cron_func}` implements the trait `std::ops::FnMut&lt;()&gt;`, but the trait `std::ops::FnMut&lt;((),)&gt;` is required (expected tuple, found ())\n  --&gt; src/main.rs:20:10\n   |\n20 |     core.run(background_tasks).unwrap();\n   |          ^^^\n   |\n   = note: required because of the requirements on the impl of `futures::Future` for `futures::stream::ForEach&lt;tokio_timer::Interval, fn() {my_cron_func}, _&gt;`\n\nerror[E0281]: type mismatch: the type `fn() {my_cron_func}` implements the trait `std::ops::FnOnce&lt;()&gt;`, but the trait `std::ops::FnOnce&lt;((),)&gt;` is required (expected tuple, found ())\n  --&gt; src/main.rs:20:10\n   |\n20 |     core.run(background_tasks).unwrap();\n   |          ^^^\n   |\n   = note: required because of the requirements on the impl of `futures::Future` for `futures::stream::ForEach&lt;tokio_timer::Interval, fn() {my_cron_func}, _&gt;`\n</code></pre>\n\n<p>The error states that the return signature for the my_cron_func function is incorrect. What do I need to change/add to get the signature correct so it compiles?</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_timer;\n\nuse std::time::*;\nuse futures::*;\nuse tokio_core::reactor::Core;\nuse tokio_timer::*;\n\npub fn main() {\n\n    println!(\"The start\");\n    let mut core = Core::new().unwrap();\n    let timer = Timer::default();\n    let duration = Duration::new(2, 0); // 2 seconds\n    let wakeups = timer.interval(duration);\n\n    // issues here\n    let background_tasks = wakeups.for_each(my_cron_func);\n    core.run(background_tasks).unwrap();\n\n    println!(\"The end???\");\n\n}\n\nfn my_cron_func() {\n    println!(\"Repeating\");\n    Ok(());\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487516778, "post_id": 42320750, "comment_id": 71810241, "body": "The other answers are just fine. Really. Just take a mutable reference to your argument as the first thing if you need to."}, {"owner": {"reputation": 764, "user_id": 240760, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5483d38c83f881636c400abab782f3c5?s=128&d=identicon&r=PG", "display_name": "Adrian Willenb&#252;cher", "link": "https://stackoverflow.com/users/240760/adrian-willenb%c3%bccher"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487587420, "post_id": 42320750, "comment_id": 71836416, "body": "You mean like this: <code>let tmp = &amp;mut a; if let &amp;mut Some(ref mut x) = tmp { ...</code>? But then <code>a</code> has to be <code>mut</code>, which is exactly what I&#39;d like to avoid."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487598793, "post_id": 42320750, "comment_id": 71843992, "body": "<i>But then <code>a</code> has to be <code>mut</code></i>; yes, what&#39;s the problem with that? No one outside of your function cares (or <i>can</i> care) if that argument is <code>mut</code>. You own it so you can do whatever you want. You could also do <code>let mut tmp1 = a; let mut tmp2 = &amp;mut tmp1;</code> if it really bothered you."}, {"owner": {"reputation": 764, "user_id": 240760, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5483d38c83f881636c400abab782f3c5?s=128&d=identicon&r=PG", "display_name": "Adrian Willenb&#252;cher", "link": "https://stackoverflow.com/users/240760/adrian-willenb%c3%bccher"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487600684, "post_id": 42320750, "comment_id": 71845335, "body": "<i>&quot;yes, what&#39;s the problem with that?&quot;</i> I was looking for a solution that is better/cleaner/more elegant than the one I had already found (the one below &quot;This would work&quot;)."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1487582413, "post_id": 42321905, "comment_id": 71833227, "body": "<i>It also kind of makes sense</i> =&gt; If it makes sense to you, I wouldn&#39;t mind an explanation ;) I know that <code>&amp;mut T</code> is NOT Copy (unlike <code>&amp;T</code>), but I don&#39;t see how this awkward dance helps bypass the move. Would there be some reborrowing?"}, {"owner": {"reputation": 764, "user_id": 240760, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5483d38c83f881636c400abab782f3c5?s=128&d=identicon&r=PG", "display_name": "Adrian Willenb&#252;cher", "link": "https://stackoverflow.com/users/240760/adrian-willenb%c3%bccher"}, "edited": false, "score": 0, "creation_date": 1487587789, "post_id": 42321905, "comment_id": 71836631, "body": "The <code>&amp;mut</code> in the let-pattern destructures the reference, and the following <code>ref mut x</code> creates a new reference to the i32-value. This is conceptually different from reading the <code>&amp;mut i32</code>-reference, but should generate the same instructions."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487594291, "post_id": 42321905, "comment_id": 71840757, "body": "@MatthieuM. I tried to explain it a bit more ^_^ I hope its clearer now."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 4, "last_activity_date": 1487594270, "last_edit_date": 1487594270, "creation_date": 1487460948, "answer_id": 42321905, "question_id": 42320750, "link": "https://stackoverflow.com/questions/42320750/read-reference-from-optionmut-t-multiple-times/42321905#42321905", "title": "Read reference from Option&lt;&amp;mut T&gt; multiple times", "body": "<p>What about this?</p>\n\n<pre><code>fn f(a: Option&lt;&amp;mut i32&gt;) {\n    if let Some(&amp;mut ref mut x) = a {\n        *x = 6;\n    }\n    // ...\n    if let Some(&amp;mut ref mut x) = a {\n        *x = 7;\n    }\n}\n</code></pre>\n\n<p>In this case, <code>a</code> doesn't need to be mutable.</p>\n\n<p>The <code>&amp;mut ref mut</code> feels a bit awkward, but it makes sense: first we remove a <code>&amp;mut</code> by destructuring and then take a mutable reference to the value again. It's more obvious when we don't use the <code>Option</code>:</p>\n\n<pre><code>let mr: &amp;mut Vec&lt;u32&gt; = &amp;mut vec![];\n{\n    let &amp;mut ref mut a = mr;\n    a.push(3);\n}\nmr.push(4);\n</code></pre>\n\n<p>This also works. The third (special) line is equivalent to:</p>\n\n<pre><code>let a = &amp;mut     *mr   ;\n//               ^^^----- this is an lvalue of type `Vec&lt;u32&gt;`\n//      ^^^^^^^^^^^^----- together it's of type `&amp;mut Vec&lt;u32&gt;` again\n</code></pre>\n\n<p>In the <code>Option</code> case, we can't use the <code>&amp;mut *X</code> version, but need to do all of it inside of the pattern. Thus the <code>&amp;mut ref mut x</code>.</p>\n"}], "owner": {"reputation": 764, "user_id": 240760, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5483d38c83f881636c400abab782f3c5?s=128&d=identicon&r=PG", "display_name": "Adrian Willenb&#252;cher", "link": "https://stackoverflow.com/users/240760/adrian-willenb%c3%bccher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 339, "favorite_count": 0, "accepted_answer_id": 42321905, "answer_count": 1, "score": 8, "last_activity_date": 1487594270, "creation_date": 1487452331, "last_edit_date": 1495541363, "question_id": 42320750, "link": "https://stackoverflow.com/questions/42320750/read-reference-from-optionmut-t-multiple-times", "title": "Read reference from Option&lt;&amp;mut T&gt; multiple times", "body": "<p>I have an <code>Option&lt;&amp;mut T&gt;</code> and want to access the contained reference multiple times, like so:</p>\n\n<pre><code>fn f(a: Option&lt;&amp;mut i32&gt;) {\n    if let Some(x) = a {\n        *x = 6;\n    }\n    // ...\n    if let Some(x) = a {\n        *x = 7;\n    }\n}\n\nfn main() {\n    let mut x = 5;\n    f(Some(&amp;mut x));\n}\n</code></pre>\n\n<p>That doesn't work, because <code>if let Some(x) = a</code> moves the reference value out of the Option, and the second <code>if let Some(x) = a</code> will result in a compiler error. Without the second <code>if let ...</code>, this works flawlessly, so <code>a</code> doesn't have to be mutable.</p>\n\n<p>The following:</p>\n\n<pre><code>if let Some(ref x) = a {\n    **x = 6;\n}\n</code></pre>\n\n<p>gives an error: \"assignment into an immutable reference\".</p>\n\n<p>This would work:</p>\n\n<pre><code>fn f(mut a: Option&lt;&amp;mut i32&gt;) {\n    if let Some(ref mut x) = a {\n        **x = 6;\n    }\n    if let Some(ref mut x) = a {\n        **x = 7;\n    }\n}\n</code></pre>\n\n<p>The <code>mut a</code> is necessary, otherwise I get an error \"cannot borrow immutable anonymous field <code>(a:std::prelude::v1::Some).0</code> as mutable\". But this feels wrong: <code>a</code> shouldn't have to be mutable, because I'm not modifying it (see above).</p>\n\n<p>What's the correct solution?</p>\n\n<h3>Edit 1</h3>\n\n<p>My problem is different from the one in <a href=\"https://stackoverflow.com/questions/40658487/how-to-pass-optionmut-to-multiple-function-calls-without-causing-move-e\">How to pass `Option&lt;&amp;mut ...&gt;` to multiple function calls without causing move errors?</a>. I want to mutably dereference the reference in an <code>Option&lt;&amp;mut T&gt;</code> multiple times, while the other one wants to pass an <code>Option</code> to multiple function invocations. The solutions to the other question are not applicable to my situation.</p>\n"}, {"tags": ["rust", "type-inference"], "comments": [{"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1487401183, "post_id": 42311825, "comment_id": 71778669, "body": "The next two paragraphs of the documentation appear to answer your questions. In particular, this: <i>The left operand of an assignment or compound-assignment expression is an lvalue context, as is the single operand of a unary borrow. The discriminant or subject of a match expression may be an lvalue context, if ref bindings are made, but is otherwise an rvalue context. All other expression contexts are rvalue contexts.</i>"}], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": false, "score": 1, "last_activity_date": 1487401563, "creation_date": 1487401563, "answer_id": 42312207, "question_id": 42311825, "link": "https://stackoverflow.com/questions/42311825/what-is-exactly-lvalue-context-in-rust/42312207#42312207", "title": "What is exactly lvalue context in Rust?", "body": "<p><code>DerefMut</code>/<code>Deref</code>/<code>Index</code>/<code>IndexMut</code> are determined by <strong>mutability</strong>, which is a different question from <strong>lvalue/rvalue context</strong>. Mutability makes no sense for rvalue context.</p>\n\n<p>In fact, all four traits require the operand <code>self</code> to be in an lvalue context, since they all take <code>&amp;Self</code> or <code>&amp;mut Self</code> as argument.</p>\n\n<p><code>DerefMut</code>/<code>IndexMut</code> are used whenever mutability is needed, e.g.</p>\n\n<pre><code>*here = ...;\nhere[i] = ...;\n\n&amp;mut here\n&amp;mut here[i]\n\nhere.call_some_mut_method(...)\nhere[i].call_some_mut_method(...)\n</code></pre>\n\n<hr>\n\n<p>An lvalue context is where you want to know the <em>address</em> (memory location / reference / ...) of the expression, instead of its value. The place where you need an lvalue.  </p>\n\n<blockquote>\n  <p>The left operand of an assignment or compound-assignment expression is an lvalue context, \u2026</p>\n</blockquote>\n\n<pre><code>here = ...;\n\nhere += ...;\n</code></pre>\n\n<blockquote>\n  <p>\u2026 as is the single operand of a unary borrow. </p>\n</blockquote>\n\n<pre><code>&amp;here\n\n&amp;mut here\n\nlet ref ... = here;\n// Note: equivalent to `let ... = &amp;here;`\n\nlet ref mut ... = here;\n// Note: equivalent to `let ... = &amp;mut here;`\n</code></pre>\n\n<p><em>Note: This shows an immutable lvalue context</em></p>\n\n<blockquote>\n  <p>The discriminant or subject of a match expression may be an lvalue context, if ref bindings are made, but is otherwise an rvalue context.</p>\n</blockquote>\n\n<pre><code>match here {\n    Ok(ref ...) =&gt; ...,\n    Err(ref mut ...) =&gt; ...,\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 6, "last_activity_date": 1510447433, "last_edit_date": 1510447433, "creation_date": 1487413844, "answer_id": 42313956, "question_id": 42311825, "link": "https://stackoverflow.com/questions/42311825/what-is-exactly-lvalue-context-in-rust/42313956#42313956", "title": "What is exactly lvalue context in Rust?", "body": "<p>You are asking two different questions here. </p>\n\n<blockquote>\n  <p>To be more concrete, I need to understand, when <code>DerefMut</code> is used for dereferencing and when <code>Deref</code> is used instead? Same with <code>Index</code> and <code>IndexMut</code>.</p>\n</blockquote>\n\n<p>This only depends on whether or not the resulting value is used mutably or not. The expressions using the operators belonging to those traits (<code>[]</code> and <code>*</code>) are always <em>lvalue expressions</em>.</p>\n\n<hr>\n\n<p>Now your more complicated question:</p>\n\n<blockquote>\n  <p>How do I know, if an expression is in an lvalue context? Is it determined just by the side of the expression in an assignment?</p>\n</blockquote>\n\n<h2>Expression categories</h2>\n\n<p>To recap: what is an rvalue/lvalue <em>expression</em>? </p>\n\n<ul>\n<li>an <strong>rvalue expression</strong> represents <strong>a value</strong></li>\n<li>an <strong>lvalue expression</strong> represents <strong>a value in a memory location</strong> (or in different words: represents a value which lives somewhere/has a home)</li>\n</ul>\n\n<p>Which expressions are lvalue and which are rvalue expressions? There are only a few <strong>l</strong>value expressions:</p>\n\n<ul>\n<li>\u201cnames\u201d (or rather: paths) which refer to variables (local, function arguments or statics) </li>\n<li>indexing expressions (e.g. <code>foo[3]</code>)</li>\n<li>deref expressions (e.g. <code>*foo</code>)</li>\n<li>field access expressions (e.g. <code>foo.bar</code>)</li>\n</ul>\n\n<hr>\n\n<h2>Context categories</h2>\n\n<p>What about rvalue/lvalue <em>contexts</em>? These contexts are \u201cslots\u201d inside of expressions. For example, the expression \u201cmodulo\u201d (<code>%</code>) has two of those slots, the first and the second operand: <code>\u27e8first\u27e9 % \u27e8second\u27e9</code>. Now these contexts come in two different flavours as well:</p>\n\n<ul>\n<li>an <strong>rvalue context</strong> is a \u201cslot\u201d where <strong>a value is expected</strong></li>\n<li>an <strong>lvalue context</strong> is a \u201cslot\u201d where <strong>a memory location is expected</strong></li>\n</ul>\n\n<p>So which slots are rvalue and which are lvalue contexts? Luckily, the number <strong>l</strong>value contexts is very limited, so here is a full list:</p>\n\n<ul>\n<li>the left hand side of a (compound-)assignment (e.g. <code>\u27e8lvalue context\u27e9 = ...;</code> or <code>\u27e8lvalue context\u27e9 += ...;</code>)</li>\n<li>the operand of an unary borrow (<code>&amp;\u27e8lvalue context\u27e9</code> and <code>&amp;mut \u27e8lvalue context\u27e9</code>)</li>\n<li>whenever something is bound to a pattern in which a <code>ref</code> appears (e.g. <code>let ref x = &amp;\u27e8lvalue context\u27e9;</code>)</li>\n</ul>\n\n<hr>\n\n<h2>Using expression X in context Y</h2>\n\n<p>Let's see which <em>expressions</em> we can use in which <em>context</em>:</p>\n\n<ul>\n<li><strong>[R in R]</strong> <strong><em>r</strong>value expression</em> in <strong><em>r</strong>value context</em>: no problem, the expression is used as value (e.g. the literal <code>3</code> on the right hand side of an assignment)</li>\n<li><strong>[L in L]</strong> <strong><em>l</strong>value expression</em> in <strong><em>l</strong>value context</em>: no problem, the expression is used as memory location (e.g. a variable name on the left hand side of an assignment) </li>\n<li><strong>[L in R]</strong> <strong><em>l</strong>value expression</em> in <strong><em>r</strong>value context</em>: since the context requires a value and the expression represents a \u201cvalue in a memory location\u201d we can just use the value of the expression. So: it's all fine (e.g. a variable name on the right hand side of an assignment). So we can see: <em>lvalue expressions</em> are worth more than <em>rvalue expressions</em>.</li>\n<li><strong>[R in L]</strong> <strong><em>r</strong>value expression</em> in <strong><em>l</strong>value context</em>: here is where it becomes problematic. The context requires a memory address, but the expression only represents a value. Sometimes, Rust will do an \u201crvalue promotion\u201d to make situations like this work. This means that Rust will automatically put the value of the expression into a new memory location (a temporary variable) and use that location in the context. For example, <code>&amp;mut 3</code> works because of said promotion. This promotion currently doesn't work for assignments, which <a href=\"https://stackoverflow.com/questions/41520642/why-isnt-this-rvalue-promoted-to-an-lvalue-as-specified-in-the-reference\">seems to be a bug in either the documentation or the compiler</a>.</li>\n</ul>\n"}], "owner": {"reputation": 11, "user_id": 7584084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bab6419a6944cb2ba197357f9129bbb2?s=128&d=identicon&r=PG&f=1", "display_name": "Roman", "link": "https://stackoverflow.com/users/7584084/roman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 700, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1510447433, "creation_date": 1487398656, "last_edit_date": 1487429243, "question_id": 42311825, "link": "https://stackoverflow.com/questions/42311825/what-is-exactly-lvalue-context-in-rust", "title": "What is exactly lvalue context in Rust?", "body": "<p>According to <a href=\"https://doc.rust-lang.org/reference.html#lvalues-rvalues-and-temporaries\" rel=\"nofollow noreferrer\">the documentation</a>, we have lvalue and rvalue contexts. How do I know if an expression is in an lvalue context? Is it determined just by the side of the expression in an assignment?</p>\n\n<p>To be more concrete, I need to understand when <code>DerefMut</code> is used for dereferencing and when <code>Deref</code> is used instead? Same with <code>Index</code> and <code>IndexMut</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487382411, "post_id": 42309597, "comment_id": 71775117, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. For example, I bet you can reproduce your error with 1 or 2 enum variants instead of 3, your structs could have 0 or 1 fields, your trait could have 0 or 1 methods, you don&#39;t need anything inside of <code>main</code> etc."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487382547, "post_id": 42309597, "comment_id": 71775152, "body": "Note that you will have a large number of warnings because you are not following idiomatic Rust naming conventions. Please remove all warnings."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1487383811, "last_edit_date": 1495541825, "creation_date": 1487383811, "answer_id": 42310309, "question_id": 42309597, "link": "https://stackoverflow.com/questions/42309597/cannot-infer-an-appropriate-lifetime-for-lifetime-parameter-while-implementing-d/42310309#42310309", "title": "Cannot infer an appropriate lifetime for lifetime parameter while implementing Deref trait", "body": "<p>Here is a <a href=\"/help/mcve\">MCVE</a>. Programmers use these to help narrow down the scope of a problem. For example, this MCVE rules out anything being due to the use of the <code>enum</code>, the <code>Rc</code>, any of the methods in the trait, or any of the fields in the structs. This allows us to focus on what is important:</p>\n\n<pre><code>use std::ops::Deref;\n\npub trait Trait {}\n\npub struct S {}\nimpl Trait for S {}\n\npub struct Container(S);\n\nimpl Deref for Container {\n    type Target = Trait;\n\n    // fn deref(&amp;self) -&gt; &amp;Trait { // Fails!\n    fn deref(&amp;self) -&gt; &amp;Self::Target { // Works!\n        &amp;self.0\n    }\n}\n</code></pre>\n\n<p>From the code, we can intuit that, somehow, <code>Trait</code> and <code>Self::Target</code> are <strong>not</strong> the same type. It's a bit tricky to see the type here, but this code prints out the type as a compiler error:</p>\n\n<pre><code>fn deref(&amp;self) -&gt; &amp;Self::Target {\n    let a: Self::Target;\n    &amp;self.0\n}\n</code></pre>\n\n\n\n<pre><code>error[E0277]: the trait bound `Trait + 'static: std::marker::Sized` is not satisfied\n</code></pre>\n\n<p>We don't actually care about the error, but we've discovered the type: <code>Trait + 'static</code>. Let's see what happens if we try something like that:</p>\n\n<pre><code>fn deref(&amp;self) -&gt; &amp;(Trait + 'static) {\n    &amp;self.0\n}\n</code></pre>\n\n<p>This compiles.</p>\n\n<p>In case you are unfamiliar with this syntax, there are plenty of questions about it. Here are some:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27675554/155423\">Type definition with a trait: Differences of specifying an explicit lifetime bound?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27790168/155423\">Explicit lifetime declarations in trait objects held by structs</a></li>\n</ul>\n"}], "owner": {"reputation": 11, "user_id": 7583151, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52bd1154f3ca59bc8ebf5bbdd63bcccf?s=128&d=identicon&r=PG&f=1", "display_name": "Sree", "link": "https://stackoverflow.com/users/7583151/sree"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 742, "favorite_count": 1, "accepted_answer_id": 42310309, "answer_count": 1, "score": 0, "last_activity_date": 1487383811, "creation_date": 1487377245, "last_edit_date": 1487382312, "question_id": 42309597, "link": "https://stackoverflow.com/questions/42309597/cannot-infer-an-appropriate-lifetime-for-lifetime-parameter-while-implementing-d", "title": "Cannot infer an appropriate lifetime for lifetime parameter while implementing Deref trait", "body": "<p>I am trying to implement <code>Deref</code> for an enum:</p>\n\n<pre><code>use std::rc::Rc;\nuse std::ops::Deref;\n\npub trait tObject {\n    fn name(&amp;self) -&gt; String;\n    fn span(&amp;self) -&gt; u32;\n}\n\npub struct t1 {\n    pub name: String,\n    pub bd: Option&lt;String&gt;,\n    pub span: u32,\n    pub label: Option&lt;String&gt;\n}\n\npub struct t2 {\n    pub name: String,\n    pub vrf: Option&lt;String&gt;,\n    pub span: u32,\n    pub label: Option&lt;String&gt;,\n    pub svi: u32\n}\n\npub struct t3 {\n    pub name: String,\n    pub span: u32,\n    pub label: Option&lt;String&gt;\n}\n\nimpl tObject for t1 {\n    fn name(&amp;self) -&gt; String {self.name.clone()}\n    fn span(&amp;self) -&gt; u32 {self.span.clone()}\n}\n\nimpl tObject for t2 {\n    fn name(&amp;self) -&gt; String {self.name.clone()}\n    fn span(&amp;self) -&gt; u32 {self.span.clone()}\n}\n\nimpl tObject for t3 {\n    fn name(&amp;self) -&gt; String {self.name.clone()}\n    fn span(&amp;self) -&gt; u32 {self.span.clone()}\n}\n\npub enum TType {\n    t1(Rc&lt;t1&gt;),\n    t2(Rc&lt;t2&gt;),\n    t3(Rc&lt;t3&gt;)\n}\n\nimpl Deref for TType {\n    type Target = tObject;\n    fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a tObject {\n        match *self {\n            TType::t1(ref x) =&gt; x as &amp;t1,\n            TType::t2(ref x) =&gt; x as &amp;t2,\n            TType::t3(ref x) =&gt; x as &amp;t3\n        }\n    }\n}\n\nfn main() {\n    let mut t1s: Vec&lt;Rc&lt;t1&gt;&gt; = Vec::new();\n    let mut t2s: Vec&lt;Rc&lt;t2&gt;&gt; = Vec::new();\n    let mut t3s: Vec&lt;Rc&lt;t3&gt;&gt; = Vec::new();\n\n    let t_iter: Box&lt;Iterator&lt;Item=TType&gt;&gt; = Box::new(t1s.iter().map(|x| TType::t1(x.clone())).chain(\n                                                t2s.iter().map(|x| TType::t2(x.clone())).chain(\n                                                t3s.iter().map(|x| TType::t3(x.clone())))));\n}\n</code></pre>\n\n<p>The compiler reports this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc 1.15.1 (021bd294c 2017-02-08)\nerror[E0495]: cannot infer an appropriate lifetime for lifetime parameter 'a in generic type due to conflicting     requirements\n  --&gt; &lt;anon&gt;:53:5\n   |\n53 |       fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a tObject {\n   |  _____^ starting here...\n54 | |         match *self {\n55 | |             TType::t1(ref x) =&gt; x as &amp;t1,\n56 | |             TType::t2(ref x) =&gt; x as &amp;t2,\n57 | |             TType::t3(ref x) =&gt; x as &amp;t3\n58 | |         }\n59 | |     }\n   | |_____^ ...ending here\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the body at 53:42...\n  --&gt; &lt;anon&gt;:53:43\n   |\n53 |       fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a tObject {\n   |  ___________________________________________^ starting here...\n54 | |         match *self {\n55 | |             TType::t1(ref x) =&gt; x as &amp;t1,\n56 | |             TType::t2(ref x) =&gt; x as &amp;t2,\n57 | |             TType::t3(ref x) =&gt; x as &amp;t3\n58 | |         }\n59 | |     }\n   | |_____^ ...ending here\nnote: ...so that method type is compatible with trait (expected fn(&amp;TType) -&gt; &amp;tObject + 'static, found     fn(&amp;TType) -&gt; &amp;tObject)\n  --&gt; &lt;anon&gt;:53:5\n   |\n53 |       fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a tObject {\n   |  _____^ starting here...\n54 | |         match *self {\n55 | |             TType::t1(ref x) =&gt; x as &amp;t1,\n56 | |             TType::t2(ref x) =&gt; x as &amp;t2,\n57 | |             TType::t3(ref x) =&gt; x as &amp;t3\n58 | |         }\n59 | |     }\n   | |_____^ ...ending here\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that method type is compatible with trait (expected fn(&amp;TType) -&gt; &amp;tObject + 'static, found     fn(&amp;TType) -&gt; &amp;tObject)\n  --&gt; &lt;anon&gt;:53:5\n   |\n53 |       fn deref&lt;'a&gt;(&amp;'a self) -&gt; &amp;'a tObject {\n   |  _____^ starting here...\n54 | |         match *self {\n55 | |             TType::t1(ref x) =&gt; x as &amp;t1,\n56 | |             TType::t2(ref x) =&gt; x as &amp;t2,\n57 | |             TType::t3(ref x) =&gt; x as &amp;t3\n58 | |         }\n59 | |     }\n   | |_____^ ...ending here   \n</code></pre>\n\n<p>If I make the return type of <code>deref</code> <code>Self::Target</code> instead of <code>tObject</code>, it compiles fine. I do not understand this behaviour. </p>\n"}, {"tags": ["recursion", "rust", "scoping"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487372448, "post_id": 42308720, "comment_id": 71772661, "body": "<i>I have also tried to use an environment ... but that didn&#39;t like that I called the same function twice</i>. Except you didn&#39;t <b>show us</b> this attempt and <a href=\"http://play.integer32.com/?gist=c242d071ac196a06fc7cdd9384287e88&amp;version=stable\" rel=\"nofollow noreferrer\">it appears to work</a>."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487579125, "post_id": 42308858, "comment_id": 71831340, "body": "At least one too many <code>mut</code> in your first example: the parameter <code>env</code> need not be <code>mut</code>, it&#39;s never assigned to."}], "tags": [], "owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "is_accepted": true, "score": 4, "last_activity_date": 1487372446, "creation_date": 1487372446, "answer_id": 42308858, "question_id": 42308720, "link": "https://stackoverflow.com/questions/42308720/recursive-function-with-outer-variable/42308858#42308858", "title": "Recursive function with outer variable", "body": "<p>You were on the right track with using environments, but you need to make sure everything that needs to be mutable is mutable:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    struct FibEnv { cache: HashMap&lt;usize, usize&gt; }\n\n    fn fib(mut env: &amp;mut FibEnv, n: usize) -&gt; usize {\n        // Special values\n        if n == 0 || n == 1 {\n            return 1;\n        }\n\n        // Check if value is in cache\n        if let Some(&amp;a) = env.cache.get(&amp;n) {\n            return a;\n        }\n\n        // Calculate\n        let f = fib(&amp;mut env, n - 2) + fib(&amp;mut env, n - 1);\n\n        // Insert in cache for later use\n        env.cache.insert(n, f);\n\n        return f;\n    }\n\n    let cache: HashMap&lt;usize, usize&gt; = HashMap::new();\n    let mut env = FibEnv { cache: cache };\n    println!(\"The 11th Fibonacci number is: {}\", fib(&amp;mut env, 10));\n}\n</code></pre>\n\n<hr>\n\n<p>As @Shepmaster stated in the comments, the following is even easier:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    fn fib(cache: &amp;mut HashMap&lt;usize, usize&gt;, n: usize) -&gt; usize {\n        // Special values\n        if n == 0 || n == 1 {\n            return 1;\n        }\n\n        // Check if value is in cache\n        if let Some(&amp;a) = cache.get(&amp;n) {\n            return a;\n        }\n\n        // Calculate\n        let f = fib(cache, n - 2) + fib(cache, n - 1);\n\n        // Insert in cache for later use\n        cache.insert(n, f);\n\n        return f;\n    }\n\n    let mut cache: HashMap&lt;usize, usize&gt; = HashMap::new();\n    println!(\"The 11th Fibonacci number is: {}\", fib(&amp;mut cache, 10));\n}\n</code></pre>\n"}], "owner": {"reputation": 928, "user_id": 4141219, "user_type": "registered", "accept_rate": 88, "profile_image": "https://lh4.googleusercontent.com/-d32iaz7YS1g/AAAAAAAAAAI/AAAAAAAAAao/vl5qXOl_78g/photo.jpg?sz=128", "display_name": "Charlie", "link": "https://stackoverflow.com/users/4141219/charlie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 482, "favorite_count": 0, "accepted_answer_id": 42308858, "answer_count": 1, "score": 2, "last_activity_date": 1487372446, "creation_date": 1487371762, "last_edit_date": 1495539972, "question_id": 42308720, "link": "https://stackoverflow.com/questions/42308720/recursive-function-with-outer-variable", "title": "Recursive function with outer variable", "body": "<p>I'm struggling a bit with variable scoping. I currently have something like this code:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut cache: HashMap&lt;usize, usize&gt; = HashMap::new();\n\n    fn fib(n: usize) -&gt; usize {\n        // Special values\n        if n == 0 || n == 1 {\n            return 1;\n        }\n\n        // Check if value is in cache\n        if let Some(&amp;a) = cache.get(&amp;n) {\n            return a;\n        }\n\n        // Calculate\n        let f = fib(n - 2) + fib(n - 1);\n\n        // Insert in cache for later use\n        cache.insert(n, f);\n\n        return f;\n    }\n\n    println!(\"The 11th Fibonacci number is: {}\", fib(10));\n}\n</code></pre>\n\n<p>I want to generate Fibonacci numbers, but also use a cache to skip recalculating the same items. The actual code does some heavier calculating, but also uses recursion.</p>\n\n<p>However, trying to compile this, I get a <code>can't capture dynamic environment in a fn item; use the || { ... } closure form instead</code> warning at <code>cache.get</code> and <code>cache.insert</code>. Applying this closure form to that code:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut cache: HashMap&lt;usize, usize&gt; = HashMap::new();\n\n    let fib = |n: usize| -&gt; usize {\n        // Special values\n        if n == 0 || n == 1 {\n            return 1;\n        }\n\n        // Check if value is in cache\n        if let Some(&amp;a) = cache.get(&amp;n) {\n            return a;\n        }\n\n        // Calculate\n        let f = fib(n - 2) + fib(n - 1);\n\n        // Insert in cache for later use\n        cache.insert(n, f);\n\n        return f;\n    };\n\n    println!(\"The 11th Fibonacci number is: {}\", fib(10));\n}\n</code></pre>\n\n<p>Fixed the <code>cache</code> error, but gives a <code>cannot find function `fib` in this scope</code> warning at <code>let f = ...</code>.</p>\n\n<p>I have also tried to use an environment as stated in <a href=\"https://stackoverflow.com/questions/16946888/is-it-possible-to-make-a-recursive-closure-in-rust\">Is it possible to make a recursive closure in Rust?</a>, but that didn't like that I called the same function twice, thus borrowing the environment twice while the environment has a mutable cache in it.</p>\n\n<p>How would I handle this weird case?</p>\n"}, {"tags": ["hashmap", "rust"], "comments": [{"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1487333283, "post_id": 42296153, "comment_id": 71749726, "body": "Related question on <code>Rc&lt;str&gt;</code>: <a href=\"http://stackoverflow.com/questions/31685697/how-to-build-an-rcstr-or-rct\" title=\"how to build an rcstr or rct\">stackoverflow.com/questions/31685697/&hellip;</a>"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1487333343, "post_id": 42296153, "comment_id": 71749762, "body": "I could believe that the <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md\" rel=\"nofollow noreferrer\">unsized coercions</a> might make it possible, at least on nightly, but I can&#39;t immediately see a way of doing so."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 1, "creation_date": 1487333816, "post_id": 42296153, "comment_id": 71750064, "body": "@ChrisEmerson: Like <code>owning_ref</code>, it could work pretty well in this situation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487343939, "post_id": 42296153, "comment_id": 71756869, "body": "<a href=\"http://meta.stackexchange.com/q/39223/281829\">One question per question, please</a>."}], "answers": [{"comments": [{"owner": {"reputation": 2001, "user_id": 894973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d893180d53b170a5b7333aa5c46f5125?s=128&d=identicon&r=PG", "display_name": "Andrew Sklyarevsky", "link": "https://stackoverflow.com/users/894973/andrew-sklyarevsky"}, "edited": false, "score": 0, "creation_date": 1487370856, "post_id": 42297733, "comment_id": 71772091, "body": "Thank you so much, turns out I was just one step from the solution -- I tried to implement <code>Borrow&lt;str&gt;</code> for <code>Rc&lt;Box&lt;str&gt;&gt;</code> itself, which compiler didn&#39;t allow, so I only needed to wrap that <code>Rc</code> into my own <code>struct</code> and now it works! I don&#39;t want to use <code>String</code>s as keys due to unnecessary duplication of data as there probably going to be thousands of strings.  On the <i>go further</i> note -- the second idea is very interesting, so perhaps I could implement one rather big string that would work as the storage for the whole <code>Dictionary</code>. I will probably look into that later, thank you!"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 2, "last_activity_date": 1487333755, "creation_date": 1487333755, "answer_id": 42297733, "question_id": 42296153, "link": "https://stackoverflow.com/questions/42296153/shared-ownership-of-an-str-between-a-hashmap-and-a-vec/42297733#42297733", "title": "Shared ownership of an str between a HashMap and a Vec", "body": "<blockquote>\n  <p>Is there a way to construct an <code>Rc&lt;str&gt;</code>?</p>\n</blockquote>\n\n<p>Annoyingly, not that I know of. <code>Rc::new</code> requires a <code>Sized</code> argument, and I am not sure whether it is an actual limitation, or just something which was forgotten.</p>\n\n<blockquote>\n  <p>Which other structures, methods or approaches could help to resolve this problem?</p>\n</blockquote>\n\n<p>If you look at the signature of <a href=\"https://doc.rust-lang.org/beta/std/collections/struct.HashMap.html#method.get\" rel=\"nofollow noreferrer\"><code>get</code></a> you'll notice:</p>\n\n<pre><code>fn get&lt;Q: ?Sized&gt;(&amp;self, k: &amp;Q) -&gt; Option&lt;&amp;V&gt;\n    where K: Borrow&lt;Q&gt;, Q: Hash + Eq\n</code></pre>\n\n<p>As a result, you could search by <code>&amp;str</code> if <code>K</code> implements <code>Borrow&lt;str&gt;</code>.</p>\n\n<p><code>String</code> implements <code>Borrow&lt;str&gt;</code>, so the simplest solution is to simply use <code>String</code> as a key. Sure it means you'll actually have two <code>String</code> instead of one... but it's simple. Certainly, a <code>String</code> is simpler to use than a <code>Box&lt;str&gt;</code> (although it uses 8 more bytes).</p>\n\n<p>If you want to shave off this cost, you can use a custom structure instead:</p>\n\n<pre><code>#[derive(Clone, Debug)]\nstruct RcStr(Rc&lt;String&gt;);\n</code></pre>\n\n<p>And then implement <code>Borrow&lt;str&gt;</code> for it. You'll then have 2 allocations per key (1 for <code>Rc</code> and 1 for <code>String</code>). Depending on the size of your <code>String</code>, it might consume less or more memory.</p>\n\n<hr>\n\n<p>If you wish to got further (why not?), here are some ideas:</p>\n\n<ul>\n<li>implement your own reference-counted string, in a single heap-allocation,</li>\n<li>use a single arena for the slice inserted in the <code>Dictionary</code>,</li>\n<li>...</li>\n</ul>\n"}], "owner": {"reputation": 2001, "user_id": 894973, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d893180d53b170a5b7333aa5c46f5125?s=128&d=identicon&r=PG", "display_name": "Andrew Sklyarevsky", "link": "https://stackoverflow.com/users/894973/andrew-sklyarevsky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 617, "favorite_count": 0, "accepted_answer_id": 42297733, "answer_count": 1, "score": 1, "last_activity_date": 1487343911, "creation_date": 1487329043, "last_edit_date": 1487343911, "question_id": 42296153, "link": "https://stackoverflow.com/questions/42296153/shared-ownership-of-an-str-between-a-hashmap-and-a-vec", "title": "Shared ownership of an str between a HashMap and a Vec", "body": "<p>I come from a Java/C#/JavaScript background and I am trying to implement a <code>Dictionary</code> that would assign each passed string an id that never changes. The dictionary should be able to return a string by the specified id. This allows to store some data that has a lot of repetitive strings far more efficiently in the file system because only the ids of strings would be stored instead of entire strings.</p>\n\n<p>I thought that a struct with a <code>HashMap</code> and a <code>Vec</code> would do but it turned out to be more complicated than that.</p>\n\n<p>I started with the usage of <code>&amp;str</code> as a key for <code>HashMap</code> and an item of <code>Vec</code> like in the following sample. The value of <code>HashMap</code> serves as an index into <code>Vec</code>.</p>\n\n<pre><code>pub struct Dictionary&lt;'a&gt; {\n    values_map: HashMap&lt;&amp;'a str, u32&gt;,\n    keys_map: Vec&lt;&amp;'a str&gt;\n}\n\nimpl&lt;'a&gt; Dictionary&lt;'a&gt; {\n    pub fn put_and_get_key(&amp;mut self, value: &amp;'a str) -&gt; u32 {\n        match self.values_map.get_mut(value) {\n            None =&gt; {\n                let id_usize = self.keys_map.len();\n                let id = id_usize as u32;\n                self.keys_map.push(value);\n                self.values_map.insert(value, id);\n                id\n            },\n            Some(&amp;mut id) =&gt; id\n        }\n    }\n}\n</code></pre>\n\n<p>This works just fine until it turns out that the <code>str</code>s need to be stored somewhere, preferably in this same <code>struct</code> as well. I tried to store a <code>Box&lt;str&gt;</code> in the <code>Vec</code> and <code>&amp;'a str</code> in the <code>HashMap</code>.</p>\n\n<pre><code>pub struct Dictionary&lt;'a&gt; {\n    values_map: HashMap&lt;&amp;'a str, u32&gt;,\n    keys_map: Vec&lt;Box&lt;str&gt;&gt;\n}\n</code></pre>\n\n<p>The borrow checker did not allow this of course because it would have allowed a dangling pointer in the <code>HashMap</code> when an item is removed from the <code>Vec</code> (or in fact sometimes when another item is added to the <code>Vec</code> but this is an off-topic here).</p>\n\n<p>I understood that I either need to write <code>unsafe</code> code or use some form of <em>shared ownership</em>, the simplest kind of which seems to be an <code>Rc</code>. The usage of <code>Rc&lt;Box&lt;str&gt;&gt;</code> looks like introducing double indirection but there seems to be no simple way to construct an <code>Rc&lt;str&gt;</code> at the moment.</p>\n\n<pre><code>pub struct Dictionary {\n    values_map: HashMap&lt;Rc&lt;Box&lt;str&gt;&gt;, u32&gt;,\n    keys_map: Vec&lt;Rc&lt;Box&lt;str&gt;&gt;&gt;\n}\n\nimpl Dictionary {\n    pub fn put_and_get_key(&amp;mut self, value: &amp;str) -&gt; u32 {\n        match self.values_map.get_mut(value) {\n            None =&gt; {\n                let id_usize = self.keys_map.len();\n                let id = id_usize as u32;\n                let value_to_store = Rc::new(value.to_owned().into_boxed_str());\n                self.keys_map.push(value_to_store);\n                self.values_map.insert(value_to_store, id);\n                id\n            },\n            Some(&amp;mut id) =&gt; id\n        }\n    }\n}\n</code></pre>\n\n<p>Everything seems fine with regard to ownership semantics, but the code above does not compile because the <code>HashMap</code> now expects an <code>Rc</code>, not an <code>&amp;str</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::rc::Rc&lt;Box&lt;str&gt;&gt;: std::borrow::Borrow&lt;str&gt;` is not satisfied\n  --&gt; src/file_structure/sample_dictionary.rs:14:31\n   |\n14 |         match self.values_map.get_mut(value) {\n   |                               ^^^^^^^ the trait `std::borrow::Borrow&lt;str&gt;` is not implemented for `std::rc::Rc&lt;Box&lt;str&gt;&gt;`\n   |\n   = help: the following implementations were found:\n   = help:   &lt;std::rc::Rc&lt;T&gt; as std::borrow::Borrow&lt;T&gt;&gt;\n</code></pre>\n\n<p>Questions:</p>\n\n<ol>\n<li>Is there a way to construct an <code>Rc&lt;str&gt;</code>?</li>\n<li>Which other structures, methods or approaches could help to resolve this problem. Essentially, I need a way to efficiently store two maps <code>string-by-id</code> and <code>id-by-string</code> and be able to retrieve an id by <code>&amp;str</code>, i.e. without any excessive allocations.</li>\n</ol>\n"}, {"tags": ["recursion", "io", "rust"], "answers": [{"comments": [{"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487318308, "post_id": 42291678, "comment_id": 71740249, "body": "Attempted to implement this, but still get errrors: see: <a href=\"https://play.rust-lang.org/?gist=774da2d80fc57b6faacd92697ffa81be&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487369920, "post_id": 42291678, "comment_id": 71771711, "body": "You&#39;re still using generics there, so you haven&#39;t solved the problem. You could possibly use <a href=\"https://doc.rust-lang.org/std/io/struct.Take.html#method.into_inner\" rel=\"nofollow noreferrer\"><code>Take::into_inner</code></a> to feel off a layer of <code>Take</code> before doing a recursive call, but then either the function would have to require a <code>Take&lt;R&gt;</code> argument (even for the initial call), or you&#39;d have to use specialization to be able to use <code>into_inner</code>. As much as I prefer generics to trait objects, this is a situation where I would concede that trait objects are the right approach."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487383897, "post_id": 42291678, "comment_id": 71775351, "body": "I found it a bit confusing since the code snippet you posted isn&#39;t using <code>Take::into_inner</code>, is it supposed to be a working code example?"}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487391637, "post_id": 42291678, "comment_id": 71776684, "body": "The code in my answer compiles (if you add <code>encode_recursive</code>, which I omitted because I didn&#39;t change it). Note that each recursive call will still wrap the <code>&amp;mut Read</code> in a <code>Take</code> (it works because <code>&amp;mut Read</code> implements <code>Read</code>; I&#39;ve added that info in my answer). If it doesn&#39;t have the correct behavior though, I don&#39;t claim any responsibility; it&#39;s still your code after all. :)"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487394196, "post_id": 42291678, "comment_id": 71777176, "body": "This is what I get attempting to use your code example as-is: <a href=\"https://play.rust-lang.org/?gist=6e8873f976af20ab56842adfc30b4ac9&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> - Realize I need to make sure what I have works properly, but its still hitting basic type errors."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "reply_to_user": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487395658, "post_id": 42291678, "comment_id": 71777432, "body": "Oh, that&#39;s because you didn&#39;t add <code>use std::io::Read;</code>, so <code>Read</code>&#39;s methods are not in scope. Took me a few minutes to figure it out when I originally wrote my answer. :) Which makes me wonder, why didn&#39;t you use method call syntax on <code>Read</code>&#39;s methods in your original code?"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487403442, "post_id": 42291678, "comment_id": 71779204, "body": "Method call syntax consumes the argument, IIRC. (moving ownership)"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 1, "last_activity_date": 1487391634, "last_edit_date": 1487391634, "creation_date": 1487315844, "answer_id": 42291678, "question_id": 42290414, "link": "https://stackoverflow.com/questions/42290414/how-to-use-readtake-recursively-to-read-a-tree-structures-with-a-generic-read/42291678#42291678", "title": "How to use Read::take recursively to read a tree structures with a generic Read trait?", "body": "<p>Yes, but you'll have to use trait objects instead of generics.</p>\n\n<p>The problem is that in your code, each recursive call sets <code>R</code> to <code>&amp;mut std::io::Take&lt;&amp;mut R&gt;</code>. That's not the same <code>R</code> as the original call, so the compiler is forced to instantiate another instance of <code>decode_recursive</code>. But this happens indefinitely because the new <code>R</code> is derived from the old <code>R</code>! </p>\n\n<p>Concretely:</p>\n\n<ul>\n<li>the first call (in <code>main</code>) instantiates <code>decode_recursive&lt;&amp;[u8]&gt;</code></li>\n<li>which invokes <code>decode_recursive&lt;&amp;mut std::io::Take&lt;&amp;mut &amp;[u8]&gt;&gt;</code></li>\n<li>which invokes <code>decode_recursive&lt;&amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;[u8]&gt;&gt;&gt;</code></li>\n<li>etc.</li>\n</ul>\n\n<p>The compiler cannot figure out when this recursion will stop!</p>\n\n<p>Therefore, as mentioned above, the solution is to use trait objects instead. Since the methods on <code>Read</code> that read data need a mutable reference, that's what your function will have to receive.</p>\n\n<pre><code>use std::io;\nuse std::io::Read;\n\nfn decode_recursive(f: &amp;mut Read, depth: usize) -&gt; Result&lt;(), io::Error&gt;\n{\n    let mut chunk_data: [u8; 2] = [0; 2];\n    f.read_exact(&amp;mut chunk_data)?;\n    let children = chunk_data[0];\n    let chunk_size = chunk_data[1];\n\n    let mut f_sub = f.take(chunk_size as u64);\n\n    println!(\"{:indent$}Chunk: {} depth\", \"\", chunk_data[0], indent=depth);\n    if children != 0 {\n        for _ in 0..children {\n            decode_recursive(&amp;mut f_sub, depth + 1)?;\n        }\n    } else {\n        let mut chunk_leaf: [u8; 1] = [0; 1];\n        for i in 0..(chunk_size as usize) {\n            f_sub.read_exact(&amp;mut chunk_leaf)?;\n            print!(\"{},\", i);\n        }\n        println!();\n    }\n\n    // read all remaining data in the case recursive functions finish early.\n    io::copy(&amp;mut f_sub, &amp;mut io::sink())?;\n\n    Ok(())\n}\n\nfn main() {\n    let mut data: Vec&lt;u8&gt; = Vec::new();\n\n    {\n        let size_init = 255_u8;\n        encode_recursive(&amp;mut data, size_init);\n    }\n\n    decode_recursive(&amp;mut &amp;*data, 0).unwrap();\n}\n</code></pre>\n\n<p>Note that this uses the implementation <code>impl&lt;'a, R: Read + ?Sized&gt; Read for &amp;'a mut R</code> provided by the standard library when invoking <code>take</code>. <code>Read</code> is an object-safe trait, so <code>Read</code> (the type) implements <code>Read</code> (the trait) (this implementation is provided by the compiler), and therefore thanks to the above <code>impl</code> in the standard library, <code>&amp;mut Read</code> also implements <code>Read</code>. This results in <code>f_sub</code> having type <code>std::io::Take&lt;&amp;mut std::io::Read&gt;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "is_accepted": false, "score": 0, "last_activity_date": 1487565508, "creation_date": 1487565508, "answer_id": 42336627, "question_id": 42290414, "link": "https://stackoverflow.com/questions/42290414/how-to-use-readtake-recursively-to-read-a-tree-structures-with-a-generic-read/42336627#42336627", "title": "How to use Read::take recursively to read a tree structures with a generic Read trait?", "body": "<p>Posting a working example based on @francis-gagn\u00e9's suggetions and @aatch's help.</p>\n\n<p>Even though its possible the answer should have been obvious, I couldn't figure out how to apply francis's suggestions without some help, and having a working code example in the answer is generally useful:</p>\n\n<p>Note that the reason I couldn't get my original question working was using generic <code>Read</code> trait.</p>\n\n<p>So changing:</p>\n\n<pre><code>fn decode_recursive&lt;R&gt;(mut f: R, depth: usize) -&gt; Result&lt;(), io::Error&gt;\n    where R: io::Read,\n{ ... }\n</code></pre>\n\n<p>To:</p>\n\n<pre><code>fn decode_recursive(f: &amp;mut io::Read, depth: usize) -&gt; Result&lt;(), io::Error&gt; { ... }\n</code></pre>\n\n<p>This fixes the root cause of the problem I was running into.</p>\n\n<p>Full working code example:</p>\n\n<pre><code>use ::std::io;\n\nfn encode_recursive(data: &amp;mut Vec&lt;u8&gt;, chunk_size: u8) {\n    let data_len_init = data.len();\n    let mut size = chunk_size;\n    size -= 2;\n    if size &gt; 8 {\n        data.push(2); // children\n        data.push(size);\n        let split = size / 2;\n        encode_recursive(data, split);\n        encode_recursive(data, size - split);\n    } else {\n        data.push(0); // no children\n        data.push(size);\n        for i in 0..size {\n            data.push(i); // dummy leaf data\n        }\n    }\n    debug_assert_eq!(data.len(), data_len_init + chunk_size as usize);\n}\n\nfn decode_recursive(f: &amp;mut io::Read, depth: usize) -&gt; Result&lt;(), io::Error&gt;\n{\n    let mut chunk_data: [u8; 2] = [0; 2];\n    io::Read::read_exact(f, &amp;mut chunk_data)?;\n    let children = chunk_data[0];\n    let chunk_size = chunk_data[1];\n\n    let mut f_sub = io::Read::take(f, chunk_size as u64);\n\n    println!(\"{:indent$}Chunk: {} depth\", \"\", chunk_data[0], indent=depth);\n    if children != 0 {\n        for _ in 0..children {\n            decode_recursive(&amp;mut f_sub, depth + 1)?;\n        }\n    } else {\n        let mut chunk_leaf: [u8; 1] = [0; 1];\n        for _ in 0..(chunk_size as usize) {\n            io::Read::read_exact(&amp;mut f_sub, &amp;mut chunk_leaf)?;\n            print!(\"{},\", chunk_leaf[0]);\n        }\n        println!();\n    }\n\n    // read all remaining data in the case recursive functions finish early.\n    io::copy(&amp;mut f_sub, &amp;mut io::sink())?;\n\n    Ok(())\n}\n\nfn main() {\n    let mut data: Vec&lt;u8&gt; = Vec::new();\n\n    {\n        let size_init = 255_u8;\n        encode_recursive(&amp;mut data, size_init);\n    }\n\n    decode_recursive(&amp;mut &amp;*data, 0).unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1487565508, "creation_date": 1487310926, "last_edit_date": 1487316643, "question_id": 42290414, "link": "https://stackoverflow.com/questions/42290414/how-to-use-readtake-recursively-to-read-a-tree-structures-with-a-generic-read", "title": "How to use Read::take recursively to read a tree structures with a generic Read trait?", "body": "<p>When storing tree structures in binary files its fairly common to store a sequence of <em>chunks</em>, each containing:  <code>[type_id, size, ... ]</code> and optionally nested child chunks.</p>\n\n<p>This allows readers to read in the tree, skipping types that aren't recognized since their size is known.</p>\n\n<p>See: <a href=\"http://www.fileformat.info/format/iff/egff.htm\" rel=\"nofollow noreferrer\">Amiga IFF as an example of this</a>.</p>\n\n<p>When writing readers for this kind of data, its important to make sure each level of the recursion reads exactly the number of bytes defined by its chunk size.</p>\n\n<p>Even using the <code>Seek</code> trait, while it allows skipping to the next chunk, it doesn't ensure nested functions aren't reading past their bounds.</p>\n\n<p>So its useful that reading past the pre-defined chunk size will cause an EOF.</p>\n\n<p>Is there a way to use <a href=\"https://doc.rust-lang.org/nightly/std/io/trait.Read.html#method.take\" rel=\"nofollow noreferrer\"><code>Read::take</code></a> to get a part of the file sized to the chunk, then read from it in a recursive function?</p>\n\n<hr>\n\n<p>In principle this should be possible, however I ran into a problem using take recursively, where I couldn't get generic types working:</p>\n\n<pre><code>error: reached the recursion limit while instantiating `decode_recursive::&lt;&amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;mut std::io::Take&lt;&amp;mut &amp;[u8]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n</code></pre>\n\n<p>Is it possible to use <code>Read::take</code> in a function to recursively limit the range of data that can be read?</p>\n\n<p>Note that using vector <code>Slice</code> would resolve this but I would like to use the <code>Read</code> trait.</p>\n\n<hr>\n\n<p>Example code which encodes a small tree structure and tries to read it:</p>\n\n<pre><code>use ::std::io;\n\nfn encode_recursive(data: &amp;mut Vec&lt;u8&gt;, chunk_size: u8) {\n    let data_len_init = data.len();\n    let mut size = chunk_size;\n    size -= 2;\n    if size &gt; 8 {\n        data.push(2); // children\n        data.push(size);\n        let split = size / 2;\n        encode_recursive(data, split);\n        encode_recursive(data, size - split);\n    } else {\n        data.push(0); // no children\n        data.push(size);\n        for i in 0..size {\n            data.push(i); // dummy leaf data\n        }\n    }\n    debug_assert_eq!(data.len(), data_len_init + chunk_size as usize);\n}\n\nfn decode_recursive&lt;R&gt;(mut f: R, depth: usize) -&gt; Result&lt;(), io::Error&gt;\n    where R: io::Read,\n{\n    let mut chunk_data: [u8; 2] = [0; 2];\n    io::Read::read_exact(&amp;mut f, &amp;mut chunk_data)?;\n    let children = chunk_data[0];\n    let chunk_size = chunk_data[1];\n\n    let mut f_sub = io::Read::take(&amp;mut f, chunk_size as u64);\n\n    println!(\"{:indent$}Chunk: {} depth\", \"\", chunk_data[0], indent=depth);\n    if children != 0 {\n        for _ in 0..children {\n            decode_recursive(&amp;mut f_sub, depth + 1)?;\n        }\n    } else {\n        let mut chunk_leaf: [u8; 1] = [0; 1];\n        for _ in 0..(chunk_size as usize) {\n            io::Read::read_exact(&amp;mut f_sub, &amp;mut chunk_leaf)?;\n            print!(\"{},\", chunk_leaf[0]);\n        }\n        println!();\n    }\n\n    // read all remaining data in the case recursive functions finish early.\n    io::copy(&amp;mut f_sub, &amp;mut io::sink())?;\n\n    Ok(())\n}\n\nfn main() {\n    let mut data: Vec&lt;u8&gt; = Vec::new();\n\n    {\n        let size_init = 255_u8;\n        encode_recursive(&amp;mut data, size_init);\n    }\n\n    decode_recursive(&amp;*data, 0).unwrap();\n}\n</code></pre>\n\n<p>See: <a href=\"https://play.rust-lang.org/?gist=ceff10d39dd4515dcad5a6d1880c7b72&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n"}, {"tags": ["enums", "rust", "type-inference"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1487323133, "post_id": 42291410, "comment_id": 71742944, "body": "Maybe the recommendation to use <code>use nix::sys::socket...</code> or an alias should be put at the top of this answer."}], "tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": false, "score": 7, "last_activity_date": 1487314877, "creation_date": 1487314877, "answer_id": 42291410, "question_id": 42289985, "link": "https://stackoverflow.com/questions/42289985/why-cant-enum-variants-be-inferred-in-match-arms/42291410#42291410", "title": "Why can&#39;t enum variants be inferred in match arms?", "body": "<ul>\n<li><strong>But why? Can't the enum be inferred?</strong></li>\n</ul>\n\n<p>According to <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0390-enum-namespacing.md\" rel=\"noreferrer\">RFC 390</a> which introduced enum namespacing, this inference is considered a hack and not having it is better designwise. From the RFC's alternatives section:</p>\n\n<blockquote>\n  <p>We can implement enum namespacing after 1.0 by adding a \"fallback\" case to resolve, where variants can be referenced from their \"flat\" definition location if no other definition would conflict in that namespace. In the grand scheme of hacks to preserve backwards compatibility, this is not that bad, <strong>but still decidedly worse than not having to worry about fallback at all.</strong></p>\n</blockquote>\n\n<p>The official reason why inference is not considered after RFC 390, is no one really cared enough to propose the change:</p>\n\n<blockquote>\n  <p><a href=\"https://github.com/rust-lang/rfcs/pull/390#issuecomment-58913541\" rel=\"noreferrer\">@sfackler</a>:</p>\n  \n  <p><strong>@netvl</strong> Java's an interesting case in that you can only refer to variants in the \"bare\" form (<code>FOO</code>, not <code>MyEnum.FOO</code>) in <code>switch</code> statements. The situation in Rust is a bit more complex as <code>match</code> allows more powerful pattern matching than traditional <code>switch</code> statements. The closest analogue would probably be to implicitly treat all the relevant stuff as imported in a pattern. That seems like something sufficiently orthogonal to this proposal that <strong>it'd probably deserve its own RFC.</strong></p>\n</blockquote>\n\n<p>(and no one has written an RFC for this since then.)</p>\n\n<p>The chance such an RFC will pass is slim, though. After all, you just need to add one line <code>use nix::sys::socket::SockAddr::*</code> somewhere to make it work.  Adding a feature to the language requires so many consideration about the proper specification and corner cases (e.g. what happens when you <code>use nix::sys::socket::SockAddr::Unix as Inet</code>) that it may not worth the time.</p>\n"}], "owner": {"reputation": 37636, "user_id": 101999, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/ab9e16b1296c16bc63f02f6dff5e3dc6?s=128&d=identicon&r=PG", "display_name": "Thanatos", "link": "https://stackoverflow.com/users/101999/thanatos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 327, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1487343752, "creation_date": 1487308823, "last_edit_date": 1487343752, "question_id": 42289985, "link": "https://stackoverflow.com/questions/42289985/why-cant-enum-variants-be-inferred-in-match-arms", "title": "Why can&#39;t enum variants be inferred in match arms?", "body": "<p>This example fails to compile:</p>\n\n<pre><code>extern crate nix;\nuse std::os::unix::io::RawFd;\n\nfn func(fd: RawFd, buf: &amp;mut [u8]) -&gt; Result&lt;(), nix::Error&gt; {\n    let (size, nix_addr) = nix::sys::socket::recvfrom(\n        fd, buf\n    )?;\n\n    let addr = match nix_addr {\n        //nix::sys::socket::SockAddr::Inet(addr) =&gt; addr.to_std(),\n        Inet(addr) =&gt; addr.to_std(),\n        _ =&gt; panic!(),\n    };\n\n    Ok(())\n}\n\nfn main() {}\n</code></pre>\n\n<p>The error, in this version is:</p>\n\n<pre><code>error[E0531]: unresolved tuple struct/variant `Inet`\n  --&gt; match_arms.rs:14:3\n   |\n14 |        Inet(addr) =&gt; addr.to_std(),\n   |        ^^^^\n</code></pre>\n\n<p>Swapping the <code>Inet</code> line for the commented out one successfully compiles. </p>\n\n<p>The compiler seems to be requiring me to specify the enum type itself, I suppose so that it knows that the variant I'm specifying in the <code>match</code> arm is legit. <strong>But why? Can't the enum be inferred?</strong> Doesn't the compiler have enough information here to realize that <code>nix_addr</code> is a <code>nix::\u2026::SocketAddr</code>, and thus, that <code>Inet</code> is a valid variant (and one with data)?</p>\n\n<p>Why do I have to type the whole thing out, or drag the name into the current scope with a <code>use</code>?</p>\n\n<p>I also tried <code>_::Inet</code>, which also failed.</p>\n"}, {"tags": ["multithreading", "rust", "ffi"], "comments": [{"owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 2, "creation_date": 1487315156, "post_id": 42289590, "comment_id": 71738559, "body": "Can you supplement the library and provide a C function to read and write to those thread_local variables?"}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "reply_to_user": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "edited": false, "score": 0, "creation_date": 1487321895, "post_id": 42289590, "comment_id": 71742122, "body": "Yes. It&#39;s my intention to write a small glue library to deal with thread-local variables if Rust lacks the necessary facilities to do so. However, I prefer to avoid the extra build dependencies if at all possible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1487344269, "post_id": 42289590, "comment_id": 71757133, "body": "Any answer would require you to tell us <b>what threading system you are using and how you are creating thread local variables</b>. A great way of doing that would be to provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> of the extern code and the Rust code that you&#39;ve created that shows how you&#39;d like to access it."}, {"owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "edited": false, "score": 1, "creation_date": 1487426529, "post_id": 42289590, "comment_id": 71785692, "body": "If the thread local variable is declared as <code>pub</code> you should be able to access it from everywhere. See <a href=\"https://doc.rust-lang.org/std/thread/struct.LocalKey.html\" rel=\"nofollow noreferrer\"><code>LocalKey</code></a> and <a href=\"https://doc.rust-lang.org/std/macro.thread_local.html\" rel=\"nofollow noreferrer\"><code>thread_local</code></a> or this <a href=\"https://play.rust-lang.org/?gist=d86305059b6fdb8b212752db4e0b5ee9&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">playground</a>"}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "reply_to_user": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "edited": false, "score": 0, "creation_date": 1487579448, "post_id": 42289590, "comment_id": 71831485, "body": "@rnstlr Sorry, I think you&#39;ve misunderstood. The thread local variable is defined in an external c library. I want to set that variable in a Rust program."}, {"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 0, "creation_date": 1487580010, "post_id": 42289590, "comment_id": 71831822, "body": "I&#39;ve just generalized this question to be more useful for other people looking for a similar answer."}, {"owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "edited": false, "score": 1, "creation_date": 1487598252, "post_id": 42289590, "comment_id": 71843582, "body": "@Doe Ah yes, I misunderstood. I added an answer with a C11 _Thread_local solution using gcc."}], "answers": [{"comments": [{"owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "edited": false, "score": 1, "creation_date": 1487671684, "post_id": 42346138, "comment_id": 71878427, "body": "Excellent answer. Corresponding tracking issue seems to be <a href=\"https://github.com/rust-lang/rust/issues/29594\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/29594</a>. From the issue it seems that stabilization does not seem likely."}], "tags": [], "owner": {"reputation": 1056, "user_id": 3497181, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e384ad3cea4b2ccaf03271303a94f1f?s=128&d=identicon&r=PG&f=1", "display_name": "rnstlr", "link": "https://stackoverflow.com/users/3497181/rnstlr"}, "is_accepted": false, "score": 8, "last_activity_date": 1488358738, "last_edit_date": 1488358738, "creation_date": 1487598115, "answer_id": 42346138, "question_id": 42289590, "link": "https://stackoverflow.com/questions/42289590/how-are-foreign-thread-local-global-variables-accessed-in-rust/42346138#42346138", "title": "How are foreign thread-local global variables accessed in Rust?", "body": "<p>Rust has a nightly feature, which allows linking to external thread local variables. The stabilization of the feature is tracked <a href=\"https://github.com/rust-lang/rust/issues/29594\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<h1>C11 / GCC TLS extension</h1>\n\n<p>C11 defines the <a href=\"http://en.cppreference.com/w/c/keyword/_Thread_local\" rel=\"nofollow noreferrer\"><code>_Thread_local</code></a> keyword to define <a href=\"http://en.cppreference.com/w/c/language/storage_duration\" rel=\"nofollow noreferrer\">thread-storage duration</a> for an object. There also exists a <a href=\"http://en.cppreference.com/w/c/thread/thread_local\" rel=\"nofollow noreferrer\">thread_local</a> macro alias.</p>\n\n<p>GCC also implements a <a href=\"https://gcc.gnu.org/onlinedocs/gcc/Thread-Local.html#Thread-Local\" rel=\"nofollow noreferrer\">Thread Local</a> extension which uses <code>__thread</code> as a keyword.</p>\n\n<p>Linking to both an external C11 <code>_Thread_local</code> and a gcc <code>__thread</code> variable is possible using nightly (tested with <code>rustc 1.17.0-nightly (0e7727795 2017-02-19)</code> and gcc 5.4)</p>\n\n<pre><code>#![feature(thread_local)]\n\nextern crate libc;\n\nuse libc::c_int;\n\n#[link(name=\"test\", kind=\"static\")]\nextern {\n    #[thread_local]\n    static mut test_global: c_int;\n}\n\nfn main() {\n    let mut threads = vec![];\n    for _ in 0..5 {\n        let thread = std::thread::spawn(|| {\n            unsafe {\n                test_global += 1;\n                println!(\"{}\", test_global);\n                test_global += 1;\n            }\n        });\n        threads.push(thread);\n    }\n\n    for thread in threads {\n        thread.join().unwrap();\n    }\n}\n</code></pre>\n\n<p>This allows get access to a variable declared as either of the following:</p>\n\n<pre><code>_Thread_local extern int test_global;\nextern __local int test_global;\n</code></pre>\n\n<p>The output of the above Rust code will be:</p>\n\n<pre><code>1\n1\n1\n1\n1\n</code></pre>\n\n<p>Which is expected, when the variable is defined as thread local.</p>\n"}], "owner": {"reputation": 435, "user_id": 6517909, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/542422dbe372e54be780ad815e253206?s=128&d=identicon&r=PG&f=1", "display_name": "Doe", "link": "https://stackoverflow.com/users/6517909/doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1026, "favorite_count": 0, "answer_count": 1, "score": 9, "last_activity_date": 1488358738, "creation_date": 1487306730, "last_edit_date": 1487579869, "question_id": 42289590, "link": "https://stackoverflow.com/questions/42289590/how-are-foreign-thread-local-global-variables-accessed-in-rust", "title": "How are foreign thread-local global variables accessed in Rust?", "body": "<p>For each of the following thread-local storage implementations, how can an external thread-local variable be accessed in Rust programs using the standard ffi mechanisms as exposed by the compiler or standard library?</p>\n\n<ul>\n<li>C11</li>\n<li>gcc's tls extension</li>\n<li>pthreads</li>\n<li>Windows TLS API</li>\n</ul>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1487279284, "post_id": 42284562, "comment_id": 71725996, "body": "That just sounds like a bug with libc. Have you considered filing it or asking them to change the signature?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487279429, "post_id": 42284562, "comment_id": 71726076, "body": "If you are using Rust code to call C code to which you are going to pass a C function, that leads to the alternative: just call <code>pthread_create</code> from your C code and skip the whole song and dance."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1487445855, "post_id": 42284562, "comment_id": 71792472, "body": "Requiring only safe code to pass to C looks superfluous, but a simple workaround would be to create a <code>extern &quot;C&quot; fn wrapped_fn1(arg: *mut c_void) -&gt; *mut c_void { unsafe { thr_fn1(arg) } }</code> and pass <code>wrapped_fn1</code> to <code>pthread_create</code>. Also, you will need an <code>unsafe</code> block in <code>main</code> to invoke <code>libc::pthread_create</code> and <code>std::mem::zeroed</code>."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487429151, "post_id": 42313750, "comment_id": 71786555, "body": "<i>I&#39;m not sure <code>Option</code> is a good idea here</i> \u2014 because bindgen is an automated tool and there&#39;s no way to discern from a function signature if a pointer should or should not be <code>NULL</code>."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487429310, "post_id": 42313750, "comment_id": 71786620, "body": "@Shepmaster so you also would suggest to not use <code>Option</code> here, right?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487429640, "post_id": 42313750, "comment_id": 71786724, "body": "Hard to tell. <b>I</b> can&#39;t see why you would, but calls like this are often rife with overloaded behavior for edge case argumnets.  For example, <code>kill (2)</code> allows using PID 0 as an argument even though no process can have PID 0."}, {"owner": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1487445342, "post_id": 42313750, "comment_id": 71792288, "body": "This finding seems unrelated from the error reported in the question. If <code>arg3</code> were an <code>Option</code>, you should have an error like &quot;expected Option&lt;x&gt;, found&lt;x&gt;&quot;, not &quot;expected normal fn, found unsafe fn&quot;."}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 102109, "user_id": 1600898, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/01377f8b31f24b0265854666b29d0c03?s=128&d=identicon&r=PG", "display_name": "user4815162342", "link": "https://stackoverflow.com/users/1600898/user4815162342"}, "edited": false, "score": 0, "creation_date": 1487449145, "post_id": 42313750, "comment_id": 71793626, "body": "@user4815162342 the point is more the adding of <code>unsafe</code> to the function definition which solved the issue, see also the PR where I only added the unsafe but left out <code>Option</code>"}, {"owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1487450053, "post_id": 42313750, "comment_id": 71793951, "body": "@Shepmaster I went through the man pages and through the section in my unix book (advanced programming in the unix environment) and nowhere does it specify what happens if you give <code>null</code> to the fn argument (the 3rd argument). Upon testing it did segfault on Linux upon thread start, and on OSX it &quot;only&quot; segfaulted upon <code>pthread_join</code>, so I&#39;d say it&#39;s safe to say that this never should be <code>Null</code>"}], "tags": [], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "is_accepted": false, "score": 1, "last_activity_date": 1487429100, "last_edit_date": 1487429100, "creation_date": 1487412318, "answer_id": 42313750, "question_id": 42284562, "link": "https://stackoverflow.com/questions/42284562/how-can-i-pass-an-unsafe-function-when-a-safe-function-is-expected-without-wrapp/42313750#42313750", "title": "How can I pass an unsafe function when a safe function is expected without wrapping the unsafe function?", "body": "<p>The <code>libc</code> function definition is wrong: The C header <code>/usr/include/pthread.h</code>:</p>\n\n<pre><code>extern int pthread_create (pthread_t *__restrict __newthread,\n                           const pthread_attr_t *__restrict __attr,\n                           void *(*__start_routine) (void *),\n                           void *__restrict __arg) __THROWNL __nonnull ((1, 3));\n</code></pre>\n\n<p><code>bindgen</code> produces this function definition:</p>\n\n<pre><code>pub fn pthread_create(arg1: *mut pthread_t,\n                      arg2: *const pthread_attr_t,\n                      arg3: Option&lt;unsafe extern \"C\" fn(arg1: *mut c_void) -&gt; *mut c_void&gt;,\n                      arg4: *mut c_void) -&gt; c_int;\n</code></pre>\n\n<p>Which compiles both on macOS and Linux. I'm not sure <code>Option</code> is a good idea here; why would anyone start a thread which doesn't call a function?</p>\n\n<p>I opened <a href=\"https://github.com/rust-lang/libc/pull/527\" rel=\"nofollow noreferrer\">a PR for <code>libc</code></a> to correct the issue (without the <code>Option</code> part)</p>\n"}], "owner": {"reputation": 9105, "user_id": 119861, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/O2tUa.png?s=128&g=1", "display_name": "hansaplast", "link": "https://stackoverflow.com/users/119861/hansaplast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 541, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1487429100, "creation_date": 1487279018, "last_edit_date": 1487279352, "question_id": 42284562, "link": "https://stackoverflow.com/questions/42284562/how-can-i-pass-an-unsafe-function-when-a-safe-function-is-expected-without-wrapp", "title": "How can I pass an unsafe function when a safe function is expected without wrapping the unsafe function?", "body": "<p>I want to point <code>pthread_create</code> to a C function I later link to. That C function will use <code>pthread_cleanup_push</code> and <code>pthread_cleanup_pop</code> which are C macros and thus cannot be ported to Rust.</p>\n\n<p>This is my code:</p>\n\n<pre><code>extern crate libc;\nuse std::ptr::null_mut;\nuse libc::c_void;\n\nextern \"C\" {\n    fn thr_fn1(arg:*mut c_void) -&gt; *mut c_void;\n}\n\nfn main() {\n    let mut tid1 = std::mem::zeroed();\n    libc::pthread_create(&amp;mut tid1, null_mut(), thr_fn1, null_mut());\n}\n</code></pre>\n\n<p>I expected that since I'm calling libc's FFI anyway, I can just point to an external C function, but I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/bin/11-threads/f05-thread-cleanup.rs:25:49\n   |\n25 |     libc::pthread_create(&amp;mut tid1, null_mut(), thr_fn1, null_mut());\n   |                                                 ^^^^^^^ expected normal fn, found unsafe fn\n   |\n   = note: expected type `extern \"C\" fn(*mut libc::c_void) -&gt; *mut libc::c_void`\n              found type `unsafe extern \"C\" fn(*mut libc::c_void) -&gt; *mut libc::c_void {thr_fn1}`\n</code></pre>\n\n<p>I could write a wrapper which calls the C function in an <code>unsafe{}</code> block, but is there any way to avoid that?</p>\n"}, {"tags": ["rust", "state", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487273792, "post_id": 42282667, "comment_id": 71722705, "body": "<i>such a [...] obviously safe pattern</i> \u2014 It&#39;s <b>not</b> obviously safe though. If a panic were to occur between the time that you removed the value and the time you replaced it, then you&#39;d be invoking undefined behavior when the destructor of the structure is run."}], "answers": [{"comments": [{"owner": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "edited": false, "score": 0, "creation_date": 1488746077, "post_id": 42282829, "comment_id": 72356260, "body": "After experimenting with my code more, I&#39;ve realized it is idiomatic and silly to do what I wanted to do. (Even if it would produce more general and elegant code.) I appreciate how your answer addressed a bunch of better ways to achieve what I wanted."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "edited": false, "score": 0, "creation_date": 1488786449, "post_id": 42282829, "comment_id": 72368655, "body": "@Others: No worries, Rust is young enough that we&#39;re all exploring the possibilities here :)"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1487272862, "creation_date": 1487272862, "answer_id": 42282829, "question_id": 42282667, "link": "https://stackoverflow.com/questions/42282667/how-can-i-do-computed-state-transitions-without-offending-the-borrow-checker/42282829#42282829", "title": "How can I do computed state transitions without offending the borrow checker?", "body": "<p>The simplest way:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; u32;\n</code></pre>\n\n<p>I'll be honest and say that it feels really weird to both consume and return <code>self</code>, and it's also impractical as demonstrated here.</p>\n\n<hr>\n\n<p>If you are stuck with <code>fn next(self) -&gt; (Self, u32)</code> but are willing to alter the layout of <code>StateHolder</code>, go with <code>state: Option&lt;State&gt;</code>, because <code>Option</code> has <code>take</code>:</p>\n\n<pre><code>let (new_state, byproduct) = self.state.take().unwrap().next();\nself.state = Some(new_state);\nbyproduct\n</code></pre>\n\n<p>If you are stuck without <code>Option</code>, or it's too painful to use, then you can indeed use <code>std::mem::replace</code>, but you'll need some <code>State</code> to do so. This is easy if <code>State</code> implements <code>Default</code>, but may be expensive:</p>\n\n<pre><code>let (new_state, byproduct) =\n    std::mem::replace(&amp;mut self.state, State::default()).next();\nstd::mem::replace(&amp;mut self.state, new_state);\nbyproduct\n</code></pre>\n\n<p>Finally, you can indeed break <code>unsafe</code> to move the value out of <code>self.state</code>... however if the computation ever panics before you get to fill it back then you have opened the door to Undefined Behavior land, and that's baaad.</p>\n"}], "owner": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 42282829, "answer_count": 1, "score": 3, "last_activity_date": 1487273710, "creation_date": 1487272247, "last_edit_date": 1487273710, "question_id": 42282667, "link": "https://stackoverflow.com/questions/42282667/how-can-i-do-computed-state-transitions-without-offending-the-borrow-checker", "title": "How can I do computed state transitions without offending the borrow checker?", "body": "<p>I've written this code for transitioning between states, but if fails to pass the borrow checker:</p>\n\n<pre><code>struct State {\n    // ...\n}\n\nimpl State {\n    fn next(self) -&gt; (Self, u32) {\n        // ...\n    }\n}\n\nstruct StateHolder {\n    state: State\n}\n\nimpl StateHolder {\n    fn next_value(&amp;mut self) -&gt; u32 {\n         // ERROR: Cannot move out of borrowed context\n         let (new_state, byproduct) = self.state.next(); \n         self.state = new_state;\n         return byproduct;\n    }\n}\n</code></pre>\n\n<p>This seems like the kind of situation where I'd usually use <code>std::mem::replace</code>, but since the value of <code>new_state</code> depends on the old state, it just won't work here.</p>\n\n<p>I know I could make this work by making <code>State</code> implement <code>Clone</code> and doing this:</p>\n\n<pre><code>fn next_value(&amp;mut self) -&gt; u32 {\n    let (new_state, byproduct) = self.state.clone().next(); \n    self.state = new_state;\n    return byproduct;\n}\n</code></pre>\n\n<p>But I'd rather not do an unnecessary copy like that, or require <code>State</code> to implement <code>Clone</code>. (I think the compiler would optimize the copy out in this case, but I don't want to rely on that.)</p>\n\n<p>I also know of quite a few ways to do this in unsafe Rust, but that seems way overkill for such a simple and obviously safe pattern.</p>\n\n<p>Is there a way to do write this in safe Rust, without unnecessary copying? </p>\n"}, {"tags": ["android", "android-ndk", "openssl", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487265327, "post_id": 42280398, "comment_id": 71717652, "body": "Have you tested the same code without using OpenSSL?"}, {"owner": {"reputation": 169, "user_id": 4354599, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9b12556e83d7f13aed7442cda0e1c6f?s=128&d=identicon&r=PG", "display_name": "edelangh", "link": "https://stackoverflow.com/users/4354599/edelangh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487265522, "post_id": 42280398, "comment_id": 71717782, "body": "I need openssl because i&#39;m using hyper-native-tls, so i can&#39;t just remove it. PS: thank you for edited my post"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487268114, "post_id": 42280398, "comment_id": 71719438, "body": "I was trying to suggest that you attempt to narrow down the source of the problem. If you remove OpenSSL and the problem still occurs, you now have a smaller location to look for the root cause. If it doesn&#39;t occur, you also have a smaller location to look."}, {"owner": {"reputation": 169, "user_id": 4354599, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9b12556e83d7f13aed7442cda0e1c6f?s=128&d=identicon&r=PG", "display_name": "edelangh", "link": "https://stackoverflow.com/users/4354599/edelangh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1487329747, "post_id": 42280398, "comment_id": 71747574, "body": "How can I do smaller than that main.rs? This principal is not really my code, it is an example. I tell you that I do not want to remove openssl"}], "owner": {"reputation": 169, "user_id": 4354599, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9b12556e83d7f13aed7442cda0e1c6f?s=128&d=identicon&r=PG", "display_name": "edelangh", "link": "https://stackoverflow.com/users/4354599/edelangh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 485, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1487265222, "creation_date": 1487264773, "last_edit_date": 1487265222, "question_id": 42280398, "link": "https://stackoverflow.com/questions/42280398/unable-to-load-native-library-libmain-so-when-cross-compiling-to-android-when-us", "title": "Unable to load native library libmain.so when cross compiling to Android when using OpenSSL", "body": "<p>I have some troubles using OpenSSL with <a href=\"https://crates.io/crates/cargo-apk\" rel=\"nofollow noreferrer\">cargo-apk</a>.</p>\n\n<p>I've provided <strong>libssl.so</strong>, <strong>libcrypto.so</strong>, and <strong>openssl</strong> includes to android-ndk and use <code>PKG_CONFIG_ALLOW_CROSS=1 cargo-apk</code> with a custom build script:</p>\n\n<pre><code>fn main () {\n    println!(\"cargo:rustc-link-lib=crypto\");\n    println!(\"cargo:rustc-link-lib=ssl\");\n}\n</code></pre>\n\n<p>Compilation succeeded, but when I run my application, I get the following logs using <code>adb logcat</code> and the application crashes.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>I/Timeline( 1715): Timeline: Activity_launch_request id:rust.fantafs time:48384944\nV/ApplicationPolicy( 1184): isApplicationStateBlocked userId 0 pkgname rust.fantafs\nW/ActivityManager( 1184): NORMAL SET : srcAppInfo.processName = com.sec.android.app.launcher, destAppInfo.processName = rust.fantafs\nV/ApplicationPolicy( 1184): isApplicationStateBlocked userId 0 pkgname rust.fantafs\nI/ActivityManager( 1184): Start proc rust.fantafs for activity rust.fantafs/.MainActivity: pid=1008 uid=10228 gids={50228, 9997, 3003, 1028, 1015} abi=armeabi\nE/AndroidRuntime( 1008): Process: rust.fantafs, PID: 1008\nE/AndroidRuntime( 1008): java.lang.RuntimeException: Unable to start activity ComponentInfo{rust.fantafs/rust.fantafs.MainActivity}: java.lang.IllegalArgumentException: Unable to load native library: /data/app/rust.fantafs-1/lib/arm/libmain.so\nE/AndroidRuntime( 1008): Caused by: java.lang.IllegalArgumentException: Unable to load native library: /data/app/rust.fantafs-1/lib/arm/libmain.so\nV/ApplicationPolicy( 1184): isApplicationStateBlocked userId 0 pkgname rust.fantafs\nW/ActivityManager( 1184):   Force finishing activity rust.fantafs/.MainActivity\nV/ApplicationPolicy( 1184): isApplicationStateBlocked userId 0 pkgname rust.fantafs\nW/ActivityManager( 1184): Activity pause timeout for ActivityRecord{1a641bc7 u0 rust.fantafs/.MainActivity t150 f}\nI/ActivityManager( 1184): Process rust.fantafs (pid 1008)(adj 11) has died(77,169)\n</code></pre>\n\n<p>Here's my <strong>main.rs</strong>:</p>\n\n<pre><code>extern crate openssl;\n\nuse openssl::rand::rand_bytes;\n\nfn main() {\n    let mut a: [u8; 5] = [0,1,2,8,6];\n    match rand_bytes(&amp;mut a) {\n        Ok(_) =&gt; println!(\"Success\"),\n        Err(_) =&gt; println!(\"ERR\"),\n    }\n}\n</code></pre>\n"}, {"tags": ["debugging", "macros", "rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1487260294, "post_id": 42277783, "comment_id": 71713621, "body": "Sounds like a bug..."}, {"owner": {"reputation": 8289, "user_id": 391806, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/88a2ea78dadbdaf73e1033fe7cbdeb73?s=128&d=identicon&r=PG", "display_name": "Dale Wilson", "link": "https://stackoverflow.com/users/391806/dale-wilson"}, "edited": false, "score": 0, "creation_date": 1487260722, "post_id": 42277783, "comment_id": 71713995, "body": "Which version of the compiler?"}, {"owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1487261662, "post_id": 42277783, "comment_id": 71714795, "body": "Works for me (<a href=\"https://play.rust-lang.org/?gist=d967ab54cef2fc55e22f1e1546b8dcee&amp;version=stable&amp;backtrace=1\" rel=\"nofollow noreferrer\">playground</a>)"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "reply_to_user": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "edited": false, "score": 0, "creation_date": 1487262359, "post_id": 42277783, "comment_id": 71715334, "body": "@Chris Emerson, confirmed it works in simple case.... and re-confirmed it fails in a more complex test-case, this will take some time to simplify."}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 0, "creation_date": 1487289846, "post_id": 42277783, "comment_id": 71730579, "body": "Update, this is only happening between crates. Edited question and included working example and git repo."}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 73, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1487303294, "creation_date": 1487257952, "last_edit_date": 1487303294, "question_id": 42277783, "link": "https://stackoverflow.com/questions/42277783/how-to-find-the-location-of-a-macros-use-between-crates", "title": "How to find the location of a macro&#39;s use between crates?", "body": "<p>When a macro causes a panic (directly or indirectly) between crates, the line of code from which the macro is used isn't included in the back-trace.</p>\n\n<p>This makes it impossible to know which use of the macro caused the panic.</p>\n\n<p>Meaning, if you have a macro used in many places, you can't find which line of code to focus on.</p>\n\n<p>I ran into this problem because my tests are in a separate directly, and use the code they tests as a crate.</p>\n\n<p><a href=\"https://gitlab.com/ideasman42/test_42277783_report/tree/master\" rel=\"nofollow noreferrer\">Git repository</a> for the example below.</p>\n\n<p><code>tests/tests.rs</code></p>\n\n<pre><code>extern crate test_macro;\n#[test]\nfn main() {\n    let file: Vec&lt;u8&gt; = Vec::new();\n    test_macro::decode_main(&amp;*file).unwrap();\n}\n</code></pre>\n\n<p><code>src/lib.rs</code></p>\n\n<pre><code>use ::std::io;\n\nmacro_rules! read_exact {\n    ($f:expr, $r:expr) =&gt; {\n        io::Read::read_exact($f, $r).unwrap()\n    }\n}\n\nfn decode_blocks&lt;R: io::Read&gt;(mut file: R) -&gt; Result&lt;(), io::Error&gt; {\n    let mut bhead: [u8; 320] = [0; 320];\n    read_exact!(&amp;mut file, &amp;mut bhead);  // &lt;-- this line isn't in the backtrace\n    Ok(())\n}\n\npub fn decode_main&lt;R: io::Read&gt;(mut file: R) -&gt; Result&lt;(), io::Error&gt; {\n    decode_blocks(file)?;\n    Ok(())\n}\n</code></pre>\n\n<p>Calling:</p>\n\n<pre><code>RUST_BACKTRACE=1 cargo test\n</code></pre>\n\n<p>Gives the backtrace:</p>\n\n<pre><code>                        at /buildslave/rust-buildbot/slave/stable-dist-rustc-linux/build/src/libcore/result.rs:737\n  11:     0x562061ffd7da - test_macro::decode_blocks::h391253710f990761\n                        at /src/test_macro/src/lib.rs:5\n  12:     0x562061ffd5ca - test_macro::decode_main::h43b3b33b47640ea4\n                        at /src/test_macro/src/lib.rs:16\n  13:     0x562061fff1ad - tests::main::hc17f25ef21544d0b\n                        at /src/test_macro/tests/tests.rs:5\n  14:     0x56206200d54e - &lt;F as test::FnBox&lt;T&gt;&gt;::call_box::h04563d623b7ebdf9\n</code></pre>\n\n<p>Notice line 11 isn't included.</p>\n\n<hr>\n\n<p>Using Rust stable 1.15. Reported this as bug <a href=\"https://github.com/rust-lang/rust/issues/39894\" rel=\"nofollow noreferrer\">#39894</a>.</p>\n"}, {"tags": ["error-handling", "rust"], "answers": [{"tags": [], "owner": {"reputation": 10655, "user_id": 4529124, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4P3eZ.png?s=128&g=1", "display_name": "Chris Emerson", "link": "https://stackoverflow.com/users/4529124/chris-emerson"}, "is_accepted": false, "score": 7, "last_activity_date": 1544700670, "last_edit_date": 1544700670, "creation_date": 1487253119, "answer_id": 42275876, "question_id": 42275777, "link": "https://stackoverflow.com/questions/42275777/how-to-trace-the-cause-of-an-error-result/42275876#42275876", "title": "How to trace the cause of an error result?", "body": "<p>A result by itself doesn't have any backtrace information, but you can add it to custom error types.</p>\n\n<p>The <a href=\"https://crates.io/crates/error-chain\" rel=\"nofollow noreferrer\">error_chain crate</a> is an example which generates an error type for you, for which you get backtrace generation for free when the <code>RUST_BACKTRACE</code> environment variable is set.</p>\n\n<p>You could also use the <a href=\"https://crates.io/crates/backtrace\" rel=\"nofollow noreferrer\">backtrace</a> library directly and do it yourself.</p>\n"}, {"tags": [], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "is_accepted": false, "score": 4, "last_activity_date": 1599129491, "creation_date": 1599129491, "answer_id": 63721899, "question_id": 42275777, "link": "https://stackoverflow.com/questions/42275777/how-to-trace-the-cause-of-an-error-result/63721899#63721899", "title": "How to trace the cause of an error result?", "body": "<p>If you use <a href=\"https://crates.io/crates/anyhow\" rel=\"nofollow noreferrer\"><code>anyhow</code></a> you can get this for free! The catch is you need to use nightly and enable an environment variable:</p>\n<pre><code>RUST_BACKTRACE=1 cargo +nightly run\n</code></pre>\n<p><a href=\"https://github.com/rust-lang/rust/issues/53487\" rel=\"nofollow noreferrer\">This is the tracking issue for stabilisation</a>, and <a href=\"https://github.com/rust-lang/rust/pull/72981\" rel=\"nofollow noreferrer\">a PR to stabilise it</a>. Looks like there is some disagreement about whether it needs to work in no_std before being stabilised or something like that.</p>\n"}, {"tags": [], "owner": {"reputation": 410, "user_id": 2968044, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1e154edcb237830401dc1ea3f3ff1bc3?s=128&d=identicon&r=PG", "display_name": "comphilip", "link": "https://stackoverflow.com/users/2968044/comphilip"}, "is_accepted": false, "score": 0, "last_activity_date": 1611623311, "creation_date": 1611623311, "answer_id": 65894570, "question_id": 42275777, "link": "https://stackoverflow.com/questions/42275777/how-to-trace-the-cause-of-an-error-result/65894570#65894570", "title": "How to trace the cause of an error result?", "body": "<p>I resolve this requirement with <a href=\"https://crates.io/crates/easy-error\" rel=\"nofollow noreferrer\">easy-error</a> crate, while <a href=\"https://crates.io/crates/error-chain\" rel=\"nofollow noreferrer\">error-chain</a> crate is fine also.</p>\n<p>Use <a href=\"https://docs.rs/easy-error/0.3.1/easy_error/type.Result.html\" rel=\"nofollow noreferrer\">Result</a> defined in <code>easy-error</code> as return type, then use <a href=\"https://docs.rs/easy-error/0.3.1/easy_error/trait.ResultExt.html#tymethod.context\" rel=\"nofollow noreferrer\">context</a> method to convert other <code>Result</code> types.</p>\n<p>Most important thing is to pass information to <code>context</code> method with line number.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use easy_error::{Result, ResultExt};\nuse std::path::PathBuf;\n\nfn test_open() -&gt; Result&lt;()&gt; {\n    let mut p = PathBuf::from(env!(&quot;CARGO_MANIFEST_DIR&quot;));\n    p.push(&quot;resources/test/songs.json&quot;);\n    File::open(p).context(format!(&quot;{}:{}&quot;, file!(), line!()))?;\n    Ok(())\n}\n</code></pre>\n<p>To avoid typing <code>format!(&quot;{}:{}&quot;, file!(), line!())</code> all the time, define a macro:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_export]\nmacro_rules! code_loc {\n    () =&gt; {\n        format!(&quot;{}:{}&quot;, file!(), line!())\n    };\n}\n</code></pre>\n<p>And finally code will be:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>File::open(p).context(code_loc!())?;\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3243, "favorite_count": 1, "answer_count": 3, "score": 18, "last_activity_date": 1611623311, "creation_date": 1487252887, "last_edit_date": 1487255856, "question_id": 42275777, "link": "https://stackoverflow.com/questions/42275777/how-to-trace-the-cause-of-an-error-result", "title": "How to trace the cause of an error result?", "body": "<p>When writing code that uses <code>Result</code> type, you may want different behavior for users and developers.</p>\n\n<ul>\n<li>When writing an application that gracefully handles errors, it's nice to use <code>Result</code>.</li>\n<li>During development you may want to \"catch\" the error to see what line of code creates the error or get a stack-trace the moment the <code>Err</code> value is created.</li>\n</ul>\n\n<p>If you make a unique error it's not hard to search for it, but if the error is from the standard library, the error may be very generic.</p>\n\n<p>For example, it's impossible to know which <code>read</code> command caused an unexpected end-of-file without manually changing every <code>file.read()?</code> to <code>file.read().unwrap()</code>.</p>\n\n<p>Is there a convenient way to get a stack-trace from a <code>Result</code>?</p>\n\n<p>A  weak but workable solution could be to make a macro for reading, <code>read_in_release_unwrap_in_debug!(file, data)</code>... but this feels very awkward.</p>\n\n<hr>\n\n<p>I have a file reader with many <code>read</code> calls and one fails. I'm not sure which. At run-time, I want to push the result back to the caller. For debugging, I want the failed read call to stop or somehow let me know its line number.</p>\n"}, {"tags": ["rust", "string-formatting"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1487247624, "post_id": 42273673, "comment_id": 71703578, "body": "For reference <a href=\"https://doc.rust-lang.org/std/fmt/#syntax\" rel=\"nofollow noreferrer\">the formatting syntax</a>."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1487247718, "post_id": 42273813, "comment_id": 71703638, "body": "Ah nice! I looked at the minimum <code>width</code> parameter in the formatting syntax but didn&#39;t think about using this in conjunction with an empty string."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1487248047, "post_id": 42273813, "comment_id": 71703890, "body": "@MatthieuM. it&#39;s kinda hacky and I don&#39;t really like it... but it works ^_^"}, {"owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "edited": false, "score": 2, "creation_date": 1487248669, "post_id": 42273813, "comment_id": 71704379, "body": "Another answer given on IRC: <code>format!(&quot;{}{}&quot;, format_args!(&quot;{: &gt;1$}&quot;, &quot;&quot;, 4), &quot;*indented* text&quot;)</code>"}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 1, "creation_date": 1511686194, "post_id": 42273813, "comment_id": 81943869, "body": "I can&#39;t get this to work (using 1.21 / nightly) even though it works in the linked playground. Can&#39;t figure out why! Any ideas"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 1, "creation_date": 1511689315, "post_id": 42273813, "comment_id": 81944498, "body": "@AndrewMackenzie What&#39;s the error? And what nightly exactly? I tried it using <code>1.23.0-nightly (45594d5de 2017-11-22)</code>, stable <code>1.22.1</code> and stable <code>1.21.0</code> -&gt; all of those work. Maybe some typo or another error on your side?"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 20, "last_activity_date": 1487262568, "last_edit_date": 1487262568, "creation_date": 1487247641, "answer_id": 42273813, "question_id": 42273673, "link": "https://stackoverflow.com/questions/42273673/how-to-format-strings-with-indentation-based-on-an-integer/42273813#42273813", "title": "How to format strings with indentation based on an integer?", "body": "<pre><code>println!(\"{:indent$}Indented text!\", \"\", indent=indent);\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=49478456d7a0950bce4153f378175d7b&amp;version=stable&amp;backtrace=0\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>The first placeholder does the indentation. It will print the argument 0 (empty string, <code>\"\"</code>) with a padding (with spaces) as specified in argument <code>ident</code>.</p>\n\n<p>Printing a variable can be done like this:</p>\n\n<pre><code>println!(\"{:indent$}{}\", \"\", text_to_indent, indent=level);\n</code></pre>\n"}], "owner": {"reputation": 29662, "user_id": 432509, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/2vl0v.png?s=128&g=1", "display_name": "ideasman42", "link": "https://stackoverflow.com/users/432509/ideasman42"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3545, "favorite_count": 3, "accepted_answer_id": 42273813, "answer_count": 1, "score": 7, "last_activity_date": 1487262568, "creation_date": 1487247287, "last_edit_date": 1487259789, "question_id": 42273673, "link": "https://stackoverflow.com/questions/42273673/how-to-format-strings-with-indentation-based-on-an-integer", "title": "How to format strings with indentation based on an integer?", "body": "<p>Is there a better way to print/format string indentation besides doing:</p>\n\n<pre><code>let text_to_indent = \"Indented text!\";\nfor i in 0..indent {\n    print!(\" \");\n}\nprintln!(\"{}\", text_to_indent);\n</code></pre>\n\n<p>Does Rust have a more convenient way to do this?</p>\n"}, {"tags": ["rust", "unsafe"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 3, "creation_date": 1487239300, "post_id": 42264041, "comment_id": 71697330, "body": "Note: in your proposed implementation, you are leaking the memory allocated by <code>Box</code>."}], "answers": [{"comments": [{"owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "edited": false, "score": 0, "creation_date": 1487215201, "post_id": 42264074, "comment_id": 71685539, "body": "Why did I not try that? The <code>Deref</code> trait appears to return an <code>&amp;T</code>. Do I not understand what the <code>*</code> operator does, or are boxes really just special?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "edited": false, "score": 1, "creation_date": 1487216792, "post_id": 42264074, "comment_id": 71686041, "body": "@Calebmer there&#39;s <a href=\"http://stackoverflow.com/q/31624743/155423\">a difference between <code>*</code> and <code>Deref</code></a>, <b>and</b> boxes are special in this case."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 19, "creation_date": 1487239389, "post_id": 42264074, "comment_id": 71697400, "body": "I wish there was an explicit method instead :("}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1595133292, "post_id": 42264074, "comment_id": 111366150, "body": "Would much code break if an explicit method was added and the special behavior was removed? Can this be changed in an edition?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1595252378, "post_id": 42264074, "comment_id": 111401780, "body": "@JosephGarvin It couldn&#39;t be a <i>method</i> on <code>Box</code>, but you could add an associated function (<code>impl Box { fn whatever(this: Self) -&gt; T }</code>). This could be added immediately if you felt like submitting a PR. <i>Removing</i> the special behavior would likely break far too many things and seems unlikely to be accepted, but potentially possible."}, {"owner": {"reputation": 105, "user_id": 800366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61eea0efe8e63b656460580eaa288af5?s=128&d=identicon&r=PG", "display_name": "tipograf ieromonah", "link": "https://stackoverflow.com/users/800366/tipograf-ieromonah"}, "edited": false, "score": 0, "creation_date": 1607348782, "post_id": 42264074, "comment_id": 115235951, "body": "But when T is a reference to an object trait &amp;dyn T   how can we get the inner concret type ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 105, "user_id": 800366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61eea0efe8e63b656460580eaa288af5?s=128&d=identicon&r=PG", "display_name": "tipograf ieromonah", "link": "https://stackoverflow.com/users/800366/tipograf-ieromonah"}, "edited": false, "score": 1, "creation_date": 1607350936, "post_id": 42264074, "comment_id": 115237113, "body": "@tipografieromonah if you have a reference, you can&#39;t get an owned value. See <a href=\"https://stackoverflow.com/q/28158738/155423\">Cannot move out of borrowed content / cannot move out of behind a shared reference</a>; <a href=\"https://stackoverflow.com/q/28258548/155423\">Cannot move out of borrowed content when trying to transfer ownership</a>. If you want a reference, see <a href=\"https://stackoverflow.com/q/33687447/155423\">How to get a reference to a concrete type from a trait object?</a>; <a href=\"https://stackoverflow.com/q/28632968/155423\">Why doesn&#39;t Rust support trait object upcasting?</a>."}, {"owner": {"reputation": 105, "user_id": 800366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61eea0efe8e63b656460580eaa288af5?s=128&d=identicon&r=PG", "display_name": "tipograf ieromonah", "link": "https://stackoverflow.com/users/800366/tipograf-ieromonah"}, "edited": false, "score": 0, "creation_date": 1607446088, "post_id": 42264074, "comment_id": 115272564, "body": "Thiis one clarified my issue <a href=\"https://stackoverflow.com/questions/33687447/how-to-get-a-reference-to-a-concrete-type-from-a-trait-object\" title=\"how to get a reference to a concrete type from a trait object\">stackoverflow.com/questions/33687447/&hellip;</a>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 69, "last_activity_date": 1606761317, "last_edit_date": 1606761317, "creation_date": 1487214385, "answer_id": 42264074, "question_id": 42264041, "link": "https://stackoverflow.com/questions/42264041/how-do-i-get-an-owned-value-out-of-a-box/42264074#42264074", "title": "How do I get an owned value out of a `Box`?", "body": "<p>Dereference the value:</p>\n<pre><code>fn unbox&lt;T&gt;(value: Box&lt;T&gt;) -&gt; T {\n    *value\n}\n</code></pre>\n<hr />\n<p>Way back in pre-1.0 Rust, heap-allocated values were <em>very special</em> types, and they used the sigil <code>~</code> (as in <code>~T</code>). Along the road to Rust 1.0, most of this special-casing was removed... but not all of it.</p>\n<p>This particular speciality goes by the name &quot;deref move&quot;, and there's a <a href=\"https://github.com/rust-lang/rfcs/issues/997\" rel=\"noreferrer\">proto-RFC</a> about supporting it as a first-class concept. Until then, the answer is &quot;because <code>Box</code> is special&quot;.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/33653946/155423\">Dereferencing Box&lt;T&gt; gives back value instead of reference</a></li>\n</ul>\n"}], "owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 24798, "favorite_count": 8, "accepted_answer_id": 42264074, "answer_count": 1, "score": 48, "last_activity_date": 1606761317, "creation_date": 1487214146, "last_edit_date": 1487214797, "question_id": 42264041, "link": "https://stackoverflow.com/questions/42264041/how-do-i-get-an-owned-value-out-of-a-box", "title": "How do I get an owned value out of a `Box`?", "body": "<p>What is the implementation for this function:</p>\n\n<pre><code>fn unbox&lt;T&gt;(value: Box&lt;T&gt;) -&gt; T {\n    // ???\n}\n</code></pre>\n\n<p>The only function in the documentation that looks like what I want is <code>Box::into_raw</code>. The following will type check:</p>\n\n<pre><code>fn unbox&lt;T&gt;(value: Box&lt;T&gt;) -&gt; T {\n    *value.into_raw()\n}\n</code></pre>\n\n<p>This gives the error <code>error[E0133]: dereference of raw pointer requires unsafe function or block</code>. Wrapping it in an <code>unsafe { ... }</code> block fixes it.</p>\n\n<pre><code>fn unbox&lt;T&gt;(value: Box&lt;T&gt;) -&gt; T {\n    unsafe { *value.into_raw() }\n}\n</code></pre>\n\n<p>Is this the correct implementation? If so, why is it unsafe? What does it mean?</p>\n\n<p>Perhaps this question shows my general uncertainty of how <code>Box</code>s actually work.</p>\n"}]