[{"tags": ["rust", "reference", "operator-overloading"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 3, "creation_date": 1576101860, "post_id": 59294750, "comment_id": 104794063, "body": "Could you provide an example of what you may want to do with this? If it&#39;s not imperative to the question, then solely for my curiosity."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1576102280, "post_id": 59294750, "comment_id": 104794214, "body": "Overloading <code>*</code> is useful to make transparent smart-pointers. Overloading <code>&amp;</code> however is more dubious. What would be the use case? C++ allows that, but it&#39;s considered bad practice."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576105044, "post_id": 59294750, "comment_id": 104795065, "body": "I voted to close as &quot;opinion based&quot; because the only real answer one can give is the somewhat-circular &quot;because the language does not allow it&quot;. Talking about <i>why</i> the language does not allow it is unlikely to be answerable without appealing to opinion, like &quot;it wouldn&#39;t be useful&quot; or &quot;it would be confusing&quot;."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1576105225, "post_id": 59294750, "comment_id": 104795124, "body": "If you have some scenario in mind where overloading <code>&amp;</code> would be desirable, I encourage you to ask about <i>that</i>; it&#39;s likely you are doing something very odd and the resulting answers might be enlightening for more than one of us."}, {"owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576154855, "post_id": 59294750, "comment_id": 104812184, "body": "@trentcl I see where you&#39;re coming from, but I think it&#39;s only opinion-based in so far as any language design choice is down to the opinion of the designers. If someone who knows what the actual thought process was feels like answering, great. If not, that&#39;s fine, I just won&#39;t get an answer"}], "answers": [{"tags": [], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "is_accepted": false, "score": 0, "last_activity_date": 1576170875, "last_edit_date": 1576170875, "creation_date": 1576168278, "answer_id": 59309004, "question_id": 59294750, "link": "https://stackoverflow.com/questions/59294750/why-is-it-not-possible-to-overload-the-reference-operator/59309004#59309004", "title": "Why is it not possible to overload the reference operator (&amp;)?", "body": "<p>Here's a guess ...</p>\n\n<p>For any type <code>T</code>, there are many pointer types: references (shared and exclusive), as well as various smart pointers (<code>Box</code>, <code>Cell</code>, <code>Rc</code> etc.). These can all be dereferenced. That is, dereferencing is many to one, which can be completely defined by a single operator <code>*</code>. Meanwhile, creating a pointer type is one to many, which can't be defined by a single operator <code>&amp;</code>.</p>\n"}], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 114, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1576170875, "creation_date": 1576101598, "last_edit_date": 1576165723, "question_id": 59294750, "link": "https://stackoverflow.com/questions/59294750/why-is-it-not-possible-to-overload-the-reference-operator", "title": "Why is it not possible to overload the reference operator (&amp;)?", "body": "<p>Why is it possible to overload the dereferencing operator <code>*</code> (and implicitly <code>.</code>) using the traits <code>Deref</code> and <code>DerefMut</code>, but it's not possible to overload <code>&amp;</code>?</p>\n\n<p>I'm asking out of curiosity. I don't have a specific use case. I want to understand the asymmetry between <code>&amp;</code> and <code>*</code>. They are so closely related, almost inverses of each other, but only one can be overloaded.</p>\n\n<p>Here's a use case, for those who wanted one. It's quite contrived, and vague. If <code>*</code> accesses the value of a smart pointer, <code>&amp;</code> could create a smart pointer, so that a particular type defaults to a smart pointer not a reference.</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1576088076, "post_id": 59291037, "comment_id": 104788292, "body": "put the if in top and do a match in each arm should save some line"}], "answers": [{"tags": [], "owner": {"reputation": 71, "user_id": 13077143, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb63654d0e902241d08a17f25daadec8?s=128&d=identicon&r=PG&f=1", "display_name": "Konstantin Grech", "link": "https://stackoverflow.com/users/13077143/konstantin-grech"}, "is_accepted": false, "score": 1, "last_activity_date": 1590520914, "creation_date": 1590520914, "answer_id": 62029781, "question_id": 59291037, "link": "https://stackoverflow.com/questions/59291037/how-do-i-conditionally-order-by-a-column-based-on-a-dynamic-parameter-with-diese/62029781#62029781", "title": "How do I conditionally order by a column based on a dynamic parameter with Diesel?", "body": "<p>Given the following schema:</p>\n\n<pre><code>table! {\n    flights (id) {\n        id -&gt; Int4,\n        name -&gt; Text,\n        country -&gt; Text,\n        launch_date -&gt; Timestamptz,\n    }\n}\n</code></pre>\n\n<p>And the following struct containing the sorting options:</p>\n\n<pre><code>pub struct SearchFlight {\n    pub sort: Option&lt;String&gt;,\n    pub sort_dir: Option&lt;String&gt;\n}\n</code></pre>\n\n<p>It is possible to implement the following:</p>\n\n<pre><code>let mut query = flights.into_boxed();\nmatch search.sort.as_ref().map(String::as_str)  {\n    Some(\"name\") =&gt; sort_by_column(query, flights_schema::name, search.sort_dir),\n    Some(\"country\") =&gt; sort_by_column(query, flights_schema::country, search.sort_dir),\n    Some(\"launch_date\") =&gt; sort_by_column(query, flights_schema::launch_date, search.sort_dir),\n    _ =&gt; query\n}\nquery.load_page::&lt;Flight&gt;(con)\n</code></pre>\n\n<p>where sort_by_column if the following function</p>\n\n<pre><code>fn sort_by_column&lt;U: 'static&gt;(mut query: BoxedQuery&lt;'static, Pg&gt;,\n                     column: U,\n                     sort_dir: Option&lt;String&gt;) -&gt; BoxedQuery&lt;'static, Pg&gt;\n    where U: ExpressionMethods + QueryFragment&lt;Pg&gt; + AppearsOnTable&lt;flights_schema::table&gt;{\n    match sort_dir.as_ref().map(String::as_str) {\n        Some(\"asc\") =&gt; query.order_by(column.asc()),\n        Some(\"desc\") =&gt; query.order_by(column.desc()),\n        _ =&gt; query\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1365, "user_id": 1064570, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/82cc1e4dd4fe0c392059fef53666d4bc?s=128&d=identicon&r=PG", "display_name": "artin", "link": "https://stackoverflow.com/users/1064570/artin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 373, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1590520914, "creation_date": 1576084980, "last_edit_date": 1576097822, "question_id": 59291037, "link": "https://stackoverflow.com/questions/59291037/how-do-i-conditionally-order-by-a-column-based-on-a-dynamic-parameter-with-diese", "title": "How do I conditionally order by a column based on a dynamic parameter with Diesel?", "body": "<p>I'm trying to specify different columns for <code>order_by</code> depending on an external parameter.</p>\n\n<p>This works, but is ugly:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate diesel;\n\nuse crate::diesel::prelude::*;\nuse diesel::pg::PgConnection;\n\nmod schema {\n    table! {\n        items (id) {\n            id -&gt; Int4,\n            name -&gt; Text,\n        }\n    }\n}\n\n#[derive(Queryable, Debug)]\npub struct Item {\n    pub id: i32,\n    pub name: String,\n}\n\nfn load_items(conn: PgConnection, sort_prop: String, sort_dir: String) -&gt; Vec&lt;Item&gt; {\n    use schema::items::dsl::*;\n\n    let mut query = items.into_boxed();\n\n    // ugly: duplicating condition by sort_dir and query.order_by() calls\n    query = match sort_prop.as_str() {\n        \"name\" =&gt; {\n            if sort_dir == \"asc\" {\n                query.order_by(name.asc())\n            } else {\n                query.order_by(name.desc())\n            }\n        }\n        _ =&gt; {\n            if sort_dir == \"asc\" {\n                query.order_by(id.asc())\n            } else {\n                query.order_by(id.desc())\n            }\n        }\n    };\n\n    query.load::&lt;Item&gt;(&amp;conn).expect(\"Failed to load items\")\n}\n\nfn main() {}\n</code></pre>\n\n<p>My Cargo.toml has this:</p>\n\n<pre><code>[dependencies]\ndiesel = { version = \"1.4.3\", features = [\"postgres\"] }\n</code></pre>\n\n<p>I want to condition only by column, and not entire query, something like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use schema::items::dsl::*;\n\nlet mut column = match sort_prop.as_str() {\n    \"name\" =&gt; name,\n    _ =&gt; id // error: match arms have incompatible types\n}\n\ncolumn = if sort_dir == \"asc\" {\n    column.asc()\n} else {\n    column.desc()\n}\n\nlet results = items\n    .order_by(column)\n    .load::&lt;Item&gt;(connection)\n    .expect(\"Failed to load items\");\n</code></pre>\n\n<p>Is this possible? Is there any other way to refactor this?</p>\n\n<p>I've read <a href=\"https://stackoverflow.com/q/42557528/155423\">Querying a Diesel table with dynamic parameters</a>, but it's basically about conditioning by the entire query, which is what I'm trying to avoid.</p>\n\n<p>I've also read <a href=\"https://stackoverflow.com/q/48696290/155423\">Creating Diesel.rs queries with a dynamic number of .and()&#39;s</a>, which is about conditioning by filter. This might be close to what I need with <code>order_by</code>, but it's hard for me to apply the <code>BoxableExpression</code> weirdness to my case because there's a lack of good examples for my exact case in the docs and a lack of RLS support for showing any <code>schema::items::dsl::*</code> types in my IDE, so I could scramble through myself.</p>\n"}, {"tags": ["arrays", "vector", "struct", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1576079549, "post_id": 59289331, "comment_id": 104784001, "body": "If you want to do anything that depends on the memory layout of the struct <code>WaveFile</code>, you need to add the <code>#[repr(C)]</code> attribute. The Rust default representation does not make any guarantees about memory layout."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1576079612, "post_id": 59289331, "comment_id": 104784042, "body": "But you are probably better of implementing a parser for the wave file format in <code>nom</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576081604, "post_id": 59289331, "comment_id": 104785154, "body": "One solution from the duplicates <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=eae7f4efd3d006a9b32799eda49a288e\" rel=\"nofollow noreferrer\">applied to your specific case</a>."}], "owner": {"reputation": 84, "user_id": 4667420, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/342e0ef65cd53282272b05d344dc0852?s=128&d=identicon&r=PG&f=1", "display_name": "Glamdring", "link": "https://stackoverflow.com/users/4667420/glamdring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 324, "favorite_count": 1, "closed_date": 1576079805, "answer_count": 0, "score": 1, "last_activity_date": 1576079996, "creation_date": 1576078949, "last_edit_date": 1576079996, "question_id": 59289331, "link": "https://stackoverflow.com/questions/59289331/how-do-i-map-data-from-a-vector-of-bytes-to-a-structure-in-rust", "closed_reason": "Duplicate", "title": "How do I map data from a vector of bytes to a structure in Rust?", "body": "<p>I'm writing a program to manipulate wave audio files. I'd like to have a data structure to represent the file header and I implemented it the following way:</p>\n\n<pre><code>struct WaveFile {\n    riff:               [u8; 4], //Marks the file as riff file, value should be: \"RIFF\"\n    file_size:          u32,     //Size of the overall file\n    wave:               [u8; 4], //File Type Header. Always should equal \"WAVE\"\n    format:             [u8; 4], //Format chunk marker, sample value: \"fmt\" with null termination character\n    format_len:         u32,     //Length of format data (should be 16 bytes as above)\n    format_type:        [u8; 2], //1 - PCM, 3 - IEEE float, 6 - 8bit A law, 7 - 8bit mu law\n    num_of_channels:    [u8; 2], // Number of Channels\n    sample_rate:        [u8; 4], //Sample Rate in Hz\n    byte_rate:          [u8; 4], // bytes per second of recording (Sample Rate * BitsPerSample * Channels) / 8\n    audio_type:         [u8; 2],  //1 - 8bit mono, 2 - 8bit stereo / 16bit mono, 4 - 16bit stereo\n    bits_per_sample:    [u8; 2], //Bits per sample\n    data:               [u8; 4], // Sample value: \u201cdata\u201d - data chunk header. Marks the beginning of the data section.\n    size_of_data:       [u8; 4], //Size of data section\n}\n</code></pre>\n\n<p>I've also got a vector with data read from the file. These are snippets of code to show you the data structures I use: </p>\n\n<pre><code>struct MyFile {\n    content: fs::File,\n    metadata: fs::Metadata,\n}\n\nlet mut audio_file = MyFile {\n    content: fs::File::open(\"gitarka_C3.wav\").expect(\"Couldn't open a file.\"),\n    metadata: fs::metadata(\"gitarka_C3.wav\").expect(\"Couldn't get file metadata\"),\n};\n\nlet mut file_data = Vec::new();\n\naudio_file\n    .content\n    .read_to_end(&amp;mut file_data)\n    .expect(\"Couldn't copy file contents to vector\");\n</code></pre>\n\n<p>Now that I have my vector of data and a structure describing the wave file header, I'd like to read data from the vector and write it to the structure.</p>\n\n<ol>\n<li>Can I copy the first 44 bytes of the vector to the 44 byte chunk of memory allocated for my <code>WaveFile</code> structure? I'd like to avoid copying the data from vector to structure field by field. </li>\n<li>Is there a better way to create a human readable data structure describing the header? I know in C I could create macros defining specific offsets and sizes and use a simple array (which would solve the copying problem).</li>\n</ol>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576067922, "post_id": 59285835, "comment_id": 104777249, "body": "Please search before you post a question; many questions about using modules has been asked and answered on here. To apply the answer to the other question: you need <code>mod routes;</code> in main.rs, <i>as well as</i> <code>use super::routes;</code> in server.rs."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1576068034, "post_id": 59285835, "comment_id": 104777304, "body": "Also see <a href=\"https://stackoverflow.com/questions/30677258/how-do-i-import-from-a-sibling-module\">How do I import from a sibling module?</a> and <a href=\"https://stackoverflow.com/q/55868434/3650362\">Why can&#39;t I import module from different file in same directory?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "is_accepted": true, "score": 1, "last_activity_date": 1576072017, "last_edit_date": 1576072017, "creation_date": 1576067509, "answer_id": 59285910, "question_id": 59285835, "link": "https://stackoverflow.com/questions/59285835/how-to-use-modules-from-another-directory/59285910#59285910", "title": "How to use modules from another directory?", "body": "<p>In your <code>main.rs</code> you've to load the module first.</p>\n\n<pre><code>mod routes;\n\nfn main() {\n}\n</code></pre>\n\n<p>In your <code>server.rs</code> just use</p>\n\n<pre><code>use crate::routes;\n</code></pre>\n"}], "owner": {"reputation": 131, "user_id": 9018487, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-LQrZmtYn09k/AAAAAAAAAAI/AAAAAAAADfY/C3A7MMlUMe8/photo.jpg?sz=128", "display_name": "Piotr P\u0142aczek", "link": "https://stackoverflow.com/users/9018487/piotr-p%c5%82aczek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "closed_date": 1576074928, "accepted_answer_id": 59285910, "answer_count": 1, "score": -2, "last_activity_date": 1576074999, "creation_date": 1576067275, "last_edit_date": 1576074999, "question_id": 59285835, "link": "https://stackoverflow.com/questions/59285835/how-to-use-modules-from-another-directory", "closed_reason": "Duplicate", "title": "How to use modules from another directory?", "body": "<p>I have a Rust project with the structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.lock\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 routes\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 mod.rs\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 router_get.rs\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 router_post.rs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.rs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.rs\n</code></pre>\n\n<p>I need to use the routes module in <code>server.rs</code>, but when I am trying to compile it, it gives me an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `super::routes`\n  --&gt; src/server.rs:10:5\n   |\n10 | use super::routes;\n   |     ^^^^^^^^^^ no `routes` in the root\n</code></pre>\n\n<p>When I try use <code>routes</code> in <code>main.rs</code> with <code>mod routes</code>, everything is ok. But I need to use it in <code>server.rs</code>.</p>\n\n<p>routes/mod.rs</p>\n\n<pre><code>pub mod router_get;\npub mod router_post;\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576075316, "post_id": 59284570, "comment_id": 104781508, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions), types, traits, fields, etc. are present in the code. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59284570/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 29, "user_id": 8401495, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cbYs1.jpg?s=128&g=1", "display_name": "cpbscholten", "link": "https://stackoverflow.com/users/8401495/cpbscholten"}, "is_accepted": false, "score": 1, "last_activity_date": 1576075362, "last_edit_date": 1576075362, "creation_date": 1576063628, "answer_id": 59284798, "question_id": 59284570, "link": "https://stackoverflow.com/questions/59284570/rust-compiler-does-not-expect-a-mutable-reference-where-a-mutable-reference-shou/59284798#59284798", "title": "Rust compiler does not expect a mutable reference where a mutable reference should be expected", "body": "<p>Changing the <code>&amp;mut match</code> to <code>match &amp;mut</code> solved the problems:</p>\n\n<pre><code>pub fn find_parent(&amp;mut self, age: &amp;i32, name: &amp;String) -&gt; &amp;mut Option&lt;Box&lt;Node&gt;&gt; {\n    match &amp;mut self.root {\n        Some(node) =&gt; {\n            if node.name == *name &amp;&amp; node.age == *age {\n                &amp;mut self.root\n            } else {\n                SortedContainer::node_find_parent(&amp;mut self.root, &amp;age, &amp;name)\n            }\n        }\n        None =&gt; &amp;mut None,\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 8401495, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cbYs1.jpg?s=128&g=1", "display_name": "cpbscholten", "link": "https://stackoverflow.com/users/8401495/cpbscholten"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 2, "answer_count": 1, "score": 0, "last_activity_date": 1576075362, "creation_date": 1576062880, "last_edit_date": 1576075308, "question_id": 59284570, "link": "https://stackoverflow.com/questions/59284570/rust-compiler-does-not-expect-a-mutable-reference-where-a-mutable-reference-shou", "title": "Rust compiler does not expect a mutable reference where a mutable reference should be expected", "body": "<p>We are writing a function to erase a node from a sorted tree in Rust, but are stuck with the Rust compiler complaining that it expects no mutable reference when the called function does need a mutable reference:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n   --&gt; src/tree.rs:111:17\n    |\n111 |                 SortedContainer::node_find_parent(&amp;mut Some(node), &amp;age, &amp;name)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected enum `std::option::Option`, found mutable reference\n    |\n    = note: expected type `std::option::Option&lt;std::boxed::Box&lt;tree::Node&gt;&gt;`\n               found type `&amp;mut std::option::Option&lt;std::boxed::Box&lt;tree::Node&gt;&gt;`\n</code></pre>\n\n<p>This is our code snippet in the impl block of SortedContainer (Our tree structure):</p>\n\n<pre><code>fn node_find_parent&lt;'a&gt;(parent_option: &amp;'a mut Option&lt;Box&lt;Node&gt;&gt;, age: &amp;i32, name: &amp;String) -&gt; &amp;'a mut Option&lt;Box&lt;Node&gt;&gt; {\n    // TODO: implement\n    parent_option\n}\n\npub fn find_parent(&amp;mut self, age: &amp;i32, name: &amp;String) -&gt; &amp;mut Option&lt;Box&lt;Node&gt;&gt; {\n    &amp;mut match self.root {\n        Some(node) =&gt; if node.name == *name &amp;&amp; node.age == *age {\n            self.root\n        } else {\n            SortedContainer::node_find_parent(&amp;mut Some(node), &amp;age, &amp;name)\n        }\n        None =&gt; &amp;mut None,\n    }\n}\n</code></pre>\n\n<p>The <code>SortedContainer::node_find_parent</code> should return a mutable reference, since the return type is a mutable reference  </p>\n\n<p>What are we are doing wrong?</p>\n"}, {"tags": ["rust", "stm32"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1576056486, "post_id": 59282423, "comment_id": 104771130, "body": "Don&#39;t break on <code>main</code>, but <code>break *0x8000000</code>, so you will start at the entry point. From there you can step and see where the fault occurs"}, {"owner": {"reputation": 2449, "user_id": 4730685, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e8d2d8e67d9c0443c382d1dd80132063?s=128&d=identicon&r=PG&f=1", "display_name": "Erlkoenig", "link": "https://stackoverflow.com/users/4730685/erlkoenig"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 4, "creation_date": 1576056664, "post_id": 59282423, "comment_id": 104771241, "body": "@hellow But <code>0x08000000</code> is <i>not</i> the start address - it <i>contains</i> the the initial stack pointer! Break at the reset handler. The problem might result from wrong settings in the linker script, whereby <code>__sbss</code> and friends receive wrong addresses. Also, if the CCM is initialized, it needs to be enabled first. Please show the linker script and startup code and the output of <code>disas</code> and <code>info reg</code> and <code>bt</code> and <code>x&#47;16xw $sp</code> and <code>x&#47;16xw 0x08000000</code> during the crash."}, {"owner": {"reputation": 38430, "user_id": 429063, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3fd38783123814dee889d28c991e56fb?s=128&d=identicon&r=PG", "display_name": "Chris Stratton", "link": "https://stackoverflow.com/users/429063/chris-stratton"}, "edited": false, "score": 2, "creation_date": 1576083189, "post_id": 59282423, "comment_id": 104785987, "body": "Indeed, this looks like something like using a linker script for a chip variant with a greater amount of RAM or similar broken setup.  The <i>address of</i> the reset routine is stored at 0x08000004 - it&#39;s the first true vector in the vector table after the initial stack pointer in the zeroeth position."}, {"owner": {"reputation": 61, "user_id": 8219207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fff7172a23260775e218e8e9c4947270?s=128&d=identicon&r=PG&f=1", "display_name": "keyel80", "link": "https://stackoverflow.com/users/8219207/keyel80"}, "reply_to_user": {"reputation": 38430, "user_id": 429063, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3fd38783123814dee889d28c991e56fb?s=128&d=identicon&r=PG", "display_name": "Chris Stratton", "link": "https://stackoverflow.com/users/429063/chris-stratton"}, "edited": false, "score": 0, "creation_date": 1576186547, "post_id": 59282423, "comment_id": 104827946, "body": "Thank you, @Chris Stratton. You gave the right hint. In fact I believed in the &quot;256K RAM&quot; advertisement  for my chip (STM32F429) and was not aware of the fragmented memory map. Changing the line (in file memory.x) <code>RAM : ORIGIN = 0x20000000, LENGTH = 256K</code> into <code>RAM : ORIGIN = 0x20000000, LENGTH = 192K</code> solved my problem"}, {"owner": {"reputation": 38430, "user_id": 429063, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3fd38783123814dee889d28c991e56fb?s=128&d=identicon&r=PG", "display_name": "Chris Stratton", "link": "https://stackoverflow.com/users/429063/chris-stratton"}, "edited": false, "score": 0, "creation_date": 1576191708, "post_id": 59282423, "comment_id": 104829615, "body": "You should post that as an answer so that this can be resolved.  Incidentally the remainder turns out to be core coupled memory at 0x1000 0000"}], "owner": {"reputation": 61, "user_id": 8219207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fff7172a23260775e218e8e9c4947270?s=128&d=identicon&r=PG&f=1", "display_name": "keyel80", "link": "https://stackoverflow.com/users/8219207/keyel80"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 269, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1576056328, "creation_date": 1576056164, "last_edit_date": 1576056328, "question_id": 59282423, "link": "https://stackoverflow.com/questions/59282423/rust-stm32f4-hardfault-while-initialize-ram", "title": "Rust STM32F4 HardFault while Initialize RAM", "body": "<p><strong>System:</strong></p>\n\n<ul>\n<li>Win10 </li>\n<li>VS Code </li>\n<li>rustc 1.39.0 (4560ea788 2019-11-04)</li>\n</ul>\n\n<p>and:</p>\n\n<pre><code>[dependencies]\ncortex-m = \"0.6.0\"\ncortex-m-rt = \"0.6.10\"\ncortex-m-semihosting = \"0.3.3\"\npanic-halt = \"0.2.0\"\n</code></pre>\n\n<p><strong>Description</strong></p>\n\n<p>I followed the steps described in <a href=\"https://rust-embedded.github.io/book/start/hardware.html\" rel=\"nofollow noreferrer\">https://rust-embedded.github.io/book/start/hardware.html</a></p>\n\n<p>I got the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>PS C:\\stm32\\rustspace\\test002&gt; cargo build --example hello\n    Finished dev [unoptimized + debuginfo] target(s) in 0.05s\nPS C:\\stm32\\rustspace\\test002&gt; arm-none-eabi-gdb -q .\\target\\thumbv7em-none-eabihf\\debug\\examples\\hello\nReading symbols from .\\target\\thumbv7em-none-eabihf\\debug\\examples\\hello...\n(gdb) target remote :3333\nRemote debugging using :3333\ncore::fmt::Formatter::pad () at src/libcore/fmt/mod.rs:1285\n1285    src/libcore/fmt/mod.rs: No such file or directory.\n(gdb) load\nLoading section .vector_table, size 0x400 lma 0x8000000\nLoading section .text, size 0x152c lma 0x8000400\nLoading section .rodata, size 0x5c0 lma 0x8001930\nStart address 0x8001490, load size 7916\nTransfer rate: 11 KB/sec, 2638 bytes/write.\n(gdb) monitor arm semihosting enable\nsemihosting is enabled\n(gdb) break main\nBreakpoint 1 at 0x8000444: file examples\\hello.rs, line 11.\n(gdb) continue\nContinuing.\nNote: automatically using hardware breakpoints for read-only addresses.\n\nProgram received signal SIGINT, Interrupt.\n0x0800191e in HardFault_ (ef=0x0) at C:\\Users\\Klaus Liebler\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cortex-m-rt-0.6.11\\src\\lib.rs:555\n555             atomic::compiler_fence(Ordering::SeqCst);\n</code></pre>\n\n<p>Further debugging revealed, that the Hard Fault happens when executing these lines in lib.rs</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Initialize RAM\nr0::zero_bss(&amp;mut __sbss, &amp;mut __ebss);\nr0::init_data(&amp;mut __sdata, &amp;mut __edata, &amp;__sidata);\n</code></pre>\n\n<p>What can I do?</p>\n"}, {"tags": ["rust", "async-await", "udp", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "edited": false, "score": 0, "creation_date": 1576074521, "post_id": 59287082, "comment_id": 104781034, "body": "thats what I&#39;m looking for to explain the error, thanks. Your fix will compile, but it also changes the behaviour. I don&#39;t want a blocking call in the while loop. Is there a better way to share the <code>SendHalf</code> of my socket across tasks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "edited": false, "score": 0, "creation_date": 1576075958, "post_id": 59287082, "comment_id": 104781848, "body": "@createproblem just to make sure everyone is on the same page, which call are you saying is blocking?"}, {"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576092295, "post_id": 59287082, "comment_id": 104790117, "body": "@Shepmaster <code>socket.send_to(&amp;packet.buf, &amp;packet.addr).await.unwrap();</code> this is blocking, because the while loop will not process until the data is sent. Not?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "edited": false, "score": 0, "creation_date": 1576092432, "post_id": 59287082, "comment_id": 104790170, "body": "@createproblem no, that line is not blocking; that&#39;s the entire point of futures and the <code>async</code> / <code>.await</code> syntax. The code will not execute past that line until the send is complete, but other async tasks may still make progress \u2014 nothing is <b>blocked</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576092502, "post_id": 59287082, "comment_id": 104790196, "body": "That being said, <code>Mutex::lock</code> <b>is blocking</b> and will prevent <i>all</i> tasks from continuing. Generally, you want to reduce the usage of such types (ideally to zero) in async code."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 5, "last_activity_date": 1576130811, "last_edit_date": 1592644375, "creation_date": 1576071535, "answer_id": 59287082, "question_id": 59280296, "link": "https://stackoverflow.com/questions/59280296/why-does-tokiomain-report-the-error-cycle-detected-when-processing/59287082#59287082", "title": "Why does `tokio::main` report the error &quot;cycle detected when processing&quot;?", "body": "<p>According to <code>tokio</code> documentation, when it comes to <a href=\"https://docs.rs/tokio/0.2.4/tokio/fn.spawn.html#using-send-values-from-a-task\" rel=\"nofollow noreferrer\">using <code>!Send</code> value from a task</a>:</p>\n<blockquote>\n<p>Holding on to a <code>!Send</code> value across calls to <code>.await</code> will result in an unfriendly compile error message similar to:</p>\n<p><code>[... some type ...] cannot be sent between threads safely</code></p>\n<p>or:</p>\n<p><code>error[E0391]: cycle detected when processing main</code></p>\n</blockquote>\n<p>You are witnessing this exact error. When you <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Mutex.html#method.lock\" rel=\"nofollow noreferrer\">lock a <code>Mutex</code></a>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn lock(&amp;self) -&gt; LockResult&lt;MutexGuard&lt;T&gt;&gt;\n</code></pre>\n<p>it returns a <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.MutexGuard.html\" rel=\"nofollow noreferrer\"><code>MutexGuard</code></a>, which is <code>!Send</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'_, T: ?Sized&gt; !Send for MutexGuard&lt;'_, T&gt;\n</code></pre>\n<hr />\n<p>This compiles fine:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[tokio::main]\nasync fn main() {\n    ...\n\n    while let Some(packet) = rx.recv().await {\n        let mut socket = packet.sender.lock().unwrap();\n        socket.send_to(&amp;packet.buf, &amp;packet.addr).await.unwrap();\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1580109772, "post_id": 59924624, "comment_id": 105975516, "body": "Please, your solution being different doesn&#39;t make my answer wrong. It addressed the root cause and provided a way out. Also do the common courtesy of reading the comments before downvoting."}, {"owner": {"reputation": 1256, "user_id": 541401, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0dae30569556c4f47a5277e8957f1960?s=128&d=identicon&r=PG", "display_name": "Mark Mandel", "link": "https://stackoverflow.com/users/541401/mark-mandel"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1580232674, "post_id": 59924624, "comment_id": 106027401, "body": "I respectfully disagree. The original poster wanted the data to be sent without blocking the loop from continuing. My solution solves that problem -- or at the very least maintains the spirit of the code -- unfortunately yours does not.  That being said, your solution does answer the &quot;why&quot; part of the question appropriately, which is extremely valuable."}], "tags": [], "owner": {"reputation": 1256, "user_id": 541401, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0dae30569556c4f47a5277e8957f1960?s=128&d=identicon&r=PG", "display_name": "Mark Mandel", "link": "https://stackoverflow.com/users/541401/mark-mandel"}, "is_accepted": false, "score": -1, "last_activity_date": 1580092479, "creation_date": 1580092479, "answer_id": 59924624, "question_id": 59280296, "link": "https://stackoverflow.com/questions/59280296/why-does-tokiomain-report-the-error-cycle-detected-when-processing/59924624#59924624", "title": "Why does `tokio::main` report the error &quot;cycle detected when processing&quot;?", "body": "<p>I just ran into a very similar issue (I was using <code>RwLock</code> vs <code>Mutex</code>, but the structure is almost exactly the same). I wanted to process each UDP packet asynchronously, rather than waiting to process before reading another packet, like some other solutions here.</p>\n\n<p>The change I made to solve the problem was to use <code>tokio::sync::*</code> synchronisation Structs, rather than the ones from <code>std</code>. So in your case, switch out <code>std::sync::Mutex</code> to <code>tokio::sync::Mutex</code> (and switch your <code>.unwrap()</code> to <code>.await</code>), and you should be okay. (<a href=\"https://doc.rust-lang.org/std/sync/index.html#structs\" rel=\"nofollow noreferrer\">Documentation</a>)</p>\n\n<p>I made the changes to your playground, and it is compiling now:\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b6114a12a5f784a38a595bc521f6f02\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b6114a12a5f784a38a595bc521f6f02</a></p>\n\n<p>(Also much thanks to the Tokio Slack for providing the answer to me when I had the same question. Just passing it along).</p>\n"}], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 642, "favorite_count": 0, "accepted_answer_id": 59287082, "answer_count": 2, "score": 3, "last_activity_date": 1580092479, "creation_date": 1576047379, "last_edit_date": 1576075888, "question_id": 59280296, "link": "https://stackoverflow.com/questions/59280296/why-does-tokiomain-report-the-error-cycle-detected-when-processing", "title": "Why does `tokio::main` report the error &quot;cycle detected when processing&quot;?", "body": "<p>I'm using Tokio and <code>async</code>/<code>.await</code> to create an UDP server where I can receive and send data in an asynchronous way. </p>\n\n<p>The <code>SendHalf</code> of my UDP socket is shared across more than one task. To do this I\u2019m using <code>Arc&lt;Mutex&lt;SendHalf&gt;&gt;</code>. That's why <code>Arc&lt;Mutex&lt;_&gt;&gt;</code> exists.</p>\n\n<pre><code>use tokio::net::UdpSocket;\nuse tokio::net::udp::SendHalf;\nuse tokio::sync::mpsc;\nuse std::sync::{Arc, Mutex};\nuse std::net::SocketAddr;\n\nstruct Packet {\n    sender: Arc&lt;Mutex&lt;SendHalf&gt;&gt;,\n    buf: [u8; 512],\n    addr: SocketAddr,\n}\n\n#[tokio::main]\nasync fn main() {\n    let server = UdpSocket::bind((\"0.0.0.0\", 44667)).await.unwrap();\n    let (mut server_rx, mut server_tx) = server.split();\n    let sender = Arc::new(Mutex::new(server_tx));\n    let (mut tx, mut rx) = mpsc::channel(100);\n\n    tokio::spawn(async move {\n        loop {\n            let mut buffer = [0; 512];\n            let (_, src) = server_rx.recv_from(&amp;mut buffer).await.unwrap();\n            let packet = Packet {\n                sender: sender.clone(),\n                buf: buffer,\n                addr: src,\n            };\n            tx.send(packet).await;\n        }\n    });\n\n    while let Some(packet) = rx.recv().await {\n        tokio::spawn(async move {\n            let mut socket = packet.sender.lock().unwrap();\n            socket.send_to(&amp;packet.buf, &amp;packet.addr).await.unwrap();\n        });\n    }\n}\n</code></pre>\n\n<p>Here is also a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8ef94f7da10413677d07834b8cab9489\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n\n<p>I'm facing a compiler error that I don't understand:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0391]: cycle detected when processing `main`\n  --&gt; src/main.rs:13:1\n   |\n13 | #[tokio::main]\n   | ^^^^^^^^^^^^^^\n   |\nnote: ...which requires processing `main::{{closure}}#0::{{closure}}#1`...\n  --&gt; src/main.rs:34:33\n   |\n34 |           tokio::spawn(async move {\n   |  _________________________________^\n35 | |             let mut socket = packet.sender.lock().unwrap();\n36 | |             socket.send_to(&amp;packet.buf, &amp;packet.addr).await.unwrap();\n37 | |         });\n   | |_________^\n   = note: ...which again requires processing `main`, completing the cycle\nnote: cycle used when processing `main::{{closure}}#0`\n  --&gt; src/main.rs:13:1\n   |\n13 | #[tokio::main]\n   | ^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Why is my code producing a cycle? Why does the call require processing <code>main</code>?  </p>\n\n<p>What does the error mean in more detail? I want to understand whats going on.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1576056241, "post_id": 59279404, "comment_id": 104771001, "body": "Please use your <i>favorite search engine</i>. This has been asked multiple times and has even discussed in the book: <a href=\"https://rust-lang-nursery.github.io/rust-cookbook/file/read-write.html\" rel=\"nofollow noreferrer\">rust-lang-nursery.github.io/rust-cookbook/file/read-write.ht&zwnj;&#8203;ml</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "is_accepted": false, "score": 0, "last_activity_date": 1576050532, "creation_date": 1576050532, "answer_id": 59281015, "question_id": 59279404, "link": "https://stackoverflow.com/questions/59279404/rust-how-to-take-input-from-a-file-and-compute-it/59281015#59281015", "title": "Rust: How to take input from a file and compute it?", "body": "<p>If you want your code to compile.</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufRead, BufReader, Error};\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let path = \"input.txt\";\n\n    let input = File::open(path)?;\n    let buffered = BufReader::new(input);\n\n    for line in buffered.lines() {\n        println!(\"{:?}\", line.unwrap().parse::&lt;i32&gt;().unwrap() / 2);\n    }\n\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12313755, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qby1GdALrEU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reVXgQ8CkAF8cX44GM995hgNMLg4w/photo.jpg?sz=128", "display_name": "William Vandrake", "link": "https://stackoverflow.com/users/12313755/william-vandrake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 0, "closed_date": 1576076369, "answer_count": 1, "score": -3, "last_activity_date": 1576052059, "creation_date": 1576042366, "last_edit_date": 1576052059, "question_id": 59279404, "link": "https://stackoverflow.com/questions/59279404/rust-how-to-take-input-from-a-file-and-compute-it", "closed_reason": "Duplicate", "title": "Rust: How to take input from a file and compute it?", "body": "<p>I just need to find a way to work with input to do simple maths with it. I've been trying this for a couple of days for the <a href=\"https://adventofcode.com/2019/day/1\" rel=\"nofollow noreferrer\">advent of code 2019 day 1</a></p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufRead, BufReader, Error};\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let path = \"input.txt\";\n\n    let input = File::open(path)?;\n    let buffered = BufReader::new(input);\n\n    for line in buffered.lines() {\n        line.parse::&lt;i32&gt;().unwrap();\n        line / 2;\n        println!(\"{:?}\", line);\n    }\n\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["rust", "traits", "trait-objects"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1576034673, "last_edit_date": 1576034673, "creation_date": 1576032172, "answer_id": 59278165, "question_id": 59278033, "link": "https://stackoverflow.com/questions/59278033/is-there-a-way-to-store-a-random-number-generator-as-a-trait-object/59278165#59278165", "title": "Is there a way to store a random number generator as a trait object?", "body": "<p>You want to use <a href=\"https://docs.rs/rand/0.7.2/rand/trait.RngCore.html\" rel=\"nofollow noreferrer\"><code>RngCore</code></a> for your trait object, not <a href=\"https://docs.rs/rand/0.7.2/rand/trait.Rng.html\" rel=\"nofollow noreferrer\"><code>Rng</code></a>:</p>\n\n<pre><code>use rand::{Rng, RngCore, SeedableRng}; // 0.7.2\nuse rand_chacha::ChaCha20Rng; // 0.2.1\n\nfn main() {\n    let mut rng: Box&lt;dyn RngCore&gt;;\n\n    rng = Box::new(rand::thread_rng());\n    for _ in 0..10 {\n        println!(\"{}\", rng.gen::&lt;f64&gt;());\n    }\n\n    println!();\n\n    rng = Box::new(ChaCha20Rng::seed_from_u64(42));\n    for _ in 0..10 {\n        println!(\"{}\", rng.gen::&lt;f64&gt;());\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28219519/155423\">Are polymorphic variables allowed?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39412626/155423\">Unable to create a polymorphic type because the trait cannot be made into an object</a></li>\n<li><a href=\"https://stackoverflow.com/q/45116984/155423\">The trait cannot be made into an object</a></li>\n<li><a href=\"https://stackoverflow.com/q/44096235/155423\">Understanding Traits and Object Safety</a></li>\n<li><a href=\"https://stackoverflow.com/q/48218459/155423\">How do I generate a vector of random numbers in a range?</a> </li>\n</ul>\n\n<h3>Other points</h3>\n\n<ul>\n<li><p><code>rand::SeedableRng::seed_from_u64</code> doesn't make any sense because you have never specified a concrete type to implement the trait object.</p></li>\n<li><blockquote>\n  <p>Purely random numbers</p>\n</blockquote>\n\n<p>Both generators are pseudo-random number generators and produce the same kind of numbers; one isn't \"more random\" than the other. </p></li>\n</ul>\n"}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 534, "favorite_count": 1, "accepted_answer_id": 59278165, "answer_count": 1, "score": 3, "last_activity_date": 1576034673, "creation_date": 1576030990, "last_edit_date": 1576032200, "question_id": 59278033, "link": "https://stackoverflow.com/questions/59278033/is-there-a-way-to-store-a-random-number-generator-as-a-trait-object", "title": "Is there a way to store a random number generator as a trait object?", "body": "<p>Is there a way to hold a generic random number generator in Rust?  I'd like a way to write a generic piece of code such as:</p>\n\n<pre><code>use rand::Rng; // 0.7.2\n\nfn main() {\n    // Purely random numbers on the interval 0 to 1\n    println!(\"Pure random\");\n    let mut rng: Box&lt;dyn rand::Rng&gt; = Box::new(rand::thread_rng());\n    for i in 0..10 {\n        println!(\"{}\", rng.gen::&lt;f64&gt;());\n    }\n    println!(\"\");\n\n    // On a seed\n    *rng = rand::SeedableRng::seed_from_u64(0);\n    for i in 0..10 {\n        println!(\"{}\", rng.gen::&lt;f64&gt;());\n    }\n    println!(\"\");\n}\n</code></pre>\n\n<p>The variable <code>rng</code> holds different kinds of random number generators using a seed or otherwise.  However, there's a whole host of errors with this code such as:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `rand::Rng` cannot be made into an object\n --&gt; src/main.rs:6:18\n  |\n6 |     let mut rng: Box&lt;dyn rand::Rng&gt; = Box::new(rand::thread_rng());\n  |                  ^^^^^^^^^^^^^^^^^^ the trait `rand::Rng` cannot be made into an object\n  |\n  = note: method `gen` has generic type parameters\n  = note: method `gen_range` has generic type parameters\n  = note: method `sample` has generic type parameters\n  = note: method `fill` has generic type parameters\n  = note: method `try_fill` has generic type parameters\n</code></pre>\n\n<p>As such, what's the correct way to hold a random number generator so that it can be replaced with another?  Basically, I would like to generate purely random numbers, but then replace the generator with one using a seed for debugging purposes.</p>\n"}, {"tags": ["rust", "release", "rust-cargo"], "comments": [{"owner": {"reputation": 133, "user_id": 4129587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6212f1f530613edcfbaff1001d4894e7?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Mildenberger", "link": "https://stackoverflow.com/users/4129587/philipp-mildenberger"}, "edited": false, "score": 0, "creation_date": 1576030762, "post_id": 59277384, "comment_id": 104762787, "body": "Interesting, even <code>#[cfg(not(debug_assertions))]</code> (or similar) in <code>build.rs</code> isn&#39;t working. Something like: <code>[profile.release] build = &quot;build.rs&quot;</code> isn&#39;t working either"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1576030863, "post_id": 59277384, "comment_id": 104762807, "body": "Welcome to Stack Overflow! It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/57296104/155423\">How to access current cargo profile (debug/release, \u2026) from the build script (build.rs)</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59277384/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1576058290, "post_id": 59277384, "comment_id": 104772123, "body": "Depending on your use case, you may be able to make runs of <code>build.rs</code> less frequent by emitting <code>rerun-if-changed=PATH</code> lines."}, {"owner": {"reputation": 238, "user_id": 12514910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff0fe9584f42e283b74057404669c574?s=128&d=identicon&r=PG&f=1", "display_name": "zxvaf", "link": "https://stackoverflow.com/users/12514910/zxvaf"}, "edited": false, "score": 0, "creation_date": 1576143868, "post_id": 59277384, "comment_id": 104806182, "body": "My question seeks to minimize the time taken to get compiler messages during development, \\\\"}, {"owner": {"reputation": 238, "user_id": 12514910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff0fe9584f42e283b74057404669c574?s=128&d=identicon&r=PG&f=1", "display_name": "zxvaf", "link": "https://stackoverflow.com/users/12514910/zxvaf"}, "edited": false, "score": 0, "creation_date": 1576144796, "post_id": 59277384, "comment_id": 104806712, "body": "Thanks, Shepmaster.  Here&#39;s what is different about this question."}, {"owner": {"reputation": 238, "user_id": 12514910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff0fe9584f42e283b74057404669c574?s=128&d=identicon&r=PG&f=1", "display_name": "zxvaf", "link": "https://stackoverflow.com/users/12514910/zxvaf"}, "edited": false, "score": 0, "creation_date": 1576147309, "post_id": 59277384, "comment_id": 104808220, "body": "The question is how to reduce edit-compile-error-messages delay.    rerun_if_changed_path(&quot;path/file&quot;) has a far smaller delay than &quot;if profile.as_str() == &quot;release&quot;.&quot;  Thanks very much to Sven Marnach. There is additional example code for rerun_if_changed_path here: <a href=\"https://crates.io/crates/build-deps\" rel=\"nofollow noreferrer\">crates.io/crates/build-deps</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 1, "last_activity_date": 1576149024, "creation_date": 1576149024, "answer_id": 59303254, "question_id": 59277384, "link": "https://stackoverflow.com/questions/59277384/is-it-possible-to-invoke-a-build-rs-only-for-release-mode/59303254#59303254", "title": "Is it possible to invoke a build.rs only for release mode?", "body": "<p>You can use this build script. <code>Cargo</code> passes <code>PROFILE</code> environment variable to <code>rustc</code> invokation, which can be used to determinate active profile.</p>\n\n<pre><code>// build.rs\nuse std::env;\n\npub fn main() {\n    if Ok(\"release\".to_owned()) == env::var(\"PROFILE\") {\n        panic!(\"I'm only panicking in release mode\")\n    }\n}\n\n</code></pre>\n"}], "owner": {"reputation": 238, "user_id": 12514910, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff0fe9584f42e283b74057404669c574?s=128&d=identicon&r=PG&f=1", "display_name": "zxvaf", "link": "https://stackoverflow.com/users/12514910/zxvaf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 0, "accepted_answer_id": 59303254, "answer_count": 1, "score": 3, "last_activity_date": 1576149024, "creation_date": 1576025035, "last_edit_date": 1576030887, "question_id": 59277384, "link": "https://stackoverflow.com/questions/59277384/is-it-possible-to-invoke-a-build-rs-only-for-release-mode", "title": "Is it possible to invoke a build.rs only for release mode?", "body": "<p>In a Rust crate, is it possible to invoke a build.rs only for release mode? </p>\n\n<p>One can specify it in Cargo.toml:</p>\n\n<pre><code>[package]\nbuild = \"build.rs\"\n</code></pre>\n\n<p>The issue is, for development, it delays the beginning of compiling the crate's sources. The <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">Cargo guide</a> doesn't seem to offer such an option. </p>\n"}, {"tags": ["rust", "actix-web"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576031161, "post_id": 59276996, "comment_id": 104762872, "body": "See also <a href=\"https://stackoverflow.com/q/59255498/155423\">Does actix_web&#39;s App::register_data create a single instance or one instance per thread?</a>; <a href=\"https://stackoverflow.com/q/56117273/155423\">Actix-Web reports \u201cApp data is not configured\u201d when processing a file upload</a>"}], "answers": [{"comments": [{"owner": {"reputation": 4099, "user_id": 938782, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rl9JN.jpg?s=128&g=1", "display_name": "roim", "link": "https://stackoverflow.com/users/938782/roim"}, "edited": false, "score": 0, "creation_date": 1616985724, "post_id": 59521179, "comment_id": 118164837, "body": "Note that then you don\u2019t need <code>Arc</code>: <a href=\"https://docs.rs/actix-web/3.1.0/actix_web/web/struct.Data.html\" rel=\"nofollow noreferrer\">docs.rs/actix-web/3.1.0/actix_web/web/struct.Data.html</a>"}, {"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "reply_to_user": {"reputation": 4099, "user_id": 938782, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rl9JN.jpg?s=128&g=1", "display_name": "roim", "link": "https://stackoverflow.com/users/938782/roim"}, "edited": false, "score": 0, "creation_date": 1617780432, "post_id": 59521179, "comment_id": 118398337, "body": "@roim That&#39;s probably new in actix-web 3?"}], "tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": true, "score": 4, "last_activity_date": 1577636755, "creation_date": 1577636755, "answer_id": 59521179, "question_id": 59276996, "link": "https://stackoverflow.com/questions/59276996/why-does-my-shared-actix-web-state-sometimes-reset-back-to-the-original-value/59521179#59521179", "title": "Why does my shared actix-web state sometimes reset back to the original value?", "body": "<p><code>HttpServer::new</code> takes a closure which is called for each thread that runs the server. This means that multiple instances of <code>AppState</code> is created, one for each thread. Depending on which thread answers the HTTP request, you will get different instances of <code>data</code> and therefor different counter values.</p>\n\n<p>To prevent this from happening, create <code>web::Data&lt;AppState&gt;</code> outside the closure and use a cloned reference inside the <code>HttpServer::new</code> closure. </p>\n"}], "owner": {"reputation": 667, "user_id": 8448348, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/855c234f7351c596287c174e0a08cc22?s=128&d=identicon&r=PG&f=1", "display_name": "HelloWorld", "link": "https://stackoverflow.com/users/8448348/helloworld"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 630, "favorite_count": 0, "accepted_answer_id": 59521179, "answer_count": 1, "score": 3, "last_activity_date": 1577636755, "creation_date": 1576021707, "last_edit_date": 1576031067, "question_id": 59276996, "link": "https://stackoverflow.com/questions/59276996/why-does-my-shared-actix-web-state-sometimes-reset-back-to-the-original-value", "title": "Why does my shared actix-web state sometimes reset back to the original value?", "body": "<p>I'm trying to implement shared state in the Actix-Web framework with <code>Arc</code> and <code>Mutex</code>. The following code compiles, but when I run it, the counter sometimes goes all the way back to 0. How do I prevent that from happening?</p>\n\n<pre><code>use actix_web::{web, App, HttpServer};\nuse std::sync::{Arc, Mutex};\n\n// This struct represents state\nstruct AppState {\n    app_name: String,\n    counter: Arc&lt;Mutex&lt;i64&gt;&gt;,\n}\n\nfn index(data: web::Data&lt;AppState&gt;) -&gt; String {\n    let mut counter = data.counter.lock().unwrap();\n    *counter += 1;\n    format!(\"{}\", counter)\n}\n\npub fn main() {\n    HttpServer::new(|| {\n        App::new()\n            .hostname(\"hello world\")\n            .register_data(web::Data::new(AppState {\n                app_name: String::from(\"Actix-web\"),\n                counter: Arc::new(Mutex::new(0)),\n            }))\n            .route(\"/\", web::get().to(index))\n    })\n    .bind(\"127.0.0.1:8088\")\n    .unwrap()\n    .run()\n    .unwrap();\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1576091100, "last_edit_date": 1576091100, "creation_date": 1576053702, "answer_id": 59281764, "question_id": 59276657, "link": "https://stackoverflow.com/questions/59276657/generic-type-for-types-implementing-trait-or-dereferencing-to-trait/59281764#59281764", "title": "Generic type for types implementing trait or dereferencing to trait", "body": "<p>You may want to </p>\n\n<pre><code>impl&lt;T: std::ops::Deref&lt;Target = dyn TheTrait&gt;&gt; TheTrait for T\n</code></pre>\n\n<p>This allows you to write:</p>\n\n<pre><code>trait TheTrait {\n    fn foo(&amp;self) -&gt; ();\n}\n\n// \"Direct\" implementation\nstruct Implements {}\nimpl TheTrait for Implements {\n    fn foo(&amp;self) {\n        println!(\"Implements::foo\")\n    }\n}\n\n// \"Proxy\" implementation\nstruct DerefsTo {\n    implements: Implements,\n}\nimpl std::ops::Deref for DerefsTo {\n    type Target = dyn TheTrait;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        return &amp;self.implements;\n    }\n}\n\nimpl&lt;T: std::ops::Deref&lt;Target = dyn TheTrait&gt;&gt; TheTrait for T {\n    fn foo(&amp;self) {\n        self.deref().foo() // forward call\n    }\n}\n\nfn main() -&gt; () {\n    let x1: Box&lt;dyn TheTrait&gt; = Box::new(Implements {});\n    let x1_2: Box&lt;dyn TheTrait&gt; = Box::new(Implements {});\n    let x2: Box&lt;dyn TheTrait&gt; = Box::new(DerefsTo {\n        implements: Implements {},\n    });\n    let x3: Box&lt;dyn TheTrait&gt; = Box::new(x1_2);\n    let vec = vec![x1, x2, x3];\n    for x in vec {\n        x.foo();\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1576091100, "creation_date": 1576019324, "question_id": 59276657, "link": "https://stackoverflow.com/questions/59276657/generic-type-for-types-implementing-trait-or-dereferencing-to-trait", "title": "Generic type for types implementing trait or dereferencing to trait", "body": "<p>I'm looking for a way to create collection of trait objects.\nHowever I would like to accept either objects that implements given trait, or objects that wraps and dereferences to a trait.</p>\n\n<pre><code>trait TheTrait {\n   // fn foo() -&gt; ();\n}\n\n// \"Direct\" implementation\nstruct Implements {}\nimpl TheTrait for Implements {}\n\n// \"Proxy\" implementation\nstruct DerefsTo {\n    implements: Implements,\n}\nimpl std::ops::Deref for DerefsTo {\n    type Target = dyn TheTrait;\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        return &amp;self.implements;\n    }\n}\n\nfn main() -&gt; () {\n    let x1: Box&lt;dyn TheTrait&gt; = Box::new(Implements {}); // This is fine\n    let x2: Box&lt;dyn TheTrait&gt; = Box::new(DerefsTo {implements: Implements {}}); // Trait TheTrait not implemented\n    let x3: Box&lt;dyn TheTrait&gt; = Box::new(x1); // Trait TheTrait not implemented\n\n    // Put x1, x2, x3 to collection, call foo\n}\n\n</code></pre>\n\n<p>Is there any way to do this, possibly without touching <code>Implements</code> type?\nIs there any generic way to implement a trait by exposing a field that implements it, for example for \"wrapper\" types?</p>\n"}, {"tags": ["rust", "closures", "traits", "trait-objects"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1576012838, "post_id": 59275423, "comment_id": 104758048, "body": "&quot;<code>FnOnce</code> closures must be boxed&quot; this <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#language-4\" rel=\"nofollow noreferrer\">has been possible since 1.35.0 (2019-05-23)</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1576013659, "post_id": 59275423, "comment_id": 104758338, "body": "See also <a href=\"https://stackoverflow.com/q/30411594/155423\">\u201ccannot move a value of type FnOnce\u201d when moving a boxed function</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1576013770, "post_id": 59275423, "comment_id": 104758380, "body": "It&#39;s rather unclear what you are asking. The code you have provided <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f3fd06fc369f80e835e1db4898591432\" rel=\"nofollow noreferrer\">compiles fine</a> \u2014 what exactly are you attempting to demonstrate with it? Are you asking if there&#39;s some way of passing a <code>FnOnce</code> closure via dynamic dispatch without using a <code>Box</code> (and presumably not with another kind of heap-allocation)?"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1576013689, "last_edit_date": 1576013689, "creation_date": 1576012913, "answer_id": 59275536, "question_id": 59275423, "link": "https://stackoverflow.com/questions/59275423/how-to-pass-a-closure-via-dynamic-dispatch-in-an-object-safe-method/59275536#59275536", "title": "How to pass a closure via dynamic dispatch in an object-safe method?", "body": "<p>You can pass it without using <code>Box</code>:</p>\n\n<pre><code>fn pass_fn_once(do_thing: &amp;dyn FnOnce()) {\n    //do_thing();\n}\n\nfn main() {\n    pass_fn_once(&amp;|| println!(\"Hello!\"));\n}\n</code></pre>\n\n<p>However, you won't be able to actually call <code>do_thing</code> in <code>pass_fn_once</code>, since it is only borrowed - <a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"nofollow noreferrer\">calling an <code>FnOnce</code> consumes it</a>.</p>\n\n<p>If they are <code>Box</code>ed, you can be sure that <code>pass_fn_once</code> took ownership so that the closure can be thrown away afterwards.</p>\n"}, {"tags": [], "owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "is_accepted": false, "score": 1, "last_activity_date": 1576014100, "last_edit_date": 1576014100, "creation_date": 1576014026, "answer_id": 59275774, "question_id": 59275423, "link": "https://stackoverflow.com/questions/59275423/how-to-pass-a-closure-via-dynamic-dispatch-in-an-object-safe-method/59275774#59275774", "title": "How to pass a closure via dynamic dispatch in an object-safe method?", "body": "<p><code>Fn</code> and <code>FnMut</code> closures can be passed by reference, as follows. <code>FnOnce</code> can be <em>passed</em> by reference but not <em>called</em> unless it is <em>owned</em>, e.g. by a <code>Box</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn pass_fn(get_num: &amp;dyn Fn() -&gt; i32) {\n    let _num = get_num();\n}\n\nfn pass_fn_mut(set_num: &amp;mut dyn FnMut(i32)) {\n    set_num(6);\n}\n\nfn pass_fn_once(do_thing: Box&lt;dyn FnOnce()&gt;) {\n    do_thing();\n}\n\nfn main() {\n    pass_fn(&amp;|| 2);\n\n    let mut x = 1;\n    pass_fn_mut(&amp;mut |y| x = y);\n\n    pass_fn_once(Box::new(|| println!(\"Hello!\")));\n}\n</code></pre>\n"}], "owner": {"reputation": 8176, "user_id": 314345, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/d2c8b7c25f4cd87a65001a2f952c0008?s=128&d=identicon&r=PG", "display_name": "dhardy", "link": "https://stackoverflow.com/users/314345/dhardy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1576014146, "creation_date": 1576012358, "last_edit_date": 1576014146, "question_id": 59275423, "link": "https://stackoverflow.com/questions/59275423/how-to-pass-a-closure-via-dynamic-dispatch-in-an-object-safe-method", "title": "How to pass a closure via dynamic dispatch in an object-safe method?", "body": "<p>How do you pass a closure to an object-safe trait method or otherwise via dynamic dispatch?</p>\n\n<p>I have <a href=\"https://stackoverflow.com/a/59275774/155423\">answered this myself</a>, but the answer leaves something wanting: <code>FnOnce</code> closures must be boxed since they are not sized and must be consumed on use (thus cannot be passed by reference).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1575999842, "post_id": 59272670, "comment_id": 104752643, "body": "Hi there! Unfortunately, your question is a bit hard to understand. What do you mean by &quot;cycle back&quot;? What is this <code>V.move[0]</code> syntax supposed to do? Where is the <code>.cycle()</code> method from? Do I understand you correct in that you want to &quot;rotate&quot; the vector? I.e. put the last element at the start? Please <a href=\"https://stackoverflow.com/posts/59272670/edit\">edit</a> your question to clarify these things. Then we can answer :)"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1575999877, "post_id": 59272670, "comment_id": 104752661, "body": "Look at the <code>rotate_right</code> and <code>rotate_left</code> methods. If I understand your question correctly then they do exactly what you&#39;re looking for."}, {"owner": {"reputation": 147, "user_id": 12513149, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38031c36d567e9c85cd36ba562bf7d3c?s=128&d=identicon&r=PG&f=1", "display_name": "xEgoist", "link": "https://stackoverflow.com/users/12513149/xegoist"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1576000443, "post_id": 59272670, "comment_id": 104752914, "body": "@interjay That&#39;s exactly what i am looking for. Thanks for your reply."}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 13, "last_activity_date": 1576002784, "last_edit_date": 1576002784, "creation_date": 1576000428, "answer_id": 59272896, "question_id": 59272670, "link": "https://stackoverflow.com/questions/59272670/how-do-i-shift-the-elements-inside-a-rust-vector-to-the-right-and-put-the-out-of/59272896#59272896", "title": "How do I shift the elements inside a Rust vector to the right and put the out-of-bounds element at the beginning?", "body": "<p>You are looking for <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.rotate_right\" rel=\"noreferrer\"><code>[T]::rotate_right</code></a> and <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.rotate_left\" rel=\"noreferrer\"><code>[T]::rotate_left</code></a>. Example (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2b37821b720c1072a30ce061abd851ec\" rel=\"noreferrer\">Playground</a>):</p>\n\n<pre><code>let mut v = vec![1, 2, 3, 4, 5];\nv.rotate_right(1);\nprintln!(\"{:?}\", v);\n</code></pre>\n\n<p>This outputs:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[5, 1, 2, 3, 4]\n</code></pre>\n\n<p>If you find yourself calling <code>rotate_*</code> a lot, you should consider using a different data structures, as those methods are linear time operations. See <a href=\"https://stackoverflow.com/a/59273079/2408867\">this answer</a>, for example.</p>\n"}, {"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 9, "last_activity_date": 1576001230, "creation_date": 1576001230, "answer_id": 59273079, "question_id": 59272670, "link": "https://stackoverflow.com/questions/59272670/how-do-i-shift-the-elements-inside-a-rust-vector-to-the-right-and-put-the-out-of/59273079#59273079", "title": "How do I shift the elements inside a Rust vector to the right and put the out-of-bounds element at the beginning?", "body": "<p><a href=\"https://doc.rust-lang.org/std/collections/struct.VecDeque.html\" rel=\"noreferrer\"><code>VecDeque</code></a> is a collection similar to a <code>Vec</code> but optimized for adding/removing elements at either end. Just like slices, it has <code>rotate_{left,right}</code> methods, but those are more efficient than <code>Vec</code>'s (<code>O(min(mid, len() - mid))</code> time for <code>VecDeque</code>, vs. <code>O(len())</code> time for <code>Vec</code>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::VecDeque;\n\nfn main() {\n    let mut v = (1..6).collect::&lt;VecDeque&lt;_&gt;&gt;();\n    v.rotate_right(1);\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d136c96ddb0e1003c6732bf2187bf0bb\" rel=\"noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 147, "user_id": 12513149, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/38031c36d567e9c85cd36ba562bf7d3c?s=128&d=identicon&r=PG&f=1", "display_name": "xEgoist", "link": "https://stackoverflow.com/users/12513149/xegoist"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2015, "favorite_count": 2, "accepted_answer_id": 59272896, "answer_count": 2, "score": 7, "last_activity_date": 1576002784, "creation_date": 1575999334, "last_edit_date": 1576001941, "question_id": 59272670, "link": "https://stackoverflow.com/questions/59272670/how-do-i-shift-the-elements-inside-a-rust-vector-to-the-right-and-put-the-out-of", "title": "How do I shift the elements inside a Rust vector to the right and put the out-of-bounds element at the beginning?", "body": "<p>I am trying to move the elements in a vector to the right and then place the out of bounds element back at the beginning; a rotation of the vector. </p>\n\n<p>This is pseudocode to move the first element in the vector 1 step. Since the vector is only 5 elements, the <code>5</code> goes back to the start of the vector:</p>\n\n<pre><code>let V = vec![1, 2, 3, 4, 5];\nA = V.move[0].cycle();\nA = [5, 1, 2, 3, 4];\n</code></pre>\n\n<p>The <code>A = V.move[0].cycle();</code> is my attempt at this, but since Rust doesn't rotate if the index is out of bounds, it can be hard to implement. </p>\n\n<p>In Python, it's possible to use the <code>pop</code> function with lists:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>&gt;&gt;&gt;m = [1, 2, 3, 4, 5]\n&gt;&gt;&gt;m += [m.pop(0)]\n&gt;&gt;&gt;m\n[2, 3, 4, 5, 1]\n</code></pre>\n\n<p>Using a for loop, it's possible to shift all elements to be <code>[5, 1, 2, 3, 4]</code>. Is there an equivalent to the <code>pop</code> function in Rust? \nIt would even be better if there is a function to shift elements all together.</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1575991982, "post_id": 59270277, "comment_id": 104748414, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/30177395/155423\">When does a closure implement Fn, FnMut and FnOnce?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59270277/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1575991763, "post_id": 59270406, "comment_id": 104748311, "body": "your answer is not clear, I don&#39;t see why you talk about storing thing, this closure auto implement fnmut because its capture a mutable reference and to call it you need to borrow it as mutable <a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html#tymethod.call_mut\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ops/trait.FnMut.html#tymethod.call_mut</a> but actually nothing prevent this function to implement FnOnce like this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1e96ed8833737d1feb696fe4b35dab4c\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575992123, "post_id": 59270406, "comment_id": 104748514, "body": "@Stargateur: I talked about storing things, because that seems to be what the OP was confused about."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1575994159, "post_id": 59270406, "comment_id": 104749739, "body": "<i>since that reference is mutable, the closure needs to be mutable</i> \u2014 that&#39;s not quite accurate (or it&#39;s at least imprecise). <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ef7499d0c31615405d11f49fd113a9c7\" rel=\"nofollow noreferrer\">Here&#39;s an example</a> with a closure that captures a mutable reference but doesn&#39;t need to be mutable itself."}], "tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": false, "score": -1, "last_activity_date": 1575993721, "last_edit_date": 1575993721, "creation_date": 1575991149, "answer_id": 59270406, "question_id": 59270277, "link": "https://stackoverflow.com/questions/59270277/when-do-i-need-to-make-a-closure-variable-mutable/59270406#59270406", "title": "When do I need to make a closure variable mutable?", "body": "<p>You have the situation exactly backwards. Returning a value does not require storing anything in the closure. Capturing, on the other hand, does require storing something in the closure. In your case, <code>y</code> needs to store a reference to <code>x</code>. And since that reference is mutable, the closure needs to be mutable.</p>\n\n<p>Here you can see the difference in size between a closure that returns something (but captures nothing) and a closure that captures, and a closure that captures even more things.</p>\n\n<pre><code>fn main() {\n    let mut a = 1;\n    let mut b = 1;\n    let mut c = 1;\n\n    let small = || {\n        return 10;\n    };\n\n    let mut bigger = || {\n        a = a + 1;\n    };\n\n    let mut biggest = || {\n        b = b + 1;\n        c = c + 1;\n    };\n\n    small();\n    bigger();\n    biggest();\n\n    println!(\"{}, {}, {}\",\n        std::mem::size_of_val(&amp;small),\n        std::mem::size_of_val(&amp;bigger),\n        std::mem::size_of_val(&amp;biggest)\n    );\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>0, 8, 16\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f48399e830f6a6e597338114ea30a409\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f48399e830f6a6e597338114ea30a409</a></p>\n\n<p>And for completeness, here is a closure that captures a value, but doesn't mutate it. You can see that it doesn't need to be mutable.</p>\n\n<pre><code>fn main() {\n    let x = 1;\n    let y = || x;\n    println!(\"{}, {}\", y(), std::mem::size_of_val(&amp;y));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 8, "last_activity_date": 1576071940, "last_edit_date": 1576071940, "creation_date": 1575996745, "answer_id": 59272055, "question_id": 59270277, "link": "https://stackoverflow.com/questions/59270277/when-do-i-need-to-make-a-closure-variable-mutable/59272055#59272055", "title": "When do I need to make a closure variable mutable?", "body": "<p>Essentially, this is a consequence of one of Rust's soundness rules \u2013 you can't modify anything through a shared reference to a mutable reference. All the references in your chain of references need to be mutable for this to be possible.</p>\n\n<p>Let's translate the closure in your example into roughly equivalent code using a struct:</p>\n\n<pre><code>struct Closure&lt;'a&gt; {\n    x: &amp;'a mut i32,\n}\n\nimpl Closure&lt;'_&gt; {\n    fn call(&amp;mut self) {\n        *self.x += 1;\n    }\n}\n</code></pre>\n\n<p>The closure captures <code>x</code> by mutable reference \u2013 it has to to be able to modify it. When the closure is called, it receives <code>self</code> by mutable reference \u2013 it has to to be able to mutate <code>x</code> through the <code>self</code> pointer.</p>\n\n<p>Now if you want to call this closure, you need to make it mutable as well:</p>\n\n<pre><code>let mut x = 1;\nlet mut y = Closure { x: &amp;mut x };\ny.call();\n</code></pre>\n\n<p>If you don't make <code>y</code> mutable, you can't pass a mutable reference to <code>y</code> to the <code>call()</code> method.</p>\n\n<p>The reason for the soundness rule mentioned at the beginning is easy to see: If you could mutate through a shared reference to a mutable reference, it would be easy to write code with multiple players holding mutable references to the same memory location, which violates one of the fundamental rules about Rust references.</p>\n"}], "owner": {"reputation": 1384, "user_id": 10240085, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HBxgL.jpg?s=128&g=1", "display_name": "Muhammad Naufil", "link": "https://stackoverflow.com/users/10240085/muhammad-naufil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "closed_date": 1607103869, "answer_count": 2, "score": 2, "last_activity_date": 1576071940, "creation_date": 1575990668, "last_edit_date": 1575991929, "question_id": 59270277, "link": "https://stackoverflow.com/questions/59270277/when-do-i-need-to-make-a-closure-variable-mutable", "closed_reason": "Duplicate", "title": "When do I need to make a closure variable mutable?", "body": "<p>Why do I need to make this closure variable mutable? The closure isn't returning anything, therefore nothing is being stored in the closure variable. This closure is only capturing a value from the environment and incrementing it.</p>\n\n<pre><code>fn main() {\n    let mut x = 1;\n    let mut y = || x = x + 1;\n    y();\n    println!(\"{}\", x);\n}\n</code></pre>\n"}, {"tags": ["casting", "rust", "slice"], "comments": [{"owner": {"reputation": 1632, "user_id": 2115619, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e900cac2280abc17b7c26fe6a613b840?s=128&d=identicon&r=PG", "display_name": "Mihail Malostanidis", "link": "https://stackoverflow.com/users/2115619/mihail-malostanidis"}, "edited": false, "score": 0, "creation_date": 1605657838, "post_id": 59268253, "comment_id": 114717698, "body": "&gt; Casting between two integers of the same size (e.g. i32 -&gt; u32) is a no-op <a href=\"https://doc.rust-lang.org/reference/expressions/operator-expr.html#semantics\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/expressions/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 3, "last_activity_date": 1575988090, "creation_date": 1575988090, "answer_id": 59269459, "question_id": 59268253, "link": "https://stackoverflow.com/questions/59268253/how-do-i-cast-a-slice-of-unsigned-integers-to-signed-integers-of-the-same-size/59269459#59269459", "title": "How do I cast a slice of unsigned integers to signed integers of the same size?", "body": "<p>Your code is as zero cost as it can be already. But it has to use unsafe code underneath because not all kinds of slice conversions are guaranteed to be safe by the compiler when done through <code>slice::from_parts</code> or <code>mem::transmute</code>. Whichever \"safe\" function is suitable here would likely enclose that while ensuring that the item types are compatible with this conversion (i.e. same size and memory alignment).</p>\n\n<p>You may be able to find multiple crates which proper testing and maintenance for this conversion. The crate <a href=\"https://crates.io/crates/safe-transmute\" rel=\"nofollow noreferrer\"><code>safe-transmute</code></a> implements this conversion, while supporting more bound guards and alignment checks (disclaimer: I'm one of the collaborators).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use safe_transmute::transmute_many_pedantic;\n\nlet value: &amp;[u8] = &amp;[0x00, 0x01, 0x12, 0x24, 0x00];\nlet words: &amp;[i8] = transmute_many_pedantic(values)?;\n</code></pre>\n"}], "owner": {"reputation": 1315, "user_id": 2619501, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/5a2e73ec1d18119524fc602c747b0dfe?s=128&d=identicon&r=PG", "display_name": "benjumanji", "link": "https://stackoverflow.com/users/2619501/benjumanji"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 222, "favorite_count": 0, "accepted_answer_id": 59269459, "answer_count": 1, "score": 2, "last_activity_date": 1617805259, "creation_date": 1575984241, "last_edit_date": 1575988090, "question_id": 59268253, "link": "https://stackoverflow.com/questions/59268253/how-do-i-cast-a-slice-of-unsigned-integers-to-signed-integers-of-the-same-size", "title": "How do I cast a slice of unsigned integers to signed integers of the same size?", "body": "<p>My best current effort is </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// `value` is a `&amp;[u8]`\nlet v = unsafe { slice::from_raw_parts(value.as_ptr() as *const i8, value.len()) };\n</code></pre>\n\n<p>It seems overkill to need <code>unsafe</code> for this. I'd like this to be zero cost.</p>\n"}, {"tags": ["vector", "rust", "iterator", "traits", "itertools"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 6, "creation_date": 1575983662, "post_id": 59267842, "comment_id": 104743459, "body": "With std iter : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=50c0cc820c1ac3b244a3138d2f141407\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1575983891, "post_id": 59267842, "comment_id": 104743572, "body": "@&#214;merErden And soon, when <code>IntoIter</code> is implemented for arrays, you won&#39;t need the weird <code>once</code> chaining :)"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1575984179, "post_id": 59267842, "comment_id": 104743736, "body": "@FrenchBoiethios I wish tuples had <code>IntoIter</code> implementation, until then let&#39;s just stick to this <code>.flat_map(|(x, y)| vec![x,y])</code> :P"}, {"owner": {"reputation": 47, "user_id": 3741483, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/77yhl.png?s=128&g=1", "display_name": "Ecumene", "link": "https://stackoverflow.com/users/3741483/ecumene"}, "edited": false, "score": 0, "creation_date": 1575984950, "post_id": 59267842, "comment_id": 104744189, "body": "Well done, thanks Omer!"}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 7, "last_activity_date": 1575993477, "last_edit_date": 1575993477, "creation_date": 1575983209, "answer_id": 59267929, "question_id": 59267842, "link": "https://stackoverflow.com/questions/59267842/how-do-i-interlace-two-rust-vectors-into-a-new-vector/59267929#59267929", "title": "How do I interlace two Rust vectors into a new vector?", "body": "<p>Using <a href=\"https://docs.rs/itertools/0.8.2/itertools/fn.interleave.html\" rel=\"nofollow noreferrer\"><code>interleave()</code></a> function or <a href=\"https://docs.rs/itertools/0.8.2/itertools/trait.Itertools.html#method.interleave\" rel=\"nofollow noreferrer\"><code>interleave()</code></a> method from <a href=\"https://crates.io/crates/itertools\" rel=\"nofollow noreferrer\">Itertools</a> crate:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use itertools::{interleave, Itertools};\n\nfn main() {\n    let v1 = vec![1.0, 2.0, 3.0];\n    let v2 = vec![4.0, 5.0, 6.0];\n    let v = interleave(v1, v2).collect::&lt;Vec&lt;_&gt;&gt;();\n    dbg!(v);\n\n    let v1 = vec![1.0, 2.0, 3.0];\n    let v2 = vec![4.0, 5.0, 6.0];\n    let v = v1\n        .into_iter()\n        .interleave(v2.into_iter())\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n    dbg!(v);\n}\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 3741483, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/77yhl.png?s=128&g=1", "display_name": "Ecumene", "link": "https://stackoverflow.com/users/3741483/ecumene"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "accepted_answer_id": 59267929, "answer_count": 1, "score": 2, "last_activity_date": 1575993477, "creation_date": 1575982898, "last_edit_date": 1575988913, "question_id": 59267842, "link": "https://stackoverflow.com/questions/59267842/how-do-i-interlace-two-rust-vectors-into-a-new-vector", "title": "How do I interlace two Rust vectors into a new vector?", "body": "<p>I need an idiomatic way to interlace these two vectors:</p>\n\n<pre><code>v1 = vec![1.0, 2.0, 3.0];\nv2 = vec![4.0, 5.0, 6.0];\n</code></pre>\n\n<p>The output I expect is:</p>\n\n<pre><code>v3 is [1.0, 4.0, 2.0, 5.0, 3.0, 6.0];\n</code></pre>\n\n<p>I attempted using itertool's <code>interlace</code> function, but I can't get the iterators to collect to <code>Vec</code> types. It's likely I'm using them wrong.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 2, "creation_date": 1575980431, "post_id": 59266854, "comment_id": 104741584, "body": "<code>NORefCell::borrow_mut()</code>takes <code>&amp;mut self</code>, which requires a <code>DerefMut</code> on the <code>Rc</code> in which it is wrapped. This won&#39;t work because <code>Rc</code> does not give mutable references just by asking nicely (you need it to check if the reference count is exactly one, otherwise there would be multiple mutable borrows). <code>borrow_mut</code> has to take <code>&amp;self</code> instead of <code>&amp;mut self</code>."}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 4, "creation_date": 1575982913, "post_id": 59266854, "comment_id": 104743071, "body": "As a general comment, be aware that you are building an automated foot-removal-gun with integrated self-triggering."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575983503, "post_id": 59266854, "comment_id": 104743382, "body": "There&#39;s no point in having <code>NORef</code> and <code>NORefMut</code> if they don&#39;t have <code>Drop</code> glue; you may as well just return <code>&amp;T</code> and <code>&amp;mut T</code>. Which is technically safe, since <code>borrow_mut</code> takes <code>&amp;mut self</code>, but if you change that the footgun comes into play."}, {"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1575985318, "post_id": 59266854, "comment_id": 104744421, "body": "@user2722968 I mainly did this just for fun and to understand how specific rust concepts and patterns work. I wont necessarily use it in production! But yes, you are right."}], "answers": [{"comments": [{"owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 0, "creation_date": 1575994505, "post_id": 59270009, "comment_id": 104749961, "body": "Shouldn&#39;t it be safe - in theory - if I have good (integration) test coverage with <code>RefCell</code> and no panic is thrown, that I &quot;safely&quot; can replace <code>RefCell</code> by <code>NORefCell</code>?"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "reply_to_user": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "edited": false, "score": 1, "creation_date": 1575996666, "post_id": 59270009, "comment_id": 104751153, "body": "I&#39;d say No. The potential problems are with the users of <code>NORefCell</code>, not it&#39;s implementation. Notice that your wrapper is essentially a very long way of <a href=\"https://doc.rust-lang.org/src/core/cell.rs.html#1539\" rel=\"nofollow noreferrer\">saying</a> <code>... as *const T as *mut T</code>. There are absolutely no safeguards from this point on and the compiler will <i>not</i> tell you about potential problems. Unrelated to <code>Cell</code>, see <a href=\"https://github.com/libra/libra/pull/1949\" rel=\"nofollow noreferrer\">here</a> for an example of how things can get very ugly very quickly with raw pointers. So IMHO it&#39;s not worth the negligible performance gain."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 3, "last_activity_date": 1575991000, "last_edit_date": 1575991000, "creation_date": 1575989762, "answer_id": 59270009, "question_id": 59266854, "link": "https://stackoverflow.com/questions/59266854/borrow-mut-on-my-refcell-like-structure-doesnt-work/59270009#59270009", "title": "borrow_mut() on my RefCell-like structure doesn&#39;t work", "body": "<p><code>NORefCell::borrow_mut()</code> takes <code>&amp;mut self</code>, which requires a <code>DerefMut</code> on the <code>Rc</code> in which it is wrapped. This won't work because <code>Rc</code> does not give mutable references just by asking nicely (you need it to check if the reference count is exactly one, otherwise there would be multiple mutable borrows).</p>\n\n<p><code>borrow_mut</code> has to take <code>&amp;self</code> instead of <code>&amp;mut self</code>.</p>\n\n<hr>\n\n<p>As mentioned in my comment: What you are basically doing is providing a safe-looking abstraction around an <code>UnsafeCell</code>. This is incredibly dangerous. Notice the docs regarding <code>UnsafeCell</code>:</p>\n\n<blockquote>\n  <p>The compiler makes optimizations based on the knowledge that &amp;T is not mutably aliased or mutated, and that &amp;mut T is unique. UnsafeCell is the <strong>only</strong> core language feature to work around the restriction that &amp;T may not be mutated.</p>\n</blockquote>\n\n<p>You are providing a thin wrapper around this powerful object, with no <code>unsafe</code> on the API-boundary. The \"No-overhead-RefCell\" is really a \"no-trigger-guard-foot-gun\". It does work, yet be warned about its dangers.</p>\n"}], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 59270009, "answer_count": 1, "score": 0, "last_activity_date": 1575991000, "creation_date": 1575979610, "question_id": 59266854, "link": "https://stackoverflow.com/questions/59266854/borrow-mut-on-my-refcell-like-structure-doesnt-work", "title": "borrow_mut() on my RefCell-like structure doesn&#39;t work", "body": "<p>I try to write my own <code>RefCell</code>-like mutable memory location but without runtime borrow checking (no overhead). I adopted the code architecture from <code>RefCell</code> (and <code>Ref</code>, and <code>RefMut</code>). I can call <code>.borrow()</code> without problems but if I call <code>.borrow_mut()</code> then the rust compiler says <code>cannot borrow as mutable</code>. I don't see the problem, my <code>.borrow_mut()</code> impl looks fine?</p>\n\n<h3>code that fails:</h3>\n\n<pre><code>let real_refcell= Rc::from(RefCell::from(MyStruct::new()));\nlet nooverhead_refcell = Rc::from(NORefCell::from(MyStruct::new()));\n\n// works\nlet refmut_refcell = real_refcell.borrow_mut();\n\n// cannot borrow as mutable\nlet refmut_norefcell = nooverhead_refcell.borrow_mut();\n</code></pre>\n\n<h3><code>norc.rs</code> (No Overhead RefCell)</h3>\n\n<pre><code>use crate::norc_ref::{NORefMut, NORef};\nuse std::cell::UnsafeCell;\nuse std::borrow::Borrow;\n\n#[derive(Debug)]\npub struct NORefCell&lt;T: ?Sized&gt; {\n    value: UnsafeCell&lt;T&gt;\n}\n\nimpl&lt;T&gt; NORefCell&lt;T&gt; {\n\n    pub fn from(t: T) -&gt; NORefCell&lt;T&gt; {\n        NORefCell {\n            value: UnsafeCell::from(t)\n        }\n    }\n\n    pub fn borrow(&amp;self) -&gt; NORef&lt;'_, T&gt; {\n        NORef {\n            value: unsafe { &amp;*self.value.get() }\n        }\n    }\n\n    pub fn borrow_mut(&amp;mut self) -&gt; NORefMut&lt;'_, T&gt; {\n        NORefMut {\n            value: unsafe { &amp;mut *self.value.get() }\n        }\n    }\n\n}\n</code></pre>\n\n<h3><code>norc_ref.rs</code> (data structure returned by <code>NORefCell.borrow[_mut]()</code></h3>\n\n<pre><code>use std::ops::{Deref, DerefMut};\n\n#[derive(Debug)]\npub struct NORef&lt;'b, T: ?Sized + 'b&gt; {\n    pub value: &amp;'b T,\n}\n\nimpl&lt;T: ?Sized&gt; Deref for NORef&lt;'_, T&gt; {\n    type Target = T;\n\n    #[inline]\n    fn deref(&amp;self) -&gt; &amp;T {\n        self.value\n    }\n}\n\n/// No Overhead Ref Cell: Mutable Reference\n#[derive(Debug)]\npub struct NORefMut&lt;'b, T: ?Sized + 'b&gt; {\n    pub value: &amp;'b mut T,\n}\n\nimpl&lt;T: ?Sized&gt; Deref for NORefMut&lt;'_, T&gt; {\n    type Target = T;\n\n    #[inline]\n    fn deref(&amp;self) -&gt; &amp;T {\n        self.value\n    }\n}\n\nimpl&lt;T: ?Sized&gt; DerefMut for NORefMut&lt;'_, T&gt; {\n\n    #[inline]\n    fn deref_mut(&amp;mut self) -&gt; &amp;mut T {\n        self.value\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "webassembly"], "answers": [{"comments": [{"owner": {"reputation": 884, "user_id": 4997879, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f517a06f4fa1b0e8279b21fcd8d3c79?s=128&d=identicon&r=PG&f=1", "display_name": "Maxim Gritsenko", "link": "https://stackoverflow.com/users/4997879/maxim-gritsenko"}, "edited": false, "score": 1, "creation_date": 1575958504, "post_id": 59261189, "comment_id": 104731031, "body": "Thank for the answer. I clearly missed the part about importing JS functions into Wasm."}], "tags": [], "owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "is_accepted": true, "score": 2, "last_activity_date": 1575963508, "last_edit_date": 1575963508, "creation_date": 1575958108, "answer_id": 59261189, "question_id": 59260567, "link": "https://stackoverflow.com/questions/59260567/how-does-the-web-sys-crate-works/59261189#59261189", "title": "How does the web_sys crate works?", "body": "<blockquote>\n  <p>I had an impression, that WebAssembly code cannot directly call JS or access it's objects/methods. Is my understanding wrong?</p>\n</blockquote>\n\n<p>Your understanding here is wrong. WebAssembly modules can export and import functions from its host environment. By imported functions from the JS host environment, WebAssembly modules are able to call JavaScript functions.</p>\n\n<p>However, there an issues here - WebAssembly only has numeric types. In order to communicate to JavaScript with richer types (strings, arrays, objects), these values must be encoded in linear memory, which is a shared memory that both the WebAssembly module and JavaScript can read and write to.</p>\n\n<p>The process of encoding / decoding types into linear memory is automated using <a href=\"https://rustwasm.github.io/docs/wasm-bindgen/\" rel=\"nofollow noreferrer\"><code>wasm-bindgen</code></a>. You'll find that <code>web-sys</code> makes use of this package in order to allow manipulation of DOM objects within Rust.</p>\n"}], "owner": {"reputation": 884, "user_id": 4997879, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f517a06f4fa1b0e8279b21fcd8d3c79?s=128&d=identicon&r=PG&f=1", "display_name": "Maxim Gritsenko", "link": "https://stackoverflow.com/users/4997879/maxim-gritsenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 59261189, "answer_count": 1, "score": 1, "last_activity_date": 1575963508, "creation_date": 1575954327, "last_edit_date": 1575963429, "question_id": 59260567, "link": "https://stackoverflow.com/questions/59260567/how-does-the-web-sys-crate-works", "title": "How does the web_sys crate works?", "body": "<p>So after extensive searching and reading, I get WHAT <code>web_sys</code> crate is for and WHAT it does, but I still have no idea HOW it does it.</p>\n\n<p>I had an impression, that WebAssembly code cannot directly call JS or access its objects/methods. Is my understanding wrong? And if not, how does <code>web_sys</code> do the calls to the WebGL/Canvas/DOM methods?</p>\n\n<p>Also, more practical question. What (if any) is the overhead of using <code>web_sys</code> in comparison to just JS calls?</p>\n"}, {"tags": ["multithreading", "rust", "conways-game-of-life"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 3, "creation_date": 1575953948, "post_id": 59260026, "comment_id": 104729676, "body": "You are holding a lock for the whole <code>loop</code> so only one thread can perform work at a time in your  <code>update()</code> method, thus your multi-threading is effectively single threaded. Yet you still pay the cost for the creation/destruction/synchronization of other threads"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575979406, "post_id": 59260026, "comment_id": 104741052, "body": "It&#39;s best to try to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Your example code is not <i>reproducible</i> because it lacks the <code>config.rs</code> file, and it&#39;s not <i>minimal</i> because it contains a lot of extraneous code (argument parsing, rendering, etc.) that is not necessary to observe the bad behavior. You could replace the <code>loop</code> in <code>main</code> with just <code>for _ in 0..100 { }</code> and put nothing in it but the <code>update</code> call, for example, and define <code>const</code>ants for board size and number of threads, instead of parsing them from the command line."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1576008677, "post_id": 59260026, "comment_id": 104756370, "body": "This question was <a href=\"https://users.rust-lang.org/t/why-my-conways-game-of-life-becomes-slower-after-using-multi-threads/35545\" rel=\"nofollow noreferrer\">cross-posted to users.rust-lang.org</a>."}, {"owner": {"reputation": 1, "user_id": 12508959, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-UW1ltmjFzec/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcVVQg2ewTrViOIunoF2YdvetyK5Q/photo.jpg?sz=128", "display_name": "Vic2333", "link": "https://stackoverflow.com/users/12508959/vic2333"}, "edited": false, "score": 0, "creation_date": 1576095429, "post_id": 59260026, "comment_id": 104791555, "body": "Problem solved, I ended up using scoped thread with rayon. Thank you for your help."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 12508959, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-UW1ltmjFzec/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcVVQg2ewTrViOIunoF2YdvetyK5Q/photo.jpg?sz=128", "display_name": "Vic2333", "link": "https://stackoverflow.com/users/12508959/vic2333"}, "edited": false, "score": 0, "creation_date": 1576095468, "post_id": 59260597, "comment_id": 104791564, "body": "I ended up using scoped threads with rayon, it works now. Thank you for your help!"}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 3, "last_activity_date": 1575982285, "last_edit_date": 1592644375, "creation_date": 1575954518, "answer_id": 59260597, "question_id": 59260026, "link": "https://stackoverflow.com/questions/59260026/conways-game-of-life-becomes-slower-after-using-multi-threads/59260597#59260597", "title": "Conway&#39;s game of life becomes slower after using multi-threads", "body": "<p>Each worker thread tries to lock the mutex immediately upon starting, and never releases the lock until it's done. Since only one thread can hold the mutex at a time, only one thread can do work at a time.</p>\n<p>Here are two ways you might solve this problem:</p>\n<ol>\n<li><p>Don't lock the mutex until you <em>really, really</em> need to. Create a scratch area inside the worker thread that represents the block you are updating. Fill the scratch area first. <em>Then</em> lock the mutex, copy the contents of the scratch area into the <code>new_board</code>, and return.</p>\n<p>Using this method, most of the work can be done concurrently, but if all your workers finish at roughly the same time they will still have to take turns putting it all in <code>new_board</code>.</p>\n</li>\n<li><p>Don't use a lock at all: change the type of <code>self.board</code> to <code>Vec&lt;Vec&lt;AtomicI32&gt;&gt;</code> (<a href=\"https://doc.rust-lang.org/std/sync/atomic/struct.AtomicI32.html\" rel=\"nofollow noreferrer\"><code>std::sync::atomic::AtomicI32</code></a>) and atomically update the board without having to acquire a lock.</p>\n<p>This method may or may not slow down the process of updating, possibly depending on what memory orderings you use\u00b9, but it eliminates contention for the lock.</p>\n</li>\n</ol>\n<h1>Free-range advice</h1>\n<ul>\n<li><p>Don't call a variable <code>Board</code>. Convention, which the compiler alerts you of, is to give variables snake case names, but beyond that it is confusing because you also have a type named <code>Board</code>. I suggest actually just calling it <code>self</code>, which also lets you call <code>update</code> with method syntax.</p>\n</li>\n<li><p>Don't put the whole board in an <code>Arc</code> so you can pass it to <code>update</code>, and then make a new board which has to be put in a new <code>Arc</code> the next iteration. Either make <code>update</code> return an <code>Arc</code> itself, or have it take <code>self</code> and do all the <code>Arc</code>-wrangling inside it.</p>\n</li>\n<li><p>Better still, don't use <code>Arc</code> at all. Use a crate that provides <a href=\"https://stackoverflow.com/questions/32750829/how-can-i-pass-a-reference-to-a-stack-variable-to-a-thread\">scoped threads</a> to pass your data to the worker threads by reference.</p>\n</li>\n<li><p>Allocator performance will generally be better with a few large allocations than with many small ones. Change the type of <code>Board.board</code> to <code>Vec&lt;i32&gt;</code> and use arithmetic to calculate the indexes (for instance, point <code>i, j</code> is at index <code>j*n + i</code>).</p>\n</li>\n<li><p>It's also better not to create and throw away allocations if you don't need to. Typical advice for cellular automata is to create two buffers that contain board states: the current state and the next state. When you're done creating the next state, just swap the buffers so the current state becomes the next state and vice versa.</p>\n</li>\n<li><p><code>i32</code> wastes space; you could use <code>i8</code> or an <code>enum</code>, or possibly <code>bool</code>.</p>\n</li>\n</ul>\n<hr />\n<p>\u00b9 I would suggest <code>SeqCst</code> unless you <em>really</em> know what you're doing. I suspect <code>Relaxed</code> is probably sufficient, but I <em>don't</em> really know what I'm doing.</p>\n"}], "owner": {"reputation": 1, "user_id": 12508959, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-UW1ltmjFzec/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcVVQg2ewTrViOIunoF2YdvetyK5Q/photo.jpg?sz=128", "display_name": "Vic2333", "link": "https://stackoverflow.com/users/12508959/vic2333"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1575983861, "creation_date": 1575950457, "last_edit_date": 1575983861, "question_id": 59260026, "link": "https://stackoverflow.com/questions/59260026/conways-game-of-life-becomes-slower-after-using-multi-threads", "title": "Conway&#39;s game of life becomes slower after using multi-threads", "body": "<p>I am a complete beginner in Rust and I am currently writing this parallel Conway's game of life. The code itself works fine but the problem is that when using multiple threads the program becomes slower (I measure the speed of the program by counting the time the glider moves from the top-left corner to the bottom-right corner). I did some experiments and it became slower and slower as the number of threads increases. I also have a Java version using almost the same algorithm; it works just fine. All I expect is that the Rust version can become at least slightly faster with threads more than one. Can anyone please point out where I did wrong? I am sorry if the code seems unreasonable, as I said I am a complete beginner :-).</p>\n\n<p>main.rs reads the command line arguments and does the board update.</p>\n\n<pre><code>extern crate clap;\nextern crate termion;\nextern crate chrono;\n\nuse std::thread;\nuse std::sync::Arc;\nuse chrono::prelude::*;\n\n\nmod board;\nmod config;\n\nuse board::Board;\nuse config::Config;\n\nfn main() {\n    let dt1 = Local::now();\n\n    let matches = clap::App::new(\"conway\")\n        .arg(clap::Arg::with_name(\"length\")\n            .long(\"length\")\n            .value_name(\"LENGTH\")\n            .help(\"Set length of the board\")\n            .takes_value(true))\n        .arg(clap::Arg::with_name(\"threads\")\n            .long(\"threads\")\n            .value_name(\"THREADS\")\n            .help(\"How many threads to update the board\")\n            .takes_value(true))\n        .arg(clap::Arg::with_name(\"display\")\n            .long(\"display\")\n            .value_name(\"DISPLAY\")\n            .help(\"Display the board or not\")\n            .takes_value(true))\n        .arg(clap::Arg::with_name(\"delay\")\n            .long(\"delay\")\n            .value_name(\"MILLISECONDS\")\n            .help(\"Delay between the frames in milliseconds\")\n            .takes_value(true))\n        .get_matches();\n\n    let config = Config::from_matches(matches);\n    let mut board = Board::new(config.length);\n    let mut start: bool = false;\n    let mut end: bool = false;\n    let mut start_time: DateTime&lt;Local&gt; = Local::now();\n    let mut end_time: DateTime&lt;Local&gt;;\n\n    board.initialize_glider();\n    loop {\n        if config.display == 1 {\n            print!(\"{}{}\", termion::clear::All, termion::cursor::Goto(3, 3));\n            board_render(&amp;board);\n        }\n\n        if board.board[0][1] == 1 &amp;&amp; !start {\n            start_time = Local::now();\n            start = true;\n        }\n        if board.board[config.length - 1][config.length - 1] == 1 &amp;&amp; !end {\n            end_time = Local::now();\n            println!(\"{}\", end_time - start_time);\n            end = true;\n        }\n\n        board = board::Board::update(Arc::new(board), config.threads);\n        thread::sleep(config.delay);\n    }\n}\n\nfn board_render(board: &amp;Board) {\n    let mut output = String::with_capacity(board.n * (board.n + 1));\n    for i in 0..board.n {\n        for j in 0..board.n {\n            let ch;\n            if board.board[i][j] == 0 {\n                ch = '\u2591';\n            } else {\n                ch = '\u2588';\n            }\n            output.push(ch);\n        }\n        output.push_str(\"\\n  \");\n    }\n    print!(\"{}\", output);\n}\n\n</code></pre>\n\n<p>board.rs is where the algorithm for updating the board with multiple threads exists</p>\n\n<pre><code>use std::sync::{Mutex, Arc};\nuse std::thread;\n\npub struct Board {\n    pub n: usize,\n    pub board: Vec&lt;Vec&lt;i32&gt;&gt;,\n}\n\nimpl Board {\n    pub fn new(n: usize) -&gt; Board {\n        let board = vec![vec![0; n]; n];\n        Board {\n            n,\n            board,\n        }\n    }\n\n    pub fn update(Board: Arc&lt;Self&gt;, t_num: usize) -&gt; Board {\n        let new_board = Arc::new(Mutex::new(Board::new(Board.n)));\n        let mut workers = Vec::with_capacity(t_num);\n\n        let block_size = Board.n / t_num;\n        let mut start = 0;\n\n        for t in 0..t_num {\n            let old_board = Board.clone();\n\n            let new_board = Arc::clone(&amp;new_board);\n            let mut end = start + block_size;\n\n            if t == t_num - 1 { end = old_board.n; }\n\n            let worker = thread::spawn(move || {\n                let mut board = new_board.lock().unwrap();\n                for i in start..end {\n                    for j in 0..old_board.n {\n                        let im = (i + old_board.n - 1) % old_board.n;\n                        let ip = (i + 1) % old_board.n;\n                        let jm = (j + old_board.n - 1) % old_board.n;\n                        let jp = (j + 1) % old_board.n;\n                        let sum = old_board.board[im][jm] + old_board.board[im][j]\n                            + old_board.board[im][jp] + old_board.board[i][jm] + old_board.board[i][jp]\n                            + old_board.board[ip][jm] + old_board.board[ip][j] + old_board.board[ip][jp];\n\n                        if sum == 2 {\n                            board.board[i][j] = old_board.board[i][j];\n                        } else if sum == 3 {\n                            board.board[i][j] = 1;\n                        } else {\n                            board.board[i][j] = 0;\n                        }\n                    }\n                }\n            });\n\n            workers.push(worker);\n            start = start + block_size;\n        }\n\n        for worker in workers {\n            worker.join().unwrap();\n        }\n\n\n        let result = new_board.lock().unwrap();\n        let mut board = Board::new(Board.n);\n        board.board = result.board.to_vec();\n\n        board\n    }\n\n    pub fn initialize_glider(&amp;mut self) -&gt; &amp;mut Board {\n        self.board[0][1] = 1;\n        self.board[1][2] = 1;\n        self.board[2][0] = 1;\n        self.board[2][1] = 1;\n        self.board[2][2] = 1;\n\n        self\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "wasm-bindgen"], "answers": [{"tags": [], "owner": {"reputation": 9780, "user_id": 1073222, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/70b47e11def8108c4f61dc3cbcdbbb33?s=128&d=identicon&r=PG", "display_name": "OrangeTux", "link": "https://stackoverflow.com/users/1073222/orangetux"}, "is_accepted": false, "score": 2, "last_activity_date": 1577802315, "creation_date": 1577802315, "answer_id": 59545296, "question_id": 59259989, "link": "https://stackoverflow.com/questions/59259989/wasm-pack-build-report-error-could-not-compile-net2/59545296#59545296", "title": "wasm-pack build report error: could not compile `net2`", "body": "<p>I had similar problems. Thanks to <a href=\"https://github.com/rustwasm/wasm-pack/issues/657#issuecomment-508184636\" rel=\"nofollow noreferrer\">csmoe on Github</a> I found out that <code>net2</code> has no support for target <code>wasm32</code>. See <a href=\"https://github.com/rust-lang-nursery/net2-rs/blob/eda403f03033b58560d81b821f0df822f50cde4d/src/socket.rs#L15-L16\" rel=\"nofollow noreferrer\">https://github.com/rust-lang-nursery/net2-rs/blob/eda403f03033b58560d81b821f0df822f50cde4d/src/socket.rs#L15-L16</a></p>\n"}], "owner": {"reputation": 3221, "user_id": 2245634, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1", "display_name": "Amit\u0101bha", "link": "https://stackoverflow.com/users/2245634/amit%c4%81bha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 681, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1577802315, "creation_date": 1575950199, "question_id": 59259989, "link": "https://stackoverflow.com/questions/59259989/wasm-pack-build-report-error-could-not-compile-net2", "title": "wasm-pack build report error: could not compile `net2`", "body": "<p>i use try to use rustwasm refered <a href=\"https://rustwasm.github.io/book/game-of-life/hello-world.html,all\" rel=\"nofollow noreferrer\">https://rustwasm.github.io/book/game-of-life/hello-world.html,all</a> worked fine.\nbut when i add <code>reqwest =  \"0.9.22\"</code> to Cargo.toml,then execute <code>wasm-pack build</code> command in my project,the compiler reports such an error:</p>\n\n<pre><code>$ wasm-pack build &gt; log.log\n[INFO]: Checking for the Wasm target...\n[INFO]: Compiling to Wasm...\nCompiling net2 v0.2.33\nCompiling openssl-sys v0.9.53\nCompiling http v0.1.21\nCompiling string v0.2.1\nCompiling tokio-buf v0.1.1\nCompiling backtrace v0.3.40\nCompiling mime_guess v2.0.1\nCompiling cookie v0.12.0\nerror[E0432]: unresolved import sys\n--&gt; D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\tcp.rs:18:5\n|\n18 | use sys::c;\n| ^^^ maybe a missing crate sys?\n\nerror[E0432]: unresolved import sys\n--&gt; D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\udp.rs:18:5\n|\n18 | use sys::c;\n| ^^^ maybe a missing crate sys?\n\nerror[E0432]: unresolved import sys\n--&gt; D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\socket.rs:22:5\n|\n22 | use sys;\n| ^^^ no sys in the root\n\nerror[E0432]: unresolved import sys\n--&gt; D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\socket.rs:23:5\n|\n23 | use sys::c;\n| ^^^ maybe a missing crate sys?\n\nerror[E0432]: unresolved import sys\n--&gt; D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\ext.rs:19:5\n|\n19 | use sys;\n| ^^^ no sys in the root\n\nerror[E0432]: unresolved import sys\n--&gt; D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\ext.rs:20:5\n|\n20 | use sys::c;\n| ^^^ maybe a missing crate sys?\n\nerror[E0412]: cannot find type c_uint in this scope\n--&gt; D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\ext.rs:1335:39\n|\n1335 | fn to_ipv6mr_interface(value: u32) -&gt; c_uint {\n| ^^^^^^ not found in this scope\nhelp: possible candidate is found in another module, you can import it into scope\n|\n13 | use std::os::raw::c_uint;\nerror[E0599]: no method named as_sock found for type &amp;udp::UdpBuilder in the current scope\n</code></pre>\n\n<p>... omit similar error\n    --> D:\\cargo\\registry\\src\\github.com-1ecc6299db9ec823\\net2-0.2.33\\src\\ext.rs:1499:22\n    |\n    1499 | get_opt(self.as_sock(), SOL_SOCKET, SO_ERROR).map(int2err)\n    | ^^^^^^^ method not found in &amp;udp::UdpBuilder\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item as_sock, perhaps you need to implement it:\n    candidate #1: ext::AsSock</p>\n\n<pre><code>error: aborting due to 317 previous errors\n\nSome errors have detailed explanations: E0046, E0412, E0422, E0425, E0432, E0599.\nFor more information about an error, try rustc --explain E0046.\nerror: could not compile net2.\nwarning: build failed, waiting for other jobs to finish...\nerror: build failed\nError: Compiling your crate to WebAssembly failed\nCaused by: failed to execute cargo build: exited with exit code: 101\n</code></pre>\n\n<p>my environment</p>\n\n<pre><code>wasm-pack version: wasm-pack 0.8.1\nrustc version: rustc 1.39.0 (4560ea788 2019-11-04)\noperation system: windows10\n</code></pre>\n"}, {"tags": ["rust", "bit-manipulation"], "comments": [{"owner": {"reputation": 401, "user_id": 5691983, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6dd6b649e92a832b8e29a0fb5ae3ff56?s=128&d=identicon&r=PG&f=1", "display_name": "aqrit", "link": "https://stackoverflow.com/users/5691983/aqrit"}, "edited": false, "score": 1, "creation_date": 1576013449, "post_id": 59259543, "comment_id": 104758263, "body": "the nibbles could be interleaved <code>y = (x &amp; 0x0f0f0f0f0f0f0f0f); y |= (y &gt;&gt; 28);</code>"}, {"owner": {"reputation": 133, "user_id": 4129587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6212f1f530613edcfbaff1001d4894e7?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Mildenberger", "link": "https://stackoverflow.com/users/4129587/philipp-mildenberger"}, "reply_to_user": {"reputation": 401, "user_id": 5691983, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6dd6b649e92a832b8e29a0fb5ae3ff56?s=128&d=identicon&r=PG&f=1", "display_name": "aqrit", "link": "https://stackoverflow.com/users/5691983/aqrit"}, "edited": false, "score": 1, "creation_date": 1576016841, "post_id": 59259543, "comment_id": 104759491, "body": "Thanks, interesting, as far as I understand the resulting byte order would be the following (big endian): 73625140  Unfortunately I have to preserve the order of these bytes."}, {"owner": {"reputation": 26723, "user_id": 995714, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/w1393.jpg?s=128&g=1", "display_name": "phuclv", "link": "https://stackoverflow.com/users/995714/phuclv"}, "edited": false, "score": 0, "creation_date": 1617633172, "post_id": 59259543, "comment_id": 118350623, "body": "this is basically converting from unpacked BCD to packed BCD. Related: <a href=\"https://stackoverflow.com/q/30835978/995714\">What is the most appropriate way to convert nibbles to a u64?</a>, <a href=\"https://stackoverflow.com/q/59669635/995714\">Most efficient formula for unpacking 16-bit BCD? (e.g. 0x1234 to 0x01020304)</a>"}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1575966480, "post_id": 59262323, "comment_id": 104734136, "body": "Your normal code is beautiful, and I love the illustration of the steps to see the bits flowing from one position to another."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575989587, "post_id": 59262323, "comment_id": 104747023, "body": "Are either of these actually faster than what the OP provided? The question asks for the <b>fastest</b> solution, so I&#39;d expect to see some benchmark that proves the implicit assertion that these are fast (or at least faster)."}, {"owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1575990938, "post_id": 59262323, "comment_id": 104747817, "body": "@Shepmaster <code>pext</code> is a 3-cycle instruction on Intel, essentially unbeatable until a more specialized instruction shows up. But it&#39;s bad on AMD. That also disproves the existence of the fastest way to do it: relative speeds of various approaches depend on the hardware. So if we are to take OPs title literally, there is no answer."}, {"owner": {"reputation": 133, "user_id": 4129587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6212f1f530613edcfbaff1001d4894e7?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Mildenberger", "link": "https://stackoverflow.com/users/4129587/philipp-mildenberger"}, "edited": false, "score": 0, "creation_date": 1576015213, "post_id": 59262323, "comment_id": 104758915, "body": "Thanks, the solutions are at least a good amount shorter (regarding the amount of opcode instructions)"}, {"owner": {"reputation": 133, "user_id": 4129587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6212f1f530613edcfbaff1001d4894e7?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Mildenberger", "link": "https://stackoverflow.com/users/4129587/philipp-mildenberger"}, "edited": false, "score": 0, "creation_date": 1576015581, "post_id": 59262323, "comment_id": 104759026, "body": "Interesting would be still if the <code>pext</code> implementation of AMD is faster than arch independent version, is there more info how it is implemented? Unfortunately I have no AMD processor to bench this."}, {"owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "reply_to_user": {"reputation": 133, "user_id": 4129587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6212f1f530613edcfbaff1001d4894e7?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Mildenberger", "link": "https://stackoverflow.com/users/4129587/philipp-mildenberger"}, "edited": false, "score": 2, "creation_date": 1576047482, "post_id": 59262323, "comment_id": 104767105, "body": "@PhilippMildenberger According to tests by <a href=\"https://twitter.com/uops_info/status/1202950247900684290\" rel=\"nofollow noreferrer\">uops_info</a> it seems like a microcoded loop based on the bits of the mask, generating 8 &#181;ops per set bit, costing around 4.5 extra cycles per set bit (there is some overhead too so mask=0 is already slow, and fractional cycles can happen because it&#39;s a reciprocal throughput). I can&#39;t test it either, but by estimation setting 32 bits should be around 145-150 cycles. That&#39;s over ten times worse than your original version."}], "tags": [], "owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "is_accepted": true, "score": 4, "last_activity_date": 1575963320, "creation_date": 1575963320, "answer_id": 59262323, "question_id": 59259543, "link": "https://stackoverflow.com/questions/59259543/fastest-way-to-convert-8-consecutive-bytes-into-nibbles-encoded-in-32-bit-integ/59262323#59262323", "title": "Fastest way to convert 8 consecutive bytes into nibbles (encoded in 32 bit integer)", "body": "<p>With the <code>bitintr</code> crate you can use <code>pext</code>:</p>\n\n<pre><code>bitintr::bmi2::pext(x, 0x0f0f0f0f0f0f0f0f)\n</code></pre>\n\n<p>However, that is only fast on Intel processors. AMD Ryzen implements BMI2, but its <code>pext</code> is very slow.</p>\n\n<p>Here is an alternative with only normal code:</p>\n\n<pre><code>pub fn compress(offsets: [u8; 8]) -&gt; u32 {\n    let mut x = u64::from_le_bytes(offsets);\n    x = (x | (x &gt;&gt; 4)) &amp; 0x00FF00FF00FF00FF;\n    x = (x | (x &gt;&gt; 8)) &amp; 0x0000FFFF0000FFFF;\n    x = (x | (x &gt;&gt; 16));\n    x as u32\n}\n</code></pre>\n\n<p>The steps do this:</p>\n\n<pre><code>start:         0x0a0b0c0d0e0f0g0h\nx | (x &gt;&gt; 4):  0x0aabbccddeeffggh\n&amp; mask:        0x00ab00cd00ef00gh\nx | (x &gt;&gt; 8):  0x00ababcdcdefefgh\n&amp; mask:        0x0000abcd0000efgh\nx | (x &gt;&gt; 16): 0x0000abcdabcdefgh\nas u32:                0xabcdefgh\n</code></pre>\n"}], "owner": {"reputation": 133, "user_id": 4129587, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6212f1f530613edcfbaff1001d4894e7?s=128&d=identicon&r=PG&f=1", "display_name": "Philipp Mildenberger", "link": "https://stackoverflow.com/users/4129587/philipp-mildenberger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 59262323, "answer_count": 1, "score": 2, "last_activity_date": 1575963320, "creation_date": 1575946594, "question_id": 59259543, "link": "https://stackoverflow.com/questions/59259543/fastest-way-to-convert-8-consecutive-bytes-into-nibbles-encoded-in-32-bit-integ", "title": "Fastest way to convert 8 consecutive bytes into nibbles (encoded in 32 bit integer)", "body": "<p>The bytes are unsigned and are all less than 16 so they can be fit into a nibble.\nI'm currently shifting the bytes in a loop and <code>&amp;</code> them with <code>0xf</code>:</p>\n\n<pre><code>pub fn compress(offsets: [u8; 8]) -&gt; u32 {\n    let mut co: u32 = 0;\n\n    for (i, o) in offsets.iter().enumerate() {\n        co |= ((*o as u32) &amp; 0xf ) &lt;&lt; (i * 4);\n    }\n    co\n}\n</code></pre>\n\n<p>The compiler does already some good optimization on that:</p>\n\n<p><a href=\"https://godbolt.org/z/NEpC64\" rel=\"nofollow noreferrer\">https://godbolt.org/z/NEpC64</a></p>\n\n<p>But maybe it is possible to do some bit twiddling or use SIMD commands with a <code>u64</code> to reduce the amount of operations?</p>\n"}, {"tags": ["parallel-processing", "rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575931823, "post_id": 59257650, "comment_id": 104724853, "body": "<code>calculate</code> looks fine, but <code>thread::spawn</code> explicitly requires <code>&#39;static</code> because spawned threads may outlive the original."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575931937, "post_id": 59257650, "comment_id": 104724882, "body": "You&#39;re probably looking for <a href=\"https://stackoverflow.com/questions/32750829/how-can-i-pass-a-reference-to-a-stack-variable-to-a-thread\">How can I pass a reference to a stack variable to a thread?</a> Does that answer your question?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575934896, "post_id": 59257650, "comment_id": 104725608, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/44624591/155423\">How can I sum up using concurrency from 1 to 1000000 with Rust?</a>; <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59257650/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575939602, "post_id": 59257650, "comment_id": 104726625, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c03aee8e742d95d3704f4f549f5d7e8f\" rel=\"nofollow noreferrer\">Here&#39;s an translation using <code>crossbeam</code>, as in the other question</a>, but it&#39;s probably not a typical use of scoped threads. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67a52bf43a9d993d80d6a3289becdaa1\" rel=\"nofollow noreferrer\">Here&#39;s one I&#39;d consider more readable</a>. YMMV."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575940128, "post_id": 59257650, "comment_id": 104726704, "body": "The code in the question (and both versions I just posted) has a bug: the argument to <code>chunks</code> is the size of each chunk, not the number of chunks. You probably intended something like <code>input.chunks((input.len() + worker_count - 1)&#47;worker_count)</code>."}], "owner": {"reputation": 562, "user_id": 1956082, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/1b168f4c853d4fd944a0c5976a628cd8?s=128&d=identicon&r=PG", "display_name": "allevo", "link": "https://stackoverflow.com/users/1956082/allevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 78, "favorite_count": 0, "closed_date": 1575944541, "answer_count": 0, "score": 2, "last_activity_date": 1575944547, "creation_date": 1575930880, "last_edit_date": 1575944478, "question_id": 59257650, "link": "https://stackoverflow.com/questions/59257650/calculate-sum-of-chars-in-parallel", "closed_reason": "Duplicate", "title": "Calculate sum of chars in parallel", "body": "<p>I have an array of strings. I would like to count the total chars but using threads for parallelisation (the original problem is not this but is similar).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::thread;\n\npub fn frequency&lt;'a&gt;(input: &amp;'a [&amp;'a str], worker_count: usize) -&gt; usize {\n    let handlers: Vec&lt;thread::JoinHandle&lt;usize&gt;&gt; = input\n        .chunks(worker_count)\n        .map(|chunk| thread::spawn(calculate(chunk)))\n        .collect();\n\n    let hashes = handlers.into_iter().map(|handler| handler.join().unwrap());\n\n    let mut sum = 0;\n    for h in hashes {\n        sum += h\n    }\n\n    sum\n}\n\nfn calculate&lt;'a&gt;(input: &amp;'a [&amp;'a str]) -&gt; impl Fn() -&gt; usize + 'a {\n    move || input.iter().map(|s| s.len()).sum()\n}\n</code></pre>\n\n<p>The compiler tells me this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n --&gt; src/lib.rs:5:10\n  |\n5 |         .chunks(worker_count)\n  |          ^^^^^^\n  |\nnote: first, the lifetime cannot outlive the lifetime 'a as defined on the function body at 3:18...\n --&gt; src/lib.rs:3:18\n  |\n3 | pub fn frequency&lt;'a&gt;(input: &amp;'a [&amp;'a str], worker_count: usize) -&gt; usize {\n  |                  ^^\nnote: ...so that reference does not outlive borrowed content\n --&gt; src/lib.rs:4:52\n  |\n4 |     let handlers: Vec&lt;thread::JoinHandle&lt;usize&gt;&gt; = input\n  |                                                    ^^^^^\n  = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `impl std::ops::Fn&lt;()&gt;` will meet its required lifetime bounds\n --&gt; src/lib.rs:6:22\n  |\n6 |         .map(|chunk| thread::spawn(calculate(chunk)))\n  |                      ^^^^^^^^^^^^^\n</code></pre>\n\n<p>I've tried to remove all lifetimes, use different lifetimes for <code>str</code> and the slice, and explicitly invoke <code>calculate::&lt;'a&gt;</code> but none of those solutions compile.</p>\n\n<p>The input lifetime is the same everywhere: <code>frequency</code> declares <code>'a</code> that is used in <code>calculate</code>, so the closure is bound to <code>'a</code> because the captured variables live for <code>'a</code>.</p>\n\n<p>Where am I wrong?</p>\n\n<p>NB: I would like not to use <code>'static</code>.</p>\n"}, {"tags": ["recursion", "rust", "tail-recursion"], "comments": [{"owner": {"reputation": 16773, "user_id": 5827215, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-s_pAOw1Sc-M/AAAAAAAAAAI/AAAAAAAAAMA/J-R1IMHbuY4/photo.jpg?sz=128", "display_name": "Tadhg McDonald-Jensen", "link": "https://stackoverflow.com/users/5827215/tadhg-mcdonald-jensen"}, "edited": false, "score": 2, "creation_date": 1575930332, "post_id": 59257543, "comment_id": 104724441, "body": "I believe you are talking about <a href=\"https://en.wikipedia.org/wiki/Tail_call\" rel=\"nofollow noreferrer\"><i>tail</i> recursion</a>, you might have better input on your question if you say &quot;tail&quot; instead of &quot;terminal&quot;"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 8, "creation_date": 1575930400, "post_id": 59257543, "comment_id": 104724461, "body": "&quot;In C programming language, a terminal recursion is easy to be guaranteed&quot; I&#39;d be surprised if C made any such guarantee."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 1, "creation_date": 1575930641, "post_id": 59257543, "comment_id": 104724545, "body": "<a href=\"https://github.com/rust-lang/rfcs/pull/1888\" rel=\"nofollow noreferrer\">Relevant RFC PR</a>"}, {"owner": {"reputation": 44043, "user_id": 1565698, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/7dace33805b9dcdec5aa63308daf88dc?s=128&d=identicon&r=PG", "display_name": "Sylwester", "link": "https://stackoverflow.com/users/1565698/sylwester"}, "edited": false, "score": 7, "creation_date": 1575932036, "post_id": 59257543, "comment_id": 104724904, "body": "I think you are mixing tail recursion with tail call optimization. Eg. your C code is tail recursive but it might blow the stack becase it does not guarantee <a href=\"https://en.wikipedia.org/wiki/Tail_call_optimization\" rel=\"nofollow noreferrer\">tail call optimization</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 24, "last_activity_date": 1575934520, "creation_date": 1575934520, "answer_id": 59258170, "question_id": 59257543, "link": "https://stackoverflow.com/questions/59257543/when-is-tail-recursion-guaranteed-in-rust/59258170#59258170", "title": "When is tail recursion guaranteed in Rust?", "body": "<p><a href=\"https://en.wikipedia.org/wiki/Tail_call\" rel=\"noreferrer\"><strong>Tail calls</strong></a> are guaranteed whenever your recursive function is called in <em>tail position</em> (basically the last statement of the function).</p>\n\n<p>Tail call <strong>optimization</strong> is never guaranteed by Rust, although the optimizer <em>may</em> choose to perform it.</p>\n\n<blockquote>\n  <p>if we declare some variable that needs to be destroyed</p>\n</blockquote>\n\n<p>It's my understanding that this is one of the sticking points, as changing the location of destroyed stack variables would be contentious.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39840663/155423\">Recursive function calculating factorials leads to stack overflow</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/81\" rel=\"noreferrer\">RFC 81: guaranteed tail call elimination</a></li>\n<li><a href=\"https://github.com/rust-lang/rfcs/pull/1888\" rel=\"noreferrer\">RFC 1888: Proper tail calls</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 29, "last_activity_date": 1614904554, "last_edit_date": 1614904554, "creation_date": 1576804505, "answer_id": 59418785, "question_id": 59257543, "link": "https://stackoverflow.com/questions/59257543/when-is-tail-recursion-guaranteed-in-rust/59418785#59418785", "title": "When is tail recursion guaranteed in Rust?", "body": "<p><a href=\"https://stackoverflow.com/a/59258170/3650362\">Shepmaster's answer</a> explains that tail call elimination is merely an optimization, not a guarantee, in Rust. But &quot;never guaranteed&quot; doesn't mean &quot;never happens&quot;. Let's take a look at what the compiler does with some real code.</p>\n<h1>Does it happen in <em>this</em> function?</h1>\n<p>As of right now, the latest release of Rust available on <a href=\"https://rust.godbolt.org/\" rel=\"nofollow noreferrer\">Compiler Explorer</a> is 1.39, and it does <em>not</em> eliminate the tail call in <code>read_all</code>.</p>\n<pre class=\"lang-none prettyprint-override\"><code>example::read_all:\n        push    r15\n        push    r14\n        push    rbx\n        sub     rsp, 32\n        mov     r14, rdx\n        mov     r15, rsi\n        mov     rbx, rdi\n        mov     byte ptr [rsp + 7], 0\n        lea     rdi, [rsp + 8]\n        lea     rdx, [rsp + 7]\n        mov     ecx, 1\n        call    qword ptr [r14 + 24]\n        cmp     qword ptr [rsp + 8], 1\n        jne     .LBB3_1\n        movups  xmm0, xmmword ptr [rsp + 16]\n        movups  xmmword ptr [rbx], xmm0\n        jmp     .LBB3_3\n.LBB3_1:\n        cmp     qword ptr [rsp + 16], 0\n        je      .LBB3_2\n        mov     rdi, rbx\n        mov     rsi, r15\n        mov     rdx, r14\n        call    qword ptr [rip + example::read_all@GOTPCREL]\n        jmp     .LBB3_3\n.LBB3_2:\n        mov     byte ptr [rbx], 3\n.LBB3_3:\n        mov     rax, rbx\n        add     rsp, 32\n        pop     rbx\n        pop     r14\n        pop     r15\n        ret\n        mov     rbx, rax\n        lea     rdi, [rsp + 8]\n        call    core::ptr::real_drop_in_place\n        mov     rdi, rbx\n        call    _Unwind_Resume@PLT\n        ud2\n</code></pre>\n<p>Notice this line: <code>call    qword ptr [rip + example::read_all@GOTPCREL]</code>. That's the (tail) recursive call. As you can tell from its existence, it was not eliminated.</p>\n<p><a href=\"https://rust.godbolt.org/z/8HVav3\" rel=\"nofollow noreferrer\">Compare this to an equivalent function with an explicit <code>loop</code></a>:</p>\n<pre><code>pub fn read_all(input: &amp;mut dyn std::io::Read) -&gt; std::io::Result&lt;()&gt; {\n    loop {\n        match input.read(&amp;mut [0u8]) {\n            Ok (  0) =&gt; return Ok(()),\n            Ok (  _) =&gt; continue,\n            Err(err) =&gt; return Err(err),\n        }\n    }\n}\n</code></pre>\n<p>which has no tail call to eliminate, and therefore compiles to a function with only one <code>call</code> in it (to the computed address of <code>input.read</code>).</p>\n<p>Oh well. Maybe Rust isn't as good as C. Or is it?</p>\n<h1>Does it happen in C?</h1>\n<p>Here's a tail-recursive function in C that performs a very similar task:</p>\n<pre class=\"lang-c prettyprint-override\"><code>int read_all(FILE *input) {\n    char buf[] = {0, 0};\n    if (!fgets(buf, sizeof buf, input))\n        return feof(input);\n    return read_all(input);\n}\n</code></pre>\n<p>This should be super easy for the compiler to eliminate. The recursive call is right at the bottom of the function and C doesn't have to worry about running destructors. But nevertheless, <a href=\"https://rust.godbolt.org/z/U7V-ud\" rel=\"nofollow noreferrer\">there's that recursive tail call</a>, annoyingly not eliminated:</p>\n<pre class=\"lang-none prettyprint-override\"><code>        call    read_all\n</code></pre>\n<p>It turns out that tail call optimization is not guaranteed in C, either. I tried Clang and gcc under different optimization levels, but nothing I tried would turn this fairly simple recursive function into a loop.</p>\n<h1>Does it <em>ever</em> happen?</h1>\n<p>Okay, so it's not guaranteed. Can the compiler do it at all? Yes! Here's a function that computes Fibonacci numbers via a tail-recursive inner function:</p>\n<pre><code>pub fn fibonacci(n: u64) -&gt; u64 {\n    fn fibonacci_lr(n: u64, a: u64, b: u64) -&gt; u64 {\n        match n {\n            0 =&gt; a,\n            _ =&gt; fibonacci_lr(n - 1, a + b, a),\n        }\n    }\n    fibonacci_lr(n, 1, 0)\n}\n</code></pre>\n<p>Not only is the tail call eliminated, the whole <code>fibonacci_lr</code> function is inlined into <code>fibonacci</code>, yielding only 12 instructions (and not a <code>call</code> in sight):</p>\n<pre class=\"lang-none prettyprint-override\"><code>example::fibonacci:\n        push    1\n        pop     rdx\n        xor     ecx, ecx\n.LBB0_1:\n        mov     rax, rdx\n        test    rdi, rdi\n        je      .LBB0_3\n        dec     rdi\n        add     rcx, rax\n        mov     rdx, rcx\n        mov     rcx, rax\n        jmp     .LBB0_1\n.LBB0_3:\n        ret\n</code></pre>\n<p>If you <a href=\"https://rust.godbolt.org/z/mmmznd\" rel=\"nofollow noreferrer\">compare this to an equivalent <code>while</code> loop</a>, the compiler generates <em>almost</em> the same assembly.</p>\n<h1>What's the point?</h1>\n<p>You probably shouldn't be relying on optimizations to eliminate tail calls, either in Rust or in C. It's nice when it happens, but if you need to be sure that a function compiles into a tight loop, the surest way, at least for now, is to use a loop.</p>\n"}], "owner": {"reputation": 615, "user_id": 6552577, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-f4beEqcNq_s/AAAAAAAAAAI/AAAAAAAAAv4/TUMNBquywhA/photo.jpg?sz=128", "display_name": "uben", "link": "https://stackoverflow.com/users/6552577/uben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5084, "favorite_count": 3, "accepted_answer_id": 59258170, "answer_count": 2, "score": 28, "last_activity_date": 1614904554, "creation_date": 1575930214, "last_edit_date": 1575931156, "question_id": 59257543, "link": "https://stackoverflow.com/questions/59257543/when-is-tail-recursion-guaranteed-in-rust", "title": "When is tail recursion guaranteed in Rust?", "body": "<h1>C language</h1>\n\n<p>In the C programming language, it's easy to have <strong>tail recursion</strong>:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int foo(...) {\n    return foo(...);\n}\n</code></pre>\n\n<p>Just return as is the return value of the recursive call. It is especially important when this recursion may repeat a thousand or even a million times. It would use a lot of <strong>memory on the stack</strong>.</p>\n\n<h1>Rust</h1>\n\n<p>Now, I have a Rust function that might recursively call itself a million times:</p>\n\n<pre><code>fn read_all(input: &amp;mut dyn std::io::Read) -&gt; std::io::Result&lt;()&gt; {\n    match input.read(&amp;mut [0u8]) {\n        Ok (  0) =&gt; Ok(()),\n        Ok (  _) =&gt; read_all(input),\n        Err(err) =&gt; Err(err),\n    }\n}\n</code></pre>\n\n<p>(this is a minimal example, the real one is more complex, but it captures the main idea)</p>\n\n<p>Here, the return value of the recursive call is returned as is, but:</p>\n\n<p><strong>Does it guarantee that the Rust compiler will apply a tail recursion?</strong></p>\n\n<p>For instance, if we declare some variable that needs to be destroyed like a <code>std::Vec</code>, will it be destroyed just before the recursive call (which allows for tail recursion) or after the recursive call returns (which forbids the tail recursion)?</p>\n"}, {"tags": ["arrays", "struct", "constructor", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1575924991, "post_id": 59256289, "comment_id": 104722353, "body": "&quot;This... is not a difficult task&quot;, difficulty for a compiler is not always obvious."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1575927707, "post_id": 59256289, "comment_id": 104723538, "body": "<code>[0..N]</code> creates an array containing a range; you probably just want <code>0..N</code>. You can also avoid the closure. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c655157e8ab0540b00c77e1fda8dbaf2\" rel=\"nofollow noreferrer\">The duplicates applied to your example</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575927786, "post_id": 59256289, "comment_id": 104723575, "body": "It isn&#39;t difficult, if you use a vector: <code>let foo_vector: Vec&lt;_&gt; = (0..n).map(Foo::new).collect();</code> Perhaps one day we will be able to collect into a fixed-size array, but solving that problem is more complicated than you might think (what should happen if a panic occurs when the array is half initialized?) <a href=\"https://internals.rust-lang.org/t/collecting-iterators-into-arrays/10330/6\" rel=\"nofollow noreferrer\">This internals thread</a> also contains some relevant discussion."}, {"owner": {"reputation": 41, "user_id": 12506147, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13573bd5778b30b43271d50c78371559?s=128&d=identicon&r=PG&f=1", "display_name": "whatever923enkj", "link": "https://stackoverflow.com/users/12506147/whatever923enkj"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1578649561, "post_id": 59256289, "comment_id": 105515651, "body": "@Shepmaster that snippet fails when N &gt; 32."}, {"owner": {"reputation": 41, "user_id": 12506147, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13573bd5778b30b43271d50c78371559?s=128&d=identicon&r=PG&f=1", "display_name": "whatever923enkj", "link": "https://stackoverflow.com/users/12506147/whatever923enkj"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1578649701, "post_id": 59256289, "comment_id": 105515728, "body": "@Stargateur I&#39;m not a compiler expert, but literally no other lang I&#39;ve ever used has this problem.  It&#39;s a constant size array.  Maybe the devs are running before they can walk..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1578668688, "post_id": 59256289, "comment_id": 105525285, "body": "@whatever923enkj yep, because Rust <a href=\"https://stackoverflow.com/q/28136739/155423\">hasn&#39;t stabilized constant generics</a> yet. The arrayvec crate has feature flags for <code>array-sizes-33-128</code> and <code>array-sizes-129-255</code> if that happens to cover your cases. Otherwise you have to use one of the other linked solutions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1578668785, "post_id": 59256289, "comment_id": 105525339, "body": "<i>literally no other lang I&#39;ve ever used has this problem</i> \u2014 I&#39;d be willing to wager that no other language you&#39;ve used tries to prevent memory unsafety without overhead, as Rust does. Arrays must always be fully initialized in Rust."}], "owner": {"reputation": 41, "user_id": 12506147, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/13573bd5778b30b43271d50c78371559?s=128&d=identicon&r=PG&f=1", "display_name": "whatever923enkj", "link": "https://stackoverflow.com/users/12506147/whatever923enkj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 142, "favorite_count": 0, "closed_date": 1575927408, "answer_count": 0, "score": 4, "last_activity_date": 1575927496, "creation_date": 1575924189, "last_edit_date": 1575927496, "question_id": 59256289, "link": "https://stackoverflow.com/questions/59256289/how-do-i-create-an-array-of-structs-using-their-constructors-in-rust", "closed_reason": "Duplicate", "title": "How do I create an array of structs using their constructors in Rust?", "body": "<p>I want to make an array of structs in Rust, with each struct initialised to <em>different</em> values, with the logic handled by a constructor.  The size of the array is known at compile time but is greater than 32.</p>\n\n<pre><code>struct Foo {\n    foo: isize,\n}\n\nimpl Foo {\n    pub fn new(i: isize) -&gt; Foo {\n        //do stuff with i\n        Foo { foo: i }\n    }\n}\n\nfn main() {\n    //this was my best guess...\n    let foo_array: [Foo; N] = [0..N].iter().map(|i| Foo::new(i));\n}\n</code></pre>\n\n<p>This seems like I should be a really common task but I've not seen any useful material on this at all; what am I missing? This... is not a difficult task, and the only online material I've seen that comes close is futzing around with unsafe blocks and other things that just shouldn't be necessary for a static-size array.</p>\n"}, {"tags": ["rust", "actix-web"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575922860, "post_id": 59255498, "comment_id": 104721521, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what crates (and their versions) are present in the code and there&#39;s multiple missing function implementations. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/59255498/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 1067, "user_id": 1783732, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/b2d57b42782b30f9c394b5ee213cc7c2?s=128&d=identicon&r=PG", "display_name": "user1783732", "link": "https://stackoverflow.com/users/1783732/user1783732"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575924045, "post_id": 59255498, "comment_id": 104721967, "body": "I&#39;ve edited my question to clarify a bit. Will try to get the more complete code into it and playing the Rust Playground. Thanks."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575927875, "post_id": 59255498, "comment_id": 104723620, "body": "I can stop, but without editing to meet our community standards, a post is likely to accrue more downvotes for easily-addressed reasons. The editing I do is aimed at making the question easier for people to answer <b>and</b> for other people to find in the future."}], "answers": [{"comments": [{"owner": {"reputation": 1067, "user_id": 1783732, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/b2d57b42782b30f9c394b5ee213cc7c2?s=128&d=identicon&r=PG", "display_name": "user1783732", "link": "https://stackoverflow.com/users/1783732/user1783732"}, "edited": false, "score": 0, "creation_date": 1575938308, "post_id": 59258590, "comment_id": 104726362, "body": "Btw, <code>actix-web::App</code> has two APIs to set application data: <code>register_data</code> and <code>data</code>, which is a bit confusing."}], "tags": [], "owner": {"reputation": 1067, "user_id": 1783732, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/b2d57b42782b30f9c394b5ee213cc7c2?s=128&d=identicon&r=PG", "display_name": "user1783732", "link": "https://stackoverflow.com/users/1783732/user1783732"}, "is_accepted": false, "score": 1, "last_activity_date": 1575938156, "creation_date": 1575938156, "answer_id": 59258590, "question_id": 59255498, "link": "https://stackoverflow.com/questions/59255498/does-actix-webs-appregister-data-create-a-single-instance-or-one-instance-per/59258590#59258590", "title": "Does actix_web&#39;s App::register_data create a single instance or one instance per thread?", "body": "<p>After playing with Rust code a bit more, I understand better now. <code>web::Data</code> is an <code>Arc</code>, hence it's okay to call <code>data.clone()</code> which creates a new instance of <code>Arc</code> but still points to the single shared instance of <code>MyServer</code>. That will allow <code>HttpServer</code> threads to share a global state.</p>\n\n<p>So to fix my problem, I just followed the example in the documentation, i.e, moved the data creation out of <code>HttpServer::new</code> and call <code>clone()</code> inside it: </p>\n\n<pre><code>    let my_data = web::Data::new(Mutex::new(MyServer::new()));\n    HttpServer::new(move || {\n        App::new()\n            .register_data(my_data.clone())  // only Arc is cloned\n            .service(web::resource(\"/myservice\").route(web::post().to(my_service)))\n            .service(web::resource(\"/list\").to(list_service))    \n    })\n</code></pre>\n"}], "owner": {"reputation": 1067, "user_id": 1783732, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/b2d57b42782b30f9c394b5ee213cc7c2?s=128&d=identicon&r=PG", "display_name": "user1783732", "link": "https://stackoverflow.com/users/1783732/user1783732"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 260, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1575938156, "creation_date": 1575920235, "last_edit_date": 1575924270, "question_id": 59255498, "link": "https://stackoverflow.com/questions/59255498/does-actix-webs-appregister-data-create-a-single-instance-or-one-instance-per", "title": "Does actix_web&#39;s App::register_data create a single instance or one instance per thread?", "body": "<p>I am trying to set up a global state for my <code>actix_web::HttpServer</code>, and it seems like <code>register_data</code> is the proper API (I could be wrong).</p>\n\n<p>From the <a href=\"https://docs.rs/actix-web/1.0.9/actix_web/web/struct.Data.html\" rel=\"nofollow noreferrer\">documentation</a>, it is not clear to me how to create a single instance of application data shared by all <code>HttpServer</code> threads. Here is my code piece:</p>\n\n<pre><code>HttpServer::new(|| {\n    App::new()\n        .register_data(web::Data::new(Mutex::new(MyServer::new())))\n        .service(web::resource(\"/myservice\").route(web::post().to(my_service)))\n        .service(web::resource(\"/list\").to(list_service))\n})\n</code></pre>\n\n<p>In the POST handler <code>my_service</code>, I update the state of <code>MyServer</code> and in the GET handler <code>list_service</code>, it will print out the state. </p>\n\n<p>While <code>my_service</code> is successful in storing the state, the <code>list_service</code> only prints empty output. How do I know if <code>HttpServer</code> created a single instance of <code>MyServer</code> or not? If not, how can I ensure it creates a single instance? The <a href=\"https://docs.rs/actix-web/1.0.9/actix_web/web/struct.Data.html\" rel=\"nofollow noreferrer\">documentation</a> of <code>register_data</code> states:</p>\n\n<blockquote>\n  <p>Application data does not need to be <code>Send</code> or <code>Sync</code>. Internally <code>Data</code> type uses <code>Arc</code>. if your data implements <code>Send</code> + <code>Sync</code> traits you can use <code>web::Data::new()</code> and avoid double <code>Arc</code>.</p>\n</blockquote>\n\n<p>I'm confused by that. What should the user do so that <code>register_data</code> will register a single instance of the data object? Does this following line in the example from the <a href=\"https://docs.rs/actix-web/1.0.9/actix_web/web/struct.Data.html\" rel=\"nofollow noreferrer\">documentation</a> create a single instance, or one instance per thread? </p>\n\n<pre><code>.register_data(data.clone())\n</code></pre>\n\n<p>I'm using actix-web 1.0.9.</p>\n"}, {"tags": ["error-handling", "rust", "deserialization", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575916597, "post_id": 59254690, "comment_id": 104719085, "body": "Have you read <a href=\"https://stackoverflow.com/q/46753955/155423\">How to transform fields during deserialization using Serde?</a>?"}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575918334, "post_id": 59254690, "comment_id": 104719780, "body": "@Shepmaster I haven&#39;t seen that answer before but I have been reading the associated documentation for a while (including the <code>deserialize_with</code> attribute). However when I was following the associated documentation I ended up writing <i>so much code</i> and felt there must be an easier way."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575919048, "post_id": 59254690, "comment_id": 104720047, "body": "<i>writing so much code and felt there must be an easier way</i> \u2014 and does the linked question show that way? (TL;DR: you can use intermediate automatic implementations of <code>Serialize</code> and <code>Deserialize</code>)."}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575940194, "post_id": 59254690, "comment_id": 104726714, "body": "@Shepmaster I thought I did, however the issue seems to be with the model of serde&#39;s deserializer. I can use a custom type which <i>correctly</i> deserializes the bad data <i>as</i> an error. However it seems to be that the <code>deserializer</code> object, which is passed in, is &quot;poisoned&quot; -- it remembers that it hit an error, and any further attempt to use it just returns that <i>same</i> error; it can&#39;t understand that the associated bad object is over and it should keep trying."}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575940246, "post_id": 59254690, "comment_id": 104726727, "body": "(cont) I suspect the issue is <a href=\"https://github.com/serde-rs/serde/issues/464\" rel=\"nofollow noreferrer\">github.com/serde-rs/serde/issues/464</a> which is an old issue (2016) opened for this issue, specifically to resolve this issue, and it looks like it was closed without doing it."}, {"owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1575940289, "post_id": 59254690, "comment_id": 104726739, "body": "I think I understand why this is the case (serde supports formats which are not self-describing, and this &quot;recovery&quot; is not possible in those cases) but it is a bit frustrating."}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 1, "last_activity_date": 1576046626, "last_edit_date": 1576046626, "creation_date": 1575966471, "answer_id": 59263004, "question_id": 59254690, "link": "https://stackoverflow.com/questions/59254690/how-to-use-serde-to-parse-a-field-that-might-fail-to-be-deserialized-without-fai/59263004#59263004", "title": "How to use Serde to parse a field that might fail to be deserialized without failing the entire deserialization?", "body": "<blockquote>\n  <p>certain field is sometimes misformatted</p>\n</blockquote>\n\n<p>You didn't say how malformed the incoming JSON was. Assuming it's still valid JSON, you can pull this off with <a href=\"https://serde.rs/attr-flatten.html\" rel=\"nofollow noreferrer\">Serde's struct <code>flatten</code></a> and customized deserialization:</p>\n\n<ul>\n<li><p>The customized deserialization is done in a way that never fails for valid JSON input, although it may not return value of expected type if the input has unexpected format.</p></li>\n<li><p>But these unexpected fields still need to go somewhere. Serde's struct <code>flatten</code> comes in handy here to catch them since <em>any</em> JSON snippet can be deserialized to a <code>HashMap&lt;String, Value&gt;</code>.</p></li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//# serde = { version = \"1.0.103\", features = [\"derive\"] }\n//# serde_json = \"1.0.44\"\nuse serde::{Deserialize, Deserializer, de::DeserializeOwned};\nuse serde_json::Value;\nuse std::collections::HashMap;\n\n#[derive(Deserialize, Debug)]\nstruct A {\n    keep_this: Foo,\n    trouble: SometimesBad,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Foo {\n    foo: i32,\n}\n\n#[derive(Deserialize, Debug)]\nstruct SometimesBad {\n    inner: TryParse&lt;Bar&gt;,\n\n    #[serde(flatten)]\n    blackhole: HashMap&lt;String, Value&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Bar {\n    bar: String,\n}\n\n#[derive(Debug)]\nenum TryParse&lt;T&gt; {\n    Parsed(T),\n    Unparsed(Value),\n    NotPresent\n}\n\nimpl&lt;'de, T: DeserializeOwned&gt; Deserialize&lt;'de&gt; for TryParse&lt;T&gt; {\n    fn deserialize&lt;D: Deserializer&lt;'de&gt;&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt; {\n        match Option::&lt;Value&gt;::deserialize(deserializer)? {\n            None =&gt; Ok(TryParse::NotPresent),\n            Some(value) =&gt; match T::deserialize(&amp;value) {\n                Ok(t) =&gt; Ok(TryParse::Parsed(t)),\n                Err(_) =&gt; Ok(TryParse::Unparsed(value)),\n            },\n        }\n    }\n}\n\nfn main() {\n    let valid = r#\"{ \"keep_this\": { \"foo\": 1 }, \"trouble\": { \"inner\": { \"bar\": \"one\"}}}\"#;\n    println!(\"{:#?}\", serde_json::from_str::&lt;A&gt;(valid));\n\n    let extra_field = r#\"{ \"keep_this\": { \"foo\": 1 }, \"trouble\": { \"inner\": { \"bar\": \"one\"}, \"extra\": 2019}}\"#;\n    println!(\"{:#?}\", serde_json::from_str::&lt;A&gt;(extra_field));\n\n    let wrong_type = r#\"{ \"keep_this\": { \"foo\": 1 }, \"trouble\": { \"inner\": { \"bar\": 1}}}\"#;\n    println!(\"{:#?}\", serde_json::from_str::&lt;A&gt;(wrong_type));\n\n    let missing_field = r#\"{ \"keep_this\": { \"foo\": 1 }, \"trouble\": { \"inner\": { \"baz\": \"one\"}}}\"#;\n    println!(\"{:#?}\", serde_json::from_str::&lt;A&gt;(missing_field));\n\n    let missing_inner = r#\"{ \"keep_this\": { \"foo\": 1 }, \"trouble\": { \"whatever\": { \"bar\": \"one\"}}}\"#;\n    println!(\"{:#?}\", serde_json::from_str::&lt;A&gt;(missing_inner));\n}\n</code></pre>\n\n<p>(The credit isn't all mine. <a href=\"https://github.com/serde-rs/serde/issues/1583\" rel=\"nofollow noreferrer\">Serde's issue 1583</a> basically has everything.)</p>\n"}], "owner": {"reputation": 1293, "user_id": 850659, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/772249379272025f1525849064eae7fd?s=128&d=identicon&r=PG", "display_name": "Richard Rast", "link": "https://stackoverflow.com/users/850659/richard-rast"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 451, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1576046626, "creation_date": 1575916263, "last_edit_date": 1575941181, "question_id": 59254690, "link": "https://stackoverflow.com/questions/59254690/how-to-use-serde-to-parse-a-field-that-might-fail-to-be-deserialized-without-fai", "title": "How to use Serde to parse a field that might fail to be deserialized without failing the entire deserialization?", "body": "<p>I am deserializing some JSON objects which come in as requests. The input body is nested, but a certain field is sometimes misformatted for a variety of reasons. In that situation I still want the rest of the object. This doesn't all have to be done through serde; but what is happening now, is that if a single subfield is messed up, the whole request is trashed. I want to somehow still deserialize that result and just mark the field as errored out. How can this be done?</p>\n\n<p>E.g. the data schema might look like:</p>\n\n<pre><code>struct BigNested {\n    a: Vec&lt;A&gt;,\n    b: B, // definition omitted\n}\n\nstruct A {\n    keep_this: Foo,\n    trouble: SometimesBad,\n}\n</code></pre>\n\n<p><code>trouble</code> is the field that's frequently coming in messed up. I would be happy to (e.g.) turn <code>trouble</code> into a <code>Result&lt;SometimesBad, Whatever&gt;</code> and process it from there, but I don't know how to get serde to let me do that.</p>\n"}, {"tags": ["loops", "rust", "iterator"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575913524, "post_id": 59253936, "comment_id": 104717782, "body": "you want <code>iter_mut()</code> here. cycle clone iterator to you end up by cloning your orignal vec for ever. And actually iter mut will probably not compile"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575913745, "post_id": 59253936, "comment_id": 104717879, "body": "btw is this for the day7 in advents of code ?"}, {"owner": {"reputation": 245138, "user_id": 2069064, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/e4V2X.jpg?s=128&g=1", "display_name": "Barry", "link": "https://stackoverflow.com/users/2069064/barry"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575913993, "post_id": 59253936, "comment_id": 104717983, "body": "@Stargateur Yes, I do want <code>iter_mut()</code>, you&#39;re right. And yes, that doesn&#39;t compile. Why not? And... perhaps... :-) ..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1575914317, "post_id": 59253936, "comment_id": 104718131, "body": "because you can&#39;t have more than one mut reference to the same object so <code>cycle()</code> can&#39;t clone the iterator."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1575915719, "last_edit_date": 1575915719, "creation_date": 1575913819, "answer_id": 59254114, "question_id": 59253936, "link": "https://stackoverflow.com/questions/59253936/why-are-mutable-values-from-an-iterator-created-with-cycle-not-updated-leadin/59254114#59254114", "title": "Why are mutable values from an iterator created with cycle() not updated, leading to an infinite loop despite a stop condition?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/59253936/why-does-cycle-on-into-iter-lead-to-an-infinite-loop#comment104717782_59253936\">mentioned by Stargateur in the comments</a>, <code>Vec::into_iter</code> creates an iterator of the <strong>values</strong> in the vector. <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.cycle\" rel=\"nofollow noreferrer\"><code>Iterator::cycle</code></a> then clones the iterator each time it is exhausted:</p>\n\n<pre><code>fn cycle(self) -&gt; Cycle&lt;Self&gt;\nwhere\n    Self: Clone, \n</code></pre>\n\n<blockquote>\n  <p>Instead of stopping at <code>None</code>, the iterator will instead start again, from the beginning. After iterating again, it will start at the beginning again. And again. And again. Forever.</p>\n</blockquote>\n\n<p>Your code is effectively doing:</p>\n\n<pre><code>loop {\n    let mut p = 1;\n    p += 1;\n}\n</code></pre>\n\n<p>This is also stated, indirectly, in two ways:</p>\n\n<ol>\n<li><p>The unneeded <code>mut</code> warning from the compiler: the vector itself is never modified.</p></li>\n<li><p>Your working example has a mutable reference that needs to be dereferenced: <code>*p += 1</code>. Your non-working version has a value.</p></li>\n</ol>\n\n<p>You'd want to use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.iter_mut\" rel=\"nofollow noreferrer\"><code>iter_mut</code></a> instead of <code>into_iter</code>. This will give you mutable references to values in the vector instead of consuming it. However, you cannot easily use <code>cycle</code> with <code>iter_mut</code> as mutable references cannot be copied; doing so could trivially lead to mutable aliasing, which is forbidden by Rust's rules of references.</p>\n\n<p>The correct workaround is to use indices, as you have done.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41413336/155423\">Do all primitive types implement the Copy trait?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40196586/155423\">Mutable reference to container object within iterator loop</a></li>\n<li><a href=\"https://stackoverflow.com/q/46003212/155423\">How to iterate over mutable elements inside another mutable iteration over the same elements?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39622783/155423\">How can I do a mutable borrow in a for loop?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34733811/155423\">What is the difference between iter and into_iter?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 4, "last_activity_date": 1575917794, "last_edit_date": 1575917794, "creation_date": 1575915739, "answer_id": 59254572, "question_id": 59253936, "link": "https://stackoverflow.com/questions/59253936/why-are-mutable-values-from-an-iterator-created-with-cycle-not-updated-leadin/59254572#59254572", "title": "Why are mutable values from an iterator created with cycle() not updated, leading to an infinite loop despite a stop condition?", "body": "<p>The <code>cycle()</code> iterator adaptor works by cloning each of the values in the iterator so that they may be traversed multiple times. As this was applied on top of <code>nums.into_iter()</code>, the vector was fully consumed and <code>p += 1</code> does not modify the vector retained in the cycle adaptor. The program would not end because no progress was being made.</p>\n\n<p>You would want an iterator of mutable references, so that the vector is modified rather than consumed. But cycling an iterator of mutable references is not permitted because the adaptor needs to clone those references, which is illegal. A streaming iterator, which can handle incoming items in an exclusive fashion, would probably allow you to do this, but such an API is not usable without <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1598-generic_associated_types.md\" rel=\"nofollow noreferrer\">generic associated types (GATs)</a>.</p>\n\n<p>One possible solution is not to use <code>.cycle()</code>: create an outer loop to traverse the vector multiple times and break explicitly on that loop once the intended condition arrives.</p>\n\n<pre><code>let mut nums = vec![1, 3];    \n\nlet mut counter = 0;\n\n'outer: loop {\n    for p in nums.iter_mut() {\n        println!(\"{}\", p);\n        *p += 1;\n        if *p &gt; 10 {\n            break 'outer;\n        }\n\n        counter += 1;\n        if counter &gt; 1000 {\n            println!(\"ERROR\");\n            break 'outer;\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1872322eaee2b39b3bdc7a13b1f6acbd\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 245138, "user_id": 2069064, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/e4V2X.jpg?s=128&g=1", "display_name": "Barry", "link": "https://stackoverflow.com/users/2069064/barry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1575917794, "creation_date": 1575913015, "last_edit_date": 1575914642, "question_id": 59253936, "link": "https://stackoverflow.com/questions/59253936/why-are-mutable-values-from-an-iterator-created-with-cycle-not-updated-leadin", "title": "Why are mutable values from an iterator created with cycle() not updated, leading to an infinite loop despite a stop condition?", "body": "<p>Consider the program:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut nums = vec![1, 3];    \n\n    let mut counter = 0;\n    for mut p in nums.into_iter().cycle() {\n        println!(\"{}\", p);\n        p += 1;\n        if p &gt; 10 {\n            break;\n        }\n\n        counter += 1;\n        if counter &gt; 1000 {\n            println!(\"ERROR\");\n            break;\n        }\n    }\n}\n</code></pre>\n\n<p>I expected this to print 1, 3, 2, 4, 3, 5, ... until it got to 10 and then halt. Instead, I got a warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: variable does not need to be mutable\n --&gt; src/main.rs:2:9\n  |\n2 |     let mut nums = vec![1, 2, 3];\n  |         ----^^^^\n  |         |\n  |         help: remove this `mut`\n  |\n</code></pre>\n\n<p>And then an infinite loop (well, only finite because I added the <code>counter</code> in there). Why is this an infinite loop?</p>\n\n<hr />\n\n<p>The behavior I wanted can also be written this way:</p>\n\n<pre><code>for idx in (0..nums.len()).cycle() {\n    let p = &amp;mut nums[idx];\n    println!(\"{}\", p);\n    *p += 1;\n    if *p &gt; 10 {\n        break;\n    }\n}\n</code></pre>\n\n<p>That works - but I don't want to iterate over the indices, I want to directly iterate over the values. Is there a way to write what I want?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 7, "creation_date": 1575912360, "post_id": 59253772, "comment_id": 104717305, "body": "It sounds like you want a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html\" rel=\"nofollow noreferrer\">HashSet</a>?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1575912381, "post_id": 59253772, "comment_id": 104717313, "body": "Are you looking for a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html\" rel=\"nofollow noreferrer\">set</a>? Does Go really not have that?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1575912450, "post_id": 59253772, "comment_id": 104717345, "body": "Even if sets didn&#39;t exist in Rust, a memory efficient, trivial type is the empty set: <code>()</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 5, "creation_date": 1575912716, "post_id": 59253772, "comment_id": 104717441, "body": "Implying that you need anonymous structs to create empty memory-efficient values strikes me as odd. Rust has many unit types you can use (<code>()</code> being the most trivial one), but set collection types are also readily available."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1575928595, "last_edit_date": 1575928595, "creation_date": 1575913201, "answer_id": 59253971, "question_id": 59253772, "link": "https://stackoverflow.com/questions/59253772/what-is-a-memory-efficient-type-for-a-map-with-no-meaningful-value-in-rust/59253971#59253971", "title": "What is a memory-efficient type for a map with no meaningful value in Rust?", "body": "<p>A <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html\" rel=\"nofollow noreferrer\"><code>HashSet</code></a> is <a href=\"https://github.com/rust-lang/rust/blob/1.39.0/src/libstd/collections/hash/set.rs#L111-L113\" rel=\"nofollow noreferrer\">defined as</a> a <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\"><code>HashMap</code></a> with the unit tuple as the value:</p>\n\n<pre><code>pub struct HashSet&lt;T, S = RandomState&gt; {\n    map: HashMap&lt;T, (), S&gt;,\n}\n</code></pre>\n\n<p>The <a href=\"https://github.com/rust-lang/rust/blob/1.39.0/src/liballoc/collections/btree/set.rs#L61-L63\" rel=\"nofollow noreferrer\">same is true</a> for <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeSet.html\" rel=\"nofollow noreferrer\"><code>BTreeSet</code></a> / <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeMap.html\" rel=\"nofollow noreferrer\"><code>BTreeMap</code></a>:</p>\n\n<pre><code>pub struct BTreeSet&lt;T&gt; {\n    map: BTreeMap&lt;T, ()&gt;,\n}\n</code></pre>\n\n<blockquote>\n  <p>what Rust type would use the least amount of memory</p>\n</blockquote>\n\n<p>Any type with only one possible value uses zero bytes. <code>()</code> is an easy-to-type one.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31107614/155423\">What does an empty set of parentheses mean when used in a generic type declaration?</a></li>\n</ul>\n"}], "owner": {"reputation": 13, "user_id": 5889502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef969126ce255688394e90b05a3771aa?s=128&d=identicon&r=PG&f=1", "display_name": "barnsley92", "link": "https://stackoverflow.com/users/5889502/barnsley92"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 0, "accepted_answer_id": 59253971, "answer_count": 1, "score": 1, "last_activity_date": 1576235634, "creation_date": 1575912184, "last_edit_date": 1575912930, "question_id": 59253772, "link": "https://stackoverflow.com/questions/59253772/what-is-a-memory-efficient-type-for-a-map-with-no-meaningful-value-in-rust", "title": "What is a memory-efficient type for a map with no meaningful value in Rust?", "body": "<p>In Go, a memory-efficient way of storing values you want to retrieve by key that has no associated value is to use a map of empty structs keyed with the data you want to store. For instance, if you have a list of strings you want to check have been previously seen by your program, you could do something like this: </p>\n\n<pre class=\"lang-golang prettyprint-override\"><code>var seen = map[string]struct{}{}\n\nfor _, str := range strings {\n\n if _, ok := seen[str]; ok {\n  // do something\n } else {\n  seen[str] = struct{}{}\n }\n\n}\n</code></pre>\n\n<p>Is there a Rust equivalent to this? I am aware that Rust doesn't have anonymous structs like Go, so what Rust type would use the least amount of memory in a map like the above example? Or is there a different, more idiomatic approach?</p>\n"}, {"tags": ["loops", "rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 2, "last_activity_date": 1575904893, "last_edit_date": 1575904893, "creation_date": 1575904333, "answer_id": 59251702, "question_id": 59251605, "link": "https://stackoverflow.com/questions/59251605/how-do-i-create-an-iterator-over-an-array-which-takes-values-from-index-i-and-i/59251702#59251702", "title": "How do I create an iterator over an array which takes values from index i and i+1?", "body": "<p>You can combine two features:</p>\n\n<ol>\n<li>Create an array iterator that skips the first elements (<code>iter().skip(1)</code>).</li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.zip\" rel=\"nofollow noreferrer\"><code>Iterator.zip</code></a></li>\n</ol>\n\n<pre><code>#[derive(Clone)]\npub struct Person {\n    pub firstname: Vec&lt;u8&gt;,\n    pub surname: Vec&lt;u8&gt;,\n}\n\nfn main() {\n    let p0 = Person {\n        firstname: vec![0u8; 5],\n        surname: vec![1u8; 5],\n    };\n    let p1 = Person {\n        firstname: vec![2u8; 7],\n        surname: vec![3u8; 2],\n    };\n    let p2 = Person {\n        firstname: vec![4u8; 8],\n        surname: vec![5u8; 8],\n    };\n    let p3 = Person {\n        firstname: vec![6u8; 3],\n        surname: vec![7u8; 1],\n    };\n\n    let people = [p0, p1, p2, p3];\n\n    for (i, j) in people.iter().zip(people.iter().skip(1)) {\n        println!(\"{:?}\", (&amp;i.firstname, &amp;j.surname));\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1dc5806cb4b0862d4789cc6d76c0ef87\" rel=\"nofollow noreferrer\">Permalink to the playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575905105, "post_id": 59251730, "comment_id": 104713569, "body": "I would add <a href=\"https://docs.rs/itertools/0.8.2/itertools/trait.Itertools.html?search=#method.tuple_windows\" rel=\"nofollow noreferrer\">docs.rs/itertools/0.8.2/itertools/&hellip;</a> to the suggestion."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575905307, "post_id": 59251730, "comment_id": 104713700, "body": "@Stargateur that&#39;s the &quot;Are there equivalents...&quot; question in the &quot;see also&quot; section. Since this case starts from an array/slice, I didn&#39;t feel like it needed to be directly mentioned."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1575904882, "last_edit_date": 1575904882, "creation_date": 1575904436, "answer_id": 59251730, "question_id": 59251605, "link": "https://stackoverflow.com/questions/59251605/how-do-i-create-an-iterator-over-an-array-which-takes-values-from-index-i-and-i/59251730#59251730", "title": "How do I create an iterator over an array which takes values from index i and i+1?", "body": "<p>I would use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.windows\" rel=\"nofollow noreferrer\"><code>slice::windows</code></a>:</p>\n\n<pre><code>for window in people.windows(2) {\n    println!(\"{:?}\", (&amp;window[0].firstname, &amp;window[1].surname))\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/51257304/155423\">Creating a sliding window iterator of slices of chars from a String</a></li>\n<li><a href=\"https://stackoverflow.com/q/42134874/155423\">Are there equivalents to slice::chunks/windows for iterators to loop over pairs, triplets etc?</a></li>\n<li><a href=\"https://stackoverflow.com/q/38545609/155423\">Pattern matching on slices</a></li>\n<li><a href=\"https://stackoverflow.com/q/48129565/155423\">How to convert a slice into an array reference?</a></li>\n</ul>\n"}], "owner": {"reputation": 2284, "user_id": 1964489, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/dced6d8951b4771cde68c08e372bbede?s=128&d=identicon&r=PG", "display_name": "Ziva", "link": "https://stackoverflow.com/users/1964489/ziva"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1575905328, "creation_date": 1575903995, "last_edit_date": 1575905328, "question_id": 59251605, "link": "https://stackoverflow.com/questions/59251605/how-do-i-create-an-iterator-over-an-array-which-takes-values-from-index-i-and-i", "title": "How do I create an iterator over an array which takes values from index i and i+1?", "body": "<p>I created a small example that runs in the Rust Playground:</p>\n\n<pre><code>#[derive(Clone)]\npub struct Person {\n    pub firstname: Vec&lt;u8&gt;,\n    pub surname: Vec&lt;u8&gt;,\n}\n\nfn main() {\n    let p0 = Person {\n        firstname: vec![0u8; 5],\n        surname: vec![1u8; 5],\n    };\n    let p1 = Person {\n        firstname: vec![2u8; 7],\n        surname: vec![3u8; 2],\n    };\n    let p2 = Person {\n        firstname: vec![4u8; 8],\n        surname: vec![5u8; 8],\n    };\n    let p3 = Person {\n        firstname: vec![6u8; 3],\n        surname: vec![7u8; 1],\n    };\n\n    let people = [p0, p1, p2, p3];\n\n    for i in 0..people.len() {\n        if i + 1 &lt; people.len() {\n            println!(\n                \"{:?}\",\n                (people[i].firstname.clone(), people[i + 1].surname.clone())\n            )\n        }\n    }\n}\n</code></pre>\n\n<p>Given the array <code>people</code>, I want to iterate its elements and collect tuples of the first name of the <code>person</code> at index <code>i</code> and the surname of the person at index <code>i+1</code>. This simple for loop does the job, but let's assume that instead of <code>println</code> I would like to pass such tuple into some function <code>f</code>. I can easily do this in this <code>for</code> loop, but I would like to learn whether I can implement that using an iterator <code>iter()</code> (and later apply <code>collect()</code> or <code>fold</code> functions if needed) instead of using the <code>for</code> loop? </p>\n"}, {"tags": ["rust", "rustfmt"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575889749, "post_id": 59247458, "comment_id": 104705095, "body": "Put it as an outer attribute I guess?"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575890332, "post_id": 59247458, "comment_id": 104705403, "body": "Ah yes that does seem to be the way."}], "answers": [{"tags": [], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "is_accepted": true, "score": 6, "last_activity_date": 1575890577, "creation_date": 1575890577, "answer_id": 59247825, "question_id": 59247458, "link": "https://stackoverflow.com/questions/59247458/is-there-a-stable-way-to-tell-rustfmt-to-skip-an-entire-file/59247825#59247825", "title": "Is there a stable way to tell Rustfmt to skip an entire file", "body": "<p>Currently Rustfmt traverses the mod tree itself so you can put the attribute on the file that declared the module you want to ignore.</p>\n\n<pre><code>#[rustfmt::skip]\nmod dont_format_this_file;\n</code></pre>\n\n<p>Then <code>dont_format_this_file.rs</code> will be skipped.</p>\n\n<p>However, Rustfmt 2 <a href=\"https://github.com/rust-lang/rustfmt/commit/09a028b64d04b720fa55aac0594688bb291297cd\" rel=\"noreferrer\">changed its behaviour</a> so that it <em>doesn't</em> traverse the mod tree, so you have to specify <code>dont_format_this_file.rs</code> directly. In that case it seems likely that it will find the <code>mod dont_format_this_file;</code> declaration so this may not work when Rustfmt 2 is released.</p>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 951, "favorite_count": 1, "accepted_answer_id": 59247825, "answer_count": 1, "score": 6, "last_activity_date": 1575890577, "creation_date": 1575889272, "question_id": 59247458, "link": "https://stackoverflow.com/questions/59247458/is-there-a-stable-way-to-tell-rustfmt-to-skip-an-entire-file", "title": "Is there a stable way to tell Rustfmt to skip an entire file", "body": "<p>The official way to get Rustfmt to skip an item is <code>#[rustfmt::skip]</code>, however I want it to skip an entire file. I tried this:</p>\n\n<pre><code>#![rustfmt::skip]\n</code></pre>\n\n<p>However you get this error</p>\n\n<blockquote>\n  <p>error[E0658]: non-builtin inner attributes are unstable</p>\n</blockquote>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/54726\" rel=\"noreferrer\">Here is the issue for that error.</a></p>\n\n<p>Is there a workaround for this? Solutions I am not interested in:</p>\n\n<ul>\n<li>Use unstable Rust</li>\n<li>Tell Rustfmt not to process the file using something external to the file (<code>rustfmt.toml</code> for example)</li>\n</ul>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1575884172, "post_id": 59245978, "comment_id": 104702157, "body": "This kind of methods have nothing to do with the platform AFAIK: they just take the binary representation of the number. Do you want to know the hardware representation of a number? That&#39;s usually pointless."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 4, "creation_date": 1575884181, "post_id": 59245978, "comment_id": 104702162, "body": "<code>0b01000</code> is <code>0b01000</code> in little endian, big endian, bi endian, space, other timeline, before the big bang. Yes the result will be always 3"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 6, "last_activity_date": 1575897791, "last_edit_date": 1575897791, "creation_date": 1575886687, "answer_id": 59246724, "question_id": 59245978, "link": "https://stackoverflow.com/questions/59245978/how-to-use-leading-zeros-trailing-zeros-in-platform-independent-way/59246724#59246724", "title": "How to use leading_zeros/trailing_zeros in platform independent way?", "body": "<p>The type <code>u32</code> respresents binary numbers with 32 bits as an abstract concept. You can imagine them as abstract, mathematical numbers in the range from 0 to 2<sup>32</sup>-1. The binary representation of these numbers is written in the usual convention of starting with the most significant bit (MSB) and ending with the least significant bit (LSB), and the <code>trailing_zeros()</code> method returns the number of trailing zeros in that representation.</p>\n\n<p>Endianness only comes into play when serializing such an integer to bytes, e.g. for writing it to a bytes buffer, a file or the network. You are not doing any of this in your code, so it doesn't matter here.</p>\n\n<p>As mentioned above, writing a number starting with the MSB is also just a convention, but this convention is pretty much universal today for numbers written in positional notation. For programming, this convention is only relevant when formatting a number for display, parsing a number from a string, and maybe for naming methods like <code>trailing_zeros()</code>. When storing an <code>u32</code> in a register, the bits don't have any defined order.</p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 368, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1575903233, "creation_date": 1575883914, "last_edit_date": 1575903233, "question_id": 59245978, "link": "https://stackoverflow.com/questions/59245978/how-to-use-leading-zeros-trailing-zeros-in-platform-independent-way", "title": "How to use leading_zeros/trailing_zeros in platform independent way?", "body": "<p>I want find the first non-zero bit in the binary representation of a  <code>u32</code>. <code>leading_zeros</code>/<code>trailing_zeros</code> looks like what I want:</p>\n\n<pre><code>let x: u32 = 0b01000;\nprintln!(\"{}\", x.trailing_zeros());\n</code></pre>\n\n<p>This prints <strong>3</strong> as expected and described in <a href=\"https://doc.rust-lang.org/std/primitive.u32.html#method.trailing_zeros\" rel=\"nofollow noreferrer\">the docs</a>. What will happen on big-endian machines, will it be <strong>3</strong> or some other number?</p>\n\n<p>The documentation says </p>\n\n<blockquote>\n  <p>Returns the number of trailing zeros in the binary representation</p>\n</blockquote>\n\n<p>is it related to machine binary representation (so the result of <code>trailing_zeros</code> depends on architecture) or base-2 numeral system (so result will be always <strong>3</strong>)?</p>\n"}, {"tags": ["io", "rust", "string-parsing"], "comments": [{"owner": {"reputation": 5078, "user_id": 6699447, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ERMjH.jpg?s=128&g=1", "display_name": "Abdul Niyas P M", "link": "https://stackoverflow.com/users/6699447/abdul-niyas-p-m"}, "edited": false, "score": 0, "creation_date": 1575874022, "post_id": 59243725, "comment_id": 104697954, "body": "Are you getting any Errors/Exceptions?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1575874137, "post_id": 59243725, "comment_id": 104697984, "body": "Your code is fine. If this is about getting some advice for writing an idiomatic code, you can post on codereview.stackexchange.com"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575874176, "post_id": 59243725, "comment_id": 104697999, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3e64b3e7e85fcb3ae357e05b1c3ab890\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> @FrenchBoiethios the code is not &quot;fine&quot; by the way"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575874539, "post_id": 59243725, "comment_id": 104698121, "body": "@Stargateur The OP didn&#39;t say anything about any requirement, so that&#39;s hard to answer anyway"}, {"owner": {"reputation": 13, "user_id": 12313755, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qby1GdALrEU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reVXgQ8CkAF8cX44GM995hgNMLg4w/photo.jpg?sz=128", "display_name": "William Vandrake", "link": "https://stackoverflow.com/users/12313755/william-vandrake"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575874856, "post_id": 59243725, "comment_id": 104698230, "body": "@FrenchBoiethios, the file is local so it wouldn&#39;t show up on an online ide."}, {"owner": {"reputation": 13, "user_id": 12313755, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qby1GdALrEU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reVXgQ8CkAF8cX44GM995hgNMLg4w/photo.jpg?sz=128", "display_name": "William Vandrake", "link": "https://stackoverflow.com/users/12313755/william-vandrake"}, "edited": false, "score": 0, "creation_date": 1575874868, "post_id": 59243725, "comment_id": 104698238, "body": "im not getting any error just    Finished dev [unoptimized + debuginfo] target(s) in 0.00s      Running <code>&#47;home&#47;whilhelm&#47;PycharmProjects&#47;untitled4&#47;target&#47;debug&#47;untitl&zwnj;&#8203;ed4 main input</code>"}, {"owner": {"reputation": 5078, "user_id": 6699447, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ERMjH.jpg?s=128&g=1", "display_name": "Abdul Niyas P M", "link": "https://stackoverflow.com/users/6699447/abdul-niyas-p-m"}, "edited": false, "score": 0, "creation_date": 1575875143, "post_id": 59243725, "comment_id": 104698332, "body": "Did you try <code>cargo run</code>?"}, {"owner": {"reputation": 13, "user_id": 12313755, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qby1GdALrEU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reVXgQ8CkAF8cX44GM995hgNMLg4w/photo.jpg?sz=128", "display_name": "William Vandrake", "link": "https://stackoverflow.com/users/12313755/william-vandrake"}, "reply_to_user": {"reputation": 5078, "user_id": 6699447, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ERMjH.jpg?s=128&g=1", "display_name": "Abdul Niyas P M", "link": "https://stackoverflow.com/users/6699447/abdul-niyas-p-m"}, "edited": false, "score": 0, "creation_date": 1575875200, "post_id": 59243725, "comment_id": 104698355, "body": "Yeah cargo run main.rs @AbdulNiyasPM"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1575875443, "post_id": 59243725, "comment_id": 104698442, "body": "you don&#39;t get anything because Result implement intoiterator and so your for loop do not cycle over your numbers but over one result from all your string and obviously &quot;50951\\n69212...&quot; is not a valid number."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 3, "last_activity_date": 1575895895, "last_edit_date": 1575895895, "creation_date": 1575879493, "answer_id": 59244903, "question_id": 59243725, "link": "https://stackoverflow.com/questions/59243725/how-to-do-simple-math-with-a-list-of-numbers-from-a-file-and-print-out-the-resul/59244903#59244903", "title": "How to do simple math with a list of numbers from a file and print out the result in Rust?", "body": "<p><a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.parse\" rel=\"nofollow noreferrer\"><code>str::parse::&lt;i32&gt;</code></a> can only parse a single number at a time, so you will need to split the text first and then parse each number one by one. For example if you have one number per line and no extra whitespace, you can use <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"nofollow noreferrer\"><code>BufRead::lines</code></a> to process the text line by line:</p>\n\n<pre><code>use std::fs::File;\nuse std::io::{BufRead, BufReader};\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let file = File::open(\"input\")?; // file is input\n    let mut buf_reader = BufReader::new(file);\n\n    for line in buf_reader.lines() {\n        let value = line?\n            .parse::&lt;i32&gt;()\n            .expect(\"Not able to parse: Content is malformed !\");\n\n        println!(\"{}\", value / 2);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>As an extra bonus this avoids reading the whole file into memory, which can be important if the file is big.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1576077351, "creation_date": 1576077351, "answer_id": 59288880, "question_id": 59243725, "link": "https://stackoverflow.com/questions/59243725/how-to-do-simple-math-with-a-list-of-numbers-from-a-file-and-print-out-the-resul/59288880#59288880", "title": "How to do simple math with a list of numbers from a file and print out the result in Rust?", "body": "<p>For tiny examples like this, I'd read the entire string at once, then split it up on lines. </p>\n\n<pre><code>use std::fs;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let contents = fs::read_to_string(\"input\")?;\n    for line in contents.trim().lines() {\n        let i: i32 = line.trim().parse()?;\n        let i = i / 2;\n        println!(\"{}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31192956/155423\">What&#39;s the de-facto way of reading and writing files in Rust 1.x?</a></li>\n</ul>\n\n<hr>\n\n<p>For tightly-controlled examples like this, I'd ignore errors occurring while parsing:</p>\n\n<pre><code>use std::fs;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let contents = fs::read_to_string(\"input\")?;\n    for i in contents.trim().lines().flat_map(|l| l.trim().parse::&lt;i32&gt;()) {\n        let i = i / 2;\n        println!(\"{}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43285372/155423\">Why does `Option` support `IntoIterator`?</a></li>\n</ul>\n\n<hr>\n\n<p>For fixed-input examples like this, I'd avoid opening the file at runtime at all, pushing the error to compile-time:</p>\n\n<pre><code>fn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let contents = include_str!(\"../input\");\n    for i in contents.trim().lines().flat_map(|l| l.trim().parse::&lt;i32&gt;()) {\n        let i = i / 2;\n        println!(\"{}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25505275/155423\">Is there a good way to include external resource data into Rust source code?</a></li>\n</ul>\n\n<hr>\n\n<p>If I wanted to handle failures to parse but treat the iterator as if errors were impossible, I'd use <code>Itertools::process_results</code>:</p>\n\n<pre><code>use itertools; // 0.8.2\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let contents = include_str!(\"../input\");\n\n    let numbers = contents.trim().lines().map(|l| l.trim().parse::&lt;i32&gt;());\n    let sum = itertools::process_results(numbers, |i| i.sum::&lt;i32&gt;());\n\n    println!(\"{:?}\", sum);\n\n    Ok(())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48841367/155423\">How do I perform iterator computations over iterators of Results without collecting to a temporary vector?</a></li>\n<li><a href=\"https://stackoverflow.com/q/26368288/155423\">How do I stop iteration and return an error when Iterator::map returns a Result::Err?</a></li>\n</ul>\n"}], "owner": {"reputation": 13, "user_id": 12313755, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qby1GdALrEU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reVXgQ8CkAF8cX44GM995hgNMLg4w/photo.jpg?sz=128", "display_name": "William Vandrake", "link": "https://stackoverflow.com/users/12313755/william-vandrake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1576077351, "creation_date": 1575873629, "last_edit_date": 1576076465, "question_id": 59243725, "link": "https://stackoverflow.com/questions/59243725/how-to-do-simple-math-with-a-list-of-numbers-from-a-file-and-print-out-the-resul", "title": "How to do simple math with a list of numbers from a file and print out the result in Rust?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::File;\nuse std::io::prelude::*;\nuse std::io::BufReader;\nuse std::iter::Iterator;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let file = File::open(\"input\")?; // file is input\n    let mut buf_reader = BufReader::new(file);\n\n    let mut contents = String::new();\n    buf_reader.read_to_string(&amp;mut contents)?;\n\n    for i in contents.parse::&lt;i32&gt;() {\n        let i = i / 2;\n        println!(\"{}\", i);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>list of numbers:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>50951\n69212\n119076\n124303\n95335\n65069\n109778\n113786\n124821\n103423\n128775\n111918\n138158\n141455\n92800\n50908\n107279\n77352\n129442\n60097\n84670\n143682\n104335\n105729\n87948\n59542\n81481\n147508\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3221, "user_id": 2245634, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1", "display_name": "Amit\u0101bha", "link": "https://stackoverflow.com/users/2245634/amit%c4%81bha"}, "edited": false, "score": 1, "creation_date": 1575870474, "post_id": 59242277, "comment_id": 104696985, "body": "i run rustup update stable,it solved!thanks you very much!"}], "tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 10, "last_activity_date": 1575863269, "creation_date": 1575863269, "answer_id": 59242277, "question_id": 59242242, "link": "https://stackoverflow.com/questions/59242242/compile-error-len-is-not-yet-stable-as-a-const-fn/59242277#59242277", "title": "Compile Error len is not yet stable as a const fn", "body": "<p>The <code>0.5.x</code> would appear to require Rust 1.39 so the easiest option would likely be upgrading to the newest version.</p>\n\n<p>The error states</p>\n\n<blockquote>\n  <p><code>core::slice::&lt;impl [T]&gt;::len</code> is not yet stable as a const fn</p>\n</blockquote>\n\n<p>and if you look at <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1390-2019-11-07\" rel=\"noreferrer\">the release notes for <code>1.39</code></a> you can see that one of the entries is</p>\n\n<blockquote>\n  <p><code>str::len</code>, <code>[T]::len</code> and <code>str::as_bytes</code> are now const functions</p>\n</blockquote>\n\n<p>so this crate specifically requires >=1.39</p>\n"}], "owner": {"reputation": 3221, "user_id": 2245634, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/OHoy2.jpg?s=128&g=1", "display_name": "Amit\u0101bha", "link": "https://stackoverflow.com/users/2245634/amit%c4%81bha"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1471, "favorite_count": 0, "accepted_answer_id": 59242277, "answer_count": 1, "score": 7, "last_activity_date": 1575864262, "creation_date": 1575862964, "last_edit_date": 1575864262, "question_id": 59242242, "link": "https://stackoverflow.com/questions/59242242/compile-error-len-is-not-yet-stable-as-a-const-fn", "title": "Compile Error len is not yet stable as a const fn", "body": "<p>I get an error from one of my dependencies <a href=\"https://crates.io/crates/bytes\" rel=\"noreferrer\"><code>bytes</code></a> <code>0.5.2</code>. Here a code example of the error:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub const fn foo(foo: &amp;'static [u8]) -&gt; usize {\n    foo.len()\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `core::slice::&lt;impl [T]&gt;::len` is not yet stable as a const fn\n --&gt; &lt;source&gt;:2:5\n  |\n2 |     foo.len()\n  |     ^^^^^^^^^\nerror: aborting due to previous error\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>active toolchain\n----------------\n\nstable-x86_64-pc-windows-msvc (default) rustc 1.38.0 (625451e37 2019-09-23)\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1575852894, "post_id": 59240479, "comment_id": 104693918, "body": "If you want ownership, you&#39;d generally leave the value as a <code>String</code>. What&#39;s the motivation for wanting <code>&amp;str</code> here? The function signature, as you&#39;ve defined it, is not possible because there isn&#39;t anywhere to borrow from that is left alive after the function call."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575854737, "post_id": 59240479, "comment_id": 104694185, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str\">Return local String as a slice (&amp;str)</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575854940, "post_id": 59240479, "comment_id": 104694216, "body": "tl;dr: use <code>String</code> for owned strings."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575855837, "post_id": 59240479, "comment_id": 104694337, "body": "There are many other versions of this question. <a href=\"https://stackoverflow.com/q/32682876/3650362\">Is there any way to return a reference to a variable created in a function?</a> is one. <a href=\"https://stackoverflow.com/q/43857098/3650362\">How to return a instance of a struct that uses a locally declared variable</a> and <a href=\"https://stackoverflow.com/q/54758052/3650362\">How to solve \u201creturns a value referencing data owned by the current function\u201d error in Rust?</a> are a little closer to your case."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1575880231, "creation_date": 1575880231, "answer_id": 59245059, "question_id": 59240479, "link": "https://stackoverflow.com/questions/59240479/the-correct-way-to-annotate-lifetimes-determine-ownership-of-strings-in-a-metho/59245059#59245059", "title": "The correct way to annotate lifetimes/ determine ownership of strings in a method?", "body": "<p>As others have said in the comments, the easiest way to do it is to use <code>String</code> everywhere. That being said, if you wan to avoid extra copies and allocations, you can push the responsibility for owning the string higher up the call chain. If you want to do that, you will need to change your function signature so that it borrows <code>msg</code> instead of taking ownership, and add the required lifetime parameters. Something like this:</p>\n\n<pre><code>pub enum PubSubMessage&lt;'a&gt; {\n    // For now I won't worry about subbing/unsubbing to an array of channels\n    SUBSCRIBE { channel: &amp;'a str },\n    UNSUBSCRIBE { channel: &amp;'a str },\n    PUBLISH { channel: &amp;'a str, msg: &amp;'a str},\n    PSUBSCRIBE { pattern: &amp;'a str },\n    PUNSUBSCRIBE { pattern: &amp;'a str},\n}\n\npub fn parse_message&lt;'a&gt; (msg: &amp;'a str) -&gt; Result&lt;PubSubMessage&lt;'a&gt;, String&gt; {\n    let msg_contents: Vec&lt;_&gt; = msg.split(\" \").collect();\n\n    return match msg_contents.as_slice() {\n        [\"SUBSCRBE\", channel] =&gt; Ok(PubSubMessage::SUBSCRIBE { channel }),\n        [\"UNSUBSCRIBE\", channel] =&gt; Ok(PubSubMessage::UNSUBSCRIBE { channel }),\n        [\"PUBLISH\", channel, msg] =&gt; Ok(PubSubMessage::PUBLISH { channel, msg }),\n        _ =&gt; Err(\"Could not parse ws message.\".to_string())\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=48855f2d03e64d128305d9658f919e0d\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 11, "user_id": 8891977, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UNkjRLflTfA/AAAAAAAAAAI/AAAAAAAAAqw/2jReAna5e_Y/photo.jpg?sz=128", "display_name": "Musicpulpite", "link": "https://stackoverflow.com/users/8891977/musicpulpite"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1575880231, "creation_date": 1575844068, "question_id": 59240479, "link": "https://stackoverflow.com/questions/59240479/the-correct-way-to-annotate-lifetimes-determine-ownership-of-strings-in-a-metho", "title": "The correct way to annotate lifetimes/ determine ownership of strings in a method?", "body": "<p>just starting out on my adventures in Rust and trying to figure out the right way to create and return an enum that should take ownership of a &amp;str string slice created from a String passed into the method. I don't think lifetime annotations in and of themselves will solve the problem since the original string argument will go out of scope at the end of the function block regardless. Any help would be much appreciated.</p>\n\n<pre><code>pub enum PubSubMessage {\n    // For now I won't worry about subbing/unsubbing to an array of channels\n    SUBSCRIBE { channel: &amp;str },\n    UNSUBSCRIBE { channel: &amp;str },\n    PUBLISH { channel: &amp;str, msg: &amp;str},\n    PSUBSCRIBE { pattern: &amp;str },\n    PUNSUBSCRIBE { pattern: &amp;str},\n}\n\npub fn parse_message(msg: String) -&gt; Result&lt;PubSubMessage, String&gt; {\n    let msg_contents: Vec&lt;&amp;str&gt; = msg.split(\" \").collect();\n\n    return match msg_contents.as_slice() {\n        [\"SUBSCRBE\", channel] =&gt; Ok(PubSubMessage::SUBSCRIBE { channel }),\n        [\"UNSUBSCRIBE\", channel] =&gt; Ok(PubSubMessage::UNSUBSCRIBE { channel }),\n        [\"PUBLISH\", channel, msg] =&gt; Ok(PubSubMessage::PUBLISH { channel, msg }),\n        _ =&gt; Err(\"Could not parse ws message.\".to_string())\n    }\n}\n</code></pre>\n\n<p>The current compiler error that I'm getting is just that the enum definition expects lifetime parameters.</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 1321, "user_id": 1291664, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/95854ef7aaf132a9f9ed8fd61366f7df?s=128&d=identicon&r=PG", "display_name": "\u0110or\u0111e Zelji\u0107", "link": "https://stackoverflow.com/users/1291664/%c4%90or%c4%91e-zelji%c4%87"}, "edited": false, "score": 0, "creation_date": 1575843839, "post_id": 59240348, "comment_id": 104692217, "body": "This is not answer to your question, but I suggest you to read this great article <a href=\"https://blog.yoshuawuyts.com/error-handling-survey\" rel=\"nofollow noreferrer\">blog.yoshuawuyts.com/error-handling-survey</a> . It is not about Error Handling in Rust but about using many different ways/crates to do it. Also, mode detailed content you can find on this link <a href=\"https://stevedonovan.github.io/rust-gentle-intro/6-error-handling.html\" rel=\"nofollow noreferrer\">stevedonovan.github.io/rust-gentle-intro/6-error-handling.ht&zwnj;&#8203;ml</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575883352, "post_id": 59240348, "comment_id": 104701722, "body": "Doesn&#39;t <code>?</code> call <code>into</code> automatically? What happens if you remove the <code>map_err</code>?"}, {"owner": {"reputation": 355, "user_id": 10019917, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qoQ4MMftuuA/AAAAAAAAAAI/AAAAAAAAAA0/G4mu8VtJ-Zw/photo.jpg?sz=128", "display_name": "Andrew Moffat", "link": "https://stackoverflow.com/users/10019917/andrew-moffat"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575910786, "post_id": 59240348, "comment_id": 104716592, "body": "@FrenchBoiethios updated my post with the error output.  Rust doesn&#39;t know how to convert a <code>foo::Error</code> to a <code>bar::Error</code> without going through the shim.  <code>foo::Error::into() -&gt; ShimErr::into() -&gt; bar::Error</code>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575911798, "post_id": 59240348, "comment_id": 104717030, "body": "@AndrewMoffat Oh right, sorry, I misread your question."}], "answers": [{"comments": [{"owner": {"reputation": 355, "user_id": 10019917, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qoQ4MMftuuA/AAAAAAAAAAI/AAAAAAAAAA0/G4mu8VtJ-Zw/photo.jpg?sz=128", "display_name": "Andrew Moffat", "link": "https://stackoverflow.com/users/10019917/andrew-moffat"}, "edited": false, "score": 1, "creation_date": 1576179729, "post_id": 59298294, "comment_id": 104825334, "body": "I&#39;m unable to change the signature of <code>fn do_something() -&gt; Result&lt;i32&gt;</code> to be the custom error, since it is a trait method from <code>bar::SomeTrait</code> though."}], "tags": [], "owner": {"reputation": 9, "user_id": 12522279, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4a85b89ba7c08c449478a8d3367cfa5c?s=128&d=identicon&r=PG&f=1", "display_name": "drklee3", "link": "https://stackoverflow.com/users/12522279/drklee3"}, "is_accepted": false, "score": -1, "last_activity_date": 1576128882, "creation_date": 1576128882, "answer_id": 59298294, "question_id": 59240348, "link": "https://stackoverflow.com/questions/59240348/whats-the-idiomatic-way-of-creating-a-rust-error-shim/59298294#59298294", "title": "What&#39;s the idiomatic way of creating a Rust Error shim?", "body": "<p>The way I handle multiple different errors from other crates would be to make my own <code>Error</code> enum and use that instead of other errors directly.  </p>\n\n<p>So instead of a tuple struct that only contains <code>foo::Error</code>, you can create an enum that can have both <code>foo::Error</code> and <code>bar::Error</code>.  After this, you can convert all the errors to the custom enum error with <code>?</code>.</p>\n\n<p>In certain cases, I think you'll still need to use something like <code>.map_err(Into::into)</code> occasionally, but usually only when the variable being returned is a <code>Result</code> with an external error.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use bar::Error as BarError;\nuse foo::Error as FooError;\nuse std::fmt::{Display, Formatter, Result as FmtResult};\nuse std::result::Result as StdResult;\n\n/// Common result type that uses the custom error\npub type Result&lt;T&gt; = StdResult&lt;T, Error&gt;;\n\n/// Common error type used as a holder for errors from various other libraries.\n#[derive(Debug)]\npub enum Error {\n    Bar(BarError),\n    Foo(FooError),\n}\n\nimpl From&lt;BarError&gt; for Error {\n    fn from(err: BarError) -&gt; Error {\n        Error::Bar(err)\n    }\n}\n\nimpl From&lt;FooError&gt; for Error {\n    fn from(err: FooError) -&gt; Error {\n        Error::Foo(err)\n    }\n}\n\nimpl Display for Error {\n    fn fmt(&amp;self, f: &amp;mut Formatter) -&gt; FmtResult {\n        match *self {\n            Error::Bar(ref inner) =&gt; inner.fmt(f),\n            Error::Foo(ref inner) =&gt; inner.fmt(f),\n        }\n    }\n}\n\nimpl StdError for Error {\n    fn description(&amp;self) -&gt; &amp;str {\n        match *self {\n            Error::Bar(ref inner) =&gt; inner.description(),\n            Error::Foo(ref inner) =&gt; inner.description(),\n        }\n    }\n}\n</code></pre>\n\n<p>Now you can use the custom <code>Result</code> and <code>Error</code> as follows.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// this Result is now our custom Result type with custom error\n// same as std::result::Result&lt;i32, Error&gt; (with Error as our custom error)\nfn do_something() -&gt; Result&lt;i32&gt; {\n    let foo_val: i32 = foo::call_something()?; // should convert to our custom error\n    Ok(foo_val * 2)\n}\n\nfn do_something_else() -&gt; Result&lt;i32&gt; {\n    // directly returning a Result&lt;&gt; with a different error type will need map_err\n    foo::call_something().map_err(Into::into)\n}\n</code></pre>\n"}], "owner": {"reputation": 355, "user_id": 10019917, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qoQ4MMftuuA/AAAAAAAAAAI/AAAAAAAAAA0/G4mu8VtJ-Zw/photo.jpg?sz=128", "display_name": "Andrew Moffat", "link": "https://stackoverflow.com/users/10019917/andrew-moffat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 516, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1576128882, "creation_date": 1575843044, "last_edit_date": 1575911813, "question_id": 59240348, "link": "https://stackoverflow.com/questions/59240348/whats-the-idiomatic-way-of-creating-a-rust-error-shim", "title": "What&#39;s the idiomatic way of creating a Rust Error shim?", "body": "<p>I have two error types that are defined in external crates.  Let's call them <code>foo::Error</code> and <code>bar::Error</code>.  Because they are both defined externally, I cannot create a direct <code>From</code> or <code>Into</code> conversion between the two.</p>\n\n<p>In my own crate, I'm using implementing a trait from <code>bar</code>, which expects return values of <code>Result&lt;T, bar::Error&gt;</code>.  In the methods of my implementation, I'm calling functions from <code>foo</code>, which return many <code>Result&lt;T, foo::Error&gt;</code> types.</p>\n\n<p>I would like to map these <code>foo::Error</code> errors to <code>bar::Error</code> errors, so that my trait implementation is neat, but the best that I can do is create a separate shim error, and then have a clunky <code>.map_err(ShimErr::from)?</code> on everything.  This can start to litter up my code if I'm calling many <code>foo::</code> functions in my implementation.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use foo;\nuse bar;\n\nstruct ShimErr(foo::Error);\n\nimpl From&lt;foo::Error&gt; for ShimErr {\n    fn from(e: foo::Error) -&gt; Self {\n        Self(e)\n    }\n}\n\nimpl From&lt;ShimErr&gt; for bar::Error {\n    fn from(e: ShimErr) -&gt; Self {\n        Self{}\n    }\n}\n\nstruct MyTraitImpl {}\n\nimpl bar::SomeTrait for MyTraitImpl {\n    fn do_something() -&gt; Result&lt;i32, bar::Error&gt; {\n        // FIXME: THIS IS CLUNKY\n        let foo_val: i32 = foo::call_something().map_err(ShimErr::from)?;\n        Ok(foo_val * 2)\n    }\n}\n</code></pre>\n\n<p>Is there a better way?  In an ideal world, there would be a way to just use <code>?</code></p>\n\n<p>If I remove <code>map_err</code> and try to use <code>?</code> directly:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `?` couldn't convert the error to `bar::Error`\n  --&gt; shimtest.rs:32:49\n   |\n32 |         let foo_val: i32 = foo::call_something()?;\n   |                                                 ^ the trait `std::convert::From&lt;foo::Error&gt;` is not implemented for `bar::Error`\n   |\n   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n   = help: the following implementations were found:\n             &lt;bar::Error as std::convert::From&lt;ShimErr&gt;&gt;\n   = note: required by `std::convert::From::from`\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "async-await"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575827166, "post_id": 59237895, "comment_id": 104687681, "body": "so you ask how to do async in rust ? That big, I will be happy to read an answer on that but I think it&#39;s too broad. Anyway, you need something that will run the task, I think the (only ?) one is a city named <a href=\"https://tokio.rs/\" rel=\"nofollow noreferrer\">tokio</a>. There is a lot of resource but I&#39;m didn&#39;t look recently so I don&#39;t know if there have update tutorial to use async feature."}], "answers": [{"comments": [{"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "edited": false, "score": 0, "creation_date": 1576009847, "post_id": 59244691, "comment_id": 104756839, "body": "Just as an aside, I don&#39;t care about order in which feeds appear after having read them, so it&#39;s not really a problem."}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "edited": false, "score": 0, "creation_date": 1576010176, "post_id": 59244691, "comment_id": 104757004, "body": "In fact, the most annoying part is that I get <code>the return type of a function must have a statically known size</code> because I try to return a <code>Vec&lt;Feed&gt;</code> which indeed is of unkown size. So how can I avoid that problem ?"}, {"owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "edited": false, "score": 0, "creation_date": 1576011490, "post_id": 59244691, "comment_id": 104757546, "body": "Well, ok, i&#39;ve understood. Now it will be good to have these futures run parallel"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 5, "last_activity_date": 1575900009, "last_edit_date": 1575900009, "creation_date": 1575878418, "answer_id": 59244691, "question_id": 59237895, "link": "https://stackoverflow.com/questions/59237895/how-to-process-a-vector-as-an-asynchronous-stream/59244691#59244691", "title": "How to process a vector as an asynchronous stream?", "body": "<blockquote>\n  <p>How to execute that stream? I was thinking about using <code>task::spawn</code> but it doesn't seems to work</p>\n</blockquote>\n\n<p>In the <code>async/await</code> world, asynchronous code is meant to be executed by an executor, which is not part of the standard library but provided by third-party crates such as <a href=\"https://tokio.rs/\" rel=\"noreferrer\"><code>tokio</code></a>. <code>task::spawn</code> only schedules one instance of <code>async fn</code> to run, not actually running it.</p>\n\n<blockquote>\n  <p>How to have results joined into a vec (which is a sync struct)</p>\n</blockquote>\n\n<p>The bread and butter of your rss reader seems to be <code>f.read</code>. It should be turned into an asynchronous function. Then the vector of feeds will be mapped into a vector of futures, which need to be polled to completion.</p>\n\n<p>The <code>futures</code> crate has <code>futures::stream::futures_unordered::FuturesUnordered</code> to help you do that. <code>FuturesUnordered</code> itself implements <code>Stream</code> trait. This stream is then collected into the result vector and <code>await</code>ed to completion like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//# tokio = { version = \"0.2.4\", features = [\"full\"] }\n//# futures = \"0.3.1\"\nuse tokio::time::delay_for;\nuse futures::stream::StreamExt;\nuse futures::stream::futures_unordered::FuturesUnordered;\nuse std::error::Error;\nuse std::time::{Duration, Instant};\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let start = Instant::now();\n    let feeds = (0..10).collect::&lt;Vec&lt;_&gt;&gt;();\n    let res = read_feeds(feeds).await;\n    dbg!(res);\n    dbg!(start.elapsed());\n\n    Ok(())\n}\n\nasync fn read_feeds(feeds: Vec&lt;u32&gt;) -&gt; Vec&lt;u32&gt; {\n    feeds.iter()\n        .map(read_feed)\n        .collect::&lt;FuturesUnordered&lt;_&gt;&gt;()\n        .collect::&lt;Vec&lt;_&gt;&gt;()\n        .await\n}\n\nasync fn read_feed(feed: &amp;u32) -&gt; u32 {\n    delay_for(Duration::from_millis(500)).await;\n\n    feed * 2\n}\n</code></pre>\n\n<p><code>delay_for</code> is to simulate the potentially expensive operation. It also helps to demonstrate that these readings indeed happen concurrently without any explicit thread related logic.</p>\n\n<p>One nuance here. Unlike its synchronous counterpart, the results of reading rss feeds aren't in the same order of feeds themselves any more, whichever returns the first will be at the front. You need to deal with that somehow.</p>\n"}], "owner": {"reputation": 21030, "user_id": 15619, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f169a510b7cba5a57e86d520b268447?s=128&d=identicon&r=PG", "display_name": "Riduidel", "link": "https://stackoverflow.com/users/15619/riduidel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1308, "favorite_count": 0, "accepted_answer_id": 59244691, "answer_count": 1, "score": 4, "last_activity_date": 1575903138, "creation_date": 1575825555, "last_edit_date": 1575903138, "question_id": 59237895, "link": "https://stackoverflow.com/questions/59237895/how-to-process-a-vector-as-an-asynchronous-stream", "title": "How to process a vector as an asynchronous stream?", "body": "<p>In my <a href=\"https://github.com/Riduidel/rrss2imap\" rel=\"noreferrer\">RSS reader project</a>, I want to read my RSS feeds asynchronously. Currently, they're read synchronously thanks to <a href=\"https://github.com/Riduidel/rrss2imap/blob/master/src/store.rs#L135-L138\" rel=\"noreferrer\">this code block</a></p>\n\n<pre><code>self.feeds = self\n    .feeds\n    .iter()\n    .map(|f| f.read(&amp;self.settings))\n    .collect::&lt;Vec&lt;Feed&gt;&gt;();\n</code></pre>\n\n<p>I want to make that code asyncronous, because it will allow me to better handle poor web server responses.</p>\n\n<p>I understand I can use a <code>Stream</code> that I can create from my <code>Vec</code> using <code>stream::from_iter(...)</code> which transforms the code into something like</p>\n\n<pre><code>self.feeds = stream::from_iter(self.feeds.iter())\n    .map(|f| f.read(&amp;self.settings))\n    // ???\n    .collect::&lt;Vec&lt;Feed&gt;&gt;()\n}\n</code></pre>\n\n<p>But then, I have two questions</p>\n\n<ol>\n<li>How to have results joined into a <code>Vec</code> (which is a syncronous struct)?</li>\n<li>How to execute that stream? I was thinking about using <code>task::spawn</code> but it doesn't seems to work ...</li>\n</ol>\n"}, {"tags": ["rust", "iterator", "mutability"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575817123, "post_id": 59236489, "comment_id": 104684828, "body": "TL;DR: you can&#39;t do that, &quot;I guess I struggle to find a better way to design a structure of my world, but can&#39;t think of anything.&quot; Does this answer your question? <a href=\"https://stackoverflow.com/questions/57017747/why-does-refactoring-by-extracting-a-method-trigger-a-borrow-checker-error\">Why does refactoring by extracting a method trigger a borrow checker error?</a> to give you a more precise answer you need to give a more precise use case your <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is incomplete what is suppose to to <code>add_ressource()</code> ?."}, {"owner": {"reputation": 67, "user_id": 7938106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb6c306320ebce26c68ff5e1f9ee8fed?s=128&d=identicon&r=PG&f=1", "display_name": "David Hor&#225;\u010dek", "link": "https://stackoverflow.com/users/7938106/david-hor%c3%a1%c4%8dek"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575821281, "post_id": 59236489, "comment_id": 104686025, "body": "I&#39;ve filled up the add_resource: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b7f4f80426c83496fe290cd248418224\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>  It adds produced resources into a storage that holds each of a ResourceEnum type with associated amount."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575823623, "post_id": 59236489, "comment_id": 104686657, "body": "I advice you to never use <code>for_each()</code> side effect have no place in iterator. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=08b177db40fb434eb3d8739addb10f49\" rel=\"nofollow noreferrer\">Here</a> the duplicate solution for your code. By the way you should use a hashmap for your resources or even put them directly."}, {"owner": {"reputation": 67, "user_id": 7938106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb6c306320ebce26c68ff5e1f9ee8fed?s=128&d=identicon&r=PG&f=1", "display_name": "David Hor&#225;\u010dek", "link": "https://stackoverflow.com/users/7938106/david-hor%c3%a1%c4%8dek"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575827168, "post_id": 59236489, "comment_id": 104687682, "body": "Thats way better... and good tip for a HashMap, thank you a lot, good bye."}], "answers": [{"comments": [{"owner": {"reputation": 67, "user_id": 7938106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb6c306320ebce26c68ff5e1f9ee8fed?s=128&d=identicon&r=PG&f=1", "display_name": "David Hor&#225;\u010dek", "link": "https://stackoverflow.com/users/7938106/david-hor%c3%a1%c4%8dek"}, "edited": false, "score": 0, "creation_date": 1575821460, "post_id": 59237090, "comment_id": 104686070, "body": "Ah, seems unavoidable to collect it first. :/ Thanks, I wasn&#39;t sure if I just missed something or I&#39;m really trying to do impossible."}], "tags": [], "owner": {"reputation": 7002, "user_id": 827593, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/4d852cf0e1b0e4036e07754fc3925f46?s=128&d=identicon&r=PG", "display_name": "JP Moresmau", "link": "https://stackoverflow.com/users/827593/jp-moresmau"}, "is_accepted": true, "score": 1, "last_activity_date": 1575819956, "creation_date": 1575819956, "answer_id": 59237090, "question_id": 59236489, "link": "https://stackoverflow.com/questions/59236489/rust-iterator-with-mut-ref-of-owner-inside/59237090#59237090", "title": "Rust - iterator with mut ref of owner inside", "body": "<p>What can of course work is to separate the production of resources and adding them to the city. I've modified your <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f3d7f642e0a33aefde7212988f5cabc5\" rel=\"nofollow noreferrer\">Playground</a> to get it to compile:</p>\n\n<pre><code>let mut v:Vec&lt;Option&lt;ResourceEnum&gt;&gt; = city.buildings.iter().map(|f| f.produce()).collect();\nv.drain(..).for_each(|r| city.add_resource(r));\n</code></pre>\n\n<p>But certainly you cannot call a mutable function on City while iterating on the buildings inside the same object.</p>\n"}], "owner": {"reputation": 67, "user_id": 7938106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb6c306320ebce26c68ff5e1f9ee8fed?s=128&d=identicon&r=PG&f=1", "display_name": "David Hor&#225;\u010dek", "link": "https://stackoverflow.com/users/7938106/david-hor%c3%a1%c4%8dek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 0, "closed_date": 1575821365, "accepted_answer_id": 59237090, "answer_count": 1, "score": 2, "last_activity_date": 1575823712, "creation_date": 1575815936, "last_edit_date": 1575823712, "question_id": 59236489, "link": "https://stackoverflow.com/questions/59236489/rust-iterator-with-mut-ref-of-owner-inside", "closed_reason": "Duplicate", "title": "Rust - iterator with mut ref of owner inside", "body": "<p>I struggle with iterator which also mutates other fields of it's owner.</p>\n\n<p>I've re-created a simplified example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=78d6c5be551215de03107a8aba288a6a\" rel=\"nofollow noreferrer\">Playground</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(PartialEq)]\nenum ResourceEnum {\n    Food,\n}\n\nstruct Resource {\n    r#type: ResourceEnum,\n    amount: u32,\n}\n\ntrait Building {\n    fn produce(&amp;self) -&gt; Option&lt;Resource&gt;;\n}\n\nstruct Farm {}\n\nstruct City {\n    buildings: Vec&lt;Box&lt;dyn Building&gt;&gt;,\n    resources: Vec&lt;Resource&gt;,\n}\n\nimpl City {\n    fn add_resource(&amp;mut self, received: Option&lt;Resource&gt;) {\n        if let Some(received) = received {\n            if let Some(mut res) = self\n                .resources\n                .iter_mut()\n                .find(|r| r.r#type == received.r#type)\n            {\n                res.amount += received.amount;\n            } else {\n                self.resources.push(received);\n            }\n        }\n    }\n}\n\nimpl Building for Farm {\n    fn produce(&amp;self) -&gt; Option&lt;Resource&gt; {\n        Some(Resource {\n            r#type: ResourceEnum::Food,\n            amount: 10,\n        })\n    }\n}\n\nfn main() {\n    let mut city = City {\n        buildings: vec![],\n        resources: vec![],\n    };\n\n    city.buildings.iter().for_each(|f| {\n        city.add_resource(f.produce());\n    });\n}\n</code></pre>\n\n<p>Error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `city` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:55:36\n   |\n53 |     city.buildings.iter().for_each(|f| {\n   |     --------------        -------- ^^^ mutable borrow occurs here\n   |     |                     |\n   |     |                     immutable borrow later used by call\n   |     immutable borrow occurs here\n54 |         city.add_resource(f.produce());\n   |         ---- second borrow occurs due to use of `city` in closure\n</code></pre>\n\n<p>What I'm trying to achieve is to have a single struct holding my 'world' -> City, which holds buildings like farms and all it's available resources like food.</p>\n\n<p>At each state update I want to compute harvest from all farms and so on... and add produced resources into City storage, but can't figure out a way without storing all production as a separate Vector and iterating over it once again to just add it into City storage which seems redundant.</p>\n\n<p>I guess I struggle to find a better way to design a structure of my world, but can't think of anything.</p>\n"}, {"tags": ["syntax", "rust"], "answers": [{"tags": [], "owner": {"reputation": 23007, "user_id": 7943564, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b6f0ad4cd865587a782bf697d3b18d18?s=128&d=identicon&r=PG&f=1", "display_name": "glennsl", "link": "https://stackoverflow.com/users/7943564/glennsl"}, "is_accepted": true, "score": 9, "last_activity_date": 1575817492, "last_edit_date": 1575817492, "creation_date": 1575816310, "answer_id": 59236551, "question_id": 59236458, "link": "https://stackoverflow.com/questions/59236458/nest-let-syntax-from-ocaml/59236551#59236551", "title": "Nest let syntax from ocaml", "body": "<p>Rust uses curly braces to delimit scopes. This works fine:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x = {\n  let y = 42;\n  y + 1\n};\n</code></pre>\n"}], "owner": {"reputation": 1702, "user_id": 3143065, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/qyVhK.jpg?s=128&g=1", "display_name": "Cjen1", "link": "https://stackoverflow.com/users/3143065/cjen1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 59236551, "answer_count": 1, "score": 1, "last_activity_date": 1575817504, "creation_date": 1575815781, "last_edit_date": 1575817504, "question_id": 59236458, "link": "https://stackoverflow.com/questions/59236458/nest-let-syntax-from-ocaml", "title": "Nest let syntax from ocaml", "body": "<p>I'm just starting to learn Rust and I'm coming from an OCaml background.</p>\n\n<p>One thing that I often use is nested <code>let</code> expressions, in order to group related code together.</p>\n\n<pre><code>let x = \n  let y = 42 in\n  y + 1\nin\n...\n</code></pre>\n\n<p>My naive translation of this to rust would be:</p>\n\n<pre><code>let x = \n  let y = 42;\n  y + 1\n;\n</code></pre>\n\n<p>However this fails to compile.</p>\n\n<p>Is this type of syntax possible, or is it heavily frowned upon and thus is not supported?</p>\n"}, {"tags": ["opengl", "rust", "glut", "egl"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1575803287, "post_id": 59234532, "comment_id": 104681545, "body": "I think you want to search for &quot;glutin headless context&quot;. You need to create an OpenGL context without opening a window. That&#39;s what headless contexts do. Try replacing <code>build_windowed</code> with <a href=\"https://docs.rs/glutin/0.21.0/glutin/struct.ContextBuilder.html#method.build_headless\" rel=\"nofollow noreferrer\"><code>build_headless</code></a>."}, {"owner": {"reputation": 31, "user_id": 9786196, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "DWCarrot", "link": "https://stackoverflow.com/users/9786196/dwcarrot"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1576394603, "post_id": 59234532, "comment_id": 104881250, "body": "thank you.hmm...but now, I find the <code>build_headless</code> method returns <code>Context&lt;NotCurrent&gt;</code> and I use <code>glium::backend::glutin::headless::Headless</code> as <code>Facade</code> to replace <code>glium::Display</code> and the output is nothing... what happened?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1576401937, "post_id": 59234532, "comment_id": 104882492, "body": "What do you mean &quot;the output is nothing&quot;? How do you observe the output if not via a window? But it seems like you want to make a [MVCE] out of this problem and ask another question on this site!"}, {"owner": {"reputation": 31, "user_id": 9786196, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "DWCarrot", "link": "https://stackoverflow.com/users/9786196/dwcarrot"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1576651864, "post_id": 59234532, "comment_id": 104964411, "body": "hmm...right, I&#39;m going to ask another question"}], "owner": {"reputation": 31, "user_id": 9786196, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "DWCarrot", "link": "https://stackoverflow.com/users/9786196/dwcarrot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 207, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1575801358, "creation_date": 1575801358, "question_id": 59234532, "link": "https://stackoverflow.com/questions/59234532/is-there-any-way-to-use-off-screen-render-with-rust", "title": "Is there any way to use off screen render with Rust", "body": "<p>I am now working on a GPU-render project with Rust and OpenGL (more accurately, with glium ) and now the rendered picture is shown on the screen.</p>\n\n<p>But the next step is to distribute this program on a linux server with an Nvidia GPU but without X-server. I have learned from <a href=\"https://devblogs.nvidia.com/egl-eye-opengl-visualization-without-x-server/\" rel=\"nofollow noreferrer\">https://devblogs.nvidia.com/egl-eye-opengl-visualization-without-x-server/</a> that <code>EGL</code> can be used for off-screen render, and I have notice that <code>glutin</code> crate contains <code>EGL</code> binding, such as <code>glutin_egl_sys</code>; but I can not find the function <code>eglGetDisplay()</code>. </p>\n\n<p>So I wonder is there any way to use off screen render with Rust, or must I use <code>EGL</code> raw bindings?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1575789857, "post_id": 59232877, "comment_id": 104678954, "body": "this will be a totally absurd thing to do let the compiler to the magic for you. But if you want <a href=\"https://doc.rust-lang.org/std/alloc/trait.Alloc.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/alloc/trait.Alloc.html</a>."}, {"owner": {"reputation": 1285, "user_id": 1344375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87c20490a411ddddfbed35971db22bba?s=128&d=identicon&r=PG&f=1", "display_name": "mrnateriver", "link": "https://stackoverflow.com/users/1344375/mrnateriver"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575793824, "post_id": 59232877, "comment_id": 104679605, "body": "Thanks for the link. However, I strongly disagree about absurdity. I think any &quot;magic&quot; is inherently unreliable, let alone that it requires knowledge of compiler internals. Moreover, when performance is critical, or resources are limited, all memory operations are important, and in this particular case it would be nice to be sure that no unnecessary operations are performed."}, {"owner": {"reputation": 1285, "user_id": 1344375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87c20490a411ddddfbed35971db22bba?s=128&d=identicon&r=PG&f=1", "display_name": "mrnateriver", "link": "https://stackoverflow.com/users/1344375/mrnateriver"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575794780, "post_id": 59232877, "comment_id": 104679760, "body": "I should also note that even though the provided link technically solves the problem, I&#39;m pretty sure it&#39;s not the idiomatic way. It&#39;s just too low level. I could&#39;ve called an allocator directly for that matter, probably, and get the raw pointer to the heap. I&#39;m pretty sure there must be a language-level (or &quot;stdlib-level&quot;) construct for that."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1575800378, "post_id": 59232877, "comment_id": 104680899, "body": "An other &quot;solution&quot; is to use <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.new_uninit\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/boxed/struct.Box.html#method.new_unini&zwnj;&#8203;t</a> that new so I didn&#39;t think to it before, still low level in my opinion. But use this to &quot;avoid using stack&quot; is stupid."}], "answers": [{"comments": [{"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 1, "creation_date": 1547781268, "post_id": 54247269, "comment_id": 95318844, "body": "Am I correct in believing that this is a pretty big shortcoming, especially considering the <code>box</code> feature (based on my interpretation of the tracking ticket) will never stabilize?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1547781403, "post_id": 54247269, "comment_id": 95318874, "body": "@w.brian you are free to believe what you&#39;d like. Plenty of people have solved real-world problems (including in WASM) without access to placement new, so my opinion is <i>no</i>, this is not a pretty big shortcoming."}, {"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 1, "creation_date": 1547781778, "post_id": 54247269, "comment_id": 95318952, "body": "Rust -&gt; WASM is relatively new, so the &quot;real world problems&quot; argument isn&#39;t particularly convincing. Do you have any meaningful suggestions or is your intent to be mildly condescending?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1547782074, "post_id": 54247269, "comment_id": 95319002, "body": "@w.brian You asked for my opinion about the severity of a feature that is missing and I provided it, no condescension was intended. I even prefaced my opinion with a statement that it might differ from yours and that should be accepted, as that&#39;s the point of opinions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1547782135, "post_id": 54247269, "comment_id": 95319017, "body": "@w.brian  Take a look at any of the Rust / WASM video games that are available, as those feel like they should be &quot;large&quot; and &quot;real world&quot; (<a href=\"https://bokuweb.github.io/rustynes/\" rel=\"nofollow noreferrer\">NES emulator</a>, for example). I&#39;ve placed my knowledge of workarounds in the answer."}, {"owner": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 0, "creation_date": 1547782385, "post_id": 54247269, "comment_id": 95319053, "body": "I&#39;m here to solicit feedback from people who know far more than I do. I understand that my opinions may be unfounded, and I have no desire to hold unfounded opinions, which is why I phrased my question in that way.  Strictly as a matter of feedback, stating that &quot;I&#39;m free to believe what I&#39;d like&quot; while also pointing out that this is apparently a trivial problem that other people have solved doesn&#39;t exactly leave me with the best impression.  Anyhow, thanks for taking the time to answer my question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 1, "creation_date": 1547782869, "post_id": 54247269, "comment_id": 95319157, "body": "@w.brian I never stated that it was trivial. However, your question was &quot;[is this] a pretty big shortcoming&quot;, and that&#39;s entirely <i>a matter of opinion and context</i>. To a certain group of people, the lack of this feature is a hard stop for ever using Rust. Perhaps you or your program fall into this domain, in which case the answer is an emphatic <b>yes</b>... for <i>you</i>. For <i>me</i>, the answer is <b>no</b>, because I&#39;ve never run into the problem (and I attempt to write code for microcontrollers)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 13635, "user_id": 547365, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/ddefbca930fdd39846b698bab7ac3146?s=128&d=identicon&r=PG", "display_name": "w.brian", "link": "https://stackoverflow.com/users/547365/w-brian"}, "edited": false, "score": 1, "creation_date": 1547783065, "post_id": 54247269, "comment_id": 95319206, "body": "@w.brian you asked a clear-cut question to which there can be an objective answer, which I&#39;ve attempted to provide. Beyond that, perhaps something about your code can be changed to not require as much instantaneous stack space (for example, sprinkling <code>Box</code> in judicious places). If so, then there&#39;s a workaround possible. We can&#39;t help with any of that in this question because it&#39;s not about your specific code."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1547782153, "last_edit_date": 1547782153, "creation_date": 1547781158, "answer_id": 54247269, "question_id": 59232877, "link": "https://stackoverflow.com/questions/59232877/how-to-allocate-structs-on-the-heap-without-taking-up-space-on-the-stack-in-stab/54247269#54247269", "title": "How to allocate structs on the heap without taking up space on the stack in stable Rust?", "body": "<blockquote>\n  <p>Is there a way to allocate directly to the heap without <code>box</code>?</p>\n</blockquote>\n\n<p>No. If there was, it wouldn't need a language change.</p>\n\n<p>People tend to avoid this by using the unstable syntax indirectly, such as by using one of the standard containers which, in turn, uses it internally.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30242770/155423\">How to allocate arrays on the heap in Rust 1.0?</a></li>\n<li><a href=\"https://stackoverflow.com/q/53691012/155423\">Is there any way to allocate a standard Rust array directly on the heap, skipping the stack entirely?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30352802/155423\">What does the box keyword do?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49762055/155423\">What is the &lt;- symbol in Rust?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 1285, "user_id": 1344375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87c20490a411ddddfbed35971db22bba?s=128&d=identicon&r=PG&f=1", "display_name": "mrnateriver", "link": "https://stackoverflow.com/users/1344375/mrnateriver"}, "edited": false, "score": 0, "creation_date": 1576567118, "post_id": 59237344, "comment_id": 104931461, "body": "This is a good answer. However, I was asking about <i>stable</i> Rust, and as it turns out, there is a solution for it, albeit not as elegant as this syntax. Moreover, since this syntax is basically a compiler-internal feature (<a href=\"https://github.com/rust-lang/rust/issues/49733\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/49733</a>), I reckon stable solution will be such for a long time."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 9, "last_activity_date": 1576594399, "last_edit_date": 1576594399, "creation_date": 1575821789, "answer_id": 59237344, "question_id": 59232877, "link": "https://stackoverflow.com/questions/59232877/how-to-allocate-structs-on-the-heap-without-taking-up-space-on-the-stack-in-stab/59237344#59237344", "title": "How to allocate structs on the heap without taking up space on the stack in stable Rust?", "body": "<p>You seem to be looking for the <a href=\"https://doc.rust-lang.org/unstable-book/language-features/box-syntax.html\" rel=\"noreferrer\"><code>box_syntax</code></a> feature, however as of Rust 1.39.0 it is not stable and only available with a nightly compiler. It also seems like this feature will not be stabilized any time soon, and might have a different design if it ever gets stabilized.</p>\n\n<p>On a nightly compiler, you can write:</p>\n\n<pre><code>#![feature(box_syntax)]\n\nstruct Test { a: i32, b: i64 }\n\nfn foo() -&gt; Box&lt;Test&gt; {\n    box Test { a: 123, b: 456 }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1595270049, "post_id": 59368947, "comment_id": 111410824, "body": "Shouldn&#39;t this use <a href=\"https://doc.rust-lang.org/std/ptr/fn.write.html\" rel=\"nofollow noreferrer\"><code>std::ptr::write</code></a> instead of assignment with <code>=</code> to not drop the old value at that location?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1595272120, "post_id": 59368947, "comment_id": 111411737, "body": "This code causes undefined behavior when it attempts to assign the values for <code>a</code> and <code>b</code> as it constructs a reference to the fields <code>a</code> and <code>b</code>, but those have uninitialized junk in them. There&#39;s no way to do this correctly until <a href=\"https://rust-lang.github.io/rfcs/2582-raw-reference-mir-operator.html\" rel=\"nofollow noreferrer\">raw references</a> are stabilized."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1595272170, "post_id": 59368947, "comment_id": 111411756, "body": "@OptimisticPeach that would be <b>better</b>, but it&#39;s not needed in <i>this specific case</i> because <code>i64</code> and <code>&amp;str</code> don&#39;t have a <code>Drop</code> implementation."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1595272823, "post_id": 59368947, "comment_id": 111412025, "body": "@Shepmaster Whoops, sorry, I misread <code>&amp;str</code> as <code>String</code>, hence my concern."}], "tags": [], "owner": {"reputation": 1285, "user_id": 1344375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87c20490a411ddddfbed35971db22bba?s=128&d=identicon&r=PG&f=1", "display_name": "mrnateriver", "link": "https://stackoverflow.com/users/1344375/mrnateriver"}, "is_accepted": true, "score": 7, "last_activity_date": 1576594359, "last_edit_date": 1576594359, "creation_date": 1576565382, "answer_id": 59368947, "question_id": 59232877, "link": "https://stackoverflow.com/questions/59232877/how-to-allocate-structs-on-the-heap-without-taking-up-space-on-the-stack-in-stab/59368947#59368947", "title": "How to allocate structs on the heap without taking up space on the stack in stable Rust?", "body": "<p>As of Rust 1.39, there seems to be only one way in stable to allocate memory on the heap directly - by using <a href=\"https://doc.rust-lang.org/std/alloc/fn.alloc.html\" rel=\"noreferrer\"><code>std::alloc::alloc</code></a> (note that the docs state that it is expected to be deprecated). It's reasonably unsafe.</p>\n\n<p>Example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct Test {\n    a: i64,\n    b: &amp;'static str,\n}\n\nfn main() {\n    use std::alloc::{alloc, dealloc, Layout};\n\n    unsafe {\n        let layout = Layout::new::&lt;Test&gt;();\n        let ptr = alloc(layout) as *mut Test;\n\n        (*ptr).a = 42;\n        (*ptr).b = \"testing\";\n\n        let bx = Box::from_raw(ptr);\n\n        println!(\"{:?}\", bx);\n    }\n}\n</code></pre>\n\n<p>This approach is used in the unstable method <a href=\"https://doc.rust-lang.org/std/boxed/struct.Box.html#method.new_uninit\" rel=\"noreferrer\"><code>Box::new_uninit</code></a>.</p>\n\n<p>It turns out there's even a crate for avoiding <code>memcpy</code> calls (among other things): <a href=\"https://crates.io/crates/copyless\" rel=\"noreferrer\">copyless</a>. This crate also uses an approach based on this.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1595257404, "post_id": 62998250, "comment_id": 111404735, "body": "This code is non-idiomatic and improperly uses <code>unsafe</code> code. This can trivially be used to introduce undefined behavior."}, {"owner": {"reputation": 3153, "user_id": 6333444, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XvcwE.png?s=128&g=1", "display_name": "mousetail", "link": "https://stackoverflow.com/users/6333444/mousetail"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1595257509, "post_id": 62998250, "comment_id": 111404792, "body": "But it&#39;s the only way? All the other answers say that using <code>alloc</code> is the way to go, and this seems to be the most safe way to use <code>alloc</code>"}], "tags": [], "owner": {"reputation": 3153, "user_id": 6333444, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XvcwE.png?s=128&g=1", "display_name": "mousetail", "link": "https://stackoverflow.com/users/6333444/mousetail"}, "is_accepted": false, "score": -1, "last_activity_date": 1595257342, "last_edit_date": 1595257342, "creation_date": 1595257211, "answer_id": 62998250, "question_id": 59232877, "link": "https://stackoverflow.com/questions/59232877/how-to-allocate-structs-on-the-heap-without-taking-up-space-on-the-stack-in-stab/62998250#62998250", "title": "How to allocate structs on the heap without taking up space on the stack in stable Rust?", "body": "<p>I recently had the same problem. Based on the answers here and other places, I wrote a simple function for heap allocation:</p>\n<pre><code>pub fn unsafe_allocate&lt;T&gt;() -&gt; Box&lt;T&gt; {\n    let mut grid_box: Box&lt;T&gt;;\n    unsafe {\n        use std::alloc::{alloc, dealloc, Layout};\n        let layout = Layout::new::&lt;T&gt;();\n        let ptr = alloc(layout) as *mut T;\n        grid_box = Box::from_raw(ptr);\n    }\n    return grid_box;\n}\n</code></pre>\n<p>This will create a region in memory automatically sized after <code>T</code> and unsafely convince Rust that that memory region is an actual <code>T</code> value. The memory may contain arbitrary data; you should not assume all values are 0.</p>\n<p>Example use:</p>\n<pre><code>let mut triangles: Box&lt;[Triangle; 100000]&gt; = unsafe_allocate::&lt;[Triangle; 100000]&gt;();\n</code></pre>\n"}], "owner": {"reputation": 1285, "user_id": 1344375, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87c20490a411ddddfbed35971db22bba?s=128&d=identicon&r=PG&f=1", "display_name": "mrnateriver", "link": "https://stackoverflow.com/users/1344375/mrnateriver"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 969, "favorite_count": 2, "accepted_answer_id": 59368947, "answer_count": 4, "score": 7, "last_activity_date": 1595257342, "creation_date": 1575785091, "last_edit_date": 1595256109, "question_id": 59232877, "link": "https://stackoverflow.com/questions/59232877/how-to-allocate-structs-on-the-heap-without-taking-up-space-on-the-stack-in-stab", "title": "How to allocate structs on the heap without taking up space on the stack in stable Rust?", "body": "<p>In this code...</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct Test { a: i32, b: i64 }\n    \nfn foo() -&gt; Box&lt;Test&gt; {              // Stack frame:\n    let v = Test { a: 123, b: 456 }; // 12 bytes\n    Box::new(v)                      // `usize` bytes (`*const T` in `Box`)\n}\n</code></pre>\n<p>... as far as I understand (ignoring possible optimizations), <code>v</code> gets allocated on the stack and then copied to the heap, before being returned in a <code>Box</code>.</p>\n<p>And this code...</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo() -&gt; Box&lt;Test&gt; {\n    Box::new(Test { a: 123, b: 456 })\n}\n</code></pre>\n<p>...shouldn't be any different, presumably, since there should be a temporary variable for struct allocation (assuming compiler doesn't have any special semantics for the instantiation expression inside <code>Box::new()</code>).</p>\n<p>I've found <a href=\"https://stackoverflow.com/a/31506225/5877243\">Do values in return position always get allocated in the parents stack frame or receiving Box?</a>. Regarding my specific question, it only proposes the experimental <code>box</code> syntax, but mostly talks about compiler optimizations (copy elision).</p>\n<p>So my question remains: using <strong>stable</strong> Rust, how does one allocate <code>struct</code>s directly on the heap, without relying on compiler optimizations?</p>\n"}, {"tags": ["multithreading", "parallel-processing", "rust", "rayon"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575795019, "post_id": 59233404, "comment_id": 104679805, "body": "60 is an absurd precision to print an <code>f64</code> with; they only have about 16 to start with."}, {"owner": {"reputation": 3, "user_id": 5654151, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206941665198351/picture?type=large", "display_name": "Adil Roubleh", "link": "https://stackoverflow.com/users/5654151/adil-roubleh"}, "edited": false, "score": 0, "creation_date": 1575808908, "post_id": 59233404, "comment_id": 104682767, "body": "I honestly don&#39;t know how to thank you enough. God bless . You just saved my life"}, {"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575825760, "post_id": 59233404, "comment_id": 104687261, "body": "@trentcl I just picked a number where I could see all the zeroes at the end"}], "tags": [], "owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "is_accepted": true, "score": 1, "last_activity_date": 1575791177, "last_edit_date": 1575791177, "creation_date": 1575790735, "answer_id": 59233404, "question_id": 59232496, "link": "https://stackoverflow.com/questions/59232496/how-to-use-rayon-for-parallel-calculation-of-pi/59233404#59233404", "title": "How to use Rayon for parallel calculation of PI", "body": "<p>The first step is to make your algorithm parallelizable, by making each iteration independent. The first thing I did was add a debug statement to print the final value of <code>k</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>        k += 1.0;\n    }\n\n    dbg!(k);\n\n    return 1.0 / total;\n</code></pre>\n\n<p>that printed <code>k = 2</code>, so I can use that to create a range of <code>k</code> values independent for each iteration:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>(0..=iterations) // [0, 1, 2] for iterations = 2\n</code></pre>\n\n<p>We'll iterate over the elements in that range, instead of using the epsilon check you have:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn estimate_pi(iterations: usize) -&gt; f64 {\n    let mut total: f64 = 0.0;\n    let factor1: f64 = 2.0;\n    let factor: f64 = (factor1.sqrt() * 2.0) / 9801.0;\n\n    for i in 0..=iterations {\n        let k: f64 = i as f64;\n\n        let num: f64 = factorial(4.0 * k) * (1103.0 + (26390.0 * k));\n        let numm: f64 = 396.0;\n        let den: f64 = factorial(k).powf(4.0) * numm.powf(4.0 * k);\n        let term: f64 = factor * num / den;\n\n        total += term;\n    }\n\n    return 1.0 / total;\n}\n\n// call estimate_pi(2)\n</code></pre>\n\n<p>Total is just a sum of all of the iterations, so we can convert this from a loop into an map-reduce operation. For each number in the range, we calculate the <code>term</code>. Then, we use <code>fold</code> (reduce) to calculate the sum.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn estimate_pi(iterations: usize) -&gt; f64 {\n    let factor1: f64 = 2.0;\n    let factor: f64 = (factor1.sqrt() * 2.0) / 9801.0;\n\n    let sum: f64 = (0..=iterations).into_iter().map(|i| {\n        let k: f64 = i as f64;\n\n        let num: f64 = factorial(4.0 * k) * (1103.0 + (26390.0 * k));\n        let numm: f64 = 396.0;\n        let den: f64 = factorial(k).powf(4.0) * numm.powf(4.0 * k);\n        let term: f64 = factor * num / den;\n\n        term\n    }).fold(0.0, |a, b| a + b);\n\n    return 1.0 / sum;\n}\n</code></pre>\n\n<p>Now we can use rayon's methods to convert this into a parallel operation. Replace <code>into_iter()</code> with <code>into_par_iter()</code> and <code>fold(0.0, |a, b| a + b)</code> with <code>reduce(|| 0.0, |a, b| a + b)</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn estimate_pi(iterations: usize) -&gt; f64 {\n    let factor1: f64 = 2.0;\n    let factor: f64 = (factor1.sqrt() * 2.0) / 9801.0;\n\n    // map is now a parallel map, and reduce is a parallel reduce\n    let sum: f64 = (0..=iterations).into_par_iter().map(|i| {\n        let k: f64 = i as f64;\n\n        let num: f64 = factorial(4.0 * k) * (1103.0 + (26390.0 * k));\n        let numm: f64 = 396.0;\n        let den: f64 = factorial(k).powf(4.0) * numm.powf(4.0 * k);\n        let term: f64 = factor * num / den;\n\n        term\n    }).reduce(|| 0.0, |a, b| a + b);\n\n    return 1.0 / sum;\n}\n</code></pre>\n\n<p>Now to clean up the code a bit to make it more idiomatic:</p>\n\n<ul>\n<li>remove explicit typing where appropriate</li>\n<li>use implicit returns</li>\n<li>use constant for sqrt(2)</li>\n<li>more meaningful variable names</li>\n<li>embed <code>396</code> in the expressions</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::f64::consts::*;\n\npub fn estimate_pi(iterations: usize) -&gt; f64 {\n    let factor = (SQRT_2 * 2.0) / 9801.0;\n\n    let sum = (0..=iterations).into_par_iter().map(|i| {\n        let k = i as f64;\n\n        let numerator = factorial(4.0 * k) * (1103.0 + (26390.0 * k));\n        let denominator = factorial(k).powf(4.0) * (396_f64).powf(4.0 * k);\n\n        factor * numerator / denominator\n    }).reduce(|| 0.0, |a, b| a + b);\n\n    1.0 / sum\n}\n</code></pre>\n\n<p>As a last step, we can make <code>factorial</code> parallel as well:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// now have to call this with a `usize`\npub fn factorial(n: usize) -&gt; f64 {\n    let out = (1..=n).into_par_iter().reduce(|| 1, |a, b| a * b);\n    out as f64\n}\n\npub fn estimate_pi(iterations: usize) -&gt; f64 {\n    let factor = (SQRT_2 * 2.0) / 9801.0;\n\n    let sum = (0..=iterations).into_par_iter().map(|i| {\n        let k = i as f64;\n\n        // notice we now pass the `i: usize` in here\n        let numerator = factorial(4 * i) * (1103.0 + (26390.0 * k));\n        let denominator = factorial(i).powf(4.0) * (396_f64).powf(4.0 * k);\n\n        factor * numerator / denominator\n    }).reduce(|| 0.0, |a, b| a + b);\n\n    1.0 / sum\n}\n</code></pre>\n\n<h3>Final Code</h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rayon::prelude::*;\nuse std::f64::consts::*;\n\npub fn factorial(n: usize) -&gt; f64 {\n    let out = (1..=n).into_par_iter().reduce(|| 1, |a, b| a * b);\n    out as f64\n}\n\npub fn estimate_pi(iterations: usize) -&gt; f64 {\n    let factor = (SQRT_2 * 2.0) / 9801.0;\n\n    let sum = (0..=iterations).into_par_iter().map(|i| {\n        let k = i as f64;\n\n        let numerator = factorial(4 * i) * (1103.0 + (26390.0 * k));\n        let denominator = factorial(i).powf(4.0) * (396_f64).powf(4.0 * k);\n\n        factor * numerator / denominator\n    }).reduce(|| 0.0, |a, b| a + b);\n\n    1.0 / sum\n}\n\nfn main() {\n    // our algorithm results in the same value as the constant\n    println!(\"pi_a: {:.60}\", estimate_pi(2));\n    println!(\"pi_c: {:.60}\", PI);\n}\n</code></pre>\n\n<p>Output</p>\n\n<pre><code>pi_a: 3.141592653589793115997963468544185161590576171875000000000000\npi_c: 3.141592653589793115997963468544185161590576171875000000000000\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e0851eba1db3ca37a3a6c2a5a7ec00f5\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<h3>Recommendations</h3>\n\n<p>You should benchmark different versions of this with different amounts of parallelism to see what is more or less performant. Could be that rayon parallel iterations results in less performance since you have so few total iterations.</p>\n\n<p>You might also consider using a lookup table for factorials since <code>n &lt;= k * 4 &lt;= 8</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn factorial(n: usize) -&gt; f64 {\n    const TABLE: [f64; 9] = [\n        1.0,     // 0!\n        1.0,     // 1!\n        2.0,     // 2!\n        6.0,     // 3!\n        24.0,    // 4!\n        120.0,   // 5!\n        720.0,   // 6!\n        5040.0,  // 7!\n        40320.0, // 8!\n    ];\n\n    TABLE[n]\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8cfc499e27eaa49f9fe099fb021f938d\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>And, of course, enabling inlining can help as well.</p>\n"}], "owner": {"reputation": 3, "user_id": 5654151, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206941665198351/picture?type=large", "display_name": "Adil Roubleh", "link": "https://stackoverflow.com/users/5654151/adil-roubleh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "accepted_answer_id": 59233404, "answer_count": 1, "score": 0, "last_activity_date": 1575791249, "creation_date": 1575780212, "last_edit_date": 1575791249, "question_id": 59232496, "link": "https://stackoverflow.com/questions/59232496/how-to-use-rayon-for-parallel-calculation-of-pi", "title": "How to use Rayon for parallel calculation of PI", "body": "<p>My code can calculate Pi using Ramanujan's formula without Rayon and I want to implement Rayon for parallel threading as this is my project.</p>\n\n<p>I know that I need to use this</p>\n\n<pre><code>use rayon::prelude::*;\nfn sum_of_squares(input: &amp;[f64]) -&gt;f64 {\n    for i in total.iter() // &lt;-- just change that!\n         .map(|&amp;i| i * i)\n         .sum()\n}\n</code></pre>\n\n<p>but I still don't understand what to do.</p>\n\n<p>Here is my code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rayon::prelude::*;\n\npub fn factorial(n: f64) -&gt; f64 {\n    if n == 0.0 {\n        return 1.00;\n    } else {\n        let result: f64 = factorial(n - 1.0) * n;\n\n        return result;\n    }\n}\n\npub fn estimate_pi() -&gt; f64 {\n    let mut total: f64 = 0.0;\n    let mut k: f64 = 0.0;\n    let factor1: f64 = 2.0;\n    let factor: f64 = (factor1.sqrt() * 2.0) / 9801.0;\n\n    loop {\n        let num: f64 = factorial(4.0 * k) * (1103.0 + (26390.0 * k));\n        let numm: f64 = 396.0;\n        let den: f64 = factorial(k).powf(4.0) * numm.powf(4.0 * k);\n        let term: f64 = factor * num / den;\n\n        total += term;\n\n        if term.abs() &lt; 1e-15 {\n            break;\n        }\n\n        k += 1.0;\n    }\n\n    return 1.0 / total;\n}\n\nfn main() {\n    println!(\"{}\", estimate_pi());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=629d5894332755328e63ac96f27d36df\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1575840567, "post_id": 59232056, "comment_id": 104691492, "body": "This API seems implausible to me, because it is strange that a lexer should be parameterized by the type of token it outputs -- I feel that would logically be determined by the lexer itself. <code>lexicon()</code> in particular stands out because there&#39;s almost never any reason to have a function with an output lifetime but no input lifetimes. I imagine there is <i>some</i> reason why you&#39;re not just doing <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1dd8ecf8ea714e3fa5eeb6f71a413c3b\" rel=\"nofollow noreferrer\">this</a>, but I figured I&#39;d just mention it anyway."}, {"owner": {"reputation": 1983, "user_id": 29825, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7e01d0a8ef8d90e1c5195f27b34ae999?s=128&d=identicon&r=PG", "display_name": "Matt Green", "link": "https://stackoverflow.com/users/29825/matt-green"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575915146, "post_id": 59232056, "comment_id": 104718490, "body": "Good feedback. I ended up having the lexer&#39;s <code>next()</code> method return the rule ID, the current slice, and the position. The library is meant to be substrate for the user&#39;s lexer, hence being parameterized by the token type."}], "answers": [{"comments": [{"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 2, "creation_date": 1575776019, "post_id": 59232187, "comment_id": 104677303, "body": "tl;dr essentially the issue is that you haven&#39;t told rust what the lifetime of the <code>T</code> returned by <code>Handler</code> is. If you returned a reference from the handler, rust could assume <code>fn(&amp;&#39;input str) -&gt; &amp;&#39;input T</code> but since <code>T</code> is a value type with an internal reference, rust won&#39;t automatically do <code>fn(&amp;&#39;input str) -&gt; T&lt;&#39;input&gt;</code>"}, {"owner": {"reputation": 1983, "user_id": 29825, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7e01d0a8ef8d90e1c5195f27b34ae999?s=128&d=identicon&r=PG", "display_name": "Matt Green", "link": "https://stackoverflow.com/users/29825/matt-green"}, "reply_to_user": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1575828688, "post_id": 59232187, "comment_id": 104688155, "body": "I understand. I&#39;d propagated the lifetime through the types previously, but I think I made a mistake and couldn&#39;t get it to work, hence the barebones playground link. Thank you and @PitaJ for how to get unstuck."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 5, "last_activity_date": 1575829331, "last_edit_date": 1575829331, "creation_date": 1575775801, "answer_id": 59232187, "question_id": 59232056, "link": "https://stackoverflow.com/questions/59232056/proving-struct-fields-lifetime-outlives-another-lifetime/59232187#59232187", "title": "Proving struct field&#39;s lifetime outlives another lifetime", "body": "<pre><code>type Handler&lt;T&gt; = fn(&amp;str) -&gt; T;\n</code></pre>\n\n<p>Is not a complete type. The <code>&amp;str</code> needs to have a lifetime on it, but one is not specified. Lifetime elision means that this expands to</p>\n\n<pre><code>type Handler&lt;T&gt; = for&lt;'a&gt; fn(&amp;'a str) -&gt; T;\n</code></pre>\n\n<p>So <code>Handler</code>s don't know the lifetime of the <code>&amp;str</code>s being given to them. For some <code>'input</code>, to construct a <code>Rule&lt;Token&lt;'input&gt;&gt;</code>, you need a <code>Handler&lt;Token&lt;'input&gt;&gt;</code>, but that means you need <code>for&lt;'a&gt; fn(&amp;'a str) -&gt; Token&lt;'input&gt;</code>, where the <code>Token</code> wants a <code>&amp;'input str</code> but you only have a <code>&amp;'a str</code>. You need to make <code>'input</code> a parameter of <code>Handler</code>, so it can restrict the arguments it will accept:</p>\n\n<pre><code>type Handler&lt;'input, T&gt; = fn(&amp;'input str) -&gt; T;\n</code></pre>\n\n<p>And this must propagate through all your other types. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=429ae7ca356c75f7482ecdbb2a3a2481\" rel=\"nofollow noreferrer\">Playground link</a>.</p>\n\n<p>The code in your question is incomplete, and the code in the playground doesn't match it. If you've already tried this, then you're going to have to tell us what went wrong more clearly.</p>\n"}], "owner": {"reputation": 1983, "user_id": 29825, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/7e01d0a8ef8d90e1c5195f27b34ae999?s=128&d=identicon&r=PG", "display_name": "Matt Green", "link": "https://stackoverflow.com/users/29825/matt-green"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 59232187, "answer_count": 1, "score": 0, "last_activity_date": 1575829331, "creation_date": 1575773774, "question_id": 59232056, "link": "https://stackoverflow.com/questions/59232056/proving-struct-fields-lifetime-outlives-another-lifetime", "title": "Proving struct field&#39;s lifetime outlives another lifetime", "body": "<p>I'm working on a lexer in Rust.</p>\n\n<p>Desired API:</p>\n\n<pre><code>enum Token&lt;'input&gt; {\n    Name(&amp;'input str)\n}\n\nlet mut lexicon = LexiconBuilder::&lt;Token&gt;::new()\n    .token(\"[a-zA-Z]+\", |s| Token::Name(s))\n    // among others\n    .build();\n\nlet mut lexer = Lexer::new(lexicon, \"input\");\n</code></pre>\n\n<p>The idea is the user can provide a regular expression, along with a closure that gets run when the regex matches the input text. However, I'm having trouble proving to the lifetime checker that the slice that gets passed into <code>token()</code>'s closure lives long enough. From my POV, it seems safe, as the tokens aren't returned until you provide a string.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3812723db510671e16fdb1eb1b842abd\" rel=\"nofollow noreferrer\">Rust Playground link</a></p>\n\n<p>I've spent quite awhile trying to thread input lifetime through all of the types, however I can't ever seem to prove that the lexicon's (ergo, the rule's handler) lifetime will match/dominate the input's.</p>\n"}, {"tags": ["json", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1575766189, "post_id": 59231174, "comment_id": 104676124, "body": "Not an answer per se, but some thoughts: Normally you would not search through a JSON file directly, but read it into an internal data structure which is designed to make your algorithms (searching, updating, deleting, maybe sorting?) simple and fast. If your files are very long (probably many GB), reading the file all into memory at once may be an issue, in which case you may want to look into using a streaming parser. I think serde_json supports streaming, at least the existence of <a href=\"https://docs.serde.rs/serde_json/de/fn.from_reader.html\" rel=\"nofollow noreferrer\"><code>from_reader</code></a> suggests so."}, {"owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575768127, "post_id": 59231174, "comment_id": 104676347, "body": "@trentcl Yeah I meant arbitrarily long, also if loading it into memory all at once is an issue would storing it in a database (that rebuilds itself everytime it checks the json) and grabbing the info from there be a better option? If so then all I&#39;d probably need to know is how I&#39;d go about creating a database in Rust. If a database isn&#39;t a good option (Rust doesn&#39;t seem like it&#39;s there yet but I didn&#39;t research it extensively) then what else could I do? Would having a tuple of structs containing all the info by iterating over the file work? If not then what other options do I have?"}, {"owner": {"reputation": 1255, "user_id": 4982148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/X52Wq.jpg?s=128&g=1", "display_name": "atakanyenel", "link": "https://stackoverflow.com/users/4982148/atakanyenel"}, "edited": false, "score": 0, "creation_date": 1575770391, "post_id": 59231174, "comment_id": 104676639, "body": "Rust, actually cargo , has a local database. When you have a new cargo installation and you do <code>cargo build</code> for the first time, it <code>updates index</code> for couple of seconds. This is done only once, AFAIK, for whole installation and not per project. I&#39;m not a rust expert, but it might be easier to get the basics in an &quot;easier language&quot; ,than port it to rust."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575770487, "post_id": 59231174, "comment_id": 104676654, "body": "An existing database library is a fine option. I don&#39;t know what ones exist or are good for Rust, and that would be off-topic for this site anyway.  As for other options -- you have a lot! You need to design your data structures so that what tasks you want to do most are the fastest. Your data has more structure than the simple JSON file; for example, <code>State</code> is probably one of a fixed set of keys, <code>OS</code> may contain several keys from a fixed set, and <code>Depends</code> contains relationships to other members of the data set. You can exploit those structures to improve performance and reduce bloat."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575770928, "post_id": 59231174, "comment_id": 104676708, "body": "Dependency graphs are typically <a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_graph\" rel=\"nofollow noreferrer\">DAGs</a>. You&#39;ll probably want to implement some graph traversal algorithms (topological sort, for instance, would tell you in what order to install dependencies), so you&#39;d want to take that into account. You&#39;ll probably want to search by name. It&#39;s up to you to define the requirements. Architecture questions <i>are</i> on topic here, but it&#39;s a fine line to walk; I&#39;d say you should have a design in mind, and explain why you think there&#39;s something wrong with it, rather than ask SO to make one for you."}], "answers": [{"comments": [{"owner": {"reputation": 3017, "user_id": 2648551, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bWyXK.jpg?s=128&g=1", "display_name": "colidyre", "link": "https://stackoverflow.com/users/2648551/colidyre"}, "edited": false, "score": 0, "creation_date": 1582548105, "post_id": 60375613, "comment_id": 106803460, "body": "Please read <a href=\"https://stackoverflow.com/help/how-to-answer\">this</a> before posting an answer."}], "tags": [], "owner": {"reputation": 1, "user_id": 12952553, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mBG95o72AbwFtznaxMGNtc1oiAqi3itjUoACuxw=k-s128", "display_name": "Saurabh Seth", "link": "https://stackoverflow.com/users/12952553/saurabh-seth"}, "is_accepted": false, "score": -2, "last_activity_date": 1582545999, "creation_date": 1582545999, "answer_id": 60375613, "question_id": 59231174, "link": "https://stackoverflow.com/questions/59231174/how-to-search-and-parse-arbitrarily-long-json-files-in-rust/60375613#60375613", "title": "How to search and parse arbitrarily long JSON files in Rust?", "body": "<pre><code>    extern crate rustc_serialize;\nextern crate serde_json;\nextern crate serde;\nextern crate serde_derive;\nuse std::fs::File;\nuse std::io::Read;\nuse std::str;\nuse serde_derive::Serialize;\nuse serde_derive::Deserialize;\n#[derive(Serialize ,Deserialize)]\nstruct Person{\n    first_name: String,\n    last_name: String,\n    age: i64,\n    }\n    impl Person{\n        fn show(&amp;self){\n            println!(\"First_Name:{}   Last_Name:{}   Age:{}\",self.first_name,self.last_name,self.age);\n        }\n    }\n\nfn main() {\n    let mut file = File::open(\"text.json\").unwrap();\n    let mut data = Vec::new();\n    file.read_to_end(&amp;mut data).unwrap();\n  let s = match str::from_utf8(&amp;data) {\n    Ok(v) =&gt; v,\n    Err(e) =&gt; panic!(\"Invalid UTF-8 sequence: {}\", e),\n};\nlet values: Vec&lt;_&gt; = s.split(\"},\").collect();\n   let  mut i=0;\n    while i&lt;values.len(){\n        let mut str1=values[i].to_string();\n        if i==0{\n             str1 = str1.replace(\"[\", \"\");\n            str1=str1+\"}\";\n        }\n        else if i==values.len()-1{\n             str1 = str1.replace(\"]\", \"\");\n        }\n        else{\n            str1=str1.to_string()+\"}\";\n\n        }\n      let res=serde_json::from_str(&amp;str1);\n      if res.is_ok(){\n\n         let p:Person=res.unwrap();\n         p.show();\n         }else{\n        println!(\"Sorry ! we could not pass json\");\n     }\n            i=i+1;\n\n } \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*fn main(){\n    let mut file = File::open(\"text.json\").unwrap();\n    let  data = String::new();\n    file.read_to_end(data).unwrap();\n    let res=serde_json::from_str(&amp;data);\n    if res.is_ok(){\n        let p:Person=res.unwrap();\n        println!(\"{}\",p.first_name);\n        println!(\"{}\",p.age);\n    }\n    else{\n        println!(\"cannot pass the value\");\n    }\n\n//     for i in data.iter(){\n//     println!(\"{}\",i);\n// }\n/*let s = match str::from_utf8(&amp;data) {\n    Ok(v) =&gt; v,\n    Err(e) =&gt; panic!(\"Invalid UTF-8 sequence: {}\", e),\n};*/\n//println!(\"result: {}\", s);\n\n\n/*let str1=String::from(s);*/\n//println!(\"result: {}\", str1);\n\n\n\n//let  main_vec= str1.lines().map(|s| s.trim().split('}').map(String::from).collect::&lt;Vec&lt;String&gt;&gt;()).collect::&lt;Vec&lt;Vec&lt;String&gt;&gt;&gt;();\n\n/*for item in (main_vec).iter(){\n    println!(\"{:?}\",item);\n    let str24:String=item;\n    let res=serde_json::from_str(str24);\n    if res.is_ok(){\n        let p:Person=res.unwrap();\n        println!(\"{}\",p.first_name);\n        println!(\"{}\",p.age);\n    }\n    else{\n        println!(\"cannot pass the value\");\n    }*/\n\n    /*let strings = s.split(\"},\");\n    println!(\"{}\",strings);\n    for x in strings {\n        //println!(\"{}\", x);\n        let res=serde_json::from_str(x);\n    if res.is_ok(){\n        let p:Person=res.unwrap();\n         println!(\"{}\",p.first_name);\n        println!(\"{}\",p.age);\n        println!(\"-----------------------\");\n    }\n    else{\n        println!(\"cannot pass the value\");\n    }*/\n      }*/\n</code></pre>\n"}], "owner": {"reputation": 1031, "user_id": 10919715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d33ede762e1f928b26db57583853a772?s=128&d=identicon&r=PG&f=1", "display_name": "SmushyTaco", "link": "https://stackoverflow.com/users/10919715/smushytaco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 562, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1582555321, "creation_date": 1575761485, "last_edit_date": 1582555321, "question_id": 59231174, "link": "https://stackoverflow.com/questions/59231174/how-to-search-and-parse-arbitrarily-long-json-files-in-rust", "title": "How to search and parse arbitrarily long JSON files in Rust?", "body": "<p>So a friend and I are making our own package manager in Rust and we need to parse JSON for it. We found <a href=\"https://youtu.be/hIi_UlyIPMg\" rel=\"nofollow noreferrer\">Rust Programming Tutorial #42 - Parsing JSON</a> and it shows us the basics on how to do so, but in our situation we're parsing files that can be as small as 1 entry to as big as 1000 (or more!). Here's the format of the JSON we need to parse:</p>\n\n<pre><code>[\n    {\n    \"Name\": \"libexample\",\n    \"Version\": \"5.0.0\",\n    \"Depends\": \"dependency1, dependency2, dependency3\",\n    \"Maintainer\": \"example@example.com\",\n    \"Author\": \"person@author.com\",\n    \"Homepage\": \"www.homepage.com\",\n    \"Depiction\": \"package.depiction.com/file.json\",\n    \"Description\": \"This  package contains an example!\",\n    \"State\": \"Stable\",\n    \"Provides\": \"Example\",\n    \"Replaces\": \"Free space on your hard drive\",\n    \"OS\": \"darwin, linux\",\n    \"Architecture\": \"amd64\"\n    },\n    {\n    \"Name\": \"libexample\",\n    \"Version\": \"6.0.0\",\n    \"Depends\": \"dependency1, dependency2, dependency3\",\n    \"Maintainer\": \"example@example.com\",\n    \"Author\": \"person@author.com\",\n    \"Homepage\": \"www.homepage.com\",\n    \"Depiction\": \"package.depiction.com/file.json\",\n    \"Description\": \"This  package contains an example!\",\n    \"State\": \"Beta\",\n    \"Provides\": \"Example\",\n    \"Replaces\": \"Free space on your hard drive\",\n    \"OS\": \"darwin, linux\",\n    \"Architecture\": \"amd64\"\n    },\n    {\n    \"Name\": \"libexample\",\n    \"Version\": \"7.0.0\",\n    \"Depends\": \"dependency1, dependency2, dependency3\",\n    \"Maintainer\": \"example@example.com\",\n    \"Author\": \"person@author.com\",\n    \"Homepage\": \"www.homepage.com\",\n    \"Depiction\": \"package.depiction.com/file.json\",\n    \"Description\": \"This  package contains an example!\",\n    \"State\": \"Alpha\",\n    \"Provides\": \"Example\",\n    \"Replaces\": \"Free space on your hard drive\",\n    \"OS\": \"darwin, linux\",\n    \"Architecture\": \"amd64\"\n    },\n    {\n    \"Name\": \"libanotherexample\",\n    \"Version\": \"3.8.2\",\n    \"Depends\": \"dependency1, dependency2, dependency3\",\n    \"Maintainer\": \"example@example.com\",\n    \"Author\": \"person@author.com\",\n    \"Homepage\": \"www.homepage.com\",\n    \"Depiction\": \"package.depiction.com/file.json\",\n    \"Description\": \"This  package contains an example!\",\n    \"State\": \"Stable\",\n    \"Provides\": \"Another example\",\n    \"Replaces\": \"Free space on your hard drive\",\n    \"OS\": \"darwin, linux\",\n    \"Architecture\": \"amd64\"\n    }\n]\n</code></pre>\n\n<p>Our issue is we have no idea how to parse files that can be arbitrarily long and we have no idea how to search them. For example, if someone looks up a package name, how do we search through the entire file to match it with one of the name entries and then display the rest of that package's info?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 0, "last_activity_date": 1575835596, "creation_date": 1575835596, "answer_id": 59239441, "question_id": 59231035, "link": "https://stackoverflow.com/questions/59231035/how-to-implement-generic-intersperse-with-mutations-possible/59239441#59239441", "title": "How to implement generic intersperse with mutations possible", "body": "<p><code>writesperse</code> is not the problem here, <code>resolve</code> is.</p>\n\n<p>Because it takes <code>&amp;mut self</code> and returns a reference with a lifetime bound to <code>self</code>, you can't call <code>resolve</code> a second time unless the reference obtained from the first call has been dropped. You can see this in this simplified <code>f</code> (compiler error interspersed):</p>\n\n<pre><code>// error[E0499]: cannot borrow `self.state` as mutable more than once at a time\nfn f(&amp;mut self) {\n    let a = self.state.resolve(\"alec\");\n    //      ---------- first mutable borrow occurs here\n    let _b = self.state.resolve(\"brian\");\n    //       ^^^^^^^^^^ second mutable borrow occurs here\n    println!(\"{}\", a);\n    //             - first borrow later used here\n}\n</code></pre>\n\n<p>Part of the contract of an <code>Iterator</code> is that it does not yield internal references. So <code>|n| self.state.resolve(n)</code> is simply not a closure that can be passed to <code>Iterator::map</code>.</p>\n\n<h2>Fixing <code>resolve</code></h2>\n\n<p>If <code>resolve</code> took <code>&amp;self</code> instead of <code>&amp;mut self</code>, this would work because the closure would not need to borrow <code>self.state</code> exclusively; it could return references with the lifetime of the original without worrying about overlap. So let's try that:</p>\n\n<pre><code>fn resolve(&amp;self, _name: &amp;str) -&gt; &amp;StateRef {\n    // some kind of interior mutability thing here, probably have to return\n    // `std::cell:Ref&lt;StateRef&gt;` or `MutexGuard&lt;StateRef&gt;` instead, but that\n    // doesn't matter for this demonstration\n    &amp;StateRef\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5fc3b6f9dc9066ded392651f93897751\" rel=\"nofollow noreferrer\">Oh dear.</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `self` as immutable because it is also borrowed as mutable\n  --&gt; src/lib.rs:23:35\n   |\n21 |         writesperse(\n   |         ----------- mutable borrow later used by call\n22 |             &amp;mut self.buf,\n   |             ------------- mutable borrow occurs here\n23 |             self.data.names().map(|n| self.state.resolve(n)),\n   |                                   ^^^ ---- second borrow occurs due to use of `self` in closure\n   |                                   |\n   |                                   immutable borrow occurs here\n</code></pre>\n\n<p>What's going on? Because the closure uses <code>self</code> in a context where an immutable reference is required, the closure borrows <code>self</code>, and the <code>&amp;mut self.buf</code> also borrows (part of) <code>self</code> mutably, and they both have to exist at the same time to pass into <code>writesperse</code>. So this looks like a dead end, but it's actually really close: it just needs a small change to <code>f</code> to compile.</p>\n\n<pre><code>fn f(&amp;mut self) -&gt; fmt::Result {\n    let state = &amp;self.state;\n    writesperse(\n        &amp;mut self.buf,\n        self.data.names().map(|n| state.resolve(n)),\n        \", \",\n    )\n}\n</code></pre>\n\n<p>The compiler can reason about mutually exclusive partial borrows as long as they happen all within the body of a single function. The compiler will let you borrow <code>self.state</code> and mutably borrow <code>self.buf</code> at the same time as long as the borrows happen in the same function. Creating a variable to borrow <code>self.state</code> makes it so that only <code>state</code> is captured by the closure, not <code>self</code>.</p>\n\n<h2>Other options</h2>\n\n<p>The above works, if you're able to make <code>resolve</code> take <code>&amp;self</code>. Here are some other ideas:</p>\n\n<ul>\n<li>You could attack the problem from the other direction: make <code>resolve</code> return <code>StateRef</code> by value so it doesn't extend the <code>&amp;mut</code> borrow.</li>\n<li>You can achieve the same thing by altering the closure so that <em>it</em> doesn't return a reference; <code>|n| state.resolve(n).to_string()</code> works with no further changes (but it does do a bunch of unnecessary allocation and copying).</li>\n<li>You could use <code>Arc</code> or <code>Rc</code> instead of <code>&amp;</code> references and defer all lifetime management to runtime.</li>\n<li>You could write a macro that does the repetitive part for you so that <code>writesperse</code> is not necessary.</li>\n</ul>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/29401626/how-do-i-return-a-reference-to-something-inside-a-refcell-without-breaking-encap\">How do I return a reference to something inside a RefCell without breaking encapsulation?</a> if you need to use interior mutability to make <code>resolve</code> take <code>&amp;self</code></li>\n<li><a href=\"https://stackoverflow.com/questions/41190333/mutable-borrow-of-self-doesnt-change-to-immutable\">Mutable borrow of self doesn&#39;t change to immutable</a> explains why <code>state</code> is still considered \"mutably borrowed\" after <code>resolve</code> returns</li>\n</ul>\n"}], "owner": {"reputation": 13, "user_id": 12497927, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb5c76f9428b3bc948ff1ba49b613fd0?s=128&d=identicon&r=PG&f=1", "display_name": "Kungfunk", "link": "https://stackoverflow.com/users/12497927/kungfunk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 59239441, "answer_count": 1, "score": 1, "last_activity_date": 1575835596, "creation_date": 1575760187, "question_id": 59231035, "link": "https://stackoverflow.com/questions/59231035/how-to-implement-generic-intersperse-with-mutations-possible", "title": "How to implement generic intersperse with mutations possible", "body": "<h1>Goal</h1>\n\n<p>Create function/macro which has an api like such:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn writesperse(\n    buf: &amp;mut String,\n    items: impl IntoIterator&lt;Item=impl fmt::Display&gt;,\n    sep: impl fmt::Display,\n) -&gt; fmt::Result {\n    // intersperse impl elided\n}\n</code></pre>\n\n<p>with the main consumer of this api being a struct similar to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt;\n\n// Drives building of query\nstruct QueryBuilder&lt;'a&gt; {\n    buf: String,\n    data: &amp;'a Data,\n    state: State,\n}\n\nimpl&lt;'a&gt; QueryBuilder&lt;'a&gt; {\n    // example method showing how writesperse might be used\n    fn f(&amp;mut self) -&gt; fmt::Result {\n        writesperse(\n            &amp;mut self.buf,\n            self.data.names().map(|n| self.state.resolve(n)),\n            \", \",\n        )\n    }\n}\n\n// Represents mutable container for computed values\nstruct State;\nimpl State {\n    fn resolve(&amp;mut self, _name: &amp;str) -&gt; &amp;StateRef {\n        // mutate state if name has not been seen before (elided)\n        &amp;StateRef\n    }\n}\n\n// Represents example computed value\nstruct StateRef;\nimpl fmt::Display for StateRef {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        write!(f, \"STATEREF\")\n    }\n}\n\n// Immutable container with various collections of objects\nstruct Data;\nimpl Data {\n    // example iterator of references to some owned data\n    fn names(&amp;self) -&gt; impl Iterator&lt;Item=&amp;str&gt; {\n        ::std::iter::once(\"name\")\n    }\n\n    // another iterator of a different references\n    fn items(&amp;self) -&gt; impl Iterator&lt;Item=&amp;DataRef&gt; {\n        ::std::iter::once(&amp;DataRef)\n    }\n}\n\n// Represents some type Data might own\nstruct DataRef;\n</code></pre>\n\n<h2>Error</h2>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for autoref due to conflicting requirements\n  --&gt; src/lib.rs:13:50\n   |\n13 |             self.data.names().map(|n| self.state.resolve(n)),\n   |                                                  ^^^^^^^\n   |\nnote: first, the lifetime cannot outlive the lifetime '_ as defined on the body at 13:35...\n  --&gt; src/lib.rs:13:35\n   |\n13 |             self.data.names().map(|n| self.state.resolve(n)),\n   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/lib.rs:13:39\n   |\n13 |             self.data.names().map(|n| self.state.resolve(n)),\n   |                                       ^^^^^^^^^^\nnote: but, the lifetime must be valid for the method call at 13:13...\n  --&gt; src/lib.rs:13:13\n   |\n13 |             self.data.names().map(|n| self.state.resolve(n)),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that a type/lifetime parameter is in scope here\n  --&gt; src/lib.rs:13:13\n   |\n13 |             self.data.names().map(|n| self.state.resolve(n)),\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<h2>What I've tried</h2>\n\n<p>My only success thus far has been to manually do the intersperse logic at each site where it is needed.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut iter = some_iter.into_iter();\nif let Some(i) = iter.next() {\n    // do any state mutation here so mutable reference is released\n    let n = self.state.resolve(n);\n    write!(&amp;mut self.buf, \"{}\", n)?;\n}\n\nfor i in iter {\n    // do same thing above\n}\n</code></pre>\n\n<p>If I try and make State::resolve immutable, (which means I would need to pre-compute the values which is not desirable), I get a different error.</p>\n\n<pre><code>error[E0502]: cannot borrow `self` as immutable because it is also borrowed as mutable\n  --&gt; src/lib.rs:13:35\n   |\n11 |         writesperse(\n   |         ----------- mutable borrow later used by call\n12 |             &amp;mut self.buf,\n   |             ------------- mutable borrow occurs here\n13 |             self.data.names().map(|n| self.state.resolve(n)),\n   |                                   ^^^ ---- second borrow occurs due to use of `self` in closure\n   |                                   |\n   |                                   immutable borrow occurs here\n</code></pre>\n\n<p>This error is easier to understand.  However, I don't understand why what I am trying to do is disallowed. Why can I not hand out a mutable reference to QueryBuilder's buf and an iterator of references to objects within State and/or Data at the same time?</p>\n\n<p>Ultimately, my number one priority is abstracting the intersperse logic into some function or macro which expects an <code>Iterator&lt;Item=fmt::Display&gt;</code>.  It would be an added bonus if this Iterator could possibly mutate state and return a reference to its data.  I don't think this is possible though, at least from my understanding of the streaming-iterator crate.</p>\n\n<p>Thanks for your help!</p>\n"}, {"tags": ["rust", "local", "crate"], "comments": [{"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1575752954, "post_id": 59229897, "comment_id": 104673527, "body": "Have you tried with an absolute path to see if that works?"}, {"owner": {"reputation": 1034, "user_id": 2089648, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8b29d87d89de9c1abac217464e57b191?s=128&d=identicon&r=PG", "display_name": "user2089648", "link": "https://stackoverflow.com/users/2089648/user2089648"}, "reply_to_user": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1575753178, "post_id": 59229897, "comment_id": 104673589, "body": "I have tried it, yes - unfortunately it didn&#39;t work. Do I need to compile my library in a specific way for this to work?"}, {"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1575753591, "post_id": 59229897, "comment_id": 104673718, "body": "Don&#39;t think so... I just replicated your setup and can&#39;t get the same error. Another thing to try could be to use the 2018 edition, though I doubt it will matter."}, {"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1575753781, "post_id": 59229897, "comment_id": 104673772, "body": "Just to check, you are using <code>cargo</code> to build/run this right? I.e. Running <code>cargo run</code> in the minimal directory"}, {"owner": {"reputation": 1034, "user_id": 2089648, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8b29d87d89de9c1abac217464e57b191?s=128&d=identicon&r=PG", "display_name": "user2089648", "link": "https://stackoverflow.com/users/2089648/user2089648"}, "reply_to_user": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1575754000, "post_id": 59229897, "comment_id": 104673826, "body": "I use <code>cargo run</code> to run this, yes.I installed rust from here: <a href=\"https://www.rust-lang.org/tools/install\" rel=\"nofollow noreferrer\">rust-lang.org/tools/install</a> and I run it from visual studio code in windows 10. (I get the same error if I use the cmd-prompt directly.) Strange that it works out of the box for you."}, {"owner": {"reputation": 1426, "user_id": 9513106, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-kE-fGMmORt4/AAAAAAAAAAI/AAAAAAAAAY4/juZ7cF2UgAQ/photo.jpg?sz=128", "display_name": "Kentaro Okuda", "link": "https://stackoverflow.com/users/9513106/kentaro-okuda"}, "edited": false, "score": 0, "creation_date": 1575754476, "post_id": 59229897, "comment_id": 104673951, "body": "@user2089648 It works for me too. No errors."}, {"owner": {"reputation": 1034, "user_id": 2089648, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8b29d87d89de9c1abac217464e57b191?s=128&d=identicon&r=PG", "display_name": "user2089648", "link": "https://stackoverflow.com/users/2089648/user2089648"}, "edited": false, "score": 0, "creation_date": 1575757123, "post_id": 59229897, "comment_id": 104674580, "body": "Have you created any additional files except the four I use?"}, {"owner": {"reputation": 1426, "user_id": 9513106, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-kE-fGMmORt4/AAAAAAAAAAI/AAAAAAAAAY4/juZ7cF2UgAQ/photo.jpg?sz=128", "display_name": "Kentaro Okuda", "link": "https://stackoverflow.com/users/9513106/kentaro-okuda"}, "edited": false, "score": 0, "creation_date": 1575761637, "post_id": 59229897, "comment_id": 104675450, "body": "@user2089648 No additional files. Mine looks just like yours."}], "answers": [{"comments": [{"owner": {"reputation": 374, "user_id": 399058, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a5402f4bcca02fbeab1ad3e8d514665d?s=128&d=identicon&r=PG", "display_name": "Tails", "link": "https://stackoverflow.com/users/399058/tails"}, "edited": false, "score": 1, "creation_date": 1588955329, "post_id": 59233906, "comment_id": 109108560, "body": "I like the addition of how you feel about the result. Refreshing and wholesome."}], "tags": [], "owner": {"reputation": 1034, "user_id": 2089648, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8b29d87d89de9c1abac217464e57b191?s=128&d=identicon&r=PG", "display_name": "user2089648", "link": "https://stackoverflow.com/users/2089648/user2089648"}, "is_accepted": true, "score": 2, "last_activity_date": 1575795852, "creation_date": 1575795852, "answer_id": 59233906, "question_id": 59229897, "link": "https://stackoverflow.com/questions/59229897/local-crate-in-rust/59233906#59233906", "title": "Local crate in Rust", "body": "<p>After having a good nights sleep and looking at this problem again, I have managed to find the error.<br>\nI used <code>[dependecies]</code> instead of <code>[dependencies]</code> in the Cargo.toml.</p>\n\n<p>On the one hand I feel kind of dumb for this error, on the other hand I now know that cargo will not warn about unknown tags in the toml file.</p>\n"}], "owner": {"reputation": 1034, "user_id": 2089648, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8b29d87d89de9c1abac217464e57b191?s=128&d=identicon&r=PG", "display_name": "user2089648", "link": "https://stackoverflow.com/users/2089648/user2089648"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 460, "favorite_count": 0, "accepted_answer_id": 59233906, "answer_count": 1, "score": 3, "last_activity_date": 1575795852, "creation_date": 1575750538, "question_id": 59229897, "link": "https://stackoverflow.com/questions/59229897/local-crate-in-rust", "title": "Local crate in Rust", "body": "<p>I am currently learning rust and to that purpose wanted to create my own crate and use it.\nHowever rust can't find this crate.\nI have the following file structure:</p>\n\n<pre><code>\u251c\u2500\u2500\u2500minimal\n\u2502   \u251c\u2500\u2500\u2500Cargo.toml\n\u2502   \u2514\u2500\u2500\u2500src\n\u2502       \u2514\u2500\u2500\u2500main.rs\n\u2514\u2500\u2500\u2500util\n    \u2514\u2500\u2500\u2500win\n        \u251c\u2500\u2500\u2500Cargo.toml\n        \u2514\u2500\u2500\u2500src\n            \u2514\u2500\u2500\u2500lib.rs\n</code></pre>\n\n<p>In folder <code>minimal</code> I have my main project. It looks like this:</p>\n\n<pre><code>Cargo.toml\n\n[package]\nname = \"minimal\"\nversion = \"0.1.0\"\n[dependecies]\nwin = { path = \"../util/win\"}\n</code></pre>\n\n<pre><code>main.rs \n\nextern crate win; // ERROR: \"Can't find crate for 'win' rustc(E0463)\"\nfn main() {\n    println!(\"Hello World!\");\n}\n</code></pre>\n\n<p>My library in folder <code>win</code> looks like this:</p>\n\n<pre><code>Cargo.toml\n\n[package]\nname = \"win\"\nversion = \"0.1.0\"\n</code></pre>\n\n<pre><code>lib.rs\n\npub type TestType = String;\n</code></pre>\n\n<p>My first assumption was that I somehow had a mistake in specifying the path in the dependency of the Cargo.toml. So I tried to wiggle it around a bit, but it does not seem to work.\nRust reports <code>can't find crate for 'win' rustc(E0463)</code>.</p>\n\n<p>I feel like I am making a very basic error here, however when looking at similar questions (e.g. <a href=\"https://stackoverflow.com/questions/45519176/how-do-i-use-or-import-a-local-rust-file\">How do I &quot;use&quot; or import a local Rust file?</a>) I can't seem to find it.</p>\n"}, {"tags": ["rust", "database-migration", "development-environment", "production-environment", "rust-diesel"], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 9881851, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55f42e59b4476ebaf015fa3dcb9afaea?s=128&d=identicon&r=PG&f=1", "display_name": "Elrendio", "link": "https://stackoverflow.com/users/9881851/elrendio"}, "is_accepted": false, "score": 0, "last_activity_date": 1575761211, "creation_date": 1575761211, "answer_id": 59231140, "question_id": 59228152, "link": "https://stackoverflow.com/questions/59228152/rust-diesel-cli-setting-up-multiple-env-files-for-different-environments/59231140#59231140", "title": "rust diesel-cli setting up multiple env files for different environments", "body": "<p>You can use the argument <code>--database-url</code> to specify the database you want the command on.</p>\n\n<p>For example:\n<code>diesel --database-url $(cat .env.prod) migration run</code></p>\n"}], "owner": {"reputation": 1214, "user_id": 4558302, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-WJK5LYprf1A/AAAAAAAAAAI/AAAAAAAAAAA/zYpUy7xW41c/photo.jpg?sz=128", "display_name": "Bopsi", "link": "https://stackoverflow.com/users/4558302/bopsi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 238, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1575761211, "creation_date": 1575736977, "question_id": 59228152, "link": "https://stackoverflow.com/questions/59228152/rust-diesel-cli-setting-up-multiple-env-files-for-different-environments", "title": "rust diesel-cli setting up multiple env files for different environments", "body": "<p>I am new to rust programming. I am trying to learn how disel-cli works. It's quite similar to  knex in express node projects. </p>\n\n<p>I have created two migartion files using following commands -</p>\n\n<pre><code>echo DATABASE_URL=postgres://username:password@&lt;dev url&gt;/diesel_demo &gt; .env.dev\n\necho DATABASE_URL=postgres://username:password@&lt;prod url&gt;/diesel_demo &gt; .env.prod\n</code></pre>\n\n<p>I want to run migration to one of these two regions (<strong>dev</strong>/<strong>prod</strong>) by passing environment varibale. How do I do it?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 186, "user_id": 8720005, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ba98f4c770656735e6539f15533f5c8b?s=128&d=identicon&r=PG&f=1", "display_name": "malte-v", "link": "https://stackoverflow.com/users/8720005/malte-v"}, "edited": false, "score": 0, "creation_date": 1575735576, "post_id": 59227364, "comment_id": 104669371, "body": "That makes sense. How do I need to change my code in order to use <code>Rc</code>? Simply wrapping the library in an <code>Rc</code> and calling <code>.clone()</code> doesn&#39;t help..."}], "tags": [], "owner": {"reputation": 31, "user_id": 9881851, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55f42e59b4476ebaf015fa3dcb9afaea?s=128&d=identicon&r=PG&f=1", "display_name": "Elrendio", "link": "https://stackoverflow.com/users/9881851/elrendio"}, "is_accepted": false, "score": 1, "last_activity_date": 1575731507, "creation_date": 1575731507, "answer_id": 59227364, "question_id": 59225906, "link": "https://stackoverflow.com/questions/59225906/stuck-with-lifetimes-how-to-write-a-wrapper-struct-around-a-shared-library/59227364#59227364", "title": "Stuck with lifetimes: How to write a wrapper struct around a shared library?", "body": "<p>This cannot be done because you cannot ensure that later some code won't destructure LibraryWrapper to keep func and drop lib. For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn this_is_bad&lt;'lib&gt;(wrapper: LibraryWrapper&lt;'lib&gt;) -&gt; libloading::Symbol&lt;'lib, unsafe extern fn() -&gt; u32&gt; {\n    let LibraryWrapper { lib, func } = wrapper;\n    func\n}\n</code></pre>\n\n<p>To manage something like that I'd suggest using an RC or ARC if you need it to be Send.</p>\n"}, {"comments": [{"owner": {"reputation": 186, "user_id": 8720005, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ba98f4c770656735e6539f15533f5c8b?s=128&d=identicon&r=PG&f=1", "display_name": "malte-v", "link": "https://stackoverflow.com/users/8720005/malte-v"}, "edited": false, "score": 0, "creation_date": 1575752570, "post_id": 59229260, "comment_id": 104673455, "body": "I think using a <code>HashMap</code> registry is overkill in my case because I&#39;m only loading a single function from a single library. The <code>Once</code> thingy though fits very well in my opinion. Thanks!"}], "tags": [], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "is_accepted": false, "score": 1, "last_activity_date": 1575746004, "last_edit_date": 1575746004, "creation_date": 1575745152, "answer_id": 59229260, "question_id": 59225906, "link": "https://stackoverflow.com/questions/59225906/stuck-with-lifetimes-how-to-write-a-wrapper-struct-around-a-shared-library/59229260#59229260", "title": "Stuck with lifetimes: How to write a wrapper struct around a shared library?", "body": "<p>As mentioned, the borrow checked needs to ensure you don't destructure something to keep the func and drop the lib. I've wrestled with the several times and came to the following conclusion:</p>\n\n<p>Dynamically linked <code>libloading</code> stuff is one of the few things where I think it's acceptable to turn into a <code>static</code>. If it's a hardcoded so/dll/dylib I generally make a special static with <a href=\"https://doc.rust-lang.org/std/sync/struct.Once.html\" rel=\"nofollow noreferrer\"><code>Once</code></a> for it so it takes legitimate effort to drop it. For unknown-at-compile-time loaded ones (e.g. managed via a config file) I generally Mutex-protect a <code>static</code> central registry that's just a <code>HashMap</code> with a key for the library name or path, and only allow the libraries to drop when the whole program terminates. Yes, this is basically a singleton, no I don't generally recommend doing this for almost anything else, this case is a special exception.</p>\n\n<p>For added safety, I do recommend you isolate the static and only use functions or structs to refer to it, especially with the Hash Map registry because it's easy for someone to do a <code>remove</code> on it or overwrite the HashMap, or replace a lib with the same name carelessly. Since it's static, it still allows you to store the functions as another static/singleton as well without having to query the library for them every time if you really want (but I'm not sure there's even much performance overhead just requesting it every time, haven't benchmarked it).</p>\n\n<p>I do this for a few reasons:</p>\n\n<ol>\n<li>You typically want to use the functions as if they're a normal library, no different from linking FFI or statically pulling in another library. You have to know the function names anyway, so it's in effect the same as just having a file with those functions normally.</li>\n<li>You don't have to pollute everything you want to reference the functionality in with a <code>'lib</code> lifetime or library function argument or additional member when other than the fact the library you're linking is <em>technically</em> dynamic it's just referencing a dependency. Your program ends up agnostic if it becomes, e.g., a statically linked library later (just delete the setup lines in the file wrapping the <code>static</code> dynamic library and change them to functions that point elsewhere).</li>\n<li>You generally only need to/want to/should link a given dynamic library once in the whole program, which is pretty much what <code>static</code> is for if nothing else.</li>\n<li>It's rare you want to get rid of a library, dynamic or not, until the program terminates.</li>\n<li>It isolates the <code>unsafe</code> initialization and function loading code to one file (though a wrapper struct admittedly takes care of this too).</li>\n</ol>\n\n<p>The most common exception to these reasons I'd see someone having is option 4, like if you have a highly configurable plugin system where the extra memory taken up by the plugins may legitimately matter if the user wants to disable old ones and activate new ones, and in that case devising a wrapper scheme may be the right call, or alternatively adding an <code>unsafe fn close_dynamic_lib_no_seriously_do_you_really_want_to_do_this(self)</code> in your library wrapper.</p>\n\n<p>The only other exception I can think of is if you're writing something like a library for <code>crates.io</code> where you <em>really</em> want the user to be able to manage their dynamic libraries and supply them to your library for you (e.g. it may be in a non-standard path or they can choose between several implementations), and even then it's still probably beneficial to modify this way of doing it.</p>\n"}, {"tags": [], "owner": {"reputation": 186, "user_id": 8720005, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ba98f4c770656735e6539f15533f5c8b?s=128&d=identicon&r=PG&f=1", "display_name": "malte-v", "link": "https://stackoverflow.com/users/8720005/malte-v"}, "is_accepted": true, "score": 0, "last_activity_date": 1575828090, "creation_date": 1575828090, "answer_id": 59238311, "question_id": 59225906, "link": "https://stackoverflow.com/questions/59225906/stuck-with-lifetimes-how-to-write-a-wrapper-struct-around-a-shared-library/59238311#59238311", "title": "Stuck with lifetimes: How to write a wrapper struct around a shared library?", "body": "<p>I ended up using the <code>lazy_static</code> crate. I think it's more convenient than <code>std::sync::Once</code> for my use case. Thanks @LinearZoetrope for bringing me to this idea!</p>\n"}], "owner": {"reputation": 186, "user_id": 8720005, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ba98f4c770656735e6539f15533f5c8b?s=128&d=identicon&r=PG&f=1", "display_name": "malte-v", "link": "https://stackoverflow.com/users/8720005/malte-v"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 0, "accepted_answer_id": 59238311, "answer_count": 3, "score": 1, "last_activity_date": 1575828090, "creation_date": 1575721418, "last_edit_date": 1575726354, "question_id": 59225906, "link": "https://stackoverflow.com/questions/59225906/stuck-with-lifetimes-how-to-write-a-wrapper-struct-around-a-shared-library", "title": "Stuck with lifetimes: How to write a wrapper struct around a shared library?", "body": "<p>I'm trying to write a wrapper struct around a shared libary in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct LibraryWrapper&lt;'lib&gt; {\n    lib: libloading::Library,\n    func: libloading::Symbol&lt;'lib, unsafe extern fn() -&gt; u32&gt;\n}\n\nimpl&lt;'lib&gt; LibraryWrapper&lt;'lib&gt; { // lifetime `'lib` defined here\n    pub fn new() -&gt; libloading::Result&lt;Self&gt; {\n        let lib: libloading::Library = libloading::Library::new(LIB_PATH)?;\n        let func: libloading::Symbol&lt;'lib, unsafe extern fn() -&gt; u32&gt; = unsafe { // type annotation requires that `lib` is borrowed for `'lib`\n            lib.get(FUNC_NAME)? // borrowed value does not live long enough\n        };\n\n        Ok(Self {\n            lib, func // `lib` dropped here while still borrowed\n        })\n    }\n}\n</code></pre>\n\n<p>How do I tell the Rust compiler that <code>func</code> will not outlive <code>lib</code> because they're in the same struct? Thanks!</p>\n"}, {"tags": ["rust", "bson"], "comments": [{"owner": {"reputation": 1596, "user_id": 4917881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58ccd2073f7be170038eeda1016e4b57?s=128&d=identicon&r=PG", "display_name": "aventurin", "link": "https://stackoverflow.com/users/4917881/aventurin"}, "edited": false, "score": 0, "creation_date": 1575718729, "post_id": 59225345, "comment_id": 104665327, "body": "Why EOF? I guess you just have to check the <code>DecoderResult</code> returned from <code>decode_document</code>."}, {"owner": {"reputation": 93, "user_id": 7671504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-PQz7fec8k7g/AAAAAAAAAAI/AAAAAAAABHI/KUq574Q2yIU/photo.jpg?sz=128", "display_name": "san1127", "link": "https://stackoverflow.com/users/7671504/san1127"}, "reply_to_user": {"reputation": 1596, "user_id": 4917881, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58ccd2073f7be170038eeda1016e4b57?s=128&d=identicon&r=PG", "display_name": "aventurin", "link": "https://stackoverflow.com/users/4917881/aventurin"}, "edited": false, "score": 0, "creation_date": 1575720477, "post_id": 59225345, "comment_id": 104665756, "body": "@aventurin see my reply for the muhuk&#39;s answer below"}], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 7671504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-PQz7fec8k7g/AAAAAAAAAAI/AAAAAAAABHI/KUq574Q2yIU/photo.jpg?sz=128", "display_name": "san1127", "link": "https://stackoverflow.com/users/7671504/san1127"}, "edited": false, "score": 0, "creation_date": 1575720005, "post_id": 59225662, "comment_id": 104665641, "body": "No, it doesn&#39;t work because the code panics in case of EOF. It is quite confusing that <code>IoError(Custom { kind: UnexpectedEof, error: &quot;failed to fill whole buffer&quot; }</code> is returned when EOF, and I am not sure if it is a good practice to check for this error rather than checking EOF before calling decode_document()."}, {"owner": {"reputation": 14545, "user_id": 42188, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/0b0abbefc6a9375882ea3cc0c6da61c8?s=128&d=identicon&r=PG", "display_name": "muhuk", "link": "https://stackoverflow.com/users/42188/muhuk"}, "reply_to_user": {"reputation": 93, "user_id": 7671504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-PQz7fec8k7g/AAAAAAAAAAI/AAAAAAAABHI/KUq574Q2yIU/photo.jpg?sz=128", "display_name": "san1127", "link": "https://stackoverflow.com/users/7671504/san1127"}, "edited": false, "score": 0, "creation_date": 1575720200, "post_id": 59225662, "comment_id": 104665693, "body": "Could be my mistake identifying the <code>EndOfStream</code> as the EOF value.  What is the exact output when the code panics?"}, {"owner": {"reputation": 93, "user_id": 7671504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-PQz7fec8k7g/AAAAAAAAAAI/AAAAAAAABHI/KUq574Q2yIU/photo.jpg?sz=128", "display_name": "san1127", "link": "https://stackoverflow.com/users/7671504/san1127"}, "edited": false, "score": 0, "creation_date": 1575726227, "post_id": 59225662, "comment_id": 104667008, "body": "Thanks but your code doesn&#39;t compile, the best I came up with is <code>Result::Err(DecoderError::IoError(e)) if e.kind() == io::ErrorKind::UnexpectedEof =&gt; break,</code>"}, {"owner": {"reputation": 14545, "user_id": 42188, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/0b0abbefc6a9375882ea3cc0c6da61c8?s=128&d=identicon&r=PG", "display_name": "muhuk", "link": "https://stackoverflow.com/users/42188/muhuk"}, "reply_to_user": {"reputation": 93, "user_id": 7671504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-PQz7fec8k7g/AAAAAAAAAAI/AAAAAAAABHI/KUq574Q2yIU/photo.jpg?sz=128", "display_name": "san1127", "link": "https://stackoverflow.com/users/7671504/san1127"}, "edited": false, "score": 0, "creation_date": 1575726611, "post_id": 59225662, "comment_id": 104667102, "body": "Sorry about that.  You are right, you can&#39;t pattern match on <code>kind</code> field because it&#39;s not a field.  I will update the code above to a slightly more readable version of what you got though."}], "tags": [], "owner": {"reputation": 14545, "user_id": 42188, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/0b0abbefc6a9375882ea3cc0c6da61c8?s=128&d=identicon&r=PG", "display_name": "muhuk", "link": "https://stackoverflow.com/users/42188/muhuk"}, "is_accepted": false, "score": 0, "last_activity_date": 1575726823, "last_edit_date": 1575726823, "creation_date": 1575719352, "answer_id": 59225662, "question_id": 59225345, "link": "https://stackoverflow.com/questions/59225345/rust-how-to-check-eof-in-file/59225662#59225662", "title": "Rust - How to check EOF in File?", "body": "<p><code>bson::decode_document</code> returns <code>DecoderResult&lt;Document&gt;</code> which is an alias for <code>Result&lt;T, DecoderError&gt;</code>.  <del>If you check possible values for enum <code>DecoderError</code>, you will see <a href=\"https://docs.rs/bson/0.13.0/bson/enum.DecoderError.html#variant.EndOfStream\" rel=\"nofollow noreferrer\"><code>EndOfStream</code></a></del> It seems <code>decode_document</code> returns a <code>Result::Err&lt;DecoderError::IoError&lt;_&gt;&gt;</code> in case of an EOF.</p>\n\n<p>So instead of trying to detect EOF in your code, it would be more straightforward to consume the stream (by repeatedly calling <code>decode_document</code>) until an error is raised.  Then the error can be handled, or in case of <code>EndOfStream</code> processing can continue normally.</p>\n\n<p>You can try something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>loop {\n    match decode_documment(&amp;mut file) {\n        Result::Ok(doc) =&gt; println!(\"doc = {:?}\", &amp;doc),     \n        Result::Err(DecoderError::IoError(io_error)) =&gt; match io_error.kind() {\n            std::io::ErrorKind::UnexpectedEof =&gt; break,\n            _ =&gt; panic!(\"Decoding failed with I/O error {}\", io_error)\n        }\n        Result::Err(err) =&gt; panic!(\"Decoding failed with {}\", err)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 93, "user_id": 7671504, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-PQz7fec8k7g/AAAAAAAAAAI/AAAAAAAABHI/KUq574Q2yIU/photo.jpg?sz=128", "display_name": "san1127", "link": "https://stackoverflow.com/users/7671504/san1127"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 800, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1575726823, "creation_date": 1575716856, "last_edit_date": 1575726510, "question_id": 59225345, "link": "https://stackoverflow.com/questions/59225345/rust-how-to-check-eof-in-file", "title": "Rust - How to check EOF in File?", "body": "<p>I am trying to implement the last exercise of <a href=\"https://github.com/pingcap/talent-plan/blob/master/rust/building-blocks/bb-2.md\" rel=\"nofollow noreferrer\">https://github.com/pingcap/talent-plan/blob/master/rust/building-blocks/bb-2.md</a>. </p>\n\n<p>In short, I need to serialize some enums to bson, write to a file and read them back from file.\nI got stuck in checking whether EOF is reached. I googled for some time but failed to find an answer.</p>\n\n<pre><code>use std::path::Path;\nuse std::fs::{create_dir_all, OpenOptions};\nuse std::io::{Write, Seek, Cursor, SeekFrom};\nuse serde::{Serialize, Deserialize};\nuse std::str;\nuse bson;\nuse bson::{encode_document, decode_document};\n\nfn main() {\n    let dir = Path::new(\"D:/download/rust\");\n    create_dir_all(dir).expect(\"Cannot create dir\");\n\n    let txt = dir.join(\"move.txt\");\n\n    // Encode some moves\n    let mut file = OpenOptions::new()\n        .append(true)\n        .create(true)\n        .open(&amp;txt)\n        .expect(\"Cannot open txt\");\n\n    encode_and_write_move(&amp;mut file, &amp;Move::Up(1));\n    encode_and_write_move(&amp;mut file, &amp;Move::Down(2));\n    encode_and_write_move(&amp;mut file, &amp;Move::Left(3));\n    encode_and_write_move(&amp;mut file, &amp;Move::Right(4));\n\n    // Decode and print moves\n    let mut file = OpenOptions::new()\n        .read(true)\n        .open(&amp;txt)\n        .expect(\"Cannot open txt\");\n\n    loop {\n        let end_of_file = false; // How?\n        if end_of_file {\n            break;\n        }\n\n        let doc = decode_document(&amp;mut file).expect(\"cannot decode doc\");\n        println!(\"doc = {:?}\", doc);\n    }\n}\n\nfn encode_and_write_move&lt;W: Write&gt;(writer: &amp;mut W, mov: &amp;Move) {\n    let serialized = bson::to_bson(mov).unwrap();\n    let doc = serialized.as_document().unwrap();\n    encode_document(writer, doc).expect(\"failed to encode doc\");\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nenum Move {\n    Up(i32),\n    Down(i32),\n    Left(i32),\n    Right(i32),\n}\n\n</code></pre>\n\n<p><strong>Update:</strong><br>\nIt seems the only way to see if EOF is reached is to check the returned Err. Here is my attempt for the whole exercise.</p>\n\n<pre><code>use std::path::Path;\nuse std::fs::{create_dir_all, OpenOptions};\nuse std::io::Write;\nuse serde::{Serialize, Deserialize};\nuse std::{str, io};\nuse bson;\nuse bson::{encode_document, decode_document, DecoderError};\n\nfn main() {\n    let dir = Path::new(\"D:/download/rust\");\n    create_dir_all(dir).expect(\"Cannot create dir\");\n\n    let txt = dir.join(\"move.txt\");\n\n    // Encode some moves\n    let mut writer = OpenOptions::new()\n        .append(true)\n        .create(true)\n        .open(&amp;txt)\n        .expect(\"Cannot open txt\");\n\n    encode_and_write_move(&amp;mut writer, &amp;Move::Up(1));\n    encode_and_write_move(&amp;mut writer, &amp;Move::Down(2));\n    encode_and_write_move(&amp;mut writer, &amp;Move::Left(3));\n    encode_and_write_move(&amp;mut writer, &amp;Move::Right(4));\n\n    // Decode and print moves\n    let mut reader = OpenOptions::new()\n        .read(true)\n        .open(&amp;txt)\n        .expect(\"Cannot open txt\");\n\n    loop {\n        match decode_document(&amp;mut reader) {\n            Result::Ok(doc) =&gt; println!(\"doc = {:?}\", &amp;doc),\n            Result::Err(DecoderError::IoError(e)) if e.kind() == io::ErrorKind::UnexpectedEof =&gt; break,\n            Result::Err(err) =&gt; panic!(\"Decoding failed with {}\", err)\n        }\n    }\n}\n\nfn encode_and_write_move&lt;W: Write&gt;(writer: &amp;mut W, mov: &amp;Move) {\n    let serialized = bson::to_bson(mov).unwrap();\n    let doc = serialized.as_document().unwrap();\n    encode_document(writer, doc).expect(\"failed to encode doc\");\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nenum Move {\n    Up(i32),\n    Down(i32),\n    Left(i32),\n    Right(i32),\n}\n\n</code></pre>\n"}, {"tags": ["rust", "bigdecimal"], "answers": [{"tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": true, "score": 3, "last_activity_date": 1575705755, "creation_date": 1575705755, "answer_id": 59224113, "question_id": 59223531, "link": "https://stackoverflow.com/questions/59223531/bigdecimalbigdecimal-which-does-not-implement-the-copy-trait/59224113#59224113", "title": "`bigdecimal::BigDecimal`, which does not implement the `Copy` trait", "body": "<p>In this case you can just take references:</p>\n\n<pre><code>let result = &amp;val_2/&amp;val_1;\n</code></pre>\n\n<p>to use the proper version of division: <code>impl&lt;'a, 'b&gt; Div&lt;&amp;'b BigDecimal&gt; for &amp;'a BigDecimal</code> where your code currently uses <code>impl Div&lt;BigDecimal&gt; for BigDecimal</code> (you can find both in <a href=\"https://docs.rs/bigdecimal/0.1.0/bigdecimal/struct.BigDecimal.html\" rel=\"nofollow noreferrer\">https://docs.rs/bigdecimal/0.1.0/bigdecimal/struct.BigDecimal.html</a> as well as many other versions). If the difference doesn't make sense to you, you really need to read <a href=\"https://doc.rust-lang.org/1.26.0/book/second-edition/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\">References and Borrowing</a> first (and the <code>'a</code> <code>'b</code> parts can probably be ignored for now).</p>\n\n<p>In other cases, you may need calls like <code>val2.clone()</code> to make a copy explicitly.</p>\n\n<p>For why <code>BigDecimal</code> can't be <code>Copy</code> (then it would make copies automatically whenever needed), see <a href=\"https://github.com/rust-num/num/issues/191\" rel=\"nofollow noreferrer\">https://github.com/rust-num/num/issues/191</a>:</p>\n\n<blockquote>\n  <p>As a rule of thumb, only primitives and aggregates composed of just primitives can implement <code>Copy</code>. So for instance, <code>PrimInt</code> does implement <code>Copy</code>, but <code>BigInt</code> has a <code>Vec</code> underneath, so it can only be explicitly cloned.</p>\n</blockquote>\n"}], "owner": {"reputation": 143, "user_id": 12088139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DCN4gko7Gls/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfiW69WwiPFykErkASOknDPRcUl_Q/photo.jpg?sz=128", "display_name": "asyraaf azhar", "link": "https://stackoverflow.com/users/12088139/asyraaf-azhar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 395, "favorite_count": 0, "accepted_answer_id": 59224113, "answer_count": 1, "score": -1, "last_activity_date": 1576341967, "creation_date": 1575699649, "last_edit_date": 1576341967, "question_id": 59223531, "link": "https://stackoverflow.com/questions/59223531/bigdecimalbigdecimal-which-does-not-implement-the-copy-trait", "title": "`bigdecimal::BigDecimal`, which does not implement the `Copy` trait", "body": "<p>I need to use the <code>bigdecimal</code> crate, so I include it in my dependencies in <code>Cargo.toml</code> file:</p>\n\n<pre><code>[dependencies]\nbigdecimal = \"0.1.0\"\n</code></pre>\n\n<p>While writing the code, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>bigdecimal::BigDecimal, which does not implement the 'Copy' trait\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>use bigdecimal::BigDecimal;\nuse std::str::FromStr;\n\nfn main() {\n    let val_1 = BigDecimal::from_str(\"1\").unwrap();\n    let val_2 = BigDecimal::from_str(\"2\").unwrap();\n\n    let result = val_2/val_1;\n\n    println!(\"Test 1 {} \", result);\n    println!(\"Test 2 {} \", val_2);\n}\n</code></pre>\n\n<p>When execute the error message below will appear:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>----- move occurs because `val_2` has type `bigdecimal::BigDecimal`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>The only way I can solve it is by declaring again val_2 before the print statement</p>\n\n<pre><code>println!(\"Test 1 {} \", result);\nlet val_2 = BigDecimal::from_str(\"2\").unwrap();\nprintln!(\"Test 2 {} \", val_2);\n</code></pre>\n\n<p>Is there any other efficient way to solve it?</p>\n"}, {"tags": ["rust", "documentation"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1575705352, "post_id": 59223168, "comment_id": 104662739, "body": "As far as I&#39;m aware, <code>cargo doc</code> only documents public functions. Is your example function public and accessible from the root (<code>main.rs</code> or <code>lib.rs</code>)?"}], "answers": [{"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 2, "last_activity_date": 1575705396, "creation_date": 1575705396, "answer_id": 59224074, "question_id": 59223168, "link": "https://stackoverflow.com/questions/59223168/how-to-document-a-binary-rust-crate-project/59224074#59224074", "title": "How to document a binary Rust crate project?", "body": "<p>The problem is that your function is private (which makes sense for a binary crate). However, rustdoc currently only documents public items by default (which makes sense for a library crate). You can use the flag <code>--document-private-items</code> to also include private functions and the like:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo doc --document-private-items\n</code></pre>\n\n<p>There is some discussion about this feature and the default we should be using <a href=\"https://github.com/rust-lang/cargo/issues/1520\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Furthermore, I <a href=\"https://github.com/rust-lang/cargo/pull/7593\" rel=\"nofollow noreferrer\">recently opened a PR</a> to change the default behavior for binary crates, so that private item for binary crates are documented by default. This change is expected to arrive on the stable compiler on January the 31st 2020 (1.41.0).</p>\n"}], "owner": {"reputation": 915, "user_id": 9716278, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-y_OzgTqtpA8/AAAAAAAAAAI/AAAAAAAABmM/yM8i9oN9vmw/photo.jpg?sz=128", "display_name": "9716278", "link": "https://stackoverflow.com/users/9716278/9716278"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 346, "favorite_count": 1, "accepted_answer_id": 59224074, "answer_count": 1, "score": 1, "last_activity_date": 1575705788, "creation_date": 1575695011, "last_edit_date": 1575705788, "question_id": 59223168, "link": "https://stackoverflow.com/questions/59223168/how-to-document-a-binary-rust-crate-project", "title": "How to document a binary Rust crate project?", "body": "<p>I have a program that I've written in Rust and I would like document it. I've looked on line and found:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/stable/rust-by-example/meta/doc.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/stable/rust-by-example/meta/doc.html</a></li>\n<li><a href=\"https://rust-lang.github.io/rfcs/1574-more-api-documentation-conventions.html#appendix-a-full-conventions-text\" rel=\"nofollow noreferrer\">https://rust-lang.github.io/rfcs/1574-more-api-documentation-conventions.html#appendix-a-full-conventions-text</a></li>\n</ul>\n\n<p>I've added doc comments to the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// This is a documented function\nfn example() {\n    println!(\"Hi there\");\n}\n</code></pre>\n\n<p>The problem I'm having now is that after I run <code>cargo doc</code>, I get all the other documentation generated for all the crates my program uses, but the HTML documentation does not induce my program. I've been looking around and I haven't see anything that talks about just documenting a single program, usually I see material about documenting crates. If I can use Rust's documentation system for a stand alone program, how would can I do this?</p>\n"}, {"tags": ["if-statement", "scope", "rust", "borrowing"], "comments": [{"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 1, "creation_date": 1575693004, "post_id": 59222703, "comment_id": 104660978, "body": "Rust doesn&#39;t try to build the control flow to check ownership. It will be too time-consuming, and compilation times are sometimes already large."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 2, "creation_date": 1575701193, "post_id": 59222703, "comment_id": 104662087, "body": "You are confusing compile time with runtime behaviors. And at compiling time, the tasks of <code>rustc</code> are divided into passes, the borrow check is one albeit rather famous one. The dead code like this will certainly be eliminated by later passes if in release mode but it still is an error nonetheless in borrow check pass. Run <code>rustc +nightly -Ztime-passes hello_world.rs</code> and you&#39;ll be amazed how many passes there are!"}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 5, "last_activity_date": 1575744328, "creation_date": 1575744328, "answer_id": 59229163, "question_id": 59222703, "link": "https://stackoverflow.com/questions/59222703/if-statement-gets-executed-when-the-condition-is-false-in-a-rust-program-ho/59229163#59229163", "title": "&quot;if&quot; statement gets executed when the condition is &quot;false&quot; in a Rust program, how to understand it?", "body": "<p>Here's the secret to <em>moves</em>: they don't really exist.</p>\n\n<p>Moves generate no code (in the sense of machine code) that is different from a bitwise copy.&sup1; The only difference between a move and a copy is what happens to the \"original\": if it's still valid, it's a copy; if the original is no longer valid, it's a move.</p>\n\n<p>So how does the compiler enforce that you don't use the original value after a move? There's no runtime flag that keeps track of whether <code>foo</code> is valid or not.&sup2; Instead, the compiler uses source code analysis to determine, at compile time, whether <code>foo</code> is definitely valid or may have been moved out of when you try to use it. Because this analysis takes place at compile time, it doesn't follow the flow of execution within the function; it happens for the whole function at once. The compiler sees that <code>foo</code> is moved out of inside the <code>if</code>, and rejects the later use of <code>foo</code> without evaluating the condition or any code.</p>\n\n<p>A smart compiler <em>could</em> take control flow into account when doing validity analysis,&sup3; but that might not be an improvement. It's not always possible to know whether a branch is taken (it's <a href=\"https://en.wikipedia.org/wiki/Undecidable_problem\" rel=\"noreferrer\">undecidable</a>), so there would be cases where the compiler would still get it wrong. Also, as Cerberus noted in the question comments, it would greatly slow down that compiler pass.</p>\n\n<p>Put another way: In Rust, you never explicitly move something. You just do whatever you want with it, and let the compiler tell you whether you did it wrong or not, according to whether the type is <code>Copy</code> and whether it's used later. This is unlike C++, where moving is an operation that may call a \"move constructor\" and have side effects; in Rust, it's a purely static, pass/fail check. If you did it right, the program passes and moves on to the next stage of compilation; if you did it wrong, the borrow checker will tell you (and hopefully help you fix it).</p>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/30288782/what-are-move-semantics-in-rust\">What are move semantics in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/846103/runtime-vs-compile-time\">Runtime vs Compile time</a></li>\n</ul>\n\n<hr>\n\n<p>&sup1; Unless the moved type implements <code>Drop</code>, in which case the compiler may emit <a href=\"https://doc.rust-lang.org/stable/nomicon/drop-flags.html\" rel=\"noreferrer\">drop flags</a>.</p>\n\n<p>&sup2; Actually, there <em>is</em> (the drop flag), but it's only checked when <code>foo</code> is dropped, not at each use. Types that don't implement <code>Drop</code> don't have drop flags, even though they have the same move semantics.</p>\n\n<p>&sup3; This is similar to how null checking works in Kotlin: if the compiler can figure out that a reference is definitely non-null, it will allow you to dereference it. Validity analysis in Rust is more conservative than that; the compiler doesn't even try to guess.</p>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 1, "accepted_answer_id": 59229163, "answer_count": 1, "score": 1, "last_activity_date": 1575744328, "creation_date": 1575688840, "last_edit_date": 1575706158, "question_id": 59222703, "link": "https://stackoverflow.com/questions/59222703/if-statement-gets-executed-when-the-condition-is-false-in-a-rust-program-ho", "title": "&quot;if&quot; statement gets executed when the condition is &quot;false&quot; in a Rust program, how to understand it?", "body": "<p>For the following Rust program:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let foo = \"test\".to_string();\n    if false {\n        let _bar = foo; // value moved to _bar\n    }\n    println!(\"{}\", foo);\n}\n</code></pre>\n\n<p>I got this error when run it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: borrow of moved value: `foo`\n --&gt; src\\main.rs:6:20\n  |\n2 |     let foo = \"test\".to_string();\n  |         --- move occurs because `foo` has type `std::string::String`, which does not implement the `Copy` trait\n3 |     if false {\n4 |         let _bar = foo; // value moved to _bar\n  |                    --- value moved here\n5 |     }\n6 |     println!(\"{}\", foo);\n  |                    ^^^ value borrowed here after move\n</code></pre>\n\n<p>Could anyone help to explain what happens here? It's weird to me that the <em>move</em> happens in a if statement which will never be true. Also I want to know more about this situation, what keywords should I use to search?</p>\n"}, {"tags": ["rust", "associated-types", "dynamic-dispatch", "trait-objects"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1575680634, "creation_date": 1575680634, "answer_id": 59222137, "question_id": 59221750, "link": "https://stackoverflow.com/questions/59221750/associated-type-must-be-specified-but-isnt-used/59222137#59222137", "title": "&quot;associated type ... must be specified&quot;, but isn&#39;t used", "body": "<p>You are making a trait object, and it is a requirement for trait objects that all associated types are specified. Your case is very simple and the methods of the trait do not use the associated type, but the <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch17-02-trait-objects.html#object-safety-is-required-for-trait-objects\" rel=\"nofollow noreferrer\">object safety rules</a> are designed for the more general case.</p>\n\n<p>If you were just using a type parameter, bound by <code>Tr</code>, you wouldn't need to specify the associated type:</p>\n\n<pre><code>fn foo&lt;T: Tr&gt;(t: T) -&gt; () {\n    t.go()\n}\n</code></pre>\n\n<p>That's because the associated type can be inferred for each <code>T</code> that you call <code>foo</code> with.</p>\n\n<p>If trait objects were allowed to have an unspecified  associated type then code inside the function would not be able to infer it. You <em>could</em> argue in this case, that this should just limit what the function is allowed to do, but the object safety rules are given for the definition of a trait object type, regardless of how it is actually used. This makes is simpler to think about because there aren't some situations where a trait object can be used and others where it can't.</p>\n\n<hr>\n\n<p>As an aside, even if you specified the associated types for the object in your function signature, you would have to pass the object by reference or boxed, e.g.:</p>\n\n<pre><code>fn foo(t: &amp;dyn Tr&lt;Ty = SomeType&gt;) -&gt; () {\n    t.go()\n}\n</code></pre>\n\n<p>That's because trait objects do not have a size known at compile-time. Instead you need to put them behind a reference, which <em>does</em> have a known size.</p>\n"}], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "accepted_answer_id": 59222137, "answer_count": 1, "score": 0, "last_activity_date": 1575681001, "creation_date": 1575676294, "last_edit_date": 1575681001, "question_id": 59221750, "link": "https://stackoverflow.com/questions/59221750/associated-type-must-be-specified-but-isnt-used", "title": "&quot;associated type ... must be specified&quot;, but isn&#39;t used", "body": "<p>Why is the associated type required here, even though it's never used?</p>\n\n<pre><code>trait Tr {\n    type Ty;\n    fn go(&amp;self) -&gt; () {}\n}\n\nfn foo(t: dyn Tr) -&gt; () {\n    t.go()\n}\n</code></pre>\n\n<p>I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>2 |   type Ty;   \n  |   -------- `Ty` defined here   \n...  \n6 | fn foo(t: dyn Tr) -&gt; () {  \n  |           ^^^^^^ associated type `Ty` must be specified\n</code></pre>\n"}, {"tags": ["rust", "command", "iwconfig"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1575659441, "post_id": 59218810, "comment_id": 104653531, "body": "There&#39;s a newline character in the input buffer. Does this answer your question? <a href=\"https://stackoverflow.com/questions/58567077/cant-parse-string-from-stdin-to-floating-point-rust\">Can&#39;t parse String from stdin to floating-point - Rust</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1575659513, "post_id": 59218810, "comment_id": 104653565, "body": "To apply the answer to that question to your problem, try <code>.arg(adapter_input.trim())</code>."}, {"owner": {"reputation": 2652, "user_id": 681705, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/hh4Sq.gif?s=128&g=1", "display_name": "\u30c1\u30fc\u30ba\u30d1\u30f3", "link": "https://stackoverflow.com/users/681705/%e3%83%81%e3%83%bc%e3%82%ba%e3%83%91%e3%83%b3"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575712292, "post_id": 59218810, "comment_id": 104663960, "body": "@trentcl This did solve my issue. Please feel free to write an answer, I will accept it."}], "owner": {"reputation": 2652, "user_id": 681705, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/hh4Sq.gif?s=128&g=1", "display_name": "\u30c1\u30fc\u30ba\u30d1\u30f3", "link": "https://stackoverflow.com/users/681705/%e3%83%81%e3%83%bc%e3%82%ba%e3%83%91%e3%83%b3"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "closed_date": 1575712044, "answer_count": 0, "score": 0, "last_activity_date": 1575658577, "creation_date": 1575658577, "question_id": 59218810, "link": "https://stackoverflow.com/questions/59218810/unable-to-pass-string-from-read-line-to-command-arg", "closed_reason": "Duplicate", "title": "Unable to pass string from read_line to Command arg", "body": "<p>I have the following rust routine which executes fine:</p>\n\n<pre><code>use std::process::Command;\nfn main() {\n    let out = Command::new(\"iwconfig\")\n        .arg(\"wlan0\")\n        .output()\n        .expect(\"Failed to execute 'iwconfig'\");\n\n    println!(\"status:\\n {}\", out.status);\n    println!(\"stdout:\\n {}\", String::from_utf8_lossy(&amp;out.stdout));\n    println!(\"stderr:\\n {}\", String::from_utf8_lossy(&amp;out.stderr));\n}\n</code></pre>\n\n<p>It simply prints the result of the <code>iwconfig</code> command in linux with the <code>wlan0</code> adapter as target. \nThe output is fine for this program.</p>\n\n<p>My goal enable the user to enter an adapter manually. If I execute the following program and enter <code>wlan0</code> manually when prompted:</p>\n\n<pre><code>use std::process::Command;\n\nfn main() {\n    let mut adapter_input = String::new();\n    println!(\"{}\", \"Enter adapter name:\");\n    io::stdin().read_line(&amp;mut adapter_input).unwrap();\n\n    let out = Command::new(\"iwconfig\")\n        .arg(adapter_input)\n        .output()\n        .expect(\"Failed to execute 'iwconfig'\");\n\n    println!(\"status:\\n {}\", out.status);\n    println!(\"stdout:\\n {}\", String::from_utf8_lossy(&amp;out.stdout));\n    println!(\"stderr:\\n {}\", String::from_utf8_lossy(&amp;out.stderr));\n}\n</code></pre>\n\n<p>I get the following output:</p>\n\n<blockquote>\n  <p>wlan0 status:  exit code: 237 stdout:   stderr:  wlan0\n      No such device</p>\n</blockquote>\n\n<p>What am I doing wrong? Why is the adapter found when hardcoded but not found when entered manually? </p>\n"}, {"tags": ["string", "vector", "rust", "calculator"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575646643, "post_id": 59216124, "comment_id": 104648151, "body": "What&#39;s the issue?"}, {"owner": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575647056, "post_id": 59216124, "comment_id": 104648402, "body": "failed to build the logic to iterate through vector to get the desired result need help to  find the logic. i have [&quot;2&quot;,&quot;2&quot;,&quot;2&quot;,&quot;+&quot;,&quot;2&quot;,&quot;3&quot;]  vector and wants transform like this [&quot;222&quot;,&quot;+&quot;,&quot;23&quot;]"}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "edited": false, "score": 0, "creation_date": 1575658397, "post_id": 59217953, "comment_id": 104653118, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bb715884ea5096a58747eb5b09dca95d\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>    &#39;cannot infer type for <code>T</code>&#39; error after integrating with my code of simple expression calculator kindly check"}, {"owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "reply_to_user": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "edited": false, "score": 0, "creation_date": 1575659033, "post_id": 59217953, "comment_id": 104653357, "body": "<code>let mut new_items: Vec&lt;String&gt; = vec![];</code>? But it looks you have more compile error to fix."}, {"owner": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "edited": false, "score": 0, "creation_date": 1575659306, "post_id": 59217953, "comment_id": 104653477, "body": "Yeah getting the same error after type annotation please guide me"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1575684987, "post_id": 59217953, "comment_id": 104660087, "body": "Remove line 5. It is never used, so there isn&#39;t a type given. If you had given type annotations it would&#39;ve worked. Doing that gives another error about ownership, I&#39;d recommend you read the rust book to learn about that."}], "tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": true, "score": 0, "last_activity_date": 1575654161, "creation_date": 1575654161, "answer_id": 59217953, "question_id": 59216124, "link": "https://stackoverflow.com/questions/59216124/how-can-we-concatenate-vector-elements-before-specific-separator-and-make-new-ve/59217953#59217953", "title": "How can we Concatenate vector elements before specific separator and make new vector in Rust", "body": "<p>Maybe something like the following:</p>\n\n<pre><code>pub fn main() {\n    let items = vec![\"2\",\"2\",\"2\",\"+\",\"2\",\"3\"];\n\n    // use a number variable to capture the operand\n    let mut number = String::new();\n    let mut new_items = vec![];\n\n    for s in items {\n        if s == \"+\" {\n            // if found an operator, push and clear the current operand and operator\n            new_items.push(number.drain(..).collect());\n            new_items.push(s.to_owned());\n        } else {\n            number.push_str(s);\n        }\n    }\n\n    if !number.is_empty() {\n        new_items.push(number);\n    }\n\n    println!(\"{:?}\", new_items);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cf0e4a92e97ed50460a54dc251eea81b\" rel=\"nofollow noreferrer\">the playground</a>.</p>\n"}], "owner": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 59217953, "answer_count": 1, "score": 0, "last_activity_date": 1575654161, "creation_date": 1575646588, "last_edit_date": 1575646651, "question_id": 59216124, "link": "https://stackoverflow.com/questions/59216124/how-can-we-concatenate-vector-elements-before-specific-separator-and-make-new-ve", "title": "How can we Concatenate vector elements before specific separator and make new vector in Rust", "body": "<p>I want to to concatenate all 3 elements of vector named 'items' before operator and two elements after operator like this \n[\"2\",\"2\",\"2\",\"+\",\"2\",\"3\"] to [\"222\",\"+\",\"23\"]</p>\n\n<pre><code>let items = vec![\"2\",\"2\",\"2\",\"+\",\"2\",\"3\"];\nlet mut new_items = vec![];\nfor i in 0..items.len() {\n    new_items.insert(i, items[i].to_owned());\n}\nlet mut count = 0;\nfor i in 0..new_items.len() {\n    if new_items[i] == \"+\" {}\n    else {            \n        new_items[i] = format!(\"{}{}\",new_items[i],new_items[i+1]);\n        new_items.remove(i+1);\n        count += 1;\n    }\n}\n\nprintln!(\"{:?}\",new_items);\n</code></pre>\n"}, {"tags": ["c++", "rust", "porting"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 7, "creation_date": 1575645119, "post_id": 59215670, "comment_id": 104647369, "body": "When <i>porting</i> it to Rust, you most likely won&#39;t use the same abstractions, so why bother? And also, why do you want to maintain 2 separates projects doing the same thing?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575647072, "post_id": 59215670, "comment_id": 104648413, "body": "Rust and C++ use different paradigm, so that hard to say. I would recommand to avoid heavy template use."}, {"owner": {"reputation": 1492, "user_id": 776788, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/227fcf39e6bdc1a86340fc1b32614140?s=128&d=identicon&r=PG", "display_name": "Demolishun", "link": "https://stackoverflow.com/users/776788/demolishun"}, "edited": false, "score": 0, "creation_date": 1575649461, "post_id": 59215670, "comment_id": 104649608, "body": "You could write the C++ in the Functional style."}, {"owner": {"reputation": 1215, "user_id": 2712726, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BRddb.jpg?s=128&g=1", "display_name": "Patrick Fromberg", "link": "https://stackoverflow.com/users/2712726/patrick-fromberg"}, "reply_to_user": {"reputation": 1492, "user_id": 776788, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/227fcf39e6bdc1a86340fc1b32614140?s=128&d=identicon&r=PG", "display_name": "Demolishun", "link": "https://stackoverflow.com/users/776788/demolishun"}, "edited": false, "score": 0, "creation_date": 1575654810, "post_id": 59215670, "comment_id": 104651879, "body": "@Demolishun and At Stgargateur. Functional style sounds good but that is one of the reasons of my code being fairly heavy on templates. Hence both of you together make me pesimistic."}, {"owner": {"reputation": 1215, "user_id": 2712726, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BRddb.jpg?s=128&g=1", "display_name": "Patrick Fromberg", "link": "https://stackoverflow.com/users/2712726/patrick-fromberg"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575654921, "post_id": 59215670, "comment_id": 104651928, "body": "@FrenchBoiethios. Do I understand correctly and there are many abstractions you can implemenent in C++ but not Rust?"}, {"owner": {"reputation": 3008, "user_id": 1863938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96ec4e16681460302ea67bfc201b76f3?s=128&d=identicon&r=PG", "display_name": "parktomatomi", "link": "https://stackoverflow.com/users/1863938/parktomatomi"}, "edited": false, "score": 0, "creation_date": 1575677238, "post_id": 59215670, "comment_id": 104658886, "body": "Rust is data-oriented, functional, and RAII-heavy. You can do all those things in C++, but the compiler won&#39;t stop you from veering from doing things not allowed in Rust. Rust will, so it will be a challenge to make them line up."}, {"owner": {"reputation": 1215, "user_id": 2712726, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BRddb.jpg?s=128&g=1", "display_name": "Patrick Fromberg", "link": "https://stackoverflow.com/users/2712726/patrick-fromberg"}, "reply_to_user": {"reputation": 3008, "user_id": 1863938, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/96ec4e16681460302ea67bfc201b76f3?s=128&d=identicon&r=PG", "display_name": "parktomatomi", "link": "https://stackoverflow.com/users/1863938/parktomatomi"}, "edited": false, "score": 0, "creation_date": 1575750750, "post_id": 59215670, "comment_id": 104672995, "body": "@parktomatomi. I do not consider having to be RAII-clean as a porting problem but rather a backporting opportunity if at all it arises with modern C++. But you are right regarding legacy code which I will exclude from the question now."}], "owner": {"reputation": 1215, "user_id": 2712726, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/BRddb.jpg?s=128&g=1", "display_name": "Patrick Fromberg", "link": "https://stackoverflow.com/users/2712726/patrick-fromberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 126, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1575751011, "creation_date": 1575644934, "last_edit_date": 1575751011, "question_id": 59215670, "link": "https://stackoverflow.com/questions/59215670/syntax-and-library-features-to-avoid-in-c-programs-that-are-planned-to-be-port", "title": "Syntax and library features to avoid in C++ programs that are planned to be ported to Rust", "body": "<p>I am working on a small C++ (C++17 in this case) program that I plan to port to Rust in the future (without dropping the C++ version). This program uses hardly any libraries. It also uses very little functionality from the STL, only <code>std::function</code> at the moment. </p>\n\n<p>Apart from recommendations already in the general C++ guidelines, Is there any specific syntax construct I should avoid in C++ because it would make porting to Rust especially hard? </p>\n\n<p>If I would need more functionality from the STL, are there any specific STL classes that are notable trouble makers when porting to Rust? </p>\n\n<p><strong>UPDATE:</strong> I exclude legacy C++ code in this question because it would make this question to broad. If someone is interested anyway, then please raise that specific question yourself.</p>\n"}, {"tags": ["rust", "match", "ownership"], "comments": [{"owner": {"reputation": 459, "user_id": 7596388, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/287d123447c991169f410aca0ae68376?s=128&d=identicon&r=PG&f=1", "display_name": "William Bright", "link": "https://stackoverflow.com/users/7596388/william-bright"}, "edited": false, "score": 3, "creation_date": 1575643200, "post_id": 59215169, "comment_id": 104646335, "body": "Its telling you on the &quot;note:&quot;"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575643319, "post_id": 59215169, "comment_id": 104646405, "body": "This has nothing to do with the arms, when you match something, it is moved (or copied, if possible)."}, {"owner": {"reputation": 459, "user_id": 7596388, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/287d123447c991169f410aca0ae68376?s=128&d=identicon&r=PG&f=1", "display_name": "William Bright", "link": "https://stackoverflow.com/users/7596388/william-bright"}, "edited": false, "score": 0, "creation_date": 1575643328, "post_id": 59215169, "comment_id": 104646408, "body": "Either way you borrowing the <code>x</code> there because you have to  in order  to ensure that nothing changes down the road of the program. This prevents weird things from happening like null pointers"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575644129, "post_id": 59215169, "comment_id": 104646839, "body": "Just to make sure we understand your question correctly: Why do you think &quot;it&#39;s clear that <code>bag.food</code> will not match <code>x</code> arm in the code&quot;? Because of the specific value you assigned to <code>bag.food</code>, or for some other reason?"}, {"owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1575644214, "post_id": 59215169, "comment_id": 104646894, "body": "@SvenMarnach Because of the specific value assigned, which is <code>Food::Cake</code>."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1575744432, "last_edit_date": 1575744432, "creation_date": 1575644252, "answer_id": 59215498, "question_id": 59215169, "link": "https://stackoverflow.com/questions/59215169/does-non-matching-arm-take-the-owner-of-a-variable-in-a-match-statement-in-rus/59215498#59215498", "title": "Does non-matching arm take the owner of a variable in a &quot;match&quot; statement in Rust?", "body": "<p>It doesn't matter that the <code>x</code> branch is not taken at runtime because whether a <code>match</code> takes ownership of its argument does not depend on which branch of the <code>match</code> will actually be taken. Much like in this code (also see <a href=\"https://stackoverflow.com/questions/59222703/if-statement-gets-executed-when-the-condition-is-false-in-a-rust-program-ho\">this followup question</a>):</p>\n\n<pre><code>let foo = \"blargh\".to_owned();\nif false {\n    let _bar = foo;\n}\nprintln!(\"{}\", foo); // error[E0382]: borrow of moved value: `foo`\n</code></pre>\n\n<p><code>foo</code> is never actually moved, but that doesn't make any difference to whether it is valid after the <code>if</code> (it isn't).</p>\n\n<p>The <code>match</code> in the question takes ownership of <code>bag.food</code> (invalidating <code>bag</code>) because it has a branch that takes ownership. If you want that particular branch to not take ownership, you can use a <code>ref</code> pattern to borrow instead:</p>\n\n<pre><code>match bag.food {\n    Food::Cake =&gt; println!(\"I got cake\"),\n    ref x =&gt; println!(\"I got {:?}\", x)\n}\n</code></pre>\n\n<p>Alternatively, since Rust 1.26 the compiler knows how to bind value patterns (such as <code>Food::Cake</code>) to references (such as <code>&amp;bag.food</code>), so you can write:</p>\n\n<pre><code>match &amp;bag.food {\n    Food::Cake =&gt; println!(\"I got cake\"),\n    x =&gt; println!(\"I got {:?}\", x)\n}\n</code></pre>\n\n<p>In this case <code>Food::Cake</code> matches the value, but <code>x</code> matches and is bound to the reference, so it does the same thing as the previous snippet with <code>ref</code>. (You may see this referred to as \"default binding modes\" or \"match ergonomics\".)</p>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 59215498, "answer_count": 1, "score": 2, "last_activity_date": 1575744432, "creation_date": 1575643027, "question_id": 59215169, "link": "https://stackoverflow.com/questions/59215169/does-non-matching-arm-take-the-owner-of-a-variable-in-a-match-statement-in-rus", "title": "Does non-matching arm take the owner of a variable in a &quot;match&quot; statement in Rust?", "body": "<p>I'm new to Rust. Below is my testing. </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nenum Food {\n    Cake,\n    Pizza,\n    Salad,\n}\n\n#[derive(Debug)]\nstruct Bag {\n    food: Food\n}\n\nfn main() {\n    let bag = Bag { food: Food::Cake };\n    match bag.food {\n        Food::Cake =&gt; println!(\"I got cake\"),\n        x =&gt; println!(\"I got {:?}\", x)\n    }\n\n    println!(\"{:?}\", bag);\n}\n</code></pre>\n\n<p>When I run it, I got an error.</p>\n\n<pre><code>error[E0382]: borrow of moved value: `bag`\n  --&gt; src\\main.rs:20:22\n   |\n17 |         x =&gt; println!(\"I got {:?}\", x)\n   |         - value moved here\n...\n20 |     println!(\"{:?}\", bag);\n   |                      ^^^ value borrowed here after partial move\n   |\n   = note: move occurs because `bag.food` has type `Food`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>It's clear that <code>bag.food</code> will not match <code>x</code> arm in the code. Why a <em>move</em> happens there?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1575662256, "creation_date": 1575662256, "answer_id": 59219553, "question_id": 59214210, "link": "https://stackoverflow.com/questions/59214210/rust-implement-trait-from-for-associated-type-error/59219553#59219553", "title": "Rust: Implement trait &quot;From&quot; for associated type (Error)", "body": "<blockquote>\n  <p>So basically what I want to express is something along the lines of:\n  \"I want to implement the trait <code>From&lt;T::Err&gt;</code> for my <code>InputError</code> for every <code>T</code> which also implements <code>FromStr</code>. Is this even possible and if so, how?</p>\n</blockquote>\n\n<p>This isn't what the error is saying.</p>\n\n<p>The trait <code>FromStr</code> has an associated type, <code>Err</code>. The error is saying that this associated error type cannot be converted to <code>InputError</code>.</p>\n\n<p>First, let's simplify by getting rid of the type parameters:</p>\n\n<pre><code>fn get_integer_lines() -&gt; Result&lt;Vec&lt;u32&gt;, InputError&gt; {\n    let stdin = io::stdin();\n    let my_values = stdin\n        .lock()\n        .lines()\n        .map(|line| Ok(line?.parse()?))\n        .collect();\n    my_values\n}\n</code></pre>\n\n<p>This works!</p>\n\n<p>The associated <code>Err</code> type for <code>u32</code>'s <code>FromStr</code> implementation is <code>ParseIntError</code> and you have correctly implemented <code>From&lt;ParseIntError&gt; for InputError</code>.</p>\n\n<p>The reason this doesn't work for <code>T</code> is because <code>T</code>'s <code>FromStr::Err</code> type <em>could</em> be anything. By using a type parameter, you are telling the compiler that you expect this function to work for <em>any possible</em> type <code>T</code>, but it only works for types where  <code>FromStr::Err</code> can be converted to your <code>InputError</code> type.</p>\n\n<p>The error message gives you a hint:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>= help: consider adding a `where InputError: std::convert::From&lt;&lt;T as std::str::FromStr&gt;::Err&gt;` bound\n</code></pre>\n\n<p>So let's do that:</p>\n\n<pre><code>fn get_integer_lines&lt;T&gt;() -&gt; Result&lt;Vec&lt;T&gt;, InputError&gt;\nwhere\n    T: str::FromStr,\n    InputError: From&lt;&lt;T as str::FromStr&gt;::Err&gt;,\n{\n    let stdin = io::stdin();\n    let my_values = stdin\n        .lock()\n        .lines()\n        .map(|line| Ok(line?.parse()?))\n        .collect();\n    my_values\n}\n</code></pre>\n\n<p>This tells the compiler that you expect the function to work for all possible <code>T</code> <em>provided that</em>:</p>\n\n<ul>\n<li><code>T</code> implements <code>FromStr</code> and,</li>\n<li>the associated <code>Err</code> type from <code>T</code>'s <code>FromStr</code> implementation can be converted into an <code>InputError</code></li>\n</ul>\n"}], "owner": {"reputation": 1746, "user_id": 233839, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d65b64474e1d38a2483ff000a1213832?s=128&d=identicon&r=PG", "display_name": "Zeta Two", "link": "https://stackoverflow.com/users/233839/zeta-two"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1071, "favorite_count": 0, "accepted_answer_id": 59219553, "answer_count": 1, "score": 2, "last_activity_date": 1575662256, "creation_date": 1575639292, "last_edit_date": 1575661211, "question_id": 59214210, "link": "https://stackoverflow.com/questions/59214210/rust-implement-trait-from-for-associated-type-error", "title": "Rust: Implement trait &quot;From&quot; for associated type (Error)", "body": "<p>This is a follow-up question on my previous question: <a href=\"https://stackoverflow.com/questions/59187274/rust-read-and-map-lines-from-stdin-and-handling-different-error-types\">Rust: Read and map lines from stdin and handling different error types</a></p>\n\n<p>I have created the following struct and function to read lines from stdin and parse them into integers and it works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io::BufRead;\nuse std::{io, num, str};\n\n#[derive(Debug)]\nenum InputError {\n    IOError(io::Error),\n    ParseIntError(num::ParseIntError),\n}\n\nimpl From&lt;io::Error&gt; for InputError {\n    fn from(e: io::Error) -&gt; InputError {\n        return InputError::IOError(e);\n    }\n}\n\nimpl From&lt;num::ParseIntError&gt; for InputError {\n    fn from(e: num::ParseIntError) -&gt; InputError {\n        return InputError::ParseIntError(e);\n    }\n}\n\npub fn get_integer_lines&lt;T&gt;() -&gt; Result&lt;Vec&lt;T&gt;, InputError&gt;\nwhere\n    T: str::FromStr,\n{\n    let stdin = io::stdin();\n    let my_values: Result&lt;Vec&lt;_&gt;, InputError&gt; = stdin\n        .lock()\n        .lines()\n        .map(|line| -&gt; Result&lt;T, InputError&gt; { Ok(line?.parse::&lt;T&gt;()?) })\n        .collect();\n    my_values\n}\n</code></pre>\n\n<p>Now, I thought that I would replace <code>u32</code> for a type parameter T to allow for any kind of numeric type. To do this I assume that I need to restrict T to types implementing the FromStr trait and then somehow implement the From trait to allow conversion from FromStr::Err into my \"InputError\".</p>\n\n<p>Following the error I first got </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `?` couldn't convert the error to `InputError`\n  --&gt; src/lib.rs:30:69\n   |\n30 |         .map(|line| -&gt; Result&lt;T, InputError&gt; { Ok(line?.parse::&lt;T&gt;()?) })\n   |                                                                     ^ the trait `std::convert::From&lt;&lt;T as std::str::FromStr&gt;::Err&gt;` is not implemented for `InputError`\n   |\n   = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n   = help: consider adding a `where InputError: std::convert::From&lt;&lt;T as std::str::FromStr&gt;::Err&gt;` bound\n   = note: required by `std::convert::From::from`\n</code></pre>\n\n<p>I tried something like this:</p>\n\n<pre><code>impl std::convert::From&lt;&lt;T as std::str::FromStr&gt;::Err&gt; for InputError {\n    fn from(e: &lt;T as std::str::FromStr&gt;::Err) -&gt; InputError {\n        return InputError::ParseIntError(e)\n    }\n} \n</code></pre>\n\n<p>But that instead results in:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0412]: cannot find type `T` in this scope\n  --&gt; src/lib.rs:22:26\n   |\n22 | impl std::convert::From&lt;&lt;T as std::str::FromStr&gt;::Err&gt; for InputError {\n   |                          ^ not found in this scope\n</code></pre>\n\n<p>So basically what I want to express is something along the lines of:\n\"I want to implement the trait <code>From&lt;T::Err&gt;</code> for my <code>InputError</code> for every <code>T</code> which also implements <code>FromStr</code>. Is this even possible and if so, how?</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1575631000, "post_id": 59211940, "comment_id": 104640554, "body": "why you stop at the half way to do a good <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> ? see <a href=\"https://doc.rust-lang.org/std/iter/trait.Extend.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/iter/trait.Extend.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 2, "last_activity_date": 1575631554, "creation_date": 1575631554, "answer_id": 59212228, "question_id": 59211940, "link": "https://stackoverflow.com/questions/59211940/is-it-possible-to-replace-a-for-loop-that-pushes-a-member-variable-of-each-item/59212228#59212228", "title": "Is it possible to replace a for loop that pushes a member variable of each item into a Vec with an iterator?", "body": "<p>It can be done with <code>extend</code>, let's rename <code>V</code> as <code>vector_of_other_struct</code>:  </p>\n\n<pre><code>vec_mystruct.extend(vector_of_other_struct.iter().map(|x| x.value.clone()));\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=66805fdde18caad51d8d0319be00aaf3\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p><strong>Note :</strong> with this way you can avoid reallocation on per push since the argument iterator has a <code>size_hint</code> information.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 1, "last_activity_date": 1575640525, "creation_date": 1575640525, "answer_id": 59214534, "question_id": 59211940, "link": "https://stackoverflow.com/questions/59211940/is-it-possible-to-replace-a-for-loop-that-pushes-a-member-variable-of-each-item/59214534#59214534", "title": "Is it possible to replace a for loop that pushes a member variable of each item into a Vec with an iterator?", "body": "<p><code>extend</code> is useful when you wish to add elements to a pre-existing <code>Vec</code>. However, in the case you ask about (creating a vector from a slice), you can instead do it more concisely in one line:</p>\n\n<pre><code>let vec_mystruct: Vec&lt;_&gt; = V.iter().map(|x| x.value.clone()).collect();\n</code></pre>\n\n<p>When <code>V.iter()</code> is an <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"nofollow noreferrer\"><code>ExactSizeIterator</code></a>, as it is when <code>V</code> is a slice, this will always allocate exactly the right amount of space.</p>\n"}], "owner": {"reputation": 2284, "user_id": 1964489, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/dced6d8951b4771cde68c08e372bbede?s=128&d=identicon&r=PG", "display_name": "Ziva", "link": "https://stackoverflow.com/users/1964489/ziva"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1579100433, "creation_date": 1575630406, "last_edit_date": 1579100433, "question_id": 59211940, "link": "https://stackoverflow.com/questions/59211940/is-it-possible-to-replace-a-for-loop-that-pushes-a-member-variable-of-each-item", "title": "Is it possible to replace a for loop that pushes a member variable of each item into a Vec with an iterator?", "body": "<p>I have this code as below</p>\n\n<pre><code>pub struct MyOtherStruct {\n    pub value: MyStruct,\n}\n\n#[derive(Clone)]\npub struct MyStruct {\n    pub field: Vec&lt;u8&gt;,\n}\n\nfn example(v: &amp;[MyOtherStruct]) {\n    let mut vec_mystruct: Vec&lt;MyStruct&gt; = vec![];\n    for x in v {\n        vec_mystruct.push(x.value.clone());\n    }\n}\n</code></pre>\n\n<p>Is it possible to implement this for loop with an iterator?</p>\n"}, {"tags": ["rust", "reqwest"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1575631828, "post_id": 59211354, "comment_id": 104640908, "body": "Looks interesting, probably you are using rustc <code>1.38.0</code>, this doesn&#39;t occur on <code>1.39.0</code>."}, {"owner": {"reputation": 29117, "user_id": 1587329, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/UWmiP.png?s=128&g=1", "display_name": "serv-inc", "link": "https://stackoverflow.com/users/1587329/serv-inc"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1575631877, "post_id": 59211354, "comment_id": 104640936, "body": "Yes, indeed, it is <code>1.38.0</code>"}, {"owner": {"reputation": 29117, "user_id": 1587329, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/UWmiP.png?s=128&g=1", "display_name": "serv-inc", "link": "https://stackoverflow.com/users/1587329/serv-inc"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1575632762, "post_id": 59211354, "comment_id": 104641369, "body": "Upgrading to 1.39 changed the errors. Thanks! Any ideas?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1575638670, "post_id": 59211354, "comment_id": 104644129, "body": "Example is using alpha version of tokio, macros are bundled on that version, for the stable version you need to enable macros feature: add your dependency like this <code>tokio = { version = &quot;0.2.2&quot;, features = [&quot;macros&quot;] }</code>"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1575638970, "post_id": 59211354, "comment_id": 104644277, "body": "and the examples you are using, uses reqwest <code>version = &quot;0.10.0-alpha.2&quot;</code>"}, {"owner": {"reputation": 29117, "user_id": 1587329, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/UWmiP.png?s=128&g=1", "display_name": "serv-inc", "link": "https://stackoverflow.com/users/1587329/serv-inc"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1575641045, "post_id": 59211354, "comment_id": 104645211, "body": "@&#214;merErden: wow, thanks, next errors still fail to find tokio"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1575641646, "post_id": 59211354, "comment_id": 104645526, "body": "If you just want to execute the example, you may want to use  tokio.0.2.0-alpha.6, for now unfortunately i don\u2019t know how to fix this conflict :/"}], "answers": [{"comments": [{"owner": {"reputation": 29117, "user_id": 1587329, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/UWmiP.png?s=128&g=1", "display_name": "serv-inc", "link": "https://stackoverflow.com/users/1587329/serv-inc"}, "edited": false, "score": 2, "creation_date": 1576314970, "post_id": 59226984, "comment_id": 104865899, "body": "Awesome. How could someone discover this on their own? Any docs or commands that would help?"}, {"owner": {"reputation": 566, "user_id": 1480374, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5534b0e86f957dafe87c9b244a0face4?s=128&d=identicon&r=PG", "display_name": "fyaa", "link": "https://stackoverflow.com/users/1480374/fyaa"}, "reply_to_user": {"reputation": 29117, "user_id": 1587329, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/UWmiP.png?s=128&g=1", "display_name": "serv-inc", "link": "https://stackoverflow.com/users/1587329/serv-inc"}, "edited": false, "score": 2, "creation_date": 1576416142, "post_id": 59226984, "comment_id": 104885286, "body": "As this is an example from their repository, I looked at their Cargo.toml and tried out some of their packages (and their versions). Then, I had to react to some Cargo errors, but they led me to this solution."}], "tags": [], "owner": {"reputation": 566, "user_id": 1480374, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/5534b0e86f957dafe87c9b244a0face4?s=128&d=identicon&r=PG", "display_name": "fyaa", "link": "https://stackoverflow.com/users/1480374/fyaa"}, "is_accepted": true, "score": 2, "last_activity_date": 1575729030, "creation_date": 1575729030, "answer_id": 59226984, "question_id": 59211354, "link": "https://stackoverflow.com/questions/59211354/rust-reqwest-example-json-code-does-not-compile/59226984#59226984", "title": "Rust reqwest example json code does not compile", "body": "<p>Your example comes from <a href=\"https://github.com/seanmonstar/reqwest/blob/master/examples/json_dynamic.rs\" rel=\"nofollow noreferrer\">https://github.com/seanmonstar/reqwest/blob/master/examples/json_dynamic.rs</a> and works with the following <code>Cargo.toml</code>, using Rust 1.39:</p>\n\n<pre><code>[package]\nname = \"reqwest-json_dynamic-example\"\nversion = \"0.1.0\"\nauthors = [\"fyaa\"]\nedition = \"2018\"\n\n[dependencies]\ntokio = { version = \"=0.2.0-alpha.6\", features = [\"io\", \"tcp\", \"timer\"] }\nreqwest = { version = \"0.10.0-alpha.2\", features = [\"json\"] }\nserde_json = \"1.0.44\"\n</code></pre>\n"}], "owner": {"reputation": 29117, "user_id": 1587329, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/UWmiP.png?s=128&g=1", "display_name": "serv-inc", "link": "https://stackoverflow.com/users/1587329/serv-inc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1820, "favorite_count": 0, "accepted_answer_id": 59226984, "answer_count": 1, "score": 0, "last_activity_date": 1575729030, "creation_date": 1575628230, "last_edit_date": 1575641023, "question_id": 59211354, "link": "https://stackoverflow.com/questions/59211354/rust-reqwest-example-json-code-does-not-compile", "title": "Rust reqwest example json code does not compile", "body": "<p>The <a href=\"https://github.com/seanmonstar/reqwest/blob/master/examples/json_dynamic.rs\" rel=\"nofollow noreferrer\">example for dynamic json with <code>reqwest</code></a> </p>\n\n<pre><code>extern crate reqwest;\nextern crate tokio;\nextern crate serde_json;  // added to after upgrade to 1.39.0\n\n#[tokio::main]\nasync fn main() -&gt; Result&lt;(), reqwest::Error&gt; {\n    let echo_json: serde_json::Value = reqwest::Client::new()\n        .post(\"https://jsonplaceholder.typicode.com/posts\")\n        .json(&amp;serde_json::json!({\n            \"title\": \"Reqwest.rs\",\n            \"body\": \"https://docs.rs/reqwest\",\n            \"userId\": 1\n        }))\n        .send()\n        .await?\n        .json()\n        .await?;\n\n    println!(\"{:#?}\", echo_json);\n    // Object(\n    //     {\n    //         \"body\": String(\n    //             \"https://docs.rs/reqwest\"\n    //         ),\n    //         \"id\": Number(\n    //             101\n    //         ),\n    //         \"title\": String(\n    //             \"Reqwest.rs\"\n    //         ),\n    //         \"userId\": Number(\n    //             1\n    //         )\n    //     }\n    // )\n    Ok(())\n}\n</code></pre>\n\n<p>failed to compile for rustc <code>1.38.0</code> with <code>reqwest = \"0.9.22\"</code> and <code>tokio = \"0.2.2\"</code>:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>   Compiling pin-project-lite v0.1.1\nerror: `core::slice::&lt;impl [T]&gt;::len` is not yet stable as a const fn\n   --&gt; /Users/mick/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.5.2/src/bytes.rs:121:18\n    |\n121 |             len: bytes.len(),\n    |                  ^^^^^^^^^^^\n\nerror: aborting due to previous error\n\nerror: Could not compile `bytes`.\n</code></pre>\n</blockquote>\n\n<p>This was fixed by upgrading as of the comment by \u00d6mer below, but now the next problems are</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve: could not find `main` in `tokio`\n --&gt; main.rs:5:10\n  |\n5 | #[tokio::main]\n  |          ^^^^ could not find `main` in `tokio`\n\nerror[E0277]: the trait bound `std::result::Result&lt;reqwest::Response, reqwest::Error&gt;: std::future::Future` is not satisfied\n   --&gt; main.rs:7:40\n    |\n7   |       let echo_json: serde_json::Value = reqwest::Client::new()\n    |  ________________________________________^\n8   | |         .post(\"https://jsonplaceholder.typicode.com/posts\")\n9   | |         .json(&amp;serde_json::json!({\n10  | |             \"title\": \"Reqwest.rs\",\n...   |\n14  | |         .send()\n15  | |         .await?\n    | |______________^ the trait `std::future::Future` is not implemented for `std::result::Result&lt;reqwest::Response, reqwest::Error&gt;`\n\nerror[E0277]: `main` has invalid return type `impl std::future::Future`\n --&gt; main.rs:6:20\n  |\n6 | async fn main() -&gt; Result&lt;(), reqwest::Error&gt; {\n  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ `main` can only return types that implement `std::process::Termination`\n  |\n  = help: consider using `()`, or a `Result`\n\nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations: E0277, E0433.\nFor more information about an error, try `rustc --explain E0277`.\nerror: could not compile `webtrekk`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>and the next <code>reqwest = \"0.10.0-alpha.2\" tokio = { version = \"0.2.2\", features = [\"macros\"] } serde_json = \"1.0.44\"</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u279c  rust git:(master) \u2717 cargo run\n    Updating crates.io index\nerror: failed to select a version for `tokio`.\n    ... required by package `reqwest v0.10.0-alpha.2`\n    ... which is depended on by `webtrekk v0.1.0 (/Users/mick/repo/webtrekk-client/rust)`\nversions that meet the requirements `= 0.2.0-alpha.6` are: 0.2.0-alpha.6\n\nall possible versions conflict with previously selected packages.\n\n  previously selected package `tokio v0.2.2`\n    ... which is depended on by `webtrekk v0.1.0 (/Users/mick/repo/webtrekk-client/rust)`\n\nfailed to select a version for `tokio` which could resolve this conflict\n\n</code></pre>\n\n<p>How can these be fixed?</p>\n"}, {"tags": ["python", "rust", "pyo3"], "answers": [{"tags": [], "owner": {"reputation": 5078, "user_id": 6699447, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ERMjH.jpg?s=128&g=1", "display_name": "Abdul Niyas P M", "link": "https://stackoverflow.com/users/6699447/abdul-niyas-p-m"}, "is_accepted": true, "score": 5, "last_activity_date": 1599106082, "last_edit_date": 1599106082, "creation_date": 1575626981, "answer_id": 59210991, "question_id": 59209944, "link": "https://stackoverflow.com/questions/59209944/how-can-i-implement-python-operators-in-pyo3/59210991#59210991", "title": "How can I implement python operators in PyO3", "body": "<p>As per the <a href=\"https://pyo3.rs/v0.6.0/class.html#class-customizations\" rel=\"nofollow noreferrer\"><code>PyO3</code></a> Documentation,</p>\n<p>Python's object model defines several protocols for different object behavior, like sequence, mapping or number protocols. PyO3 defines separate traits for each of them. <strong>To provide specific python object behavior you need to implement the specific trait for your struct.</strong></p>\n<p>Important note, each protocol implementation block has to be annotated with <strong>#[<code>pyproto</code>]</strong> attribute.</p>\n<p><code>__add__</code>, <code>__sub__</code> etc are defined within <a href=\"https://docs.rs/pyo3/0.2.5/pyo3/class/number/trait.PyNumberProtocol.html\" rel=\"nofollow noreferrer\"><code>PyNumberProtocol</code></a> Trait.</p>\n<p>So you could implement  <code>PyNumberProtocol</code> for your <code>Vec2d</code> struct to overload  standard operations.</p>\n<pre><code>#[pyproto]\nimpl PyNumberProtocol for Vec2d {\n    fn __add__(&amp;self, other: &amp; Vec2d) -&gt; PyResult&lt;Vec2d&gt; {\n            Ok(Vec2d{x: self.x + other.x, y: self.y + other.y })\n   }\n}\n</code></pre>\n<p>This solution is not tested, For the complete working solution check @Neven V's answer.</p>\n"}, {"tags": [], "owner": {"reputation": 414, "user_id": 10027774, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FoUDo.png?s=128&g=1", "display_name": "Neven V.", "link": "https://stackoverflow.com/users/10027774/neven-v"}, "is_accepted": false, "score": 3, "last_activity_date": 1591557180, "last_edit_date": 1591557180, "creation_date": 1591538802, "answer_id": 62246524, "question_id": 59209944, "link": "https://stackoverflow.com/questions/59209944/how-can-i-implement-python-operators-in-pyo3/62246524#62246524", "title": "How can I implement python operators in PyO3", "body": "<p>I'll add this answer to spare others from searching for hours like I did.</p>\n\n<p>Using the answer provided by @Abdul Niyas P M, I had the following error:</p>\n\n<pre><code>error: custom attribute panicked\n  --&gt; src/vec2.rs:49:1\n   |\n49 | #[pyproto]\n   | ^^^^^^^^^^\n   |\n   = help: message: fn arg type is not supported\n</code></pre>\n\n<p>It turns out that this cryptic error message hides two problems.\nThe first problem is that <code>__add__</code> should take values and not references, thus we remove the <code>&amp;</code> before <code>self</code> and <code>Vec2</code>.\nThis allows us to get rid of the error message:</p>\n\n<pre><code>error[E0277]: the trait bound `&amp;vec2::Vec2: pyo3::pyclass::PyClass` is not satisfied\n   --&gt; src/vec2.rs:47:1\n    |\n47  | #[pyproto]\n    | ^^^^^^^^^^ the trait `pyo3::pyclass::PyClass` is not implemented for `&amp;vec2::Vec2`\n    | \n</code></pre>\n\n<p>The second of these problems can be revealed when we specify the type of <code>self</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// DOES NOT COMPILE\n#[pyproto]\nimpl PyNumberProtocol for Vec2 {\n    fn __add__(self: Vec2, other: Vec2) -&gt; PyResult&lt;Vec2&gt; {\n        Ok(Vec2{x: self.x + other.x, y: self.y + other.y})\n    }\n}\n</code></pre>\n\n<p>This fails to compile with the errror message</p>\n\n<pre><code>error[E0185]: method `__add__` has a `self: &lt;external::vec3::Vec3 as pyo3::class::number::PyNumberAddProtocol&lt;'p&gt;&gt;::Left` declaration in the impl, but not in the trait\n  --&gt; src/external/vec2.rs:49:5\n   |\n49 |     fn __add__(self: Vec2, other: Vec2) -&gt; PyResult&lt;Vec2&gt; {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `self: &lt;vec2::Vec2 as pyo3::class::number::PyNumberAddProtocol&lt;'p&gt;&gt;::Left` used in impl\n   |\n   = note: `__add__` from trait: `fn(&lt;Self as pyo3::class::number::PyNumberAddProtocol&lt;'p&gt;&gt;::Left, &lt;Self as pyo3::class::number::PyNumberAddProtocol&lt;'p&gt;&gt;::Right) -&gt; &lt;Self as pyo3::class::number::PyNumberAddProtocol&lt;'p&gt;&gt;::Result`\n</code></pre>\n\n<p>This leads us to the final working solution (as of June 2020):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[pyproto]\nimpl PyNumberProtocol for Vec2 {\n    fn __add__(lhs: Vec2, rhs: Vec2) -&gt; PyResult&lt;Vec2&gt; {\n        Ok(Vec2{x: lhs.x + rhs.x, y: lhs.y + rhs.y})\n    }\n}\n</code></pre>\n\n<p>Which successfully compiles under Rust nightly 1.45 and has been checked to work from Python.</p>\n\n<p>It is also possible to have <code>rhs</code> of another type:</p>\n\n<pre><code>#[pyproto]\nimpl PyNumberProtocol for Vec2 {\n    fn __mul__(lhs: Vec2, rhs: f64) -&gt; PyResult&lt;Vec2&gt; {\n        Ok(Vec3{x: lhs.x * rhs, y: lhs.y * rhs})\n    }\n}\n</code></pre>\n\n<p>Also note that having <code>self</code> is not always a problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[pyproto]\nimpl PyNumberProtocol for Vec2 {\n    fn __neg__(self) -&gt; PyResult&lt;Vec2&gt; {\n        Ok(Vec3{x: -self.x, y: -self.y})\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 133, "user_id": 1870285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eSepJ.jpg?s=128&g=1", "display_name": "N0name", "link": "https://stackoverflow.com/users/1870285/n0name"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 417, "favorite_count": 0, "accepted_answer_id": 59210991, "answer_count": 2, "score": 4, "last_activity_date": 1599106082, "creation_date": 1575623132, "question_id": 59209944, "link": "https://stackoverflow.com/questions/59209944/how-can-i-implement-python-operators-in-pyo3", "title": "How can I implement python operators in PyO3", "body": "<p>I'm trying to implement a vector class in rust for my math library. </p>\n\n<pre><code>#[pyclass]\nstruct Vec2d {\n    #[pyo3(get, set)]\n    x: f64,\n    #[pyo3(get, set)]\n    y: f64\n}\n</code></pre>\n\n<p>But I can't figure out how I can overload the standard operators (+, -, *, /)</p>\n\n<p>I Tried implementing the Add trait from std::ops with no luck</p>\n\n<pre><code>impl Add for Vec2d {\n    type Output = Vec2d;\n    fn add(self, other: Vec2d) -&gt; Vec2d {\n        Vec2d{x: self.x + other.x, y: self.y + other.y }\n    }\n}\n</code></pre>\n\n<p>I also tried adding <code>__add__</code> method to the #[pymethods] block</p>\n\n<pre><code>fn __add__(&amp;self, other: &amp; Vec2d) -&gt; PyResult&lt;Vec2d&gt; {\n    Ok(Vec2d{x: self.x + other.x, y: self.y + other.y })\n}\n</code></pre>\n\n<p>but still does not work.</p>\n\n<p>With the second approach I can see that the method is there, but python doesn't recognize it as operator overload</p>\n\n<pre><code>In [2]: v1 = Vec2d(3, 4)\nIn [3]: v2 = Vec2d(6, 7)\nIn [4]: v1 + v2\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-4-08104d7e1232&gt; in &lt;module&gt;()\n----&gt; 1 v1 + v2\n\nTypeError: unsupported operand type(s) for +: 'Vec2d' and 'Vec2d'\n\nIn [5]: v1.__add__(v2)\nOut[5]: &lt;Vec2d object at 0x0000026B74C2B6F0&gt;\n</code></pre>\n"}, {"tags": ["types", "rust", "type-conversion", "primitive"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575657587, "post_id": 59208373, "comment_id": 104652824, "body": "<code>delta.abs()</code> may panic when <code>delta</code> is <code>isize::MIN</code>."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1575619640, "post_id": 59208670, "comment_id": 104635249, "body": "no you don&#39;t that, nothing disallow usize to be bigger in the future - -"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 2, "creation_date": 1575624417, "post_id": 59208670, "comment_id": 104637239, "body": "Maybe one could <code>static_assert</code> that <code>i128</code> holds enough bits to represent both <code>usize</code> and <code>isize</code> losslessly."}], "tags": [], "owner": {"reputation": 169523, "user_id": 4983450, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/NR2ko.jpg?s=128&g=1", "display_name": "Psidom", "link": "https://stackoverflow.com/users/4983450/psidom"}, "is_accepted": false, "score": 1, "last_activity_date": 1575617095, "creation_date": 1575617095, "answer_id": 59208670, "question_id": 59208373, "link": "https://stackoverflow.com/questions/59208373/how-to-subtract-an-isize-from-a-usize/59208670#59208670", "title": "How to subtract an isize from a usize?", "body": "<p>Depending on your machine, a <a href=\"https://doc.rust-lang.org/std/primitive.usize.html\" rel=\"nofollow noreferrer\">usize is either 32 bit or 64 bit</a>, same for <a href=\"https://doc.rust-lang.org/std/primitive.isize.html\" rel=\"nofollow noreferrer\">isize</a> except the first bit is a sign bit. So without knowing the upper bound of the indexer, the safe way is to convert both values to <code>i128</code>:</p>\n\n<pre><code>let big_indexer = (big_indexer as i128) + delta as i128\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575621885, "post_id": 59209602, "comment_id": 104636038, "body": "You could create an <code>Offset</code> from an <code>isize</code>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575622462, "post_id": 59209602, "comment_id": 104636283, "body": "@FrenchBoiethios the point is to get rid of <code>isize</code>, also use <code>isize</code> lead to overflow problem when value is <code>isize::min_value</code>, I have a strong opinion on that, life is better without isize"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575624897, "post_id": 59209602, "comment_id": 104637507, "body": "<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=69496ca61b32a3c369a445cbe85fce84\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575625162, "post_id": 59209602, "comment_id": 104637654, "body": "@FrenchBoiethios yes but you run into another problem what to do when your offset is bigger or less then <code>isize</code> limit ?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575625249, "post_id": 59209602, "comment_id": 104637691, "body": "What do you mean? i was talking about <code>isize</code> -&gt; <code>Offset</code> conversion."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 4, "last_activity_date": 1575654539, "last_edit_date": 1575654539, "creation_date": 1575621542, "answer_id": 59209602, "question_id": 59208373, "link": "https://stackoverflow.com/questions/59208373/how-to-subtract-an-isize-from-a-usize/59209602#59209602", "title": "How to subtract an isize from a usize?", "body": "<p>There are two ways:</p>\n\n<ul>\n<li>either you keep all your value in range of <code>isize</code> (the choice of rust <code>std</code> for example)</li>\n<li>or you only work with <code>usize</code> and handle sign yourself (clearly my preferred choice).</li>\n</ul>\n\n<p>But the implementation is up to you; for example, you could have a <code>bool</code> that tells you if the offset is a difference or an addition, or use an enum:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(n: usize, offset: usize, sub: bool) -&gt; Option&lt;usize&gt; {\n    (if sub {\n        usize::checked_sub\n    } else {\n        usize::checked_add\n    })(n, offset)\n}\n\nenum OffSet {\n    Neg(usize),\n    Pos(usize),\n}\n\nfn bar(n: usize, offset: OffSet) -&gt; Option&lt;usize&gt; {\n    match offset {\n        OffSet::Pos(offset) =&gt; n.checked_add(offset),\n        OffSet::Neg(offset) =&gt; n.checked_sub(offset),\n    }\n}\n\nfn main() {\n    let n = 4295032832; // 2^32 + 2^16\n    let offset = 65792; // 2^16 + 2^8\n    let sub = true;\n    assert_eq!(Some(n - offset), foo(n, offset, sub));\n    assert_eq!(Some(n - offset), bar(n, OffSet::Neg(offset)));\n}\n</code></pre>\n\n<p>This is not ugly at all; you just have to use some trait to hide the logic and then you just have to use it.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1575657485, "creation_date": 1575657485, "answer_id": 59218602, "question_id": 59208373, "link": "https://stackoverflow.com/questions/59208373/how-to-subtract-an-isize-from-a-usize/59218602#59218602", "title": "How to subtract an isize from a usize?", "body": "<p><a href=\"https://stackoverflow.com/a/59209602/3650362\">Stargateur's answer</a> is fine advice in general, but let's suppose you can't just rewrite the API to eliminate <code>isize</code>s, or limit the range of your <code>usize</code>s. In such a situation you may cast <code>delta</code> to <code>usize</code> and explicitly use wrapping arithmetic:</p>\n\n\n\n<pre><code>// DON'T COPY THIS LINE unless you read the caveat below first\nbig_indexer = big_indexer.wrapping_add(delta as usize);\n</code></pre>\n\n<p>This works for the example in the question, but it has a \"big\" caveat: if both <code>delta</code> and <code>big_indexer</code> are positive and their sum would overflow, it wraps instead. If the numbers you're using are guaranteed to be in range, that's fine. If you need to add an <code>isize</code> to a <code>usize</code> <em>and</em> detect overflow, you're back to an \"ugly\" <code>if</code> expression.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn add_offset(big_indexer: usize, delta: isize) -&gt; Option&lt;usize&gt; {\n    if delta &lt; 0 {\n        big_indexer.checked_sub(delta.wrapping_abs() as usize)\n    } else {\n        big_indexer.checked_add(delta as usize)\n    }\n}\n</code></pre>\n\n<p>If you use wrapping arithmetic a lot, you may want to use the <a href=\"https://doc.rust-lang.org/std/num/struct.Wrapping.html\" rel=\"nofollow noreferrer\"><code>std::num::Wrapping</code></a> struct to make it more convenient.</p>\n"}], "owner": {"reputation": 170, "user_id": 3081330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ddc4e0f8de5fee9aa3cb4bf31a9b563?s=128&d=identicon&r=PG&f=1", "display_name": "Ripread", "link": "https://stackoverflow.com/users/3081330/ripread"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1371, "favorite_count": 0, "answer_count": 3, "score": 7, "last_activity_date": 1575657485, "creation_date": 1575615732, "last_edit_date": 1575654626, "question_id": 59208373, "link": "https://stackoverflow.com/questions/59208373/how-to-subtract-an-isize-from-a-usize", "title": "How to subtract an isize from a usize?", "body": "<p>I've got a <code>usize</code> that does hit very large values. I also apply a delta to it that I receive in the form of an <code>isize</code>. What's the best way to apply the delta without losing any precision?</p>\n\n<pre><code>fn main() {\n    let mut big_indexer: usize = 4295032832; // 2^32 + 2^16\n    let delta: isize = -65792; // 2^16 + 2^8\n\n    let big_indexer = (big_indexer as isize) + delta // Can't do this b/c overflow\n    let big_indexer = big_indexer + (delta as usize) // Can't do this b/c lose negative number\n\n    // This is ugly\n    if delta &lt; 0 {\n        let big_indexer -= delta.abs() as usize;\n    } else {\n        let big_indexer += delta.abs() as usize;\n    }\n}\n</code></pre>\n"}, {"tags": ["syntax", "rust"], "answers": [{"tags": [], "owner": {"reputation": 69, "user_id": 10991467, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43943df2dde4393a2e67e55ad1650e3?s=128&d=identicon&r=PG&f=1", "display_name": "Rajashree", "link": "https://stackoverflow.com/users/10991467/rajashree"}, "is_accepted": false, "score": 3, "last_activity_date": 1575615916, "creation_date": 1575615916, "answer_id": 59208414, "question_id": 59208311, "link": "https://stackoverflow.com/questions/59208311/syntax-error-near-unexpected-token-in-rust/59208414#59208414", "title": "syntax error near unexpected token `(&#39; in rust", "body": "<p>I was using powershell. But used the wrong command <code>./helloworld.rs</code>\nInstead I tried <code>./helloworld</code> and <code>./helloworld.exe</code>. Both worked.</p>\n"}], "owner": {"reputation": 69, "user_id": 10991467, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a43943df2dde4393a2e67e55ad1650e3?s=128&d=identicon&r=PG&f=1", "display_name": "Rajashree", "link": "https://stackoverflow.com/users/10991467/rajashree"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "closed_date": 1575629525, "answer_count": 1, "score": 2, "last_activity_date": 1575615916, "creation_date": 1575615446, "last_edit_date": 1575615531, "question_id": 59208311, "link": "https://stackoverflow.com/questions/59208311/syntax-error-near-unexpected-token-in-rust", "closed_reason": "Not suitable for this site", "title": "syntax error near unexpected token `(&#39; in rust", "body": "<p>I typed my first code in rust. The helloworld. But I got an error when I tried to run it.</p>\n\n<pre><code>fn main() {\n    println!(\"Hello world\");\n}\n</code></pre>\n\n<p>I tried to run using './hellworld.rs'\nBut it showed,</p>\n\n<pre><code>syntax error near unexpected token `('\n`fn main() {'\n</code></pre>\n"}, {"tags": ["string", "vector", "rust", "concatenation", "string-literals"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575611468, "post_id": 59207527, "comment_id": 104632479, "body": "Why not make the entries in the vector <code>String</code> instead?"}, {"owner": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "reply_to_user": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 0, "creation_date": 1575616824, "post_id": 59207527, "comment_id": 104634174, "body": "Actually I&#39;m trying to make an expression calculator in which I take a mathmatical expression like &quot;235+3&quot; and then split and collect in Vector to calculate but due to split 235 is added as individual element &quot;2&quot;,&quot;3&quot;,&quot;5&quot; with a built-in type &amp;Str and I have to concatenate three above &amp;Str to append again in Vector but all the concatenation of &amp;Str gives me a String type rather than &amp;Str and prevents me to append String type element in between &amp;Str type Vector."}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "edited": false, "score": 0, "creation_date": 1575618355, "post_id": 59208769, "comment_id": 104634755, "body": "The final version is also throwing an error of lifetime scope and the other solution of manully creation of String type Vector which is not possible in my case as I am taking a String input and splitting that string to a vector dynamically."}], "tags": [], "owner": {"reputation": 11723, "user_id": 3356777, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1c7bee1f2c7ba7f81ddb902b83626558?s=128&d=identicon&r=PG&f=1", "display_name": "attdona", "link": "https://stackoverflow.com/users/3356777/attdona"}, "is_accepted": false, "score": 1, "last_activity_date": 1575617511, "creation_date": 1575617511, "answer_id": 59208769, "question_id": 59207527, "link": "https://stackoverflow.com/questions/59207527/how-can-i-concatenate-two-str-type-elements-of-rust-vector-and-add-to-zero-in/59208769#59208769", "title": "How can I concatenate two `&amp;str` type elements of Rust Vector and add to Zero Index", "body": "<p>One way to get to the result is through Compiler Driven Development.</p>\n\n<p>Starting with:</p>\n\n<pre><code>fn main() {\n   let mut item = vec![\"2\",\"3\",\"5\"];\n\n   let first_item = &amp;(item[0].to_owned() + item[1]);\n\n   item[0] = item[0] + item[1];\n\n   println!(\"item {:?}\", item);\n}\n</code></pre>\n\n<p>We have:</p>\n\n<pre><code>error[E0369]: binary operation `+` cannot be applied to type `&amp;str`\n --&gt; src/main.rs:6:22\n  |\n6 |    item[0] = item[0] + item[1];\n  |              ------- ^ ------- &amp;str\n  |              |       |\n  |              |       `+` cannot be used to concatenate two `&amp;str` strings\n  |              &amp;str\n  |\nhelp: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n  |\n6 |    item[0] = item[0].to_owned() + item[1];\n  |              ^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Following the compiler suggestion:</p>\n\n<pre><code>item[0] = item[0].to_owned() + item[1];\n</code></pre>\n\n<p>Now we get:</p>\n\n<pre><code>  |\n6 |    item[0] = item[0].to_owned() + item[1];\n  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |              |\n  |              expected `&amp;str`, found struct `std::string::String`\n  |              help: consider borrowing here: `&amp;(item[0].to_owned() + item[1])`\n</code></pre>\n\n<p>Then applying again the suggestion:</p>\n\n<pre><code>  |\n6 |    item[0] = &amp;(item[0].to_owned() + item[1]);\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^- temporary value is freed at the end of this statement\n  |               |\n  |               creates a temporary which is freed while still in use\n7 | \n8 |    println!(\"item {:?}\", item);\n  |                          ---- borrow later used here\n</code></pre>\n\n<p>Now the problem is related to lifetime scopes, following the compiler suggestion this is the final version:</p>\n\n<pre><code>fn main() {\n   let mut item = vec![\"2\",\"3\",\"5\"];\n\n   let first_item = &amp;(item[0].to_owned() + item[1]);\n\n   item[0] = first_item;\n\n   println!(\"item {:?}\", item);\n}\n</code></pre>\n\n<p>The compiler has driven to a solution, but in every case you have to carefully consider if this is a solution that meets the requirements of your application.\nIn this case you must pay attention to lifetime scopes.</p>\n\n<p>Another, more idiomatic solution, as already suggested, could be to use a Vec of String:</p>\n\n<pre><code>let mut item: Vec&lt;String&gt; = vec![\"2\".to_owned(), \"3\".to_owned(), \"5\".to_owned()];\n\nitem[0] = format!(\"{}{}\", item[0], item[1]);\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 136, "user_id": 8486591, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e9c23a7dca2ab59e57978ee7b550ab?s=128&d=identicon&r=PG", "display_name": "Siborgium", "link": "https://stackoverflow.com/users/8486591/siborgium"}, "is_accepted": false, "score": 0, "last_activity_date": 1588494702, "creation_date": 1588494702, "answer_id": 61571626, "question_id": 59207527, "link": "https://stackoverflow.com/questions/59207527/how-can-i-concatenate-two-str-type-elements-of-rust-vector-and-add-to-zero-in/61571626#61571626", "title": "How can I concatenate two `&amp;str` type elements of Rust Vector and add to Zero Index", "body": "<p>Assuming you want to do it in runtime, it is not possible. <code>&amp;str</code> is non-owning type, one can't concatenate two <code>&amp;str</code>'s into one for the storage they point to may be non-contigious.</p>\n\n<p>You may achieve the goal using <code>String</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut item = vec![String::from(\"2\"), String::from(\"3\"), String::from(\"5\")];\n// Vec is not empty and contains more than 1 element, it is safe to unwrap\nlet (first, rest) = item.split_first_mut().unwrap();\n// Append the second element to the end of the first element \nfirst.push_str(rest[0].as_str()); \nprintln!(\"{}\", &amp;first); // 23\n</code></pre>\n"}], "owner": {"reputation": 15, "user_id": 8200235, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-mDnpLeu2_7g/AAAAAAAAAAI/AAAAAAAAAqM/70HYzWIGSPk/photo.jpg?sz=128", "display_name": "Basit Ali", "link": "https://stackoverflow.com/users/8200235/basit-ali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2390, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1588494702, "creation_date": 1575610999, "last_edit_date": 1575619537, "question_id": 59207527, "link": "https://stackoverflow.com/questions/59207527/how-can-i-concatenate-two-str-type-elements-of-rust-vector-and-add-to-zero-in", "title": "How can I concatenate two `&amp;str` type elements of Rust Vector and add to Zero Index", "body": "<pre><code>let mut item = vec![\"2\", \"3\", \"5\"];\n</code></pre>\n\n<p>I want to concatenate the first and second index of this vector and replace with the value of zero index.</p>\n\n<pre><code>item[0] = item[0] + item[1];\n</code></pre>\n\n<p>But due to the type of vector elements being <code>&amp;str</code> and the result I'm getting after concatenation is <code>String</code>, Rust is not letting me update the value of vector.</p>\n"}, {"tags": ["macos", "assembly", "rust"], "comments": [{"owner": {"reputation": 41564, "user_id": 3857942, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hXLnN.jpg?s=128&g=1", "display_name": "Michael Petch", "link": "https://stackoverflow.com/users/3857942/michael-petch"}, "edited": false, "score": 7, "creation_date": 1575610446, "post_id": 59207383, "comment_id": 104632203, "body": "Can you compile with optimizations on?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 4, "creation_date": 1575616999, "post_id": 59207383, "comment_id": 104634229, "body": "I get <a href=\"https://godbolt.org/z/Y67REJ\" rel=\"nofollow noreferrer\">19 lines</a> including blanks, so one less than your pure assembly version."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1575622965, "post_id": 59207383, "comment_id": 104636520, "body": "why not ? I don&#39;t see the problem."}, {"owner": {"reputation": 2841, "user_id": 1224539, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/dFJsY.png?s=128&g=1", "display_name": "Lincoln Bergeson", "link": "https://stackoverflow.com/users/1224539/lincoln-bergeson"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575653152, "post_id": 59207383, "comment_id": 104651191, "body": "@Stargateur I never said there was a problem \u2014 just trying to figure out why it\u2019s so long."}, {"owner": {"reputation": 2841, "user_id": 1224539, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/dFJsY.png?s=128&g=1", "display_name": "Lincoln Bergeson", "link": "https://stackoverflow.com/users/1224539/lincoln-bergeson"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1575653195, "post_id": 59207383, "comment_id": 104651212, "body": "@Jmb How does that website generate the assembly output?"}, {"owner": {"reputation": 2841, "user_id": 1224539, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/dFJsY.png?s=128&g=1", "display_name": "Lincoln Bergeson", "link": "https://stackoverflow.com/users/1224539/lincoln-bergeson"}, "reply_to_user": {"reputation": 41564, "user_id": 3857942, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hXLnN.jpg?s=128&g=1", "display_name": "Michael Petch", "link": "https://stackoverflow.com/users/3857942/michael-petch"}, "edited": false, "score": 0, "creation_date": 1575653389, "post_id": 59207383, "comment_id": 104651298, "body": "@Michael Petch Is that a flag to rustc?"}, {"owner": {"reputation": 41564, "user_id": 3857942, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/hXLnN.jpg?s=128&g=1", "display_name": "Michael Petch", "link": "https://stackoverflow.com/users/3857942/michael-petch"}, "edited": false, "score": 0, "creation_date": 1575672223, "post_id": 59207383, "comment_id": 104657808, "body": "Yes, you should be able to use the option <code>-O</code> as a command line option to <code>rustc</code>"}, {"owner": {"reputation": 35113, "user_id": 3826372, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/P0peM.png?s=128&g=1", "display_name": "Ross Ridge", "link": "https://stackoverflow.com/users/3826372/ross-ridge"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 1, "creation_date": 1575685083, "post_id": 59207383, "comment_id": 104660103, "body": "@jmb I get 1301 lines for your example if I turn off off all the options for hiding stuff so the complete assembly output is shown: <a href=\"https://godbolt.org/z/_Pu632\" rel=\"nofollow noreferrer\">godbolt.org/z/_Pu632</a>"}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 35113, "user_id": 3826372, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/P0peM.png?s=128&g=1", "display_name": "Ross Ridge", "link": "https://stackoverflow.com/users/3826372/ross-ridge"}, "edited": false, "score": 2, "creation_date": 1575690155, "post_id": 59207383, "comment_id": 104660666, "body": "@RossRidge: much of that is debug metadata because Godbolt passes an option to enable that.  (For its colour highlighting to match asm and source lines.)  But yes, good point."}], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 6, "last_activity_date": 1575684361, "creation_date": 1575684361, "answer_id": 59222392, "question_id": 59207383, "link": "https://stackoverflow.com/questions/59207383/why-does-rust-emit-280-lines-of-assembly-code-to-print-hello-world/59222392#59222392", "title": "Why does Rust emit 280 lines of assembly code to print &quot;Hello, world&quot;?", "body": "<p>When compiling code there are a lot of potential trade-offs that a compiler could make between different aspects, such as:</p>\n\n<ul>\n<li>Code size</li>\n<li>Run time performance</li>\n<li>Memory used</li>\n<li>Ease of debugging</li>\n<li>Compilation time</li>\n</ul>\n\n<p>Most compilers will offer you some way to specify how you want these trade-offs to be considered. rustc is no exception - you can use the <a href=\"https://doc.rust-lang.org/rustc/codegen-options/index.html#opt-level\" rel=\"noreferrer\">opt-level</a> code generation option to specify what you want:</p>\n\n<blockquote>\n  <p>opt-level This flag lets you control the optimization level.</p>\n  \n  <p>0: no optimizations, also turn on cfg(debug_assertions). </p>\n  \n  <p>1: basic optimizations</p>\n  \n  <p>2: some optimizations </p>\n  \n  <p>3: all optimizations </p>\n  \n  <p>s: optimize for binary size </p>\n  \n  <p>z: optimize for binary size, but also turn off loop vectorization.</p>\n</blockquote>\n\n<p>For example you could specify <code>-C opt-level=3</code> for maximum performance optimizations (which would also increase compilation time in most cases).</p>\n\n<p>The rustc option <code>-O</code> is shorthand for <code>-C opt-level=3</code>.</p>\n\n<p>As per the <a href=\"https://godbolt.org/z/Y67REJ\" rel=\"noreferrer\">godbolt link</a> supplied by @jbm, with -O you get 19 lines of assembly.</p>\n\n<p>Also note that most people do not call rustc directly, rather they use cargo as a build control tool. The <a href=\"https://doc.rust-lang.org/cargo/commands/cargo-build.html\" rel=\"noreferrer\"><code>cargo build</code></a> subcommand allows you to specify a build profile which determines things such as the optimization level applied. The <code>--release</code> flag invokes an optimized profile suitable for release builds.</p>\n"}], "owner": {"reputation": 2841, "user_id": 1224539, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/dFJsY.png?s=128&g=1", "display_name": "Lincoln Bergeson", "link": "https://stackoverflow.com/users/1224539/lincoln-bergeson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 0, "accepted_answer_id": 59222392, "answer_count": 1, "score": 0, "last_activity_date": 1575684361, "creation_date": 1575610119, "last_edit_date": 1575619746, "question_id": 59207383, "link": "https://stackoverflow.com/questions/59207383/why-does-rust-emit-280-lines-of-assembly-code-to-print-hello-world", "title": "Why does Rust emit 280 lines of assembly code to print &quot;Hello, world&quot;?", "body": "<p>A simple 3-line Hello, World program in Rust emits a 280 line assembly file in order to print two words. Meanwhile, <a href=\"https://gist.github.com/FiloSottile/7125822\" rel=\"nofollow noreferrer\">a pure assembly version of this program</a> only takes ~15 lines. Why is the Rust version so much longer?</p>\n\n<p>This is on Mac OS.</p>\n\n<p><strong><code>hello.rs</code></strong>:</p>\n\n<pre><code>fn main() {\n    println!(\"hello world\")\n}\n</code></pre>\n\n<p><strong><code>hello.s</code></strong> (generated by <code>rustc --emit=asm hello.rs</code>):</p>\n\n<pre><code>    .section    __TEXT,__text,regular,pure_instructions\n    .macosx_version_min 10, 7\n    .private_extern __ZN3std2rt10lang_start17hb4e01c1e588bf694E\n    .globl  __ZN3std2rt10lang_start17hb4e01c1e588bf694E\n    .p2align    4, 0x90\n__ZN3std2rt10lang_start17hb4e01c1e588bf694E:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $32, %rsp\n    leaq    l___unnamed_1(%rip), %rax\n    movq    %rdi, -8(%rbp)\n    leaq    -8(%rbp), %rcx\n    movq    %rcx, %rdi\n    movq    %rsi, -16(%rbp)\n    movq    %rax, %rsi\n    movq    -16(%rbp), %rax\n    movq    %rdx, -24(%rbp)\n    movq    %rax, %rdx\n    movq    -24(%rbp), %rcx\n    callq   __ZN3std2rt19lang_start_internal17hcf96e32a124891dcE\n    movq    %rax, -32(%rbp)\n    movq    -32(%rbp), %rax\n    addq    $32, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h275cd8632ff3ab7dE:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $16, %rsp\n    callq   *(%rdi)\n    callq   __ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hf5e270b394827df3E\n    movl    %eax, -4(%rbp)\n    movl    -4(%rbp), %eax\n    addq    $16, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN3std3sys4unix7process14process_common8ExitCode6as_i3217h7e671b2505e0c229E:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    movzbl  (%rdi), %eax\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN4core3fmt9Arguments6new_v117h39ef65f250941772E:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $16, %rsp\n    movq    %rdi, %rax\n    movq    $0, -16(%rbp)\n    movq    %rsi, (%rdi)\n    movq    %rdx, 8(%rdi)\n    movq    -16(%rbp), %rdx\n    movq    -8(%rbp), %rsi\n    movq    %rdx, 16(%rdi)\n    movq    %rsi, 24(%rdi)\n    movq    %rcx, 32(%rdi)\n    movq    %r8, 40(%rdi)\n    addq    $16, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h61f8ee8d3fead017E:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $16, %rsp\n    movq    (%rdi), %rdi\n    callq   __ZN4core3ops8function6FnOnce9call_once17h47f538be1b10688dE\n    movl    %eax, -12(%rbp)\n    movl    -12(%rbp), %eax\n    addq    $16, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN4core3ops8function6FnOnce9call_once17h47f538be1b10688dE:\nLfunc_begin0:\n    .cfi_startproc\n    .cfi_personality 155, _rust_eh_personality\n    .cfi_lsda 16, Lexception0\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $48, %rsp\n    movq    %rdi, -32(%rbp)\nLtmp0:\n    leaq    -32(%rbp), %rdi\n    callq   __ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h275cd8632ff3ab7dE\nLtmp1:\n    movl    %eax, -36(%rbp)\n    jmp LBB5_1\nLBB5_1:\n    jmp LBB5_2\nLBB5_2:\n    movl    -36(%rbp), %eax\n    addq    $48, %rsp\n    popq    %rbp\n    retq\nLBB5_3:\n    jmp LBB5_4\nLBB5_4:\n    movq    -16(%rbp), %rdi\n    callq   __Unwind_Resume\n    ud2\nLBB5_5:\nLtmp2:\n    movq    %rax, -16(%rbp)\n    movl    %edx, -8(%rbp)\n    jmp LBB5_3\nLfunc_end0:\n    .cfi_endproc\n    .section    __TEXT,__gcc_except_tab\n    .p2align    2\nGCC_except_table5:\nLexception0:\n    .byte   255\n    .byte   255\n    .byte   1\n    .uleb128 Lcst_end0-Lcst_begin0\nLcst_begin0:\n    .uleb128 Ltmp0-Lfunc_begin0\n    .uleb128 Ltmp1-Ltmp0\n    .uleb128 Ltmp2-Lfunc_begin0\n    .byte   0\n    .uleb128 Ltmp1-Lfunc_begin0\n    .uleb128 Lfunc_end0-Ltmp1\n    .byte   0\n    .byte   0\nLcst_end0:\n    .p2align    2\n\n    .section    __TEXT,__text,regular,pure_instructions\n    .p2align    4, 0x90\n__ZN4core3ptr18real_drop_in_place17h0ab16307507408dbE:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN54_$LT$$LP$$RP$$u20$as$u20$std..process..Termination$GT$6report17hf5e270b394827df3E:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $16, %rsp\n    xorl    %edi, %edi\n    callq   __ZN68_$LT$std..process..ExitCode$u20$as$u20$std..process..Termination$GT$6report17h03f2ed18f1614f97E\n    movl    %eax, -4(%rbp)\n    movl    -4(%rbp), %eax\n    addq    $16, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN68_$LT$std..process..ExitCode$u20$as$u20$std..process..Termination$GT$6report17h03f2ed18f1614f97E:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $16, %rsp\n    movb    %dil, -1(%rbp)\n    leaq    -1(%rbp), %rdi\n    callq   __ZN3std3sys4unix7process14process_common8ExitCode6as_i3217h7e671b2505e0c229E\n    movl    %eax, -8(%rbp)\n    movl    -8(%rbp), %eax\n    addq    $16, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .p2align    4, 0x90\n__ZN5hello4main17hef70db39c48df377E:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $48, %rsp\n    leaq    l___unnamed_2(%rip), %rax\n    xorl    %ecx, %ecx\n    movl    %ecx, %r8d\n    leaq    -48(%rbp), %rdi\n    movq    %rax, %rsi\n    movl    $1, %edx\n    movl    $8, %ecx\n    callq   __ZN4core3fmt9Arguments6new_v117h39ef65f250941772E\n    leaq    -48(%rbp), %rdi\n    callq   __ZN3std2io5stdio6_print17hd8f597a6d310dad5E\n    addq    $48, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .globl  _main\n    .p2align    4, 0x90\n_main:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset %rbp, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register %rbp\n    subq    $16, %rsp\n    movslq  %edi, %rax\n    leaq    __ZN5hello4main17hef70db39c48df377E(%rip), %rdi\n    movq    %rsi, -8(%rbp)\n    movq    %rax, %rsi\n    movq    -8(%rbp), %rdx\n    callq   __ZN3std2rt10lang_start17hb4e01c1e588bf694E\n    addq    $16, %rsp\n    popq    %rbp\n    retq\n    .cfi_endproc\n\n    .section    __DATA,__const\n    .p2align    3\nl___unnamed_1:\n    .quad   __ZN4core3ptr18real_drop_in_place17h0ab16307507408dbE\n    .quad   8\n    .quad   8\n    .quad   __ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h275cd8632ff3ab7dE\n    .quad   __ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h275cd8632ff3ab7dE\n    .quad   __ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h61f8ee8d3fead017E\n\n    .section    __TEXT,__const\nl___unnamed_3:\n    .ascii  \"hello world\\n\"\n\n    .section    __DATA,__const\n    .p2align    3\nl___unnamed_2:\n    .quad   l___unnamed_3\n    .asciz  \"\\f\\000\\000\\000\\000\\000\\000\"\n\n\n.subsections_via_symbols\n</code></pre>\n"}, {"tags": ["optimization", "rust", "natural-logarithm"], "comments": [{"owner": {"reputation": 42504, "user_id": 1161878, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/0157ddd785dc01e95342e3661d34b42a?s=128&d=identicon&r=PG", "display_name": "Gene", "link": "https://stackoverflow.com/users/1161878/gene"}, "edited": false, "score": 3, "creation_date": 1575609525, "post_id": 59206889, "comment_id": 104631959, "body": "Production transcendental impls use fancy tricks for speed: Polynomial approximations, specialized instructions (often coded in assembly tuned to a specific processor even among a family like x86, etc.).  Careful analysis and corrective math are needed to get the lowest order bits right for all possible inputs. So a quick, straightforward implementation is probably not going to compete very well. In case useful, there&#39;s a C-only impl here: <a href=\"http://www.netlib.org/fdlibm/e_log.c\" rel=\"nofollow noreferrer\">netlib.org/fdlibm/e_log.c</a> . You can download the glibc source to see processor-specific versions."}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 42504, "user_id": 1161878, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/0157ddd785dc01e95342e3661d34b42a?s=128&d=identicon&r=PG", "display_name": "Gene", "link": "https://stackoverflow.com/users/1161878/gene"}, "edited": false, "score": 2, "creation_date": 1575639224, "post_id": 59206889, "comment_id": 104644389, "body": "@Gene - Over the last two days, that has began to dawn on me! Ah, the Hubris of thinking I can out-log the system lumberjacks!"}], "answers": [{"tags": [], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "is_accepted": true, "score": 0, "last_activity_date": 1575645755, "creation_date": 1575645755, "answer_id": 59215897, "question_id": 59206889, "link": "https://stackoverflow.com/questions/59206889/how-can-i-speed-up-my-approximate-natural-log-function/59215897#59215897", "title": "How can I speed up my approximate natural log function?", "body": "<p>A single optimization cut the time in half!</p>\n\n<p>I rewrote my msb (most significant bit) function to use the library function <code>u64::leading_zeroes</code> that internally uses intrinsics:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    fn msb(self) -&gt; usize {\n        // THIRD ATTEMPT\n        let z = self.leading_zeros();\n        if z == 64 { 0 }\n        else { 63 - z as usize }\n    }\n</code></pre>\n\n<p>Now my log approximation only takes 6% longer than the intrinsic ln function. I am unlikely to do much better. </p>\n\n<p>Lesson learned: Use the builtin log!</p>\n"}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "accepted_answer_id": 59215897, "answer_count": 1, "score": 1, "last_activity_date": 1575645755, "creation_date": 1575606483, "last_edit_date": 1575608411, "question_id": 59206889, "link": "https://stackoverflow.com/questions/59206889/how-can-i-speed-up-my-approximate-natural-log-function", "title": "How can I speed up my approximate natural log function?", "body": "<p>I have implemented an approximate natural log function based on a <strong>Pad\u00e9 Approximation</strong> of a truncated Taylor Series. The accuracy is acceptable (\u00b10.000025) but despite several rounds of optimizations, its exec time is still about 2.5x that of the standard library <code>ln</code> function! If it isn't faster and it isn't as accurate, it is worthless! Nevertheless, I am using this as a way to learn how to optimize my Rust code. (My timings come from using the <code>criterion</code> crate. I used blackbox, summed the values in the loop and created a string from the result to defeat the optimizer.) </p>\n\n<p>On Rust Playground, my code is:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=94246553cd7cc0c7a540dcbeff3667b9\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=94246553cd7cc0c7a540dcbeff3667b9</a></p>\n\n<h2>Algorithm</h2>\n\n<p>An overview of my algorithm, which works on a ratio of unsigned integers:</p>\n\n<ol>\n<li>Range reduction to the interval [1, 2] by dividing by the largest power of two not exceeding the value:\n\n<ul>\n<li>Change representation of numerator   \u2192 <code>2\u207f\u00b7N where 1 \u2264 N \u2264 2</code></li>\n<li>Change representation of denominator \u2192 <code>2\u1d48\u00b7D where 1 \u2264 D \u2264 2</code></li>\n</ul></li>\n<li>This makes the result <code>log(numerator/denominator) = log(2\u207f\u00b7N / 2\u1d48\u00b7D) = (n-d)\u00b7log(2) + log(N) - log(D)</code></li>\n<li>To perform log(N), Taylor series does not converge in the neighborhood of zero, but it does near one...</li>\n<li>... since N is near one, substitute x = N - 1 so that we now need to evaluate log(1 + x)</li>\n<li>Perform a substitution of <code>y = x/(2+x)</code></li>\n<li>Consider the related function <code>f(y) = Log((1+y)/(1-y))</code>\n\n<ul>\n<li><code>= Log((1 + x/(2+x)) / (1 - x/(2+x)))</code></li>\n<li><code>= Log( (2+2x) / 2)</code></li>\n<li><code>= Log(1 + x)</code></li>\n</ul></li>\n<li>f(y) has a Taylor Expansion which converges must faster than the expansion for Log(1+x) ... \n\n<ul>\n<li>For Log(1+x) \u2192 <code>x - x\u00b2/2 + x\u00b3/3 - y\u2074/4 + ...</code></li>\n<li>For Log((1+y)/(1-y)) \u2192 <code>y + y\u00b3/3 + y\u2075/5 + ...</code></li>\n</ul></li>\n<li>Use the Pad\u00e9 Approximation for the truncated series <code>y + y\u00b3/3 + y\u2075/5 ...</code></li>\n<li>... Which is <code>2y\u00b7(15 - 4y\u00b2)/(15 - 9y\u00b2)</code></li>\n<li>Repeat for the denominator and combine the results.</li>\n</ol>\n\n<h2>Pad\u00e9 Approximation</h2>\n\n<p>Here is the Pad\u00e9 Approximation part of the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\n/// Approximate the natural logarithm of one plus a number in the range (0..1). \n/// \n/// Use a Pad\u00e9 Approximation for the truncated Taylor series for Log((1+y)/(1-y)).\n/// \n///   - x - must be a value between zero and one, inclusive.\n#[inline]\nfn log_1_plus_x(x : f64) -&gt; f64 {\n    // This is private and its caller already checks for negatives, so no need to check again here. \n    // Also, though ln(1 + 0) == 0 is an easy case, it is not so much more likely to be the argument\n    // than other values, so no need for a special test.\n    let y = x / (2.0 + x);\n    let y_squared = y * y;\n    // Original Formula is this: 2y\u00b7(15 - 4y\u00b2)/(15 - 9y\u00b2)\n    // 2.0 * y * (15.0 - 4.0 * y_squared) / (15.0 - 9.0 * y_squared)\n\n    // Reduce multiplications: (8/9)y\u00b7(3.75 - y\u00b2)/((5/3) - y\u00b2)\n    0.8888888888888889 * y * (3.75 - y_squared) / (1.6666666666666667 - y_squared)\n}\n</code></pre>\n\n<p>Clearly, not much more to speed up there! </p>\n\n<h2>Most Significant Bit</h2>\n\n<p>The change that has had the most impact so far was optmizing my calculation that gets the position of the <strong>most significant bit</strong>. I need that for the range reduction. </p>\n\n<p>Here is my <code>msb</code> function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\n/// Provide `msb` method for numeric types to obtain the zero-based\n/// position of the most significant bit set.\n/// \n/// Algorithms used based on this article: \n/// https://prismoskills.appspot.com/lessons/Bitwise_Operators/Find_position_of_MSB.jsp\npub trait MostSignificantBit {\n    /// Get the zero-based position of the most significant bit of an integer type.\n    /// If the number is zero, return zero. \n    /// \n    /// ## Examples: \n    /// \n    /// ```\n    ///    use clusterphobia::clustering::msb::MostSignificantBit;\n    /// \n    ///    assert!(0_u64.msb() == 0);\n    ///    assert!(1_u64.msb() == 0);\n    ///    assert!(2_u64.msb() == 1);\n    ///    assert!(3_u64.msb() == 1);\n    ///    assert!(4_u64.msb() == 2);\n    ///    assert!(255_u64.msb() == 7);\n    ///    assert!(1023_u64.msb() == 9);\n    /// ```\n    fn msb(self) -&gt; usize;\n}\n\n#[inline]\n/// Return whether floor(log2(x))!=floor(log2(y))\n/// with zero for false and 1 for true, because this came from C!\nfn ld_neq(x : u64, y : u64) -&gt; u64 {\n    let neq = (x^y) &gt; (x&amp;y);\n    if neq { 1 } else { 0 }\n}\n\nimpl MostSignificantBit for u64 {\n    #[inline]\n    fn msb(self) -&gt; usize {\n        /*\n        // SLOWER CODE THAT I REPLACED:\n        // Bisection guarantees performance of O(Log B) where B is number of bits in integer.\n        let mut high = 63_usize;\n        let mut low = 0_usize;\n        while (high - low) &gt; 1\n        {\n            let mid = (high+low)/2;\n            let mask_high = (1 &lt;&lt; high) - (1 &lt;&lt; mid);\n            if (mask_high &amp; self) != 0 { low = mid; }\n            else { high = mid; }\n        }\n        low\n        */\n\n        // This algorithm found on pg 16 of \"Matters Computational\" at  https://www.jjj.de/fxt/fxtbook.pdf\n        // It avoids most if-branches and has no looping.\n        // Using this instead of Bisection and looping shaved off 1/3 of the time.\n        const MU0 : u64 = 0x5555555555555555; // MU0 == ((-1UL)/3UL) == ...01010101_2\n        const MU1 : u64 = 0x3333333333333333; // MU1 == ((-1UL)/5UL) == ...00110011_2\n        const MU2 : u64 = 0x0f0f0f0f0f0f0f0f; // MU2 == ((-1UL)/17UL) == ...00001111_2\n        const MU3 : u64 = 0x00ff00ff00ff00ff; // MU3 == ((-1UL)/257UL) == (8 ones)\n        const MU4 : u64 = 0x0000ffff0000ffff; // MU4 == ((-1UL)/65537UL) == (16 ones)\n        const MU5 : u64 = 0x00000000ffffffff; // MU5 == ((-1UL)/4294967297UL) == (32 ones)\n        let r : u64 = ld_neq(self, self &amp; MU0)\n        + (ld_neq(self, self &amp; MU1) &lt;&lt; 1)\n        + (ld_neq(self, self &amp; MU2) &lt;&lt; 2)\n        + (ld_neq(self, self &amp; MU3) &lt;&lt; 3)\n        + (ld_neq(self, self &amp; MU4) &lt;&lt; 4)\n        + (ld_neq(self, self &amp; MU5) &lt;&lt; 5);\n        r as usize\n    }\n}\n</code></pre>\n\n<h2>Rust u64::next_power_of_two, unsafe code and intrinsics</h2>\n\n<p>Now I know that Rust has a fast method for finding the lowest power of two greater than or equal to a number. I need this, but I also need the bit position, because that is the equivalent of the log base 2 of my numbers. (For example: next_power_of_two(255) yields 256, but I want 8, because it has the 8th bit set.) Looking at the source code for <code>next_power_of_two</code>, I see this line inside a private helper method called <code>fn one_less_than_next_power_of_two</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let z = unsafe { intrinsics::ctlz_nonzero(p) };\n</code></pre>\n\n<p>So is there an <strong>intrinsic</strong> that I can use to get the bit position the same way? Is it used in a public method that I have access to? Or is there a way to write unsafe code to call some intrinsic I don't know about (which is most of them)?</p>\n\n<p>If there is such a methd or intrinsic I can call, I suspect that will greatly speed up my program, but maybe there are other things that will also help.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>Head smack! I can use <code>63 - x.leading_zeros()</code> to find the position of the most significant bit! I just didn't think of coming from the other end. I will try this and see if it speeds things up...</p>\n"}, {"tags": ["rust", "factorial"], "answers": [{"tags": [], "owner": {"reputation": 208003, "user_id": 841108, "user_type": "registered", "accept_rate": 61, "profile_image": "https://i.stack.imgur.com/Fm52y.png?s=128&g=1", "display_name": "Basile Starynkevitch", "link": "https://stackoverflow.com/users/841108/basile-starynkevitch"}, "is_accepted": false, "score": 6, "last_activity_date": 1575627459, "last_edit_date": 1575627459, "creation_date": 1575604799, "answer_id": 59206668, "question_id": 59206653, "link": "https://stackoverflow.com/questions/59206653/how-to-calculate-21-factorial-in-rust/59206668#59206668", "title": "How to calculate 21 factorial in Rust?", "body": "<blockquote>\n  <p>I need to calculate 21 factorial in my project.</p>\n</blockquote>\n\n<p>21! doesn't fit in a 64 bit int. You need some <a href=\"https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic\" rel=\"nofollow noreferrer\">arbitrary precision arithmetic</a> (or bigint) library or to implement yours, or use 128 bits ints or some floating point.</p>\n\n<p>According to <a href=\"https://en.wikipedia.org/wiki/List_of_arbitrary-precision_arithmetic_software\" rel=\"nofollow noreferrer\">this list</a>, you could consider using <a href=\"https://github.com/Aatch/ramp\" rel=\"nofollow noreferrer\">ramp</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": true, "score": 9, "last_activity_date": 1575604923, "creation_date": 1575604923, "answer_id": 59206685, "question_id": 59206653, "link": "https://stackoverflow.com/questions/59206653/how-to-calculate-21-factorial-in-rust/59206685#59206685", "title": "How to calculate 21 factorial in Rust?", "body": "<p>A <code>u64</code> can\u2019t hold 21! (it\u2019s between 2^65 and 2^66), but a <code>u128</code> can.</p>\n"}], "owner": {"reputation": 143, "user_id": 12088139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DCN4gko7Gls/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfiW69WwiPFykErkASOknDPRcUl_Q/photo.jpg?sz=128", "display_name": "asyraaf azhar", "link": "https://stackoverflow.com/users/12088139/asyraaf-azhar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1339, "favorite_count": 0, "accepted_answer_id": 59206685, "answer_count": 2, "score": 1, "last_activity_date": 1576342089, "creation_date": 1575604676, "last_edit_date": 1576342089, "question_id": 59206653, "link": "https://stackoverflow.com/questions/59206653/how-to-calculate-21-factorial-in-rust", "title": "How to calculate 21 factorial in Rust?", "body": "<p>I need to calculate 21 factorial in my project.</p>\n\n<pre><code>fn factorial(num: u64) -&gt; u64 {\n    match num {\n        0 =&gt; 1,\n        1 =&gt; 1,\n        _ =&gt; factorial(num - 1) * num,\n    }\n}\n\nfn main() {\n    let x = factorial(21);\n    println!(\"The value of 21 factorial is {} \", x);\n}\n</code></pre>\n\n<p>When running this code, I get an error:</p>\n\n<pre><code>thread 'main' panicked at 'attempt to multiply with overflow', src\\main.rs:5:18\n</code></pre>\n"}, {"tags": ["rust", "reference", "lifetime"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575600708, "post_id": 59206070, "comment_id": 104630024, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\">What are non-lexical lifetimes?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 3, "last_activity_date": 1575601558, "creation_date": 1575601558, "answer_id": 59206269, "question_id": 59206070, "link": "https://stackoverflow.com/questions/59206070/understanding-of-reference-life-time-in-rust/59206269#59206269", "title": "Understanding of reference life time in Rust", "body": "<p>The most likely occurrence is that the book you're reading is teaching lifetimes disregarding non-lexical-lifetimes. This would make sense; lexical lifetimes are the most straightforward to understand.</p>\n\n<p>Running the following will revert to prior to when non-lexical-lifetimes came around:</p>\n\n<pre><code>rustup default 1.30\n</code></pre>\n\n<p>This will revert rustc to prior to version <code>1.31</code>, which according to <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/ownership-and-lifetimes/non-lexical-lifetimes.html\" rel=\"nofollow noreferrer\">this</a> document is the minimum version for nll.</p>\n\n<p>Running this results in the exact same error as shown:</p>\n\n<pre><code>&gt; cargo run\n   Compiling forum_examples v0.1.0 (C:\\Users\\user\\Desktop\\forum_examples)\nerror[E0502]: cannot borrow `a` as immutable because it is also borrowed as mutable\n --&gt; src\\main.rs:6:20\n  |\n3 |     let a_ref = &amp;mut a;\n  |                      - mutable borrow occurs here\n...\n6 |     println!(\"{}\", a);\n  |                    ^ immutable borrow occurs here\n7 | }\n  | - mutable borrow ends here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\nerror: Could not compile `forum_examples`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>You may choose to use this version of the compiler (Or version 1.35 with 2015 edition) to follow the book to the letter or you may use this rule of thumb to determine why it doesn't compile according to the book but does with the compiler present today: <strong>The compiler will drop a reference if it should see that it is no longer needed</strong>. In your example, the compiler sees that <code>a_ref</code> is no longer needed afterwards, so it's inserting an implicit drop right after for that. Note that this only works for references, and not for guards, or more complex types involving lifetimes (Especially not anything that could invoke <code>drop</code> code). </p>\n"}], "owner": {"reputation": 21084, "user_id": 170931, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/WA698.png?s=128&g=1", "display_name": "Just a learner", "link": "https://stackoverflow.com/users/170931/just-a-learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 45, "favorite_count": 0, "accepted_answer_id": 59206269, "answer_count": 1, "score": 1, "last_activity_date": 1575601558, "creation_date": 1575599912, "question_id": 59206070, "link": "https://stackoverflow.com/questions/59206070/understanding-of-reference-life-time-in-rust", "title": "Understanding of reference life time in Rust", "body": "<p>I'm a new Rust user and I'm reading a book <em>The Complete Rust Programming Reference Guide</em>. In the book there is an example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut a = String::from(\"testing\");\n    let a_ref = &amp;mut a;\n    a_ref.push('!');\n\n    println!(\"{}\", a);\n}\n</code></pre>\n\n<p>The book states the code will generate an error.</p>\n\n<p><a href=\"https://i.stack.imgur.com/QFGbB.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/QFGbB.png\" alt=\"enter image description here\"></a></p>\n\n<p>However, on my local machine, I can run it without any issue. Is this because I'm using a newer Rust compiler [<code>rustc 1.41.0-nightly (412f43ac5 2019-11-24)</code>] and the code doesn't work on older ones? I've read some chapters of the official Rust book. As I understand, the lifetime of the reference <code>a_ref</code> ends at its last usage, which is <code>a_ref.push('!');</code>. After that <code>a_ref</code> is gone and <code>a</code> should be able to be used without issue. Is my understanding correct?</p>\n"}, {"tags": ["multithreading", "concurrency", "rust", "rust-cargo", "rayon"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1575594213, "post_id": 59205184, "comment_id": 104628734, "body": "well you could do what it&#39;s written... <a href=\"https://docs.rs/rayon/1.2.1/rayon/struct.ThreadPoolBuilder.html\" rel=\"nofollow noreferrer\">docs.rs/rayon/1.2.1/rayon/struct.ThreadPoolBuilder.html</a>"}, {"owner": {"reputation": 143, "user_id": 12088139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DCN4gko7Gls/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfiW69WwiPFykErkASOknDPRcUl_Q/photo.jpg?sz=128", "display_name": "asyraaf azhar", "link": "https://stackoverflow.com/users/12088139/asyraaf-azhar"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1575595051, "post_id": 59205184, "comment_id": 104628906, "body": "ohh.. got it. just need to include this <code>rayon::ThreadPoolBuilder::new().num_threads(22).build_global&zwnj;&#8203;().unwrap();</code> . Thank you"}], "answers": [{"tags": [], "owner": {"reputation": 143, "user_id": 12088139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DCN4gko7Gls/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfiW69WwiPFykErkASOknDPRcUl_Q/photo.jpg?sz=128", "display_name": "asyraaf azhar", "link": "https://stackoverflow.com/users/12088139/asyraaf-azhar"}, "is_accepted": false, "score": 5, "last_activity_date": 1575595183, "creation_date": 1575595183, "answer_id": 59205561, "question_id": 59205184, "link": "https://stackoverflow.com/questions/59205184/how-can-i-change-the-number-of-threads-rayon-uses/59205561#59205561", "title": "How can I change the number of threads Rayon uses?", "body": "<p>Just include in fn main(). The num_threads accepts the number of threads.</p>\n\n<p><code>rayon::ThreadPoolBuilder::new().num_threads(4).build_global().unwrap();</code></p>\n"}], "owner": {"reputation": 143, "user_id": 12088139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DCN4gko7Gls/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfiW69WwiPFykErkASOknDPRcUl_Q/photo.jpg?sz=128", "display_name": "asyraaf azhar", "link": "https://stackoverflow.com/users/12088139/asyraaf-azhar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1296, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1590517054, "creation_date": 1575592058, "last_edit_date": 1592644375, "question_id": 59205184, "link": "https://stackoverflow.com/questions/59205184/how-can-i-change-the-number-of-threads-rayon-uses", "title": "How can I change the number of threads Rayon uses?", "body": "<p>I'm using the Rayon library:</p>\n<pre><code>extern crate rayon;\n\nconst N: usize = 1_000_000_000;\nconst W: f64 = 1f64/(N as f64);\n\nfn f(x: f64) -&gt; f64 {\n    4.0/(1.0+x*x)\n}\n\nfn main() { \n    use rayon::prelude::*;\n    let sum : f64 = (0..N)\n        .into_par_iter()\n        .map(|i| f(W*((i as f64)+0.5)))\n        .sum::&lt;f64&gt;();\n    println!(&quot;pi = {}&quot;, W*sum);\n}\n</code></pre>\n<p>I want to run this code using different number of threads: 1, 2, 3 and 4.</p>\n<p>I have read the documentation about <a href=\"https://github.com/rayon-rs/rayon/blob/master/FAQ.md#how-many-threads-will-rayon-spawn\" rel=\"nofollow noreferrer\">How many threads will Rayon spawn?</a> which says:</p>\n<blockquote>\n<p>By default, Rayon uses the same number of threads as the number of CPUs available. Note that on systems with hyperthreading enabled this equals the number of logical cores and not the physical ones.</p>\n<p>If you want to alter the number of threads spawned, you can set the environmental variable <code>RAYON_NUM_THREADS</code> to the desired number of threads or use the <a href=\"https://docs.rs/rayon/*/rayon/struct.ThreadPoolBuilder.html#method.build_global\" rel=\"nofollow noreferrer\"><code>ThreadPoolBuilder::build_global</code> function</a> method.</p>\n</blockquote>\n<p>However, the steps are not clear for me. How can I do this on my Windows 10 PC?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1575624688, "post_id": 59204868, "comment_id": 104637389, "body": "Could you come up with an example that we could run (i.e. observe the compilation failure) in <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">play.rust-lang.org</a>?"}], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 9881851, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55f42e59b4476ebaf015fa3dcb9afaea?s=128&d=identicon&r=PG&f=1", "display_name": "Elrendio", "link": "https://stackoverflow.com/users/9881851/elrendio"}, "is_accepted": false, "score": 0, "last_activity_date": 1575735989, "creation_date": 1575735989, "answer_id": 59228012, "question_id": 59204868, "link": "https://stackoverflow.com/questions/59204868/lifetime-on-impl-for-a-string-that-comes-from-somewhere-else/59228012#59228012", "title": "Lifetime on impl for a string that comes from somewhere else", "body": "<p>Lifetime is Rust describe how long will the data live before being drop.</p>\n\n<p>In your case, the item of your Iterator is a reference to the data hold by Data. Therefore its lifetime correspond to the lifetime of Data. If Data is of lifetime static (it will live during the whole life of the process) then the right way to do your impl is to output Item with lifetime `static.</p>\n\n<p>The idea with Associated Types is that the trait should be implemented only once. You can't implement twice Iterator, once with String as Item and once with &amp;'static str. (See <a href=\"https://doc.rust-lang.org/1.29.0/book/2018-edition/ch19-03-advanced-traits.html?highlight=Associated#specifying-placeholder-types-in-trait-definitions-with-associated-types\" rel=\"nofollow noreferrer\">the book</a>). Therefore, in your case you should implement Iterator only once with &amp;'static str and not try to implement it for every lifetime 'l with &amp;'l str.</p>\n"}], "owner": {"reputation": 649, "user_id": 2059431, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/2f6e94b9f91da7bcbb24b3b2ec94943b?s=128&d=identicon&r=PG", "display_name": "koehr", "link": "https://stackoverflow.com/users/2059431/koehr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1575735989, "creation_date": 1575589710, "last_edit_date": 1575630448, "question_id": 59204868, "link": "https://stackoverflow.com/questions/59204868/lifetime-on-impl-for-a-string-that-comes-from-somewhere-else", "title": "Lifetime on impl for a string that comes from somewhere else", "body": "<p>This whole lifetime thing in Rust is still dark magic for me. I have a general idea of how it works but whenever I have to define lifetimes myself I have a hard time figuring out what to do. Here's what I want to do:</p>\n\n<p>I have a <code>[&amp;str, 100]</code> that comes from a submodule and I want to write a very simple randomized iterator that uses data from this submodule. Here's roughly what I do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use rand::distributions::{Distribution, Uniform};\nuse super::data:Data;\n\nstruct RandomData {\n  range: Uniform&lt;usize&gt;,\n  rng: rand::rngs::ThreadRng,\n}\n\nimpl RandomData {\n  fn new () -&gt; RandomData {\n    RandomData {\n      range:\u00b7Uniform::new(0, Data.len()),\n      rng: rand::thread_rng(),\n    }\n  }\n}\n\nimpl Iterator for RandomData {\n  type Item = &amp;str;\n\n  fn next(next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n    let index = self.range.sample(&amp;mut self.rng);\n    Some(Data[index])\n  }\n}\n</code></pre>\n\n<p>Now, obviously the compiler is asking for lifetimes here because of the <code>&amp;str</code> and the easiest way would be to simply use a static lifetime <code>&amp;'static str</code>. But I wondered how to do this right, so I tried the real deal.</p>\n\n<p>I started with the following changes to the iterator implementation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; Iterator for RandomData {\n  type Item = &amp;'a str;\n  fn next(next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; { .. }\n}\n</code></pre>\n\n<p>Now the compiler says: <code>error[E0207]: the lifetime parameter 'a is not constrained by the impl trait, self type, or predicates</code> and suggest to read more about this error E0207, which I did. I think the gist is, that the lifetime parameter needs to appear either in the Trait or implementing type. Both is not the case because I don't need it there and in this case the documentation suggests to use <code>PhantomData</code>. But it also only talks about types and I don't really get it to work.</p>\n\n<p>If I try to do:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct RandomData&lt;'a&gt; {\n  range: Uniform&lt;usize&gt;,\n  rng: rand::rngs::ThreadRng,\n  phantom: PhantomData&lt;&amp;'a str&gt;\n}\n</code></pre>\n\n<p>I get a whole new bunch of messages about anonymous lifetimes, so I added them, but then get stuck with:</p>\n\n<pre><code>error[E0106]: missing lifetime specifier  --&gt; src/epcs/random_epc.rs:12:22\n   |\n12 |     pub fn new () -&gt; RandomEPC {\n   |                      ^^^^^^^^^ help: consider giving it a 'static lifetime: `RandomEPC + 'static`\n   |\n   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n</code></pre>\n\n<p>and I'm not sure where to go from here.</p>\n\n<p><strong>Edit</strong></p>\n\n<p>Thanks <a href=\"https://stackoverflow.com/users/255688/phimuemue\">phimuemue</a> for the suggestion. I created a simplified example here:\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bddde9310da5cf838dafee83e05cd78a\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bddde9310da5cf838dafee83e05cd78a</a></p>\n"}, {"tags": ["rust", "pyo3"], "answers": [{"comments": [{"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1575622999, "post_id": 59208323, "comment_id": 104636532, "body": "Perfect, thank you so much! Am I right in thinking that if MyStruct does not contain any embedded references to other Python objects, then I don&#39;t need to worry about garbage collection here? i.e. the Python GC will take care of clearing this up whenever there are no more references to it on the Python side? Thanks again!"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1576077393, "post_id": 59208323, "comment_id": 104782663, "body": "@Ginty the answer has been updated. And yes, gc works."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1576094070, "post_id": 59208323, "comment_id": 104790905, "body": "Thanks @edwardw, I see it working without the gil stuff as you describe."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1576880654, "post_id": 59208323, "comment_id": 105049690, "body": "I&#39;ve just noticed that there is an advantage to returning PyObject if you are implementing a function that can return different types, in that case you can cast them all to PyObject via to_object(py)"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1576917255, "post_id": 59208323, "comment_id": 105054324, "body": "@Ginty indeed, that is a jolly good point. Quite impress that PYO3 manages to bridge the gap of two type systems this way, one strong type and the other dynamic type."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1576077108, "last_edit_date": 1592644375, "creation_date": 1575615486, "answer_id": 59208323, "question_id": 59204849, "link": "https://stackoverflow.com/questions/59204849/how-to-implement-a-rust-function-that-returns-a-python-object-using-py03/59208323#59208323", "title": "How to implement a Rust function that returns a Python object using PY03", "body": "<p>Given the proper scaffolding is in place, such as <code>pymodule</code> and <code>pyclass</code> definitions, there are multiple ways to accomplish this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[pyfunction]\nfn my_function() -&gt; PyResult&lt;PyObject&gt; {\n    let gil = Python::acquire_gil();\n    let py = gil.python();\n    let pyref = PyRef::new(py, MyStruct {})?;\n\n    Ok(pyref.to_object(py))\n}\n</code></pre>\n<p>Or:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[pyfunction]\nfn my_function() -&gt; PyResult&lt;Py&lt;MyStruct&gt;&gt; {\n    let gil = Python::acquire_gil();\n    let py = gil.python();\n\n    Py::new(py, MyStruct {})\n}\n</code></pre>\n<p>I also take the liberty of wrapping returned object in <code>PyResult</code> in order to propagate the possible errors to python land. You can unwrap in Rust and return the naked object instead, but I'd argue this way of handling error is recommended.</p>\n<hr />\n<p>Edit: the previous answer was not complete and a little bit misleading. The simplest way is actually just:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>#[pyfunction]\nfn my_function() -&gt; PyResult&lt;MyStruct&gt; {\n    Ok(MyStruct {})\n}\n</code></pre>\n<p><a href=\"https://pyo3.rs/master/class.html#get-python-objects-from-pyclass\" rel=\"nofollow noreferrer\">The PYO3 <code>pyclass</code> guide</a> states:</p>\n<blockquote>\n<p>You can use pyclasses like normal rust structs.</p>\n<p>However, if instantiated normally, you can't treat pyclasses as Python objects.</p>\n<p>To get a Python object which includes pyclass, we have to use some special methods.</p>\n</blockquote>\n<p>I believe this is only true if the said value doesn't cross Rust / Python boundary. If it does, <code>pyfunction</code> macro automatically converts the Python objects to Rust values and the Rust return value back into a Python object. The PYO3 guide could be more specific here.</p>\n"}], "owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 487, "favorite_count": 1, "accepted_answer_id": 59208323, "answer_count": 1, "score": 3, "last_activity_date": 1576077108, "creation_date": 1575589582, "question_id": 59204849, "link": "https://stackoverflow.com/questions/59204849/how-to-implement-a-rust-function-that-returns-a-python-object-using-py03", "title": "How to implement a Rust function that returns a Python object using PY03", "body": "<p>From Python, I want to call a Rust function that returns a Python object:</p>\n\n<pre><code>my_rust_module.my_function()  # =&gt; &lt;object&gt;\n</code></pre>\n\n<p>I am not sure how to create this function since the <a href=\"https://pyo3.rs/master/class.html#get-python-objects-from-pyclass\" rel=\"nofollow noreferrer\">PYO3 guide on class instantiation</a> describes how to instantiate such an object as a <code>PyRef</code>, however I can't work out how to return such a reference from a <code>pyfunction</code>.</p>\n\n<p>This is what I am trying:</p>\n\n<pre><code>#[pyfunction]\nfn my_function(py: Python) -&gt; PyRef {\n    let gil = Python::acquire_gil();\n    let py = gil.python();\n    PyRef::new(py, MyStruct { }).unwrap()\n}\n</code></pre>\n\n<p>However, <code>PyRef</code> does not seem to be a valid return type (compiler says \"wrong number of type arguments: expected 1, found 0\"), and I don't know how to convert a <code>PyRef</code> into something that can be returned such as a <code>PyObject</code>.</p>\n"}, {"tags": ["rust", "llvm", "rust-cargo"], "owner": {"reputation": 21, "user_id": 12441873, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-jOiTB0485Ig/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rf9p5qR9dob_ZIHcVvIR6tVclLtqA/photo.jpg?sz=128", "display_name": "Nam Nguyen", "link": "https://stackoverflow.com/users/12441873/nam-nguyen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "closed_date": 1575619356, "answer_count": 0, "score": 2, "last_activity_date": 1575683749, "creation_date": 1575587283, "last_edit_date": 1575683749, "question_id": 59204553, "link": "https://stackoverflow.com/questions/59204553/adding-a-new-llvm-codegen-option-for-rustc", "closed_reason": "Needs details or clarity", "title": "Adding a new LLVM codegen option for RustC", "body": "<p>I started learning/working on the Rust compiler very recently. The command line to compile rust code with rustc has multiple code gen options, one of which is <code>llvm-args</code>, which allows the user to specify the configuration of the LLVM-backend. I want to add a new flag to <code>llvm-args</code>, but struggle to come up with an implementation plan.</p>\n\n<p>I have looked at some PRs on the Rust repo (PRs <a href=\"https://github.com/rust-lang/rust/pull/41847\" rel=\"nofollow noreferrer\">41847</a> and <a href=\"https://github.com/rust-lang/rust/pull/27260\" rel=\"nofollow noreferrer\">27260</a>) where people try to create new flags for the Rust compiler, but still couldn't map out a procedure that I should follow to complete my task. I would greatly appreciate any guidance on this topic.  </p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "is_accepted": true, "score": 2, "last_activity_date": 1575588148, "creation_date": 1575588148, "answer_id": 59204669, "question_id": 59204337, "link": "https://stackoverflow.com/questions/59204337/error-a-bin-target-must-be-available-for-cargo-run/59204669#59204669", "title": "error: a bin target must be available for `cargo run`", "body": "<p><code>cargo run</code> <a href=\"https://doc.rust-lang.org/cargo/guide/project-layout.html\" rel=\"nofollow noreferrer\">will look for a file</a> called <code>src/main.rs</code> or <code>src/bin/*.rs</code> or some other file that's defined to be an application/binary in <code>Cargo.toml</code>.  However, this project does not have one of these files.  It is only a library with <code>src/lib.rs</code>.  Without writing more code that calls the functions provided by this library, you can only run its unit tests and benchmarking suite.</p>\n\n<p>You can run its unit tests on the latest Rust stable release by running <code>cargo test</code>.  However, to run the benchmarks, you'll need to have the Rust nightly release installed.  If you're using rustup to manage your Rust installation, you can install the nightly version of rust and use it to run the benchmarks like:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ rustup install nightly\n$ cargo +nightly bench\n</code></pre>\n"}], "owner": {"reputation": 143, "user_id": 12088139, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DCN4gko7Gls/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfiW69WwiPFykErkASOknDPRcUl_Q/photo.jpg?sz=128", "display_name": "asyraaf azhar", "link": "https://stackoverflow.com/users/12088139/asyraaf-azhar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 713, "favorite_count": 0, "closed_date": 1576342140, "accepted_answer_id": 59204669, "answer_count": 1, "score": -1, "last_activity_date": 1576342120, "creation_date": 1575585917, "last_edit_date": 1576342120, "question_id": 59204337, "link": "https://stackoverflow.com/questions/59204337/error-a-bin-target-must-be-available-for-cargo-run", "closed_reason": "Duplicate", "title": "error: a bin target must be available for `cargo run`", "body": "<p>I am quite new using Rust language. I try to execute this cargo project/lib from github repository.</p>\n\n<p><a href=\"https://github.com/smallnest/benchpi\" rel=\"nofollow noreferrer\">https://github.com/smallnest/benchpi</a></p>\n\n<p>However, after cloning and run <code>cargo run</code>, I got this error <code>error: a bin target must be available for 'cargo run'</code></p>\n\n<p>How to properly run this cargo library? Thanks.</p>\n"}, {"tags": ["path", "rust"], "answers": [{"comments": [{"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1575585354, "post_id": 59204199, "comment_id": 104626406, "body": "Thanks, not sure how I missed that"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 5, "last_activity_date": 1575584925, "creation_date": 1575584925, "answer_id": 59204199, "question_id": 59204100, "link": "https://stackoverflow.com/questions/59204100/how-do-i-replace-the-file-extension-of-a-pathbuf-or-path/59204199#59204199", "title": "How do I replace the file extension of a PathBuf or Path?", "body": "<p><code>PathBuf</code> provides the method <a href=\"https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.set_extension\" rel=\"noreferrer\"><code>set_extension</code></a>. It will add the extension if one does not exist yet, or replace it with the new one if it does.</p>\n\n<pre><code>let mut path = PathBuf::from(\"path/to/file\");\npath.set_extension(\"png\");\nassert_eq!(&amp;path.to_string_lossy(), \"path/to/file.png\");\n\nlet mut path = PathBuf::from(\"path/to/file.jpg\");\npath.set_extension(\"png\");\nassert_eq!(&amp;path.to_string_lossy(), \"path/to/file.png\");\n</code></pre>\n"}], "owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 550, "favorite_count": 0, "accepted_answer_id": 59204199, "answer_count": 1, "score": 1, "last_activity_date": 1613409067, "creation_date": 1575584256, "last_edit_date": 1613409067, "question_id": 59204100, "link": "https://stackoverflow.com/questions/59204100/how-do-i-replace-the-file-extension-of-a-pathbuf-or-path", "title": "How do I replace the file extension of a PathBuf or Path?", "body": "<p>My current solution is:</p>\n<pre><code>let temp = format!(\n    &quot;{}.png&quot;,\n    path.file_stem().unwrap().to_string_lossy());\npath.pop();\npath.push(&amp;temp);\n</code></pre>\n<p>Which is quite ugly, requiring at least 6 function calls and creating an new string.</p>\n<p>Is there a more idiomatic, shorter, or more efficient way to do this?</p>\n"}, {"tags": ["rust", "macros", "rust-macros"], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 321, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1575621467, "creation_date": 1575584018, "last_edit_date": 1575621467, "question_id": 59204053, "link": "https://stackoverflow.com/questions/59204053/what-is-a-streamlined-approach-to-processing-helper-attributes-in-derive-macros", "title": "What is a streamlined approach to processing helper attributes in derive macros when using Rust?", "body": "<p>What is a streamlined approach to processing helper attributes in derive macros when using Rust?  To illustrate what I'm looking for, I've defined a derive macro called <code>Duplicate</code> that creates a new struct that contains all of the elements in the old struct that have been marked by helper attributes.  Basically, it turns</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Duplicate)]\nstruct MyStruct {\n\n    #[dupe_me]\n    x : Vec &lt;f64&gt;,\n\n    y : bool,     \n\n    #[dupe_me]\n    z : char,     \n}\n</code></pre>\n\n<p>into</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nstruct MyStructDuplicated {\n    x : Vec &lt;f64&gt;,\n    z : char,     \n}\n</code></pre>\n\n<p>The structure of the code is</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>./mymacro/src/lib.rs\n./mymacro/Cargo.toml\n./mybin/src/main.rs\n./mybin/Cargo.toml\n</code></pre>\n\n<p>With <code>mymacro/Cargo.toml</code> as</p>\n\n<pre><code>[package]\nname = \"mymacro\"\nversion = \"0.1.0\"\nauthors = [\"blank\"]\nedition = \"2018\"\n\n[lib]\nproc-macro = true\n\n[dependencies]\nsyn = \"1.0.11\"\nquote = \"1.0.2\"\nproc-macro2 = \"1.0.6\"\n</code></pre>\n\n<p>and <code>lib.rs</code> as</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// External dependencies\nextern crate proc_macro;\nuse crate::proc_macro::TokenStream;\nuse proc_macro2;\nuse quote::{format_ident, quote};\nuse syn;\n\n// Define a derive macro\n#[proc_macro_derive(Duplicate, attributes(dupe_me))]\npub fn duplicate_macro_derive(input: TokenStream) -&gt; TokenStream {\n    // Construct a representation of Rust code as a syntax tree\n    // that we can manipulate\n    let ast: syn::DeriveInput = syn::parse(input).unwrap();\n\n    // Grab the name of the struct\n    let name = &amp;ast.ident;\n\n    // Find the name of members we need to duplicate\n    let mut duped: Vec&lt;(proc_macro2::Ident, syn::Type)&gt; = vec![];\n    match ast.data {\n        // Only process structs\n        syn::Data::Struct(ref data_struct) =&gt; {\n            // Check the kind of fields the struct contains\n            match data_struct.fields {\n                // Structs with named fields\n                syn::Fields::Named(ref fields_named) =&gt; {\n                    // Iterate over the fields\n                    for field in fields_named.named.iter() {\n                        // Get attributes #[..] on each field\n                        for attr in field.attrs.iter() {\n                            // Parse the attribute\n                            match attr.parse_meta().unwrap() {\n                                // Find the duplicated idents\n                                syn::Meta::Path(ref path)\n                                    if path\n                                        .get_ident()\n                                        .unwrap()\n                                        .to_string()\n                                        == \"dupe_me\" =&gt;\n                                {\n                                    // Save the duped elements\n                                    let item = field.clone();\n                                    duped.push((item.ident.unwrap(), item.ty))\n                                }\n                                _ =&gt; (),\n                            }\n                        }\n                    }\n                }\n\n                // Struct with unnamed fields\n                _ =&gt; (),\n            }\n        }\n\n        // Panic when we don't have a struct\n        _ =&gt; panic!(\"Must be a struct\"),\n    }\n\n    // Transform the marked elements into new struct fields\n    let duped = duped\n        .iter()\n        .fold(quote!(), |es, (name, ty)| quote!(#es#name : #ty,));\n\n    // Create the new structure\n    let myname = format_ident!(\"{}Duplicated\", name);\n    let gen = quote! {\n        #[derive(Debug)]\n        struct #myname {\n            #duped\n        }\n    };\n    gen.into()\n    //panic!(gen.to_string());\n}\n</code></pre>\n\n<p>Then, <code>mybin/Cargo.toml</code> is</p>\n\n<pre><code>[package]\nname = \"mybin\"\nversion = \"0.1.0\"\nauthors = [\"blank\"]\nedition = \"2018\"\n\n[dependencies]\nmymacro = { path = \"../mymacro\" }\n</code></pre>\n\n<p>and <code>main.rs</code> is</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Debugging for the macro expansions\n#![feature(trace_macros)]\ntrace_macros!(false);\n\n// External dependencies\nuse mymacro::Duplicate;\n\n#[derive(Duplicate)]\nstruct MyStruct {\n\n    #[dupe_me]\n    x : Vec &lt;f64&gt;,\n\n    y : bool,\n\n    #[dupe_me]\n    z : char,\n}\n\nfn main() {\n    let foo = MyStruct {\n        x : vec!(1.2,2.3),\n        y : true,\n        z : 'e',\n    };\n    let bar = MyStructDuplicated {\n        x : foo.x,\n        z : foo.z,\n    };\n    println!(\"{:?}\",bar);\n}\n</code></pre>\n\n<p>This produces</p>\n\n<pre><code>$ ./target/debug/mybin \nMyStructDuplicated { x: [1.2, 2.3], z: 'e' }\n</code></pre>\n\n<p>As such, this does work properly.  At the same time, I've ignored quite a bit of error checking in <code>lib.rs</code> as well as used quite a bit of code to drill down to find the helper attributes.  I'm interested in understanding if there's a better way to generate such a macro.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1575579328, "post_id": 59202456, "comment_id": 104624120, "body": "The second piece leads to undefined behavior because the actual string (behind the value of type <code>CString</code>) is released right after you obtain a raw pointer to it."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1575580689, "post_id": 59202456, "comment_id": 104624686, "body": "<a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html#method.as_ptr\" rel=\"nofollow noreferrer\">It is your responsibility to make sure that the underlying memory is not freed too early.</a> You might have meant <code>into_raw</code>, not <code>as_ptr</code>."}], "owner": {"reputation": 85, "user_id": 8003030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dc32b4332c9f7cb9cf94cef878b1a65?s=128&d=identicon&r=PG&f=1", "display_name": "Le Marin", "link": "https://stackoverflow.com/users/8003030/le-marin"}, "delete_vote_count": 1, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "closed_date": 1575582559, "answer_count": 0, "score": 1, "last_activity_date": 1575576725, "creation_date": 1575575909, "last_edit_date": 1575576725, "question_id": 59202456, "link": "https://stackoverflow.com/questions/59202456/chaining-function-in-rust-produce-unexpected-behaviour", "closed_reason": "Duplicate", "title": "Chaining function in rust produce unexpected behaviour", "body": "<p>I am writing a safe wrapper around a c library in rust, and I found a weird behaviour:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// this works\nlet string = CString::new(filename).expect(\"error saving image\");\nlet bytes = string.as_bytes_with_nul();\nlet ptr = bytes.as_ptr();\nlet image = unsafe { load_image_color(ptr as *mut c_char, width.into(), height.into()) };\n\n//this panics with \"STB Reason: can't fopen\" as the string passed seems to be null (\"\")\nlet string = CString::new(filename)\n    .expect(\"error loading image\")\n    .as_bytes_with_nul()\n    .as_ptr();\nlet image = unsafe { load_image_color(string as *mut c_char, width.into(), height.into()) };\n\n</code></pre>\n\n<p>Can someone please explain to me why these two pieces of code are not semantically equivalent??</p>\n"}, {"tags": ["c", "rust", "shared-libraries", "static-libraries", "c-header"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1575582783, "post_id": 59202440, "comment_id": 104625536, "body": "You can&#39;t have a <code>HashMap</code> inside a C struct. C doesn&#39;t know its ABI, C doesn&#39;t know it can&#39;t make bit-wise copies of it. C doesn&#39;t know it has to drop it. My guess would be that you don&#39;t actually want <code>MyPublicClass</code> to be known by C at all, and merely want pointers to it in C. In that case you&#39;d just declare <code>typedef struct MyPublicClass MyPublicClass;</code>."}, {"owner": {"reputation": 49065, "user_id": 13422, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/94b309d78a1253a334e9b82643a8dc97?s=128&d=identicon&r=PG", "display_name": "Zan Lynx", "link": "https://stackoverflow.com/users/13422/zan-lynx"}, "edited": false, "score": 1, "creation_date": 1575595389, "post_id": 59202440, "comment_id": 104628995, "body": "C and C++ cannot ignore private members because they need to know the <b>size</b> of the type. The only way around that is with pointer members like forward declared structs or void*."}], "answers": [{"tags": [], "owner": {"reputation": 177, "user_id": 2670899, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/925a854e467d2d49470566e67688c84f?s=128&d=identicon&r=PG", "display_name": "Kyrill", "link": "https://stackoverflow.com/users/2670899/kyrill"}, "is_accepted": false, "score": 0, "last_activity_date": 1575925194, "creation_date": 1575925194, "answer_id": 59256527, "question_id": 59202440, "link": "https://stackoverflow.com/questions/59202440/hide-private-fields-of-a-rust-lib-when-generating-its-c-header/59256527#59256527", "title": "Hide private fields of a Rust lib when generating its C header", "body": "<p>I ended up following mcarton's answer and got rid of the need to expose MyPublicClass to my C header.</p>\n\n<p>As a consequence, I rely on functions to access the parameters, instead of accessing them directly as instance parameters.\nThis has the drawback of not being able to check the values of MyPublicClass fields from the debugger when running my Objective-C project from Xcode, but at least it compiles and works as expected.</p>\n\n<p>My Rust code:</p>\n\n<pre><code>// This struct is no longer exposed to C:\npub struct MyPublicClass {\n    my_private_parameter:HashMap&lt;String,MyPrivateClass&gt;,\n    pub my_public_parameter:c_int,\n    pub my_other_public_parameter:c_double\n}\n\n\nimpl MyPublicClass {\n    pub fn new() -&gt; Self {\n        (\u2026)\n        MyPublicClass {\n            my_private_parameter: \u2026 ,\n            my_public_parameter: \u2026 ,\n            my_other_public_parameter: \u2026 ,\n        }\n    }\n\n    // Necessary to access my_public_parameter outside of Rust:\n    pub fn get_my_public_parameter_value(&amp;self) -&gt; c_int {\n        return self.my_public_parameter;\n    }\n}\n\n// Exposed to C:\n#[no_mangle]\npub unsafe extern fn my_public_class_new() -&gt; *mut MyPublicClass {\n    Box::into_raw(Box::new(MyPublicClass::new()))\n}\n\n// Exposed to C and necessary to access my_public_parameter outside of Rust:\n#[no_mangle]\npub unsafe extern fn my_public_class_get_my_public_parameter_value(ptr: *mut MyPublicClass) -&gt; c_int {\n    let mpc = unsafe {\n        assert!(!ptr.is_null());\n        &amp;mut *ptr\n    };\n    mpc.get_my_public_parameter_value()\n}\n</code></pre>\n\n<p>The C header:</p>\n\n<pre><code>#include &lt;stdarg.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct MyPublicClass MyPublicClass;\nMyPublicClass *my_public_class_new();\nint my_public_class_get_my_public_parameter_value(MyPublicClass *ptr);\n</code></pre>\n"}], "owner": {"reputation": 177, "user_id": 2670899, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/925a854e467d2d49470566e67688c84f?s=128&d=identicon&r=PG", "display_name": "Kyrill", "link": "https://stackoverflow.com/users/2670899/kyrill"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 160, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1575925194, "creation_date": 1575575802, "question_id": 59202440, "link": "https://stackoverflow.com/questions/59202440/hide-private-fields-of-a-rust-lib-when-generating-its-c-header", "title": "Hide private fields of a Rust lib when generating its C header", "body": "<p>I am making a Rust library that contains the following code:</p>\n\n<pre><code>pub mod my_module{\n\n    use std::os::raw::{c_int, c_double};\n    use std::collections::HashMap;\n\n    struct MyPrivateClass {\n        my_parameter:c_int\n    }\n\n    (...)\n\n    #[repr(C)]\n    pub struct MyPublicClass {\n        my_private_parameter:HashMap&lt;String,MyPrivateClass&gt;,\n        pub my_public_parameter:c_int,\n        pub my_other_public_parameter:c_double\n    }\n\n    (...)\n\n}\n</code></pre>\n\n<p>I want to use that library from Objective-C. So I\u2019m using <strong>cbindgen</strong> to generate a C header.\nFrom my Objective-C project, I only need to access the public fields of MyPublicClass.\nBut the C header generated contains all the fields of my public structs, including the private field.</p>\n\n<p>This is what the generated C header looks like:</p>\n\n<pre><code>#include &lt;stdarg.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n\ntypedef struct HashMap_String__MyPrivateClass HashMap_String__MyPrivateClass;\n\ntypedef struct {\n  HashMap_String__MyPrivateClass my_private_parameter;\n  int my_public_parameter;\n  double my_other_public_parameter;\n} MyPublicClass;\n</code></pre>\n\n<p>In this particular case, the HashMap type doesn\u2019t have a straight C equivalent, so I can\u2019t use this C header.</p>\n\n<p>I only need to use this HashMap inside of my Rust library. I don\u2019t need to use it from Objective-C.</p>\n\n<p>How can I generate a C header that doesn\u2019t expose it, without breaking anything?</p>\n"}, {"tags": ["generics", "rust", "gadt"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575574456, "post_id": 59201709, "comment_id": 104622071, "body": "You wrote <code>Vec&lt;T&gt;: std::iter::FromIterator&lt;H&gt;</code>, but <code>Vec&lt;u32&gt;</code> does not implement <code>FromIterator&lt;bool&gt;</code>."}, {"owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575641074, "post_id": 59201709, "comment_id": 104645224, "body": "How could solve the problem? If I remove that It throws <code>a collection of type &#39;std::vec::Vec&lt;T&gt;</code> cannot be built from <code>std::iter::Iterator&lt;Item=H&gt;&#39;</code> in the <code>collect()</code> part. I need to return a generic type as the <code>map</code> function comes from the user and It could change the Vec type"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575643106, "post_id": 59201709, "comment_id": 104646287, "body": "Sorry, I don&#39;t really understand what you&#39;re trying to do. If you want to turn an <code>H</code> into a <code>T</code>, you need <code>fn(H) -&gt; T</code>, not <code>fn(T) -&gt; H</code> -- is that the problem?"}, {"owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575643357, "post_id": 59201709, "comment_id": 104646421, "body": "Nono, I receive a <code>fn(T) -&gt; H</code>. Because the <code>Map</code> enum could have a function which changes the type of the recursive <code>Cons</code>. The problem is that <code>eval</code> expects to return a <code>T</code> and not and <code>H</code>. That&#39;s why it throws that I can&#39;t have a <code>fn(32) -&gt; bool</code> function. I would like to know if is possible to have generics <code>Map</code> functions like the one in the question, which transforms u32 to bool elements."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1575684462, "post_id": 59201709, "comment_id": 104660030, "body": "Sorry, I just don&#39;t understand. A function can&#39;t change the type of a value; that&#39;s not how types work. I could guess you want some kind of <i>wrapper</i> that encapsulates the function and an inner type, but then first you&#39;d need the wrapper to convert both ways -- not just <code>T</code> to <code>H</code> but <code>H</code> to <code>T</code> depending on how it&#39;s being used -- and secondly you&#39;d need the &quot;inner&quot; <code>ExecutionGraph</code> to be a different type, not just the same as the &quot;outer&quot; type. Also, it kind of seems like you&#39;re trying to do things both at compile time and at run time in a way that doesn&#39;t jive, but that&#39;s a guess."}], "answers": [{"comments": [{"owner": {"reputation": 4832, "user_id": 4828463, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/jTteZ.jpg?s=128&g=1", "display_name": "Faraz", "link": "https://stackoverflow.com/users/4828463/faraz"}, "edited": false, "score": 1, "creation_date": 1582751662, "post_id": 59412384, "comment_id": 106889621, "body": "thanks for posting this answer <a href=\"https://stackoverflow.com/a/21472594/4828463\">stackoverflow.com/a/21472594/4828463</a>"}], "tags": [], "owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "is_accepted": true, "score": 1, "last_activity_date": 1576768107, "creation_date": 1576768107, "answer_id": 59412384, "question_id": 59201709, "link": "https://stackoverflow.com/questions/59201709/gadts-for-multiple-generics-transformations-in-rust/59412384#59412384", "title": "GADTs for multiple generics transformations in Rust", "body": "<p>As mentioned by a user in <a href=\"https://users.rust-lang.org/t/recursive-enums-with-changing-types-in-rust/35836\" rel=\"nofollow noreferrer\">my question in the official forum</a> of Rust. This language has no support for Generalized Algebraic Data Types (GADTs) which would be the right tool to solve this kind of problems.</p>\n\n<p>As an alternative, instead of proposing a scheme where the types belong to the ENUM making it not very flexible, a class approach is proposed, which is allowed to introduce new types.</p>\n\n<p>I do not put the code here so that it can be consulted directly in the question with the edits or new answers that may arise.</p>\n"}], "owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 412, "favorite_count": 0, "accepted_answer_id": 59412384, "answer_count": 1, "score": 0, "last_activity_date": 1576768107, "creation_date": 1575572425, "question_id": 59201709, "link": "https://stackoverflow.com/questions/59201709/gadts-for-multiple-generics-transformations-in-rust", "title": "GADTs for multiple generics transformations in Rust", "body": "<p>I'm trying to design an execution graph with Recursive Generics Enums in Rust. I want to make an <code>eval</code> function which computes a predefined <code>map</code> closure recursively, but each <code>map</code> function could change the enum type so I get a compilation error due the different types. Here is my code:</p>\n\n<pre><code>use std::rc::Rc;\n\nenum ExecutionGraph&lt;T, H, F = fn(T) -&gt; H&gt; {\n    Cons(Vec&lt;T&gt;),\n    Map(F, Rc&lt;ExecutionGraph&lt;T, H&gt;&gt;),\n}\n\n// Impl for add a Cons \"node\" or a Map \"node\"\nimpl&lt;T, H&gt; ExecutionGraph&lt;T, H, fn(T) -&gt; H&gt; {\n    fn new_data(data: Vec&lt;T&gt;) -&gt; Self {\n        ExecutionGraph::Cons(data)\n    }\n\n    fn add_map(a_function: fn(T) -&gt; H, execution_graph: ExecutionGraph&lt;T, H, fn(T) -&gt; H&gt;) -&gt; Self {\n        ExecutionGraph::Map(a_function, Rc::new(execution_graph))\n    }\n}\n\n// Complete evaluation of the execution graph\nfn eval&lt;T, H&gt;(execution_graph: &amp;ExecutionGraph&lt;T, H, fn(T) -&gt; H&gt;) -&gt; Vec&lt;T&gt;\nwhere\n    T: std::clone::Clone,\n    std::vec::Vec&lt;T&gt;: std::iter::FromIterator&lt;H&gt;,\n{\n    match execution_graph {\n        ExecutionGraph::Cons(data) =&gt; data.to_vec(),\n        ExecutionGraph::Map(closure, e1) =&gt; eval(&amp;(*e1)).into_iter().map(closure).collect(),\n    }\n}\n\nfn main() {\n    let execution_graph = ExecutionGraph::new_data(vec![1, 2, 3]);\n\n    // let map_function: fn(u32) -&gt; u32 = |x: u32| x * 8; // This work!\n    let map_function: fn(u32) -&gt; bool = |x: u32| x % 2 == 0; // This doesn't\n    let execution_graph_2 = ExecutionGraph::add_map(map_function, execution_graph);\n    let execution_result = eval(&amp;execution_graph_2);\n\n    println!(\"Result of execution = {:#?}\", execution_result);\n}\n</code></pre>\n\n<p>The <code>add_data</code> and <code>add_map</code> functions work as expected. But then when I call the <code>eval</code> function I'm getting the following error:</p>\n\n<pre><code>   |     let execution_result = eval(&amp;execution_graph_2);\n   |                                 ^^^^^^^^^^^^^^^^^^ expected u32, found bool\n   |\n   = note: expected type `&amp;ExecutionGraph&lt;_, _&gt;`\n              found type `&amp;ExecutionGraph&lt;u32, bool&gt;`&gt;`\n</code></pre>\n\n<p><strong>Why am I getting this error?</strong> I defined to get a generic argument and a generic function which could change the result type. <strong>How could allow all posible transformations in the data? In the future, there will be a lot of more functions with the same proble, such as a cartesian product wich returns a tuple</strong>. Note that if the closure has the same return type as the input there is no problem. If someone could give me a hand with this problem I would appreciate it.</p>\n\n<p>Thanks in advance and sorry about my English.</p>\n"}, {"tags": ["rust", "tree-traversal", "recursive-datastructures"], "owner": {"reputation": 31, "user_id": 7379374, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b409f85e30f810381509b68e2759d1b1?s=128&d=identicon&r=PG&f=1", "display_name": "Michael F", "link": "https://stackoverflow.com/users/7379374/michael-f"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 67, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1575566231, "creation_date": 1575565870, "last_edit_date": 1575566231, "question_id": 59200155, "link": "https://stackoverflow.com/questions/59200155/traversing-recursive-data-structure-with-access-to-ancestors", "title": "Traversing recursive data structure with access to ancestors", "body": "<p>I want to traverse a recursive data structure in Rust, where\nthe traversal function should have access to all ancestors already traversed.\nWhat I currently have is something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Tree&lt;N&gt; {\n  Node(N, Vec&lt;Box&lt;Tree&lt;N&gt;&gt;&gt;),\n}\n\n// delete children of nodes that have an equivalent ancestor\nfn traverse&lt;N&gt;(ancestors: &amp;mut Vec&lt;N&gt;, t: Tree&lt;N&gt;) -&gt; Tree&lt;N&gt;\nwhere\n  N: std::cmp::PartialEq + Clone\n{\n  let Tree::Node(n, ts) = t;\n  if ancestors.contains(&amp;n) {\n    Tree::Node(n, Vec::new())\n  }\n  else {\n    ancestors.push(n.clone()); // &lt;------ TODO: ugly\n    let ts = ts.into_iter().map(|bt| Box::new(traverse(ancestors, *bt))).collect();\n    ancestors.pop(); // &lt;------ TODO: ugly\n    Tree::Node(n, ts)\n  }\n}\n</code></pre>\n\n<p>I am not happy with the way the ancestors are recorded in the <code>traverse</code> function:\nUsing a mutable <code>Vec</code> means that I have to remember to <code>pop()</code> after the <code>push()</code>.\nFurthermore, I need to <code>clone()</code> every node.</p>\n\n<p>What would be the idiomatic way to write the <code>traverse</code> function? Is it possible to write it without the cloning constraint?</p>\n\n<p><strong>NB</strong>:\nIn Haskell, I would use a <code>List</code> instead of a <code>Vec</code>, which would allow me to write this:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Tree n =\n  Node n [Tree n]\n\ntreeTraverse :: Eq a =&gt; [a] -&gt; Tree a -&gt; Tree a\ntreeTraverse ancestors (Node n ts) =\n  if n `elem` ancestors\n  then Node n []\n  else Node n (map (treeTraverse (n:ancestors)) ts)\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 1750, "user_id": 11640763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tS29l.png?s=128&g=1", "display_name": "stud3nt", "link": "https://stackoverflow.com/users/11640763/stud3nt"}, "is_accepted": true, "score": 6, "last_activity_date": 1575566083, "last_edit_date": 1575566083, "creation_date": 1575565850, "answer_id": 59200149, "question_id": 59200001, "link": "https://stackoverflow.com/questions/59200001/rust-basic-while-loop/59200149#59200149", "title": "Rust basic while loop", "body": "<p>The problem is that you are creating a new variable inside while loop which has a different scope and the num in while condition never changes. Due to which it goes into an infinite loop. Try with the below code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate rand;\n\nuse rand::Rng;\n\nfn main() {\n    let funny_number: u16 = 69;\n    let mut num: u16 = 0;\n    let mut rng = rand::thread_rng();\n\n    while num != funny_number {\n        num = rng.gen_range(0, 100);\n        println!(\"{}\", num);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1339, "user_id": 1296327, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/d6ff36858207d1886fa0f70b414b7d6e?s=128&d=identicon&r=PG", "display_name": "Numpty", "link": "https://stackoverflow.com/users/1296327/numpty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 59200149, "answer_count": 1, "score": 2, "last_activity_date": 1575566083, "creation_date": 1575565342, "last_edit_date": 1575565849, "question_id": 59200001, "link": "https://stackoverflow.com/questions/59200001/rust-basic-while-loop", "title": "Rust basic while loop", "body": "<p>(Hopefully) A simple question from a complete rust beginner. What's wrong with my loop? </p>\n\n<p><code>num</code> evaluates to '69' rather quickly, but the loop never exits once <code>num</code> is set to '69'. I'm missing something obvious I'm sure...</p>\n\n<pre><code>extern crate rand;\n\nuse rand::Rng;\n\nfn main() {\n    let funny_number: u16 = 69;\n    let mut num: u16 = 0;\n    let mut rng = rand::thread_rng();\n\n    while num != funny_number {\n        let mut num: u16 = rng.gen_range(0, 100);\n        println!(\"{}\", num);\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "runtime-error", "ffi"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1575559847, "post_id": 59198378, "comment_id": 104614755, "body": "A behavior changed with a print denotes an undefined behavior in your code."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575559957, "post_id": 59198378, "comment_id": 104614821, "body": "I may be wrong, but I think that <code>&amp;mut *mut Supports</code> is invalid in a C function signature. It should be <code>*mut *mut Supports</code>."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575561432, "post_id": 59198378, "comment_id": 104615642, "body": "@FrenchBoiethios: From the <a href=\"https://doc.rust-lang.org/nomicon/ffi.html#interoperability-with-foreign-code\" rel=\"nofollow noreferrer\">Nomicon</a>: &quot;References can safely be assumed to be non-nullable pointers directly to the type.&quot;, but then a caveat explaining that you should prefer raw pointers."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1575561575, "post_id": 59198378, "comment_id": 104615744, "body": "@FrenchBoiethios: The <code>Vec&lt;Ray&gt;</code> however, I think it is not FFI safe."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1575561578, "post_id": 59198378, "comment_id": 104615750, "body": "@rodrigo So I was wrong ^^ Thanks for the link."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1575561654, "post_id": 59198378, "comment_id": 104615800, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/39224904/how-to-expose-a-rust-vect-to-ffi\">How to expose a Rust `Vec&lt;T&gt;` to FFI?</a>"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 2, "creation_date": 1575602244, "post_id": 59198378, "comment_id": 104630329, "body": "<a href=\"https://doc.rust-lang.org/src/alloc/vec.rs.html#295-298\" rel=\"nofollow noreferrer\"><code>Vec&lt;T&gt;</code></a> is <code>#[repr(Rust)]</code> implicitly, so it has an essentially indeterminate abi (In the eyes of the compiler) and is therefore undefined behavior. Also, to quote the nomicon: &quot;If <code>T</code> is an FFI-safe non-nullable pointer type, <code>Option&lt;T&gt;</code> is guaranteed to have the same layout and ABI as <code>T</code> and is therefore also FFI-safe. As of this writing, this covers <code>&amp;</code>, <code>&amp;mut</code>, and function pointers, all of which can never be null.&quot; So it&#39;s best to have an <code>Option&lt;&amp;T&gt;</code> as the parameter instead of raw pointers."}, {"owner": {"reputation": 35, "user_id": 8689024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fda710dd91f9a7af2ccee001533bed95?s=128&d=identicon&r=PG&f=1", "display_name": "Nevsden", "link": "https://stackoverflow.com/users/8689024/nevsden"}, "edited": false, "score": 0, "creation_date": 1575623177, "post_id": 59198378, "comment_id": 104636622, "body": "Assuming I constructed the method header of <code>foo</code> with a handover of <code>Vec&lt;T&gt;</code> your answer would probably explain the undefined behaviour. This however was a mistake I unintentionally introduced whilst writing this post in order to shorten the code. I edited the code to make the FFI call FFI safe."}, {"owner": {"reputation": 35, "user_id": 8689024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fda710dd91f9a7af2ccee001533bed95?s=128&d=identicon&r=PG&f=1", "display_name": "Nevsden", "link": "https://stackoverflow.com/users/8689024/nevsden"}, "edited": false, "score": 0, "creation_date": 1600179461, "post_id": 59198378, "comment_id": 113002373, "body": "I created a workaround for the described problem by using the compiler optimization level 2 instead of 3. After having compiled my code this way let the problem vanish. It needs to be analysed, if the problem still persists with the newest update of rust."}], "owner": {"reputation": 35, "user_id": 8689024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fda710dd91f9a7af2ccee001533bed95?s=128&d=identicon&r=PG&f=1", "display_name": "Nevsden", "link": "https://stackoverflow.com/users/8689024/nevsden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 60, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1575622224, "creation_date": 1575559774, "last_edit_date": 1575622224, "question_id": 59198378, "link": "https://stackoverflow.com/questions/59198378/why-does-a-simple-println-or-dbg-call-prevent-a-runtime-error-within-my-ff", "title": "Why does a simple println!() or dbg!() call prevent a runtime error within my FFI environment?", "body": "<h1>Edit 1:</h1>\n\n<p>When I had written this post I shortened the original code for better presentation. This however also inadvertently introduced a code error in the external library call <code>foo</code>.\nI edited the code to fix the rather obvious mistake regarding the handover of a <code>Vec&lt;T&gt;</code> as the community has already correctly pointed out.</p>\n\n<h1>Question</h1>\n\n<p>How and why does a <code>println</code> or <code>dbg</code> line of code change my runtime behaviour as illustrated? And of more importance: How can I fix my code, such that it works? </p>\n\n<p>I am sincerely sorry for the long post, but I could not leave out any information as it may play a vital role in finding a solution.</p>\n\n<h1>Background information</h1>\n\n<p>Rust is running as a dynamic system library (<code>[crate_type = \"cdylib\"]</code>) within a Delphi program. The Delphi program runs within a single process, no other threads are spawned. This process calls Rust, handing over a data object holding a triangle mesh as well as some other parameters. When the line described below is processed, Delphi throws an <code>Invalid_Floating_Point</code> exception.</p>\n\n<p>I have already tested that the handover is interpreted correctly, i.e. I am able to interpret the mesh object as a mesh as well as other parameters handed over.</p>\n\n<p>Note that, if I run the code with a rust example with excately the same setup, the runtime error does not occur.</p>\n\n<h1>Rust Code</h1>\n\n<h2>Call Stack</h2>\n\n<p>FFI function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[no_mangle]\npub unsafe extern \"C\" fn foo(\n    target: &amp;mut *mut Supports,\n    mesh: *const Mesh\n    space: f32) -&gt; i32 \n{\n    mesh = unsafe { &amp;*mesh };\n    let rays: Vec&lt;Ray&gt; = generate_rays_from_mesh(&amp;mesh, space);\n    if let Some(supports) = generate_target(&amp;mesh, rays) {\n        *target = Box::into_raw(supports);    \n        0\n    } else {\n        1    \n    }\n}\n</code></pre>\n\n<p>The mesh stores a BVH for faster processing. <code>generate_target</code> calls the BVH's <code>get_items</code> function. The function intends to find all triangles, which potentially intersect with the ray:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn generate_target(mesh: &amp;Mesh, rays: Vec&lt;Ray&gt;) -&gt; Supports {\n    ...\n    for ray in rays{\n        let triangles = mesh.bvh.get_items(ray);\n    }\n}\n</code></pre>\n\n<p>The BVH tree redirects the <code>get_items</code> call to the root node of the BVH. As the root node is of type <code>Node::Internal</code>, <code>Node</code> being an enum with variants <code>(Internal, Leaf)</code>, we dive into the implementation of struct <code>Node</code>. Note that <code>get_items</code> calls itself recursively until we find a leaf node. As the error occurs yet within the first call of <code>Node</code> <code>get_items</code> I omit the code for the leaf.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Node {\n    fn get_items(&amp;self, ray: &amp;Ray) -&gt; Vec&lt;u32&gt; {\n        match self {\n            Node::Internal(internal) =&gt; {\n                if intersects_aabb(&amp;ray, &amp;internal.aabb) {\n                    let (mut a, b) = rayon::join(\n                        || internal.lo.get_items(obj),\n                        || internal.hi.get_items(obj),\n                    );\n                    a.extend(b.into_iter());\n                    a\n                } else {\n                    Vec::new()\n                }\n            }\n            Node::Leaf(leaf) =&gt; {\n                ...\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>As you can see, the line with the <code>if</code>-statement gets called before the function calls itself recursively. Within this <code>if</code>-statement we dive deeper into the calling stack, as the error occurs here:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[inline]\npub fn intersects_aabb(ray: &amp;Ray, aabb: &amp;AABB3&lt;f32&gt;) -&gt; Option&lt;f32&gt; {\n    let mut hit_val = 0.;\n    let mut max_val = None;\n\n    for i in 0..3 {\n        let s = ray.pos[i];\n        let d = ray.dir[i];\n        let min = aabb.min[i];\n        let max = aabb.max[i];\n\n        if relative_eq!(d, 0.0) {\n            if s &lt; min || max &lt; s {\n                return None;\n            }\n        } else {\n            let mut t2 = (max - s) / d;\n            let mut t1 = (min - s) / d;\n            if t1 &gt; t2 {\n                mem::swap(&amp;mut t1, &amp;mut t2);\n            }\n\n            hit_val = hit_val.max(t1);\n            if let Some(m) = max_val {\n                max_val = ::nalgebra::partial_min(&amp;m, &amp;t2).cloned();\n            } else {\n                max_val = Some(t2);\n            }\n\n            if let Some(m) = max_val {\n                if hit_val &gt; m {\n                    return None;\n                }\n            }\n        }\n    }\n\n    Some(hit_val)\n}\n</code></pre>\n\n<h2>Error-throwing part</h2>\n\n<p>While debugging, I cannot go beyond the first line of the code shown below.\nHowever, if I debug the values needed for the calculation, all values seem fine, d is not zero as would have already been catched by the <code>if</code> block above these lines.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>...\nlet mut t2 = (max - s) / d;\nlet mut t1 = (min - s) / d;\n...\n</code></pre>\n\n<h2>Changing the function and its result</h2>\n\n<p>When I change the function as follows,</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut t1 = (min - s) / d;\ndbg!(&amp;t1);\nlet mut t1 = (max - s) / d;\ndbg!(&amp;t2);\n</code></pre>\n\n<p>the DLL call does not produce a runtime error.</p>\n"}, {"tags": ["rust", "rayon"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 1, "last_activity_date": 1575564503, "last_edit_date": 1575564503, "creation_date": 1575557736, "answer_id": 59197794, "question_id": 59197611, "link": "https://stackoverflow.com/questions/59197611/using-rayon-into-par-iter-sum-with-custom-struct/59197794#59197794", "title": "Using Rayon into_par_iter().sum() with custom struct", "body": "<p>Two small compounded issues. One is that the <code>std::iter::Sum</code> is defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Sum&lt;A = Self&gt; {\n    fn sum&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: Iterator&lt;Item = A&gt;;\n}\n</code></pre>\n\n<p>The <code>Self</code> here refers to whatever the struct gets the implementation and the default generic parameter has already been filled in. You don't need to specify it any more if implementing <code>Sum</code> for struct itself.</p>\n\n<p>The other is that the <code>map</code> closure parameter <code>default_val</code>, which is an integer, shadows the previous float one with the same name. Since <code>TestStruct::new</code> expects a <code>f32</code>, it leads to a type error.</p>\n\n<p>This works:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Sum for TestStruct {\n    fn sum&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: Iterator&lt;Item = Self&gt;,\n    {\n        ...\n    }\n}\n\nfn main() {\n    let default_val: f32 = 1.1;\n    let sum: TestStruct = (0..5)\n        .into_par_iter()\n        .map(|_| TestStruct::new(default_val))\n        .sum();\n\n    println!(\"{}\", sum.val);\n}\n</code></pre>\n"}], "owner": {"reputation": 1664, "user_id": 4498684, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/e4e2358d03574462e1a4b1c44de24853?s=128&d=identicon&r=PG&f=1", "display_name": "TheStrangeQuark", "link": "https://stackoverflow.com/users/4498684/thestrangequark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 373, "favorite_count": 0, "accepted_answer_id": 59197794, "answer_count": 1, "score": 0, "last_activity_date": 1575564503, "creation_date": 1575557135, "question_id": 59197611, "link": "https://stackoverflow.com/questions/59197611/using-rayon-into-par-iter-sum-with-custom-struct", "title": "Using Rayon into_par_iter().sum() with custom struct", "body": "<p>I'm trying to get use Rayon::prelude::into_par_iter to sum up a bunch of instances of a struct. I've implemented <code>std::iter::Sum</code> for the struct, but am still running into an error. Here is my example code;</p>\n\n<pre><code>use std::iter::Sum;\n\nuse rayon::prelude::*;\n\npub struct TestStruct {\n    val: f32,\n}\n\nimpl TestStruct {\n    pub fn new(v: f32) -&gt; Self {\n        Self { val: v }\n    }\n}\n\nimpl&lt;'a&gt; Sum&lt;&amp;'a Self&gt; for TestStruct {\n    fn sum&lt;I&gt;(iter: I) -&gt; Self\n    where\n        I: Iterator&lt;Item = &amp;'a Self&gt;,\n    {\n        iter.fold(Self { val: 0. }, |a, b| Self {\n            val: a.val + b.val,\n        })\n    }\n}\n\nfn main() {\n    let default_val: f32 = 1.1;\n    let sum: TestStruct = (0..5).into_par_iter().map(|&amp;default_val| {\n        TestStruct::new(default_val)\n    })\n    .sum();\n\n    println!(\"{}\", sum.val);\n}\n</code></pre>\n\n<p>and I am told <code>the trait 'std::iter::Sum' is not implemented for 'TestStruct'</code>, but I think I am implementing it. Am I missing something here?</p>\n"}, {"tags": ["rust", "rust-diesel"], "owner": {"reputation": 9614, "user_id": 7715250, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/21e16ee79a2d82cf66a9f8c9a45e4021?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/7715250/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 222, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1575556477, "creation_date": 1575556171, "last_edit_date": 1575556477, "question_id": 59197346, "link": "https://stackoverflow.com/questions/59197346/how-to-do-sum-in-diesel-rust", "title": "How to do Sum in Diesel Rust?", "body": "<p>Reproduction project: <a href=\"https://github.com/Jasperav/sumdieselrust\" rel=\"nofollow noreferrer\">https://github.com/Jasperav/sumdieselrust</a></p>\n\n<p>Problem is in method <code>money_donated</code>. I have a column 'donated' in table 'donation'. I want to sum up all the values in the db and return the result as a value over JSON. However, I am having trouble with all the types in Diesel, I don't understand how I can do a simple sum.</p>\n\n<p>The compile error I get is: </p>\n\n<blockquote>\n  <p>^^^^^ the trait\n  <code>diesel::deserialize::FromSql&lt;diesel::sql_types::Nullable&lt;diesel::sql_types::Numeric&gt;,\n  diesel::pg::Pg&gt;</code> is not implemented for <code>i32</code></p>\n</blockquote>\n\n<p>for this line:</p>\n\n<pre><code>// The rounding is not important for JSON, so an i32 is fine to use\nlet amount: i32 = donation.select(sum(donated)).first(&amp;c).unwrap();\n</code></pre>\n\n<p>In the project I was trying to implemented the trait <code>FromSql</code> and then I thought to myself that all this work is too much for something simple like this, so maybe I am missing the point and doing too much work.</p>\n\n<p>I read the docs here: <a href=\"https://docs.diesel.rs/diesel/dsl/fn.sum.html\" rel=\"nofollow noreferrer\">https://docs.diesel.rs/diesel/dsl/fn.sum.html</a> as well as this question: <a href=\"https://github.com/diesel-rs/diesel/issues/210\" rel=\"nofollow noreferrer\">https://github.com/diesel-rs/diesel/issues/210</a>. I still can not figure it out how to make it work.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1575551764, "post_id": 59195985, "comment_id": 104610164, "body": "You probably want <code>&amp;[News]</code> as a return value, don&#39;t you?"}, {"owner": {"reputation": 3, "user_id": 11840746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2fe6cce7be1eab8d47921ad3ffc0d73?s=128&d=identicon&r=PG&f=1", "display_name": "Arctick", "link": "https://stackoverflow.com/users/11840746/arctick"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1575553949, "post_id": 59195985, "comment_id": 104611398, "body": "Maybe I misunderstood the answer, but I want to return a vector (or an array) of News references because I would like avoid to cloning the structure. Eventually I could return a &amp;[&amp;News] instead of a Vec&lt;&amp;News&gt;."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1575554168, "post_id": 59195985, "comment_id": 104611501, "body": "<a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.as_slice\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/vec/struct.Vec.html#method.as_slice</a> there is no copying involved, because it points to the underlying data of the <code>Vec</code> in memory. Therefore <code>&amp;[News]</code> is totaly valid"}, {"owner": {"reputation": 3, "user_id": 11840746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2fe6cce7be1eab8d47921ad3ffc0d73?s=128&d=identicon&r=PG&f=1", "display_name": "Arctick", "link": "https://stackoverflow.com/users/11840746/arctick"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1575554794, "post_id": 59195985, "comment_id": 104611877, "body": "In fact, I am just stupid. I just have to change T to &amp;T (fn news_filter&lt;T: GetNews&gt;(media: &amp;T) -&gt; Vec&lt;&amp;News&gt;). Thank you for your help :)"}], "answers": [{"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 0, "last_activity_date": 1575559361, "creation_date": 1575559361, "answer_id": 59198260, "question_id": 59195985, "link": "https://stackoverflow.com/questions/59195985/get-the-reference-of-a-structure-throught-a-trait/59198260#59198260", "title": "Get the reference of a structure throught a trait", "body": "<p>Does <code>news_filter</code> really have to take by value? This way, the stuff within <code>T</code> can not be referenced after it has been consumed by the function.</p>\n\n<p>I think you actually want <code>fn news_filter&lt;T: GetNews&gt;(media: &amp;T) -&gt; Vec&lt;&amp;News&gt;</code>. (Playground link: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b0e387ab264d98979ab3e68057401349\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b0e387ab264d98979ab3e68057401349</a>)</p>\n"}], "owner": {"reputation": 3, "user_id": 11840746, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2fe6cce7be1eab8d47921ad3ffc0d73?s=128&d=identicon&r=PG&f=1", "display_name": "Arctick", "link": "https://stackoverflow.com/users/11840746/arctick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 59198260, "answer_count": 1, "score": 0, "last_activity_date": 1575559361, "creation_date": 1575551566, "last_edit_date": 1575551725, "question_id": 59195985, "link": "https://stackoverflow.com/questions/59195985/get-the-reference-of-a-structure-throught-a-trait", "title": "Get the reference of a structure throught a trait", "body": "<p>I have the following code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2f9ad593ddac97b9d599326530a7afcc\" rel=\"nofollow noreferrer\">link to Rust playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct News {\n    size: u32,\n    date: &amp;'static str,\n}\n\nstruct Journal {\n    lst_news: Vec&lt;News&gt;,\n}\n\ntrait GetNews {\n    fn get_news(&amp;self) -&gt; Vec&lt;&amp;News&gt;;\n}\n\nimpl GetNews for Journal {\n    fn get_news(&amp;self) -&gt; Vec&lt;&amp;News&gt; {\n        let mut news_list: Vec&lt;&amp;News&gt; = Vec::new();\n        for ii in &amp;self.lst_news {\n            news_list.push(ii)\n        }\n        news_list\n    }\n}\n\nfn news_filter&lt;T: GetNews&gt;(media: T) -&gt; Vec&lt;&amp;News&gt; {\n    let mut news_list: Vec&lt;&amp;News&gt; = Vec::new();\n    for ii in media.get_news() {\n        news_list.push(ii)\n    }\n    news_list\n}\n</code></pre>\n\n<p>When I compile the code I got the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling playground v0.0.1 (/playground)\nerror[E0106]: missing lifetime specifier\n  --&gt; src/lib.rs:38:45\n   |\n38 | fn news_filter&lt;T: GetNews&gt;(media: T) -&gt; Vec&lt;&amp;News&gt; {\n   |                                             ^ help: consider giving it an explicit bounded or 'static lifetime: `&amp;'static`\n   |\n   = help: this function's return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\n</code></pre>\n\n<p>I tried to fix it according to the borrow checker like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn news_filter&lt;T: 'static + GetNews&gt;(media: T) -&gt; Vec&lt;&amp;'static News&gt; {\n    let mut news_list: Vec&lt;&amp;News&gt; = Vec::new();\n    for ii in media.get_news() {\n        news_list.push(ii)\n    }\n    news_list\n}\n</code></pre>\n\n<p>And I got this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling playground v0.0.1 (/playground)\nerror[E0515]: cannot return value referencing function parameter `media`\n  --&gt; src/lib.rs:43:5\n   |\n40 |     for ii in media.get_news() {\n   |               ----- `media` is borrowed here\n...\n43 |     news_list\n   |     ^^^^^^^^^ returns a value referencing data owned by the current function\n</code></pre>\n\n<p>I don't know how to solve this. I think the good way is to give the reference to the vector (news_list) but I don't know how to do this.</p>\n\n<p>Thanks in advance</p>\n"}, {"tags": ["rust", "future"], "answers": [{"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 1, "last_activity_date": 1575928604, "last_edit_date": 1575928604, "creation_date": 1575873827, "answer_id": 59243761, "question_id": 59193686, "link": "https://stackoverflow.com/questions/59193686/how-do-i-collect-a-futures-0-1-iterator-into-a-vector/59243761#59243761", "title": "How do I collect a futures 0.1 iterator into a vector?", "body": "<p><strong>Why doesn't the code below work?</strong></p>\n\n<p>I don't think this problem is specific to the futures version you are using - if I update your code to use <code>Future&lt;Output = Result&lt;i32, i32&gt;&gt;</code> then I get <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b744c50d4b3f86cabb1f510a287abca6\" rel=\"nofollow noreferrer\">exactly the same result</a>.</p>\n\n<p>The problem here is that your mapping function needs to coerce a concrete future into a trait object. </p>\n\n<p>In the Rust Reference, in the section on <a href=\"https://doc.rust-lang.org/reference/type-coercions.html#type-coercions\" rel=\"nofollow noreferrer\">type coercions</a>, it describes coercion sites as:</p>\n\n<blockquote>\n  <p>places where the desired type is explicit or can be derived by propagation from explicit types (without type inference).</p>\n</blockquote>\n\n<p>The context in which your code requires coercion would require type inference - working backwards from the desired container type through the return type of the <code>map</code> function. It's a bridge too far.</p>\n\n<p>You can overcome it by explicitly converting to the trait object:</p>\n\n<pre><code>Box::new(futures::future::ok(132)) as Box&lt;dyn futures::future::Future&lt;Output = Result&lt;i32, i32&gt;&gt;&gt;\n</code></pre>\n\n<p>Now it will compile <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e7f157112c5e4481a9927cf40c9ae65e\" rel=\"nofollow noreferrer\">(playground)</a>.</p>\n\n<p>To avoid the implicit conversion, you could add a return type to your <code>map</code> closure:</p>\n\n<pre><code>let mapped: Vec&lt;Box&lt;dyn futures::future::Future&lt;Output = Result&lt;i32, i32&gt;&gt;&gt;&gt; = (0..10)\n    .map(|_| -&gt; Box&lt;dyn futures::future::Future&lt;Output = Result&lt;i32, i32&gt;&gt;&gt; {\n        Box::new(futures::future::ok(132))\n    })\n    .collect();\n</code></pre>\n\n<p>This would allow implicit coercion to kick in.</p>\n\n<p><strong>Is there a more idiomatic way to build a list/iterable of <code>Future</code>s?</strong></p>\n\n<p>That would depend on how the futures were being created and what they would be used for.</p>\n\n<ul>\n<li><p>You could define a type alias:</p>\n\n<pre><code>type MyDynFuture = Box&lt;dyn futures::future::Future&lt;Output = Result&lt;i32, i32&gt;&gt;&gt;;\n</code></pre>\n\n<p>so that you could then write:</p>\n\n<pre><code>let mapped: Vec&lt;MyDynFuture&gt; = (0..10)\n    .map(|_| -&gt; MyDynFuture {\n        Box::new(futures::future::ok(132))\n    })\n    .collect();\n</code></pre>\n\n<p>Personally I find that a lot more readable.</p></li>\n<li><p>If there are a number of places in your codebase where you need to\nmanage a collection of futures, you might want to use a function\nrather than a closure to further reduce the boilerplate.</p></li>\n<li><p>If the set will contain a limited set of future types, then it may be\nmore efficient to define an enum containing them and collect\ninstances of this enum in the container - this would avoid runtime\ndispatch and heap allocation.</p></li>\n<li><p>If the futures are being generated from some iterator, and the\ncollection is going to be passed to <a href=\"https://docs.rs/futures/0.3.1/futures/future/fn.join_all.html\" rel=\"nofollow noreferrer\"><code>join_all</code></a> or some similar\nmethod so you can wait for them all to complete, then you don't need\nto collect them at all - for example:</p>\n\n<pre><code>let i = (0..10)\n    .map(|n| -&gt; futures::future::Ready&lt;Result&lt;i32,i32&gt;&gt; {\n        futures::future::ok(n)\n    });\n\njoin_all(i)\n</code></pre></li>\n</ul>\n\n<p>Caveat: I'm also pretty inexperienced in Rust, there could be other best practices I'm unaware of.</p>\n"}], "owner": {"reputation": 1194, "user_id": 1191070, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JPU4k.jpg?s=128&g=1", "display_name": "Patrik Stas", "link": "https://stackoverflow.com/users/1191070/patrik-stas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 792, "favorite_count": 0, "accepted_answer_id": 59243761, "answer_count": 1, "score": 1, "last_activity_date": 1575928604, "creation_date": 1575543603, "last_edit_date": 1575928436, "question_id": 59193686, "link": "https://stackoverflow.com/questions/59193686/how-do-i-collect-a-futures-0-1-iterator-into-a-vector", "title": "How do I collect a futures 0.1 iterator into a vector?", "body": "<p>I am trying to build vector of futures using Rust 1.36.0 and futures 0.1.</p>\n\n<ol>\n<li>Why doesn't the code below work?</li>\n<li>Is there a more idiomatic way to build a list/iterable of <code>Future</code>s?</li>\n</ol>\n\n<pre><code>extern crate futures;\n\npub fn create_some_futures() {\n    let mapped: Vec&lt;Box&lt;dyn futures::future::Future&lt;Item = i32, Error = ()&gt;&gt;&gt; = (0..10)\n        .map(|_| Box::new(futures::future::ok(132)))\n        .collect();\n}\n\nfn main() {\n    create_some_futures();\n}\n</code></pre>\n\n<p>My <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nfutures = \"0.1\"\n</code></pre>\n\n<p>This does not compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: a collection of type `std::vec::Vec&lt;std::boxed::Box&lt;dyn futures::Future&lt;Item = i32, Error = ()&gt;&gt;&gt;` cannot be built from an iterator over elements of type `std::boxed::Box&lt;futures::Failed&lt;{integer}, _&gt;&gt;`\n --&gt; src/main.rs:6:10\n  |\n6 |         .collect();\n  |          ^^^^^^^ a collection of type `std::vec::Vec&lt;std::boxed::Box&lt;dyn futures::Future&lt;Item = i32, Error = ()&gt;&gt;&gt;` cannot be built from `std::iter::Iterator&lt;Item=std::boxed::Box&lt;futures::Failed&lt;{integer}, _&gt;&gt;&gt;`\n  |\n  = help: the trait `std::iter::FromIterator&lt;std::boxed::Box&lt;futures::Failed&lt;{integer}, _&gt;&gt;&gt;` is not implemented for `std::vec::Vec&lt;std::boxed::Box&lt;dyn futures::Future&lt;Item = i32, Error = ()&gt;&gt;&gt;`\n</code></pre>\n\n<p>Why is that? I suspect there's problem converting <code>futures::Finished&lt;{integer}, _&gt;</code> to <code>&lt;dyn futures::Future&lt;Item = i32, Error = ()&gt;&gt;</code> because this compiles fine:</p>\n\n<pre><code>pub fn create_some_boxed_ints() {\n    let mapped: Vec&lt;Box&lt;i32&gt;&gt; = (0..10).map(|_| Box::new(132)).collect();\n}\n</code></pre>\n\n<p>I am not sure what's the problem. The function <code>future::ok</code> returns <code>FutureResult</code> which implements <code>Future</code>, which I expected to be compatible with <code>dyn Future&lt;Item = i32, Error = ()&gt;</code>.</p>\n\n<p>I am playing with this old version of the futures crate because another project I want to contribute into is using the 0.1 version. I know that the associated type for <code>Future</code> is <code>Output</code>  in 0.3.x. Maybe I wouldn't have this problem if I switch to more recent version, but I would like to understand the case above to better understand Rust. The error message is  the same on 1.39.0.</p>\n"}, {"tags": ["rust", "borrowing"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1575546249, "post_id": 59193616, "comment_id": 104607176, "body": "Why are you borrowing there instead of later? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9b799659ac3c5833c114c6486f3773e2\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1575548671, "creation_date": 1575548671, "answer_id": 59195132, "question_id": 59193616, "link": "https://stackoverflow.com/questions/59193616/temporary-value-dropped-while-borrowed-but-i-dont-want-to-do-a-let/59195132#59195132", "title": "Temporary value dropped while borrowed, but I don&#39;t want to do a let", "body": "<p>Well, <em>some</em>thing has to own each of those arrays, because references can't own things. And the arrays are of different sizes, so the owner has to be a pointer. The most common array-like owning pointer is <code>Vec</code>:</p>\n\n<pre><code>let map: Vec&lt;(Vec&lt;usize&gt;, &amp;[usize])&gt; = vec![\n    (vec![1, 0, 0, 0, 99], &amp;[2, 0, 0, 0, 99]),\n    (vec![2, 3, 0, 3, 99], &amp;[2, 3, 0, 6, 99]),\n    (vec![2, 4, 4, 5, 99, 0], &amp;[2, 4, 4, 5, 99, 9801]),\n    (vec![1, 1, 1, 4, 99, 5, 6, 0, 99], &amp;[30, 1, 1, 4, 2, 5, 6, 0, 99]),\n];\n\nfor (mut x, y) in map {\n    execute_program(&amp;mut x);\n    assert_eq!(x, y);\n}\n</code></pre>\n\n<p>The arrays are therefore owned by <code>map</code> and borrowed when necessary, as loganfsmyth also suggested in the question comments.</p>\n\n<p>You may be concerned about the performance cost of making unnecessary allocations. This is the cost of using a single <code>let</code>; since the arrays are not all the same size, if you want them on the stack there really isn't a way around declaring them with different <code>let</code>s. However, you could write a macro that removes the boilerplate.</p>\n\n<h2>Wait, why does it work for <code>y</code>?</h2>\n\n<p>You may wonder why I turned <code>x</code> into a vector, but left <code>y</code> as it is. The answer is that because <code>y</code> is a shared reference, those arrays are subject to <a href=\"https://stackoverflow.com/questions/50345139/why-can-i-return-a-reference-to-a-local-literal-but-not-a-variable\">static promotion</a>, so that <code>&amp;[2, 0, 0, 0, 99]</code> is actually of type <code>&amp;'static [usize; 5]</code> which can be coerced to <code>&amp;'static [usize]</code>. <code>&amp;mut</code> references do not trigger static promotion because it is unsafe to mutate a static value without some kind of synchronization.</p>\n"}], "owner": {"reputation": 1122, "user_id": 4970650, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/496526a825adf2e6587a19d3a6d391f7?s=128&d=identicon&r=PG", "display_name": "Cirelli94", "link": "https://stackoverflow.com/users/4970650/cirelli94"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "accepted_answer_id": 59195132, "answer_count": 1, "score": 2, "last_activity_date": 1575550760, "creation_date": 1575543335, "last_edit_date": 1575550760, "question_id": 59193616, "link": "https://stackoverflow.com/questions/59193616/temporary-value-dropped-while-borrowed-but-i-dont-want-to-do-a-let", "title": "Temporary value dropped while borrowed, but I don&#39;t want to do a let", "body": "<p>I'm doing something like this:</p>\n\n<pre><code>fn main() {\n    //[1, 0, 0, 0, 99]; // return [2, 0, 0, 0, 99]\n    //[2, 3, 0, 3, 99]; // return [2,3,0,6,99]\n    //[2, 4, 4, 5, 99, 0]; // return [2,4,4,5,99,9801]\n    //[1, 1, 1, 4, 99, 5, 6, 0, 99]; // return [30,1,1,4,2,5,6,0,99]\n\n    let map: Vec&lt;(&amp;mut [usize], &amp;[usize])&gt; = vec![(&amp;mut [1, 0, 0, 0, 99], &amp;[2, 0, 0, 0, 99])];\n\n    for (x, y) in map {\n        execute_program(x);\n        assert_eq!(x, y);\n    }\n}\n\npub fn execute_program(vec: &amp;mut [usize]) {\n    //do something inside vec\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=59c5a73ce5b901aa37bf4511016ed107\" rel=\"nofollow noreferrer\">Here the playground</a></p>\n\n<p>The problem is that I don't use the let on the first element in the tuple, that i want to borrow to execute_program:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0716]: temporary value dropped while borrowed\n --&gt; src/main.rs:2:57\n  |\n2 |     let map: Vec&lt;(&amp;mut [usize], &amp;[usize])&gt; = vec![(&amp;mut [1, 0, 0, 0, 99], &amp;[2, 0, 0, 0, 99])];\n  |                                                         ^^^^^^^^^^^^^^^^                     - temporary value is freed at the end of this statement\n  |                                                         |\n  |                                                         creates a temporary which is freed while still in use\n3 | \n4 |     for (x, y) in map {\n  |                   --- borrow later used here\n  |\n  = note: consider using a `let` binding to create a longer lived value\n</code></pre>\n\n<p>But what I was doing was a refactoring exactly because I didn't want to do a <code>let</code> for every slice I want to test!</p>\n\n<p>Is the <code>let</code> really needed?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1575543534, "post_id": 59193355, "comment_id": 104605726, "body": "According to crates.io, this crate is not very used. The most popular one seems to be <a href=\"https://crates.io/crates/unicode-width\" rel=\"nofollow noreferrer\">unicode-width</a>."}, {"owner": {"reputation": 19, "user_id": 9312658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Xz4SaXq32wA/AAAAAAAAAAI/AAAAAAAAAFE/aOkK1o8fsTE/photo.jpg?sz=128", "display_name": "Arka Ray", "link": "https://stackoverflow.com/users/9312658/arka-ray"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1575547519, "post_id": 59193355, "comment_id": 104607795, "body": "Updating crates.io index error: specified package <code>unicode-width v0.1.6</code> has no binaries if you try to install it from the repo directly Updating git repository <code>https:&#47;&#47;github.com&#47;unicode-rs&#47;unicode-width.git</code> error: no packages found with binaries or examples, I suppose the reason is repo doesn&#39;t contain the binaries"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1575549154, "post_id": 59193355, "comment_id": 104608689, "body": "Do you want to use it as a program or as a library? If the latter then please read <a href=\"https://stackoverflow.com/questions/37706999/error-installing-a-crate-via-cargo-specified-package-has-no-binaries\" title=\"error installing a crate via cargo specified package has no binaries\">stackoverflow.com/questions/37706999/&hellip;</a>"}, {"owner": {"reputation": 19, "user_id": 9312658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Xz4SaXq32wA/AAAAAAAAAAI/AAAAAAAAAFE/aOkK1o8fsTE/photo.jpg?sz=128", "display_name": "Arka Ray", "link": "https://stackoverflow.com/users/9312658/arka-ray"}, "edited": false, "score": 0, "creation_date": 1575550189, "post_id": 59193355, "comment_id": 104609275, "body": "the above log is from cargo install"}], "answers": [{"tags": [], "owner": {"reputation": 390, "user_id": 867695, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d415e223f7bb2407cd53114ef2d0aff5?s=128&d=identicon&r=PG", "display_name": "romanows", "link": "https://stackoverflow.com/users/867695/romanows"}, "is_accepted": false, "score": 0, "last_activity_date": 1575596332, "last_edit_date": 1575596332, "creation_date": 1575595910, "answer_id": 59205617, "question_id": 59193355, "link": "https://stackoverflow.com/questions/59193355/how-do-i-use-char-width-in-rust/59205617#59205617", "title": "How do I use char_width in rust?", "body": "<p>Guessing your best bet is to <a href=\"https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-dependencies-from-git-repositories\" rel=\"nofollow noreferrer\">add as a dependency</a> the <a href=\"https://github.com/lucy/wcwidth.rs\" rel=\"nofollow noreferrer\">original repository</a>.</p>\n\n<p>Otherwise, looks like the current behavior for crates.io is to continue providing the crate for users who already have it in their <code>Cargo.lock</code> file.  However, <a href=\"https://doc.rust-lang.org/cargo/guide/project-layout.html\" rel=\"nofollow noreferrer\">cargo will refuse to add a yanked crate to the <code>Cargo.lock</code> file</a>.  I'm guessing if you hand-edit a <a href=\"https://crates.io/crates/wcwidth/versions\" rel=\"nofollow noreferrer\">version on crates.io</a> into your existing <code>Cargo.lock</code> it'll download it for you and will at least attempt to build it.</p>\n"}], "owner": {"reputation": 19, "user_id": 9312658, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Xz4SaXq32wA/AAAAAAAAAAI/AAAAAAAAAFE/aOkK1o8fsTE/photo.jpg?sz=128", "display_name": "Arka Ray", "link": "https://stackoverflow.com/users/9312658/arka-ray"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1575596332, "creation_date": 1575542498, "question_id": 59193355, "link": "https://stackoverflow.com/questions/59193355/how-do-i-use-char-width-in-rust", "title": "How do I use char_width in rust?", "body": "<p>I am not able to install the crate corresponding to <code>char_width</code> ie. <code>wcwidth</code>. Seems like it has been taken down (according to <a href=\"https://crates.io/crates/wcwidth\" rel=\"nofollow noreferrer\">crates.io</a>) but is still available for download.</p>\n"}, {"tags": ["serialization", "rust", "deserialization", "serde", "bincode"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575540013, "post_id": 59192370, "comment_id": 104603804, "body": "Is payload a single object?"}, {"owner": {"reputation": 192, "user_id": 6416174, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/1a7fde54d0dcc8996550ae912e2edafa?s=128&d=identicon&r=PG&f=1", "display_name": "AdaShoelace", "link": "https://stackoverflow.com/users/6416174/adashoelace"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575540099, "post_id": 59192370, "comment_id": 104603861, "body": "@FrenchBoiethios It is a single object but it can ( and most likely will ) be nested objects. If that is what you wonder?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575540342, "post_id": 59192370, "comment_id": 104603964, "body": "Yes. What is the operation which fails?"}, {"owner": {"reputation": 192, "user_id": 6416174, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/1a7fde54d0dcc8996550ae912e2edafa?s=128&d=identicon&r=PG&f=1", "display_name": "AdaShoelace", "link": "https://stackoverflow.com/users/6416174/adashoelace"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575540487, "post_id": 59192370, "comment_id": 104604037, "body": "@FrenchBoiethios The deserializing once we consume the message from RabbitMQ:  <code>bincode::deserialize::&lt;Incoming&gt;(delivery.data.as_slice());</code>"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1575540690, "post_id": 59192370, "comment_id": 104604138, "body": "It seems the json object initially presented to you was <code>[u8]</code>? (Thus you called <code>serde_json::from_slice</code> on it). Would sending that verbatim and decoding it on the receiver side work?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575540815, "post_id": 59192370, "comment_id": 104604207, "body": "It seems that this just isn&#39;t supported by <code>bincode</code>: <a href=\"https://docs.rs/bincode/1.2.0/bincode/enum.ErrorKind.html#variant.DeserializeAnyNotSupported\" rel=\"nofollow noreferrer\">docs.rs/bincode/1.2.0/bincode/&hellip;</a> But I don&#39;t know much about that"}, {"owner": {"reputation": 192, "user_id": 6416174, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/1a7fde54d0dcc8996550ae912e2edafa?s=128&d=identicon&r=PG&f=1", "display_name": "AdaShoelace", "link": "https://stackoverflow.com/users/6416174/adashoelace"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1575541021, "post_id": 59192370, "comment_id": 104604316, "body": "@edwardw It comes from  a <code>hyper::Chunk</code>. Unfortunately I need to serialize it into the struct for other purposes before publishing it to RabbitMQ. Though I might be able to clone it and publish the raw chunk anyway."}, {"owner": {"reputation": 192, "user_id": 6416174, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/1a7fde54d0dcc8996550ae912e2edafa?s=128&d=identicon&r=PG&f=1", "display_name": "AdaShoelace", "link": "https://stackoverflow.com/users/6416174/adashoelace"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1575550981, "post_id": 59192370, "comment_id": 104609738, "body": "@edwardw It worked! I now publish the <code>hyper::Chunk</code> verbatim to RabbitMQ and deserialze it using <code>serde _json</code> in the consumer without any problems."}], "owner": {"reputation": 192, "user_id": 6416174, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/1a7fde54d0dcc8996550ae912e2edafa?s=128&d=identicon&r=PG&f=1", "display_name": "AdaShoelace", "link": "https://stackoverflow.com/users/6416174/adashoelace"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 298, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1575540619, "creation_date": 1575539539, "last_edit_date": 1575540619, "question_id": 59192370, "link": "https://stackoverflow.com/questions/59192370/serialize-and-deserialize-unknown-json-to-binary", "title": "Serialize and deserialize unknown JSON to binary", "body": "<p>I'm writing a microservice that takes a json object as input. This json object is only partially known and therefore the struct to which I map it looks like this: </p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\npub struct Incoming {\n    uri: String,\n    payload: serde_json::Value,\n    id: String\n}\n</code></pre>\n\n<p>I then want to publish this to a RabbitMQ queue so I serialize it using <code>bincode</code>:</p>\n\n<pre><code>let incoming = serde_json::from_slice::&lt;Incoming&gt;(&amp;incoming).expect(\"Fail to serialize\");\n// This line fails:\nbincode::serialize(&amp;incoming).expect(\"Failed to deserialize to binary\");\n</code></pre>\n\n<p>The receiving service (the consumer) fails to deserialize this (even though it has the exact same model) and results in <code>Err(DeserializeAnyNotSupported)</code>.</p>\n\n<p>From my understanding this comed from the <code>serde_json::Value</code>-part of the struct.\nSo how do I serialize a partially unknown JSON-object to binary in order to deserialize it on the receiving service?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575537979, "post_id": 59191853, "comment_id": 104602636, "body": "If you have <code>Vec</code>, you do have <code>String</code> (that&#39;s basically the same thing)."}, {"owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575538424, "post_id": 59191853, "comment_id": 104602892, "body": "@FrenchBoiethios but how would you do it without going through a String?  I added some comment above on how I would do it if I can use String."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1575538578, "post_id": 59191853, "comment_id": 104602985, "body": "What I was saying is that AFAIK, there is no such an environment with <code>Vec</code>s but without <code>String</code>s."}, {"owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1575539050, "post_id": 59191853, "comment_id": 104603273, "body": "It is a <code>no_std</code> environment, but my team import most of the <code>core</code> libs, and some of the alloc::*, so I have <code>alloc::vec</code> to use.  Thank you for your reply! \ud83d\ude4f"}], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1575540199, "last_edit_date": 1575540199, "creation_date": 1575538516, "answer_id": 59192072, "question_id": 59191853, "link": "https://stackoverflow.com/questions/59191853/how-can-i-convert-from-vecchar-to-u32-in-rust-without-going-through-string/59192072#59192072", "title": "How can I convert from Vec&lt;char&gt; to u32 in Rust without going through String?", "body": "<p>You must convert each <code>char</code> to a digit (in the <code>map</code>) and then you multiply each previous result by 10 and you add the new digit:</p>\n\n<pre><code>/// Returns `None` in case of invalid digit.\npub fn vec_to_int(digits: impl IntoIterator&lt;Item = char&gt;) -&gt; Option&lt;u32&gt; {\n    const RADIX: u32 = 10;\n\n    digits\n        .into_iter()\n        .map(|c| c.to_digit(RADIX))\n        .try_fold(0, |ans, i| i.map(|i| ans * RADIX + i))\n}\n\n#[test]\nfn it_works() {\n    let nums = vec!['1', '2'];\n    let num = vec_to_int(nums);\n\n    assert_eq!(Some(12), num);\n}\n\n#[test]\nfn invalid_digit() {\n    let nums = vec!['1', 'a'];\n    let num = vec_to_int(nums);\n\n    assert_eq!(None, num);\n}\n</code></pre>\n"}], "owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 0, "accepted_answer_id": 59192072, "answer_count": 1, "score": 0, "last_activity_date": 1575540199, "creation_date": 1575537782, "last_edit_date": 1575538381, "question_id": 59191853, "link": "https://stackoverflow.com/questions/59191853/how-can-i-convert-from-vecchar-to-u32-in-rust-without-going-through-string", "title": "How can I convert from Vec&lt;char&gt; to u32 in Rust without going through String?", "body": "<p>My rust code runs in an environment where I have no access to <code>std::string</code> and <code>std::*</code> (but I have access to <code>core::str</code>). How can I convert a <code>Vec&lt;char&gt;</code> to <code>u32</code> without going through <code>String</code>, such as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let num_in_chars: Vec&lt;char&gt; = vec!['1', '2'];\n\n// some process here\n// let num = ...\n// This is how I could do it if I have access to `String`\n// let num = num_in_chars.iter().collect::&lt;String&gt;().parse::&lt;u32&gt;().unwrap();\nassert_eq!(12, num);\n</code></pre>\n\n<p>Thanks</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": false, "score": 5, "last_activity_date": 1575528511, "last_edit_date": 1575528511, "creation_date": 1575518078, "answer_id": 59188003, "question_id": 59187608, "link": "https://stackoverflow.com/questions/59187608/can-i-use-write-and-file-write-all-in-same-fn/59188003#59188003", "title": "Can I use `write!` and `file.write_all` in same fn?", "body": "<p>After fixing some typos in your code, we're left with this error on playgrounds compiler.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0252]: the name `Write` is defined multiple times\n  --&gt; src/lib.rs:95:5\n   |\n94 | use std::fmt::Write;\n   |     --------------- previous import of the trait `Write` here\n95 | use std::io::Write;\n   |     ^^^^^^^^^^^^^^ `Write` reimported here\n   |\n   = note: `Write` must be defined only once in the type namespace of this module\nhelp: you can use `as` to change the binding name of the import\n</code></pre>\n\n<p>Your problem is that <code>Write</code> is imported twice. But since you're only pulling <code>std::io::Write</code> in to get to the trait - you can import it under any name you like. So just following the suggestion in the error message gives us:</p>\n\n<pre><code>use std::fs::File;\nuse std::fmt::Write;\nuse std::io::Write as OtherWrite;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut p = String::new();\n    (1..6).for_each(|n| {write!(&amp;mut p, \"{},\", n);} );\n    let mut file = File::create(\"a.csv\")?;\n    file.write_all(p.as_bytes())?;\n    Ok(())\n}\n</code></pre>\n\n<p>which compiles OK for me.</p>\n"}, {"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 5, "last_activity_date": 1575530538, "last_edit_date": 1575530538, "creation_date": 1575528824, "answer_id": 59189751, "question_id": 59187608, "link": "https://stackoverflow.com/questions/59187608/can-i-use-write-and-file-write-all-in-same-fn/59189751#59189751", "title": "Can I use `write!` and `file.write_all` in same fn?", "body": "<p>Since <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1330-2019-02-28\" rel=\"nofollow noreferrer\">Rust 1.33</a> it is possible to use the <a href=\"https://github.com/rust-lang/rust/pull/56303/\" rel=\"nofollow noreferrer\"><code>underscore_imports</code> feature</a>, which means you can write this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fmt::Write as _;\nuse std::fs::File;\nuse std::io::Write as _;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut p = String::new();\n    (1..6).for_each(|n| {\n        write!(&amp;mut p, \"{},\", n);\n    });\n    let mut file = File::create(\"a.csv\")?;\n    file.write_all(p.as_bytes())?;\n    Ok(())\n}\n</code></pre>\n\n<p>which brings all traits into scope without a clash in the namespace.</p>\n\n<p>But, if you want to do something like</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    Write::write_all(&amp;mut file, p.as_bytes())\n}\n</code></pre>\n\n<p>you have to import the correct trait again without the underscore. </p>\n"}], "owner": {"reputation": 95, "user_id": 10006371, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MgoBLeEfWnY/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq1X-kVzrU9is8qtxK3uPuWf2XX-Ag/mo/photo.jpg?sz=128", "display_name": "Excosy S.P.", "link": "https://stackoverflow.com/users/10006371/excosy-s-p"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 423, "favorite_count": 0, "accepted_answer_id": 59189751, "answer_count": 2, "score": 1, "last_activity_date": 1575530538, "creation_date": 1575515140, "last_edit_date": 1575528499, "question_id": 59187608, "link": "https://stackoverflow.com/questions/59187608/can-i-use-write-and-file-write-all-in-same-fn", "title": "Can I use `write!` and `file.write_all` in same fn?", "body": "<pre><code>use std::fmt::Write;\nuse std::fs::File;\nuse std::io::Write;\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    let mut p = String::new();\n    (1..6).for_each(|n| {\n        write!(&amp;mut p, \"{},\", n);\n    });\n    let mut file = File::create(\"a.csv\")?;\n    file.write_all(p.as_bytes())?;\n    Ok(())\n}\n</code></pre>\n\n<p>When compiled I got an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `write_all` found for type `std::fs::File` in the current scope\n</code></pre>\n\n<p>and a warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unused import: `std::io::Write`\n</code></pre>\n\n<p>How to concat an array to a string and write into a file?</p>\n"}, {"tags": ["error-handling", "rust", "idioms"], "answers": [{"comments": [{"owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "edited": false, "score": 1, "creation_date": 1575517860, "post_id": 59187709, "comment_id": 104595692, "body": "As an alternative, you could avoid writing <code>From</code> implementations by declaring <code>my_values</code> to be of type <code>Result&lt;Vec&lt;u32&gt;,Box&lt;dyn Error&gt;&gt;</code>, as <code>?</code> auto boxes Errors. See also: <a href=\"https://stackoverflow.com/questions/48430836/rust-proper-error-handling-auto-convert-from-one-error-type-to-another-with-que\" title=\"rust proper error handling auto convert from one error type to another with que\">stackoverflow.com/questions/48430836/&hellip;</a>"}, {"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "reply_to_user": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "edited": false, "score": 2, "creation_date": 1575518266, "post_id": 59187709, "comment_id": 104595806, "body": "@asky Yep, that will work too. But I think it can then be tricky to get back the concrete type of the original error, if you want to do any more advanced error handling later. (Which is probably a big part of why there are so many error handling crates)."}], "tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": true, "score": 2, "last_activity_date": 1575515877, "creation_date": 1575515877, "answer_id": 59187709, "question_id": 59187274, "link": "https://stackoverflow.com/questions/59187274/rust-read-and-map-lines-from-stdin-and-handling-different-error-types/59187709#59187709", "title": "Rust: Read and map lines from stdin and handling different error types", "body": "<p>You're on the right track.\nThe way I'd approach this is by using the enum you've defined,\nthen add implementations of <code>From</code> for the error types you're interested in.\nThat will allow you to use the <code>?</code> operator on your maps to get the kind of behaviour you want.</p>\n\n<pre><code>#[derive(Debug)]\nenum MyError {\n    IOError(std::io::Error),\n    ParseIntError(std::num::ParseIntError),\n}\n\nimpl From&lt;std::io::Error&gt; for MyError {\n    fn from(e:std::io::Error) -&gt; MyError {\n        return MyError::IOError(e)\n    }\n}\n\nimpl From&lt;std::num::ParseIntError&gt; for MyError {\n    fn from(e:std::num::ParseIntError) -&gt; MyError {\n        return MyError::ParseIntError(e)\n    }\n}\n\n</code></pre>\n\n<p>Then you can implement the actual transform as either</p>\n\n<pre><code>let my_values: Vec&lt;_&gt; = stdin\n    .lock()\n    .lines()\n    .map(|line| -&gt; Result&lt;u32,MyError&gt; { Ok(line?.parse::&lt;u32&gt;()?*2) } )\n    .collect();\n</code></pre>\n\n<p>which will give you one entry for each input, like: <code>{Ok(x), Err(MyError(x)), Ok(x)}</code>.\nor you can do:</p>\n\n<pre><code>let my_values: Result&lt;Vec&lt;_&gt;,MyError&gt; = stdin\n    .lock()\n    .lines()\n    .map(|line| -&gt; Result&lt;u32,MyError&gt; { Ok(line?.parse::&lt;u32&gt;()?*2) } )\n    .collect();\n</code></pre>\n\n<p>Which will give you either <code>Err(MyError(...))</code> or <code>Ok([1,2,3])</code></p>\n\n<p>Note that you can further reduce some of the error boilerplate by using an error handling crate like <code>snafu</code>, but in this case it's not too much.</p>\n"}], "owner": {"reputation": 1746, "user_id": 233839, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/d65b64474e1d38a2483ff000a1213832?s=128&d=identicon&r=PG", "display_name": "Zeta Two", "link": "https://stackoverflow.com/users/233839/zeta-two"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 273, "favorite_count": 0, "accepted_answer_id": 59187709, "answer_count": 1, "score": 2, "last_activity_date": 1575515877, "creation_date": 1575512426, "question_id": 59187274, "link": "https://stackoverflow.com/questions/59187274/rust-read-and-map-lines-from-stdin-and-handling-different-error-types", "title": "Rust: Read and map lines from stdin and handling different error types", "body": "<p>I'm learning Rust and trying to solve some basic algorithm problems with it. In many cases, I want to read lines from stdin, perform some transformation on each line and return a vector of resulting items. One way I did this was like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    // Fully working Rust code\n    let my_values: Vec&lt;u32&gt; = stdin\n        .lock()\n        .lines()\n        .filter_map(Result::ok)\n        .map(|line| line.parse::&lt;u32&gt;())\n        .filter_map(Result::ok)\n        .map(|x|x*2) // For example\n        .collect();\n</code></pre>\n\n<p>This works but of course silently ignores any errors that may occur. Now what I woud like to do is something along the lines of:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    // Pseudo-ish code\n    let my_values: Result&lt;Vec&lt;u32&gt;, X&gt; = stdin\n        .lock()\n        .lines() // Can cause std::io::Error\n        .map(|line| line.parse::&lt;u32&gt;()) // Can cause std::num::ParseIntError\n        .map(|x| x*2)\n        .collect();\n</code></pre>\n\n<p>Where X is some kind of error type that I can match on afterwards. Preferably I want to perform the whole operation on one line at a time and immediately discard the string data after it has been parsed to an int.</p>\n\n<p>I think I need to create some kind of Enum type to hold the various possible errors, possibly like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug)]\nenum InputError {\n    Io(std::io::Error),\n    Parse(std::num::ParseIntError),\n}\n</code></pre>\n\n<p>However, I don't quite understand how to put everything together to make it clean and avoid having to explicitly match and cast everywhere. Also, is there some way to automatically create these enum error types or do I have to explicilty enumerate them every time I do this?</p>\n"}]