[{"tags": ["rust", "rust-crates"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1443654391, "creation_date": 1443654391, "answer_id": 32876946, "question_id": 32875999, "link": "https://stackoverflow.com/questions/32875999/how-to-define-a-multi-level-crate/32876946#32876946", "title": "How to define a multi level crate?", "body": "<p>You've added an extra level of nesting. Your main works if you change it to be</p>\n\n<pre><code>extern crate myapp;\nuse myapp::myapp::a;\n\nfn main() {\n    unimplemented!();\n}\n</code></pre>\n\n<p>Crates form their own level in the path, so the first <code>myapp</code> refers to the crate, the second <code>myapp</code> refers to the module you've created.</p>\n\n<p>On a side note, it's rare to see a crate with this level of nesting and bifurcation. Rust crates tend to have larger chunks of code per file, and certainly not the one-struct-per-file that is common in other languages. This is all in my experience, of course, and isn't a hard-and-fast rule.</p>\n"}], "owner": {"reputation": 396, "user_id": 2047097, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/029787cf14150922927942fba8f531d3?s=128&d=identicon&r=PG", "display_name": "Spack", "link": "https://stackoverflow.com/users/2047097/spack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 0, "accepted_answer_id": 32876946, "answer_count": 1, "score": 1, "last_activity_date": 1443687422, "creation_date": 1443648836, "last_edit_date": 1443687422, "question_id": 32875999, "link": "https://stackoverflow.com/questions/32875999/how-to-define-a-multi-level-crate", "title": "How to define a multi level crate?", "body": "<p>I'm trying to define the <em>crate</em> going along with my Rust application as explained in the <a href=\"https://doc.rust-lang.org/stable/book/crates-and-modules.html\" rel=\"nofollow\">documentation</a>. Let's take the following directory structure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>src/\n\u251c\u2500 lib.rs\n\u251c\u2500 main.rs\n\u2514\u2500 myapp/\n  \u251c\u2500 a/\n  \u2502 \u251c\u2500 a1.rs\n  \u2502 \u2514\u2500 mod.rs\n  \u2514\u2500 mod.rs\n</code></pre>\n\n<p>Now I defined the following in my rust files:</p>\n\n<h2>lib.rs</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub mod myapp;\n</code></pre>\n\n<h2>main.rs</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate myapp;\nuse myapp::a;\n\nfn main() {\n    unimplemented!();\n}\n</code></pre>\n\n<h2>myapp/mod.rs</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub mod a;\n</code></pre>\n\n<h2>myapp/a/mod.rs</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub use self::a1::*;\nmod a1;\n</code></pre>\n\n<h2>myapp/a/a1.rs</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn myfunc()\n{\n    unimplemented!();\n}\n</code></pre>\n\n<p>If I try to compile the above directory tree, I got the error:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cargo build\nCompiling myapp v0.1.0\nsrc/main.rs:2:5: 2:13 error: unresolved import `myapp::a`. There is no `a` in `myapp` [E0432]\nsrc/main.rs:2 use myapp::a;\n                  ^~~~~~~~\nsrc/main.rs:2:5: 2:13 help: run `rustc --explain E0432` to see a detailed explanation\nerror: aborting due to previous error\nCould not compile `myapp`.\n</code></pre>\n\n<p>Where am I wrong here? I think I have the same directory structure as the one shown in the documentation.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1443646627, "post_id": 32874499, "comment_id": 53582364, "body": "The <code>fmt</code> you called was <code>Debug::fmt</code> on <code>String</code>, which escapes special characters like that."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443731473, "post_id": 32874685, "comment_id": 53621978, "body": "Strings do not automatically escape characters."}, {"owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443731662, "post_id": 32874685, "comment_id": 53622072, "body": "@Shepmaster Updated to clarify."}], "tags": [], "owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "is_accepted": true, "score": 7, "last_activity_date": 1443731628, "last_edit_date": 1443731628, "creation_date": 1443643572, "answer_id": 32874685, "question_id": 32874499, "link": "https://stackoverflow.com/questions/32874499/debug-trait-implementation-with-newline-characters/32874685#32874685", "title": "Debug trait implementation with newline characters", "body": "<p>Instead of using the <a href=\"https://doc.rust-lang.org/std/macro.format!.html\" rel=\"nofollow\"><code>format!</code></a> use the <a href=\"https://doc.rust-lang.org/std/macro.write!.html\" rel=\"nofollow\"><code>write!</code></a> macro. From looking at the documentation, <code>write!</code> writes directly onto the buffer, while <code>format!</code> creates a <code>String</code>, and formats the arguments into <code>fmt::Debug</code> which automatically escapes special characters.</p>\n\n<pre><code>use std::fmt;\n\nstruct A;\n\nimpl fmt::Debug for A {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"\\nA\\n\")\n    }\n} \n\nfn main() {\n    println!(\"{:?}\", A);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1443656039, "last_edit_date": 1495540771, "creation_date": 1443656039, "answer_id": 32877210, "question_id": 32874499, "link": "https://stackoverflow.com/questions/32874499/debug-trait-implementation-with-newline-characters/32877210#32877210", "title": "Debug trait implementation with newline characters", "body": "<p><a href=\"https://stackoverflow.com/questions/32874499/debug-trait-implementation-with-newline-characters#comment53582364_32874499\">Bluss's point</a> is the real solution to your mystery:</p>\n\n<pre><code>use std::fmt;\n\nstruct A;\n\nimpl fmt::Debug for A {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        fmt::Display::fmt(&amp;format!(\"\\nA\\n\"), f)\n    }\n} \n\nfn main() {\n    println!(\"{:?}\", A);\n}\n</code></pre>\n\n<p>Of course, the answer with <code>write!</code> is simpler in the end run, but it doesn't explain why you had the problem you did.</p>\n"}], "owner": {"reputation": 3753, "user_id": 4936, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/a4852818d512c2ed472bdb0ec3e21102?s=128&d=identicon&r=PG", "display_name": "ujh", "link": "https://stackoverflow.com/users/4936/ujh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 749, "favorite_count": 1, "accepted_answer_id": 32874685, "answer_count": 2, "score": 3, "last_activity_date": 1443731628, "creation_date": 1443642817, "question_id": 32874499, "link": "https://stackoverflow.com/questions/32874499/debug-trait-implementation-with-newline-characters", "title": "Debug trait implementation with newline characters", "body": "<p>Given the following program:</p>\n\n<pre><code>use std::fmt;\n\nstruct A;\n\nimpl fmt::Debug for A {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        format!(\"\\nA\\n\").fmt(f)\n    }\n} \n\nfn main() {\n    println!(\"{:?}\", A);\n}\n</code></pre>\n\n<p>I get the following output:</p>\n\n<pre><code>\"\\nA\\n\"\n</code></pre>\n\n<p>Is it somehow possible to get these newline characters \"translated\" into real newline characters? Unfortunately I can't use the <code>Display</code> trait as this is for use with <a href=\"https://github.com/carllerche/hamcrest-rust\" rel=\"nofollow\">hamcrest-rust</a> which uses the <code>Debug</code> trait when showing error messages.</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1443640740, "post_id": 32873514, "comment_id": 53579577, "body": "Don&#39;t worry about your English! I absolutely understood what you&#39;re asking. I fixed up one or two small things in an edit."}], "answers": [{"comments": [{"owner": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443641525, "post_id": 32874017, "comment_id": 53579958, "body": "Thank you for answer. I wrote something similiar to my macro but with for loops instead $()* (i dont know how implement it outside macros). And there is no warning."}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443641547, "post_id": 32874017, "comment_id": 53579969, "body": "Sounds like a bug to me then."}, {"owner": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443641806, "post_id": 32874017, "comment_id": 53580090, "body": "bug in rustc? (My version is 1.2.0)"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443641859, "post_id": 32874017, "comment_id": 53580105, "body": "Yup! I don&#39;t remember seeing one come through the tracker, but if you can get a test case, I think you should file it. <a href=\"https://github.com/rust-lang/rust/issues/new\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/new</a> (and 1.3 has come out, too, btw)"}, {"owner": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443642712, "post_id": 32874017, "comment_id": 53580493, "body": "Oh new version, nice) Rustc still show me warning so i will try to send bug report"}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 1, "last_activity_date": 1443640801, "creation_date": 1443640801, "answer_id": 32874017, "question_id": 32873514, "link": "https://stackoverflow.com/questions/32873514/how-do-i-eliminate-the-spurious-warning-value-assigned-is-never-read-in-a-macr/32874017#32874017", "title": "How do I eliminate the spurious warning &quot;value assigned is never read&quot; in a macro?", "body": "<p>Yes, it would look like something in the lint is off here. If you manually expand the code yourself, do you still get the warning? Or is it just when it's in a macro?</p>\n"}, {"comments": [{"owner": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443671600, "post_id": 32877161, "comment_id": 53589070, "body": "&quot;structure that you didn&#39;t provide in your question&quot; i thought that kind of structure is not matter in this question. I&#39;ll provide structure description in my further questions. Thank you for explanation."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 1, "creation_date": 1443704653, "post_id": 32877161, "comment_id": 53606381, "body": "@Dark_Daiver you are right that it doesn&#39;t matter in this case, but the <i>best</i> questions are the ones that can be pasted into <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the playground</a> and show the error you are getting. This is called an <a href=\"/help/mcve\">MCVE</a>. Then people don&#39;t have to modify your example code to be runnable, potentially changing it and getting a different error (and cause of that error), making a useless answer and wasting time."}, {"owner": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443707718, "post_id": 32877161, "comment_id": 53608403, "body": "I agree with you. Small as possible examples which describes question is important."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1443704506, "last_edit_date": 1495535383, "creation_date": 1443655792, "answer_id": 32877161, "question_id": 32873514, "link": "https://stackoverflow.com/questions/32873514/how-do-i-eliminate-the-spurious-warning-value-assigned-is-never-read-in-a-macr/32877161#32877161", "title": "How do I eliminate the spurious warning &quot;value assigned is never read&quot; in a macro?", "body": "<p>The warning is real; let's use this modified example that doesn't rely on a structure that you didn't provide in your question:</p>\n\n<pre><code>macro_rules! mat {\n    [ $($( $x: expr ),*);* ] =&gt; {{\n        let mut tmp_vec = Vec::new();\n        let mut rows = 0;\n        let mut cols = 0;\n        let mut is_first_row_collected = false;\n        $(\n            let mut inner_cols = 0;\n            $(\n                tmp_vec.push($x);\n                inner_cols += 1;\n            )*\n            if is_first_row_collected {//if we read first row we can check that other rows have same length\n                assert!(inner_cols == cols);\n            } else {\n                is_first_row_collected = true;\n                cols = inner_cols;\n            }\n            rows += 1;\n        )*\n        (tmp_vec, rows, cols)\n    }}\n}\n\nfn main() {\n    let _mat = mat![1.0, 2.0, 3.0; 4.0, 5.0, 6.0];\n}\n</code></pre>\n\n<p>We can then use the compiler to see what the expanded version is:</p>\n\n<pre><code>rustc -Z unstable-options --pretty expanded example.rs\n</code></pre>\n\n<p>This is a big, ugly blob of code, so I'll trim it down to the relevant parts:</p>\n\n<pre><code>fn main() {\n    let mut is_first_row_collected = false;\n\n    if is_first_row_collected {\n        // removed\n    } else {\n        is_first_row_collected = true;\n    }\n\n    if is_first_row_collected {\n        // removed\n    } else {\n        is_first_row_collected = true;\n    }\n}\n</code></pre>\n\n<p>So, indeed, the <em>value you assigned is never read</em>. Of course, as a human you can see that that particular flow shouldn't happen, and perhaps you could request an enhancement to the compiler to track that.</p>\n\n<p>Ideally, you'd rework your macro to not have the underlying problem. <a href=\"https://stackoverflow.com/a/32877780/155423\">Francis Gagn\u00e9 shows a great way of doing that</a>. If you can't rework the macro, you can allow that warning. Unfortunately, I don't know of any way to add the <code>#[allow(unused_assignments)]</code> declaration on anything but a <code>fn</code> or a <code>mod</code>, so it seems like you'd have to do some changes to your macro anyway.</p>\n"}, {"comments": [{"owner": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "edited": false, "score": 0, "creation_date": 1443708022, "post_id": 32877780, "comment_id": 53608620, "body": "Thank you for answer. Your post exactly answers my question but post from Shepmaster shows me that i was mistaken about spurious warning. So i cannot decide which post i should mark as answer."}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": false, "score": 4, "last_activity_date": 1443660093, "creation_date": 1443660093, "answer_id": 32877780, "question_id": 32873514, "link": "https://stackoverflow.com/questions/32873514/how-do-i-eliminate-the-spurious-warning-value-assigned-is-never-read-in-a-macr/32877780#32877780", "title": "How do I eliminate the spurious warning &quot;value assigned is never read&quot; in a macro?", "body": "<p>Instead of using a boolean variable, you could wrap <code>cols</code> in an <code>Option</code> to make it clear that <code>cols</code> has no valid value until you read the first row.</p>\n\n<pre><code>//fills matrix with matlab like syntax\nmacro_rules! mat {\n    [ $($( $x: expr ),*);* ] =&gt; {{\n        let mut tmp_vec = Vec::new();\n        let mut rows = 0;\n        let mut cols = None;\n        $(\n            let mut inner_cols = 0;\n            $(\n                tmp_vec.push($x);\n                inner_cols += 1;\n            )*\n            if let Some(cols) = cols {//if we read first row we can check that other rows have same length\n                assert!(inner_cols == cols);\n            } else {\n                cols = Some(inner_cols);\n            }\n            rows += 1;\n        )*\n        MatrixXf::construct(tmp_vec, rows, cols.unwrap_or(0))//fills MatrixXf fields\n    }}\n}\n</code></pre>\n\n<p>Another option is to handle the first row and the following rows differently by separating them in the macro's pattern. This way, we can avoid the flag entirely because when we handle the following rows, we already know the number of columns.</p>\n\n<pre><code>//fills matrix with matlab like syntax\nmacro_rules! mat {\n    [] =&gt; { MatrixXf::construct(Vec::new(), 0, 0) };\n    [ $( $x: expr ),* $(; $( $y: expr ),*)* ] =&gt; {{\n        let mut tmp_vec = Vec::new();\n        let mut rows = 0;\n        let mut inner_cols = 0;\n        $(\n            tmp_vec.push($x);\n            inner_cols += 1;\n        )*\n        let cols = inner_cols; // remember how many columns the first row has\n        rows += 1;\n        $(\n            inner_cols = 0;\n            $(\n                tmp_vec.push($y);\n                inner_cols += 1;\n            )*\n            assert!(inner_cols == cols); // check that the following rows have as many columns as the first row\n            rows += 1;\n        )*\n        MatrixXf::construct(tmp_vec, rows, cols)//fills MatrixXf fields\n    }}\n}\n</code></pre>\n\n<p>In this version of the macro, I added another rule to construct an empty matrix when there are no arguments and I moved the location of the semicolon so that you don't need a trailing semicolon when you have only one row.</p>\n"}], "owner": {"reputation": 1362, "user_id": 1349525, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/LXJ8Y.jpg?s=128&g=1", "display_name": "Dark_Daiver", "link": "https://stackoverflow.com/users/1349525/dark-daiver"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 931, "favorite_count": 0, "accepted_answer_id": 32877161, "answer_count": 3, "score": 2, "last_activity_date": 1443704506, "creation_date": 1443638869, "last_edit_date": 1443654590, "question_id": 32873514, "link": "https://stackoverflow.com/questions/32873514/how-do-i-eliminate-the-spurious-warning-value-assigned-is-never-read-in-a-macr", "title": "How do I eliminate the spurious warning &quot;value assigned is never read&quot; in a macro?", "body": "<p>I am new to Rust and am learning to write my own macros. This macro should fill my struct <code>MatrixXf</code> like the macro <code>vec!</code> does for <code>Vec&lt;T&gt;</code>.</p>\n\n<pre><code>//fills matrix with matlab like syntax\nmacro_rules! mat {\n    [ $($( $x: expr ),*);* ] =&gt; {{\n        let mut tmp_vec = Vec::new();\n        let mut rows = 0;\n        let mut cols = 0;\n        let mut is_first_row_collected = false;\n        $(\n            let mut inner_cols = 0;\n            $(\n                tmp_vec.push($x);\n                inner_cols += 1;\n            )*\n            if is_first_row_collected {//if we read first row we can check that other rows have same length\n                assert!(inner_cols == cols);\n            } else {\n                is_first_row_collected = true;\n                cols = inner_cols;\n            }\n            rows += 1;\n        )*\n        MatrixXf::construct(tmp_vec, rows, cols)//fills MatrixXf fields\n    }}\n}\n</code></pre>\n\n<p>And I use it this way:</p>\n\n<pre><code>let mat = mat![1.0, 2.0, 3.0; 4.0, 5.0, 6.0];\n</code></pre>\n\n<p>Everything is ok, but the compiler shows me the following warning:</p>\n\n<blockquote>\n  <p>7:23 warning: value assigned to <code>is_first_row_collected</code> is never read, #[warn(unused_assignments)] on by default\n  :7 is_first_row_collected = true ; cols = inner_cols ; } rows += 1 ; ) *</p>\n</blockquote>\n\n<p>Maybe I misunderstood something, but I do use <code>is_first_row_collected</code> when checking that the first row was visited. Is it possible to rewrite my code to avoid this warning? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 13948, "user_id": 283342, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e3ef6dbec3a443e7cda5b5624311ca08?s=128&d=identicon&r=PG&f=1", "display_name": "Adrian", "link": "https://stackoverflow.com/users/283342/adrian"}, "edited": false, "score": 1, "creation_date": 1443634881, "post_id": 32872013, "comment_id": 53576603, "body": "Here you go: <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/iter/trait.Iterator.html#method.map</a> You can use it like: <code>vec![1, 2, 3].into_iter().map(|x| x * 2).collect::&lt;Vec&lt;_&gt;&gt;()</code>"}], "answers": [{"comments": [{"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 0, "creation_date": 1443651278, "post_id": 32872974, "comment_id": 53584273, "body": "Say Steve, I am just wondering if there is a performance difference between the iterator/collect approach versus the <code>for</code> loop. I knows in python there is an important performance difference between loops, list comprehensions, and the <code>map()</code> function. Are there any performance guidelines for Rust on issues like this--mostly numerical computing?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "edited": false, "score": 1, "creation_date": 1443651324, "post_id": 32872974, "comment_id": 53584288, "body": "for loops are sugar for iterators in Rust: <a href=\"http://doc.rust-lang.org/stable/std/iter/index.html#rust%27s-for-loop\" rel=\"nofollow noreferrer\">doc.rust-lang.org/stable/std/iter/index.html#rust%27s-for-lo&zwnj;&#8203;op</a> so shouldn&#39;t be :)"}, {"owner": {"reputation": 146, "user_id": 6658352, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a840bf4dfd4f4acf84ac8292738bfa73?s=128&d=identicon&r=PG", "display_name": "Johan", "link": "https://stackoverflow.com/users/6658352/johan"}, "edited": false, "score": 0, "creation_date": 1570015858, "post_id": 32872974, "comment_id": 102779092, "body": "<code>map</code> returns a Map, a.k.a. as key-value pair (iterator). What I want is only the values, but in the right order (<code>Map::values()</code> gives an arbitrary order. So e.g. <code>0..10</code> gives me an iterator from 0 to 10. Now I want to apply &#39;|x| x*x` to this iterator to get an iterator with all squares, so {0, 1, 4, 9, ..., 100}."}, {"owner": {"reputation": 47877, "user_id": 414062, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/xc7mu.jpg?s=128&g=1", "display_name": "Dominic", "link": "https://stackoverflow.com/users/414062/dominic"}, "edited": false, "score": 0, "creation_date": 1616413556, "post_id": 32872974, "comment_id": 117985471, "body": "Thanks but what about calling multiple functions in the map callback?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1616510508, "post_id": 32872974, "comment_id": 118021047, "body": "It&#39;s a closure, you can put whatever you want in the body. Like any closure, you&#39;ll need {}s if you have more than one expression."}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 40, "last_activity_date": 1581438122, "last_edit_date": 1581438122, "creation_date": 1443636737, "answer_id": 32872974, "question_id": 32872013, "link": "https://stackoverflow.com/questions/32872013/does-rust-have-a-way-to-apply-a-function-method-to-each-element-in-an-array-or-v/32872974#32872974", "title": "Does Rust have a way to apply a function/method to each element in an array or vector?", "body": "<p>Rust has <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map\" rel=\"noreferrer\"><code>Iterator::map</code></a>, so you can:</p>\n\n<pre><code>some_vec.iter().map(|x| /* do something here */)\n</code></pre>\n\n<p>However, <code>Iterator</code>s are lazy so this won't do anything by itself. You can tack a <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"noreferrer\"><code>.collect()</code></a> onto the end to make a new vector with the new elements, if that's what you want:</p>\n\n<pre><code>let some_vec = vec![1, 2, 3];\nlet doubled: Vec&lt;_&gt; = some_vec.iter().map(|x| x * 2).collect();\nprintln!(\"{:?}\", doubled);\n</code></pre>\n\n<p>The standard way to perform side effects is to use a <code>for</code> loop:</p>\n\n<pre><code>let some_vec = vec![1, 2, 3];\nfor i in &amp;some_vec {\n    println!(\"{}\", i);\n}\n</code></pre>\n\n<p>If the side effect should modify the values in place, you can use an iterator of mutable references:</p>\n\n<pre><code>let mut some_vec = vec![1, 2, 3];\nfor i in &amp;mut some_vec {\n    *i *= 2;\n}\nprintln!(\"{:?}\", some_vec); // [2, 4, 6]\n</code></pre>\n\n<p>If you really want the functional style, you can use the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.for_each\" rel=\"noreferrer\"><code>.for_each()</code></a> method:</p>\n\n<pre><code>let mut some_vec = vec![1, 2, 3];\nsome_vec.iter_mut().for_each(|i| *i *= 2);\nprintln!(\"{:?}\", some_vec); // [2, 4, 6]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4240, "user_id": 1541330, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9d7b0057ffc24e644c4a30ba599d7753?s=128&d=identicon&r=PG&f=1", "display_name": "U007D", "link": "https://stackoverflow.com/users/1541330/u007d"}, "is_accepted": false, "score": 17, "last_activity_date": 1549028570, "last_edit_date": 1549028570, "creation_date": 1525740110, "answer_id": 50224248, "question_id": 32872013, "link": "https://stackoverflow.com/questions/32872013/does-rust-have-a-way-to-apply-a-function-method-to-each-element-in-an-array-or-v/50224248#50224248", "title": "Does Rust have a way to apply a function/method to each element in an array or vector?", "body": "<p>Since Rust 1.21, the <code>std::iter::Iterator</code> trait defines a <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.for_each\" rel=\"noreferrer\"><code>for_each()</code></a> combinator which can be used to apply an operation to each element in the collection.  It is eager (not lazy), so <code>collect()</code> is not needed:</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![1, 2, 3, 4, 5];\n    vec.iter_mut().for_each(|el| *el *= 2);\n    println!(\"{:?}\", vec);\n}\n</code></pre>\n\n<p>The above code prints <code>[2, 4, 6, 8, 10]</code> to the console.</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=d7111b224a82862422aa712c3b7a0596&amp;version=stable&amp;mode=debug\" rel=\"noreferrer\">Rust playground</a></p>\n"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 22414, "favorite_count": 2, "accepted_answer_id": 32872974, "answer_count": 2, "score": 30, "last_activity_date": 1581438122, "creation_date": 1443633177, "last_edit_date": 1533221396, "question_id": 32872013, "link": "https://stackoverflow.com/questions/32872013/does-rust-have-a-way-to-apply-a-function-method-to-each-element-in-an-array-or-v", "title": "Does Rust have a way to apply a function/method to each element in an array or vector?", "body": "<p>Does the Rust language have a way to apply a function to each element in an array or vector?</p>\n\n<p>I know in Python there is the <code>map()</code> function which performs this task. In R there is the <code>lapply()</code>, <code>tapply()</code>, and <code>apply()</code> functions that also do this.</p>\n\n<p>Is there an established way to vectorize a function in Rust?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 1, "creation_date": 1443624149, "post_id": 32866549, "comment_id": 53569898, "body": "It looks like the index repository is broken for some reason. Consider removing <code>~&#47;.cargo&#47;registry&#47;index&#47;github.com-xxxxxx</code> and running the build again. Or you can remove <code>~&#47;.cargo</code> directory completely and start from scratch."}, {"owner": {"reputation": 694, "user_id": 5179678, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/HDDwl.jpg?s=128&g=1", "display_name": "mgul", "link": "https://stackoverflow.com/users/5179678/mgul"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1443624624, "post_id": 32866549, "comment_id": 53570260, "body": "Thanks for answer, I already have done this, always the same error."}], "answers": [{"tags": [], "owner": {"reputation": 694, "user_id": 5179678, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/HDDwl.jpg?s=128&g=1", "display_name": "mgul", "link": "https://stackoverflow.com/users/5179678/mgul"}, "is_accepted": true, "score": 1, "last_activity_date": 1443626412, "creation_date": 1443626412, "answer_id": 32869866, "question_id": 32866549, "link": "https://stackoverflow.com/questions/32866549/unable-to-update-registry-with-byteorder/32869866#32869866", "title": "Unable to update registry with byteorder", "body": "<p>Fixed ! I just reinstalled rust nightly with multirust :)</p>\n"}], "owner": {"reputation": 694, "user_id": 5179678, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/HDDwl.jpg?s=128&g=1", "display_name": "mgul", "link": "https://stackoverflow.com/users/5179678/mgul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 32869866, "answer_count": 1, "score": 1, "last_activity_date": 1443631109, "creation_date": 1443617336, "last_edit_date": 1443631109, "question_id": 32866549, "link": "https://stackoverflow.com/questions/32866549/unable-to-update-registry-with-byteorder", "title": "Unable to update registry with byteorder", "body": "<p>I have an error when I execute <code>cargo run</code>. I added the line <code>byteorder = \"0.3.13\"</code> to my Cargo.toml, and here is the output of <code>cargo run --verbose</code>:</p>\n\n<pre><code>Updating registry `https://github.com/rust-lang/crates.io-index`\nUnable to update registry https://github.com/rust-lang/crates.io-index\n\nCaused by:\nfailed to fetch `https://github.com/rust-lang/crates.io-index`\n\nCaused by:\n[9] Object not found - failed to find pack entry (c7c0b5bc32630012be674d1cacd1487d09a2c0b5)\n</code></pre>\n\n<p>When I remove the line, everything is ok. How do I fix this error?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 742, "user_id": 902456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1334f5308b6d2b590781861b8f777d68?s=128&d=identicon&r=PG", "display_name": "David Eagen", "link": "https://stackoverflow.com/users/902456/david-eagen"}, "edited": false, "score": 0, "creation_date": 1443627056, "post_id": 32868075, "comment_id": 53571870, "body": "Thank you. I made the change you suggested (and allowed a semi-colon separated list of paths), overrode the dependency using my modified version of cql-bindgen, and compilation completed successfully."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 742, "user_id": 902456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1334f5308b6d2b590781861b8f777d68?s=128&d=identicon&r=PG", "display_name": "David Eagen", "link": "https://stackoverflow.com/users/902456/david-eagen"}, "edited": false, "score": 0, "creation_date": 1443630101, "post_id": 32868075, "comment_id": 53573924, "body": "@DavidEagen great! I&#39;d suggest submitting your changes back upstream so you don&#39;t have to maintain your own fork and so others can benefit from your changes."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1449093883, "last_edit_date": 1449093883, "creation_date": 1443621595, "answer_id": 32868075, "question_id": 32861808, "link": "https://stackoverflow.com/questions/32861808/unable-to-add-to-the-rustc-link-search-path-of-a-dependency/32868075#32868075", "title": "Unable to add to the rustc-link-search path of a dependency", "body": "<p>A downstream user of a crate cannot make changes to how that crate is compiled, other than by <a href=\"http://doc.crates.io/manifest.html#the-[features]-section\" rel=\"nofollow\">features</a> that the crate exposes.</p>\n\n<p>When linking to existing native libraries, the Cargo <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow\">build script</a> is used to help find the appropriate libraries to link to.</p>\n\n<p>The correct solution here is to fix the upstream crate (cql_bindgen) <a href=\"https://github.com/tupshin/cql-bindgen/blob/f902f34e727654debb438f34e28960268ee8cb68/build.rs\" rel=\"nofollow\">build.rs</a> to allow end users to specify alternate paths to search within. One way of doing this is to use the <a href=\"http://doc.rust-lang.org/std/macro.option_env!.html\" rel=\"nofollow\"><code>option_env!</code></a> macro, something like:</p>\n\n<pre><code>if let Some(datastax_dir) = option_env!(\"CQL_BINDGEN_DATASTAX_LIB_PATH\") {\n    println!(\"cargo:rustc-link-search={}\", datastax_dir);\n}\n</code></pre>\n\n<p>Of course, you can <a href=\"http://doc.crates.io/guide.html#overriding-dependencies\" rel=\"nofollow\">override the dependency</a> with a local version as you iterate to get a solution that works locally.</p>\n\n<p>In the mean time, you can try installing your library in one of the hard-coded directories that are already searched.</p>\n"}], "owner": {"reputation": 742, "user_id": 902456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1334f5308b6d2b590781861b8f777d68?s=128&d=identicon&r=PG", "display_name": "David Eagen", "link": "https://stackoverflow.com/users/902456/david-eagen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2045, "favorite_count": 0, "accepted_answer_id": 32868075, "answer_count": 1, "score": 2, "last_activity_date": 1449093883, "creation_date": 1443603072, "last_edit_date": 1443621226, "question_id": 32861808, "link": "https://stackoverflow.com/questions/32861808/unable-to-add-to-the-rustc-link-search-path-of-a-dependency", "title": "Unable to add to the rustc-link-search path of a dependency", "body": "<p>I am trying to build a test app using <a href=\"https://github.com/tupshin/cassandra-rs\" rel=\"nofollow\">cassandra-rs</a> which uses the <a href=\"https://github.com/datastax/cpp-driver/\" rel=\"nofollow\">DataStax CPP driver</a>. I am using <code>cargo 0.6.0 (ec9398e 2015-09-29) (built from git)</code>. </p>\n\n<p>My DataStax driver is not located in the standard directories Cargo looks in.</p>\n\n<p>I added a build script specifying the path to the DataStax driver: </p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-link-search={}\", \"/path/to/dir/\");\n}\n</code></pre>\n\n<p>Here is my Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"castest\"\nversion = \"0.1.0\"\nbuild = \"build.rs\"\n\n[dependencies]\ncassandra=\"*\"\n</code></pre>\n\n<p>But <code>cargo build --verbose</code> shows that the additional search directory is not included when building.</p>\n\n<p>The package that the build is actually failing on is cql_bindgen which is a dependency of cassandra-rs. In that project there is this build.rs:</p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-flags=-l dylib=crypto\");\n    println!(\"cargo:rustc-flags=-l dylib=ssl\");\n    println!(\"cargo:rustc-flags=-l dylib=stdc++\");\n    println!(\"cargo:rustc-flags=-l dylib=uv\");\n    println!(\"cargo:rustc-link-search={}\", \"/usr/lib/\");\n    println!(\"cargo:rustc-link-search={}\", \"/usr/local/lib64\");\n    println!(\"cargo:rustc-link-lib=static=cassandra_static\");\n}\n</code></pre>\n\n<p>How can I add additional libraries or otherwise override configuration in my project that is set in dependent projects?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "edited": false, "score": 2, "creation_date": 1443593245, "post_id": 32857265, "comment_id": 53551084, "body": "Incidentally, trait methods can be specified in a few ways, e.g. <code>str::to_owned</code> works (when there&#39;s only one <code>to_owned</code> on <code>str</code> in scope), as does <code>&lt;str&gt;::to_owned</code> and <code>&lt;str as ToOwned&gt;::to_owned</code>, the latter being the fully qualified form."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1443583672, "creation_date": 1443583672, "answer_id": 32857265, "question_id": 32857158, "link": "https://stackoverflow.com/questions/32857158/can-i-use-a-method-or-a-function-as-a-closure/32857265#32857265", "title": "Can I use a method or a function as a closure?", "body": "<p>You can absolutely use a method or a function as a closure. You use the full path to the function or method, including trait methods:</p>\n\n<p>A free function:</p>\n\n<pre><code>struct Monster {\n    health: u8,\n}\n\nfn just_enough_attack(m: Monster) -&gt; u8 {\n    m.health + 2\n}\n\nfn main() {\n    let sully = Some(Monster { health: 42 });\n    let health = sully.map(just_enough_attack);\n}\n</code></pre>\n\n<p>An <em>inherent</em> method:</p>\n\n<pre><code>struct Monster {\n    health: u8,\n}\n\nimpl Monster {\n    fn health(&amp;self) -&gt; u8 { self.health }\n}\n\nfn main() {\n    let sully = Some(Monster { health: 42 });\n    let health = sully.as_ref().map(Monster::health);\n}\n</code></pre>\n\n<p>A trait method:</p>\n\n<pre><code>fn main() {\n    let name = Some(\"hello\");\n    let owned_name = name.map(ToOwned::to_owned);\n}\n</code></pre>\n\n<p>Note that the argument type must match exactly, this includes by-reference or by-value.</p>\n"}], "owner": {"reputation": 1020, "user_id": 2752850, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2e7ea3ae5dd4eb7dea7aa992aa970287?s=128&d=identicon&r=PG", "display_name": "Kites", "link": "https://stackoverflow.com/users/2752850/kites"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1822, "favorite_count": 2, "accepted_answer_id": 32857265, "answer_count": 1, "score": 8, "last_activity_date": 1443583672, "creation_date": 1443582935, "question_id": 32857158, "link": "https://stackoverflow.com/questions/32857158/can-i-use-a-method-or-a-function-as-a-closure", "title": "Can I use a method or a function as a closure?", "body": "<p>I have some methods on a struct that I'd like to pass around as parameters. I'm pretty sure the only way to pass around functions is by using closures. Is there a way I can do this without doing \n<code>|| { self.x() }</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443567682, "post_id": 32855067, "comment_id": 53543885, "body": "Have you done any searching on <a href=\"https://crates.io\" rel=\"nofollow noreferrer\">crates.io</a>? A quick search found <a href=\"https://crates.io/crates/prettytable-rs\" rel=\"nofollow noreferrer\">prettytable-rs</a> and <a href=\"https://crates.io/crates/text_table\" rel=\"nofollow noreferrer\">text_table</a> which seem promising."}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443569093, "post_id": 32855067, "comment_id": 53544344, "body": "Oh I see. I had checked on crates.io, but kept looking for matrix or dataframe or array, so I found nalgebra and some other math libraries. Prettytable-rs looks like the most usable one. Thanks."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1443570766, "post_id": 32855067, "comment_id": 53544773, "body": "I wrote <a href=\"https://crates.io/crates/tabwriter\" rel=\"nofollow noreferrer\">tabwriter</a> which solves this problem by implementing elastic tab stops. All you need to do is write <code>\\t</code> as a field separator and it does the rest (alignment)."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443596658, "post_id": 32855067, "comment_id": 53552540, "body": "<b>Note for the would-be answerer:</b> software recommendation is explicitly off-topic on Stack-Overflow, if you wish to recommend a library, please explain how this library manages to accomplish this job."}, {"owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1443632118, "post_id": 32855067, "comment_id": 53575127, "body": "@MatthieuM. Thanks for the info, I did not know that. I was going to write up a solution based upon my experience with both of the libraries above, to compare them. I think that should comply with the requirement."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443633264, "post_id": 32855067, "comment_id": 53575704, "body": "@krishnab: If your code can be used without the libraries (for example offline), then it definitely fits; if it requires the libraries but shows exactly how to use them and explain it, it probably fits; if it&#39;s just a couple links and a couple bullet points comparing them (no code), it probably doesn&#39;t... for everything in the middle things are blurry :D"}], "owner": {"reputation": 7076, "user_id": 1610428, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/e6gnk.jpg?s=128&g=1", "display_name": "krishnab", "link": "https://stackoverflow.com/users/1610428/krishnab"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 640, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1443567530, "creation_date": 1443567392, "last_edit_date": 1443567530, "question_id": 32855067, "link": "https://stackoverflow.com/questions/32855067/is-there-a-way-to-print-a-nicely-formatted-table-to-the-console", "title": "Is there a way to print a nicely formatted table to the console?", "body": "<p>Is there a way to print a nice table to the console using the Rust language? In the python world, I could create a numpy array or pandas dataframe to hold data values and then output them to the console, looking like this:  </p>\n\n<pre><code>       f1          f2          f3         m1          m2          m3  \n0   14.000000    3.000000   19.000000  37.000000   28.000000  239.000000   \n1   14.279622    4.046231   19.202175  36.720378   26.228172  238.797825   \n2   14.530399    5.098601   19.413289  36.469601   24.454171  238.586711   \n3   14.755486    6.153470   19.633712  36.244514   22.681652  238.366288   \n</code></pre>\n\n<p>Is there a way to do this in Rust with arbitrary precision?</p>\n\n<p>I have looked at the vector and array datatypes. While multidimensional arrays are possible in Rust, I have not really seen anyone print nicely formatted tables like the one above.</p>\n"}, {"tags": ["casting", "rust"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 5, "last_activity_date": 1443753688, "last_edit_date": 1443753688, "creation_date": 1443567639, "answer_id": 32855106, "question_id": 32854394, "link": "https://stackoverflow.com/questions/32854394/can-casting-in-safe-rust-ever-lead-to-a-runtime-error/32855106#32855106", "title": "Can casting in safe Rust ever lead to a runtime error?", "body": "<p>Casting with <code>as</code> in Rust is very limited. It only allows casting between primitive numeric and character types, between pointers and references and for creating trait objects out of values of concrete types, and that's all - <code>as</code> is not overloadable, for example. Therefore, casting with <code>as</code> is always panic-free, though you can observe numeric overflows if you're casting a value which can't be represented in the target type, which may or may not be desirable.</p>\n\n<p>In Rust there is no such thing as the cast operator from C# or Java. The closest thing to it would be <code>std::mem::transmute()</code> which is a lot like <code>reinterpret_cast</code> from C++. It is <code>unsafe</code>, however, and even it has its limitations - it can only transform values of types having the same size.</p>\n"}, {"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1443609943, "post_id": 32857614, "comment_id": 53560374, "body": "one more solution would be to emit a compile time error if it cannot be statically determined that the <code>x as i32</code> cast is valid."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 4, "last_activity_date": 1443585933, "creation_date": 1443585933, "answer_id": 32857614, "question_id": 32854394, "link": "https://stackoverflow.com/questions/32854394/can-casting-in-safe-rust-ever-lead-to-a-runtime-error/32857614#32857614", "title": "Can casting in safe Rust ever lead to a runtime error?", "body": "<p>Well, that depends on how you define \"runtime error\" and \"result in\".</p>\n\n<p>As Vladimir said <code>as</code> is just for primitive conversions that can't really fail.  But there is currently (Rust 1.3) an evil little hole in this: <a href=\"https://github.com/rust-lang/rust/issues/10184\" rel=\"nofollow\">casting floating point values to an integer</a>.</p>\n\n<p>If you try to cast a floating point value that doesn't have a corresponding integer value, the result is that you end up with an integer containing \"something\".  A weird \"something\" that LLVM assumes cannot exist (because <em>of course</em> you checked that the conversion made sense before you did it).  And compilers optimise based on things that can't happen.</p>\n\n<p>The net result is that you can crash or corrupt memory by using really big values to create weird undefined integers that produce inconsistent results at runtime, which <em>might</em> include both controlled and uncontrolled crashes.</p>\n\n<p>I mean, it's not <em>supposed</em> to do that, and the solution is <em>probably</em> going to involve making <code>as</code> panic, because <em>what else</em> do you do when someone asks the compiler to evaluate <code>f32::NAN as i32</code>?</p>\n"}], "owner": {"reputation": 21581, "user_id": 288703, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/1bb69b75c5e73a7c9f4ebbc4835d622f?s=128&d=identicon&r=PG", "display_name": "Christoph", "link": "https://stackoverflow.com/users/288703/christoph"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 800, "favorite_count": 0, "accepted_answer_id": 32855106, "answer_count": 2, "score": 3, "last_activity_date": 1443753688, "creation_date": 1443563608, "question_id": 32854394, "link": "https://stackoverflow.com/questions/32854394/can-casting-in-safe-rust-ever-lead-to-a-runtime-error", "title": "Can casting in safe Rust ever lead to a runtime error?", "body": "<p>I'm fiddling a bit with <code>Any</code> and casting just to get a deeper understanding of Rust. From C# I'm used to the fact that casting can lead to runtime exceptions because casting in C# basically means <em>Dear compiler, trust me, I know what I'm doing please cast this into an <code>int32</code> because I know it will work.</em></p>\n\n<p>However, if you're doing an invalid cast the program will blow up with an Exception at runtime. So I was wondering if casting in (safe) Rust can equally lead to a runtime exception.</p>\n\n<p>So, I came up with this code to try it out.</p>\n\n<pre><code>use std::any::Any;\n\nfn main() {\n    let some_int = 4;\n    let some_str = \"foo\";\n    {\n      let mut v = Vec::&lt;&amp;Any&gt;::new();\n      v.push(&amp;some_int);\n      v.push(&amp;some_str);\n\n      // this gives a None\n      let x = v[0].downcast_ref::&lt;String&gt;();\n      println!(\"foo {:?}\", x);\n\n      //this gives Some(4)\n      let y = v[0].downcast_ref::&lt;i32&gt;();\n      println!(\"foo {:?}\", y);\n\n      //the compiler doesn't let me do this cast (which would lead to a runtime error)\n      //let z = v[1] as i32;\n\n    }\n}\n</code></pre>\n\n<p>My observation so far is that the compiler seems to prevent me from this kind of runtime exceptions because I have to cast through <code>downcast_ref</code> which returns an <code>Option</code> which makes it safe again. Sure, I can <code>unwrap</code> on a <code>None</code> to blow it up but that's not my point ;)</p>\n\n<p>The compiler prevents me from writing <code>let z = v[1] as i32;</code> which could lead to a runtime error. So, is it correct to assume that casting in safe Rust will never result in a runtime error?</p>\n\n<p>I know that preventing runtime errors is exactly what Rust is all about so it makes perfect sense, I just want to validate my observation :)</p>\n"}, {"tags": ["rust", "bitvector"], "comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 3, "creation_date": 1443548555, "post_id": 32848042, "comment_id": 53534707, "body": "Can you share what you <i>did</i> try?"}, {"owner": {"reputation": 121, "user_id": 5180198, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1af1ab3e963a8e7e800c60018b6810e?s=128&d=identicon&r=PG&f=1", "display_name": "Zihemu", "link": "https://stackoverflow.com/users/5180198/zihemu"}, "reply_to_user": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1443548952, "post_id": 32848042, "comment_id": 53534937, "body": "Oh sorry, I don&#39;t have the code anymore. I remember I used <code>enumerate</code> and <code>scan</code> though"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443549951, "post_id": 32848042, "comment_id": 53535505, "body": "Stack Overflow isn&#39;t a code-writing service. It&#39;s expected that you show some amount of effort towards solving your problem and then the community can help get you the last bit of the way. With your question as it currently is, the answer could range from &quot;wrap <code>fn search() { ... }</code> around your existing code&quot; to &quot;it&#39;s impossible&quot;."}, {"owner": {"reputation": 121, "user_id": 5180198, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1af1ab3e963a8e7e800c60018b6810e?s=128&d=identicon&r=PG&f=1", "display_name": "Zihemu", "link": "https://stackoverflow.com/users/5180198/zihemu"}, "edited": false, "score": 1, "creation_date": 1443550571, "post_id": 32848042, "comment_id": 53535810, "body": "I showed enough amount of effort on IRC (which AFAIK is also &quot;the community&quot;). I think this question is acceptable for this site, if you don&#39;t think so please point me to where you think I should add more information along with the page and paragraph in the help center that would make it off-topic or render it unacceptable or not fitting for SO and I will edit it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1443553867, "post_id": 32848042, "comment_id": 53537437, "body": "See <a href=\"/help/how-to-ask\">how to ask</a> (&quot;Help others reproduce the problem&quot;) as the first thing I found. Note that while there are helpful people everywhere on the Internet, we don&#39;t all intimately know each other or what the other group said. What you said on IRC is <b>completely useless</b> to the hundreds of developers that will find this question in the future without that context. Helping those developers is as important (or more) as helping you now. If you <a href=\"https://stackoverflow.com/posts/32848042/edit\">edit</a> your question to include what you have tried, that will help us answer your question and help others in the future learn as well."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 2, "creation_date": 1443554853, "post_id": 32848042, "comment_id": 53537909, "body": "Substring search (in this case a string of bits, with an alphabet of just 0 and 1) requires a <i>real algorithm</i> to be efficient, and I suspect this remains true even with just the binary alphabet. So we might need to find an interesting algorithm for this, surely some CS PhD has ran past this problem.."}, {"owner": {"reputation": 121, "user_id": 5180198, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1af1ab3e963a8e7e800c60018b6810e?s=128&d=identicon&r=PG&f=1", "display_name": "Zihemu", "link": "https://stackoverflow.com/users/5180198/zihemu"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443554944, "post_id": 32848042, "comment_id": 53537963, "body": "@Shepmaster Do the edits address your concerns?"}, {"owner": {"reputation": 121, "user_id": 5180198, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1af1ab3e963a8e7e800c60018b6810e?s=128&d=identicon&r=PG&f=1", "display_name": "Zihemu", "link": "https://stackoverflow.com/users/5180198/zihemu"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1443554977, "post_id": 32848042, "comment_id": 53537980, "body": "@bluss Interesting perspective, I&#39;m looking at this from a higher-level one though :D"}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1443555469, "post_id": 32848042, "comment_id": 53538267, "body": "<i>\u201cSEARCH of two bit-strings is the hardest sequence function of bit-vectors of all to efficiently implement.\u201d</i> <a href=\"http://www.pipeline.com/~hbaker1/BitSearch.html\" rel=\"nofollow noreferrer\">H. Baker</a>. Maybe because the rest are so easy."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1443555625, "post_id": 32848042, "comment_id": 53538355, "body": "The high level would be available if the algorithm were already implemented, but it isn&#39;t. :-)"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1443586491, "post_id": 32848042, "comment_id": 53548729, "body": "@bluss If the binary alphabet obviated the need for a &quot;real algorithm&quot;, other alphabets could just do a search over their bits and filter out misaligned data. They don&#39;t, ergo no such obviation exists."}, {"owner": {"reputation": 854, "user_id": 3989982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6941e7388870864da83acedf9e9c7693?s=128&d=identicon&r=PG&f=1", "display_name": "Tibor Benke", "link": "https://stackoverflow.com/users/3989982/tibor-benke"}, "edited": false, "score": 0, "creation_date": 1451555629, "post_id": 32848042, "comment_id": 56830546, "body": "Is it feasible to implement a suffix array based approach for you? You can find the exact position of your sequences with them: <a href=\"https://en.wikipedia.org/wiki/Suffix_array\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Suffix_array</a>"}], "owner": {"reputation": 121, "user_id": 5180198, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e1af1ab3e963a8e7e800c60018b6810e?s=128&d=identicon&r=PG&f=1", "display_name": "Zihemu", "link": "https://stackoverflow.com/users/5180198/zihemu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 150, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1443554906, "creation_date": 1443540615, "last_edit_date": 1443554906, "question_id": 32848042, "link": "https://stackoverflow.com/questions/32848042/find-a-sequence-in-a-bitvec", "title": "Find a sequence in a BitVec", "body": "<p>I have a large BitVec and I need to find sequences of set/unset bits of an exact length (ie n consective set/unset bits). How can I do that? I have tried <code>Iterator</code>s and <code>for</code> loops, but I wasn't able to wrap this into a general function.</p>\n\n<p><strong>UPDATE</strong>:\nAs requested, more info. The problem is I haven't found a way to</p>\n\n<ul>\n<li>efficiently find the position of the sequence</li>\n<li>make that into a general function</li>\n</ul>\n\n<p>What I mean by that is that what I was initially researching was of the form <code>fn find_sequence&lt;A: PartialEq&lt;A&gt;&gt;(v: &amp;[A], value: A, how_many: usize) ...</code>. Unfortunately, one can't return iterators (because of closures), yet, so that's 1 problem. The second, not being able to efficiently find the position, is that it wasn't clear to me what I'd have to perform in order to achieve what I wanted. Initially, I used <code>enumerate</code> to return position-value tuples, then <code>scan</code> to be able to find the sequence (ie <code>if x == val</code>, update the state and so on). Then I tried using for loops but it was clear to me that I wouldn't be able then make that into a general function (because of <code>how_many</code>, which wouldn't allow adding a precise number of if statements for every position, ie <code>x[0] == val</code>, <code>x[1] == val</code>...).</p>\n"}, {"tags": ["casting", "rust", "atomic", "undefined-behavior"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443450732, "post_id": 32822683, "comment_id": 53486668, "body": "Are you referring to the <a href=\"http://doc.rust-lang.org/reference.html#behavior-not-considered-unsafe\" rel=\"nofollow noreferrer\">Rust definition of safety</a> (also relevant, the <a href=\"http://doc.rust-lang.org/reference.html#behavior-considered-undefined\" rel=\"nofollow noreferrer\">undefined behavior</a>)? Or do you mean a more general type of &quot;safe&quot;?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443451621, "post_id": 32822683, "comment_id": 53487218, "body": "The Rust definition, mostly. Comments on especially surprising but-technically-safe problems would be a nice addition, though."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1443472659, "post_id": 32831241, "comment_id": 53498594, "body": "<i>on big-endian systems</i> \u2014 it&#39;d be cool if there was a way to have the CI ecosystems (like TravisCI) have ways to test {x86, ARM, ...}, and {big, little}-endian systems in addition to the {32, 64}-bit support I am familiar with."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1443477161, "post_id": 32831241, "comment_id": 53500676, "body": "Good catch! Using <code>struct Atomic&lt;&#39;a, T: Copy + &#39;a&gt;(AtomicUsize, PhantomData&lt;(&amp;&#39;a mut T, T)&gt;);</code>seems to fix the first issue. :)"}], "tags": [], "owner": {"reputation": 1987, "user_id": 5278682, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34509cba2b4d128dce294dcf5092d300?s=128&d=identicon&r=PG&f=1", "display_name": "Eli Friedman", "link": "https://stackoverflow.com/users/5278682/eli-friedman"}, "is_accepted": true, "score": 2, "last_activity_date": 1443472082, "creation_date": 1443472082, "answer_id": 32831241, "question_id": 32822683, "link": "https://stackoverflow.com/questions/32822683/safety-of-casting-arbitrary-types-to-usize/32831241#32831241", "title": "Safety of casting arbitrary types to usize", "body": "<p>It's almost safe... but not quite.  You're probably only thinking about people using <code>Atomic</code> with integers and floats, but references are also <code>Copy</code>.  A user could easily cause a crash using relaxed loads and stores on an <code>Atomic&lt;&amp;&amp;u32&gt;</code>.</p>\n\n<p>On a side-note, your <code>fetch_add</code> and <code>fetch_sub</code> won't work correctly on big-endian systems.</p>\n"}], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "accepted_answer_id": 32831241, "answer_count": 1, "score": 5, "last_activity_date": 1443476397, "creation_date": 1443442300, "last_edit_date": 1443476397, "question_id": 32822683, "link": "https://stackoverflow.com/questions/32822683/safety-of-casting-arbitrary-types-to-usize", "title": "Safety of casting arbitrary types to usize", "body": "<p>I wrote some code. It works... but is it safe?</p>\n\n<pre><code>use std::mem;\nuse std::ptr;\nuse std::marker::PhantomData;\n\nstruct Atomic&lt;T: Copy&gt;(AtomicUsize, PhantomData&lt;T&gt;);\n\nimpl&lt;T: Copy&gt; Atomic&lt;T&gt; {\n    unsafe fn encode(src: T) -&gt; usize {\n        assert!(mem::size_of::&lt;T&gt;() &lt;= mem::size_of::&lt;usize&gt;());\n\n        let mut dst = 0;\n        ptr::write(&amp;mut dst as *mut usize as *mut T, src);\n        dst\n    }\n\n    unsafe fn decode(src: usize) -&gt; T {\n        assert!(mem::size_of::&lt;T&gt;() &lt;= mem::size_of::&lt;usize&gt;());\n        ptr::read(&amp;src as *const usize as *const T)\n    }\n\n    fn new(val: T) -&gt; Atomic&lt;T&gt; {\n        unsafe {\n            Atomic(AtomicUsize::new(Self::encode(val)), PhantomData)\n        }\n    }\n\n    fn load(&amp;self, order: Ordering) -&gt; T {\n        unsafe { Self::decode(self.0.load(order)) }\n    }\n\n    fn store(&amp;self, val: T, order: Ordering) {\n        unsafe { self.0.store(Self::encode(val), order) }\n    }\n}\n\nimpl&lt;T: Copy + Default&gt; Default for Atomic&lt;T&gt; {\n    fn default() -&gt; Atomic&lt;T&gt; {\n        Self::new(T::default())\n    }\n}\n</code></pre>\n\n<p>As you can see, I write an arbitrary <code>Copy</code> value of small enough size into a <code>usize</code>, and ship it around in an <code>Atomic</code>. I then read it out as a new value.</p>\n\n<p>In essence I use the <code>usize</code> as a memory block of size <code>size_of::&lt;usize&gt;()</code>.</p>\n\n<p>If this is safe, the next step is to consider fancier operations.</p>\n\n<pre><code>unsafe trait PackedInt {}\nunsafe impl PackedInt for u8  {}\nunsafe impl PackedInt for i8  {}\nunsafe impl PackedInt for u32 {}\nunsafe impl PackedInt for i32 {}\nunsafe impl PackedInt for u64 {}\nunsafe impl PackedInt for i64 {}\n\nimpl&lt;T: Copy + PackedInt&gt; Atomic&lt;T&gt; {\n    fn compare_and_swap(&amp;self, current: T, new: T, order: Ordering) -&gt; T {\n        unsafe {\n            Self::decode(self.0.compare_and_swap(\n                Self::encode(current),\n                Self::encode(new),\n                order\n            ))\n        }\n    }\n\n    fn fetch_add(&amp;self, val: T, order: Ordering) -&gt; T {\n        unsafe {\n            Self::decode(self.0.fetch_add(Self::encode(val), order))\n        }\n    }\n\n    fn fetch_sub(&amp;self, val: T, order: Ordering) -&gt; T {\n        unsafe {\n            Self::decode(self.0.fetch_sub(Self::encode(val), order))\n        }\n    }\n}\n</code></pre>\n\n<p>These are of course not always particularly sensible on overflow (since two \"equal\" values could compare unequal due to bits outside of the <code>T</code>), but they still seem well-defined... I think.</p>\n\n<p>So, is this safe, and why?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 2561, "user_id": 16795, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cc08aebdbdc2a783889d8d70a5ae270?s=128&d=identicon&r=PG", "display_name": "Austin", "link": "https://stackoverflow.com/users/16795/austin"}, "edited": false, "score": 2, "creation_date": 1615170344, "post_id": 32823158, "comment_id": 117600503, "body": "<a href=\"https://github.com/rust-lang/rfcs/pull/2495\" rel=\"nofollow noreferrer\">RFC 2495</a> has been approved for specifying a minimum Rust version, but as of March 2021, it remains <a href=\"https://github.com/rust-lang/rust/issues/65262\" rel=\"nofollow noreferrer\">unimplemented</a>"}], "tags": [], "owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "is_accepted": false, "score": 4, "last_activity_date": 1443443804, "creation_date": 1443443804, "answer_id": 32823158, "question_id": 32821998, "link": "https://stackoverflow.com/questions/32821998/specify-the-version-of-rustc-required-for-a-cargo-project/32823158#32823158", "title": "Specify the version of rustc required for a Cargo project", "body": "<p>I've found some old proposals on Github:</p>\n\n<p><a href=\"https://github.com/rust-lang/cargo/issues/837\" rel=\"nofollow\">https://github.com/rust-lang/cargo/issues/837</a><br>\n<a href=\"https://github.com/rust-lang/cargo/issues/1044\" rel=\"nofollow\">https://github.com/rust-lang/cargo/issues/1044</a><br>\n<a href=\"https://github.com/rust-lang/cargo/issues/1214\" rel=\"nofollow\">https://github.com/rust-lang/cargo/issues/1214</a></p>\n\n<p>They were closed with</p>\n\n<blockquote>\n  <p>I think that for now there's not a lot actionable in this ticket, I agree that we'll definitely want to re-evaluate post-1.0, but for now I don't think cargo is going to enter the business of supporting various Rust versions as it's just too unstable to track currently.</p>\n</blockquote>\n\n<p>So there seems to be no way yet. Maybe you should raise your case there.</p>\n"}, {"tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 2, "last_activity_date": 1443443819, "creation_date": 1443443819, "answer_id": 32823161, "question_id": 32821998, "link": "https://stackoverflow.com/questions/32821998/specify-the-version-of-rustc-required-for-a-cargo-project/32823161#32823161", "title": "Specify the version of rustc required for a Cargo project", "body": "<p>No.</p>\n\n<p>As of right now, the only thing you can realistically do is note the required version in the documentation and/or the <code>README</code> for the crate.</p>\n\n<p>You may be able to configure <a href=\"https://github.com/brson/multirust\" rel=\"nofollow\"><code>multirust</code></a> to use the correct compiler, but keep in mind that it only works in UNIX-y environments.</p>\n"}, {"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": -1, "last_activity_date": 1443474654, "creation_date": 1443474654, "answer_id": 32831890, "question_id": 32821998, "link": "https://stackoverflow.com/questions/32821998/specify-the-version-of-rustc-required-for-a-cargo-project/32831890#32831890", "title": "Specify the version of rustc required for a Cargo project", "body": "<p>If you use Travis, you can configure which versions of Rust, and which channels, you support. That's a common way to document it.</p>\n"}, {"comments": [{"owner": {"reputation": 4877, "user_id": 1924257, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/31d8a68147c1d5a6b07b9c0743903ea2?s=128&d=identicon&r=PG", "display_name": "wegry", "link": "https://stackoverflow.com/users/1924257/wegry"}, "edited": false, "score": 0, "creation_date": 1547799778, "post_id": 36607492, "comment_id": 95324196, "body": "<code>rustc_version</code> 0.2 uses <code>if version().unwrap() &gt;= Version::parse(&quot;1.4.0&quot;).unwrap() {         println!(&quot;cargo:rustc-cfg=compiler_has_important_bugfix&quot;);     }</code>"}], "tags": [], "owner": {"reputation": 9123, "user_id": 5189607, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b9b485f6efee3ce1b78dea5fe45c96f6?s=128&d=identicon&r=PG", "display_name": "malbarbo", "link": "https://stackoverflow.com/users/5189607/malbarbo"}, "is_accepted": true, "score": 7, "last_activity_date": 1461160714, "last_edit_date": 1461160714, "creation_date": 1460574629, "answer_id": 36607492, "question_id": 32821998, "link": "https://stackoverflow.com/questions/32821998/specify-the-version-of-rustc-required-for-a-cargo-project/36607492#36607492", "title": "Specify the version of rustc required for a Cargo project", "body": "<p>You can use a <a href=\"http://doc.crates.io/build-script.html\" rel=\"nofollow\">build script</a> like this</p>\n\n<pre><code>extern crate rustc_version;\n\nuse std::io::{self, Write};\nuse std::process::exit;       \nuse rustc_version::version_matches;   \n\nfn main() {\n    if !version_matches(\"&gt;= 1.1.0\") {\n        writeln!(&amp;mut io::stderr(), \"This crate requires rustc &gt;= 1.1.0.\").unwrap();\n        exit(1);\n    }   \n}\n</code></pre>\n\n<p>This uses the <a href=\"https://crates.io/crates/rustc_version\" rel=\"nofollow\">rustc_version</a> crate.</p>\n"}, {"tags": [], "owner": {"reputation": 3360, "user_id": 3208553, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/Tjyir.png?s=128&g=1", "display_name": "Luke Schoen", "link": "https://stackoverflow.com/users/3208553/luke-schoen"}, "is_accepted": false, "score": 2, "last_activity_date": 1615423122, "creation_date": 1615423122, "answer_id": 66574906, "question_id": 32821998, "link": "https://stackoverflow.com/questions/32821998/specify-the-version-of-rustc-required-for-a-cargo-project/66574906#66574906", "title": "Specify the version of rustc required for a Cargo project", "body": "<p>If your project required a minimum rustc version of 1.1.0 to compile, you could simply create a file named <em>rust-toolchain</em> (without any file extension) in the same directory as your Cargo.toml file, and add the following contents to it:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>[toolchain]\nchannel = &quot;1.1.0&quot;\ncomponents = [&quot;rust-src&quot;]\n</code></pre>\n<p>Then when you run <code>cargo build</code> it will automatically download and install that version and switch to it. See this <a href=\"https://blog.rust-lang.org/2020/11/27/Rustup-1.23.0.html#new-format-for-rust-toolchain\" rel=\"nofollow noreferrer\">Rust Blog post</a> for further details.</p>\n<p>This <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2495-min-rust-version.md\" rel=\"nofollow noreferrer\">Rust RFC #2495</a> proposes an alternative approach in future where we may be able to just add the line <code>rust = &quot;1.1.0&quot;</code> to the Cargo.toml file.</p>\n"}], "owner": {"reputation": 2877, "user_id": 207384, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/1babd2bd76ffc91f5fe08c5a8b88afea?s=128&d=identicon&r=PG", "display_name": "telotortium", "link": "https://stackoverflow.com/users/207384/telotortium"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1194, "favorite_count": 0, "accepted_answer_id": 36607492, "answer_count": 5, "score": 13, "last_activity_date": 1615423122, "creation_date": 1443440054, "question_id": 32821998, "link": "https://stackoverflow.com/questions/32821998/specify-the-version-of-rustc-required-for-a-cargo-project", "title": "Specify the version of rustc required for a Cargo project", "body": "<p>Is it possible to specify that a Cargo project requires a minimum rustc version of, for example, 1.1.0 to compile?</p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443435742, "post_id": 32817193, "comment_id": 53476863, "body": "What you are doing sounds very likely to be a bad idea. You should favour other designs where feasible; e.g. making a <code>struct A { one: i32, two: i32, three: i32 }</code>."}, {"owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443519125, "post_id": 32817193, "comment_id": 53515601, "body": "@ChrisMorgan. In fact it relates to implementation of vectors like quaternions where every type has different length and requires different accessors. I thought it can simplify the work if I use one code for them all. Why do you think it is a bad idea?"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443565005, "post_id": 32817193, "comment_id": 53543005, "body": "I can\u2019t grasp what you\u2019re <i>actually</i> trying to achieve with this. Could you share a complete code example?"}, {"owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443681108, "post_id": 32817193, "comment_id": 53592146, "body": "@ChrisMorgan, well, by now it is just a concept, so no real code I can share exists. I can share it after completeon when (or if) I write it in the way I have asked."}], "answers": [{"comments": [{"owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "edited": false, "score": 0, "creation_date": 1443426017, "post_id": 32817808, "comment_id": 53471744, "body": "Wow. Awesome. It just blew my mind. Rust still continues to surprise me :) Thank you very much, it is very interesting solution!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 11, "last_activity_date": 1443425594, "creation_date": 1443425594, "answer_id": 32817808, "question_id": 32817193, "link": "https://stackoverflow.com/questions/32817193/how-to-get-index-of-macro-repetition-single-element/32817808#32817808", "title": "How to get index of macro repetition single element", "body": "<p>The easiest way is to use recursion, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A {\n    data: [i32; 3]\n}\n\nmacro_rules! tst {\n    (@step $_idx:expr,) =&gt; {};\n\n    (@step $idx:expr, $head:ident, $($tail:ident,)*) =&gt; {\n        impl A {\n            fn $head(&amp;self) -&gt; i32 {\n                self.data[$idx]\n            }\n        }\n\n        tst!(@step $idx + 1usize, $($tail,)*);\n    };\n\n    ($($n:ident),*) =&gt; {\n        tst!(@step 0usize, $($n,)*);\n    }\n}\n\ntst!(one, two, three);\n\nfn main() {\n    let a = A { data: [10, 20, 30] };\n    println!(\"{:?}\", (a.one(), a.two(), a.three()));\n}\n</code></pre>\n\n<p>Note that I changed the method to take <code>&amp;self</code> instead of <code>self</code>, since it made writing the example in the <code>main</code> function easier.  :)</p>\n\n<p>Each step in the recursion just adds 1 to the index.  It is a good idea to use \"typed\" integer literals to avoid compilation slowdown due to lots and lots of integer inference.</p>\n"}], "owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1467, "favorite_count": 2, "accepted_answer_id": 32817808, "answer_count": 1, "score": 7, "last_activity_date": 1443425594, "creation_date": 1443423134, "question_id": 32817193, "link": "https://stackoverflow.com/questions/32817193/how-to-get-index-of-macro-repetition-single-element", "title": "How to get index of macro repetition single element", "body": "<p>I need to get index of macro repetition element to write next code: \n</p>\n\n<pre><code>struct A {\n    data: [i32; 3]\n}\n\nmacro_rules! tst {\n    ( $( $n:ident ),* ) =&gt; {\n        impl A {\n            $(\n                fn $n(self) -&gt; i32 {\n                    self.data[?] // here I need the index\n                }\n            ),*\n        }\n    }\n}\n</code></pre>\n\n<p>I know one way to do it: just tell user to write index by hands:\n</p>\n\n<pre><code>( $( $i:ident =&gt; $n:ident ),* )\n</code></pre>\n\n<p>But is there a more elegant way which does not require user's action?</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": false, "score": 6, "last_activity_date": 1443418100, "last_edit_date": 1443418100, "creation_date": 1443417633, "answer_id": 32816128, "question_id": 32815712, "link": "https://stackoverflow.com/questions/32815712/how-do-i-get-a-function-to-return-a-vec-of-string-like-things/32816128#32816128", "title": "How do I get a function to return a Vec of string-like things?", "body": "<p>You can convert your string slices to owned <code>String</code> objects with the <code>map</code> function.</p>\n\n<pre><code>let m_lines: Vec&lt;String&gt; = buffer.lines()\n        .filter(|&amp;x| pattern.is_match(x))\n        .map(|x| x.to_owned())\n        .collect();\n</code></pre>\n\n<p>You should then be able to return <code>m_lines</code> from the function.</p>\n"}, {"comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1443474722, "post_id": 32825561, "comment_id": 53499604, "body": "I really strongly prefer unwrap to let _, after silent errors I never thought could happen bit me when they did."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1443476394, "post_id": 32825561, "comment_id": 53500352, "body": "@SteveKlabnik absolutely! I was just cleaning up the code to be clearer that the error was being ignored. I&#39;ll tweak the text a bit to indicate it&#39;s definitely not a good idea."}, {"owner": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "edited": false, "score": 0, "creation_date": 1443498782, "post_id": 32825561, "comment_id": 53506340, "body": "Is there a way I can just return a <code>Lines</code> instead of a <code>Vec&lt;String&gt;</code> ? I keep getting a <code>wrong number of lifetime parameters</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "edited": false, "score": 0, "creation_date": 1443531840, "post_id": 32825561, "comment_id": 53523510, "body": "@Conrad.Dean not with the code as structured now. That&#39;s the <a href=\"http://stackoverflow.com/q/32300132/155423\">other question I linked to</a>. You could do something like that if you passed a reference to the String (via <code>&amp;str</code>) to the method that returns the <code>Lines</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1443476507, "last_edit_date": 1495541684, "creation_date": 1443450603, "answer_id": 32825561, "question_id": 32815712, "link": "https://stackoverflow.com/questions/32815712/how-do-i-get-a-function-to-return-a-vec-of-string-like-things/32825561#32825561", "title": "How do I get a function to return a Vec of string-like things?", "body": "<p>Let's start with this version, which runs on the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust Playground</a> (it's a good idea to make a <a href=\"/help/mcve\">MCVE</a> when asking a question):</p>\n\n<pre><code>use std::path::PathBuf;\nuse std::fs::File;\nuse std::io::Read;\n\nfn matching_lines(p: PathBuf, pattern: &amp;str) -&gt; Vec&lt;String&gt; {\n    let mut buffer = String::new();\n    let mut f = File::open(&amp;p).unwrap();\n    match f.read_to_string(&amp;mut buffer) {\n        Ok(yay_read) =&gt; yay_read,\n        Err(_) =&gt; 0,\n    };\n    let m_lines: Vec&lt;String&gt; = buffer.lines()\n        .filter(|&amp;x| x.contains(pattern)).collect();\n    return m_lines;\n}\n\nfn main() {\n    let path = PathBuf::from(\"/etc/hosts\");\n    let lines = matching_lines(path, \"local\");    \n}\n</code></pre>\n\n<p>Let's look at the signature for <a href=\"http://doc.rust-lang.org/std/primitive.str.html#method.lines\" rel=\"nofollow noreferrer\"><code>str::lines</code></a>:</p>\n\n<pre><code>fn lines(&amp;self) -&gt; Lines // with lifetime elision\nfn lines&lt;'a&gt;(&amp;'a self) -&gt; Lines&lt;'a&gt; // without\n</code></pre>\n\n<p>I've shown what it looks like in the source first, and what you can mentally translate it to second. It will return an iterator of string slices that are backed by the <code>String</code> you've read. This is a nice thing, as it's very efficient as only one allocation needs to have been made. However, you cannot <a href=\"https://stackoverflow.com/q/32300132/155423\">return an owned value and a reference to that value at the same time</a>. The easiest thing to do is convert each of the lines into an owned string, as <a href=\"https://stackoverflow.com/a/32816128/155423\">Benjamin Lindley</a> suggests:</p>\n\n<pre><code>let m_lines: Vec&lt;String&gt; =\n    buffer\n    .lines()\n    .filter(|&amp;x| x.contains(pattern))\n    .map(ToOwned::to_owned)\n    .collect();\n</code></pre>\n\n<p>That gets your code to compile, but it can still be made nicer. Your <code>match</code> statement can be replaced with <a href=\"http://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or\" rel=\"nofollow noreferrer\"><code>unwrap_or</code></a>, but since you are ignoring the error case completely, you might as well just use <code>_</code>:</p>\n\n<pre><code>let _ = f.read_to_string(&amp;mut buffer);\n</code></pre>\n\n<p>Note that this <strong>really isn't</strong> a good idea. Errors are important to report, and throwing away to error will bite you when you need it to be reported the most! It's probably safer to use <a href=\"http://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap\" rel=\"nofollow noreferrer\"><code>unwrap</code></a> and let your program die when an error occurs.</p>\n\n<p>Next, don't use explicit <code>return</code> statements and don't provide type annotations unless you need to. Since your function returns a <code>Vec&lt;String&gt;</code>, you can replace the last two lines with just:</p>\n\n<pre><code>buffer\n    .lines()\n    .filter(|&amp;x| x.contains(pattern))\n    .map(ToOwned::to_owned)\n    .collect()\n</code></pre>\n\n<p>You also could be more open about the types you accept for <code>p</code>, to better match what <code>File::open</code> supports:</p>\n\n<pre><code>fn matching_lines&lt;P&gt;(p: P, pattern: &amp;str) -&gt; Vec&lt;String&gt;\n    where P: AsRef&lt;Path&gt;\n</code></pre>\n\n<p>All together:</p>\n\n<pre><code>use std::path::{Path, PathBuf};\nuse std::fs::File;\nuse std::io::Read;\n\nfn matching_lines&lt;P&gt;(p: P, pattern: &amp;str) -&gt; Vec&lt;String&gt;\n    where P: AsRef&lt;Path&gt;\n{\n    let mut buffer = String::new();\n    let mut f = File::open(p).unwrap();\n    let _ = f.read_to_string(&amp;mut buffer);\n\n    buffer\n        .lines()\n        .filter(|&amp;x| x.contains(pattern))\n        .map(ToOwned::to_owned)\n        .collect()\n}\n\nfn main() {\n    let path = PathBuf::from(\"/etc/hosts\");\n    let lines = matching_lines(path, \"local\");\n    println!(\"{:?}\", lines);\n}\n</code></pre>\n"}], "owner": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3190, "favorite_count": 2, "accepted_answer_id": 32825561, "answer_count": 2, "score": 5, "last_activity_date": 1443476507, "creation_date": 1443414739, "question_id": 32815712, "link": "https://stackoverflow.com/questions/32815712/how-do-i-get-a-function-to-return-a-vec-of-string-like-things", "title": "How do I get a function to return a Vec of string-like things?", "body": "<p>I had a large block of code that opens files and searches the contents line by line, then does something to each matching line.  I want to factor this out into its own function that takes the path to a file and gives you the matching lines, but I cannot figure out how to correctly factor this out.</p>\n\n<p>Here's what I think is close, but I get a compiler error:</p>\n\n<pre><code>/// get matching lines from a path\nfn matching_lines(p: PathBuf, pattern: &amp;Regex) -&gt;  Vec&lt;String&gt; {\n    let mut buffer = String::new();\n    // TODO: maybe move this side effect out, hand it a\n    //       stream of lines or otherwise opened file\n    let mut f = File::open(&amp;p).unwrap();\n    match f.read_to_string(&amp;mut buffer) {\n        Ok(yay_read) =&gt; yay_read,\n        Err(_) =&gt; 0,\n    };\n    let m_lines: Vec&lt;String&gt; = buffer.lines()\n        .filter(|&amp;x| pattern.is_match(x)).collect();\n    return m_lines;\n}\n</code></pre>\n\n<p>And the compiler error:</p>\n\n<pre><code>src/main.rs:109:43: 109:52 error: the trait `core::iter::FromIterator&lt;&amp;str&gt;` is not implemented for the type `collections::vec::Vec&lt;collections::string::String&gt;` [E0277]\nsrc/main.rs:109         .filter(|&amp;x| pattern.is_match(x)).collect();\n                                                          ^~~~~~~~~\nsrc/main.rs:109:43: 109:52 help: run `rustc --explain E0277` to see a detailed explanation\nsrc/main.rs:109:43: 109:52 note: a collection of type `collections::vec::Vec&lt;collections::string::String&gt;` cannot be built from an iterator over elements of type `&amp;str`\nsrc/main.rs:109         .filter(|&amp;x| pattern.is_match(x)).collect();\n                                                          ^~~~~~~~~\nerror: aborting due to previous error\n</code></pre>\n\n<p>If I use <code>String</code> instead of <code>&amp;str</code> I instead get this error:</p>\n\n<pre><code>src/main.rs:108:30: 108:36 error: `buffer` does not live long enough\nsrc/main.rs:108     let m_lines: Vec&lt;&amp;str&gt; = buffer.lines()\n                                             ^~~~~~\n</code></pre>\n\n<p>Which kind of makes sense.  I guess the lines stay inside the <code>buffer</code> which goes out of scope at the end of the function, so collecting a vector of references to strings doesn't really help us.</p>\n\n<p>How do I return a collection of lines?</p>\n"}, {"tags": ["module", "rust"], "answers": [{"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 7, "last_activity_date": 1443404823, "creation_date": 1443404823, "answer_id": 32814697, "question_id": 32814653, "link": "https://stackoverflow.com/questions/32814653/why-is-there-a-mod-keyword-in-rust/32814697#32814697", "title": "Why is there a mod keyword in Rust?", "body": "<p>While it can, it can also be overridden:</p>\n\n<pre><code>#[path = \"somewhere/else\"]\nmod lol;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 2, "creation_date": 1443434774, "post_id": 32814938, "comment_id": 53476341, "body": "I&#39;d also like to add that Rust doesn&#39;t compile files just because they exist; there must be a module definition somewhere in the crate pulling it in."}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "reply_to_user": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 2, "creation_date": 1443435482, "post_id": 32814938, "comment_id": 53476724, "body": "@llogiq: the question is about that very point: why is it <i>not</i> done that way?"}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1443436343, "post_id": 32814938, "comment_id": 53477256, "body": "Ok, I may need to rephrase that: It makes sense not to blindly compile arbitrary <code>.rs</code> files, just because they&#39;re lying around. Why compile something you don&#39;t use?"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "reply_to_user": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 1, "creation_date": 1443442015, "post_id": 32814938, "comment_id": 53480525, "body": "@llogic: I disagree. There is practically always a direct correspondence between the .rs files in the tree and the modules; were it not for the conditional compilation attributes matter, there really would be no reason for <code>mod</code> items\u2014it <i>could</i> be handled automatically. And frankly, I often feel it might have been better if we had done thus, though it would require slightly more careful handling of module attributes before parsing the rest of a file and might have <i>slightly</i> muddied the phases of the compiler. But there really is no fundamental reason why we couldn\u2019t do without <code>mod</code> items."}], "tags": [], "owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "is_accepted": false, "score": 16, "last_activity_date": 1443407505, "creation_date": 1443407505, "answer_id": 32814938, "question_id": 32814653, "link": "https://stackoverflow.com/questions/32814653/why-is-there-a-mod-keyword-in-rust/32814938#32814938", "title": "Why is there a mod keyword in Rust?", "body": "<p>There are a couple of reasons why modules must be explicitly declared:</p>\n\n<ul>\n<li><p>Modules can be public (<code>pub mod foo;</code>) or private (<code>mod foo;</code>).</p></li>\n<li><p>They can have attributes applied to them, attributes that couldn\u2019t sit inside the file; there are two primary examples of that: <code>#[path = \"x.rs\"]</code> specifying a different path, and <code>#[cfg(\u2026)]</code>, for conditional compilation, for cases where the module would fail to parse or have its macros expand.</p></li>\n</ul>\n"}], "owner": {"reputation": 1311, "user_id": 2962931, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/02d80804a403c5e5a5276643e4614733?s=128&d=identicon&r=PG&f=1", "display_name": "bitnick", "link": "https://stackoverflow.com/users/2962931/bitnick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2278, "favorite_count": 1, "answer_count": 2, "score": 9, "last_activity_date": 1443407505, "creation_date": 1443404183, "last_edit_date": 1443406867, "question_id": 32814653, "link": "https://stackoverflow.com/questions/32814653/why-is-there-a-mod-keyword-in-rust", "title": "Why is there a mod keyword in Rust?", "body": "<p>After reading <a href=\"https://doc.rust-lang.org/book/crates-and-modules.html\" rel=\"noreferrer\">this</a>\nI'm wondering why is there \"mod\" keyword and <code>mod.rs</code>? The folder hierarchy can describe the module as well?</p>\n"}, {"tags": ["c#", "rust", "pinvoke", "dllimport"], "comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1443396546, "post_id": 32812769, "comment_id": 53464292, "body": "I am not familiar with C#, but does it use C-style strings? I would be surprised. I would imagine that this is the issue, you&#39;re trying to pass a C# string as a C string."}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1443396563, "post_id": 32812769, "comment_id": 53464295, "body": "(and print2 can&#39;t work, because C doesn&#39;t know what Rust strings are and how to make them)"}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "reply_to_user": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1443416102, "post_id": 32812769, "comment_id": 53468087, "body": "@Steve C# marshals strings as C strings"}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443417780, "post_id": 32812769, "comment_id": 53468506, "body": "Looks like you&#39;ll need to use UTF-8. That&#39;s <code>Encoding.UTF8.GetBytes(str + &quot;\\0&quot;)</code> and marshaled as <code>[In] byte[]</code>."}], "answers": [{"comments": [{"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443417623, "post_id": 32816043, "comment_id": 53468468, "body": "It&#39;s easy to get .net to marshal as UTF-8. MS has never pretended UTF-8 does not exist. <code>Encoding.UTF8.GetBytes</code> is what is needed here. Marshal as <code>byte[]</code>. Manual zero termination needed. Are you aware that when MS added Unicode to support to Windows, that UTF-8 actually did not exist?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443418036, "post_id": 32816043, "comment_id": 53468579, "body": "@DavidHeffernan I dunno; it keeps treating CP 65001 like it doesn&#39;t really exist and no one should use it, not to mention PowerShell&#39;s pig-headed stubbornness in encoding all text it outputs as UTF-16 despite just about nothing being able to read it.  I didn&#39;t consider re-encoding the string on the C# side because I was sticking to what you can do <i>just</i> with the dllimport annotation and <i>also</i> because I don&#39;t have a C# setup to actually test anything.  As for that last point; I know UTF-8 didn&#39;t exist, but it doesn&#39;t make it any less of a frustration <i>now</i>.  Aah, hindsight. :P"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443418141, "post_id": 32816043, "comment_id": 53468609, "body": "@DavidHeffernan I can&#39;t provide any (tested) help on the C# side; I&#39;ve made the answer a community wiki if you want to make some changes on that end."}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443418618, "post_id": 32816043, "comment_id": 53468745, "body": "OK, let&#39;s see if we can wiki this between us. I know C#, you know Rust."}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443419050, "post_id": 32816043, "comment_id": 53468862, "body": "The edit I made is compatible with <code>void __cdecl print(char* str)</code> where <code>str</code> is null terminated and encoded as UTF-8."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443419446, "post_id": 32816043, "comment_id": 53468994, "body": "@DavidHeffernan Just occurred to me: this still has the issue of truncating any string that contains interior nulls.  Presumably, the signature could be changed to <code>[In] byte[], uint</code> / <code>*const u8, u32</code> to fix that.  That would <i>also</i> simplify the code on the Rust side a little.  Is there any easy way to abstract that?  I&#39;m assuming the best you could do is do the UTF-8 transcode, store it, then pass that plus <code>str.Length</code>."}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443419716, "post_id": 32816043, "comment_id": 53469089, "body": "That&#39;s a little harder to abstract because there are two arguments. But yes, you&#39;d do it the way you describe. Generally this is a non issue. It&#39;s often no problem to ban interior nulls."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443420088, "post_id": 32816043, "comment_id": 53469202, "body": "@DavidHeffernan Aye, I&#39;ve decided against further additions; it was starting to drift from the original question.  Thanks for your help. :)"}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "edited": false, "score": 1, "creation_date": 1443460021, "post_id": 32816043, "comment_id": 53492185, "body": "Thank you guys for the answer, and sorry for troubles, I will try it once I am home. I am just wondering what&#39;s the difference between <code>[in]</code> and <code>in</code> in c#."}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443464207, "post_id": 32816043, "comment_id": 53494433, "body": "Well, the latter is not part of C#. Perhaps you think of <code>out</code>. As for <code>[In]</code>, that could be omitted. But I&#39;m using it here almost as documentation. It tells the marshaller to marshal the data to the caller, but not back from the caller. But in reality arrays of blittable types are pinned for marshalling so they are always <code>[In,Out]</code>."}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "reply_to_user": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443474108, "post_id": 32816043, "comment_id": 53499322, "body": "@DavidHeffernan Thank you for your support again, I never thought that in C# you can apply attributes to function parameters, I mistook the <code>[In]</code> with <code>out</code> modifier. a lot I learned from you guys today and still a lot I should learn about data marshalling. Again one day lived new things learned."}, {"owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "edited": false, "score": 1, "creation_date": 1443510687, "post_id": 32816043, "comment_id": 53510646, "body": "Just an addition, <code>Encoding.UTF8.GetBytes(str)</code> could also do the work without trailing <code>\\0</code>"}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "reply_to_user": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "edited": false, "score": 1, "creation_date": 1443552089, "post_id": 32816043, "comment_id": 53536598, "body": "@MusuNaji No. It might just happen to work by accident but you&#39;ve got a buffer overrun there. Put the null terminator back."}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443552194, "post_id": 32816043, "comment_id": 53536651, "body": "I&#39;m disappointed that the answer says this: &quot;Sadly, there is no direct way to get .NET to marshal a string as UTF-8. Using any other encoding would appear to lose information, so you&#39;re struck dealing with UTF-16 in Rust, I&#39;m afraid.&quot; I really wish the Rust experts could tidy up that part of the answer. I did my bit!!"}, {"owner": {"reputation": 570607, "user_id": 505088, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3c0aac2191718ef0309dbc034d9b9961?s=128&d=identicon&r=PG", "display_name": "David Heffernan", "link": "https://stackoverflow.com/users/505088/david-heffernan"}, "edited": false, "score": 1, "creation_date": 1443590489, "post_id": 32816043, "comment_id": 53549995, "body": "Thanks. That&#39;s a lot better!"}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 6, "last_activity_date": 1443584667, "last_edit_date": 1443584667, "creation_date": 1443417075, "answer_id": 32816043, "question_id": 32812769, "link": "https://stackoverflow.com/questions/32812769/using-unicode-strings-in-dllimport-with-a-dll-written-in-rust/32816043#32816043", "title": "Using Unicode strings in DllImport with a DLL written in Rust", "body": "<p>If you check <a href=\"https://msdn.microsoft.com/en-us/library/system.runtime.interopservices.charset.aspx\" rel=\"nofollow\">the documentation on <code>CharSet</code></a>, you'll see that <code>CharSet.Unicode</code> tells .NET to marshal strings as UTF-16 (<em>i.e.</em> two bytes per code point).  Thus, .NET is trying to pass <code>printc</code> what should be a <code>*const u16</code>, <em>not</em> a <code>*const libc::c_char</code>.  When <code>CStr</code> goes to compute the length of the string, what it <em>sees</em> is the following:</p>\n\n<pre><code>b\"y\\0e\\0y\\0e\\0y\\0e\\0\"\n</code></pre>\n\n<p>That is, it sees <em>one</em> code unit, then a null byte, so it stops; hence why it says the length is \"1\".</p>\n\n<p>Rust has no standard support for UTF-16 strings, but <em>if</em> you're working on Windows, there are some conversion methods: search the docs for <code>OsStrExt</code> and <code>OsStringExt</code>.  Note that you <em>must</em> use the docs that installed with the compiler; the ones online won't include it.</p>\n\n<p>Sadly, there's nothing for dealing directly with null-terminated UTF-16 strings.  You'll need to write some unsafe code to turn a <code>*const u16</code> into a <code>&amp;[u16]</code> that you can pass to <code>OsStringExt::from_wide</code>.</p>\n\n<p>Now, Rust <em>does</em> use Unicode, but it uses UTF-8.  Sadly, there is no direct way to get .NET to marshal a string as UTF-8.  Using any other encoding would appear to lose information, so you either have to explicitly deal with UTF-16 on the Rust side, or explicitly deal with UTF-8 on the C# side.</p>\n\n<p>It's <em>much</em> simpler to re-encode the string as UTF-8 in C#.  You can exploit the fact that .NET will marshal an array as a raw pointer to the first element (just like C) and pass a null-terminated UTF-8 string.</p>\n\n<p>First, a static method for taking a .NET string and producing a UTF-8 string stored in a byte array:</p>\n\n<pre><code>byte[] NullTerminatedUTF8bytes(string str)\n{\n    return Encoding.GetBytes(str + \"\\0\");\n}\n</code></pre>\n\n<p>Then declare the signature of the Rust function like this:</p>\n\n<pre><code>[DllImport(dllname, CallingConvention = CallingConvention.Cdecl)]\nstatic extern void printc([In] byte[] str);\n</code></pre>\n\n<p>Finally, call it like this:</p>\n\n<pre><code>printc(NullTerminatedUTF8bytes(str));\n</code></pre>\n\n<p>For bonus points, you can rework <code>printc</code> to instead take a <code>*const u8</code> <em>and</em> a <code>u32</code>, passing the re-encoded string plus it's length; then you don't need the null terminator and can reconstruct the string using the <code>std::slice::from_raw_parts</code> function (but that's starting to go beyond the original question).</p>\n\n<p>As for <code>print2</code>, that one is just unworkable.  .NET knows <em>nothing</em> about Rust's <code>String</code> type, and it is in <em>no way</em> compatible with .NET strings.  More than that, <code>String</code> doesn't even have a guaranteed layout, so binding to it safely is more or less not possible.</p>\n\n<p>All that is a very long-winded way of saying: don't use <code>String</code>, or any other non-FFI-safe type, in cross-language functions, <em>ever</em>.  If your intention here was to pass an \"owned\" string into Rust... I don't know if it's even <em>possible</em> to do in concert with .NET.</p>\n\n<p><em>Aside</em>: \"FFI-safe\" in Rust essentially boils down to: is either a built-in fixed-size type (<em>i.e.</em> <em>not</em> <code>usize</code>/<code>isize</code>), or is a user-defined type with <code>#[repr(C)]</code> attached to it.  Sadly, the \"FFI-safe\"-ness of a type isn't included in the documentation.</p>\n"}], "owner": {"reputation": 1234, "user_id": 554893, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b1773b46fd3a2032dd8007949ec0314?s=128&d=identicon&r=PG", "display_name": "IdontCareAboutReputationPoints", "link": "https://stackoverflow.com/users/554893/idontcareaboutreputationpoints"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1169, "favorite_count": 1, "accepted_answer_id": 32816043, "answer_count": 1, "score": 2, "last_activity_date": 1520172320, "creation_date": 1443387496, "last_edit_date": 1520172320, "question_id": 32812769, "link": "https://stackoverflow.com/questions/32812769/using-unicode-strings-in-dllimport-with-a-dll-written-in-rust", "title": "Using Unicode strings in DllImport with a DLL written in Rust", "body": "<p>I am trying to call a DLL written in Rust from a C# program. The DLL has two simple functions that take stings (in different manner) and prints to the console.</p>\n\n<h2>Rust DLL code</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![crate_type = \"lib\"]\nextern crate libc;\n\nuse libc::{c_char};\nuse std::ffi::CStr;\n\n#[no_mangle]\npub extern fn printc(s: *const c_char){\n    let c_str : &amp;CStr = unsafe {\n        assert!(!s.is_null());\n\n        CStr::from_ptr(s)\n    };\n\n    println!(\"{:?}\", c_str.to_bytes().len()); //prints \"1\" if unicode\n\n    let r_str = std::str::from_utf8(c_str.to_bytes()).unwrap();\n    println!(\"{:?}\", r_str);\n}\n\n#[no_mangle]\npub extern fn print2(string: String) {\n    println!(\"{:?}\", string)\n}\n</code></pre>\n\n<h2>C# console program code</h2>\n\n<pre class=\"lang-cs prettyprint-override\"><code>[DllImport(\"lib.dll\", CharSet = CharSet.Unicode, CallingConvention = CallingConvention.Cdecl)]\nstatic extern void print2(ref string str);\n\n[DllImport(\"lib.dll\", CallingConvention = CallingConvention.Cdecl)]\nstatic extern void printc(string str);\n\nstatic void Main(string[] args)\n{\n  try\n  {\n    var graw = \"yeyeye\";\n    printc(graw);\n    print2(ref graw);\n  }\n  catch (Exception ex)\n  {\n    Console.WriteLine(\"calamity!, {0}\", ex.Message);\n  }\n  Console.ReadLine();\n}\n</code></pre>\n\n<p>For the <code>print2</code> function it keep printing garbage on screen until it causes <code>AccessViolationException</code></p>\n\n<p>The 2nd <code>printc</code> function does print the string, but only if <code>CharSet.Unicode</code> is not set. If it is set, it will only print the first char, hence the <code>println!(\"{:?}\", c_str.to_bytes().len());</code> will print <code>1</code>.</p>\n\n<p>I believe that <code>Cstr::from_ptr</code> function does not support Unicode, that is why it returns only the first char of the string.</p>\n\n<p>Any idea how to pass Unicode string as parameters to Rust DLLs?  Is it possible to make things simpler like in <code>print2</code> function?</p>\n"}, {"tags": ["rust", "lifetime", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "edited": false, "score": 0, "creation_date": 1443384360, "post_id": 32812134, "comment_id": 53461188, "body": "ohhh, the &quot;owned variant of &amp;PathBuf&quot; being the &quot;PathBuf&quot; ?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "edited": false, "score": 0, "creation_date": 1443384659, "post_id": 32812134, "comment_id": 53461275, "body": "Oops! I think mobile stack overflow edited my &lt;&gt;s out, let me edit"}, {"owner": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "edited": false, "score": 0, "creation_date": 1443384823, "post_id": 32812134, "comment_id": 53461327, "body": "Cool, so by returning the owned variants, ownership is moved to the caller of my <code>get_files</code> which was the intent anyway.  that feels better"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "edited": false, "score": 1, "creation_date": 1443384942, "post_id": 32812134, "comment_id": 53461371, "body": "Exactly! This is why Rust is cool, the compiler just saved you from a runtime error with a dangling pointer in another language."}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 3, "last_activity_date": 1443384679, "last_edit_date": 1443384679, "creation_date": 1443383150, "answer_id": 32812134, "question_id": 32811897, "link": "https://stackoverflow.com/questions/32811897/how-do-i-understand-this-borrowed-value-error-building-a-vecpathbuf/32812134#32812134", "title": "How do I understand this borrowed value error? Building a Vec&lt;&amp;PathBuf&gt;", "body": "<p>The intuition here is:</p>\n\n<blockquote>\n  <p>I can't return a reference to something created inside a function, because it will be deallocated at the end of that function, making the reference invalid.</p>\n</blockquote>\n\n<p>Instead, you have to move that thing out. Hence <code>Vec&lt;PathBuf&gt;</code>, the owned variant of <code>Vec&lt;&amp;PathBuf&gt;</code>, (because <code>PathBuf</code> is the owned variant of <code>&amp;PathBuf</code>) should be your return type instead.</p>\n"}], "owner": {"reputation": 3906, "user_id": 656833, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?s=128&d=identicon&r=PG", "display_name": "Conrad.Dean", "link": "https://stackoverflow.com/users/656833/conrad-dean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 32812134, "answer_count": 1, "score": 0, "last_activity_date": 1443384679, "creation_date": 1443381659, "question_id": 32811897, "link": "https://stackoverflow.com/questions/32811897/how-do-i-understand-this-borrowed-value-error-building-a-vecpathbuf", "title": "How do I understand this borrowed value error? Building a Vec&lt;&amp;PathBuf&gt;", "body": "<h2>How do I understand what part of the Borrow Checker it is that I'm violating?</h2>\n\n<p>Because Rust's standard library <code>walk_dir</code> is <a href=\"https://doc.rust-lang.org/std/fs/struct.WalkDir.html\" rel=\"nofollow\">listed as \"unstable\"</a>(as of 2015-09-27), I thought I'd try to build my own function to grab all the files in a directory and it's child directories on my own.</p>\n\n<p>Here's what I've got for just listing the files in a directory, not looking at the child directory part yet:</p>\n\n<pre><code>use std::fs::File;\nuse std::path::{Path,PathBuf};\n\nfn get_files(this_path: &amp;Path) -&gt; Vec&lt;&amp;PathBuf&gt;{\n    let contents = fs::read_dir(this_path).unwrap();\n    let mut output: Vec&lt;&amp;PathBuf&gt; = Vec::new();\n\n    for path in contents {\n        let p = path.unwrap().path();\n        if fs::metadata(&amp;p).unwrap().is_dir() {\n            // dunno, recursively append files to output \n        } else if fs::metadata(&amp;p).unwrap().is_file() {\n            output.push(&amp;p)\n        }\n    }\n\n    return output;\n}\n\nfn main() {\n    for f in get_files(Path::new(\".\")) {\n        println!(\"{}\", f.display())\n    }\n}\n</code></pre>\n\n<p>When I try to run this code, I get this error:</p>\n\n<pre><code>src/main.rs:58:26: 58:27 error: `p` does not live long enough\nsrc/main.rs:58             output.push(&amp;p)\n                                        ^\nnote: in expansion of for loop expansion\nsrc/main.rs:53:5: 60:6 note: expansion site\nsrc/main.rs:49:48: 63:2 note: reference must be valid for the anonymous lifetime #1 defined on the block at 49:47...\nsrc/main.rs:49 fn get_files(this_path: &amp;Path) -&gt; Vec&lt;&amp;PathBuf&gt;{\nsrc/main.rs:50     let contents = fs::read_dir(this_path).unwrap();\nsrc/main.rs:51     let mut output: Vec&lt;&amp;PathBuf&gt; = Vec::new();\nsrc/main.rs:52\nsrc/main.rs:53     for path in contents {\nsrc/main.rs:54         let p = path.unwrap().path();\n               ...\nsrc/main.rs:54:38: 60:6 note: ...but borrowed value is only valid for the block suffix following statement 0 at 54:37\nsrc/main.rs:54         let p = path.unwrap().path();\nsrc/main.rs:55         if fs::metadata(&amp;p).unwrap().is_dir() {\nsrc/main.rs:56             // dunno, recursively append files to output\nsrc/main.rs:57         } else if fs::metadata(&amp;p).unwrap().is_file() {\nsrc/main.rs:58             output.push(&amp;p)\nsrc/main.rs:59         }\n               ...\nerror: aborting due to previous error\n</code></pre>\n\n<p>Correct me if I'm wrong, but I've got this very loose understanding that one of the cool features of Rust is you have to explicitly declare when objects are supposed to live after the scope of a function.  I think my problem is the <code>PathBuf</code> that's created in <code>let p = path.unwrap().path()</code> is discarded at the end of the iteration of the for-loop, so the <code>output</code> <code>Vec</code> is holding a reference to something that's gone.</p>\n\n<p>If that's the case:</p>\n\n<h3>How do I build up a better intuition for when I'm doing something dumb like this?</h3>\n\n<h3>Is there a better idiomatic way to build up a vector of elements from functions that return resources that have limited lifetimes?</h3>\n"}, {"tags": ["rust", "glium"], "comments": [{"owner": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1443399551, "post_id": 32811559, "comment_id": 53464817, "body": "I see at least two potential sources of inaccuracy with your measurements: 1) Floating point. 2) Process switching. I would suggest measuring individual frame times rather than averaging a huge number of them together. If you&#39;re actually having a problem with vsync, it should become obvious when you&#39;ve got wildly varying frame times. If not, then you&#39;ve just saved yourself a lot of frustration trying to solve a problem that didn&#39;t exist."}, {"owner": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1443492987, "post_id": 32811559, "comment_id": 53504909, "body": "I forked the project and added a bit of code to print out frame times, then submitted it as a <a href=\"https://github.com/johshoff/minimal_glium/pulls\" rel=\"nofollow noreferrer\">pull request here</a>. The machine I tested it on, Ubuntu with an Intel HD 5500 was reported FPS of slightly over 60 typically. Frame times were right around 16.6ms +- ~0.5ms"}, {"owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "reply_to_user": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1443498696, "post_id": 32811559, "comment_id": 53506321, "body": "I didn&#39;t put any per-frame info into the main loop just to make it extremely clear that nothing else is going on. Thanks for the contribution, though. Unfortunately, your debugging info adds too much delay (my terminal, iterm2, is too slow?) to get any valuable information."}, {"owner": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1443498947, "post_id": 32811559, "comment_id": 53506374, "body": "Hmm, interesting. Try it in terminal.app and/or redirecting to a file."}, {"owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "reply_to_user": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1443591701, "post_id": 32811559, "comment_id": 53550433, "body": "Piping to a file works better. It uncovers at least two intersting things: 1. The average frame time is more like 16.80ms than 16.67ms, throwing my estimated frame drops off a little. 2. It clearly shows some frames at close to 32ms, which seems like I missed a vsync. I also added a column for watching the drift from 60Hz.  Raw output: <a href=\"https://gist.github.com/johshoff/645d138100ab8fd69904\" rel=\"nofollow noreferrer\">gist.github.com/johshoff/645d138100ab8fd69904</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1619, "user_id": 3342206, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/92d5672ff3c806eb71d84d7298d5be43?s=128&d=identicon&r=PG&f=1", "display_name": "8bittree", "link": "https://stackoverflow.com/users/3342206/8bittree"}, "edited": false, "score": 0, "creation_date": 1443493123, "post_id": 32814939, "comment_id": 53504929, "body": "That is quite some variance. It kind of looks like you&#39;re switching between vsynced and not vsynced. I&#39;d be interested in seeing what your frame times are."}, {"owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "edited": false, "score": 0, "creation_date": 1443498190, "post_id": 32814939, "comment_id": 53506187, "body": "I see this same behavior of thousands of frames per second if the main window loses focus. Is that the case?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "edited": false, "score": 0, "creation_date": 1443498234, "post_id": 32814939, "comment_id": 53506198, "body": "@JohannesHoff I use XMonad, so, maybe?"}, {"owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "edited": false, "score": 0, "creation_date": 1443498319, "post_id": 32814939, "comment_id": 53506225, "body": "And yes, it is an actual problem that I observed in a game I was building. Stripping it down to the bare minimum I got the test case included. It certainly is an uninteresting program, but if that one can&#39;t give me 60 fps I certainly can&#39;t get that with anything more complicated."}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": false, "score": 1, "last_activity_date": 1443407510, "creation_date": 1443407510, "answer_id": 32814939, "question_id": 32811559, "link": "https://stackoverflow.com/questions/32811559/avoiding-dropped-frames-in-glium/32814939#32814939", "title": "Avoiding dropped frames in glium", "body": "<p>Yes, like @8bitree, I suspected that you are measuring incorrectly, rather than it being an actual problem. On my system, Debian:</p>\n\n<pre><code>steve@warmachine:~/tmp/guess$ cargo run\n     Running `target/debug/guess`\n300 frames in 4.427656 seconds = 67.756 fps (estimated -34.3 frames dropped)\n300 frames in 0.006892 seconds = 43529.834 fps (estimated -299.6 frames dropped)\n300 frames in 0.006522 seconds = 45997.412 fps (estimated -299.6 frames dropped)\nsteve@warmachine:~/tmp/guess$ cargo run\n     Running `target/debug/guess`\n300 frames in 4.953447 seconds = 60.564 fps (estimated -2.8 frames dropped)\n300 frames in 4.999410 seconds = 60.007 fps (estimated -0.0 frames dropped)\n300 frames in 1.608712 seconds = 186.485 fps (estimated -203.5 frames dropped)\n</code></pre>\n\n<p>So yeah, something is a bit... odd.</p>\n"}], "owner": {"reputation": 3282, "user_id": 3102, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/debc1608fc160fb51ed0b07c9ad7739c?s=128&d=identicon&r=PG", "display_name": "Johannes Hoff", "link": "https://stackoverflow.com/users/3102/johannes-hoff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 607, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1443407510, "creation_date": 1443379581, "question_id": 32811559, "link": "https://stackoverflow.com/questions/32811559/avoiding-dropped-frames-in-glium", "title": "Avoiding dropped frames in glium", "body": "<p>I'm using <a href=\"https://github.com/tomaka/glium\" rel=\"nofollow\">glium</a> as my opengl bindings, but it's impossible to get a reliable 60 FPS.</p>\n\n<p>A minimal testcase is</p>\n\n<pre><code>#[macro_use]\nextern crate glium;\nextern crate clock_ticks;\n\nuse glium::Surface;\nuse glium::glutin;\n\nfn main() {\n    use glium::DisplayBuild;\n\n    let display = glutin::WindowBuilder::new()\n        .build_glium()\n        .unwrap();\n\n    let frames = 60 * 5;\n    let trials = 3;\n\n    for _ in 0.. trials {\n        let start_ns = clock_ticks::precise_time_ns();\n        for _ in 0..frames {\n            display.draw().finish().unwrap();\n        }\n\n        let duration_ns = clock_ticks::precise_time_ns() - start_ns;\n        let duration_s = (duration_ns as f64) / 1_000_000_000f64;\n        let fps = (frames as f64) / duration_s;\n        let dropped = (duration_s - (frames as f64 * (1f64/60f64))) / (1f64/60f64);\n\n        println!(\"{} frames in {:.6} seconds = {:.3} fps (estimated {:.1} frames dropped)\", frames, duration_s, fps, dropped);\n    }\n}\n</code></pre>\n\n<p>Where I would expect 60 FPS, but is frequently showing 59 FPS when I'm running it (in OSX). <a href=\"https://github.com/johshoff/minimal_glium\" rel=\"nofollow\">The project is available on github</a> for ease of compiling and running.</p>\n\n<p>Is there any way I can tweak glium so that it won't drop frames? OSX is overriding the <code>vsync</code> setting, so there's no way not to wait for vsync between each frame.</p>\n"}, {"tags": ["rust", "servo"], "answers": [{"tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": true, "score": 6, "last_activity_date": 1443371126, "creation_date": 1443371126, "answer_id": 32810142, "question_id": 32810141, "link": "https://stackoverflow.com/questions/32810141/figure-out-code-from-what-module-is-used-in-a-large-rust-project-servo/32810142#32810142", "title": "Figure out code from what module is &quot;use&quot;d in a large rust project (servo)", "body": "<p>Per the <a href=\"https://doc.rust-lang.org/reference.html#use-declarations\">Rust reference \u00a76.1.2.2 Use declarations</a>,</p>\n\n<blockquote>\n  <p>the paths contained in <code>use</code> items are <strong>relative to the crate root</strong> [...]</p>\n  \n  <p><strong>It is also possible to use <code>self</code> and <code>super</code> at the beginning of a <code>use</code> item</strong> to refer to the current and direct parent modules respectively. </p>\n  \n  <p>All rules regarding accessing declared modules in <code>use</code> declarations apply to both module declarations and <code>extern crate</code> declarations.</p>\n</blockquote>\n\n<p>The reference (<a href=\"https://doc.rust-lang.org/reference.html#crates-and-source-files\">\u00a75 Crates and source files</a>) does not explicitly say what a \"crate root\" is, but it does share that:</p>\n\n<blockquote>\n  <p>A crate contains a tree of nested module scopes. The top level of this tree is a module that is anonymous [...] The Rust compiler is always invoked with a single source file as input, and always produces a single output crate. The processing of that source file may result in other source files being loaded as modules.</p>\n</blockquote>\n\n<p>So it seems that to find the <strong>crate root</strong> that the current file (layout_task.rs) belongs to, we need to figure out what source file <code>rustc</code> is invoked with when building the crate. With Cargo this is specified in <a href=\"http://doc.crates.io/manifest.html#configuring-a-target\">Cargo.toml</a> and defaults to <code>src/lib.rs</code>:</p>\n\n<pre><code>[lib]\npath = \"src/lib.rs\"\n</code></pre>\n\n<p>In my case, here's <a href=\"https://github.com/servo/servo/blob/a7208869f2903e36f9b2f540b55b50283d7df466/components/layout/Cargo.toml#L6\">Cargo.toml</a> and the <a href=\"https://github.com/servo/servo/blob/a7208869f2903e36f9b2f540b55b50283d7df466/components/layout/lib.rs#L56\">lib.rs</a> has:</p>\n\n<pre><code>extern crate url;\npub mod layout_task;\n</code></pre>\n\n<p>So far so good. To find out what the <code>extern crate</code> refers to, we need to look at <a href=\"https://github.com/servo/servo/blob/a7208869f2903e36f9b2f540b55b50283d7df466/components/layout/Cargo.toml#L65\">Cargo.toml</a> again:</p>\n\n<pre><code>[dependencies.url]\nversion = \"0.2\"\n</code></pre>\n\n<p>The <a href=\"http://doc.crates.io/manifest.html#the-dependencies-sections\">cargo docs</a> claim that <em>\"Dependencies from crates.io are not declared with separate sections\"</em>, but apparently they can be... So we look the package up on crates.io: <a href=\"https://crates.io/crates/url\">https://crates.io/crates/url</a></p>\n"}], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 32810142, "answer_count": 1, "score": 2, "last_activity_date": 1443371126, "creation_date": 1443371126, "question_id": 32810141, "link": "https://stackoverflow.com/questions/32810141/figure-out-code-from-what-module-is-used-in-a-large-rust-project-servo", "title": "Figure out code from what module is &quot;use&quot;d in a large rust project (servo)", "body": "<p>I'm trying to read the code of <a href=\"https://github.com/servo/servo/\" rel=\"nofollow\">servo</a>. As an example, I'm looking at <a href=\"https://github.com/servo/servo/blame/master/components/layout/layout_task.rs#L79\" rel=\"nofollow\">this code in layout_task.rs</a>:</p>\n\n<pre><code>use url::Url;\n</code></pre>\n\n<p>..and I want to know which code this refers to (the answer is <a href=\"https://github.com/servo/rust-url/blame/master/src/lib.rs#L167\" rel=\"nofollow\">rust-url</a>).</p>\n"}, {"tags": ["rust", "traits", "ownership", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "edited": false, "score": 0, "creation_date": 1443362341, "post_id": 32804818, "comment_id": 53454062, "body": "But the confusing thing is that it works fine in the first case. (Disclaimer: I do not have a comprehensive view of Rust, so I might be complete wrong) This looks like a very common scenario: you write some function that take a specific Type and then you realize that you can use them for more things. Therefore you create a Trait and replace (with some syntax) the Type for the Trait in the function definitions. The syntax that makes it works is not very ergonomic."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "edited": false, "score": 1, "creation_date": 1443371875, "post_id": 32804818, "comment_id": 53457158, "body": "@Hernan It works in the first case because <code>z1</code> is of type <code>X</code>, thus <code>&amp;z1</code> is of type <code>&amp;X</code>.  When you call <code>f1</code>, the compiler infers that <code>&amp;T = &amp;X</code> therefore <code>T = X</code>.  When you call <code>f2</code> with <code>&amp;x</code>, it gets <code>&amp;T = &amp;&amp;X</code>, therefore <code>T = &amp;X</code>, and <code>&amp;X</code> doesn&#39;t implement <code>XT</code>."}, {"owner": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "edited": false, "score": 0, "creation_date": 1443451645, "post_id": 32804818, "comment_id": 53487233, "body": "Thanks for the explanation. I get it now. I would argue that making the syntax for traits equal to the syntax for types would be more ergonomic, but I guess I am missing important things about the language."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 3, "last_activity_date": 1443330809, "creation_date": 1443330809, "answer_id": 32804818, "question_id": 32804678, "link": "https://stackoverflow.com/questions/32804678/unable-to-call-a-function-with-a-reference-to-a-type-implementing-a-trait/32804818#32804818", "title": "Unable to call a function with a reference to a type implementing a trait", "body": "<p>The problem is that you're trying to pass <code>&amp;&amp;T</code> to <code>f2</code>.  That means it expects <code>&amp;T</code> to implement <code>XT</code>, and that's <em>not</em> what you said: you said that <code>T</code> implements <code>XT</code>.</p>\n\n<p>You can modify <code>f1</code> to properly express this constraint by using a <code>where T: XT, for&lt;'a&gt; &amp;'a T: XT</code> clause, but then you can't call <code>f1</code> from <code>main</code> because <code>&amp;X</code> doesn't implement <code>XT</code>.  So you go and add an implementation for <em>that as well</em>, and <em>then</em> the code works... but honestly, it's easier to just remove that <code>&amp;</code> and call <code>f2(x)</code> instead.</p>\n\n<p>To put it another way: just because a type implements a trait <em>does not</em> mean pointers to that type <em>also</em> implement the trait.</p>\n"}], "owner": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 32804818, "answer_count": 1, "score": 0, "last_activity_date": 1443357094, "creation_date": 1443329279, "last_edit_date": 1443357094, "question_id": 32804678, "link": "https://stackoverflow.com/questions/32804678/unable-to-call-a-function-with-a-reference-to-a-type-implementing-a-trait", "title": "Unable to call a function with a reference to a type implementing a trait", "body": "<p>I am having some trouble to understand how to work with Traits and ownerships. The following example works:</p>\n\n<pre><code>struct X([u8; 4]);\n\nimpl X {\n   pub fn get(&amp;self, n: usize) -&gt; u8 {\n       self.0[n]\n   }\n}\n\nfn f1(x: &amp;X) {\n    println!(\"{}\", x.get(1));\n    f2(&amp;x);\n}\n\nfn f2(x: &amp;X) {\n    println!(\"{}\", x.get(2));    \n}\n\nfn main() {\n    let z1 = X([1u8, 2u8, 3u8, 4u8]);\n    f1(&amp;z1);\n}\n</code></pre>\n\n<p>But when I try to create a trait (here <code>XT</code>) with <code>get</code>:</p>\n\n<pre><code>trait XT {\n  fn get(&amp;self, n: usize) -&gt; u8;\n}\n\nstruct X([u8; 4]);\n\nimpl XT for X {\n   fn get(&amp;self, n: usize) -&gt; u8 {\n       self.0[n]\n   }\n}\n\nfn f1&lt;T: XT&gt;(x: &amp;T) {\n    println!(\"{}\", x.get(1));\n    f2(&amp;x);\n}\n\nfn f2&lt;T: XT&gt;(x: &amp;T) {\n    println!(\"{}\", x.get(2));    \n}\n\nfn main() {\n    let z1 = X([1u8, 2u8, 3u8, 4u8]);\n    f1(&amp;z1);\n}\n</code></pre>\n\n<p>Fails to compile with the following error message: </p>\n\n<blockquote>\n  <p>the trait <code>XT</code> is not implemented for the type <code>&amp;T</code></p>\n</blockquote>\n\n<p>It works if I change <code>f2(&amp;x)</code> to <code>f2(x)</code>. My expectation was that replacing the types by the traits, everything will work. </p>\n"}, {"tags": ["macros", "rust"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1443327515, "post_id": 32804217, "comment_id": 53446196, "body": "Your question makes no sense.  You say that you have proof that a given macro is being imported, but then proof it&#39;s <i>not</i> being imported.  Given the example above, that&#39;s just not possible.  The only thing I can think of that&#39;s <i>vaguely</i> like what you describe is <a href=\"https://danielkeep.github.io/practical-intro-to-macros.html#some-more-gotchas\" rel=\"nofollow noreferrer\">&quot;Some More Gotchas&quot; from APItMiR</a>; specifically, the part on &quot;Macros are (sometimes) lexically-scoped.&quot;  If that isn&#39;t your problem, then I have no idea what is."}, {"owner": {"reputation": 1342, "user_id": 3033123, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bfb390ac1abb471ac1090039109d14a0?s=128&d=identicon&r=PG&f=1", "display_name": "zrneely", "link": "https://stackoverflow.com/users/3033123/zrneely"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1443359238, "post_id": 32804217, "comment_id": 53453110, "body": "@DK. - I realize it doesn&#39;t make sense, which is why I posted my question. It seems ridiculous to me that after the compiler expands the macro, it suddenly decides that it can&#39;t expand the macro.  As far as an MCVE goes, I&#39;m not sure what more to include. I can&#39;t demonstrate this on the Rust playground since it necessarily uses multiple files. I will try adding more explicit code to the main.rs example though."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1443360485, "creation_date": 1443360485, "answer_id": 32808404, "question_id": 32804217, "link": "https://stackoverflow.com/questions/32804217/cannot-use-macros-imported-in-a-library-in-an-executable-that-uses-that-library/32808404#32808404", "title": "Cannot use macros imported in a library in an executable that uses that library", "body": "<p>This example reproduces your problem:</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"mac\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[dependencies]\nlazy_static = \"0.1.14\"\n</code></pre>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nlazy_static! {\n    pub static ref LIBRARY_VERSION: u8 = 1;\n}\n\npub fn adder(a: u8, b: u8) -&gt; u8 { a + b }\n</code></pre>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>extern crate mac;\n\nlazy_static! {\n    static ref EXECUTABLE_VERSION: u8 = 1;\n}\n\nfn main() {\n    println!(\"Adder version {} (lib version {})\", *EXECUTABLE_VERSION, *mac::LIBRARY_VERSION);\n    println!(\"Result: {}\", mac::adder(1, 2));\n}\n</code></pre>\n\n<p>The problem is that macro inclusions are not transitive across crates. Including them in your library file doesn't make them available in any downstream crate that uses your library. That would blow any kind of selective usage completely out of the water; think how many items you would have in a project with 20 dependencies (that each themselves can have dependencies)!</p>\n\n<p>You need to explicitly include the macros in your executable file as well, as it's a different crate:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n// ... rest of above src/main.rs\n</code></pre>\n"}], "owner": {"reputation": 1342, "user_id": 3033123, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/bfb390ac1abb471ac1090039109d14a0?s=128&d=identicon&r=PG&f=1", "display_name": "zrneely", "link": "https://stackoverflow.com/users/3033123/zrneely"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 566, "favorite_count": 0, "accepted_answer_id": 32808404, "answer_count": 1, "score": 0, "last_activity_date": 1443361163, "creation_date": 1443323773, "last_edit_date": 1443361163, "question_id": 32804217, "link": "https://stackoverflow.com/questions/32804217/cannot-use-macros-imported-in-a-library-in-an-executable-that-uses-that-library", "title": "Cannot use macros imported in a library in an executable that uses that library", "body": "<p>I'm having a lot of trouble getting macros from another crate to work in Rust. My lib.rs file looks like this:</p>\n\n<pre><code>#[macro_use]\nextern crate session_types;\n\nmod main;\n</code></pre>\n\n<p>And here's a simplified part of my main.rs, demonstrating proper use of the <code>offer!</code> macro:</p>\n\n<pre><code>use session_types::*;\n\ntype Server = Offer&lt;Choose&lt;Var&lt;Z&gt;, Var&lt;Z&gt;&gt;, Choose&lt;Var&lt;Z&gt;, Var&lt;Z&gt;&gt;&gt;;\n\nstruct Foo;\n\nimpl Foo {\n    fn server(&amp;self, c: Chan&lt;(), Rec&lt;Server&gt;&gt;) {\n        let mut c = c.enter();\n        loop {\n            c = offer!{ c,\n                LEFT_BRANCH =&gt; c.sel1().zero(),\n                RIGHT_BRANCH =&gt; c.sel2().zero()\n            };\n        }\n    }\n}\n</code></pre>\n\n<p>I know the compiler is able to expand <code>offer!</code> because I've debugged code in blocks inside that macro, and I get warnings about unused variables in that macro which look like this:</p>\n\n<pre><code>&lt;session_types macros&gt;:1:1: 5:16 note: in expansion of offer!\nsrc/main.rs:107:21: 133:14 note: expansion site\n&lt;session_types macros&gt;:3:53: 3:57: warning: unused variable: 'right', #[warn(unused_variables)] on by default\n&lt;session_types macros&gt;:3 Branch:: Left ( $id ) =&gt; $code, Branch:: Right ( $id ) =&gt; offer! {\n</code></pre>\n\n<p>which obviously includes part of the macro. However, I get compilation errors saying that, on the lines they're used, the macro <code>offer!</code> is undefined.</p>\n\n<pre><code>src/main.rs:107:21: 133:14 note: in this expansion of offer! (defined in &lt;session_types macros&gt;)\nsrc/main.rs:57:17: 57:22 error: macro undefined: 'offer!'\nsrc/main.rs:57             c = offer!{ c,\n                               ^~~~~\nsrc/main.rs:107:21: 107:26 error: macro undefined: 'offer!'\nsrc/main.rs:107             night = offer!{ night,\n</code></pre>\n\n<p>Note: this occurs on the nightly branch of the compiler.</p>\n"}, {"tags": ["visual-studio", "rust", "rust-crates"], "comments": [{"owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "edited": false, "score": 0, "creation_date": 1443375384, "post_id": 32804050, "comment_id": 53458243, "body": "Troubleshooting: try passing the verbose flag to cargo on both the command line and in VS&#39;s invocation, and see what differences there are between the outputs."}, {"owner": {"reputation": 1311, "user_id": 2962931, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/02d80804a403c5e5a5276643e4614733?s=128&d=identicon&r=PG&f=1", "display_name": "bitnick", "link": "https://stackoverflow.com/users/2962931/bitnick"}, "reply_to_user": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "edited": false, "score": 0, "creation_date": 1443399857, "post_id": 32804050, "comment_id": 53464875, "body": "I found the answer at <a href=\"https://github.com/PistonDevelopers/VisualRust/issues\" rel=\"nofollow noreferrer\">github.com/PistonDevelopers/VisualRust/issues</a> the Visual Rust plugin does not support cargo now,it just run the rustc when you compile"}], "owner": {"reputation": 1311, "user_id": 2962931, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/02d80804a403c5e5a5276643e4614733?s=128&d=identicon&r=PG&f=1", "display_name": "bitnick", "link": "https://stackoverflow.com/users/2962931/bitnick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1329, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1443322137, "creation_date": 1443321892, "last_edit_date": 1443322137, "question_id": 32804050, "link": "https://stackoverflow.com/questions/32804050/found-staticlib-instead-of-rlib-or-dylib-when-compiling-using-visual-studio", "title": "&quot;Found staticlib instead of rlib or dylib&quot; when compiling using Visual Studio", "body": "<p>I'm using the image crate and Visual Studio with Rust plugin. The code is like this:</p>\n\n<pre><code>extern crate image;\n</code></pre>\n\n<p>When I use the command line <code>cargo build</code>, everything was fine. With the Visual Studio build I get </p>\n\n<pre><code>src\\main.rs(4,1): error : found staticlib `image` instead of rlib or dylib\nhelp: please recompile this crate using --crate-type lib\n</code></pre>\n\n<p>How can I use the crate in Visual Studio?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 193, "user_id": 5341246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7260f3e40d36e8d226db85b97bc9757e?s=128&d=identicon&r=PG", "display_name": "Garogolun", "link": "https://stackoverflow.com/users/5341246/garogolun"}, "edited": false, "score": 0, "creation_date": 1443346348, "post_id": 32802198, "comment_id": 53449768, "body": "Thank you for <code>String::from</code>. For the second point, I first explicitly copy the strings into <code>cmd2</code> and <code>args2</code>, but when they are moved into the closure, aren&#39;t they physically copied on the thread&#39;s stack too?"}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 193, "user_id": 5341246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7260f3e40d36e8d226db85b97bc9757e?s=128&d=identicon&r=PG", "display_name": "Garogolun", "link": "https://stackoverflow.com/users/5341246/garogolun"}, "edited": false, "score": 0, "creation_date": 1443349069, "post_id": 32802198, "comment_id": 53450528, "body": "@Garogolun Well, the vector is copied, but that is only a shallow copy (i.e. the struct containing a pointer, length and capacity). The content of the vector isn&#39;t copied."}, {"owner": {"reputation": 193, "user_id": 5341246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7260f3e40d36e8d226db85b97bc9757e?s=128&d=identicon&r=PG", "display_name": "Garogolun", "link": "https://stackoverflow.com/users/5341246/garogolun"}, "edited": false, "score": 0, "creation_date": 1443350788, "post_id": 32802198, "comment_id": 53451057, "body": "The thread can access the content of the vector. However, if <code>Process::new</code> returns, the vector along with its content gets destructed. Wouldn&#39;t this be unsafe then?"}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 193, "user_id": 5341246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7260f3e40d36e8d226db85b97bc9757e?s=128&d=identicon&r=PG", "display_name": "Garogolun", "link": "https://stackoverflow.com/users/5341246/garogolun"}, "edited": false, "score": 0, "creation_date": 1443351463, "post_id": 32802198, "comment_id": 53451211, "body": "@Garogolun No, the vector&#39;s content will not be destroyed at the end of <code>Process::new</code> because the vector has been moved into the closure, which means cleaning up the vector has become the closure&#39;s responsibility."}, {"owner": {"reputation": 193, "user_id": 5341246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7260f3e40d36e8d226db85b97bc9757e?s=128&d=identicon&r=PG", "display_name": "Garogolun", "link": "https://stackoverflow.com/users/5341246/garogolun"}, "edited": false, "score": 0, "creation_date": 1443351825, "post_id": 32802198, "comment_id": 53451287, "body": "Ah, apparently I incorrectly assumed that the vector&#39;s content resides in the stack as well. Thank you!"}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 3, "last_activity_date": 1443302815, "creation_date": 1443302815, "answer_id": 32802198, "question_id": 32801887, "link": "https://stackoverflow.com/questions/32801887/moving-a-str-into-a-thread/32802198#32802198", "title": "Moving a &amp;[&amp;str] into a thread", "body": "<blockquote>\n  <p><code>let args2: Vec&lt;_&gt; = args.iter().map(|arg| { arg.to_string() }).collect();</code> seems a bit verbose to convert a &amp;[&amp;str] into a Vec. Can this be done \"nicer\"?</p>\n</blockquote>\n\n<p>I don't think so. There are a few minor variations of this that also work (e.g. <code>args.iter().cloned().map(String::from).collect();</code>), but I can't think of one that is substantially nicer. One minor point is that using <code>to_string</code> to convert a <code>&amp;str</code> to a <code>String</code> isn't quite as efficient as using <code>String::from</code> or <code>to_owned</code>.</p>\n\n<blockquote>\n  <p>If I understand it correctly, the strings get copied twice: first by the let cmd2 and let args2 statements; then by moving them inside the move closure. Is this correct? And if so, can it be done with one copy?</p>\n</blockquote>\n\n<p>No, the strings are only copied where you call <code>to_string</code>. Strings don't implement <code>Copy</code>, so they're never copied implicitly. If you try to access the strings after they have been moved to the closure, you will get a compiler error.</p>\n"}], "owner": {"reputation": 193, "user_id": 5341246, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7260f3e40d36e8d226db85b97bc9757e?s=128&d=identicon&r=PG", "display_name": "Garogolun", "link": "https://stackoverflow.com/users/5341246/garogolun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 431, "favorite_count": 0, "accepted_answer_id": 32802198, "answer_count": 1, "score": 1, "last_activity_date": 1443302815, "creation_date": 1443300579, "question_id": 32801887, "link": "https://stackoverflow.com/questions/32801887/moving-a-str-into-a-thread", "title": "Moving a &amp;[&amp;str] into a thread", "body": "<p>As the title already says, I'm trying to move a <code>&amp;[&amp;str]</code> into a thread. Well, actually, the code below works, but I have two problems with it:</p>\n\n<ol>\n<li><code>let args2: Vec&lt;_&gt; = args.iter().map(|arg| { arg.to_string() }).collect();</code> seems a bit verbose to convert a <code>&amp;[&amp;str]</code> into a <code>Vec&lt;String&gt;</code>. Can this be done \"nicer\"?</li>\n<li>If I understand it correctly, the strings get copied twice: first by the <code>let cmd2</code> and <code>let args2</code> statements; then by moving them inside the <code>move</code> closure. Is this correct? And if so, can it be done with one copy?</li>\n</ol>\n\n<p>I'm aware of <code>thread::scoped</code>, but is deprecated at the moment. I'm also coding this to learn a bit more about Rust, so comments about \"unrusty\" code are appreciated too.</p>\n\n<pre><code>use std::process::{Command,Output};\nuse std::thread;\nuse std::thread::JoinHandle;\n\npub struct Process {\n    joiner: JoinHandle&lt;Output&gt;,\n}\n\nimpl Process {\n    pub fn new(cmd: &amp;str, args: &amp;[&amp;str]) -&gt; Process {\n        // Copy the strings for the thread\n        let cmd2 = cmd.to_string();\n        let args2: Vec&lt;_&gt; = args.iter().map(|arg| { arg.to_string() }).collect();\n\n        let child = thread::spawn(move || {\n            Command::new(cmd2).args(&amp;args2[..]).output().unwrap_or_else(|e| {\n                panic!(\"Failed to execute process: {}\", e)\n            })\n        });\n        Process { joiner: child }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1443288688, "last_edit_date": 1443288688, "creation_date": 1443276675, "answer_id": 32798085, "question_id": 32797777, "link": "https://stackoverflow.com/questions/32797777/how-to-iteratorchain-a-vector-of-iterators/32798085#32798085", "title": "How to Iterator::chain a vector of iterators?", "body": "<p>As the error message states, the type of a <code>Range</code> is different than the type of <code>Chain&lt;Range, Range&gt;</code>, and the type of the accumulator in the call the <code>fold</code> must always be consistent. Otherwise, what would the return type be from the <code>fold</code> if there were no items in the vector?</p>\n\n<p>The simplest solution is to use a <em>trait object</em>, specifically <code>Box&lt;Iterator&gt;</code>:</p>\n\n<pre><code>type MyIter = Box&lt;Iterator&lt;Item=i32&gt;&gt;;\n\nfn main() {\n    let a = 0..3;\n    let b = 3..6;\n    let c = 6..9;\n    let v = vec![b, c];\n    let z = v.into_iter().fold(Box::new(a) as MyIter, |acc, e| {\n        Box::new(acc.chain(Box::new(e) as MyIter)) as MyIter\n    });\n\n    for i in z {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n\n<p>This adds a level of indirection but unifies the two concrete types (<code>Range</code>, <code>Chain</code>) as a single type.</p>\n\n<p><s>A potentially more efficient but longer-to-type version would be to create an <code>enum</code> that represented either a <code>Range</code> or a <code>Chain</code>, and then implement <code>Iterator</code> for that new type.</s></p>\n\n<p>Actually, I don't think the <code>enum</code> would work as it would require a recursive definition, which is not allowed.</p>\n"}, {"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": true, "score": 9, "last_activity_date": 1443309210, "creation_date": 1443309210, "answer_id": 32802962, "question_id": 32797777, "link": "https://stackoverflow.com/questions/32797777/how-to-iteratorchain-a-vector-of-iterators/32802962#32802962", "title": "How to Iterator::chain a vector of iterators?", "body": "<p>Use <a href=\"http://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.flat_map\" rel=\"noreferrer\"><code>flat_map</code></a>:</p>\n\n\n\n<pre><code>fn main() {\n    let a = 0..3;\n    let b = 3..6;\n    let c = 6..9;\n    let v = vec![a, b, c];\n    v.iter().flat_map(|it| it.clone());\n}\n</code></pre>\n"}], "owner": {"reputation": 225, "user_id": 2310816, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8b3fa637ecdb1e4bd3bdfde3183a3ee?s=128&d=identicon&r=PG", "display_name": "ifett", "link": "https://stackoverflow.com/users/2310816/ifett"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3667, "favorite_count": 1, "accepted_answer_id": 32802962, "answer_count": 2, "score": 8, "last_activity_date": 1443309210, "creation_date": 1443274586, "question_id": 32797777, "link": "https://stackoverflow.com/questions/32797777/how-to-iteratorchain-a-vector-of-iterators", "title": "How to Iterator::chain a vector of iterators?", "body": "<p>for a given set of iterators a, b, c, one can chain them successfully with <code>a.chain(b).chain(c)</code>. Since the CLI util I am trying to write provides a vector of paths (strings, --dirs \"a/b/c\" \"d/e/f\" ...), I would like to use <code>walkd_dir</code> on each of them and then chain them together. My first thought is:</p>\n\n<pre><code>fn main() {\n    let a = 0..3;\n    let b = 3..6;\n    let c = 6..9;\n    let v = vec![b, c];\n    v.iter().cloned().fold(a, |acc, e| acc.chain(e));\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/hfNQd2\" rel=\"noreferrer\">http://is.gd/hfNQd2</a>, returns</p>\n\n<pre><code>&lt;anon&gt;:6:40: 6:52 error: mismatched types:\n expected `core::ops::Range&lt;_&gt;`,\n    found `core::iter::Chain&lt;core::ops::Range&lt;_&gt;, core::ops::Range&lt;_&gt;&gt;`\n(expected struct `core::ops::Range`,\n    found struct `core::iter::Chain`) [E0308]\n&lt;anon&gt;:6     v.iter().cloned().fold(a, |acc, e| acc.chain(e));\n</code></pre>\n\n<p>Another attempt <a href=\"http://is.gd/ZKdxZM\" rel=\"noreferrer\">http://is.gd/ZKdxZM</a>, although <code>a.chain(b).chain(c)</code> works.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443229991, "post_id": 32791086, "comment_id": 53423882, "body": "For what it&#39;s worth, it&#39;s probably a bad idea to fork <code>rustc-serialize</code> to add an encoding for another type. It&#39;s likely more sane to implement the <code>Encodable</code> trait by hand for your struct that contains the <code>IpAddr</code>."}, {"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443457310, "post_id": 32791086, "comment_id": 53490742, "body": "I tried that but I got an &quot;only traits defined in the current crate can be implemented for arbitrary types&quot; error. It seems that you can&#39;t implement traits for traits you didn&#39;t define (imported rustc-serialize &#39;encodable` trait) for structs that you didn&#39;t define (imported IpAddr).  If you have been able to do that, please tell me. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443458707, "post_id": 32791086, "comment_id": 53491505, "body": "Check out <a href=\"http://stackoverflow.com/q/25413201/155423\">How do I implement a trait I don&#39;t own for a type I don&#39;t own?</a>. The wrapper type is the correct solution here. In your case, you already have a wrapper type (<i>serialize <b>a struct</b> with an IpAddr enum</i>). You can just manually implement <code>Encodable</code> for whatever your struct is."}, {"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443461545, "post_id": 32791086, "comment_id": 53492999, "body": "Thanks for the quick response. So i&#39;ve been trying to implement that, but I&#39;ve been running into an error. So based on what the stack overflow you linked, I have     <code>impl Encodable for myStruct {             fn encode .....  {                     match *self {                            IpAddr(_) =&gt; {},                            _ =&gt; {}, } } }</code>  But I keep getting an <code>Unresolved enum variant, struct or const &#39;IpAddr&#39;</code> error even though I&#39;ve explicitly imported it using use, and I get the same error on built in types too. (P.S. How can you do code blocks in comments?) And thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443462398, "post_id": 32791086, "comment_id": 53493489, "body": "That&#39;s just some syntax that isn&#39;t needed in this case (I added a comment to the other question as well). You want something closer <a href=\"http://is.gd/2DwLtS\" rel=\"nofollow noreferrer\">to this</a>. Also, you can&#39;t do code blocks in comments, as comments are supposed to be short and may be deleted."}, {"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443463566, "post_id": 32791086, "comment_id": 53494068, "body": "Where you wrote the <code>&#47;&#47; add appropriate error handling, pick the correct emit_* methods</code>, did you mean have a match statement for the <code>IpAddr</code> type and <code>String</code> type, in your example? Thanks"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443464443, "post_id": 32791086, "comment_id": 53494565, "body": "at this point, we are far off topic from your original question. I&#39;d encourage you to ask a new one. That will allow future searchers to find it, instead of being buried in comments."}, {"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443466585, "post_id": 32791086, "comment_id": 53495587, "body": "Ok. I will keep messing around with it first. If I still can&#39;t get it, I&#39;ll ask another question. Thanks for all your help!"}, {"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443471728, "post_id": 32791086, "comment_id": 53498128, "body": "To those that find this, I was able to implement the trait for the struct by following this site. <a href=\"http://valve.github.io/blog/2014/08/25/json-serialization-in-rust-part-1/\" rel=\"nofollow noreferrer\">valve.github.io/blog/2014/08/25/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "edited": false, "score": 0, "creation_date": 1443457096, "post_id": 32792621, "comment_id": 53490633, "body": "That alone seemed to have fixed it. Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1476373075, "last_edit_date": 1592644375, "creation_date": 1443229749, "answer_id": 32792621, "question_id": 32791086, "link": "https://stackoverflow.com/questions/32791086/issue-when-replacing-a-crates-dependency-with-a-local-version/32792621#32792621", "title": "Issue when replacing a crates dependency with a local version", "body": "<p>Please review the <a href=\"http://doc.crates.io/specifying-dependencies.html#overriding-with-local-dependencies\" rel=\"nofollow noreferrer\">Cargo documentation on overriding dependencies</a>:</p>\n<blockquote>\n<p>To specify overrides, create a <code>.cargo/config</code> file in some ancestor of your project's directory (common places to put it is in the root of your code directory or in your home directory).</p>\n<p>Inside that file, put this:</p>\n<pre><code>paths = [&quot;/path/to/project/rand&quot;]\n</code></pre>\n</blockquote>\n<p>Going deeper, you are likely running into <a href=\"https://github.com/rust-lang/rust/issues/22750\" rel=\"nofollow noreferrer\">issue 22750</a> - two different versions of a crate interacting leads to unhelpful error messages. When you add rustc-serialize to your <code>dependencies</code>, you aren't <em>replacing</em> the old version, you are <em>adding</em> a new one.</p>\n<p>In general, this is a good feature. If my project relies on crates A and B and they both rely on crate Z but with different versions, Rust can handle that just fine. The problem arises when they re-export items from those crates.</p>\n"}], "owner": {"reputation": 109, "user_id": 5377817, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh4.googleusercontent.com/--tH3CFcFKpo/AAAAAAAAAAI/AAAAAAAACKU/lFVjvmgCTqs/photo.jpg?sz=128", "display_name": "Tenzin Rigden", "link": "https://stackoverflow.com/users/5377817/tenzin-rigden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 32792621, "answer_count": 1, "score": 2, "last_activity_date": 1476373075, "creation_date": 1443217497, "last_edit_date": 1443229874, "question_id": 32791086, "link": "https://stackoverflow.com/questions/32791086/issue-when-replacing-a-crates-dependency-with-a-local-version", "title": "Issue when replacing a crates dependency with a local version", "body": "<p>So I am trying to serialize a struct using bincode following these <a href=\"https://peteris.rocks/blog/serialize-any-object-to-a-binary-format-in-rust/\" rel=\"nofollow\">instructions</a>, and I was able to get that to work.</p>\n\n<p>But then I wanted to serialize a struct with an <code>IpAddr</code> enum. Since <code>IpAddr</code> doesn't implement the <code>Encodable</code> trait needed, I downloaded the rustc_serialize crate from git and implemented encodable for <code>IpAddr</code> myself. I then changed my <code>Cargo.toml</code> file to:</p>\n\n<pre><code>[dependencies]\n# rustc-serialize = \"0.3\"\nbyteorder = \"0.3\"\nbincode = \"0.4\"\n\n[dependencies.rustc-serialize]\npath = \"src/rustc-serialize-master\"\n</code></pre>\n\n<p>But now, the same code from the struct I was using doesn't compile saying that \n<code>rustc_serialize::serialize::Encodable</code> is not implemented for my struct even though i have <code>#[derive(RustcEncodable)]</code> above the struct. </p>\n\n<p>Even when I get rid of the code I added to the local version of rustc_serialize, I still get that error. </p>\n\n<p>I think it might be due to something being screwed up with the way bincode and a local rustc_serialize interact, but I'm not sure. </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2083, "user_id": 639069, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/36ca255e1dbe80385228b10ce2950ca5?s=128&d=identicon&r=PG", "display_name": "R.D.", "link": "https://stackoverflow.com/users/639069/r-d"}, "edited": false, "score": 0, "creation_date": 1443214167, "post_id": 32790322, "comment_id": 53419820, "body": "Do you mean to say that <code>let foo = (0..).map(|n| n * n); let bar = foo.take_while(...); bar</code> is compiled differently than <code>let bar = (0..).map(|n| n * n).take_while(...)</code>?"}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 0, "creation_date": 1443235302, "post_id": 32790322, "comment_id": 53424762, "body": "Haskell is a bit of an odd example, since it uses implicit thunks and acts at a more &quot;high level&quot; than Rust. A more obvious example would be something like Ocaml&#39;s lazy lists, which are just <code>Nil | Cons of &#39;a * (unit -&gt; &#39;a stream)</code>. The main difference being Haskell&#39;s laziness is something that happens to your code, whereas explicit laziness is something you make from your code."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1443270187, "post_id": 32790322, "comment_id": 53431981, "body": "<code>take_while</code> is not responsible. <code>map</code>, <code>take_while</code>, <code>filter</code> are adaptors that take and return lazy iterators. <code>fold</code> is the consumer, it takes an iterator and produces a value. <code>take_while</code>&#39;s role is that it can end the stream if its predicate fails."}], "tags": [], "owner": {"reputation": 3240, "user_id": 3031069, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/99963eedbe0698475d7443bf95edb43e?s=128&d=identicon&r=PG&f=1", "display_name": "choeger", "link": "https://stackoverflow.com/users/3031069/choeger"}, "is_accepted": false, "score": 0, "last_activity_date": 1443214549, "last_edit_date": 1443214549, "creation_date": 1443213541, "answer_id": 32790322, "question_id": 32790281, "link": "https://stackoverflow.com/questions/32790281/how-does-rust-find-out-the-upper-limit-of-an-iterator/32790322#32790322", "title": "How does Rust find out the upper limit of an iterator?", "body": "<p>I am not a rust expert, but the comment</p>\n\n<pre><code>// All natural numbers squared\n</code></pre>\n\n<p>tells me, that the list (or stream, enumeration, whatever) cannot be fully evaluated. So I would put my bet on some kind of lazy evaluation.</p>\n\n<p>In that case, the range would carry an internal state and upon every usage the next element is computed. Catamorphisms (fold, map) are then implemented by \"storing\" the respective implementation instead of evaluating it directly.</p>\n\n<p><strong>update</strong>: I overlooked the <code>take_while</code> part. This method seems to be responsible (also according to the comment), to actually force the evaluation. Everything before just computes the range abstract, i.e. without any concrete elements. This is possible because functions can be composed.</p>\n\n<p>The standard example for such a behavior is <a href=\"http://www.techrepublic.com/article/infinite-list-tricks-in-haskell/\" rel=\"nofollow\">haskell</a></p>\n"}, {"tags": [], "owner": {"reputation": 1268, "user_id": 642374, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e17a5650ea3753c4306e1e6b5c6cbdee?s=128&d=identicon&r=PG", "display_name": "Wes Cumberland", "link": "https://stackoverflow.com/users/642374/wes-cumberland"}, "is_accepted": false, "score": 2, "last_activity_date": 1443214679, "last_edit_date": 1443214679, "creation_date": 1443214408, "answer_id": 32790504, "question_id": 32790281, "link": "https://stackoverflow.com/questions/32790281/how-does-rust-find-out-the-upper-limit-of-an-iterator/32790504#32790504", "title": "How does Rust find out the upper limit of an iterator?", "body": "<p>The compiler doesn't know when <code>(0..)</code> ends.  However the iterators are lazy (as is mentioned on the page you linked to) and the the <code>.take_while(|&amp;n| n &lt; upper)</code> statement will stop the sequence as soon as <code>n</code> is greater than or equal to <code>upper</code></p>\n"}, {"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1443217083, "post_id": 32790665, "comment_id": 53420982, "body": "What the end of <code>0..</code> is, is kind of a trick question. It ends with a debug assertion for overflow. Deduction: Make sure less elements than that are pulled out."}, {"owner": {"reputation": 2083, "user_id": 639069, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/36ca255e1dbe80385228b10ce2950ca5?s=128&d=identicon&r=PG", "display_name": "R.D.", "link": "https://stackoverflow.com/users/639069/r-d"}, "edited": false, "score": 0, "creation_date": 1443217592, "post_id": 32790665, "comment_id": 53421151, "body": "For those coming from imperative languages, is it more accurate to think of the sequence as <code>fold(filter(take_while(map(0...))))</code>  as opposed to <code>a = map(); b = take_while(a) ; ...</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2083, "user_id": 639069, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/36ca255e1dbe80385228b10ce2950ca5?s=128&d=identicon&r=PG", "display_name": "R.D.", "link": "https://stackoverflow.com/users/639069/r-d"}, "edited": false, "score": 0, "creation_date": 1443231133, "post_id": 32790665, "comment_id": 53424049, "body": "@R.D. In languages I&#39;ve used, those are equivalent pieces of code. I added another paragraph that might help in understanding. Unfortunately, there&#39;s no built-in direct equivalent I am aware of for C or C++."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1443357649, "post_id": 32790665, "comment_id": 53452698, "body": "In other words, Rust iterators use a &quot;pull&quot; model, not a &quot;push&quot; one."}, {"owner": {"reputation": 2083, "user_id": 639069, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/36ca255e1dbe80385228b10ce2950ca5?s=128&d=identicon&r=PG", "display_name": "R.D.", "link": "https://stackoverflow.com/users/639069/r-d"}, "edited": false, "score": 0, "creation_date": 1443758530, "post_id": 32790665, "comment_id": 53629358, "body": "@Shepmaster thanks for the brilliant edits.  It went a long way in me understanding Lazy evaluation.  Am I correct in noting that this really has nothing to do with Rust?  I think one could return lazily evaluated iterator in other imperative languages like Java and still achieve similar results."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2083, "user_id": 639069, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/36ca255e1dbe80385228b10ce2950ca5?s=128&d=identicon&r=PG", "display_name": "R.D.", "link": "https://stackoverflow.com/users/639069/r-d"}, "edited": false, "score": 0, "creation_date": 1443758871, "post_id": 32790665, "comment_id": 53629452, "body": "@R.D. you mean like <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html\" rel=\"nofollow noreferrer\">Java&#39;s Iterator</a> ^_^? Yes, it&#39;s nothing unique to Rust, but I might argue that many of the things that Rust provides combine to make iterators especially nice in Rust. For example, the <code>for</code> loop is based on iterators making it clean to integrate, and the generics without extra overhead make it efficient to use them more frequently."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1443230985, "last_edit_date": 1495540705, "creation_date": 1443215140, "answer_id": 32790665, "question_id": 32790281, "link": "https://stackoverflow.com/questions/32790281/how-does-rust-find-out-the-upper-limit-of-an-iterator/32790665#32790665", "title": "How does Rust find out the upper limit of an iterator?", "body": "<blockquote>\n  <p>How does the compiler know when <code>(0..)</code> ends? </p>\n</blockquote>\n\n<p>The compiler doesn't know at all. That is a range literal, specifically a <a href=\"http://doc.rust-lang.org/std/ops/struct.RangeFrom.html\" rel=\"nofollow noreferrer\"><code>RangeFrom</code></a>. Note that it implements the <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html\" rel=\"nofollow noreferrer\"><code>Iterator</code></a> trait. The core piece of <code>Iterator</code> is <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next\" rel=\"nofollow noreferrer\"><code>next</code></a>:</p>\n\n<pre><code>fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;\n</code></pre>\n\n<p>That is, given a mutable borrow to the iterator, it can return another item (<code>Some</code>) or signal that there are no more items (<code>None</code>). It is completely possible to have iterators that <a href=\"http://doc.rust-lang.org/std/iter/fn.repeat.html\" rel=\"nofollow noreferrer\">go on forever</a>. </p>\n\n<p>In this particular example:</p>\n\n<ul>\n<li>The range will yield every unsigned 32-bit number before stopping <sup>\u2020</sup>.</li>\n<li>The <code>map</code> will stop when the underlying iterator stops.</li>\n<li>The <code>take_while</code> will stop when the predicate fails or the underlying iterator stops.</li>\n<li>The <code>filter</code> will stop when the underlying iterator stops.</li>\n<li>The <code>fold</code> will stop when the underlying iterator stops.</li>\n</ul>\n\n<blockquote>\n  <p>Isn't this extremely memory inefficient compared to the imperative version? </p>\n</blockquote>\n\n<p>Nope! In fact, the compiler is very likely to compile this to the same code as the imperative version! You'd want to check the LLVM IR or assembly to be 100% sure, but Rust's monomorphization capabilities combined with LLVM's optimizer do some pretty amazing things.</p>\n\n<p>Each <em>iterator adapter</em> pulls just enough items from the previous adapter to calculate the next value. In your example, I'd expect a constant memory allocation for the entire process.</p>\n\n<p>The only component of the pipeline that requires any extra space would be the <code>fold</code>, and it just needs an accumulator value that is an <code>u32</code>. All the other adapters have no extra state.</p>\n\n<p>An important thing to note is that calling the <code>map</code>, <code>filter</code>, and <code>take_while</code> iterator adaptors doesn't do any iterator computation at that point in time. They simply return new objects:</p>\n\n<pre><code>// Note the type is\n// Filter&lt;TakeWhile&lt;Map&lt;RangeFrom&lt;_&gt;, [closure]&gt;, [closure]&gt;, [closure]&gt;\nlet () = \n    (0..)\n    .map(|n| n * n)            \n    .take_while(|&amp;n| n &lt; 20)\n    .filter(|n| n % 2 == 0);\n// At this point, we still haven't even looked at a single value\n</code></pre>\n\n<p>Whenever you call <code>next</code> on the final adaptor, each layer of the adaptor stack does enough work to get the next value. In the original example, <code>fold</code> is an <em>iterator terminator</em> that consumes the entire iterator, calling <code>next</code> until there are no more values.</p>\n\n<p><strong>\u2020</strong> As <a href=\"https://stackoverflow.com/questions/32790281/how-does-rust-find-out-the-upper-limit-of-an-iterator#comment53420982_32790665\">bluss points out</a>, you don't really want to try and go past the maximum value of a range, as it will either <a href=\"http://is.gd/KVCRDP\" rel=\"nofollow noreferrer\">panic or loop forever</a>, depending on if it is built in debug or release mode.</p>\n"}], "owner": {"reputation": 2083, "user_id": 639069, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/36ca255e1dbe80385228b10ce2950ca5?s=128&d=identicon&r=PG", "display_name": "R.D.", "link": "https://stackoverflow.com/users/639069/r-d"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 270, "favorite_count": 0, "accepted_answer_id": 32790665, "answer_count": 3, "score": 1, "last_activity_date": 1443230985, "creation_date": 1443213406, "last_edit_date": 1443215910, "question_id": 32790281, "link": "https://stackoverflow.com/questions/32790281/how-does-rust-find-out-the-upper-limit-of-an-iterator", "title": "How does Rust find out the upper limit of an iterator?", "body": "<p>I'm going through a couple of Rust examples, and there's a particular snippet of code which I don't really understand how it works. In particular, <a href=\"http://rustbyexample.com/fn/hof.html\" rel=\"nofollow\">this example</a> of Higher Order Functions. My focus is on this snippet of code:</p>\n\n<pre><code>let sum_of_squared_odd_numbers: u32 =\n    (0..).map(|n| n * n)             // All natural numbers squared\n         .take_while(|&amp;n| n &lt; upper) // Below upper limit\n         .filter(|n| is_odd(*n))     // That are odd\n         .fold(0, |sum, i| sum + i); // Sum them\n</code></pre>\n\n<p>Here are my questions:</p>\n\n<ol>\n<li><p>How does the compiler know when <code>(0..)</code> ends?  Is the loop unrolled at compile time and are all the lambdas evaluated?</p></li>\n<li><p>Isn't this extremely memory inefficient compared to the imperative version?  For example <code>(0..).map(|n| n * n)</code> alone would end up taking O(n) memory.</p></li>\n</ol>\n"}, {"tags": ["arrays", "vector", "casting", "rust"], "answers": [{"tags": [], "owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "is_accepted": false, "score": 3, "last_activity_date": 1443209028, "last_edit_date": 1443209028, "creation_date": 1443208694, "answer_id": 32789183, "question_id": 32789069, "link": "https://stackoverflow.com/questions/32789069/automatic-casting-vec-to-array/32789183#32789183", "title": "Automatic casting Vec to array", "body": "<p>You're looking at the <a href=\"https://doc.rust-lang.org/stable/std/ops/trait.Deref.html\" rel=\"nofollow\"><code>Deref</code></a> trait in action. If you have a type <code>T</code> that implements this trait, and you call a function that takes an argument of type <code>&amp;U</code>, then <code>&amp;T</code> will call <code>deref</code> on the value to make it the right type. The Book has a <a href=\"https://doc.rust-lang.org/stable/book/deref-coercions.html\" rel=\"nofollow\">chapter</a> about it.</p>\n\n<p>You can see <code>Vec</code>'s implementation <a href=\"https://doc.rust-lang.org/stable/src/collections/vec.rs.html#1346-1356\" rel=\"nofollow\">here</a> It just copies the <code>Vec</code>'s pointer and length fields into a new struct, which is almost free.</p>\n\n<p>And you're right, it's better to write functions that take views rather than owning types. A function that takes a <code>Vec&lt;u8&gt;</code> can only be called with a <code>Vec&lt;u8&gt;</code>, but a function taking a <code>&amp;[u8]</code> can be called with a <code>Vec&lt;u8&gt;</code>, a <code>[u8; 500]</code>, or <code>&amp;[u8]</code> from somewhere else. Similarly, functions should take <code>&amp;T</code> rather than <code>Box&lt;T&gt;</code> when possible, or <code>&amp;str</code> rather than <code>String</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1443214049, "post_id": 32789274, "comment_id": 53419775, "body": "@BenjaminLindley Nice catch; look at the egg on my face! I only looked at the <code>sum</code> function... I&#39;ve updated the answer to be more clear about that."}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1443214179, "post_id": 32789274, "comment_id": 53419824, "body": "Okay, I honestly wasn&#39;t sure whether you had made a mistake, or if my understanding of types in rust was off."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "edited": false, "score": 0, "creation_date": 1443215481, "post_id": 32789274, "comment_id": 53420401, "body": "@BenjaminLindley No way! Believe in yourself! I&#39;ve got a regular fallible human brain like most of the people on Stack Overflow ^_^"}, {"owner": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "edited": false, "score": 0, "creation_date": 1443228353, "post_id": 32789274, "comment_id": 53423654, "body": "Is there a good suggestion about the return value of functions? Should they return <code>[u8]</code> or <code>Vec&lt;u8&gt;</code>, or should they take <code>Vec&lt;u8&gt;</code> as an argument?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "edited": false, "score": 0, "creation_date": 1444346493, "post_id": 32789274, "comment_id": 53877293, "body": "@Hernan you can&#39;t really return a <code>[u8]</code>. Whether you can return a <code>&amp;[u8]</code> depends on your case, but that&#39;s often more memory-efficient. Other cases use a <code>Vec&lt;u8&gt;</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 9, "last_activity_date": 1443214008, "last_edit_date": 1443214008, "creation_date": 1443209050, "answer_id": 32789274, "question_id": 32789069, "link": "https://stackoverflow.com/questions/32789069/automatic-casting-vec-to-array/32789274#32789274", "title": "Automatic casting Vec to array", "body": "<p>Let's get one thing out of the way: there are <strong>no arrays</strong> in your <code>sum</code> function. Rust has three related types, and you can search here on Stack Overflow or <em><a href=\"http://doc.rust-lang.org/stable/book/\" rel=\"noreferrer\">The Rust Programming Language</a></em> for more information about them:</p>\n\n<ol>\n<li>Slices <code>&amp;[T]</code>.</li>\n<li>Vectors <code>Vec&lt;T&gt;</code></li>\n<li>Arrays <code>[T; n]</code></li>\n</ol>\n\n<p>The <code>v</code> argument is a <em>slice</em>, which is simply a pointer to a chunk of data and the number of elements.</p>\n\n<blockquote>\n  <p>Why and how does this work? Is there an automatic casting between these two types?</p>\n</blockquote>\n\n<p>The <a href=\"https://doc.rust-lang.org/stable/core/ops/trait.Deref.html\" rel=\"noreferrer\"><code>Deref</code> trait</a> is coming into play here. There's an implementation of this trait that looks like:</p>\n\n<pre><code>impl&lt;T&gt; Deref for Vec&lt;T&gt; {\n    type Target = [T];\n    fn deref(&amp;self) -&gt; &amp;[T];\n}\n</code></pre>\n\n<p>This means that any reference to a <code>Vec&lt;T&gt;</code> can act as a reference to a <code>[T]</code> and gains all of the methods from the target type. <code>Deref</code> is understood by the compiler, but any type is able to implement it, so it's only sort of special.</p>\n\n<blockquote>\n  <p>Does it incur any penalty or it is just taking the memory location of the underlying array of the vector?</p>\n</blockquote>\n\n<p>This is a zero-cost transformation, which is why the compiler will do it for you. It's very unusual to have the compiler do anything for you that is expensive.</p>\n\n<blockquote>\n  <p>Does this mean that for this type of usage it is better to use an array and not a vector as the API?</p>\n</blockquote>\n\n<p>Absolutely! 100% of the time you should accept a <code>&amp;[T]</code> instead of a <code>&amp;Vec&lt;T&gt;</code>. More things than just a <code>Vec</code> can provide a <code>&amp;[T]</code>, and arrays are an example of that.</p>\n"}], "owner": {"reputation": 5159, "user_id": 482819, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/241c9426403e040a283f10ae6499ace6?s=128&d=identicon&r=PG", "display_name": "Hernan", "link": "https://stackoverflow.com/users/482819/hernan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 894, "favorite_count": 0, "accepted_answer_id": 32789274, "answer_count": 2, "score": 4, "last_activity_date": 1443214008, "creation_date": 1443208156, "last_edit_date": 1443208606, "question_id": 32789069, "link": "https://stackoverflow.com/questions/32789069/automatic-casting-vec-to-array", "title": "Automatic casting Vec to array", "body": "<p>While trying different ways to send a <code>Vec&lt;u8&gt;</code> to a function that expects an <code>&amp;[u8]</code>, I made a \"mistake\" which actually works. I wrote some sample code to show this:</p>\n\n<pre><code>fn sum(v: &amp;[u8]) -&gt; u8 {\n    let mut s = 0u8;\n    for x in v.iter() {\n        s = s + x;\n    }\n    return s;\n}\n\nfn main() {\n    let myarr = [1u8, 2u8, 3u8];\n    let myvec = vec![1u8, 2u8, 3u8];\n\n    println!(\"{}\", sum(&amp;myarr));\n    println!(\"{}\", sum(&amp;myvec));\n}\n</code></pre>\n\n<p>I have a few questions in relation to this:</p>\n\n<ul>\n<li>Why and how does this work? </li>\n<li>Is there an automatic casting between these two types? </li>\n<li>Does it incur any penalty or it is just taking the memory location of the underlying array of the vector? </li>\n<li>Does this mean that for this type of usage (read only operations on an array of numbers) is better to use an array and not a vector as the API? </li>\n</ul>\n"}, {"tags": ["rust", "return-value"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1443208204, "post_id": 32788915, "comment_id": 53416951, "body": "Your question doesn&#39;t really give enough information to answer it in a useful way. What do you expect to happen to the <code>Ok(String)</code> or the <code>Err(Error)</code>? How do you convert between the two representations?"}, {"owner": {"reputation": 653, "user_id": 2134076, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/22urC.jpg?s=128&g=1", "display_name": "Alec Cunningham", "link": "https://stackoverflow.com/users/2134076/alec-cunningham"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443209384, "post_id": 32788915, "comment_id": 53417492, "body": "Sorry, [here[(<a href=\"http://pastebin.com/H2ngtRJF\" rel=\"nofollow noreferrer\">pastebin.com/H2ngtRJF</a>) is the code I&#39;m working with, hopefully that clears up what my problem is?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1443210114, "post_id": 32788915, "comment_id": 53417822, "body": "You should <a href=\"https://stackoverflow.com/posts/32788915/edit\">edit</a> your question to include the <a href=\"/help/mcve\">MCVE</a> of your problem."}], "answers": [{"comments": [{"owner": {"reputation": 653, "user_id": 2134076, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/22urC.jpg?s=128&g=1", "display_name": "Alec Cunningham", "link": "https://stackoverflow.com/users/2134076/alec-cunningham"}, "edited": false, "score": 0, "creation_date": 1443208429, "post_id": 32789019, "comment_id": 53417074, "body": "I apologize for this question; but how do I go about using <a href=\"http://docs.fillzpp.org/sys-info-rs/sys_info/fn.hostname.html\" rel=\"nofollow noreferrer\">docs.fillzpp.org/sys-info-rs/sys_info/fn.hostname.html</a> ?"}, {"owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "reply_to_user": {"reputation": 653, "user_id": 2134076, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/22urC.jpg?s=128&g=1", "display_name": "Alec Cunningham", "link": "https://stackoverflow.com/users/2134076/alec-cunningham"}, "edited": false, "score": 1, "creation_date": 1443209165, "post_id": 32789019, "comment_id": 53417391, "body": "Could you be more specific about what you&#39;ve tried that hasn&#39;t worked? I can&#39;t think of a more helpful answer than &quot;you call the function&quot; right now."}, {"owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "reply_to_user": {"reputation": 653, "user_id": 2134076, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/22urC.jpg?s=128&g=1", "display_name": "Alec Cunningham", "link": "https://stackoverflow.com/users/2134076/alec-cunningham"}, "edited": false, "score": 0, "creation_date": 1443209826, "post_id": 32789019, "comment_id": 53417671, "body": "I&#39;ll assume that what you want to do is return early with an error message if <code>hostname</code> returns an error, and continue on and do other stuff if it succeeds. <a href=\"http://is.gd/f0i6ni\" rel=\"nofollow noreferrer\">This</a> is an example of doing something like that. Is there any part of it that confuses you?"}, {"owner": {"reputation": 653, "user_id": 2134076, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/22urC.jpg?s=128&g=1", "display_name": "Alec Cunningham", "link": "https://stackoverflow.com/users/2134076/alec-cunningham"}, "edited": false, "score": 0, "creation_date": 1443210617, "post_id": 32789019, "comment_id": 53418078, "body": "That&#39;s a good example -- doesn&#39;t confuse me. The only part I run into trouble with is the fact that I can&#39;t change the second function to &#39;succeed: bool&#39;, it has to be <code>cmd: &amp;super::ShellCommand</code>"}, {"owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "reply_to_user": {"reputation": 653, "user_id": 2134076, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/22urC.jpg?s=128&g=1", "display_name": "Alec Cunningham", "link": "https://stackoverflow.com/users/2134076/alec-cunningham"}, "edited": false, "score": 0, "creation_date": 1443210716, "post_id": 32789019, "comment_id": 53418131, "body": "The boolean parameter was just so I could easily change the example to simulate <code>hostname</code> succeeding or failing. You can take that parameter out and use the real <code>hostname</code> function and it&#39;ll work the same way."}], "tags": [], "owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "is_accepted": false, "score": 0, "last_activity_date": 1443207925, "creation_date": 1443207925, "answer_id": 32789019, "question_id": 32788915, "link": "https://stackoverflow.com/questions/32788915/changing-the-return-type-of-a-function-returning-a-result/32789019#32789019", "title": "Changing the return type of a function returning a Result", "body": "<p>Instead of using the <code>try!</code> macro, which you can't use if the result type is incompatible, use a <code>match</code> statement to take apart the return value of <code>sys_info::hostname</code> and do what you need to with its parts. <a href=\"https://play.rust-lang.org/?code=struct%20Error%3B%0A%0Afn%20thing_returning_result%28succeed%3A%20bool%29%20-%3E%20Result%3CString%2C%20Error%3E%20%7B%0A%20%20%20%20if%20succeed%20%7B%0A%20%20%20%20%20%20%20%20Ok%28%22Hello%22.into%28%29%29%0A%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20Err%28Error%29%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20thing_returning_other_result%28succeed%3A%20bool%29%20-%3E%20Result%3C%28%29%2C%20String%3E%20%7B%0A%20%20%20%20match%20thing_returning_result%28succeed%29%20%7B%0A%20%20%20%20%20%20%20%20Ok%28s%29%20%3D%3E%20Err%28s%29%2C%0A%20%20%20%20%20%20%20%20Err%28_%29%20%3D%3E%20Err%28%22whoopsies%22.into%28%29%29%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20main%28%29%20%7B%0A%20%20%20%20println!%28%22%7B%3A%3F%7D%22%2C%20thing_returning_other_result%28false%29%29%3B%0A%7D&amp;version=stable\" rel=\"nofollow\">Example</a></p>\n\n<pre><code>struct Error;\n\nfn thing_returning_result(succeed: bool) -&gt; Result&lt;String, Error&gt; {\n    if succeed {\n        Ok(\"Hello\".into())\n    } else {\n        Err(Error)\n    }\n}\n\nfn thing_returning_other_result(succeed: bool) -&gt; Result&lt;(), String&gt; {\n    match thing_returning_result(succeed) {\n        Ok(s) =&gt; Err(s),\n        Err(_) =&gt; Err(\"whoopsies\".into())\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", thing_returning_other_result(false));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1443208070, "creation_date": 1443208070, "answer_id": 32789054, "question_id": 32788915, "link": "https://stackoverflow.com/questions/32788915/changing-the-return-type-of-a-function-returning-a-result/32789054#32789054", "title": "Changing the return type of a function returning a Result", "body": "<p>I'd use <a href=\"http://doc.rust-lang.org/std/result/enum.Result.html#method.map\" rel=\"nofollow\"><code>map</code></a> and <a href=\"http://doc.rust-lang.org/std/result/enum.Result.html#method.map_err\" rel=\"nofollow\"><code>map_err</code></a>:</p>\n\n<pre><code>struct Error;\n\nfn inner() -&gt; Result&lt;String, Error&gt; {\n    Err(Error)\n}\n\nfn outer() -&gt; Result&lt;(), String&gt; {\n    inner()\n        .map(|ok_val| ())\n        .map_err(|err_val| \"Something\".to_string())\n}\n\nfn main() {\n    outer();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 12454626, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/096a8ed10011c5b40bee5dcd8494cb92?s=128&d=identicon&r=PG&f=1", "display_name": "Valley", "link": "https://stackoverflow.com/users/12454626/valley"}, "is_accepted": false, "score": 0, "last_activity_date": 1615263598, "creation_date": 1615263598, "answer_id": 66540748, "question_id": 32788915, "link": "https://stackoverflow.com/questions/32788915/changing-the-return-type-of-a-function-returning-a-result/66540748#66540748", "title": "Changing the return type of a function returning a Result", "body": "<p>Here's an example:</p>\n<p>First try:</p>\n<pre><code>fn is_url(val: &amp;str) -&gt; Result&lt;(), String&gt; {\n    match Url::parse(val) {\n        Ok(_) =&gt; Ok(()),\n        Err(_) =&gt; Err(format!(&quot;The URL '{}' is an invalid URL.&quot;, val)),\n    }\n}\n</code></pre>\n<p>More concise:</p>\n<pre><code>fn is_url(val: &amp;str) -&gt; Result&lt;(), String&gt; {\n    Url::parse(val).map_err(|_| format!(&quot;The URL '{}' is an invalid URL.&quot;, val))?;\n    Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 653, "user_id": 2134076, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/22urC.jpg?s=128&g=1", "display_name": "Alec Cunningham", "link": "https://stackoverflow.com/users/2134076/alec-cunningham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 581, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1615263598, "creation_date": 1443207527, "last_edit_date": 1443207822, "question_id": 32788915, "link": "https://stackoverflow.com/questions/32788915/changing-the-return-type-of-a-function-returning-a-result", "title": "Changing the return type of a function returning a Result", "body": "<p>I have a crate with the function <code>sys_info::hostname</code> which returns the hostname. The only problem is that <a href=\"http://docs.fillzpp.org/sys-info-rs/sys_info/fn.hostname.html\" rel=\"nofollow\">hostname returns</a> <code>Result&lt;String, Error&gt;</code>, but I need another function that must have a return type <code>Result&lt;(), String&gt;</code>. How can I call <code>sys_info::hostname</code> and return the hostname in a function that doesn't return the same type? Before you ask, the second function's return type cannot be changed due to formatting issues. </p>\n"}, {"tags": ["string", "operating-system", "kernel", "rust"], "answers": [{"comments": [{"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "edited": false, "score": 3, "creation_date": 1443200770, "post_id": 32787162, "comment_id": 53413308, "body": "Important side note: since <code>as_ptr</code> consumes <code>self</code>, this will get the code to compile, but the return value will be a dangling pointer."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1443211755, "post_id": 32787162, "comment_id": 53418644, "body": "Which as_ptr is that? Sounds like a misunderstanding."}, {"owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "edited": false, "score": 0, "creation_date": 1443211927, "post_id": 32787162, "comment_id": 53418737, "body": "<code>pub fn as_ptr(self) -&gt; *const i8</code> from OP&#39;s sample code. Since it takes <code>self</code> by value, the <code>CString</code> instance will be deallocated at the end of the function, which means you&#39;re returning a pointer to freed memory."}, {"owner": {"reputation": 2901, "user_id": 227779, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/04b9cea001c22cc62e650a3180a1123a?s=128&d=identicon&r=PG", "display_name": "Per Lundberg", "link": "https://stackoverflow.com/users/227779/per-lundberg"}, "edited": false, "score": 0, "creation_date": 1443213378, "post_id": 32787162, "comment_id": 53419428, "body": "Thanks @WillFischer/@fjh! That was a pure stupidity on my behalf (I&#39;m very green as far as Rust is concerned, which one can tell by looking at my foul code. :) The OP has been changed in this regard now."}], "tags": [], "owner": {"reputation": 373, "user_id": 3949255, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2987c356f74bda70da7d3d1e778b12f8?s=128&d=identicon&r=PG&f=1", "display_name": "Will Fischer", "link": "https://stackoverflow.com/users/3949255/will-fischer"}, "is_accepted": true, "score": 5, "last_activity_date": 1443200228, "creation_date": 1443200228, "answer_id": 32787162, "question_id": 32786246, "link": "https://stackoverflow.com/questions/32786246/how-to-convert-from-str-to-const-i8-without-libstd-and-libcore/32787162#32787162", "title": "How to convert from &amp;str to *const i8 *without* libstd and libcore?", "body": "<p>Instead of casting the buffer, cast a reference to the buffer. <a href=\"https://play.rust-lang.org/?code=fn%20main%28%29%20%7B%0A%20%20%20%20let%20buffer%3A%20[i8%3B%201024]%20%3D%20[42%3B%201024]%3B%0A%20%20%20%20let%20ptr%3A%20*const%20i8%20%3D%20%26buffer%20as%20*const%20i8%3B%0A%20%20%20%20unsafe%20%7B%0A%20%20%20%20%20%20%20%20println!%28%22%7B%7D%22%2C%20*ptr.offset%2830%29%29%3B%0A%20%20%20%20%7D%0A%7D&amp;version=stable\" rel=\"noreferrer\" title=\"Example\">Example</a></p>\n\n<pre><code>fn main() {\n    let buffer: [i8; 1024] = [42; 1024];\n    let ptr: *const i8 = &amp;buffer as *const i8;\n    unsafe {\n        println!(\"{}\", *ptr.offset(30));\n    }\n}\n</code></pre>\n\n<p>Have you tried getting your code to work with <a href=\"https://doc.rust-lang.org/core/\" rel=\"noreferrer\" title=\"libcore\">libcore</a>? It's a subset of the standard library that covers everything that doesn't need OS support. You can get string manipulation functions through that.</p>\n"}], "owner": {"reputation": 2901, "user_id": 227779, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/04b9cea001c22cc62e650a3180a1123a?s=128&d=identicon&r=PG", "display_name": "Per Lundberg", "link": "https://stackoverflow.com/users/227779/per-lundberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 406, "favorite_count": 0, "accepted_answer_id": 32787162, "answer_count": 1, "score": 1, "last_activity_date": 1443251611, "creation_date": 1443196902, "last_edit_date": 1443251511, "question_id": 32786246, "link": "https://stackoverflow.com/questions/32786246/how-to-convert-from-str-to-const-i8-without-libstd-and-libcore", "title": "How to convert from &amp;str to *const i8 *without* libstd and libcore?", "body": "<p>I have a scenario where we have an existing (old) operating system written in C, some 15 years ago. Now, we are looking at extending this system, being able to write user-space programs in Rust.</p>\n\n<p>Naturally, because this was recently started, we haven't bothered about porting all of <code>libstd</code> to our own OS yet. We are hence using <code>#![feature(no_std)]</code>.</p>\n\n<p>Now, I am looking for something that should be reasonably simple: <em>converting a Rust string into a C-null-terminated string</em>. Should be simple, but because I am so inexperienced with Rust I haven't (yet) been able to figure it out.</p>\n\n<p>For the sake of this experience, it's enough to impose certain limits (like, max 1024 byte long strings; anything else gets truncated). (We do have memory allocation in place but I haven't bothered trying to handle memory allocation from Rust yet)</p>\n\n<p>Here is my feeble attempt so far:</p>\n\n<pre><code>pub struct CString {\n    buffer: [i8; 1024]\n}\n\nimpl CString {\n    pub fn new(s: &amp;str) -&gt; CString {\n        CString {\n            buffer: CString::to_c_string(s)\n        }\n    }\n\n    fn to_c_string(s: &amp;str) -&gt; [i8; 1024] {\n        let buffer: [i8; 1024];\n        let mut i = 0;\n\n        // TODO: ignore the risk for buffer overruns for now. :)\n        // TODO: likewise with UTF8; assume that we are ASCII-only.\n        for c in s.chars() {\n            buffer[i] = c as i8;\n            i = i + 1;\n        }\n\n        buffer[s.len()] = '\\0' as i8;\n        buffer;\n    }\n\n    pub fn as_ptr(&amp;self) -&gt; *const i8 {    \n        // TODO: Implement. The line below doesn't even compile.\n        self.buffer as *const i8\n    }\n}\n</code></pre>\n\n<p>The core problem here is the type-casting in <code>as_ptr</code>. How do you do it in Rust? Also, are there any other issues with this code, apart from the obvious ones? (broken UTF8 non-ASCII character handling, totally stupid if the string is longer than 1024 characters... :)</p>\n\n<p>Huge thanks in advance! This <strong>must</strong> be something fairly obvious...</p>\n\n<hr>\n\n<p><strong>Update</strong>: Based on the the answer by Will Fischer (thanks!), I changed my <code>as_ptr</code> method to look like this:</p>\n\n<pre><code>pub fn as_ptr(&amp;self) -&gt; *const i8 {\n    &amp;self.buffer as *const i8\n}\n</code></pre>\n\n<p>The code now compiles, but it doesn't link:</p>\n\n<pre><code>virtio_net_pci.0.rs:(.text._ZN6system8c_string7CString3new20hbfc6c6db748de66bpaaE+0x31): undefined reference to `memset'\nvirtio_net_pci.0.rs:(.text._ZN6system8c_string7CString3new20hbfc6c6db748de66bpaaE+0x14f): undefined reference to `memcpy'\nvirtio_net_pci.0.rs:(.text._ZN6system8c_string7CString3new20hbfc6c6db748de66bpaaE+0x174): undefined reference to `panicking::panic_bounds_check::h0b7be17a72a754b5P6E'\nvirtio_net_pci.0.rs:(.text._ZN6system8c_string7CString3new20hbfc6c6db748de66bpaaE+0x18c): undefined reference to `panicking::panic_bounds_check::h0b7be17a72a754b5P6E'\ncollect2: error: ld returned 1 exit status\n</code></pre>\n\n<p>The <code>memset</code> and <code>memcpy</code> stuff is easy to fix. The bounds checking I assume is implemented in <code>libcore</code> - any way to get that working without linking to libcore? (which would probably be a reasonable thing anyway...)</p>\n"}, {"tags": ["struct", "tuples", "rust", "traits"], "answers": [{"comments": [{"owner": {"reputation": 45410, "user_id": 109549, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7d9c3b5cc4495ac7a328541287e1de87?s=128&d=identicon&r=PG", "display_name": "zslayton", "link": "https://stackoverflow.com/users/109549/zslayton"}, "edited": false, "score": 0, "creation_date": 1443203259, "post_id": 32787354, "comment_id": 53414535, "body": "This worked perfectly! I&#39;m using it to change a setting in the builder API of an object pool library. I&#39;ve updated the documentation for <a href=\"http://zslayton.github.io/lifeguard/lifeguard/settings/struct.Supplier.html\" rel=\"nofollow noreferrer\">the tuple struct</a> and its <a href=\"http://zslayton.github.io/lifeguard/lifeguard/fn.pool.html\" rel=\"nofollow noreferrer\">updated usage</a>. Thanks!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1443201020, "creation_date": 1443201020, "answer_id": 32787354, "question_id": 32786089, "link": "https://stackoverflow.com/questions/32786089/is-there-an-elegant-way-to-make-a-generic-tuple-struct-with-an-unused-type-witho/32787354#32787354", "title": "Is there an elegant way to make a generic tuple struct with an unused type without PhantomData?", "body": "<p>In many cases, you don't want to parameterize your trait, but instead want an <em>associated type</em>:</p>\n\n<pre><code>trait Produce {\n    type T;\n\n    fn get(&amp;mut self) -&gt; Self::T;\n}\n\nstruct Producer&lt;P&gt;(P) where P: Produce;\n\nfn main() {}\n</code></pre>\n\n<p>Unfortunately, it's tough to tell if this will work for you without knowing a lot more about the anticipated use case and code examples, which might be too verbose for Stack Overflow.</p>\n"}], "owner": {"reputation": 45410, "user_id": 109549, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7d9c3b5cc4495ac7a328541287e1de87?s=128&d=identicon&r=PG", "display_name": "zslayton", "link": "https://stackoverflow.com/users/109549/zslayton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1954, "favorite_count": 0, "accepted_answer_id": 32787354, "answer_count": 1, "score": 5, "last_activity_date": 1443203028, "creation_date": 1443196409, "last_edit_date": 1443203028, "question_id": 32786089, "link": "https://stackoverflow.com/questions/32786089/is-there-an-elegant-way-to-make-a-generic-tuple-struct-with-an-unused-type-witho", "title": "Is there an elegant way to make a generic tuple struct with an unused type without PhantomData?", "body": "<p>I'd like to create a generic tuple struct <code>Producer</code> which can hold any type <code>P</code> which implements the trait <code>Produce&lt;T&gt;</code>, defined below. This produces the (expected) commented error:</p>\n\n<pre><code>trait Produce&lt;T&gt; {\n    fn get(&amp;mut self) -&gt; T;\n}\n\n// ERROR: parameter `T` is never used [E0392]\nstruct Producer&lt;P,T&gt;(P) where P: Produce&lt;T&gt;;\n</code></pre>\n\n<p>If this were a non-tuple struct, I could remedy this issue by adding a <code>PhantomData&lt;T&gt;</code> field and writing a constructor <code>Producer::new(p: P)</code> to hide this as an implementation detail. However, I'm using this type as one of a family of tuple structs in a Builder API, so using a conventional struct + constructor feels pretty out of place.</p>\n\n<p>Is there any way to achieve this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443190485, "post_id": 32780269, "comment_id": 53407133, "body": "Note: you do realize that <code>e.add(5)</code> returns <code>e + 5</code> but does not modify <code>e</code> itself, right?"}, {"owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443286847, "post_id": 32780269, "comment_id": 53436838, "body": "Yup. I changed it to *e = e.add(5)"}], "answers": [{"comments": [{"owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "edited": false, "score": 0, "creation_date": 1443178709, "post_id": 32780375, "comment_id": 53399593, "body": "So in <code>fn add(self, b: Self) -&gt; Self</code>, <code>Self</code> is of type <code>T</code> in <code>vec_add</code> context?"}], "tags": [], "owner": {"reputation": 3181, "user_id": 4998184, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/29c803cb4341d0ff630cb3ca04ab7251?s=128&d=identicon&r=PG", "display_name": "eulerdisk", "link": "https://stackoverflow.com/users/4998184/eulerdisk"}, "is_accepted": true, "score": 4, "last_activity_date": 1443177664, "creation_date": 1443177664, "answer_id": 32780375, "question_id": 32780269, "link": "https://stackoverflow.com/questions/32780269/add-a-number-to-every-element-of-a-vector-of-generic-types/32780375#32780375", "title": "Add a number to every element of a vector of generic types", "body": "<p>The number 5 is a integer (I think it's <code>i32</code> by default or maybe <code>u32</code>, at the moment I don't remember). The type <code>T</code>, which is the generic type, can be anything so in general 5 is not of the same type of <code>T</code>. You can force <code>T</code> to be an integer or you could change <code>vec_add</code> this way:</p>\n\n<pre><code>fn vec_add&lt;T: Arith&gt;(vec: &amp;mut Vec&lt;T&gt;, val: T){\n    for e in vec.iter_mut(){\n        /* e is of type &amp;mut i32. But you can give it to print() which\n           expects i32 because rust derefs it implicitly */\n        e.print();\n        e.add(val);\n    }\n}\n\nfn main(){\n    println!(\"Hello World\");\n    let mut vec: Vec&lt;i32&gt; = vec![1,2,3,4,5];\n    vec_add(&amp;mut vec, 5);\n}\n</code></pre>\n"}], "owner": {"reputation": 3963, "user_id": 1390726, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/c765305d9d8dfc09a2f352a5cdf51bdf?s=128&d=identicon&r=PG", "display_name": "tez", "link": "https://stackoverflow.com/users/1390726/tez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 32780375, "answer_count": 1, "score": 0, "last_activity_date": 1443185952, "creation_date": 1443177191, "last_edit_date": 1443185952, "question_id": 32780269, "link": "https://stackoverflow.com/questions/32780269/add-a-number-to-every-element-of-a-vector-of-generic-types", "title": "Add a number to every element of a vector of generic types", "body": "<p>In the process of learning Rust, I'm trying to add an integer to every element of a vector:</p>\n\n<pre><code>trait Arith: Copy {\n    fn add(self, b: Self) -&gt; Self;\n    fn mult(self, b: Self) -&gt; Self;\n    fn print(self);\n}\n\nimpl Arith for i32 {\n    fn add(self, b: Self) -&gt; Self {\n        self + b\n    }\n\n    fn mult(self, b: Self) -&gt; Self {\n        self * b\n    }\n\n    fn print(self) {\n        println!(\"Val = {}\", self);\n    }\n}\n\nfn vec_add&lt;T: Arith&gt;(vec: &amp;mut Vec&lt;T&gt;) {\n    for e in vec.iter_mut(){\n        /* e is of type &amp;mut i32. But you can give it to print() which\n           expects i32 because rust derefs it implicitly */\n        e.print();\n        e.add(5);\n    }\n}\n\nfn main() {\n    println!(\"Hello World\");\n    let mut vec: Vec&lt;i32&gt; = vec![1,2,3,4,5];\n    vec_add(&amp;mut vec);\n}\n</code></pre>\n\n<p>But I'm facing the following issue:</p>\n\n<pre><code>&lt;anon&gt;:33:15: 33:16 error: mismatched types:\n expected `T`,\n    found `_`\n(expected type parameter,\n    found integral variable) [E0308]\n&lt;anon&gt;:33         e.add(5);\n</code></pre>\n\n<p>Can you please explain what mistake I'm making here?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443167465, "post_id": 32775172, "comment_id": 53393128, "body": "And if macros are insufficient, there&#39;s always <code>build.rs</code> and procedural macros."}, {"owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "edited": false, "score": 0, "creation_date": 1443168424, "post_id": 32775172, "comment_id": 53393604, "body": "Thanks for the answer! You have pushed me to some ideas."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 10, "last_activity_date": 1443158010, "last_edit_date": 1443158010, "creation_date": 1443157534, "answer_id": 32775172, "question_id": 32775077, "link": "https://stackoverflow.com/questions/32775077/how-to-set-a-compile-time-condition-in-macros/32775172#32775172", "title": "How to set a compile time condition in macros", "body": "<p>What you're asking for is impossible.  Thankfully, what you're asking for and what your examples <em>suggest you want</em> are two different things:</p>\n\n<pre><code>macro_rules! cond {\n    (\"i32\") =&gt; {\n        struct A {\n            x: i32,\n        }\n    };\n    ($el:expr) =&gt; {\n        struct B {\n            x: f64\n        }\n    };\n}\n\ncond!(\"i32\");\ncond!(\"f64\");\n\nfn main() {}\n</code></pre>\n\n<p>Taking your question literally, however: no, there is no way to do any sort of complex testing of conditions in macros, nor can macros set or test any kind of state outside of what's passed in to them.  You can do literal matches of the direct input to the macro, or you can parse some input as one of a limited number of syntax constructs (which you then cannot match against), and that's about it.</p>\n"}], "owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1627, "favorite_count": 0, "accepted_answer_id": 32775172, "answer_count": 1, "score": 5, "last_activity_date": 1443158010, "creation_date": 1443157040, "question_id": 32775077, "link": "https://stackoverflow.com/questions/32775077/how-to-set-a-compile-time-condition-in-macros", "title": "How to set a compile time condition in macros", "body": "<p>I want to set the compile-time condition in macros when it generates code outside the functions. I need something like that:\n</p>\n\n<pre><code>macro_rules! cond {\n    ( $cond_el:expr ) =&gt; {\n         #[if $cond_el == \"i32\"]\n             struct A {\n                 x: i32\n             }\n         #[else]\n             struct A {\n                 x: f64\n             }\n    }\n}\n\ncond!(\"i32\");\ncond!(\"f64\");\n\nfn main() {}\n</code></pre>\n\n<p>Or maybe something like that:\n</p>\n\n<pre><code>macro_rules! cond {\n    ( $cond_el:expr ) =&gt; {\n         match $cond_el {\n            \"i32\" =&gt; {\n                struct A {\n                   x: i32\n                }\n            }\n            _ =&gt; {\n                struct A {\n                    x: f64\n                }\n            }\n        }\n    }\n}\n\ncond!(\"i32\");\ncond!(\"f64\");\n\nfn main() {}\n</code></pre>\n\n<p>Is it possible with current Rust macros state?</p>\n"}, {"tags": ["macros", "rust"], "answers": [{"comments": [{"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 3, "creation_date": 1443141465, "post_id": 32765782, "comment_id": 53385155, "body": "I\u2019d go for <code>fn _assert_add() where Self: Add&lt;Self, Output = Self&gt; { } fn _verify_assertions() { Self::_assert_add() }</code>, myself. Slightly cleaner error messages, in my opinion, and (more importantly) more general as it doesn\u2019t require the trait to be object-safe."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443141796, "post_id": 32765782, "comment_id": 53385224, "body": "@ChrisMorgan wouldn&#39;t <code>Self</code> be the type being created, instead of the type of the field?"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 2, "creation_date": 1443143342, "post_id": 32765782, "comment_id": 53385533, "body": "Oh yeah, I wasn\u2019t reading it all fully. But that\u2019s no problem\u2014<code>where $t: Add&lt;$t, Output = $t&gt;</code> works just as well. The <code>where</code> clause can contain stuff for <i>any</i> type, not just stuff related to <code>Self</code> or generics."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 1, "creation_date": 1443144135, "post_id": 32765782, "comment_id": 53385706, "body": "@ChrisMorgan <i>The <code>where</code> clause can contain stuff for any type</i> \u2014 <a href=\"http://www3.pictures.zimbio.com/mp/mA5SbP1W53Ex.gif\" rel=\"nofollow noreferrer\">mind. blown.</a> Also, a function that starts with an underscore doesn&#39;t trigger the unused function lint. That makes sense, but still was surprising!"}, {"owner": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443149274, "post_id": 32765782, "comment_id": 53386784, "body": "You could also merge the assertion methods with <code>where $t: Add + Mul</code> and suchlike, leaving you with just two methods. Entirely up to you."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443149378, "post_id": 32765782, "comment_id": 53386806, "body": "@ChrisMorgan yeah, I was trying to decide which gave a better error message and thought that having the redundancy of the method name wasn&#39;t terrible. If the calling function wasn&#39;t needed, I&#39;d definitely go for combining them."}, {"owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "reply_to_user": {"reputation": 72538, "user_id": 497043, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/16a138ff3b9c8f1663f8a0613c47b60a?s=128&d=identicon&r=PG", "display_name": "Chris Morgan", "link": "https://stackoverflow.com/users/497043/chris-morgan"}, "edited": false, "score": 0, "creation_date": 1443152934, "post_id": 32765782, "comment_id": 53387643, "body": "Shepmaster, @ChrisMorgan, thank you for answer! It works very fine, and optimizer do its work really well."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1520179133, "last_edit_date": 1520179133, "creation_date": 1443110014, "answer_id": 32765782, "question_id": 32764797, "link": "https://stackoverflow.com/questions/32764797/how-to-enforce-that-a-type-implements-a-trait-at-compile-time/32765782#32765782", "title": "How to enforce that a type implements a trait at compile time?", "body": "<p>First, solve the problem without macros. One solution is to create undocumented private functions that will fail compilation if your conditions aren't met:</p>\n\n<pre><code>struct MyType {\n    age: i32,\n    name: String,\n}\n\nfn __assert_send()\nwhere\n    MyType: Send,\n{}\n\nfn __assert_sync()\nwhere\n    MyType: Sync,\n{}\n\n// RFC 2056\nfn __assert_traits() {\n    __assert_send();\n    __assert_sync();\n}\n</code></pre>\n\n<p>Then, modify the simple solution to use macros:</p>\n\n<pre><code>macro_rules! a {\n    ($n:ident, $t:ty) =&gt; {\n        struct $n {\n            x: $t\n        }\n\n        impl $n {\n            fn __assert_add()\n            where\n                $t: std::ops::Add&lt;$t, Output = $t&gt;\n            {}\n\n            fn __assert_mul()\n            where\n                $t: std::ops::Mul&lt;$t, Output = $t&gt;\n            {}\n\n            // RFC 2056\n            fn __assert_traits() {\n                Self::__assert_add();\n                Self::__assert_mul();\n            }\n        }\n    }\n}\n\na!(Moo, u8);\na!(Woof, bool);\n\nfn main() {}\n</code></pre>\n\n<p>I would then trust in the optimizer to remove the code at compile time, so I wouldn't expect any additional bloat.</p>\n\n<p><strong>Major thanks</strong> to <a href=\"https://stackoverflow.com/questions/32764797/how-to-enforce-that-a-macro-ty-argument-implements-a-trait-at-compile-time/32765782?noredirect=1#comment53385533_32765782\">Chris Morgan</a> for providing a better version of this that supports non-object-safe traits.</p>\n\n<p>It's worth highlighting <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2056-allow-trivial-where-clause-constraints.md\" rel=\"nofollow noreferrer\">RFC 2056</a> which will allow for \"trivial\" constraints in where clauses. Once implemented, clauses like this would be accepted:</p>\n\n<pre><code>impl Foo for Bar\nwhere \n    i32: Iterator,\n{}\n</code></pre>\n\n<p>This exact behavior has changed multiple times during Rust's history and RFC 2056 pins it down. To keep the behavior we want in this case, we need to call the assertion functions from another function which has no constraints (and thus must always be true).</p>\n"}], "owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 984, "favorite_count": 0, "accepted_answer_id": 32765782, "answer_count": 1, "score": 6, "last_activity_date": 1520179236, "creation_date": 1443107098, "last_edit_date": 1520179236, "question_id": 32764797, "link": "https://stackoverflow.com/questions/32764797/how-to-enforce-that-a-type-implements-a-trait-at-compile-time", "title": "How to enforce that a type implements a trait at compile time?", "body": "<p>I want to write a macro like this: </p>\n\n<pre><code>macro_rules! a {\n    ( $n:ident, $t:ty ) =&gt; {\n         struct $n {\n             x: $t\n         }\n    }\n}\n</code></pre>\n\n<p>But <code>$t</code> should implement <code>Add</code>, <code>Sub</code> and <code>Mul</code> traits. How can I check it at compile-time?</p>\n"}, {"tags": ["generics", "rust", "constants"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1443139464, "post_id": 32763783, "comment_id": 53384665, "body": "Note that <code>std::f32</code> and <code>std::f64</code> are modules. They&#39;re not the same thing as the primitive types <code>f32</code> and <code>f64</code>. The modules are named like this to make it clear that they are related to the primitive types."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1512753788, "last_edit_date": 1512753788, "creation_date": 1443104623, "answer_id": 32763878, "question_id": 32763783, "link": "https://stackoverflow.com/questions/32763783/how-to-access-numeric-constants-using-the-float-trait/32763878#32763878", "title": "How to access numeric constants using the Float trait?", "body": "<p>This is a feature called <em>associated constants</em>. It doesn't appear that num 0.1.41 makes use of any such constants, but you could augment the <code>Float</code> trait like this:</p>\n\n<pre><code>extern crate num;\n\ntrait FloatConst: num::Float {\n    const PI: Self;\n    const E: Self;\n}\n\nimpl FloatConst for f32 {\n    const PI: f32 = 3.14;\n    const E: f32 = 2.71;\n}\n\nimpl FloatConst for f64 {\n    const PI: f64 = 3.14159;\n    const E: f64 = 2.71828;\n}\n\nfn f&lt;T: FloatConst&gt;(t: T) -&gt; T {\n    t + T::PI + T::E\n}\n\nfn main() {\n    let x = 5.0f32;\n    println!(\"Result: {}\", f(x));\n}\n</code></pre>\n\n<p>In previous versions of Rust, you will need to use functions: </p>\n\n<pre><code>extern crate num;\n\nuse num::traits::Float;\n\ntrait FloatConst {\n    fn pi() -&gt; Self;\n}\n\nimpl FloatConst for f32 {\n    fn pi() -&gt; Self { std::f32::consts::PI }\n}\n\nimpl FloatConst for f64 {\n    fn pi() -&gt; Self { std::f64::consts::PI }\n}\n\nfn f&lt;T: Float + FloatConst&gt;(t: T) -&gt; T {\n    T::pi() * t\n}\n\nfn main() {\n    println!(\"Result: {}\", f(5.0f32));\n    println!(\"Result: {}\", f(5.0f64));\n}\n</code></pre>\n\n<p>I'd expect that monomorphization and compiler optimizations will make this about as fast it it could be, but profiling is always a good idea if needed.</p>\n"}], "owner": {"reputation": 315, "user_id": 1974923, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14b584e4808f0418dc60f2981ecf3b57?s=128&d=identicon&r=PG", "display_name": "w177us", "link": "https://stackoverflow.com/users/1974923/w177us"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 304, "favorite_count": 0, "accepted_answer_id": 32763878, "answer_count": 1, "score": 2, "last_activity_date": 1512753788, "creation_date": 1443104328, "last_edit_date": 1443104468, "question_id": 32763783, "link": "https://stackoverflow.com/questions/32763783/how-to-access-numeric-constants-using-the-float-trait", "title": "How to access numeric constants using the Float trait?", "body": "<p>I want to write generic mathematical code in Rust. The types <code>f32</code> and <code>f64</code> already define constants. E.g. \u03c0 is <code>std::f32::consts::PI</code>.</p>\n\n<p>I understand that the <code>Float</code> trait provides common functions, but how about constants?</p>\n\n<p>My attempt:</p>\n\n<pre><code>extern crate num;\n\nuse self::num::traits::Float;\n\nfn f&lt;T: Float&gt;(t: T) -&gt; T { \n    T::consts::PI * t \n}   \n\nfn main() {\n    let x = 5.0f32;\n    println!(\"Result: {}\", f(x));\n}   \n</code></pre>\n\n<p>yields:</p>\n\n<pre><code>main.rs:6:5: 6:18 error: associated type `consts` not found for `T` [E0220]\nmain.rs:6     T::consts::PI * t\n              ^~~~~~~~~~~~~\n</code></pre>\n\n<p>If this is not possible, then how may I access mathematical constants using a generic type <code>T</code>?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 26583, "user_id": 1441, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fb7f1cd450084fdb4bfc9376c7dba2a7?s=128&d=identicon&r=PG", "display_name": "crashmstr", "link": "https://stackoverflow.com/users/1441/crashmstr"}, "edited": false, "score": 2, "creation_date": 1443100213, "post_id": 32762102, "comment_id": 53363500, "body": "Until you reach the range of GB, what is the problem (assuming not running on embedded platform)? Did you test larger and larger programs and found that it still scales the same? Or is there some &quot;minimum&quot; due to runtime environment and it scales reasonably after that?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1443100236, "post_id": 32762102, "comment_id": 53363512, "body": "On OS X, using Rust 1.3, your Rust program uses 660K according to top. You probably should <a href=\"https://stackoverflow.com/posts/32762102/edit\">edit</a> your question to include these details."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 26583, "user_id": 1441, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fb7f1cd450084fdb4bfc9376c7dba2a7?s=128&d=identicon&r=PG", "display_name": "crashmstr", "link": "https://stackoverflow.com/users/1441/crashmstr"}, "edited": false, "score": 2, "creation_date": 1443100635, "post_id": 32762102, "comment_id": 53363824, "body": "@crashmstr It would still be surprising (to me) if the fixed overhead for the runtime would be larger for rust than e.g. Haskell."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443100841, "post_id": 32762102, "comment_id": 53363993, "body": "@Shepmaster I updated my question. How does the Rust version compare to the C version on your computer?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443101101, "post_id": 32762102, "comment_id": 53364202, "body": "@antoyo: Why not show the output of your top command (with headings); on my system I see &quot;VIRT&quot;, &quot;RES&quot; and &quot;SHR&quot; and those have different meanings; it&#39;s unclear from your description which one you are referring to, which in turns prevents any kind of meaningful answer."}, {"owner": {"reputation": 219328, "user_id": 15498, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/Wi4EN.png?s=128&g=1", "display_name": "Damien_The_Unbeliever", "link": "https://stackoverflow.com/users/15498/damien-the-unbeliever"}, "edited": false, "score": 4, "creation_date": 1443101164, "post_id": 32762102, "comment_id": 53364271, "body": "Of course, they aren&#39;t exactly the same. At the moment, the C version is waiting to be a buffer overrun exploit which I assume the Rust one isn&#39;t. Even if you fix that issue (by specifying a width), you&#39;ll still get markedly different behaviour if your name is 10000 characters long."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 2, "creation_date": 1443101207, "post_id": 32762102, "comment_id": 53364304, "body": "Can confirm that rust has a somewhat high initial memory requirement for a compiled language with a supposedly zero-sized runtime. For an example of the measurement see the <a href=\"http://benchmarksgame.alioth.debian.org/u64q/rust.html\" rel=\"nofollow noreferrer\">benchmarksgame.alioth.debian.org/u64q/rust.html</a> \u2013 they show very similar memory consumption patterns. Note that static linking cannot explain the difference e.g. to C. Perhaps it is due to jemalloc settings on linux?"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443101420, "post_id": 32762102, "comment_id": 53364456, "body": "@MatthieuM. I edited my answer to include the column I checked in the <code>top</code> command. If needed, I will include the full lines."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443101672, "post_id": 32762102, "comment_id": 53364639, "body": "@antoyo: I am no power user of top, however I believe that <code>RES</code> is the total memory used by the program (physically) and <code>SHR</code> is the part of the total memory that is shared with other processes (in general, all the code and read-only values is shared). So it would be interesting to see <code>SHR</code> too, to know what&#39;s the proportion of shared/private memory consumption in the Rust process, which gives us the proportion of &quot;code&quot; vs &quot;mutable globals + stack + heap&quot;. A statically compiled binary has a larger code footprint, for example, but this is fixed overhead (for a given binary)."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1443102931, "post_id": 32762102, "comment_id": 53365549, "body": "@MatthieuM. Wouldn&#39;t that imply that the statically compiled binary be as large as the memory it consumes initially?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "edited": false, "score": 0, "creation_date": 1443103582, "post_id": 32762102, "comment_id": 53366007, "body": "@llogiq: not quite, the RES will initially contain (on top of SHR) space for mutable globals and the beginning of the stack. Of course, Linux muddy the waters by (1) using CoW of the memory pages (so that if you fork your process, you initially inherit the mutable globals pages) and (2) lazily mapping the pages (so that you only have a couple pages of memory for the stack instead of the whole 8MB you have requested, for example). But otherwise, as far as I know, RES &gt; SHR. Of course, take it with a grain of salt, I am no power user of top..."}, {"owner": {"reputation": 11705, "user_id": 2765603, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/WkhcQ.jpg?s=128&g=1", "display_name": "llogiq", "link": "https://stackoverflow.com/users/2765603/llogiq"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1443107191, "post_id": 32762102, "comment_id": 53368693, "body": "@MatthieuM. Yes, but the memory consumption is higher than the sum of the 1MB stack (which is the default on Linux, AFAIK) plus the source. Of course, jemalloc may ask the system for more memory for its arenas."}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1444151708, "post_id": 32762102, "comment_id": 53776677, "body": "@all I added more detailed profiling info in my question. Does anybody know why the Rust version uses more memory with this data?"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1449199625, "post_id": 32762102, "comment_id": 55913866, "body": "@Shepmaster It seems platform-specific. I&#39;ve just tried on FreeBSD and the ram usage of this rust program is similar to C++. Perhaps having jemalloc as the system allocator has something to do with this result. Do you know if OS X also use jemalloc as the system allocator?"}], "answers": [{"comments": [{"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "edited": false, "score": 0, "creation_date": 1448411612, "post_id": 33906240, "comment_id": 55575642, "body": "With this option, there are some changes, but it still use more RAM than the Haskell and OCaml versions.  <a href=\"https://users.rust-lang.org/t/why-do-rust-programs-use-more-memory-than-the-c-haskell-and-ocaml-versions/3224\" rel=\"nofollow noreferrer\">The only ways that were found to reduce the RAM usage was to use the system allocator or the <code>no_std</code> feature</a>, but it does not explain why Rust use more RAM by default."}, {"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 1, "creation_date": 1449070461, "post_id": 33906240, "comment_id": 55847943, "body": "There might also be a lot of inlining"}, {"owner": {"reputation": 22921, "user_id": 229753, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f443a82ac96270394a6965323142601b?s=128&d=identicon&r=PG", "display_name": "Tobu", "link": "https://stackoverflow.com/users/229753/tobu"}, "edited": false, "score": 1, "creation_date": 1497718763, "post_id": 33906240, "comment_id": 76201249, "body": "The standard library wouldn&#39;t be faulted in for such a simple program. jemalloc is a more likely explanation."}, {"owner": {"reputation": 699, "user_id": 1256121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd9ea8d9c9b6ef91cd7f5bdda5b707b4?s=128&d=identicon&r=PG", "display_name": "iajrz", "link": "https://stackoverflow.com/users/1256121/iajrz"}, "edited": false, "score": 0, "creation_date": 1498544834, "post_id": 33906240, "comment_id": 76527432, "body": "Back then, Windows executables were bigger, too, and rust for Windows didn&#39;t come with jemalloc at the time. (I talk in past because I haven&#39;t been using rust for quite some time now; jemalloc may still not used in Rust for windows)"}], "tags": [], "owner": {"reputation": 699, "user_id": 1256121, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd9ea8d9c9b6ef91cd7f5bdda5b707b4?s=128&d=identicon&r=PG", "display_name": "iajrz", "link": "https://stackoverflow.com/users/1256121/iajrz"}, "is_accepted": false, "score": 23, "last_activity_date": 1448409915, "creation_date": 1448409915, "answer_id": 33906240, "question_id": 32762102, "link": "https://stackoverflow.com/questions/32762102/why-do-rust-programs-use-so-much-more-memory-than-the-c-haskell-and-ocaml-versi/33906240#33906240", "title": "Why do Rust programs use so much more memory than the C, Haskell and OCaml versions?", "body": "<p>Because the standard library is statically linked.</p>\n\n<p>You can overcome this by compiling with the <code>-C prefer-dynamic</code> option.</p>\n\n<p>As to the reason behind having the standard library statically linked: it increases executable portability (ie: no need for the standard library to be installed in target system).</p>\n"}, {"tags": [], "owner": {"reputation": 610, "user_id": 5212952, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/9V6zT.jpg?s=128&g=1", "display_name": "Drgabble", "link": "https://stackoverflow.com/users/5212952/drgabble"}, "is_accepted": false, "score": 2, "last_activity_date": 1503503455, "creation_date": 1503503455, "answer_id": 45844311, "question_id": 32762102, "link": "https://stackoverflow.com/questions/32762102/why-do-rust-programs-use-so-much-more-memory-than-the-c-haskell-and-ocaml-versi/45844311#45844311", "title": "Why do Rust programs use so much more memory than the C, Haskell and OCaml versions?", "body": "<p><a href=\"https://lifthrasiir.github.io/rustlog/why-is-a-rust-executable-large.html\" rel=\"nofollow noreferrer\">This article</a> has a very good discussion  of the topic. Some of the largest and most common culprits are cargo's default to debug builds (not relevant in your case) and statically including libraries by default.</p>\n"}], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6082, "favorite_count": 11, "answer_count": 2, "score": 42, "last_activity_date": 1503503455, "creation_date": 1443099809, "last_edit_date": 1444151629, "question_id": 32762102, "link": "https://stackoverflow.com/questions/32762102/why-do-rust-programs-use-so-much-more-memory-than-the-c-haskell-and-ocaml-versi", "title": "Why do Rust programs use so much more memory than the C, Haskell and OCaml versions?", "body": "<p>I looked at how much RAM was used by Rust programs (<code>RES</code> column from <code>top</code> command) and I wonder why they use so much memory.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    println!(\"What's your name?\");\n    let mut input = String::new();\n    io::stdin().read_line(&amp;mut input).unwrap();\n    println!(\"Hello {}!\", input);\n}\n</code></pre>\n\n<p>I saw that 6 MB of memory was used before I input something.</p>\n\n<p>Here is how I compiled and executed the program:</p>\n\n<pre><code>cargo build --release\n./target/release/main\n</code></pre>\n\n<p>The equivalent C program:</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n    printf(\"What's your name?\\n\");\n    char input[100] = {0};\n    scanf(\"%s\", input);\n    printf(\"Hello %s!\\n\", input);\n    return 0;\n}\n</code></pre>\n\n<p>only uses 0.6 MB. In this case, the Rust program uses 10 times more memory. In other cases, I saw that the Rust program uses 5 times more memory.</p>\n\n<p>I also tested with other languages to compare.</p>\n\n<p>The OCaml version:</p>\n\n<pre><code>let () =\n    print_endline \"What's your name?\";\n    let line = read_line () in\n    print_string \"Hello \";\n    print_endline line\n</code></pre>\n\n<p>uses 1 MB.</p>\n\n<p>The Haskell version:</p>\n\n<pre><code>main = do\n    putStrLn \"What's your name?\"\n    name &lt;- getLine\n    putStrLn (\"Hello \" ++ name ++ \"!\")\n</code></pre>\n\n<p>uses 3 MB.</p>\n\n<p>The Python version:</p>\n\n<pre><code>print(\"What's your name?\")\nname = input()\nprint(\"Hello\", name, \"!\")\n</code></pre>\n\n<p>uses 7 MB, almost the same as the Rust version!</p>\n\n<h2>Update</h2>\n\n<p>I'm running Linux (ArchLinux) with Rust 1.3 (I also tried the nightly with similar results).</p>\n\n<h2>Update 2</h2>\n\n<p>Here is more data from the <code>htop</code> command:</p>\n\n<pre><code>VIRT    RES     SHR     MEM%    Command\n15572   2936    804     0.1     ocaml\n21728   2732    2528    0.1     haskell\n22540   7480    4308    0.2     python\n4056    668     600     0.0     c\n24180   6164    1928    0.2     rust\n</code></pre>\n\n<h2>Update 3</h2>\n\n<p>I did more tests with <code>massif</code> to see the memory usage.</p>\n\n<p>For every program, I ran <code>massif</code> twice, as following:</p>\n\n<pre><code>valgrind --tool=massif --time-unit=B ./program\nvalgrind --tool=massif  --pages-as-heap=yes --time-unit=B ./program\n</code></pre>\n\n<p>Here are the results with all the programs (as shown by <code>ms_print</code>):</p>\n\n<p><strong>C versions:</strong></p>\n\n<p><a href=\"https://framabin.org/?dd243f8ec99155bc#Af5cPrcHnz3DsWiOStfwgW8Qq6BTVhogz/46L+sMuSs=\">https://framabin.org/?dd243f8ec99155bc#Af5cPrcHnz3DsWiOStfwgW8Qq6BTVhogz/46L+sMuSs=</a></p>\n\n<p><a href=\"https://framabin.org/?261b9366c3749469#1ztDBkgVly9CanrrWWrJdh3yBFL5PEIW3OI5OLnze/Q=\">https://framabin.org/?261b9366c3749469#1ztDBkgVly9CanrrWWrJdh3yBFL5PEIW3OI5OLnze/Q=</a></p>\n\n<p><strong>Rust versions:</strong></p>\n\n<p><a href=\"https://framabin.org/?0f1bac1c750e97bf#AXwlFYYPHeazq9LfsTOpRBaUTTkb1NfN9ExPorDJud0=\">https://framabin.org/?0f1bac1c750e97bf#AXwlFYYPHeazq9LfsTOpRBaUTTkb1NfN9ExPorDJud0=</a></p>\n\n<p><a href=\"https://framabin.org/?c24b21b01af36782#OLFWdwLjVG2t7eoLqLFhe0Pp8Q8pA2S/oq4jdRRWPzI=\">https://framabin.org/?c24b21b01af36782#OLFWdwLjVG2t7eoLqLFhe0Pp8Q8pA2S/oq4jdRRWPzI=</a></p>\n\n<p><strong>OCaml versions:</strong></p>\n\n<p><a href=\"https://framabin.org/?060f05bea318109c#/OJQ8reHCU3CzzJ5NCOCLOYJQFnA1VgxqAIVjgQWX9I=\">https://framabin.org/?060f05bea318109c#/OJQ8reHCU3CzzJ5NCOCLOYJQFnA1VgxqAIVjgQWX9I=</a></p>\n\n<p><a href=\"https://framabin.org/?8ff1ffb6d03cb37a#GN8bq3Wrm6tNWaINIhMAr4ieltLtOPjuZ4Ynof9bV4w=\">https://framabin.org/?8ff1ffb6d03cb37a#GN8bq3Wrm6tNWaINIhMAr4ieltLtOPjuZ4Ynof9bV4w=</a></p>\n\n<p><strong>Haskell versions:</strong></p>\n\n<p><a href=\"https://framabin.org/?b204bd978b8c1fd8#DyQH862AM8NEPTKlzEcZgoapPaZLdlF9W3dRn47K5yU=\">https://framabin.org/?b204bd978b8c1fd8#DyQH862AM8NEPTKlzEcZgoapPaZLdlF9W3dRn47K5yU=</a></p>\n\n<p><a href=\"https://framabin.org/?ac1aa89fcaeb782c#TQ+uAiqerjHuuEEIhehVitjm63nc3wu5wfivAeBH5uI=\">https://framabin.org/?ac1aa89fcaeb782c#TQ+uAiqerjHuuEEIhehVitjm63nc3wu5wfivAeBH5uI=</a></p>\n\n<p><strong>Python versions:</strong></p>\n\n<p><a href=\"https://framabin.org/?197e8b90df5373ec#aOi0+tEj32Na5jW66Kl97q2lsjSZ2x7Cwl/pOt0lYIM=\">https://framabin.org/?197e8b90df5373ec#aOi0+tEj32Na5jW66Kl97q2lsjSZ2x7Cwl/pOt0lYIM=</a></p>\n\n<p><a href=\"https://framabin.org/?397efa22484e3992#1ylOrmjKaA9Hg7gw7H7rKGM0MyxuvKwPNN1J/jLEMrk=\">https://framabin.org/?397efa22484e3992#1ylOrmjKaA9Hg7gw7H7rKGM0MyxuvKwPNN1J/jLEMrk=</a></p>\n\n<p>Summary (ram usage):</p>\n\n<pre><code>|------------|----------|----------|----------|----------|----------|\n|            |     C    | Haskell  |   OCaml  |   Rust   |  Python  |\n|------------|----------|----------|----------|----------|----------|\n| First run  |    1 B   | 63.12 KB | 5.993 MB |   816 B  | 1.321 MB |\n|------------|----------|----------|----------|----------|----------|\n| Second run | 6.031 MB | 24.20 MB | 17.14 MB | 25.60 MB | 27.43 MB |\n|------------|----------|----------|----------|----------|----------|\n</code></pre>\n\n<p>The first run is without the <code>--pages-as-heap=yes</code> parameter.</p>\n\n<p>I also ran <code>massif</code> with the <code>--stacks=yes</code> option for C and Rust.</p>\n\n<p><strong>C version:</strong></p>\n\n<p><a href=\"https://framabin.org/?b3009d198ccfdee1#HxR6LPPAzt15K+wIFdaqlfSJjBrJvhV2ZHWdElg3ezc=\">https://framabin.org/?b3009d198ccfdee1#HxR6LPPAzt15K+wIFdaqlfSJjBrJvhV2ZHWdElg3ezc=</a></p>\n\n<p>(3.141 KB)</p>\n\n<p><strong>Rust version:</strong></p>\n\n<p><a href=\"https://framabin.org/?b446d8d76c279007#tHnGiOnRstTA2krhz6cgfvTjI+FclcZS3rqyZvquWdQ=\">https://framabin.org/?b446d8d76c279007#tHnGiOnRstTA2krhz6cgfvTjI+FclcZS3rqyZvquWdQ=</a></p>\n\n<p>(8.602 KB)</p>\n\n<p>What does explain such a huge difference between heap block allocation and page allocation in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443099739, "post_id": 32761524, "comment_id": 53363128, "body": "Note that this is the same underlying question as <a href=\"http://stackoverflow.com/q/32761370/155423\">stackoverflow.com/q/32761370/155423</a>."}], "answers": [{"comments": [{"owner": {"reputation": 165, "user_id": 5357246, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wnQwBKE9aik/AAAAAAAAAAI/AAAAAAAACFY/Y1j8rRDswRM/photo.jpg?sz=128", "display_name": "Ian Andrews", "link": "https://stackoverflow.com/users/5357246/ian-andrews"}, "edited": false, "score": 2, "creation_date": 1443101137, "post_id": 32761993, "comment_id": 53364237, "body": "I think I have it.  When you have a method on struct that mutably borrows <code>self</code> and that method returns a mutable reference, the only valid assumption is that mutable reference is to some field on that struct, which transitively keeps the borrow on the struct alive.  Thanks for clarifying!"}, {"owner": {"reputation": 2481, "user_id": 81896, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/f12951e7ba0e407399f6ad1c353b24ad?s=128&d=identicon&r=PG", "display_name": "Micha\u0142 Bendowski", "link": "https://stackoverflow.com/users/81896/micha%c5%82-bendowski"}, "edited": false, "score": 1, "creation_date": 1443120465, "post_id": 32761993, "comment_id": 53376535, "body": "It&#39;s worth noting lifetimes play a part here, see <a href=\"http://stackoverflow.com/a/32768690/81896\">stackoverflow.com/a/32768690/81896</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 2481, "user_id": 81896, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/f12951e7ba0e407399f6ad1c353b24ad?s=128&d=identicon&r=PG", "display_name": "Micha\u0142 Bendowski", "link": "https://stackoverflow.com/users/81896/micha%c5%82-bendowski"}, "edited": false, "score": 0, "creation_date": 1443121637, "post_id": 32761993, "comment_id": 53377190, "body": "@Micha\u0142Bendowski absolutely. It&#39;s just in this case, <i>lifetime elision</i> ties the lifetimes of <code>self</code> and the return value together, so you don&#39;t have to write it out explicitly."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1550153183, "last_edit_date": 1550153183, "creation_date": 1443099562, "answer_id": 32761993, "question_id": 32761524, "link": "https://stackoverflow.com/questions/32761524/why-does-hashmapget-mut-take-ownership-of-the-map-for-the-rest-of-the-scope/32761993#32761993", "title": "Why does HashMap::get_mut() take ownership of the map for the rest of the scope?", "body": "<p>This error is a limitation of the implementation of the borrow checker before <a href=\"https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes\"><em>non-lexical lifetimes</em></a>. With those enabled, the original code will work as-is:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn things() {\n    let mut map = HashMap::new();\n    map.insert(5, \"thing\");\n    map.insert(4, \"world\");\n    map.insert(1, \"hello\");\n    let mut thing = map.remove(&amp;5);\n    let mut world = map.get_mut(&amp;4);\n    let mut hello = map.get_mut(&amp;1);\n}\n\nfn main() {}\n</code></pre>\n\n<p>This is because the compiler is smarter and can see that you aren't using <code>world</code> anymore by the time you get to <code>map.get_mut(&amp;1)</code>, so it doesn't need to have a valid reference anymore.</p>\n\n<p>You can get equivalent code in previous versions of Rust by adding an explicit scope:</p>\n\n<pre><code>let mut thing = map.remove(&amp;5);\n{\n    let mut world = map.get_mut(&amp;4);\n}\nlet mut hello = map.get_mut(&amp;1);\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>Why does <code>HashMap::get_mut()</code> take ownership of the map</p>\n</blockquote>\n\n<p>It absolutely does <strong>not</strong> do that. <em>Ownership</em> is a precise term in Rust code. Note that the error message specifically says </p>\n\n<blockquote>\n  <p>previous borrow of <code>map</code> occurs here</p>\n</blockquote>\n\n<p>A <em>borrow</em> is not ownership. If I borrow your car, I don't own your car.</p>\n\n<p>Your real question is \"why does it borrow it for the rest of the scope\". Let's look at the signature:</p>\n\n<pre><code>fn get_mut&lt;Q: ?Sized&gt;(&amp;mut self, k: &amp;Q) -&gt; Option&lt;&amp;mut V&gt; \nwhere\n    K: Borrow&lt;Q&gt;,\n    Q: Hash + Eq,\n</code></pre>\n\n<p>In words, this could be read as</p>\n\n<blockquote>\n  <p>Given a mutable reference to a <code>HashMap</code> (<code>&amp;mut self</code>) and something that can be used to find the key (<code>K: Borrow&lt;Q&gt;, Q: Hash + Eq</code>), return a mutable reference to the value if one matches (<code>Option&lt;&amp;mut V&gt;</code>)</p>\n</blockquote>\n\n<p>However, that returned mutable reference will be changing <em>something</em> in the <code>HashMap</code>, that's why it's a mutable reference at all. You are only allowed to have multiple immutable borrows OR one mutable borrow at a time. This prevents writing code that causes inconsistencies and safety issues.</p>\n\n<p>Let's look at <code>remove</code>:</p>\n\n<pre><code>fn remove&lt;Q: ?Sized&gt;(&amp;mut self, k: &amp;Q) -&gt; Option&lt;V&gt; \nwhere\n    K: Borrow&lt;Q&gt;, \n    Q: Hash + Eq,\n</code></pre>\n\n<p>This returns an <em>owned</em> value, not a reference into the <code>HashMap</code>. Once the method is done, the borrow of the map is over. </p>\n"}], "owner": {"reputation": 165, "user_id": 5357246, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-wnQwBKE9aik/AAAAAAAAAAI/AAAAAAAACFY/Y1j8rRDswRM/photo.jpg?sz=128", "display_name": "Ian Andrews", "link": "https://stackoverflow.com/users/5357246/ian-andrews"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4238, "favorite_count": 1, "accepted_answer_id": 32761993, "answer_count": 1, "score": 11, "last_activity_date": 1550153183, "creation_date": 1443098246, "last_edit_date": 1521382366, "question_id": 32761524, "link": "https://stackoverflow.com/questions/32761524/why-does-hashmapget-mut-take-ownership-of-the-map-for-the-rest-of-the-scope", "title": "Why does HashMap::get_mut() take ownership of the map for the rest of the scope?", "body": "<p>I have the following code that inserts some values into a HashMap and then gets them back out:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn things() {\n    let mut map = HashMap::new();\n    map.insert(5, \"thing\");\n    map.insert(4, \"world\");\n    map.insert(1, \"hello\");\n    let mut thing = map.remove(&amp;5);\n    let mut world = map.get_mut(&amp;4);\n    let mut hello = map.get_mut(&amp;1);\n}\n</code></pre>\n\n<p>Attempting to compile this code gives the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `map` as mutable more than once at a time\n  --&gt; src/main.rs:10:21\n   |\n9  |     let mut world = map.get_mut(&amp;4);\n   |                     --- first mutable borrow occurs here\n10 |     let mut hello = map.get_mut(&amp;1);\n   |                     ^^^ second mutable borrow occurs here\n11 | }\n   | - first borrow ends here\n</code></pre>\n\n<p>After perusing the API docs for both the <code>remove()</code> and <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html#method.get_mut\" rel=\"noreferrer\"><code>get_mut()</code></a> methods (fortunately they are pretty close to each other!) there is nothing that stands out to me from the method signatures why the <code>remove()</code> method does not mutably borrow the map for the rest of the current scope while the <code>get_mut()</code> method does. </p>\n\n<p>The other piece of data that I have that also mystifies me is that this code compiles:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn things() {\n    let mut map = HashMap::new();\n    map.insert(5, \"thing\");\n    map.insert(4, \"world\");\n    map.insert(1, \"hello\");\n    let mut thing = map.remove(&amp;5);\n    map.get_mut(&amp;4);\n    let mut hello = map.get_mut(&amp;1);\n}\n</code></pre>\n\n<p>Not storing the result of the first call to <code>get_mut()</code> doesn't cause the map to be mutably borrowed for the rest of the scope?  How could I have known this from looking at the documentation?  Am I missing something else?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1443099723, "post_id": 32761370, "comment_id": 53363115, "body": "Note that this is the same underlying question as <a href=\"http://stackoverflow.com/q/32761524/155423\">stackoverflow.com/q/32761524/155423</a>."}], "answers": [{"tags": [], "owner": {"reputation": 849, "user_id": 2674572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ac98e0d627ba6399371ceea60fa7225?s=128&d=identicon&r=PG", "display_name": "or1426", "link": "https://stackoverflow.com/users/2674572/or1426"}, "is_accepted": false, "score": 5, "last_activity_date": 1443099057, "last_edit_date": 1443099057, "creation_date": 1443098502, "answer_id": 32761621, "question_id": 32761370, "link": "https://stackoverflow.com/questions/32761370/why-does-vectsplit-at-mut-borrow-the-vector-for-the-rest-of-the-scope/32761621#32761621", "title": "Why does Vec&lt;T&gt;::split_at_mut borrow the vector for the rest of the scope?", "body": "<p>The borrowing of <code>nums</code> in <code>doesnt_work</code> will last as long as the variables <code>l</code> and <code>r</code> exist because the values in the vector (and the vector itself) have literally been borrowed and are now accessible only through <code>l</code> and <code>r</code>. </p>\n\n<p>You can see this effect by putting the <code>let</code> for <code>l</code> and <code>r</code> in a scope which ends so the borrow also ends. For example this code works fine but if you try to move the <code>println!</code> inside the scope (inside the curly brackets) then it will fail:</p>\n\n<pre><code>fn works() {\n    let mut nums = vec![1,2,3,4];\n\n    {\n        let (l, r) = nums.split_at_mut(2);\n        //println!(\"{}\", nums.len()); //println! will fail here\n    }\n\n    println!(\"{}\", nums.len());\n}\n</code></pre>\n\n<p>In your <code>also_works</code> example you don't do anything with the result so the borrow is lost immediately. Basically the compiler can see that there is no way you can access the vector through the result of the method so you're free to access them through the original vector.</p>\n"}, {"comments": [{"owner": {"reputation": 9735, "user_id": 112053, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/lObNt.jpg?s=128&g=1", "display_name": "barjak", "link": "https://stackoverflow.com/users/112053/barjak"}, "edited": false, "score": 1, "creation_date": 1443164456, "post_id": 32768690, "comment_id": 53391651, "body": "You got it, congratulations!"}], "tags": [], "owner": {"reputation": 2481, "user_id": 81896, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/f12951e7ba0e407399f6ad1c353b24ad?s=128&d=identicon&r=PG", "display_name": "Micha\u0142 Bendowski", "link": "https://stackoverflow.com/users/81896/micha%c5%82-bendowski"}, "is_accepted": false, "score": 2, "last_activity_date": 1443120341, "creation_date": 1443120341, "answer_id": 32768690, "question_id": 32761370, "link": "https://stackoverflow.com/questions/32761370/why-does-vectsplit-at-mut-borrow-the-vector-for-the-rest-of-the-scope/32768690#32768690", "title": "Why does Vec&lt;T&gt;::split_at_mut borrow the vector for the rest of the scope?", "body": "<p>Let me answer my own question, since what I was really missing were lifetimes. This code compiles:</p>\n\n<pre><code>fn maybe_use&lt;'a, 'b&gt;(v1: &amp;'a mut Vec&lt;i64&gt;, v2: &amp;'b mut Vec&lt;i64&gt;) -&gt; &amp;'a mut Vec&lt;i64&gt; {\n    v1\n}\n\nfn main() {\n    let mut nums1: Vec&lt;i64&gt; = vec![1,2,3,4];\n    let mut nums2: Vec&lt;i64&gt; = vec![1,2,3,4];\n\n    let ret = maybe_use(&amp;mut nums1, &amp;mut nums2);\n\n    println!(\"{}\", nums2.len());\n}\n</code></pre>\n\n<p>Because the return type of maybe_use makes it clear the reference comes from the first argument. If we change <code>v2</code> to use <code>'a</code> lifetime, <code>main</code> stops compiling because both vectors passed to <code>maybe_use</code> are considered borrowed. If we omit the lifetime altogether, compiler emits this error:</p>\n\n<blockquote>\n  <p>this function's return type contains a borrowed value, but the\n  signature does not say whether it is borrowed from <code>v1</code> or <code>v2</code></p>\n</blockquote>\n\n<p>So what surprised me initially (how does the compiler know <code>split_at_mut</code> returns pointers to the vector?) boils down to the references having the same lifetime.</p>\n"}], "owner": {"reputation": 2481, "user_id": 81896, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/f12951e7ba0e407399f6ad1c353b24ad?s=128&d=identicon&r=PG", "display_name": "Micha\u0142 Bendowski", "link": "https://stackoverflow.com/users/81896/micha%c5%82-bendowski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 487, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1443120341, "creation_date": 1443097798, "last_edit_date": 1443099705, "question_id": 32761370, "link": "https://stackoverflow.com/questions/32761370/why-does-vectsplit-at-mut-borrow-the-vector-for-the-rest-of-the-scope", "title": "Why does Vec&lt;T&gt;::split_at_mut borrow the vector for the rest of the scope?", "body": "<p><code>Vec&lt;T&gt;</code> has two methods:</p>\n\n<pre><code>fn push(&amp;mut self, value: T)\nfn split_at_mut(&amp;mut self, mid: usize) -&gt; (&amp;mut [T], &amp;mut [T])\n</code></pre>\n\n<p>They both take a mutable reference to the vector. But the scope of the borrow seems to be different, e.g:</p>\n\n<pre><code>fn works() {\n    let mut nums: Vec&lt;i64&gt; = vec![1,2,3,4];\n    nums.push(5);\n    println!(\"{}\", nums.len());\n}\n\nfn doesnt_work() {\n    let mut nums: Vec&lt;i64&gt; = vec![1,2,3,4];\n    let (l,r) = nums.split_at_mut(2);\n    println!(\"{}\", nums.len());\n}\n\nfn also_works() {\n    let mut nums: Vec&lt;i64&gt; = vec![1,2,3,4];\n    let _ = nums.split_at_mut(2);\n    println!(\"{}\", nums.len());\n}\n</code></pre>\n\n<p>The <code>doesnt_work</code> function doesn't compile, saying there is already a mutable borrow on <code>nums</code> and that it ends and the end of the function. The problem goes away if I ignore the values returned from <code>split_at_mut</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 4, "last_activity_date": 1443078962, "creation_date": 1443078962, "answer_id": 32755507, "question_id": 32754509, "link": "https://stackoverflow.com/questions/32754509/what-are-the-differences-between-a-default-trait-method-and-a-parameterized-func/32755507#32755507", "title": "What are the differences between a default Trait method and a parameterized function?", "body": "<p>You actually answered the question yourself, congratulations!</p>\n\n<p>Since Rust only has principled overloading/overriding via traits, the essential semantic difference is that a trait <code>method</code> can be overridden, and thus customized, while a free function cannot.</p>\n\n<p>Technically, both <code>Trait::func(&amp;self)</code> and <code>mod::func&lt;T: Trait&gt;(&amp;T)</code> are monophormized while <code>mod::func(&amp;Trait)</code> is not (and thus will incur the slight overhead of virtual calls).</p>\n\n<p>Also, there is a <em>slight</em> memory overhead to <code>Trait::func(&amp;self)</code>: one more entry in the virtual table. It's probably unnoticeable.</p>\n\n<p>In fine, the choice is generally a judgement call. Whether you open the door to customization or not is your choice.</p>\n"}], "owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1062, "favorite_count": 0, "accepted_answer_id": 32755507, "answer_count": 1, "score": 6, "last_activity_date": 1443078962, "creation_date": 1443075046, "last_edit_date": 1443076771, "question_id": 32754509, "link": "https://stackoverflow.com/questions/32754509/what-are-the-differences-between-a-default-trait-method-and-a-parameterized-func", "title": "What are the differences between a default Trait method and a parameterized function?", "body": "<p>In Rust, I tend to have design issues when it comes to writing modules with traits. I'm not always sure whether I want:</p>\n\n<pre><code>pub trait Foo {\n    fn foo(&amp;self) -&gt; bool;\n\n    fn bar(&amp;self) {\n       if self.foo() {\n           // Do something!\n       } else {\n           // Do something else!\n       }\n    }\n}\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>pub trait Foo {\n    fn foo(&amp;self) -&gt; bool;\n}\n\npub fn bar&lt;T&gt;(fooer: &amp;T) where T: Foo {\n    if fooer.foo() {\n        // Do something!\n    } else {\n        // Do something else!\n    }\n}\n</code></pre>\n\n<p>(Of course, real examples are likely to have more elaborate traits or function signatures)</p>\n\n<p>While issues of design are beyond the scope of Stack Overflow, I'm not entirely sure I even understand the meaningful, objective differences between the two, and I don't feel like browsing the standard library has shed much light. It <strong>seems</strong> like Rust's standard library prefers to use <code>variable.method()</code> as opposed to <code>mod::function(&amp;variable)</code> in most cases. However, that still doesn't really answer the question since that's just a style guide argument rather than being based on objective knowledge about the difference.</p>\n\n<p>Other than the obvious syntactic difference, what are the main <strong>functional</strong> differences between a default trait method and a module-level parameterized function? One big question I have is: does the default trait method monomorphize to use static dispatch, or does if it take <code>self</code> as if it were a trait object?</p>\n\n<p>The only difference I'm seeing off the top of my head is that an <code>impl</code> of the trait may elect to override the default method implementation, hopefully/presumably providing an implementation that fulfills the same contract, while I'm guaranteed that the <code>mod::function</code> implementation always runs the exact same code no matter what (for better or worse). Is there anything else? Does the answer change if associated types or extension traits are involved?</p>\n"}]