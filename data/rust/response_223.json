[{"tags": ["mongodb", "rust", "bson", "serde"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1555542451, "post_id": 55735974, "comment_id": 98152097, "body": "try to use <a href=\"https://docs.rs/mongodb/0.3.12/mongodb/struct.UtcDateTime.html\" rel=\"nofollow noreferrer\"><code>UtcDateTime</code></a>"}, {"owner": {"reputation": 118, "user_id": 4532565, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-_apC5d5zS8U/AAAAAAAAAAI/AAAAAAAAGB0/EVfOGaEjVts/photo.jpg?sz=128", "display_name": "nngg", "link": "https://stackoverflow.com/users/4532565/nngg"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555689220, "post_id": 55735974, "comment_id": 98203453, "body": "Yes, I&#39;m aware that <code>UtcDatetime</code> would work. However, just like for <code>i32</code>, <code>i64</code>, or <code>String</code>, I don&#39;t have to use <code>bson::Bson::String</code> or <code>bson::Bson::I32</code> or <code>bson::Bson::I64</code> in my structs, the serializer should take care of the conversion transparently. Adding variants over struct fields would also be an acceptable solution."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555695142, "post_id": 55735974, "comment_id": 98205637, "body": "That not possible <code>mongodb</code> can&#39;t implement <code>Serialize</code> for <code>DateTime</code>, their need a wrapper, and it&#39;s look like <code>bson</code> have it and share it. Why not use it ?"}], "owner": {"reputation": 118, "user_id": 4532565, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-_apC5d5zS8U/AAAAAAAAAAI/AAAAAAAAGB0/EVfOGaEjVts/photo.jpg?sz=128", "display_name": "nngg", "link": "https://stackoverflow.com/users/4532565/nngg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 739, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1555690900, "creation_date": 1555535215, "last_edit_date": 1555690900, "question_id": 55735974, "link": "https://stackoverflow.com/questions/55735974/how-do-i-serialize-chronodatetime-fields-as-isodate-when-using-the-rust-mongo", "title": "How do I serialize chrono::DateTime fields as ISODate when using the Rust Mongo driver prototype?", "body": "<p>Datetime fields in structs are being serialized to <code>String</code>s instead of <code>ISODate</code>s when using the <a href=\"https://github.com/mongodb-labs/mongo-rust-driver-prototype\" rel=\"nofollow noreferrer\">Rust Mongo driver prototype</a>. How do I get the fields to be saved as <code>ISODate</code>?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use chrono::{DateTime, Utc};\nuse mongodb::oid::ObjectId;\nuse mongodb::{\n    coll::Collection, db::Database, db::ThreadedDatabase, error::Error, Client, ThreadedClient,\n};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Serialize, Deserialize, Clone, Debug)]\nstruct Person {\n    pub _id: ObjectId,\n    pub date: DateTime&lt;Utc&gt;,\n}\n\nfn main() {\n    let client = Client.with_uri(\"mongodb://localhost:27017\").unwrap();\n    let p = Person {\n        _id: ObjectId::new().unwrap(),\n        date: Utc::now(),\n    };\n    let document = mongodb::to_bson(p).unwrap().as_document();\n    if document.is_some() {\n        client\n            .db(\"my_db\")\n            .collection(\"mycollection\")\n            .insert_one(document, None)\n            .unwrap();\n    }\n}\n</code></pre>\n\n<p>On querying the DB, the record contains a date string (in ISO format); I expected it to be an <code>ISODate</code>.</p>\n"}, {"tags": ["arrays", "rust", "initialization"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555529131, "post_id": 55734588, "comment_id": 98147738, "body": "Your function can be simplified to <code>ch &lt; rand::thread_rng().gen()</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555529187, "post_id": 55734588, "comment_id": 98147765, "body": "See also <a href=\"https://docs.rs/rand/0.6.5/rand/trait.Rng.html#method.gen_bool\" rel=\"nofollow noreferrer\"><code>Rng::gen_bool</code></a> and <a href=\"https://docs.rs/rand/0.6.5/rand/trait.Rng.html#method.gen_ratio\" rel=\"nofollow noreferrer\"><code>Rng::gen_ratio</code></a>"}, {"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "edited": false, "score": 0, "creation_date": 1555578606, "post_id": 55734588, "comment_id": 98162411, "body": "What you are looking for is probably something like <code>Bernoulli::new(0.5).sample_iter(&amp;mut thread_rng()).take(4).collect()</code>"}], "owner": {"reputation": 51, "user_id": 5578791, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/484d83ad72ddbf2c9257ae766eb29af4?s=128&d=identicon&r=PG&f=1", "display_name": "Mister R.U.B.I", "link": "https://stackoverflow.com/users/5578791/mister-r-u-b-i"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1555528891, "answer_count": 0, "score": 0, "last_activity_date": 1555529092, "creation_date": 1555528750, "last_edit_date": 1555528926, "question_id": 55734588, "link": "https://stackoverflow.com/questions/55734588/initialize-an-array-of-size-n-using-a-function-as-value-and-having-it-called-n-t", "closed_reason": "Duplicate", "title": "Initialize an array of size N using a function as value and having it called N times", "body": "<p>In this snippet:</p>\n\n<pre><code>let mut map = [chance(0.5); 5];\n</code></pre>\n\n<p>It'll call the <code>chance</code> function once, and fill the entire array with the value it got. So if <code>chance</code> gives <code>true</code>, the array will be <code>[true, true, true, true, true]</code>. Is there a way to call the function for each index? As to give something like <code>[true, false, false, true, false]</code>.</p>\n\n<p><em>Without using</em> <code>[chance(0.5), chance(0.5), chance(0.5), chance(0.5), chance(0.5)]</code><em>, obviously.</em></p>\n\n<p>Chance function:</p>\n\n<pre><code>fn chance(ch: f64) -&gt; bool {\n    use rand::prelude::*;\n\n    if ch &lt; rand::thread_rng().gen() {\n        return true;\n    }\n\n    return false;\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555525478, "post_id": 55733667, "comment_id": 98146162, "body": "What you are attempting to do is inherently memory unsafe. You have a reference to something in a vector and potentially try to mutate it while that reference is outstanding. That could invalidate the reference. This is exactly what Rust prevents \u2014 introducing memory unsafety."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555525631, "post_id": 55733667, "comment_id": 98146235, "body": "Search on stack overflow for the error message you get and you&#39;ll find hundreds of questions about the same thing."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555525753, "post_id": 55733667, "comment_id": 98146296, "body": "Your immediate error is solved by <a href=\"https://stackoverflow.com/q/43069178/155423\">How can I pass a FnMut closure to a function using a reference in Rust?</a>. Then you run into <a href=\"https://stackoverflow.com/q/47618823/155423\">Cannot borrow as mutable because it is also borrowed as immutable</a>"}, {"owner": {"reputation": 101, "user_id": 8605016, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Qq6J78tJRmw/AAAAAAAAAAI/AAAAAAAABh8/sZDvOhS9XHI/photo.jpg?sz=128", "display_name": "Christopher Rybicki", "link": "https://stackoverflow.com/users/8605016/christopher-rybicki"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555624258, "post_id": 55733667, "comment_id": 98184602, "body": "Gotcha, thanks @Shepmaster. I&#39;m familiar with the general borrow checking aspect, I was just trying to think if there was any way to reformulate my code that deals with the pass-in-heap part more safely."}, {"owner": {"reputation": 101, "user_id": 8605016, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Qq6J78tJRmw/AAAAAAAAAAI/AAAAAAAABh8/sZDvOhS9XHI/photo.jpg?sz=128", "display_name": "Christopher Rybicki", "link": "https://stackoverflow.com/users/8605016/christopher-rybicki"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555624340, "post_id": 55733667, "comment_id": 98184626, "body": "For the time being I&#39;ve fixed my code by changing my <code>Val::Lambda</code> to take in a function pointer instead, and make all of the functions/lambdas/closures at the top level (i.e. global)."}], "owner": {"reputation": 101, "user_id": 8605016, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Qq6J78tJRmw/AAAAAAAAAAI/AAAAAAAABh8/sZDvOhS9XHI/photo.jpg?sz=128", "display_name": "Christopher Rybicki", "link": "https://stackoverflow.com/users/8605016/christopher-rybicki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 165, "favorite_count": 0, "closed_date": 1586270202, "answer_count": 0, "score": 1, "last_activity_date": 1586270215, "creation_date": 1555524717, "last_edit_date": 1555525326, "question_id": 55733667, "link": "https://stackoverflow.com/questions/55733667/how-to-store-and-use-closures-that-use-a-common-region-of-memory", "closed_reason": "Duplicate", "title": "How to store and use closures that use a common region of memory?", "body": "<p>I'm writing a piece of Rust code that simulates a small (typed) toy language with closures, but I'm not sure how I should store them in an <code>enum</code> so that they are still able to access/use a common heap when I evaluate the closures.</p>\n\n<p>I'd like the program's data to be stored on a heap, and I allow all of the closures to take in this heap as an argument in case it needs to allocate something, retrieve a value, etc. I'm okay if the closure code itself is dynamically allocated by Rust, but I want the pointers to the closures themselves to be in my <code>Heap</code> struct.</p>\n\n<p>I've tried storing the data as a function pointer (like <code>fn(usize, usize, &amp;mut Heap)</code>), as well as boxed closures (like <code>Box&lt;dyn FnMut(usize, &amp;mut Heap) -&gt; usize&gt;</code>), as well as a boxed pointer version with a lifetime argument (like <code>Box&lt;dyn FnMut(usize, &amp;mut Heap) -&gt; usize + 'a&gt;</code>) but I always seem to run into some issue with the borrow checker.</p>\n\n<p>Here is a simplified version of my code:</p>\n\n<pre><code>enum Val {\n    Int(i32),\n    Bool(bool),\n    Lambda(Box&lt;dyn FnMut(usize, &amp;mut Heap) -&gt; usize&gt;),\n}\n\nstruct Heap {\n    mem: Vec&lt;Val&gt;,\n}\n\nimpl Heap {\n    fn alloc(&amp;mut self, v: Val) -&gt; usize {\n        self.mem.push(v);\n        self.mem.len() - 1\n    }\n\n    fn get(&amp;self, i: usize) -&gt; &amp;Val {\n        &amp;self.mem[i]\n    }\n}\n\nfn apply(func: usize, arg: usize, heap: &amp;mut Heap) -&gt; usize {\n    let closure = match heap.get(func) {\n        Val::Lambda(x) =&gt; x,\n        _ =&gt; panic!(),\n    };\n    closure(arg, heap)\n}\n\nfn main() {\n    let mut h = Heap { mem: vec![] };\n\n    // creating a closure\n    let foo = Val::Lambda(Box::new(|a: usize, mut heap: &amp;mut Heap| -&gt; usize {\n        let a_val = match heap.get(a) {\n            Val::Int(x) =&gt; *x,\n            _ =&gt; panic!(),\n        };\n        heap.alloc(Val::Int(a_val * a_val))\n    }));\n    let f = h.alloc(foo);\n\n    // using the closure\n    let a = h.alloc(Val::Int(3));\n    let b = apply(f, a, &amp;mut h);\n    match h.get(b) {\n        Val::Int(x) =&gt; println!(\"{}\", x),\n        _ =&gt; panic!(),\n    };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0caf1ebe71767409db0a9f30c27d6c1a\" rel=\"nofollow noreferrer\">Rust playground</a></p>\n\n<p>The above code should output 9, but instead there is a borrow-checker error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow `**closure` as mutable, as it is behind a `&amp;` reference\n  --&gt; src/main.rs:27:5\n   |\n23 |     let closure = match heap.get(func) {\n   |         ------- help: consider changing this to be a mutable reference: `&amp;mut std::boxed::Box&lt;dyn for&lt;'r&gt; std::ops::FnMut(usize, &amp;'r mut Heap) -&gt; usize&gt;`\n...\n27 |     closure(arg, heap)\n   |     ^^^^^^^ `closure` is a `&amp;` reference, so the data it refers to cannot be borrowed as mutable\n\nerror[E0502]: cannot borrow `*heap` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:27:5\n   |\n23 |     let closure = match heap.get(func) {\n   |                         ---- immutable borrow occurs here\n...\n27 |     closure(arg, heap)\n   |     -------^^^^^^^^^^^\n   |     |\n   |     mutable borrow occurs here\n   |     immutable borrow later used by call\n\nwarning: variable does not need to be mutable\n  --&gt; src/main.rs:34:47\n   |\n34 |     let foo = Val::Lambda(Box::new(|a: usize, mut heap: &amp;mut Heap| -&gt; usize {\n   |                                               ----^^^^\n   |                                               |\n   |                                               help: remove this `mut`\n   |\n   = note: #[warn(unused_mut)] on by default\n</code></pre>\n\n<p>Is it possible to clone my closures / enum to mitigate this borrowing issue? I am not sure if this is possible due to the restrictions on <a href=\"https://doc.rust-lang.org/std/clone/trait.Clone.html\" rel=\"nofollow noreferrer\"><code>Clone</code></a> listed by the Rust documentation:</p>\n\n<blockquote>\n  <p>\"Closure types, if they capture no value from the environment or if all such captured values implement <code>Clone</code> themselves. Note that variables captured by shared reference always implement <code>Clone</code> (even if the referent doesn't), while variables captured by mutable reference never implement <code>Clone</code>.\"</p>\n</blockquote>\n"}, {"tags": ["rust", "rustdoc"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1555515313, "post_id": 55731174, "comment_id": 98141274, "body": "What is the actual code that reproduces this error? Try to add a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> to your question."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1555517003, "post_id": 55731405, "comment_id": 98142209, "body": "Oh, I didn&#39;t spot the extra spaces in the actual error messages. Good catch!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1555515714, "creation_date": 1555515714, "answer_id": 55731405, "question_id": 55731174, "link": "https://stackoverflow.com/questions/55731174/how-do-you-handle-the-could-not-parse-code-block-as-rust-code-rustdoc-warning/55731405#55731405", "title": "How do you handle the &quot;could not parse code block as Rust code&quot; rustdoc warning?", "body": "<p>You fix the error by using valid Rust code inside the code block.</p>\n\n<hr>\n\n<p>This reproduces the problem:</p>\n\n<pre><code>///    ```rust\n///\n///    ```\npub fn foo() {}\n</code></pre>\n\n<p>Don't add spurious whitespace before your code blocks. In Markdown, four spaces counts as the beginning of code, so you have actually done the equivalent of the HTML:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;code&gt;```rust  ```&lt;/code&gt;\n</code></pre>\n\n<p>As it tells you, <code>```</code> isn't valid Rust code.</p>\n"}], "owner": {"reputation": 9, "user_id": 7482953, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zuz3W.jpg?s=128&g=1", "display_name": "Nicole", "link": "https://stackoverflow.com/users/7482953/nicole"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 194, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1555515714, "creation_date": 1555514917, "last_edit_date": 1555515464, "question_id": 55731174, "link": "https://stackoverflow.com/questions/55731174/how-do-you-handle-the-could-not-parse-code-block-as-rust-code-rustdoc-warning", "title": "How do you handle the &quot;could not parse code block as Rust code&quot; rustdoc warning?", "body": "<p>I'm writing some rust doc examples (that are compiling): </p>\n\n<pre><code>/// ```rust\n/// # #[macro_use]\n/// # extern crate ...\n/// ...\n/// ```\n</code></pre>\n\n<p>But <code>cargo doc</code> gives me this [incorrect] warning: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: could not parse code block as Rust code\n   --&gt; srml/support/src/dispatch.rs:105:5\n    |\n105 |   ///    ```rust\n    |  ________^\n106 | | /// # #[macro_use]\n    | |_\n    |\n    = note: error from rustc: unknown start of token: `\nhelp: mark blocks that do not contain Rust code as text\n    |\n105 | ///    ```textrust\n    |        ^^^^^^^\n</code></pre>\n\n<p>Should I just suppress this warning.. or is something off here?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 12097, "user_id": 1080064, "user_type": "registered", "accept_rate": 43, "profile_image": "https://graph.facebook.com/100000753306178/picture?type=large", "display_name": "tkausl", "link": "https://stackoverflow.com/users/1080064/tkausl"}, "edited": false, "score": 2, "creation_date": 1555511547, "post_id": 55729914, "comment_id": 98138856, "body": "There is nothing connected to standard input in the playground. Download rust and run it on your computer. <code>I have decided that I should use some software that will help me code without the Playground but I do not have an IDE set up yet, and that is not part of my question anyhow.</code> You don&#39;t need an IDE to get started. Rust itself and a simple texteditor work fine."}, {"owner": {"reputation": 53, "user_id": 11365737, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a41fbe8fcc3a46f562a80d872b77f29?s=128&d=identicon&r=PG&f=1", "display_name": "joshi001", "link": "https://stackoverflow.com/users/11365737/joshi001"}, "reply_to_user": {"reputation": 12097, "user_id": 1080064, "user_type": "registered", "accept_rate": 43, "profile_image": "https://graph.facebook.com/100000753306178/picture?type=large", "display_name": "tkausl", "link": "https://stackoverflow.com/users/1080064/tkausl"}, "edited": false, "score": 0, "creation_date": 1555533513, "post_id": 55729914, "comment_id": 98149465, "body": "Hi @tkausl , thanks for the input. But how do i download rust and how do I use a text editor?"}, {"owner": {"reputation": 12097, "user_id": 1080064, "user_type": "registered", "accept_rate": 43, "profile_image": "https://graph.facebook.com/100000753306178/picture?type=large", "display_name": "tkausl", "link": "https://stackoverflow.com/users/1080064/tkausl"}, "edited": false, "score": 0, "creation_date": 1555533698, "post_id": 55729914, "comment_id": 98149536, "body": "<code>But how do i download rust</code> Download RustUp from <a href=\"https://www.rust-lang.org/learn/get-started\" rel=\"nofollow noreferrer\">rust-lang.org/learn/get-started</a> <code>and how do I use a text editor?</code> I&#39;m not sure I understand this question; have you never used a text-editor on your machine?"}, {"owner": {"reputation": 53, "user_id": 11365737, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a41fbe8fcc3a46f562a80d872b77f29?s=128&d=identicon&r=PG&f=1", "display_name": "joshi001", "link": "https://stackoverflow.com/users/11365737/joshi001"}, "reply_to_user": {"reputation": 12097, "user_id": 1080064, "user_type": "registered", "accept_rate": 43, "profile_image": "https://graph.facebook.com/100000753306178/picture?type=large", "display_name": "tkausl", "link": "https://stackoverflow.com/users/1080064/tkausl"}, "edited": false, "score": 0, "creation_date": 1555533881, "post_id": 55729914, "comment_id": 98149618, "body": "I downloaded rustup, rustc, and cargo &amp; don&#39;t remember deleting them. I don&#39;t think I&#39;ve ever used a text editor before."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 11, "last_activity_date": 1555511924, "last_edit_date": 1555511924, "creation_date": 1555511591, "answer_id": 55730056, "question_id": 55729914, "link": "https://stackoverflow.com/questions/55729914/why-does-code-that-requires-user-input-not-work-in-the-rust-playground/55730056#55730056", "title": "Why does code that requires user input not work in the Rust Playground?", "body": "<p>The Playground does <a href=\"https://github.com/integer32llc/rust-playground/issues/22\" rel=\"noreferrer\">not currently accept user input via stdin</a>. The stdin is effectively closed immediately, thus your program gets no input and moves on to the next line of code, printing the \"guess\", which is just the empty string.</p>\n\n<blockquote>\n  <p>that this may be one of the \"limitations\" that the help lists.</p>\n</blockquote>\n\n<p>It is not, but probably should be.</p>\n\n<p>Source: I am the creator of the playground. </p>\n"}], "owner": {"reputation": 53, "user_id": 11365737, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a41fbe8fcc3a46f562a80d872b77f29?s=128&d=identicon&r=PG&f=1", "display_name": "joshi001", "link": "https://stackoverflow.com/users/11365737/joshi001"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 488, "favorite_count": 0, "accepted_answer_id": 55730056, "answer_count": 1, "score": 5, "last_activity_date": 1555511924, "creation_date": 1555511269, "last_edit_date": 1555511823, "question_id": 55729914, "link": "https://stackoverflow.com/questions/55729914/why-does-code-that-requires-user-input-not-work-in-the-rust-playground", "title": "Why does code that requires user input not work in the Rust Playground?", "body": "<p>I copy pasted the code from <em>The Rust Programming Language</em> under the <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html#processing-a-guess\" rel=\"noreferrer\">heading \"Processing a Guess\"</a> onto the <a href=\"https://play.rust-lang.org/\" rel=\"noreferrer\">Rust Playground</a>. However, there is no prompt shown in the standard output. I have searched for this problem and I think that this may be one of the \"limitations\" that <a href=\"https://play.rust-lang.org/help\" rel=\"noreferrer\">the help lists</a>.</p>\n\n<p>I have decided that I should use some software that will help me code without the Playground, but I do not have an IDE set up yet, and that is not part of my question anyhow.</p>\n\n<p>What I have tried to do is copy paste the following code onto the Rust playground:</p>\n\n<pre><code>use std::io;\n\nfn main() {\n    println!(\"Guess the number!\");\n\n    println!(\"Please input your guess.\");\n\n    let mut guess = String::new();\n\n    io::stdin().read_line(&amp;mut guess)\n        .expect(\"Failed to read line\");\n\n    println!(\"You guessed: {}\", guess);\n}\n</code></pre>\n\n<p>The result is that it will compile properly without any panic attacks, errors, or warnings, and print to the 'standard output' the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Guess the number!\nPlease input your guess.\nYou guessed: \n</code></pre>\n\n<p>The information in Listing 2-1 in the book tells us that this code should be able to get a guess from the user and the print that guess (as a string).</p>\n\n<p>My expectation is that I would be able to click on the line in the 'standard output' where it says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>You guessed: \n</code></pre>\n\n<p>but when I click on the white-space to the right of the colon, and start typing, no new string appears.</p>\n\n<p>Am I missing something crucial here?</p>\n"}, {"tags": ["rust", "rustdoc"], "answers": [{"comments": [{"owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "edited": false, "score": 1, "creation_date": 1555505526, "post_id": 55727482, "comment_id": 98134815, "body": "Thanks for the clear answer. The workaround is unfortunately not really something we can do in our project, but it is good to know that such a workaround exists and we are not the only ones running into this problem."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1555504102, "last_edit_date": 1555504102, "creation_date": 1555503798, "answer_id": 55727482, "question_id": 55725551, "link": "https://stackoverflow.com/questions/55725551/how-to-use-a-module-with-the-test-attribute-within-doc-tests/55727482#55727482", "title": "How to use a module with the `test` attribute within doc tests?", "body": "<p>This is a known limitation of doctest (<a href=\"https://github.com/rust-lang/rust/issues/45599\" rel=\"nofollow noreferrer\">Issue #45599</a>). Sadly there is no real progress since the start of the issue (late 2017).</p>\n\n<p>As a workaround, <a href=\"https://github.com/rust-lang/rust/issues/45599#issue-269350604\" rel=\"nofollow noreferrer\">it is suggested</a> that you add a feature to your <code>Cargo.toml</code></p>\n\n<pre><code>[features]\ntest = []\n</code></pre>\n\n<p>Instead of checking for <code>#[cfg(test)]</code> you can then do <code>#[cfg(feature = \"test\")]</code>.</p>\n"}], "owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 55727482, "answer_count": 1, "score": 2, "last_activity_date": 1555504102, "creation_date": 1555497196, "last_edit_date": 1555503862, "question_id": 55725551, "link": "https://stackoverflow.com/questions/55725551/how-to-use-a-module-with-the-test-attribute-within-doc-tests", "title": "How to use a module with the `test` attribute within doc tests?", "body": "<p>I have a module which I would like to use within a code block in my documentation.</p>\n\n<p>This module is only used for tests, so it has the <code>#![cfg(test)]</code> attribute which it should keep.</p>\n\n<p>However, as a result, this file does not seem to be included when running tests on the documentation.</p>\n\n<p>Take a look at the MVCE:</p>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>//! ```\n//! use example::mock::Number;\n//! ```\npub mod mock;\n\npub fn main() {}\n</code></pre>\n\n<p><strong>mock.rs</strong></p>\n\n<pre><code>#![cfg(test)]\n\npub type Number = i32;\n</code></pre>\n\n<p>This fails with:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>---- src/lib.rs -  (line 1) stdout ----\nerror[E0432]: unresolved import `example::mock`\n --&gt; src/lib.rs:2:14\n  |\n4 | use example::mock::Number;\n  |              ^^^^ could not find `mock` in `example`\n</code></pre>\n\n<p>Is there a way to make my documentation test code use these files which are configured for tests?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 3, "creation_date": 1555493226, "post_id": 55719570, "comment_id": 98127427, "body": "Variable names should only be prefixed with underscore (<code>_</code>) when they are not used, yet you are using both <code>v</code> and <code>first</code>."}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 9, "last_activity_date": 1555475078, "creation_date": 1555475078, "answer_id": 55719858, "question_id": 55719570, "link": "https://stackoverflow.com/questions/55719570/not-able-to-understand-the-behaviour-of-vector-in-rust/55719858#55719858", "title": "Not able to understand the behaviour of Vector In Rust", "body": "<p>With the introduction of <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/ownership-and-lifetimes/non-lexical-lifetimes.html\" rel=\"noreferrer\">Non-Lexical Lifetimes</a> (NLL), lifetimes of borrows are often shortened if they don't need to be longer. If you try to compile your example without the <code>println!</code> in the 2015 edition of Rust (which doesn't have NLL, as far as I know), you get a compile error <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=9d49372809344b05a49dd145ccabbe89\" rel=\"noreferrer\">(playground link)</a>.</p>\n\n<p>Even with NLL, the print statement forces the borrow of <code>_v[0]</code> to last at least until after the printing is done. But that means that the borrow begins before and ends after the mutable borrow <code>_v.push(8)</code>. That can't happen since mutable borrows must be exclusive borrows.</p>\n\n<p>But without the print statement, the borrow of <code>_v[0]</code> can end right away, allowing the mutable borrow to happen.</p>\n"}], "owner": {"reputation": 291, "user_id": 1714250, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/7034e8d6f402bf5ffa97b9a139277ec0?s=128&d=identicon&r=PG", "display_name": "Ayush Mishra", "link": "https://stackoverflow.com/users/1714250/ayush-mishra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "closed_date": 1555499432, "accepted_answer_id": 55719858, "answer_count": 1, "score": 3, "last_activity_date": 1555484894, "creation_date": 1555472783, "last_edit_date": 1555484894, "question_id": 55719570, "link": "https://stackoverflow.com/questions/55719570/not-able-to-understand-the-behaviour-of-vector-in-rust", "closed_reason": "Duplicate", "title": "Not able to understand the behaviour of Vector In Rust", "body": "<p>I was reading chapter <a href=\"https://doc.rust-lang.org/book/ch08-01-vectors.html#storing-lists-of-values-with-vectors\" rel=\"nofollow noreferrer\">Storing Lists of Values with Vectors</a> .  I was trying the example <code>Attempting to add an element to a vector while holding a reference to an item</code>.</p>\n\n<pre><code>let mut _v: Vec&lt;i32&gt; = vec![2, 4, 6];\nlet _first = &amp;_v[0];\n_v.push(8);\nprintln!(\"{:?}\", _first);\n</code></pre>\n\n<p>It didn't compile, as per expected behavior. According to the book:- </p>\n\n<blockquote>\n  <p>When the program has a valid reference, the borrow checker enforces the ownership and borrowing rules (covered in Chapter 4) to ensure this reference and any other references to the contents of the vector remain valid. Recall the rule that states you can\u2019t have mutable and immutable references in the same scope. That rule applies in Listing 8-7, where we hold an immutable reference to the first element in a vector and try to add an element to the end, which won\u2019t work.</p>\n</blockquote>\n\n<p>But if I remove last <code>println</code> statement, the above code will compile. I am not able to understand how <code>println!</code> macro affect above statement. </p>\n\n<p>Please let me know if I am missing anything.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1555456729, "post_id": 55717518, "comment_id": 98115943, "body": "<code>signal.clear(); signal.extend(transformed);</code>?"}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1555456914, "post_id": 55717518, "comment_id": 98115976, "body": "instead of <code>let i = 0; for t in transformed.into_iter() {... i+= 1}</code> you should write <code>for (i, t) in transformed.into_iter().enumerate() { ... }</code>"}], "answers": [{"tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 2, "last_activity_date": 1555457523, "creation_date": 1555457523, "answer_id": 55717898, "question_id": 55717518, "link": "https://stackoverflow.com/questions/55717518/what-is-the-rust-equivalent-of-the-c-vectorassign-function/55717898#55717898", "title": "What is the Rust equivalent of the C++ vector::assign() function?", "body": "<p>First note that your loop does not emulate the behavior of <code>std::vector::assign</code> unless the length of the iterator >= the length of the vector. It would be simpler to just clear the vector first, and then push elements (the vector will retain its original capacity, so you don't have to worry about unnecessary allocations). But extending the vector can be done with the extend function.</p>\n\n<pre><code>signal.clear();\nsignal.extend(transformed.into_iter());\n</code></pre>\n\n<p>Or, if you are creating a new vector, you can use collect.</p>\n\n<pre><code>let signal: Vec&lt;_&gt; = transformed.into_iter().collect();\n</code></pre>\n"}], "owner": {"reputation": 1721, "user_id": 804847, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/17600fcaf46cbd03113a06057bdc4993?s=128&d=identicon&r=PG", "display_name": "psiphi75", "link": "https://stackoverflow.com/users/804847/psiphi75"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "accepted_answer_id": 55717898, "answer_count": 1, "score": 1, "last_activity_date": 1555462212, "creation_date": 1555454312, "last_edit_date": 1555462212, "question_id": 55717518, "link": "https://stackoverflow.com/questions/55717518/what-is-the-rust-equivalent-of-the-c-vectorassign-function", "title": "What is the Rust equivalent of the C++ vector::assign() function?", "body": "<p>What's the equivalent of the C++11 <code>vector::assign(InputIterator first, InputIterator last)</code> function?  According to <a href=\"http://www.cplusplus.com/reference/vector/vector/assign/\" rel=\"nofollow noreferrer\">cplusplus.com</a> the C++ version does the following:</p>\n\n<blockquote>\n  <p>the new contents are elements constructed from each of the elements in the range between first and last, in the same order.</p>\n</blockquote>\n\n<p>My basic attempt at this is the following code.  Is there anything better?</p>\n\n<pre><code>let i = 0;\nfor t in transformed.into_iter() {\n    if signal.len() &lt;= i {\n        signal.push(t);\n    } else {\n        signal[i] = t;\n    }\n    i += 1;\n}\n</code></pre>\n"}, {"tags": ["rust", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555434502, "post_id": 55713194, "comment_id": 98107310, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/55713194/edit\">edit</a> your question to include it. We cannot tell what crates (and their versions), types, traits, fields, etc. are present in the code. Try to reproduce your error in a brand new Cargo project. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> you can use to reduce your original code for posting here."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555434588, "post_id": 55713194, "comment_id": 98107346, "body": "For example, <code>r.get().h(handler)</code> appears to be invalid for other reasons."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555434923, "post_id": 55713194, "comment_id": 98107526, "body": "TL;DR the duplicates: <code>pub trait Healthcheck: Send + Sync</code> and <code>let mut handlers = HashMap::new(); let handler = Arc::new(HealthcheckHandler { handlers });</code> `"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555435179, "post_id": 55713194, "comment_id": 98107649, "body": "In modern Rust, it&#39;s encouraged to use <code>dyn Trait</code> to clearly indicate that you are deliberately using a trait object. Here, it would be <code>Box&lt;dyn Healthcheck&gt;</code>."}], "owner": {"reputation": 3549, "user_id": 59724, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/50954aec029a724824dca5a32a1c00fa?s=128&d=identicon&r=PG", "display_name": "Graham", "link": "https://stackoverflow.com/users/59724/graham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 341, "favorite_count": 0, "closed_date": 1555434118, "answer_count": 0, "score": 0, "last_activity_date": 1555434990, "creation_date": 1555433909, "last_edit_date": 1555434990, "question_id": 55713194, "link": "https://stackoverflow.com/questions/55713194/rust-passing-trait-objects-to-threads", "closed_reason": "Duplicate", "title": "Rust - Passing Trait Objects to Threads", "body": "<p>I've been struggling with this for a while now and just going in circles, so I'm hoping someone can point out where I'm going wrong.</p>\n\n<p>I'm playing with Actix Web, and setting up my first handlers - which is a simple Healthcheck of the system. So what I've got is:</p>\n\n<ul>\n<li>A <code>Healthcheck</code> trait defining a healthcheck</li>\n<li>A <code>HealthcheckHandler</code> struct that implements the <code>Handler</code> trait (This is an Actix Web concept) and contains a HashMap</li>\n<li>A function that builds an <code>App</code>  instance for the healthcheck routes (This is an Actix Web concept) by taking a <code>HashMap&lt;String, &amp;Healthcheck&gt;</code></li>\n</ul>\n\n<p>&#x200B;</p>\n\n<p>When I try to build this I get errors that the trait \"cannot be sent between threads safely\".</p>\n\n<p>I've tried with <code>&amp;Healthcheck</code>, <code>Box&lt;Healthcheck&gt;</code>, <code>Box&lt;Healthcheck + Send&gt;</code> based on another answer on here, and even <code>Mutex&lt;&amp;Healthcheck&gt;</code> all without luck, but all with subtly different errors. It all seems to be around needing to implement some combinations of Sync, Send and/or Clone, but I'm not sure how to get around that here.</p>\n\n<p>Any pointers to what I should to fix this?</p>\n\n<p>&#x200B;</p>\n\n<p>Actual example code:</p>\n\n<pre><code>pub trait Healthcheck {\n    fn check(&amp;self) -&gt; Result&lt;String, String&gt;;\n}\nstruct HealthcheckHandler {\n    handlers: HashMap&lt;String, Box&lt;Healthcheck&gt;&gt;,\n}\npub fn build_app(handlers: HashMap&lt;String, Box&lt;Healthcheck&gt;&gt;) -&gt; App&lt;()&gt; {\n    let handler = HealthcheckHandler {\n        handlers: handlers,\n    };\n\n    App::new()\n        .prefix(\"/health\")\n        .resource(\"\", |r| {\n            r.get().h(handler);\n        })\n}\npub fn start(settings: HashMap&lt;String, String&gt;) {\n    let mut healthchecks: HashMap&lt;String, Box&lt;Healthcheck&gt;&gt; = HashMap::new();\n\n    let server = server::new(|| { // &lt;-- This is where the errors happen. This closure is used to spawn threads.\n        vec![\n            build_app(healthchecks).middleware(middleware::Logger::default())\n        ]\n    });\n}\n</code></pre>\n\n<p>Cheers</p>\n"}, {"tags": ["c++", "boost", "rust", "udp"], "comments": [{"owner": {"reputation": 27648, "user_id": 9952196, "user_type": "registered", "profile_image": "https://graph.facebook.com/10216835866235879/picture?type=large", "display_name": "Shawn", "link": "https://stackoverflow.com/users/9952196/shawn"}, "edited": false, "score": 4, "creation_date": 1555429645, "post_id": 55711985, "comment_id": 98104773, "body": "That <code>udp.connect(...)</code> thing in the rust code looks suspicious."}, {"owner": {"reputation": 1, "user_id": 5910058, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/87e1ce21ce04eb150f59eaec245d4ff8?s=128&d=identicon&r=PG&f=1", "display_name": "Jesper Juhl", "link": "https://stackoverflow.com/users/5910058/jesper-juhl"}, "edited": false, "score": 2, "creation_date": 1555429903, "post_id": 55711985, "comment_id": 98104904, "body": "As soon as you go through a protocol like UDP, the language used to implement either end of the connection becomes irrelevant. If it implements the protocol correctly it will work, if not it won&#39;t. It doesn&#39;t matter what programming languages are used."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555429977, "post_id": 55711985, "comment_id": 98104929, "body": "The documentation for <a href=\"https://doc.rust-lang.org/std/net/struct.UdpSocket.html\" rel=\"nofollow noreferrer\"><code>UdpSocket</code></a> has an example of using <code>bind</code> and <code>recv_from</code> \u2014 why have you decided to deviate from this?"}, {"owner": {"reputation": 13, "user_id": 8910559, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-5CAebwAKpWs/AAAAAAAAAAI/AAAAAAAAETo/BvPcqpQ8ocU/photo.jpg?sz=128", "display_name": "Joey Vagedes", "link": "https://stackoverflow.com/users/8910559/joey-vagedes"}, "edited": false, "score": 0, "creation_date": 1555431379, "post_id": 55711985, "comment_id": 98105738, "body": "I&#39;m actually using the example from UdpSocket in rust. The only difference is the bind is now 0.0.0.0:12000 instead of 127.0.0.1 which i was told is better to do. I just retested using 127.0.0.1:12000 and it did not work. I&#39;m going to look into removing udp.connect() and see what happens"}, {"owner": {"reputation": 13, "user_id": 8910559, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-5CAebwAKpWs/AAAAAAAAAAI/AAAAAAAAETo/BvPcqpQ8ocU/photo.jpg?sz=128", "display_name": "Joey Vagedes", "link": "https://stackoverflow.com/users/8910559/joey-vagedes"}, "reply_to_user": {"reputation": 27648, "user_id": 9952196, "user_type": "registered", "profile_image": "https://graph.facebook.com/10216835866235879/picture?type=large", "display_name": "Shawn", "link": "https://stackoverflow.com/users/9952196/shawn"}, "edited": false, "score": 1, "creation_date": 1555431746, "post_id": 55711985, "comment_id": 98105916, "body": "@Shawn you were correct. It was the udp.connect(). I actually send a udp message (I left that out, but that&#39;s why I use udp.connect()). I created a second udp connection (that does not connect) and used that for the recv_from(...) function and it received the data!"}, {"owner": {"reputation": 61409, "user_id": 485343, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e18b024a122df74275dd2c4486e8a2b4?s=128&d=identicon&r=PG", "display_name": "rustyx", "link": "https://stackoverflow.com/users/485343/rustyx"}, "edited": false, "score": 0, "creation_date": 1555434189, "post_id": 55711985, "comment_id": 98107162, "body": "How do you know if your sender or receiver is wrong? Maybe test the sender separately? <code>netcat -ul 12000</code>"}], "answers": [{"tags": [], "owner": {"reputation": 165665, "user_id": 721269, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/346ca03edfbde2a468adc289867ab975?s=128&d=identicon&r=PG", "display_name": "David Schwartz", "link": "https://stackoverflow.com/users/721269/david-schwartz"}, "is_accepted": true, "score": 2, "last_activity_date": 1555442702, "creation_date": 1555442702, "answer_id": 55715332, "question_id": 55711985, "link": "https://stackoverflow.com/questions/55711985/udp-messages-from-c-are-not-received-by-rust/55715332#55715332", "title": "UDP messages from C++ are not received by Rust", "body": "<p>When you connect a UDP socket, that causes the UDP socket to only receive datagrams from the address it is connected to. Servers should not connect their UDP sockets.</p>\n"}], "owner": {"reputation": 13, "user_id": 8910559, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-5CAebwAKpWs/AAAAAAAAAAI/AAAAAAAAETo/BvPcqpQ8ocU/photo.jpg?sz=128", "display_name": "Joey Vagedes", "link": "https://stackoverflow.com/users/8910559/joey-vagedes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 288, "favorite_count": 0, "accepted_answer_id": 55715332, "answer_count": 1, "score": 1, "last_activity_date": 1555442702, "creation_date": 1555429389, "last_edit_date": 1555429782, "question_id": 55711985, "link": "https://stackoverflow.com/questions/55711985/udp-messages-from-c-are-not-received-by-rust", "title": "UDP messages from C++ are not received by Rust", "body": "<p>I'm creating a server / client paradigm using UDP, but the Rust server is not receiving the C++ client messages. I have been able to successfully do Rust server / Rust client and C++ server / Rust client communication.</p>\n\n<p>This leads me to believe that there is an issue with my C++ code, or there is some type of miscommunication when sending C++ buffers to Rust, but I have used code that I beleive works. This is only being sent from and to the same computer and has not been expanded to computer to computer.</p>\n\n<p>I am no expert with UDP / TCP so I may be doing something incorrectly</p>\n\n<p>Rust server:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::net::UdpSocket;\n\nfn main() {\n    let udp: UdpSocket = UdpSocket::bind(\"0.0.0.0:12000\")\n        .expect(\"Failed to bind to address for sending/receiving messages\");\n\n    udp.connect(\"127.0.0.1:12683\")\n        .expect(\"Failed to connect address receiving our messages\");\n\n    //The below (recv_from) is set to blocking\n    let mut buf = [0; 20];\n    let (number_of_bytes, src_addr) = udp.recv_from(&amp;mut buf).expect(\"Didn't receive data\");\n    let filled_buf = &amp;mut buf[..number_of_bytes];\n    println!(\"{:?}\", filled_buf);\n}\n</code></pre>\n\n<p>C++ client:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>boost::asio::io_service io_service;\nip::udp::socket socket( io_service );\nip::udp::endpoint remote_endpoint;\nstd::cout &lt;&lt; \"sending reply...\" &lt;&lt; std::endl;\nsocket.open( ip::udp::v4() );\n\nremote_endpoint = ip::udp::endpoint( ip::address::from_string( \"127.0.0.1\" ), 12000 );\nunsigned char buff[8]{ 5,5,5,5,5,5,5,5 };\nboost::system::error_code err;\n//auto sent = socket.send_to( buffer( \"Jane Doe\"), remote_endpoint, 0, err );\nauto sent = socket.send_to( buffer( buff ), remote_endpoint, 0, err );\nstd::cout &lt;&lt; err &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"Sent: \" &lt;&lt; sent &lt;&lt; std::endl;\nsocket.close();\n</code></pre>\n\n<p>The C++ client states that the data was sent (<code>sent</code> variable) and there is no err (<code>err</code> variable). However, my Rust server never receives the data. It is set to non-blocking so it just sits there waiting to receive data (its looking at port 12000 while the client is sending to port 12000).</p>\n"}, {"tags": ["generics", "rust", "traits", "associated-types"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555430098, "post_id": 55711888, "comment_id": 98105006, "body": "Kudos on a well-phrased question with an appropriate MCVE!"}], "answers": [{"comments": [{"owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "edited": false, "score": 2, "creation_date": 1555431676, "post_id": 55712272, "comment_id": 98105877, "body": "Thank you for this clear answer. I&#39;m going to use a Box, then. And feel betrayed by rust, who promised me zero cost abstractions :p"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 8, "last_activity_date": 1555436063, "last_edit_date": 1555436063, "creation_date": 1555430315, "answer_id": 55712272, "question_id": 55711888, "link": "https://stackoverflow.com/questions/55711888/how-to-implement-a-trait-when-one-of-the-associated-types-is-impossible-to-name/55712272#55712272", "title": "How to implement a trait when one of the associated types is impossible to name?", "body": "<p>Unfortunately, you can't. At least not yet.</p>\n\n<p>There is an RFC, <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2071-impl-trait-existential-types.md\" rel=\"nofollow noreferrer\">Named existentials and impl Trait variable declarations</a> (<a href=\"https://github.com/rust-lang/rust/issues/34511\" rel=\"nofollow noreferrer\">tracking issue</a>), which would allow you to declare a public type <em>name</em> at the module level, whose type <em>definition</em> is inferred from how it used within the module. Users of the module can refer to this type by its public name and it can be used as an associated type.</p>\n\n<p>It's difficult to guess when a new feature will stabilise and in the meantime there really aren't many good options. Aside from things that might only work because of specifics of your use-case, the general workaround is to use a trait object:</p>\n\n<pre><code>impl IntoIterator for S {\n    type Item = u8;\n    type IntoIter = Box&lt;dyn Iterator&lt;Item = u8&gt;&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        Box::new(f())\n    }\n}\n</code></pre>\n\n<p>If it is acceptable to use nightly features, you can help test out the RFC before it stabilises:</p>\n\n<pre><code>#![feature(existential_type)]\n\nimpl IntoIterator for S {\n    type Item = u8;\n    existential type IntoIter: Iterator&lt;Item = u8&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        f()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 5038, "user_id": 3579309, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/Wn5ES.jpg?s=128&g=1", "display_name": "lovasoa", "link": "https://stackoverflow.com/users/3579309/lovasoa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 1, "answer_count": 1, "score": 10, "last_activity_date": 1555436063, "creation_date": 1555429069, "last_edit_date": 1555430408, "question_id": 55711888, "link": "https://stackoverflow.com/questions/55711888/how-to-implement-a-trait-when-one-of-the-associated-types-is-impossible-to-name", "title": "How to implement a trait when one of the associated types is impossible to name?", "body": "<p>I have a function that returns an <code>impl Trait</code> so I don't have access to the concrete return type. I need to use the return value of that function as an associated type in a trait. How do I do that?</p>\n\n<p>Here is a simplified example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f() -&gt; impl Iterator&lt;Item = u8&gt; {\n    std::iter::empty()\n}\n\nstruct S;\n\nimpl IntoIterator for S {\n    type Item = u8;\n    type IntoIter = (); // What can I write here ?\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        f()\n    }\n}\n</code></pre>\n\n<p>Is it even possible to do (without resorting to boxing the iterator)?</p>\n"}, {"tags": ["stream", "rust", "future"], "comments": [{"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1555421296, "post_id": 55708392, "comment_id": 98099375, "body": "Is it a third-party function, which you can not alter? Otherwise you could add &quot;checkpoints&quot; to it, buffering a part of the response into a Vec then flushing it into the <a href=\"https://docs.rs/actix-web/0.7.19/actix_web/enum.Body.html#variant.Streaming\" rel=\"nofollow noreferrer\">response stream</a> at a &quot;checkpoint&quot;."}, {"owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "reply_to_user": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1555433643, "post_id": 55708392, "comment_id": 98106894, "body": "The <code>BodyStream</code> is a wrapper around <code>futures::Stream</code>, so this still leaves a question of transforming push-based <code>io::Write</code> into pull-based <code>Stream</code>."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1555490568, "post_id": 55708392, "comment_id": 98125961, "body": "Why? You could use a <a href=\"https://docs.rs/futures/0.1.25/futures/sync/mpsc/index.html\" rel=\"nofollow noreferrer\">MPSC</a>, push your buffers in the mpsc, if it&#39;s full then pause the execution until it&#39;s ready to be pushed again. Again: this would only work if you&#39;re able to split that function into smaller parts."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555692332, "post_id": 55708686, "comment_id": 98204621, "body": "I believe you&#39;ve misread the question (I&#39;ve updated it in an attempt to be more clear). The OP doesn&#39;t want to have access to Actix&#39; write buffer or socket."}], "tags": [], "owner": {"reputation": 154, "user_id": 7526741, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9e7fc59fd903158f3127f1384139cf0?s=128&d=identicon&r=PG", "display_name": "Nikolay Kim", "link": "https://stackoverflow.com/users/7526741/nikolay-kim"}, "is_accepted": false, "score": -1, "last_activity_date": 1555419295, "creation_date": 1555419295, "answer_id": 55708686, "question_id": 55708392, "link": "https://stackoverflow.com/questions/55708392/how-to-send-data-through-a-futures-stream-by-writing-through-the-iowrite-trait/55708686#55708686", "title": "How to send data through a futures Stream by writing through the io::Write trait?", "body": "<p>It is not possible. Actix-web manages its own write buffer and socket.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1555695401, "last_edit_date": 1592644375, "creation_date": 1555688012, "answer_id": 55764246, "question_id": 55708392, "link": "https://stackoverflow.com/questions/55708392/how-to-send-data-through-a-futures-stream-by-writing-through-the-iowrite-trait/55764246#55764246", "title": "How to send data through a futures Stream by writing through the io::Write trait?", "body": "<p>It is possible. The key piece is <a href=\"https://docs.rs/futures/0.1.23/futures/sink/struct.Wait.html\" rel=\"nofollow noreferrer\"><code>futures::sink::Wait</code></a>:</p>\n<blockquote>\n<p>A sink combinator which converts an asynchronous sink to a <strong>blocking sink</strong>.</p>\n<p>Created by the <code>Sink::wait</code> method, this function transforms any sink into a blocking version. This is implemented by blocking the current thread when a sink is otherwise unable to make progress.</p>\n</blockquote>\n<p>All that is needed is to wrap this type in a struct that implements <code>io::Write</code>:</p>\n<pre><code>use futures::{\n    sink::{Sink, Wait},\n    sync::mpsc,\n}; // 0.1.26\nuse std::{io, thread};\n\nfn generate(_output: &amp;mut io::Write) {\n    // ...\n}\n\nstruct MyWrite&lt;T&gt;(Wait&lt;mpsc::Sender&lt;T&gt;&gt;);\n\nimpl&lt;T&gt; io::Write for MyWrite&lt;T&gt;\nwhere\n    T: for&lt;'a&gt; From&lt;&amp;'a [u8]&gt; + Send + Sync + 'static,\n{\n    fn write(&amp;mut self, d: &amp;[u8]) -&gt; io::Result&lt;usize&gt; {\n        let len = d.len();\n        self.0\n            .send(d.into())\n            .map(|()| len)\n            .map_err(|e| io::Error::new(io::ErrorKind::Other, e))\n    }\n\n    fn flush(&amp;mut self) -&gt; io::Result&lt;()&gt; {\n        self.0\n            .flush()\n            .map_err(|e| io::Error::new(io::ErrorKind::Other, e))\n    }\n}\n\nfn foo() -&gt; impl futures::Stream&lt;Item = Vec&lt;u8&gt;, Error = ()&gt; {\n    let (tx, rx) = mpsc::channel(5);\n\n    let mut w = MyWrite(tx.wait());\n\n    thread::spawn(move || generate(&amp;mut w));\n\n    rx\n}\n</code></pre>\n"}], "owner": {"reputation": 90851, "user_id": 27009, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/f0a29af415477aa8c498a4f41ffe6640?s=128&d=identicon&r=PG", "display_name": "Kornel", "link": "https://stackoverflow.com/users/27009/kornel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 923, "favorite_count": 1, "accepted_answer_id": 55764246, "answer_count": 2, "score": 1, "last_activity_date": 1592501818, "creation_date": 1555418419, "last_edit_date": 1555723014, "question_id": 55708392, "link": "https://stackoverflow.com/questions/55708392/how-to-send-data-through-a-futures-stream-by-writing-through-the-iowrite-trait", "title": "How to send data through a futures Stream by writing through the io::Write trait?", "body": "<p>I have a function that takes a <code>&amp;mut io::Write</code> and I'd like to use it to send a streaming response from the actix-web server without having to buffer the whole response. The function is \"pushing\" the data, and I can't change the function (that's the whole premise of this question) to use async streams or other kind of polling.</p>\n\n<p>Currently I'm forced to use <code>&amp;mut Vec</code> (which implements <code>io::Write</code>) to buffer the whole result and then send the <code>Vec</code> as the response body. However, the response may be large, so I'd rather stream it without buffering.</p>\n\n<p>Is there some kind of adapter that would implement <code>io::Write</code>, with writes blocking as necessary in response to backpressure, and be compatible with types that actix-web can use for responses (e.g. <code>futures::Stream</code>)?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn generate(output: &amp;mut io::Write) {\n    // ...\n}\n\nfn request_handler() -&gt; Result&lt;HttpResponse&gt; {\n    thread::spawn(|| generate(/*???*/));\n    Ok(HttpResponse::Ok().body(/*???*/))\n}\n</code></pre>\n\n<p><code>std::sync::mpsc</code> and <code>futures::mpsc</code> have either both ends async, or both ends blocking, so it's not obvious how to use them as an adapter between sync and async ends.</p>\n"}, {"tags": ["xml", "rust", "serde"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555479456, "post_id": 55707588, "comment_id": 98120829, "body": "After looking at your profile page here on SO, I spotted that you rarely accept answers. You should concider doing that (in the future <i>and</i> your questions you have already asked). You can do that by clicking the check mark next to an answer answer. That does two things. It lets everyone know your issue has been resolved to your satisfaction, and it gives the person that helps you credit for the assist (also you gain +2 reputation per accepted question). <a href=\"http://meta.stackexchange.com/a/5235\">See here</a> for a full explanation."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 3, "last_activity_date": 1555418800, "last_edit_date": 1555418800, "creation_date": 1555417678, "answer_id": 55708164, "question_id": 55707588, "link": "https://stackoverflow.com/questions/55707588/why-do-i-get-the-error-missing-field-when-deserializing-xml-with-serde-xml-rs/55708164#55708164", "title": "Why do I get the error &quot;missing field&quot; when deserializing XML with serde-xml-rs, even though the element is present?", "body": "<p>Following the example at the <a href=\"https://github.com/RReverser/serde-xml-rs/blob/e6bf15ae703ff8eb76143d1dcecc445b78e53e07/README.md#Usage\" rel=\"nofollow noreferrer\">GitHub repository</a>, you are missing an annotation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize, Debug)]\nstruct Libraries {\n    #[serde(rename = \"library\")]\n    libraries: Vec&lt;Library&gt;\n}\n</code></pre>\n\n<p>With that I get the correct deserialized representation of your XML file</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>project = Project {\n    name: \"project-name\",\n    libraries: Libraries {\n        libraries: [\n            Library {\n                groupId: \"org.example\",\n                artifactId: \"&lt;name&gt;\",\n                version: \"0.1\"\n            },\n            Library {\n                groupId: \"com.example\",\n                artifactId: \"\\\"cool-lib&amp;\",\n                version: \"999\"\n            }\n        ]\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1069, "user_id": 5417164, "user_type": "registered", "accept_rate": 22, "profile_image": "https://www.gravatar.com/avatar/9cb24e9b54605c9f72cf40cf425fc814?s=128&d=identicon&r=PG&f=1", "display_name": "joydeep bhattacharjee", "link": "https://stackoverflow.com/users/5417164/joydeep-bhattacharjee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 0, "accepted_answer_id": 55708164, "answer_count": 1, "score": 2, "last_activity_date": 1555418800, "creation_date": 1555415753, "last_edit_date": 1555417096, "question_id": 55707588, "link": "https://stackoverflow.com/questions/55707588/why-do-i-get-the-error-missing-field-when-deserializing-xml-with-serde-xml-rs", "title": "Why do I get the error &quot;missing field&quot; when deserializing XML with serde-xml-rs, even though the element is present?", "body": "<p>I have the following XML file</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?&gt;\n&lt;project name=\"project-name\"&gt;\n    &lt;libraries&gt;\n        &lt;library groupId=\"org.example\" artifactId=\"&amp;lt;name&amp;gt;\" version=\"0.1\"/&gt;\n        &lt;library groupId=\"com.example\" artifactId=\"&amp;quot;cool-lib&amp;amp;\" version=\"999\"/&gt;\n    &lt;/libraries&gt;\n&lt;/project&gt;\n</code></pre>\n\n<p>I want to deserialize it using serde-xml-rs into this struct hierarchy:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize, Debug)]\nstruct Project {\n    name: String,\n    libraries: Libraries\n}\n\n#[derive(Deserialize, Debug)]\nstruct Libraries {\n    libraries: Vec&lt;Library&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Library {\n    groupId: String,\n    artifactId: String,\n    version: String,\n}\n</code></pre>\n\n<p>I am trying to read from the file using the below code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let file = File::open(\"data/sample_1.xml\").unwrap();\nlet project: Project = from_reader(file).unwrap();\n</code></pre>\n\n<p>I get this error saying \"missing field <code>libraries</code>\":</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error(Custom(\"missing field `libraries`\"), State { next_error: None, backtrace: None })', src/libcore/result.rs:997:5\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n"}, {"tags": ["autocomplete", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555402784, "post_id": 55703505, "comment_id": 98088200, "body": "Do you think that&#39;s an issue? If so I would suggest to <a href=\"https://github.com/racer-rust/racer/issues/new\" rel=\"nofollow noreferrer\">open a new issue</a> on the github repo instead of asking a question on SO. (Btw: Welcome to Stackoverflow! Don&#39;t miss to take the <a href=\"https://stackoverflow.com/tour\">tour</a> &lt;3 )."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555423916, "post_id": 55703505, "comment_id": 98101197, "body": "For reference, an issue has been opened <a href=\"https://github.com/racer-rust/racer/issues/1033\" rel=\"nofollow noreferrer\">github.com/racer-rust/racer/issues/1033</a>"}], "owner": {"reputation": 1, "user_id": 11367048, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c54391a6516d21010d3f05ba8f4c388b?s=128&d=identicon&r=PG&f=1", "display_name": "mdnttns", "link": "https://stackoverflow.com/users/11367048/mdnttns"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 75, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1555402630, "creation_date": 1555402473, "last_edit_date": 1555402630, "question_id": 55703505, "link": "https://stackoverflow.com/questions/55703505/racer-does-not-autocomplete-code-from-prelude", "title": "Racer does not autocomplete code from prelude", "body": "<p>Racer v2.1.21 does not autocomplete code if I don't specify the full path to the part in Rust prelude.</p>\n\n<p>There is no output when I run this command in a terminal:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>racer complete Vec::\n</code></pre>\n\n<p>But in this case racer returns autocompletion for <code>Vec</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>racer complete std::vec::Vec\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 886, "user_id": 1960460, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/95a40f8966f56994e4bee9a2e39b8e75?s=128&d=identicon&r=PG", "display_name": "joaquinlpereyra", "link": "https://stackoverflow.com/users/1960460/joaquinlpereyra"}, "edited": false, "score": 0, "creation_date": 1555391859, "post_id": 55700721, "comment_id": 98083387, "body": "Nice! That worked. Seeing your answer though I do not think I understood so clearly why I couldn&#39;t just move out of the variable before? I rechecked the borrowing rules and there&#39;s nothing saying that you cannot move out of borrowed content?   Obviously in my original code rust would invalidate <code>self.peek_token</code> after the move, as it could lead to a user after free, right? But why doesn&#39;t it just do that instead of saying I can&#39;t do it?  Only reason I came up with is that there may be another thread expecting <code>self.peek_token</code> to be valid?"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 3, "creation_date": 1555395750, "post_id": 55700721, "comment_id": 98084773, "body": "Simply put, because <code>panic!</code>. You move out of <code>peek_token</code>, invalidating it and expecting to make it valid again with the result of <code>next_token()</code>. But if <code>next_token()</code> instead panics, and some outer code catches that panic, you have a view of the struct with an invalidated field. (Threading, by the way, is not a concern, because a <code>&amp;mut</code> is exclusive and guarantees that no other thread is currently accessing the struct.) By using <code>replace</code>, you guarantee that no panics can occur between invalidation and reinitialization."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 3, "last_activity_date": 1555389962, "creation_date": 1555389962, "answer_id": 55700721, "question_id": 55699848, "link": "https://stackoverflow.com/questions/55699848/returning-self-to-avoid-moving-out-of-borrowing-content/55700721#55700721", "title": "Returning Self to avoid moving out of borrowing content", "body": "<p>You can use <a href=\"https://doc.rust-lang.org/std/mem/fn.replace.html\" rel=\"nofollow noreferrer\"><code>std::mem::replace</code></a>:</p>\n\n<pre><code>use std::mem;\n\n// Read the next token.\nfn next_token(&amp;mut self) {\n    self.current_token = mem::replace(&amp;mut self.peek_token, self.lexer.next_token());\n}\n</code></pre>\n\n<p><code>replace</code> will store the second argument into the first, and return the current value of the first, which we then assign to <code>current_token</code>.</p>\n"}], "owner": {"reputation": 886, "user_id": 1960460, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/95a40f8966f56994e4bee9a2e39b8e75?s=128&d=identicon&r=PG", "display_name": "joaquinlpereyra", "link": "https://stackoverflow.com/users/1960460/joaquinlpereyra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 445, "favorite_count": 0, "closed_date": 1555417572, "accepted_answer_id": 55700721, "answer_count": 1, "score": 1, "last_activity_date": 1555417625, "creation_date": 1555382901, "last_edit_date": 1555393149, "question_id": 55699848, "link": "https://stackoverflow.com/questions/55699848/returning-self-to-avoid-moving-out-of-borrowing-content", "closed_reason": "Duplicate", "title": "Returning Self to avoid moving out of borrowing content", "body": "<p>I'm trying to implement the Monkey toy language in Rust. I'm now trying to generate and AST, but before that, I need to have a functioning parser. I already have my lexer.</p>\n\n<p>So the relevant part of my parser looks like this:</p>\n\n<pre><code>struct Parser&lt;'a&gt; {\n    lexer: lexer::Lexer&lt;'a&gt;,\n    current_token: Token&lt;'a&gt;,\n    peek_token: Token&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Parser&lt;'a&gt; {\n    // Create a new parser.\n    // Depends on a lexer capable of iterating over\n    // the tokens.\n    pub fn new(mut lexer: lexer::Lexer&lt;'a&gt;) -&gt; Parser {\n        // constructor\n    }\n\n    // Read the next token.\n    //\n    // Returns self to avoid weird `move out of\n    // borrowed content` issue?\n    fn next_token(mut self) -&gt; Self {\n        self.current_token = self.peek_token;\n        self.peek_token = self.lexer.next_token();\n        self\n    }\n}\n</code></pre>\n\n<p>The problem is in the <code>next_token</code> function. I would really like it to work with a borrowed <code>&amp;self</code>, like this:</p>\n\n<pre><code>// Read the next token.\nfn next_token(&amp;mut self) {\n    self.current_token = self.peek_token;\n    self.peek_token = self.lexer.next_token();\n}\n</code></pre>\n\n<p>But the compiler complaints about moving out of a borrowed content. Now, I understand <em>why</em> this is happening: I'm only borrowing <code>self</code>, I cannot perform the move from <code>self.peek_token</code> to <code>self.current_token</code> because I do not own it.</p>\n\n<p>My question though, is, is returning <code>Self</code> the best strategy? The code which returns <code>Self</code> works fine, but the interface just got very very ugly.</p>\n\n<pre><code>#[test]\nfn test_next_token() {\n    let l = lexer::Lexer::new(\"let answer = 42;\");\n    let p = Parser::new(l);\n    assert_eq!(p.current_token, Token::Let);\n    let p = p.next_token();\n    assert_eq!(p.current_token, Token::Ident(\"answer\"));\n}\n</code></pre>\n\n<p>Is there an alternative I'm not seeing? Is this a common idiom in Rust? </p>\n\n<p>Here is a link to the <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=664d4bd68c6fabe447f06e044cbb30ef\" rel=\"nofollow noreferrer\">playground</a>.</p>\n"}, {"tags": ["rust", "ffi", "calling-convention"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555356512, "post_id": 55695988, "comment_id": 98074507, "body": "<code>extern &quot;C&quot;</code> \u2014 that&#39;s the calling convention; there&#39;s no other &quot;configuration&quot; for it."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555356577, "post_id": 55695988, "comment_id": 98074530, "body": "<i><code>&amp;mut [u8]</code></i> \u2014 this is <b>not</b> a type that can be passed to C. C has no concept of slices. See <a href=\"http://jakegoulding.com/rust-ffi-omnibus/slice_arguments/\" rel=\"nofollow noreferrer\"><i>The Rust FFI Omnibus</i> - Rust functions with slice arguments</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555356758, "post_id": 55695988, "comment_id": 98074611, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/27150652/155423\">How can I get an array or a slice from a raw pointer?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55695988/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "owner": {"reputation": 458, "user_id": 4533954, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/HJnaF.png?s=128&g=1", "display_name": "sam", "link": "https://stackoverflow.com/users/4533954/sam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 53, "favorite_count": 0, "closed_date": 1555417716, "answer_count": 0, "score": 0, "last_activity_date": 1555358067, "creation_date": 1555356145, "last_edit_date": 1555358067, "question_id": 55695988, "link": "https://stackoverflow.com/questions/55695988/how-do-i-specify-the-calling-convention-for-a-c-callback-that-uses-mut-u8-and", "closed_reason": "Duplicate", "title": "How do I specify the calling convention for a C callback that uses &amp;mut [u8] and u32?", "body": "<p>I have a crate that holds a function pointer (defined in C), and calls some predefined arguments. I suspect that I cannot get the call to comply with the C calling convention. I have reviewed <a href=\"https://doc.rust-lang.org/nomicon/ffi.html#foreign-calling-conventions\" rel=\"nofollow noreferrer\">the relevant Rust docs</a>, and believe that I am specifying the calling convention where appropriate...</p>\n\n<p>A simple example to illustrate:</p>\n\n<p>The Rust crate with a simple struct containing a buffer and function pointer to pack it:</p>\n\n<pre><code>pub type Callback = extern \"C\" fn(buffer: &amp;mut [u8], current_index: u32, max_index: u32) -&gt; u32;\nconst BUFFER_SIZE: usize = 32_767;\npub type DataBuffer = [u8; BUFFER_SIZE];\n\n#[no_mangle]\npub struct Foo {\n    buffer: DataBuffer,\n    pub current_index: u32,\n    callback: Option&lt;Callback&gt;,\n}\n\nimpl Foo {\n    fn new() -&gt; Self {\n        Foo {\n            current_index: 0,\n            buffer: [0u8; BUFFER_SIZE],\n            callback: None,\n        }\n    }\n    fn add_callback(&amp;mut self, callback: Callback) {\n        self.callback = Some(callback);\n    }\n\n    fn call_callback(&amp;mut self) {\n        let increment = self.callback.expect(\"\")(\n            self.buffer\n                .get_mut(self.current_index as usize..)\n                .expect(\"\"),\n            self.current_index,\n            BUFFER_SIZE as u32,\n        );\n        self.current_index += increment;\n    }\n}\n#[no_mangle]\npub extern \"C\" fn FooNew() -&gt; Box&lt;Foo&gt; {\n    Box::new(Foo::new())\n}\n#[no_mangle]\npub extern \"C\" fn FooAddCallback(foo: &amp;mut Foo, callback: Callback) {\n    foo.add_callback(callback);\n}\n#[no_mangle]\npub extern \"C\" fn FooCallCallback(foo: &amp;mut Foo) {\n    foo.call_callback();\n}\n#[no_mangle]\npub extern \"C\" fn FooPrint(foo: &amp;mut Foo) {\n    for c in foo.buffer.iter() {\n        print!(\"{}\", *c as char);\n    }\n    println!(\"\\n\");\n}\n</code></pre>\n\n<p>and some corresponding C code to call it:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;math.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\ntypedef struct Foo Foo;\n\nextern Foo* FooNew();\nextern void FooAddCallback(Foo* foo, void* callback);\nextern void FooCallCallback(Foo* foo);\nextern void FooPrint(Foo* foo);\n\nunsigned int getHeaders(char* buffer, unsigned int current_index, unsigned int max_index)\n{\n    if (current_index &gt; max_index)\n    {\n        printf(\"\\nError current_index(%d) &gt; max_index(%d) !!\\nThis is most likely a C-api byte order problem\\n\", current_index, max_index);\n        exit(-1);\n    }\n    strcpy(buffer, \"~HEADER~\\0\");\n\n    return 9;\n}\n\nint main()\n{\n    Foo* foo = FooNew();\n    FooAddCallback(foo, getHeaders);\n    FooCallCallback(foo);\n    FooCallCallback(foo);\n    FooCallCallback(foo);\n\n    FooPrint(foo);\n\n    return 0;\n}\n</code></pre>\n\n<p>When run, the second two arguments to the callback get passed incorrectly (i.e. the parameter for <code>current_index</code> gets passed to <code>max_index</code> and vice-versa, in the example above its passing 0 to <code>max_index</code> and 32767 to <code>current_index</code>). Reversing the order of these args(seemingly making the calling order read incorrect) causes it to execute correctly...</p>\n\n<p>I suspect I am just calling the callback wrong, or need to specify the calling convention differently. </p>\n\n<p>Ah right, <a href=\"https://stackoverflow.com/q/27150652/155423\">this question</a> was mentioned. This is the direct inverse of their question, but the ethos is the same. <em>Arrays/Slices cannot be directly passed via the FFI</em>. </p>\n"}, {"tags": ["tree", "rust", "interior-mutability"], "comments": [{"owner": {"reputation": 138, "user_id": 10827651, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-JNBmJA0hPw0/AAAAAAAAAAI/AAAAAAAAADc/FCzwJHCNpfE/photo.jpg?sz=128", "display_name": "Niall Moore", "link": "https://stackoverflow.com/users/10827651/niall-moore"}, "edited": false, "score": 0, "creation_date": 1555373028, "post_id": 55695001, "comment_id": 98079479, "body": "Have you considered using Futures to represent the sub branches?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1555408274, "post_id": 55695001, "comment_id": 98091541, "body": "If you move your recursive <code>subdungeons</code> call to <code>Dungeon::generate()</code> I think you should be able to return a constant dungeon."}, {"owner": {"reputation": 4240, "user_id": 1541330, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9d7b0057ffc24e644c4a30ba599d7753?s=128&d=identicon&r=PG&f=1", "display_name": "U007D", "link": "https://stackoverflow.com/users/1541330/u007d"}, "edited": false, "score": 1, "creation_date": 1555446663, "post_id": 55695001, "comment_id": 98112777, "body": "Yes, there are ways to do this without <code>RefCell</code>.  See <a href=\"http://smallcultfollowing.com/babysteps/blog/2015/04/06/modeling-graphs-in-rust-using-vector-indices/\" rel=\"nofollow noreferrer\">smallcultfollowing.com/babysteps/blog/2015/04/06/&hellip;</a> for an implementation of a Graph (generalization of a tree) without use of <code>RefCell</code>."}], "owner": {"user_type": "does_not_exist", "display_name": "user7635079"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 171, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1555352096, "creation_date": 1555351759, "last_edit_date": 1555352096, "question_id": 55695001, "link": "https://stackoverflow.com/questions/55695001/is-there-a-way-to-avoid-using-refcell-in-a-tree-that-will-not-be-mutated-after-i", "title": "Is there a way to avoid using RefCell in a tree that will not be mutated after it&#39;s created?", "body": "<p>I'm writing a short program to <a href=\"https://www.roguebasin.com/index.php?title=Basic_BSP_Dungeon_generation\" rel=\"nofollow noreferrer\">randomly generate a video game dungeon</a>, but I'm having some trouble with creating the sub-dungeons in the tree cleanly.</p>\n\n<p>What I have is ugly and means runtime checked borrowing because of <code>RefCell</code>, even though the tree doesn't need mutability after creation.</p>\n\n<p>Since it's a tree, I used an <code>Rc&lt;T&gt;</code> and <code>Weak&lt;T&gt;</code> to hold references to the child nodes and parent node respectively. This creates the problem that because the values of the child nodes depend on those of their parent, the parent needs to be created in order to give its children their parent reference, while the children need to be created to give the parent its children fields.</p>\n\n<p>If I use a function where child nodes are created before the parent (for example, by passing them the relevant values for the parent fields before the parent is instantiated), they of course won't be able to get the reference to their parent.</p>\n\n<p>The only way I could get this to work was to use <code>RefCell</code> to set the children for each node after they are created, as shown.</p>\n\n<p>This is the struct for each node:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Dungeon {\n    x: u32,\n    y: u32,\n    end_x: u32,\n    end_y: u32,\n    parent: Option&lt;Weak&lt;RefCell&lt;Dungeon&gt;&gt;&gt;,\n    left: Option&lt;Rc&lt;RefCell&lt;Dungeon&gt;&gt;&gt;,\n    right: Option&lt;Rc&lt;RefCell&lt;Dungeon&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>And this is an outline of the function used to generate the tree given a root dungeon:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn subdungeons(\n    parent: Rc&lt;RefCell&lt;SubDungeon&gt;&gt;,\n    level: u32,\n) -&gt; (Option&lt;Rc&lt;RefCell&lt;Dungeon&gt;&gt;&gt;, Option&lt;Rc&lt;RefCell&lt;Dungeon&gt;&gt;&gt;) {\n    // These two lines are a stand-in for the actual code used to generate\n    // the values for a child dungeon given its parent. The 'left'\n    // and 'right' fields are necessarily 'None' after creation\n    let mut left_sub: Dungeon = Dungeon::generate(Rc::downgrade(&amp;parent));\n    let mut right_sub: Dungeon = Dungeon::generate(Rc::downgrade(&amp;parent));\n\n    if level != 0 {\n        let (l, r) = subdungeons(Rc::clone(&amp;left_sub), level - 1);\n        left_sub.borrow_mut().left = l;\n        left_sub.borrow_mut().right = r;\n\n        let (l, r) = subdungeons(Rc::clone(&amp;right_sub), level - 1);\n        right_sub.borrow_mut().left = l;\n        right_sub.borrow_mut().right = r;\n    }\n\n    (Some(left_sub), Some(right_sub))\n}\n</code></pre>\n\n<p>Is there a way to re-write this in a way that doesn't involve introducing <code>RefCell</code>? The tree does not need to be mutable after creation, but I can't think of any other way to break the cycle where the parent needs the children to be created in order to be instantiated, but the children also need the parent to have been created in order to get their parent reference.</p>\n\n<p>Naturally this wouldn't be a problem in a normal tree where values of the nodes pushed to a parent are usually unrelated to those of the parent, but I can't seem to find a good Rust solution to a situation like this where they are.</p>\n"}, {"tags": ["compiler-errors", "rust", "type-inference", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1555414407, "creation_date": 1555414407, "answer_id": 55707194, "question_id": 55694827, "link": "https://stackoverflow.com/questions/55694827/expected-xyz-found/55707194#55707194", "title": "Expected XYZ found ()", "body": "<p>On the surface, <code>tokio::run</code> <em>expects</em> a <code>Future</code> with associated <code>Error</code> type <code>()</code>, but the <em>actual</em> <code>Future</code> impl of <code>Receiver</code> has associated <code>Error</code> type <code>RecvError</code>.</p>\n\n<p>However, Rust's type inference works in both directions, and the expected and actual types can sometimes be seen the other way around. <em>Usually</em> the wording of the message fits your expectations, but there are situations like this one where it feels backwards. Of course, it isn't too difficult to work out what is going on and know where the type mis-match is happening even if it isn't reported in the best way.</p>\n\n<p>Codifying the human interpretation of which type is <em>\"actual\"</em> and which is <em>\"expected\"</em> might not be an easy problem to solve in the general case, but I agree that this error message is confusing in the code you provided.</p>\n\n<p>I couldn't find an issue about this, but I'm sure I've seen this talked about a few times before. If it's been reported before, it won't do much harm to report it again, so I would just do that. </p>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "accepted_answer_id": 55707194, "answer_count": 1, "score": 0, "last_activity_date": 1555415673, "creation_date": 1555350935, "last_edit_date": 1555415673, "question_id": 55694827, "link": "https://stackoverflow.com/questions/55694827/expected-xyz-found", "title": "Expected XYZ found ()", "body": "<p>For example:</p>\n\n<pre><code>use futures::future::Future;\n\nfn main() {\n    let (stop_tokio, time_to_stop) = tokio::sync::oneshot::channel::&lt;()&gt;();\n    let handler = std::thread::spawn(|| {\n        tokio::run(\n            time_to_stop, //           .map_err(|_| ())\n        );\n    });\n    handler.join().expect(\"join failed\");\n}\n</code></pre>\n\n<p>The compiler prints the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;tokio_sync::oneshot::Receiver&lt;()&gt; as futures::future::Future&gt;::Error == ()`\n --&gt; src/main.rs:6:9\n  |\n6 |         tokio::run(\n  |         ^^^^^^^^^^ expected struct `tokio_sync::oneshot::error::RecvError`, found ()\n  |\n  = note: expected type `tokio_sync::oneshot::error::RecvError`\n             found type `()`\n  = note: required by `tokio::runtime::threadpool::run`\n</code></pre>\n\n<p>The code requires <code>()</code>, got <code>RecvError</code> instead, but the compiler print the opposite.</p>\n\n<p>Is this a bug in the compiler, or have I missed something?</p>\n"}, {"tags": ["rust", "actix-web"], "answers": [{"tags": [], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "is_accepted": false, "score": 1, "last_activity_date": 1562539693, "last_edit_date": 1562539693, "creation_date": 1562533708, "answer_id": 56926129, "question_id": 55691151, "link": "https://stackoverflow.com/questions/55691151/how-to-return-an-error-to-caller-from-an-actix-web-handler-with-client/56926129#56926129", "title": "How to return an error to caller from an actix-web handler with client?", "body": "<p>There are three things that may fail:</p>\n\n<ol>\n<li>Failing connection.</li>\n<li>Non 200-status code.</li>\n<li>Abrupt stop in body stream.</li>\n</ol>\n\n<p>To handle 1, do <em>not</em> <code>map_err</code> to <code>()</code>:</p>\n\n<pre><code>.map_err(|err| match err {\n    SendRequestError::Connect(error) =&gt; {\n        ErrorBadGateway(format!(\"Unable to connect to httpbin: {}\", error))\n    }\n    error =&gt; ErrorInternalServerError(error),\n})\n</code></pre>\n\n<p><a href=\"https://docs.rs/actix-web/1.0.3/actix_web/client/enum.SendRequestError.html\" rel=\"nofollow noreferrer\"><code>SendRequestError</code></a> lists the errors that can occur when doing client requests.</p>\n\n<p>To handle 2, make sure you use the status code from the client response:</p>\n\n<pre><code>.and_then(|response| Ok(HttpResponse::build(response.status()).streaming(response))))\n</code></pre>\n\n<p>actix-web handles 3 I believe.</p>\n\n<p>Complete example, handling headers too:</p>\n\n<pre><code>use actix_web::client::{Client, SendRequestError};\nuse actix_web::error::{ErrorBadGateway, ErrorInternalServerError};\nuse actix_web::{web, App, Error, HttpResponse, HttpServer};\nuse futures::future::Future;\n\nfn main() {\n    HttpServer::new(|| App::new().data(Client::new()).route(\"/\", web::to(handler)))\n        .bind(\"127.0.0.1:8000\")\n        .expect(\"Cannot bind to port 8000\")\n        .run()\n        .expect(\"Unable to run server\");\n}\n\nfn handler(client: web::Data&lt;Client&gt;) -&gt; Box&lt;Future&lt;Item = HttpResponse, Error = Error&gt;&gt; {\n    Box::new(\n        client\n            .get(\"https://httpbin.org/get\")\n            .no_decompress()\n            .send()\n            .map_err(|err| match err {\n                SendRequestError::Connect(error) =&gt; {\n                    ErrorBadGateway(format!(\"Unable to connect to httpbin: {}\", error))\n                }\n                error =&gt; ErrorInternalServerError(error),\n            })\n            .and_then(|response| {\n                let mut result = HttpResponse::build(response.status());\n                let headers = response\n                    .headers()\n                    .iter()\n                    .filter(|(h, _)| *h != \"connection\" &amp;&amp; *h != \"content-length\");\n                for (header_name, header_value) in headers {\n                    result.header(header_name.clone(), header_value.clone());\n                }\n                Ok(result.streaming(response))\n            }),\n    )\n}\n</code></pre>\n\n<p>Which actually failed:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ curl -v localhost:8000\n* Rebuilt URL to: localhost:8000/\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to localhost (127.0.0.1) port 8000 (#0)\n&gt; GET / HTTP/1.1\n&gt; Host: localhost:8000\n&gt; User-Agent: curl/7.54.0\n&gt; Accept: */*\n&gt; \n&lt; HTTP/1.1 502 Bad Gateway\n&lt; content-length: 50\n&lt; content-type: text/plain\n&lt; date: Sun, 07 Jul 2019 21:01:39 GMT\n&lt; \n* Connection #0 to host localhost left intact\nUnable to connect to httpbin: SSL is not supported\n</code></pre>\n\n<p>Add ssl as a feature in Cargo.toml to fix the connection error:</p>\n\n<pre><code>actix-web = { version = \"1.0\", features=[\"ssl\"] }\n</code></pre>\n\n<p>Then try the request again:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ curl -v localhost:8000\n* Rebuilt URL to: localhost:8000/\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to localhost (127.0.0.1) port 8000 (#0)\n&gt; GET / HTTP/1.1\n&gt; Host: localhost:8000\n&gt; User-Agent: curl/7.54.0\n&gt; Accept: */*\n&gt; \n&lt; HTTP/1.1 200 OK\n&lt; transfer-encoding: chunked\n&lt; x-frame-options: DENY\n&lt; date: Sun, 07 Jul 2019 21:07:18 GMT\n&lt; content-type: application/json\n&lt; access-control-allow-origin: *\n&lt; access-control-allow-credentials: true\n&lt; server: nginx\n&lt; x-content-type-options: nosniff\n&lt; x-xss-protection: 1; mode=block\n&lt; referrer-policy: no-referrer-when-downgrade\n&lt; \n{\n  \"args\": {}, \n  \"headers\": {\n    \"Date\": \"Sun, 07 Jul 2019 21:07:18 GMT\", \n    \"Host\": \"httpbin.org\"\n  }, \n  \"origin\": \"212.251.175.90, 212.251.175.90\", \n  \"url\": \"https://httpbin.org/get\"\n}\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 11137649, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dea0abed933ea2a245eaf6c47bffd4dc?s=128&d=identicon&r=PG&f=1", "display_name": "antonof", "link": "https://stackoverflow.com/users/11137649/antonof"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2283, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1562539693, "creation_date": 1555337677, "last_edit_date": 1562539629, "question_id": 55691151, "link": "https://stackoverflow.com/questions/55691151/how-to-return-an-error-to-caller-from-an-actix-web-handler-with-client", "title": "How to return an error to caller from an actix-web handler with client?", "body": "<p>I created a server with actix_web that will connect through GET to another service using actix client and return body on success or error on error. I have been able to return the body but have no clue about how to return the error.</p>\n\n<p>This is my handler:</p>\n\n<pre><code>fn echo_client(client: web::Data&lt;Client&gt;) -&gt; impl Future&lt;Item = HttpResponse, Error = Error&gt; {\n    client\n        .get(\"127.0.0.1:9596/echo/javier\") // &lt;- Create request builder\n        .header(\"User-Agent\", \"Actix-web\")\n        //.finish().unwrap()\n        .send() // &lt;- Send http request\n        .map_err(|_| ())\n        //.map_err(Error::from)\n        .and_then(|response| {\n            response\n                .body()\n                .and_then(|body| {\n                    println!(\"{:?}\", body);\n                    Ok(HttpResponse::Ok().body(body))\n                })\n                .map_err(|error| Err(error.error_response()))\n        })\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "edited": false, "score": 0, "creation_date": 1555357581, "post_id": 55690569, "comment_id": 98074908, "body": "<code>integer_decode()</code> seems to be something quite different than <code>frexp()</code>. At least I don&#39;t know how I should use it to compute frexp."}, {"owner": {"reputation": 20930, "user_id": 6881240, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dc1e27d7e9a3de2ca8e257cb7c72ff4a?s=128&d=identicon&r=PG&f=1", "display_name": "kabanus", "link": "https://stackoverflow.com/users/6881240/kabanus"}, "reply_to_user": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "edited": false, "score": 0, "creation_date": 1555404669, "post_id": 55690569, "comment_id": 98089291, "body": "@B_old From the docs &quot;<i>Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by sign * mantissa * 2 ^ exponent</i>&quot; - the only difference is the fraction is not &quot;normalized&quot;, but this can be recovered: easily by <code>frexp_exp = floor(log2(mantissa))+exponent</code> and <code>frexp_mantissa = 2**fract(log2(mantissa))</code> if I have my math right."}], "tags": [], "owner": {"reputation": 20930, "user_id": 6881240, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dc1e27d7e9a3de2ca8e257cb7c72ff4a?s=128&d=identicon&r=PG&f=1", "display_name": "kabanus", "link": "https://stackoverflow.com/users/6881240/kabanus"}, "is_accepted": false, "score": 2, "last_activity_date": 1555336135, "last_edit_date": 1555336135, "creation_date": 1555335827, "answer_id": 55690569, "question_id": 55690397, "link": "https://stackoverflow.com/questions/55690397/where-is-the-frexp-function-for-f32-in-rust/55690569#55690569", "title": "Where is the frexp function for f32 in Rust?", "body": "<p>This function has been deprecated for a very long time. This is the commit that completely removed it: <a href=\"https://github.com/rust-lang/rust/pull/41437\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/pull/41437</a>.</p>\n\n<p>Likely you have a new version. If you are interested, the full implementation is available here <a href=\"https://github.com/rust-lang/rust/blob/9ebf47851a357faa4cd97f4b1dc7835f6376e639/src/librustc_apfloat/tests/ieee.rs\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/blob/9ebf47851a357faa4cd97f4b1dc7835f6376e639/src/librustc_apfloat/tests/ieee.rs</a>, but you should likely move to something else.</p>\n\n<p>Checkout for example the <code>Float</code> trait <a href=\"https://rust-num.github.io/num/num_traits/float/trait.Float.html#tymethod.integer_decode\" rel=\"nofollow noreferrer\"><code>integer_decode</code></a> that returns the mantissa, exponent and sign instead.</p>\n\n<p>Straight from the docs I linked to:</p>\n\n<pre><code>use num_traits::Float;    \nlet num = 2.0f32;    \n// (8388608, -22, 1)\nlet (mantissa, exponent, sign) = Float::integer_decode(num);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "edited": false, "score": 0, "creation_date": 1555351738, "post_id": 55690736, "comment_id": 98072519, "body": "It immediately worked on my linux machine, but I got a very long linker error when I tried it on windows earlier. I haven&#39;t looked into the problem yet."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "edited": false, "score": 0, "creation_date": 1555351975, "post_id": 55690736, "comment_id": 98072605, "body": "Windows doesn&#39;t use the glibc and <code>frexp</code> does come from that. You have to link it somehow against the windows c runtime. (Not a Windows expert)"}, {"owner": {"reputation": 20930, "user_id": 6881240, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/dc1e27d7e9a3de2ca8e257cb7c72ff4a?s=128&d=identicon&r=PG&f=1", "display_name": "kabanus", "link": "https://stackoverflow.com/users/6881240/kabanus"}, "edited": false, "score": 0, "creation_date": 1555354699, "post_id": 55690736, "comment_id": 98073734, "body": "Good answer, didn&#39;t think about using C directly."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 3, "last_activity_date": 1555336824, "last_edit_date": 1555336824, "creation_date": 1555336413, "answer_id": 55690736, "question_id": 55690397, "link": "https://stackoverflow.com/questions/55690397/where-is-the-frexp-function-for-f32-in-rust/55690736#55690736", "title": "Where is the frexp function for f32 in Rust?", "body": "<blockquote>\n  <p>I found some references to an unstable feature of std::f32 in previous releases</p>\n</blockquote>\n\n<p>If you follow your link you can see, that that feature was unstable (as you said) and that the <a href=\"https://github.com/rust-lang/rust/issues/27752\" rel=\"nofollow noreferrer\">corresponding issue (#27752)</a> was closed. Therefore the feature and the function is no longer available (remove in <a href=\"https://github.com/rust-lang/rust/pull/41437\" rel=\"nofollow noreferrer\">PR #41437</a>).</p>\n\n<blockquote>\n  <p>I also found references to <code>std::num::Float</code></p>\n</blockquote>\n\n<p>If you look at that URL you will notice, that that is a documentation from 2015, so it's also deprecated.</p>\n\n<hr>\n\n<p>Unfortunately I was not able to find any crate that offers a Rust implementation for you, but since Rust has full FFI support, you can call the corresponding c-function.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::os::raw::{c_float, c_double, c_int};\n\nextern \"C\" {\n    fn frexp(x: c_double, exp: *mut c_int) -&gt; c_double;\n    fn frexpf(x: c_float, exp: *mut c_int) -&gt; c_float;\n}\n\npub trait FloatExp: Sized {\n    fn frexp(self) -&gt; (Self, i32);\n}\n\nimpl FloatExp for f64 {\n    fn frexp(self) -&gt; (Self, i32) {\n        let mut exp: c_int = 0;\n        let res = unsafe { frexp(self, &amp;mut exp) };\n        (res, exp)\n    }\n}\n\nimpl FloatExp for f32 {\n    fn frexp(self) -&gt; (Self, i32) {\n        let mut exp: c_int = 0;\n        let res = unsafe { frexpf(self, &amp;mut exp) };\n        (res, exp)\n    }\n}\n\nfn main() {\n    println!(\"{:?}\", (1.3f64).frexp());\n    println!(\"{:?}\", (0.3f32).frexp());\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=95378d3eeab3dc0c914b58b99017cb16\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n"}, {"tags": [], "owner": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "is_accepted": false, "score": 1, "last_activity_date": 1555419496, "last_edit_date": 1555419496, "creation_date": 1555358585, "answer_id": 55696477, "question_id": 55690397, "link": "https://stackoverflow.com/questions/55690397/where-is-the-frexp-function-for-f32-in-rust/55696477#55696477", "title": "Where is the frexp function for f32 in Rust?", "body": "<p>I found a Rust implementation of <code>frexp()</code> in the <a href=\"https://github.com/dche/glm-rs/blob/master/src/basenum.rs\" rel=\"nofollow noreferrer\">glm-rs</a> lib.</p>\n\n<pre><code>fn frexp(self) -&gt; ($t, isize) {\n    // CHECK: use impl in `libstd` after it's stable.\n    if self.is_zero() || self.is_infinite() || self.is_nan() {\n        (self, 0)\n    } else {\n        let lg = self.abs().log2();\n        let x = (lg.fract() - 1.).exp2();\n        let exp = lg.floor() + 1.;\n        (self.signum() * x, exp as isize)\n    }\n}\n</code></pre>\n\n<p>Interestingly it doesn't give me the same results as C <code>frexpf()</code>, because <code>f32.fract()</code> returns negative numbers for negative input. I solved it by replacing <code>lg.fract()</code> with <code>lg - lg.floor()</code>.</p>\n\n<p>My version:</p>\n\n<pre><code>fn frexp(s : f32) -&gt; (f32, i32) {\n    if 0.0 == s {\n        return (s, 0);\n    } else {\n        let lg = s.abs().log2();\n        let x = (lg - lg.floor() - 1.0).exp2();\n        let exp = lg.floor() + 1.0;\n        (s.signum() * x, exp as i32)\n    }\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>let x = 0.3f32;\nprintln!(\"{:?}\", (x).frexp()); // (0.6, -1)\nprintln!(\"{:?}\", glmfrexp(x)); // (0.3, -1)\nprintln!(\"{:?}\", myfrexp(x));  // (0.6, -1)\n</code></pre>\n"}], "owner": {"reputation": 953, "user_id": 312632, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ff265721698489afeb7ceb7d3afde6e?s=128&d=identicon&r=PG", "display_name": "B_old", "link": "https://stackoverflow.com/users/312632/b-old"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1555419496, "creation_date": 1555335284, "last_edit_date": 1555337646, "question_id": 55690397, "link": "https://stackoverflow.com/questions/55690397/where-is-the-frexp-function-for-f32-in-rust", "title": "Where is the frexp function for f32 in Rust?", "body": "<p>I am looking for the <code>frexp()</code> function in Rust.I found some <a href=\"https://doc.rust-lang.org/1.7.0/std/primitive.f32.html\" rel=\"nofollow noreferrer\">references</a> to an unstable feature of <code>std::f32</code> in previous releases, but that doesn't seem work with my standard Rust installation. </p>\n\n<p>I also found <a href=\"http://www.cs.brandeis.edu/~cs146a/rust/doc-02-21-2015/std/num/trait.Float.html\" rel=\"nofollow noreferrer\">references</a> to <code>std::num::Float</code>, but I cannot get the examples to work either.</p>\n\n<p>Do I have to download a crate to access those functions?</p>\n"}, {"tags": ["rust", "metaprogramming"], "answers": [{"tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": false, "score": 4, "last_activity_date": 1555333097, "creation_date": 1555333097, "answer_id": 55689724, "question_id": 55688178, "link": "https://stackoverflow.com/questions/55688178/how-to-create-alphabet-array-during-compile-time/55689724#55689724", "title": "How to create alphabet array during compile time?", "body": "<p>If the content, you want to generate at compile time, is complex and you are not comfortable hardcoding it by hand, then you could write a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-code-generation\" rel=\"nofollow noreferrer\">build script</a> for it. The build script would then generate the \"hardcoded\" rust code and write it into a file. Then you would <a href=\"https://doc.rust-lang.org/std/macro.include.html\" rel=\"nofollow noreferrer\">include</a> the generated file from your usual code. </p>\n"}], "owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "closed_date": 1555336041, "answer_count": 1, "score": 0, "last_activity_date": 1555336146, "creation_date": 1555327540, "last_edit_date": 1555327798, "question_id": 55688178, "link": "https://stackoverflow.com/questions/55688178/how-to-create-alphabet-array-during-compile-time", "closed_reason": "Duplicate", "title": "How to create alphabet array during compile time?", "body": "<p>I have a function which is called quite frequently which needs the letters of the alphabet in a vector.</p>\n\n<p>To do so during runtime es quite easy:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let alphabet = (b'a'..b'z').map(|c| c as char).map(|c| c.to_string());\n// Do some stuff with the alphabet...\n</code></pre>\n\n<p>Ok one can create another function creating this alphabet and then applying memorization on top of it...</p>\n\n<p>...but I have heard that rust has a powerful macro feature.</p>\n\n<p>How to create this vector - or maybe better a fixed size array with items of type <code>str</code> - during compile-time?</p>\n\n<p>In other words I do want to have something like this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>const alphabet: [&amp;'static str; 26] = [\"a\", \"b\", ...];\n</code></pre>\n\n<p>auto generated.</p>\n\n<p>Or is it better not to concern about this kind of optimization because the compiler does this anyway?</p>\n"}, {"tags": ["concurrency", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 4, "creation_date": 1555327127, "post_id": 55688018, "comment_id": 98059104, "body": "<i>&quot;But the owner can read the data, while another thread changes the value through a mutable borrow, right&quot;</i> no. Either one writer, or multiple reader. Not both."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 11038610, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a79c656b10a6ab404aab4723226e9f8f?s=128&d=identicon&r=PG&f=1", "display_name": "Julian Hofer", "link": "https://stackoverflow.com/users/11038610/julian-hofer"}, "edited": false, "score": 2, "creation_date": 1555337186, "post_id": 55690834, "comment_id": 98064869, "body": "That was extremely helpful and solved a problem, I struggled with at least for three weeks. I wonder if your answer might be suitable to be integrated in one of the various Rust resources, because none of them made me grasp the concept you described in the last paragraph of your answer :)"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 6, "last_activity_date": 1555340780, "last_edit_date": 1555340780, "creation_date": 1555336696, "answer_id": 55690834, "question_id": 55688018, "link": "https://stackoverflow.com/questions/55688018/how-does-rust-prevent-data-races-when-the-owner-of-a-value-can-read-it-while-ano/55690834#55690834", "title": "How does Rust prevent data races when the owner of a value can read it while another thread changes it?", "body": "<blockquote>\n  <p>the owner can read the data, while another thread changes the value through a mutable borrow, right?</p>\n</blockquote>\n\n<p>This is incorrect, and it does not even matter whether multiple threads are involved or not.</p>\n\n<p>You can see for yourself in the following example (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7cfe5be8f4973818064b11944efedb0e\" rel=\"noreferrer\">Playground</a>). Here is a string value <code>x</code> being modified while retaining a reference to the same value <code>y</code>:</p>\n\n<pre><code>let mut x = \"123\".to_string();\nlet y = &amp;mut x;\n\nx.push_str(\"456\");\n\nprintln!(\"y = {}\", y);\n</code></pre>\n\n<p>This fails to compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `x` as mutable more than once at a time\n --&gt; src/main.rs:5:5\n  |\n3 |     let y = &amp;mut x;\n  |             ------ first mutable borrow occurs here\n4 |     \n5 |     x.push_str(\"456\");\n  |     ^ second mutable borrow occurs here\n6 | \n7 |     println!(\"y = {}\", y);\n  |                        - first borrow later used here\n</code></pre>\n\n<p>By the time we try to call <code>push_str</code>, a method which receives <code>&amp;mut self</code>, a new mutable reference to the value is assumed to be built on the spot. Since <code>x</code> was already borrowed in that scope, this is illegal.</p>\n\n<p>Now, you could even think about reassigning instead of calling a method expecting <code>&amp;mut self</code>. Still, fat chance:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut x = \"123\".to_string();\nlet y = &amp;mut x;\n\nx = \"321\".to_string();\n\nprintln!(\"y = {}\", y);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `x` because it is borrowed\n --&gt; src/main.rs:5:5\n  |\n3 |     let y = &amp;mut x;\n  |             ------ borrow of `x` occurs here\n4 |     \n5 |     x = \"321\".to_string();\n  |     ^ assignment to borrowed `x` occurs here\n6 | \n7 |     println!(\"y = {}\", y);\n  |                        - borrow later used here\n</code></pre>\n\n<p>A borrowed value cannot be reassigned either.</p>\n\n<p>To summarize, the owner of the value is still constrained by whichever kind of borrow was made. If the value was immutably borrowed, the owner can also have immutable access, but never can the value be <em>written to</em> or <em>moved</em> for as long as the borrow is in place.\nWhen the value was mutably borrowed, the owner cannot do anything with that value until that reference is dropped.</p>\n"}], "owner": {"reputation": 33, "user_id": 11038610, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a79c656b10a6ab404aab4723226e9f8f?s=128&d=identicon&r=PG&f=1", "display_name": "Julian Hofer", "link": "https://stackoverflow.com/users/11038610/julian-hofer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 1, "accepted_answer_id": 55690834, "answer_count": 1, "score": 2, "last_activity_date": 1555340780, "creation_date": 1555327003, "last_edit_date": 1555336209, "question_id": 55688018, "link": "https://stackoverflow.com/questions/55688018/how-does-rust-prevent-data-races-when-the-owner-of-a-value-can-read-it-while-ano", "title": "How does Rust prevent data races when the owner of a value can read it while another thread changes it?", "body": "<p>The Rust book states the following in <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html#mutable-references\" rel=\"nofollow noreferrer\">References and borrowing</a></p>\n\n<blockquote>\n  <p>We also cannot have a mutable reference while we have an immutable one. Users of an immutable reference don\u2019t expect the values to suddenly change out from under them! However, multiple immutable references are okay because no one who is just reading the data has the ability to affect anyone else\u2019s reading of the data.</p>\n</blockquote>\n\n<p>But the owner can read the data, while another thread changes the value through a mutable borrow, right? Don't we have then the usual problem all over again, or where do I misunderstand the underlying concept?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555309962, "post_id": 55683178, "comment_id": 98051089, "body": "I hope the duplicate resolves your question. If not, feel free to edit your question and ping me."}], "owner": {"reputation": 174, "user_id": 4307853, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-4vX7FADvQ-o/AAAAAAAAAAI/AAAAAAAAAbk/nJiM1TiqBrs/photo.jpg?sz=128", "display_name": "YangKeao", "link": "https://stackoverflow.com/users/4307853/yangkeao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1555308053, "answer_count": 0, "score": 2, "last_activity_date": 1555307677, "creation_date": 1555307211, "last_edit_date": 1555307677, "question_id": 55683178, "link": "https://stackoverflow.com/questions/55683178/why-i-can-return-a-reference-of-a-value-which-not-lives-long-enough", "closed_reason": "Duplicate", "title": "Why I can return a reference of a value which not lives long enough?", "body": "<p>I return a reference of a temporary value from <code>some</code> function. I'm not expecting this to compile successfully, however, I got no warning or error and the program works well.</p>\n\n<pre><code>struct A {\n    pub a: i32,\n}\n\nfn main() {\n    let b = A { a: 5 };\n    let a = some(&amp;b);\n    println!(\"{}\", a.a);\n}\n\nfn some(_: &amp;A) -&gt; &amp;A {\n    &amp;A { a: 14 }\n}\n</code></pre>\n\n<p><code>impl Drop for A</code> or return <code>&amp;mut A</code> will cause this program cannot compile.\nI am using <code>rustc 1.35.0-nightly</code>. </p>\n\n<p>Is this problem caused by some optimization? Why will optimization lead to this \"grammar feature\"?</p>\n"}, {"tags": ["list", "pointers", "linked-list", "rust", "unsafe"], "comments": [{"owner": {"reputation": 3125, "user_id": 2878796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8bxWv.png?s=128&g=1", "display_name": "UnholySheep", "link": "https://stackoverflow.com/users/2878796/unholysheep"}, "edited": false, "score": 0, "creation_date": 1555275763, "post_id": 55679855, "comment_id": 98044516, "body": "<code>let mut new_node = Box::new</code> will <code>drop</code> the allocated <code>Node</code> after it goes out of scope, leaving you with a dangling pointer in <code>let new_node_ptr: *mut Node&lt;T&gt; = &amp;mut *new_node;</code>. And I&#39;m not really sure why you are using unsafe code here"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1555276883, "post_id": 55679855, "comment_id": 98044739, "body": "<i>simple</i> and <i>doubly linked list</i> \u2014 I see you haven&#39;t been properly introduced as to exactly how complicated such data types are if you care about memory safety... (<a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\"><i>Learn Rust With Entirely Too Many Linked Lists</i></a>)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555307637, "post_id": 55679855, "comment_id": 98050289, "body": "<i>&quot;My test adds ten integers <code>0..9</code>&quot;</i> That&#39;s only 9 integers."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1555307746, "post_id": 55681219, "comment_id": 98050325, "body": "The &quot;correct fix&quot; would be to not go with pointers at all. Use a combination of <code>Option&lt;Box&lt;_&gt;&gt;</code> and you don&#39;t need any raw pointers. If you really want them, please use <code>Option&lt;NonNull&lt;_&gt;&gt;</code> to be certain, that you can&#39;t have null pointers."}], "tags": [], "owner": {"reputation": 11, "user_id": 1899016, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e73c7303553647c36f8565d497f8b79?s=128&d=identicon&r=PG&f=1", "display_name": "user1899016", "link": "https://stackoverflow.com/users/1899016/user1899016"}, "is_accepted": false, "score": 1, "last_activity_date": 1555287741, "creation_date": 1555287741, "answer_id": 55681219, "question_id": 55679855, "link": "https://stackoverflow.com/questions/55679855/how-to-fix-a-sigsegv-in-this-simple-doubly-linked-list-implementation/55681219#55681219", "title": "How to fix a SIGSEGV in this simple doubly linked list implementation?", "body": "<p>The following will fix the error. In <code>add_tail</code>:</p>\n\n<ul>\n<li>replace <code>let new_node_ptr: *mut Node&lt;T&gt; = &amp;mut *new_node;</code> with <code>let new_node_ptr = Box::into_raw(new_node);</code></li>\n<li>replace <code>new_node.next = self.tail</code> with <code>(*new_node_ptr).next = self.tail;</code></li>\n<li>include <code>(*new_node_ptr).next = self.tail;</code> in the <code>unsafe</code> block</li>\n</ul>\n\n<p>The error was due to obtaining the underlying pointer from the Box incorrectly. </p>\n\n<p>After <code>let new_node_ptr: *mut Node&lt;T&gt; = &amp;mut *new_node;</code> the Box continued to manage the memory pointed to by <code>new_node_ptr</code>. At the end of the block, the Box deallocated the memory automatically leaving <code>new_node_ptr</code> dangling.</p>\n\n<p>To obtain a pointer with manual memory management and to release control of memory from the Box, use <code>Box::into_raw</code> instead of <code>&amp;mut *</code>.</p>\n"}], "owner": {"reputation": 11, "user_id": 1899016, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e73c7303553647c36f8565d497f8b79?s=128&d=identicon&r=PG&f=1", "display_name": "user1899016", "link": "https://stackoverflow.com/users/1899016/user1899016"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1555307611, "creation_date": 1555274474, "last_edit_date": 1555307611, "question_id": 55679855, "link": "https://stackoverflow.com/questions/55679855/how-to-fix-a-sigsegv-in-this-simple-doubly-linked-list-implementation", "title": "How to fix a SIGSEGV in this simple doubly linked list implementation?", "body": "<p>I get a <code>SIGSEGV</code> error when running this code.</p>\n\n<p>The code compiles, the debugger shows what looks like random addresses in pointers.</p>\n\n<pre><code>use std::ptr;\n\npub struct List&lt;T&gt; {\n    head: *mut Node&lt;T&gt;,\n    tail: *mut Node&lt;T&gt;,\n}\n\nstruct Node&lt;T&gt; {\n    data: Option&lt;T&gt;,\n    next: *mut Node&lt;T&gt;,\n    prev: *mut Node&lt;T&gt;,\n}\n\nimpl&lt;T&gt; List&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        Self {\n            head: ptr::null_mut(),\n            tail: ptr::null_mut(),\n        }\n    }\n    pub fn add_tail(&amp;mut self, data: T) {\n        let mut new_node = Box::new(Node {\n            data: Some(data),\n            next: ptr::null_mut(),\n            prev: ptr::null_mut(),\n        });\n        let new_node_ptr: *mut Node&lt;T&gt; = &amp;mut *new_node;\n        if self.tail.is_null() {\n            self.head = new_node_ptr;\n        } else {\n            new_node.next = self.tail;\n            unsafe {\n                (*self.tail).prev = new_node_ptr;\n            }\n        }\n        self.tail = new_node_ptr;\n    }\n    pub fn remove_tail(&amp;mut self) -&gt; Option&lt;T&gt; {\n        if self.tail.is_null() {\n            None\n        } else {\n            let old_tail_ptr = self.tail;\n            unsafe {\n                if (*old_tail_ptr).next.is_null() {\n                    self.tail = ptr::null_mut();\n                    self.head = ptr::null_mut();\n                } else {\n                    let new_tail_ptr = (*old_tail_ptr).next;\n                    (*old_tail_ptr).next = ptr::null_mut();\n                    (*new_tail_ptr).prev = ptr::null_mut();\n                    self.tail = new_tail_ptr;\n                }\n                (*old_tail_ptr).data.take()\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>My test adds ten integers <code>0..9</code> and them pops them. On second pop, I get </p>\n\n<blockquote>\n  <p>signal: 11, SIGSEGV: invalid memory reference.</p>\n</blockquote>\n"}, {"tags": ["rust", "traits", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555276646, "post_id": 55679819, "comment_id": 98044691, "body": "<i>I didn&#39;t write the method which returns my <code>Box</code></i> \u2014 then you are basically out of luck. Your question is essentially the same as saying &quot;I have a type that doesn&#39;t implement <code>Display</code>; how do I lie to the compiler and make it believe the type does?&quot;. You don&#39;t have any guarantees that the returned type <i>can</i> be sent between threads, which very well might mean that it <b>cannot</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555276814, "post_id": 55679819, "comment_id": 98044728, "body": "Additionally, your hypothetical blanket implementation cannot work and for good reason. Just I could easily have <code>struct IsNotSend(...); impl Future for IsNotSend { Item = i32, Error = () }</code>. Both <code>Item</code> and <code>Error</code> are <code>Send</code>, but the struct itself is not."}, {"owner": {"reputation": 1120, "user_id": 3502581, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/43bd530a9058adc4f47965c997400f83?s=128&d=identicon&r=PG&f=1", "display_name": "Quintana", "link": "https://stackoverflow.com/users/3502581/quintana"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555278643, "post_id": 55679819, "comment_id": 98045150, "body": "I see, that helps me understand where i was making a false conclusion, because even if <code>Item</code> and <code>Error</code> are <code>Send</code> types, there&#39;s no reason non-send elements could not also exist in the containing concrete type. In my case, the returned implementer of <code>Future</code> coincidentally has no other data contents, but this can&#39;t be known based on the signatures. Thank you."}], "owner": {"reputation": 1120, "user_id": 3502581, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/43bd530a9058adc4f47965c997400f83?s=128&d=identicon&r=PG&f=1", "display_name": "Quintana", "link": "https://stackoverflow.com/users/3502581/quintana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1555276440, "creation_date": 1555274225, "last_edit_date": 1555276440, "question_id": 55679819, "link": "https://stackoverflow.com/questions/55679819/how-do-i-specify-that-any-type-satisfying-a-given-first-trait-under-certain-trai", "title": "How do I specify that any type satisfying a given first trait under certain trait bounds must also implicitly satisfy a second trait?", "body": "<p>I have a similar situation as <a href=\"https://stackoverflow.com/questions/51485410/unable-to-tokiorun-a-boxed-future-because-the-trait-bound-send-is-not-satisfie\">Unable to tokio::run a boxed Future because the trait bound Send is not satisfied</a>): I want to use <code>tokio::run</code> on types of <code>Box&lt;T: Future ...&gt;</code> where <code>T</code> does not implement <code>Send</code>.</p>\n\n<p>My situation is different in that I didn't write the method which returns my <code>Box</code>, and so can't change its method signature. It performs a web request and returns this boxed future:</p>\n\n<pre><code>pub fn get_resource(&amp;self,) -&gt; Box&lt;Future&lt;Item = RestStruct, Error = Error&lt;serde_json::Value&gt;&gt;&gt;\n</code></pre>\n\n<p>Note the lack of <code>Send</code>.</p>\n\n<p>Per the <a href=\"https://tokio.rs/docs/going-deeper/returning/#tk-docs-nav\" rel=\"nofollow noreferrer\">Tokio documentation</a>, I need to implement <code>Send</code> on my boxed type, which isn't automatic even if the future's associated types are <code>Send</code>:</p>\n\n<blockquote>\n  <p>Astute readers may notice the explicit <code>Send</code> trait notation within the <code>Box</code> definition. The notation is added because <code>Future</code> is not explicitly <code>Send</code> by default; this causes problems later when trying to pass this future or one of its derivatives into <code>tokio::run</code>.</p>\n</blockquote>\n\n<p>I'm having trouble figuring out an appropriately concise way to do this. It seems like something along these lines should work:</p>\n\n<pre><code>impl&lt;T, I, E&gt; Send for T\nwhere\n    T: Future&lt;Item = I, Error = E&gt;,\n    I: Send,\n    E: Send,\n{\n}\n</code></pre>\n\n<p>I get a number of surprising errors. I'll detail them below, but my question can be generally phrased, how do I specify: <strong>any type satisfying a given first trait under certain trait bounds must also implicitly satisfy a second trait</strong>?</p>\n\n<hr>\n\n<p>The errors my solution produced:</p>\n\n<blockquote>\n  <p>the trait <code>std::marker::Send</code> requires an <code>unsafe impl</code> declaration</p>\n</blockquote>\n\n<p>I think I understand that one based on the documentation about <code>Send</code>, though to clarify: this would indeed constitute a \"properly implemented <code>Send</code>\" as <a href=\"https://doc.rust-lang.org/nomicon/send-and-sync.html\" rel=\"nofollow noreferrer\">described there</a>, because the associated types are <code>Send</code>?</p>\n\n<blockquote>\n  <p>type parameter <code>T</code> must be used as the type parameter for some local type (e.g., <code>MyStruct&lt;T&gt;</code>)</p>\n</blockquote>\n\n<p>I understand this to be related to the <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html\" rel=\"nofollow noreferrer\">newtype workaround as described in the docs</a>, which would really get in the way of doing what I want to do if so. Does this mean I can't accomplish what I want? Is there something like a type alias for bounded traits that would get around this?</p>\n\n<blockquote>\n  <p>conflicting implementations of trait <code>std::marker::Send</code> for type <code>&amp;_</code></p>\n</blockquote>\n\n<p>That one, I don't understand at all. <code>&amp;_</code> is far broader a type than the constrained one I tried to specify using all those <code>where</code> bounds; I would not expect <code>&amp;_</code> to be <code>Future&lt;Item = I: Send, Error = E: Send&gt;</code>.</p>\n"}, {"tags": ["rust", "pattern-matching", "match"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555274321, "post_id": 55679758, "comment_id": 98044179, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 667, "user_id": 981403, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/PrBma.png?s=128&g=1", "display_name": "Mazeryt", "link": "https://stackoverflow.com/users/981403/mazeryt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555274637, "post_id": 55679758, "comment_id": 98044255, "body": "Hmm, yes in my code I used: &amp;out[out.find(SECTION_TEST).unwrap()+SECTION_TEST.len()..] Just posted simplified version, which as you mentioned wont compile. Is that construction ok? I am just reading the link that you have sent"}], "answers": [{"comments": [{"owner": {"reputation": 667, "user_id": 981403, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/PrBma.png?s=128&g=1", "display_name": "Mazeryt", "link": "https://stackoverflow.com/users/981403/mazeryt"}, "edited": false, "score": 0, "creation_date": 1555274344, "post_id": 55679810, "comment_id": 98044187, "body": "Thanks for the solution and references as well! Really helpful!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1555274171, "creation_date": 1555274171, "answer_id": 55679810, "question_id": 55679758, "link": "https://stackoverflow.com/questions/55679758/how-to-match-a-string-against-a-static-str/55679810#55679810", "title": "How to match a string against a static &amp;str?", "body": "<p>Use a <code>const</code>ant instead of a static:</p>\n\n<pre><code>const STATUS_TEST_OK: &amp;str = \"PASSED\";\n\nfn match_out(s: &amp;str) -&gt; bool {\n    match s {\n        STATUS_TEST_OK =&gt; {\n            println!(\"Yes\");\n            true\n        }\n        _ =&gt; {\n            println!(\"No\");\n            false\n        }\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52751597/155423\">What is the difference between a const variable and a static variable and which should I choose?</a></li>\n<li><a href=\"https://stackoverflow.com/q/37877381/155423\">What is the difference between immutable and const variables in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/25383488/155423\">How to match a String against string literals in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28225958/155423\">Why is this match pattern unreachable when using non-literal patterns?</a></li>\n</ul>\n"}], "owner": {"reputation": 667, "user_id": 981403, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/PrBma.png?s=128&g=1", "display_name": "Mazeryt", "link": "https://stackoverflow.com/users/981403/mazeryt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 776, "favorite_count": 0, "accepted_answer_id": 55679810, "answer_count": 1, "score": 1, "last_activity_date": 1555274729, "creation_date": 1555273816, "last_edit_date": 1555274729, "question_id": 55679758, "link": "https://stackoverflow.com/questions/55679758/how-to-match-a-string-against-a-static-str", "title": "How to match a string against a static &amp;str?", "body": "<p>I am writing a program that does probably a little bit too much with string processing. I moved most of the literal messages to constants; I'm not sure if that is the proper way in Rust, but I'm used to writing that in C.</p>\n\n<p>I figured out that I cannot easily use my <code>static &amp;str</code> inside a <code>match</code> expression. I can use the text itself, but cannot figure out how to do that properly.</p>\n\n<p>I understand it's a compiler issue, but don't know how to write that construction properly in Rust style. Should I use enums instead of C-like static variables?</p>\n\n<pre><code>static SECTION_TEST: &amp;str = \"test result:\";\nstatic STATUS_TEST_OK: &amp;str = \"PASSED\";\n\nfn match_out(out: &amp;String) -&gt; bool {\n    let s = &amp;out[out.find(SECTION_TEST).unwrap() + SECTION_TEST.len()..];\n\n    match s {\n        STATUS_TEST_OK =&gt; {\n            println!(\"Yes\");\n            true\n        }\n        _ =&gt; {\n            println!(\"No\");\n            false\n        }\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0530]: match bindings cannot shadow statics\n --&gt; src/lib.rs:8:9\n  |\n2 | static STATUS_TEST_OK: &amp;str = \"PASSED\";\n  | --------------------------------------- the static `STATUS_TEST_OK` is defined here\n...\n8 |         STATUS_TEST_OK =&gt; {\n  |         ^^^^^^^^^^^^^^ cannot be named the same as a static\n</code></pre>\n"}, {"tags": ["rust", "borrowing"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555265252, "post_id": 55678292, "comment_id": 98041737, "body": "<code>next_back()</code> doesn&#39;t return the first element but the last one."}, {"owner": {"reputation": 1648, "user_id": 2535207, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a0db392082edc1a1fc6f6c927210c233?s=128&d=identicon&r=PG", "display_name": "Jeremy Cochoy", "link": "https://stackoverflow.com/users/2535207/jeremy-cochoy"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1556638071, "post_id": 55678292, "comment_id": 98502045, "body": "@Shepmaster Deer Shepmaster, you mentionnet this is a duplicate of the question 32913368 (removing-items-from-a-btreemap-or-btreeset-found-through-it&zwnj;&#8203;eration). Indeed, the two question are diff&#233;rent. This one is related to the borrow checker which still hold a reference to the key, whereas no iterator is involved. In the question you linked, iterator are involved and invalidated.  Also, the answer is different. The &quot;possible duplication&quot; answer &quot;No you can&#39;t do it&quot;. This question have as answer &quot;Yes, duplicate the key&quot;.  Regards,"}], "answers": [{"tags": [], "owner": {"reputation": 1648, "user_id": 2535207, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a0db392082edc1a1fc6f6c927210c233?s=128&d=identicon&r=PG", "display_name": "Jeremy Cochoy", "link": "https://stackoverflow.com/users/2535207/jeremy-cochoy"}, "is_accepted": false, "score": 0, "last_activity_date": 1555267546, "last_edit_date": 1555267546, "creation_date": 1555264313, "answer_id": 55678293, "question_id": 55678292, "link": "https://stackoverflow.com/questions/55678292/how-can-i-remove-the-first-element-of-a-btreemap-or-hashmap-that-meets-a-conditi/55678293#55678293", "title": "How can I remove the first element of a BTreeMap or HashMap that meets a condition?", "body": "<p>The error is caused by the fact the key and the value are borrowed. The answer is to make a copy of them before calling <code>remove()</code>:</p>\n\n<pre><code>use std::collections::BTreeMap;\n\npub fn remove_if42(map: &amp;mut BTreeMap&lt;String, u32&gt;) -&gt; Option&lt;u32&gt; {\n    // Get the first element from the ordered hash\n    let (key, value) = map.iter_mut().next_back()?;\n\n    let key_cpy: String = key.to_string();\n    let value_cpy = *value;\n    if *value == 42 {\n        map.remove(&amp;key_cpy);\n    }\n    Some(value_cpy)\n}\n</code></pre>\n\n<p>In the case you don't need the value after removing the entry, you only need a copy of the key.</p>\n"}], "owner": {"reputation": 1648, "user_id": 2535207, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/a0db392082edc1a1fc6f6c927210c233?s=128&d=identicon&r=PG", "display_name": "Jeremy Cochoy", "link": "https://stackoverflow.com/users/2535207/jeremy-cochoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 448, "favorite_count": 0, "closed_date": 1555267583, "answer_count": 1, "score": 0, "last_activity_date": 1557270141, "creation_date": 1555264313, "last_edit_date": 1557270141, "question_id": 55678292, "link": "https://stackoverflow.com/questions/55678292/how-can-i-remove-the-first-element-of-a-btreemap-or-hashmap-that-meets-a-conditi", "closed_reason": "Duplicate", "title": "How can I remove the first element of a BTreeMap or HashMap that meets a condition?", "body": "<p>I would like to remove a <code>(key, value)</code> from an ordered hashmap depending on some property regarding the value.</p>\n\n<p>I wrote the following minimal example:</p>\n\n<pre><code>use std::collections::BTreeMap;\n\npub fn remove_if42(map: &amp;mut BTreeMap&lt;String, u32&gt;) -&gt; Option&lt;u32&gt; {\n    // Get the first element (minimum) from the ordered hash\n    let (key, value) = map.iter_mut().next()?;\n\n    if *value == 42 {\n        map.remove(key);\n    }\n    Some(*value)\n}\n</code></pre>\n\n<p>I can read the value, but when I ask to delete the key, I get a borrowing error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*map` as mutable more than once at a time\n --&gt; src/lib.rs:8:9\n  |\n5 |     let (key, value) = map.iter_mut().next()?;\n  |                        --- first mutable borrow occurs here\n...\n8 |         map.remove(key);\n  |         ^^^        --- first borrow later used here\n  |         |\n  |         second mutable borrow occurs here\n</code></pre>\n"}, {"tags": ["rust", "traits", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555268111, "post_id": 55678288, "comment_id": 98042500, "body": "<i>but surely there&#39;s a way to do this before then</i> \u2014 if there was in general, why do you think that GATs would be needed?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555268245, "post_id": 55678288, "comment_id": 98042540, "body": "<i>have a lifetime greater than the thing</i> \u2014 how do you envision such code would even be possible? If the reference outlives the value it&#39;s referencing, then it would be pointing an invalid data, allowing memory unsafety."}, {"owner": {"reputation": 8801, "user_id": 14468, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b8e690d38eca4c43a9a02b1b321a318f?s=128&d=identicon&r=PG", "display_name": "Dhskjlkakdh", "link": "https://stackoverflow.com/users/14468/dhskjlkakdh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555269866, "post_id": 55678288, "comment_id": 98042994, "body": "@Shepmaster: <i>If there was in general, why do you think that GATs would be needed?</i> \u2014 Well. If there&#39;s no way to do it, then there&#39;s no way to do it. But I don&#39;t know that there&#39;s no way to do it, hence the question. I just found the <a href=\"https://crates.io/crates/galemu\" rel=\"nofollow noreferrer\">galemu</a> crate for example, though I&#39;m not yet sure that would work for me."}, {"owner": {"reputation": 8801, "user_id": 14468, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b8e690d38eca4c43a9a02b1b321a318f?s=128&d=identicon&r=PG", "display_name": "Dhskjlkakdh", "link": "https://stackoverflow.com/users/14468/dhskjlkakdh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555269953, "post_id": 55678288, "comment_id": 98043009, "body": "@Shepmaster: <i>how do you envision such code would even be possible?</i> \u2014 An iterator of <code>usize</code>, which are <code>&#39;static</code>, doesn&#39;t itself need to be <code>&#39;static</code>. (Maybe this is just a misread of my description of the trait, which I can agree is not very clear.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555271826, "post_id": 55678288, "comment_id": 98043546, "body": "<i><code>usize</code>, which are <code>&#39;static</code></i> \u2014 pedantically, <code>usize</code> don&#39;t contain references so they are neither <code>&#39;static</code> or not. They <i>do</i> meet the trait bound of <code>&#39;static</code> since any references (i.e. none) have a lifetime of that or longer."}, {"owner": {"reputation": 8801, "user_id": 14468, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b8e690d38eca4c43a9a02b1b321a318f?s=128&d=identicon&r=PG", "display_name": "Dhskjlkakdh", "link": "https://stackoverflow.com/users/14468/dhskjlkakdh"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555272979, "post_id": 55678288, "comment_id": 98043854, "body": "You&#39;re right, and that&#39;s a meaningful distinction. Thanks."}], "owner": {"reputation": 8801, "user_id": 14468, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b8e690d38eca4c43a9a02b1b321a318f?s=128&d=identicon&r=PG", "display_name": "Dhskjlkakdh", "link": "https://stackoverflow.com/users/14468/dhskjlkakdh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 188, "favorite_count": 1, "answer_count": 0, "score": 4, "last_activity_date": 1555437575, "creation_date": 1555264292, "last_edit_date": 1555349101, "question_id": 55678288, "link": "https://stackoverflow.com/questions/55678288/why-does-this-cast-to-a-trait-object-seem-to-change-the-borrow-semantics", "title": "Why does this cast to a trait object seem to change the borrow semantics?", "body": "<p><strong>Edit:</strong> In an earlier version of this I made a reference to GAT, which could divert attention from the intent of the question. I've edited the code to remove one of the associated types and simplify it overall. What I'd like to understand from this question:</p>\n\n<p><strong>Why does <code>rustc</code> accept the boxed object as a concrete type but complain when the same object is cast to a boxed trait? What change can I make so that the boxed trait version is accepted?</strong></p>\n\n<p>The trait I'm attempting to define is roughly:</p>\n\n<blockquote>\n  <p>A thing that can create an iterator of some kind that borrows the thing and iterates values that have a lifetime greater than the thing but not necessarily as great as <code>'static</code>.</p>\n</blockquote>\n\n<p>After some contriving I was eventually able to code that up (see <code>CreatesIterator</code>) along with a simple reference implementation struct (see <code>IteratorWithRef</code>). This concrete implementation works - it creates an iterator of the style specified which can iterate. If I cast this implementation to a trait object, the borrow checker shuts me down:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `*creates_iterator_dyn` does not live long enough\n  --&gt; src/main.rs:17:17\n   |\n17 |         let _ = creates_iterator_dyn.iterate().count();\n   |                 ^^^^^^^^^^^^^^^^^^^^ borrowed value does not live long enough\n18 |     }\n   |     -\n   |     |\n   |     `*creates_iterator_dyn` dropped here while still borrowed\n   |     borrow might be used here, when `creates_iterator_dyn` is dropped and runs the destructor for type `std::boxed::Box&lt;dyn CreatesIterator&lt;'_, '_, IteratorWithRef&lt;'_, '_&gt;&gt;&gt;`\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fa07f104331bf154480431cdd61c7459\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>And code also below.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type LongTraitObjType&lt;'collection, 'data&gt; =\n    Box&lt;dyn CreatesIterator&lt;'collection, 'data, IteratorWithRef&lt;'collection, 'data&gt;&gt; + 'data&gt;;\n\nfn main() {\n    let data = 1;\n\n    // Works: concrete implementation:\n    {\n        let creates_iterator_impl = Box::new(CreatesIteratorImpl(vec![Wrapper(&amp;data)]));\n        let _ = creates_iterator_impl.iterate().count();\n    }\n\n    // Doesn't work: same as above, but cast to a trait object.\n    {\n        let creates_iterator_dyn: LongTraitObjType =\n            Box::new(CreatesIteratorImpl(vec![Wrapper(&amp;data)]));\n        let _ = creates_iterator_dyn.iterate().count();\n    }\n}\n\n#[derive(Clone)]\nstruct Wrapper&lt;'data&gt;(&amp;'data u32);\n\nstruct IteratorWithRef&lt;'collection, 'data: 'collection&gt; {\n    reference: &amp;'collection CreatesIteratorImpl&lt;'data&gt;,\n    i: usize,\n}\nimpl&lt;'collection, 'data: 'collection&gt; Iterator for IteratorWithRef&lt;'collection, 'data&gt; {\n    type Item = Wrapper&lt;'data&gt;;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.i &lt; self.reference.0.len() {\n            let ret = Some(self.reference.0[self.i].clone());\n            self.i += 1;\n            ret\n        } else {\n            None\n        }\n    }\n}\n\ntrait CreatesIterator&lt;'collection, 'data, E&gt;\nwhere\n    'data: 'collection,\n    E: Iterator + 'collection,\n    &lt;E as Iterator&gt;::Item: 'data,\n{\n    fn iterate(&amp;'collection self) -&gt; E;\n}\n\nstruct CreatesIteratorImpl&lt;'data&gt;(Vec&lt;Wrapper&lt;'data&gt;&gt;);\n\nimpl&lt;'collection, 'data: 'collection&gt;\n    CreatesIterator&lt;'collection, 'data, IteratorWithRef&lt;'collection, 'data&gt;&gt;\n    for CreatesIteratorImpl&lt;'data&gt;\n{\n    fn iterate(&amp;'collection self) -&gt; IteratorWithRef&lt;'collection, 'data&gt; {\n        IteratorWithRef {\n            reference: self,\n            i: 0,\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555267965, "post_id": 55677485, "comment_id": 98042472, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/28219730/155423\">Is it possible to access struct fields from within a trait?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55677485/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555270359, "post_id": 55677485, "comment_id": 98043121, "body": "@Shepmaster none of those answers I reference in the top of my question made it clear (to me, anyway) that struct fields could not be accessed from a default method definition because of the erroneous assumption that the struct would have that field (still sort of probing how to use a bound to ensure the use of a struct type that had said field).  trying to get at this distinction in my answer, below. if I&#39;m in error then we can mark as dupe. EDIT: I see it now, <code>default implementation of a trait (i.e. defining a method body within the trait), then no, you can&#39;t access fields.</code>"}, {"owner": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555277951, "post_id": 55677485, "comment_id": 98044996, "body": "It&#39;s also answered by the excellent response, <a href=\"https://stackoverflow.com/questions/39150216/implementing-a-trait-for-multiple-types-at-once\">here</a>: <code>A trait cannot expose a field&#47;attribute...(cont)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "edited": false, "score": 0, "creation_date": 1555261293, "post_id": 55677639, "comment_id": 98040544, "body": "I pared down my example to make it minimal, but many other things shoot as well. Gun, cannon, or ship structs (all of which would have a name field) could have this trait implemented on them...does that make sense? If not, are you saying I would constrain the trait&#39;s implementation only to things that have this name field? (Added a small edit in reference to your suggestion...)"}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 2, "last_activity_date": 1555260001, "creation_date": 1555260001, "answer_id": 55677639, "question_id": 55677485, "link": "https://stackoverflow.com/questions/55677485/how-do-i-access-struct-fields-within-default-method-definitions-of-traits/55677639#55677639", "title": "How do I access struct fields within default method definitions of traits?", "body": "<p>You are not trying to implement a default method on any structs; you are implementing it for the trait. Therefore you can't access any fields on any structs; you can only access what the trait demands.</p>\n\n<p>A default implementation of a trait methods means that any type that implements the non-defaulted methods of the trait can use the default method, no matter what it looks like otherwise. But you expect that the implementing type has a <code>name</code> field in addition to what the trait demands (it demands nothing, by the way).</p>\n\n<p>This is simply not a valid assumption.</p>\n\n<p>I wonder why you're using a trait here at all. If you are okay with requiring <code>self</code> to be <code>Actor</code> in the <code>shoot</code> method, why is it a method of a trait? Why isn't it an inherent method of the <code>Actor</code> struct without any traits?</p>\n"}, {"comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 0, "creation_date": 1555266130, "post_id": 55678181, "comment_id": 98041972, "body": "You could add a trait <code>NamedShooter</code> which defines a getter method <code>fn name(&amp;self) -&gt; &amp;str</code>. Then you can add a blanket implementation of <code>Shoot</code> for <code>NamedShooter</code> implementations."}], "tags": [], "owner": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "is_accepted": false, "score": 0, "last_activity_date": 1555263561, "creation_date": 1555263561, "answer_id": 55678181, "question_id": 55677485, "link": "https://stackoverflow.com/questions/55677485/how-do-i-access-struct-fields-within-default-method-definitions-of-traits/55678181#55678181", "title": "How do I access struct fields within default method definitions of traits?", "body": "<p>After having read Sebastian's response, I think the \"answer\" is: you can't name struct fields in traits' default methods because you don't know what fields a struct may have until the implementation of the trait. So you'd define an (abstract?) method signature, and then make it concrete when it's implemented.  In my case, this works:</p>\n\n<pre><code>trait Shoot {\n    fn shoot(&amp;self, other: &amp;Actor);\n}\n\nimpl Shoot for Actor {\n    fn shoot(&amp;self, other: &amp;Actor) {\n        println!(\"\\n{:?} shot {:?}!\",\n            self.name,\n            other.name,\n        );\n    }\n}\n</code></pre>\n\n<p>Still interested to know if I can constrain a trait to be applied only to structs with certain fields and if this is different than \"trait bounds\".  (It is, I think...)</p>\n"}], "owner": {"reputation": 2485, "user_id": 2780360, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/MIqzi.jpg?s=128&g=1", "display_name": "d8aninja", "link": "https://stackoverflow.com/users/2780360/d8aninja"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 649, "favorite_count": 0, "closed_date": 1555270583, "answer_count": 2, "score": 0, "last_activity_date": 1555290220, "creation_date": 1555259041, "last_edit_date": 1555267917, "question_id": 55677485, "link": "https://stackoverflow.com/questions/55677485/how-do-i-access-struct-fields-within-default-method-definitions-of-traits", "closed_reason": "Duplicate", "title": "How do I access struct fields within default method definitions of traits?", "body": "<p>I see some related questions (like <a href=\"https://stackoverflow.com/questions/41275803/cant-access-fields-of-structs-in-implementations-of-dynamic-traits\">this</a> and <a href=\"https://stackoverflow.com/questions/28219730/is-it-possible-to-access-struct-fields-from-within-a-trait?rq=1\">this</a>) but I'm hoping that my use case for default methods is unique enough to ask a slightly different question.  The following minimal example works and outputs <code>\"Sheriff Ted\" shot \"Billy the Kid\"!</code>:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Actor {\n    name: String,\n}\n\nfn main() {\n    let cop = Actor {\n        name: String::from(\"Sheriff Ted\"),\n    };\n\n    let robber = Actor {\n        name: String::from(\"Billy the Kid\")\n    };\n\n    println!(\"{:?} shot {:?}!\", cop.name, robber.name); // without the trait. with:\n    // cop.shoot(&amp;robber);\n}\n\n//pub trait Shoot {\n//    fn shoot(&amp;self, other: &amp;Actor) {\n//        println!(\"\\n{:?} shot {:?}!\",\n//                 &amp;self.name,\n//                 &amp;other.name,\n//        )\n//    }\n//}\n//\n//impl Shoot for Actor {}\n</code></pre>\n\n<p>As you can see, I want impart the <code>Shoot</code> implementation and the <code>shoot</code> method it contains on the <code>Actor</code> struct. When I uncomment the <code>Shoot</code> trait, its implementation on <code>Actor</code>, and the call <code>cop.shoot(&amp;robber)</code>, I get the error message related questions have gotten, as well: <code>error[E0609]: no field 'name' on type '&amp;Self'</code>.  </p>\n\n<p>My first thought was to specify <code>&amp;self: Actor</code> in the default method's signature, but that yields the delimiter error, so isn't syntactically valid. </p>\n\n<p>I think this question is unique because the other questions seem to misunderstand how the generics they specify are shadowing their intended types, and in my case I'm not understanding why I can't access fields within the structs on which I am trying to implement a default method.</p>\n\n<p>This works for cases when only <code>Actor</code>s need to <code>shoot</code>, but I am looking for a way to apply this behavior (right now, just <code>println</code>ing) across multiple types.</p>\n\n<pre><code>impl Actor {\n    fn shoot(&amp;self, other: &amp;Actor) {\n        println!(\"\\n{:?} shot {:?}!\",\n                 self.name,\n                 other.name,\n        )\n    }\n}\n</code></pre>\n"}, {"tags": ["functional-programming", "rust", "imperative-programming"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1555245211, "post_id": 55675093, "comment_id": 98035720, "body": "The difference looks extremely surprising to me; that&#39;s a factor of x15! Have you checked that both implementations yield the same result?"}, {"owner": {"reputation": 483, "user_id": 11358933, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ISh6E.png?s=128&g=1", "display_name": "David Copernicus Bowie", "link": "https://stackoverflow.com/users/11358933/david-copernicus-bowie"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1555247850, "post_id": 55675093, "comment_id": 98036562, "body": "@MatthieuM. yep, or at least both functions pass all unit tests defined by exercism."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1555248829, "post_id": 55675093, "comment_id": 98036836, "body": "I am thinking that there should be a way to replace the <code>map</code> step with a <code>flat_map</code> step, with a special-purpose iterator implementation taking the character and count and outputting the required stream of bytes. Forward encoding the integer is a bit tricky, but not too bad with <code>count_leading_zeroes</code> giving a hint of the magnitude (<code>clz(i) * 77 &#47; 256</code> gives the log 10)."}], "answers": [{"comments": [{"owner": {"reputation": 483, "user_id": 11358933, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ISh6E.png?s=128&g=1", "display_name": "David Copernicus Bowie", "link": "https://stackoverflow.com/users/11358933/david-copernicus-bowie"}, "edited": false, "score": 1, "creation_date": 1555250114, "post_id": 55675389, "comment_id": 98037227, "body": "That certainly gives us a speed boost, but it is still around 3x slower than the imperative version (30s rather than 10s in my tests). In fact, even if I only push a constant letter in that for loop it is still about 14s, so around 50% slower than the imperative version. That leads me to believe that group_by is probably not zero cost for this use case. Answer accepted anyway!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555253855, "post_id": 55675389, "comment_id": 98038326, "body": "<a href=\"https://stackoverflow.com/q/28333612/155423\">How can I append a formatted string to an existing String?</a>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 22, "last_activity_date": 1555290310, "last_edit_date": 1555290310, "creation_date": 1555245772, "answer_id": 55675389, "question_id": 55675093, "link": "https://stackoverflow.com/questions/55675093/what-are-the-performance-impacts-of-functional-rust/55675389#55675389", "title": "What are the performance impacts of &#39;functional&#39; Rust?", "body": "<p>Let's review the functional implementation!</p>\n\n<h3>Memory Allocations</h3>\n\n<p>One of the big issues of the functional style proposed here is the closure passed to the <code>map</code> method which allocates <em>a lot</em>. Every single character is first mapped to a <code>String</code> before being collected.</p>\n\n<p>It also uses the <code>format</code> machinery, which is known to be relatively slow.</p>\n\n<p>Sometimes, people try way too hard to get a \"pure\" functional solution, instead:</p>\n\n<pre><code>let mut result = String::new();\nfor (c, group) in &amp;source.chars().group_by(|&amp;c| c) {\n    let count = group.count();\n    if count &gt; 1 {\n        result.push_str(&amp;count.to_string());\n    }\n\n    result.push(c);\n}\n</code></pre>\n\n<p>is about as verbose, yet only allocates when <code>count &gt; 1</code> just like your solution does and does not use the <code>format</code> machinery either.</p>\n\n<p>I would expect a significant performance win compared to the full functional solution, while at the same time still leveraging <code>group_by</code> for extra readability compared to the full imperative solution. Sometimes, you ought to mix and match!</p>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1555263545, "post_id": 55676567, "comment_id": 98041222, "body": "Great iterator!"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1555316195, "post_id": 55676567, "comment_id": 98053684, "body": "By the way, when resuming an iterator introduces a branch, it&#39;s possible to implement <code>try_fold</code> directly rather than relying on the default implementation (which calls <code>next</code>). This helps when the optimizer fails to optimize out the branch."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 53, "last_activity_date": 1555290413, "last_edit_date": 1555290413, "creation_date": 1555253392, "answer_id": 55676567, "question_id": 55675093, "link": "https://stackoverflow.com/questions/55675093/what-are-the-performance-impacts-of-functional-rust/55676567#55676567", "title": "What are the performance impacts of &#39;functional&#39; Rust?", "body": "<p>TL;DR</p>\n\n<p>A functional implementation <em>can</em> be faster than your original procedural implementation, in certain cases.</p>\n\n<blockquote>\n  <p>Why is the functional style so much slower than the imperative style? Is there some problem with the functional implementation which is causing such a huge slowdown?</p>\n</blockquote>\n\n<p>As <a href=\"https://stackoverflow.com/a/55675389/155423\">Matthieu M. already pointed out</a>, the important thing to note is that the <strong>algorithm</strong> matters. How that algorithm is expressed (procedural, imperative, object-oriented, functional, declarative) generally doesn't matter.</p>\n\n<p>I see two main issues with the functional code:</p>\n\n<ul>\n<li><p>Allocating numerous strings over and over is inefficient. In the original functional implementation, this is done via <code>to_string</code> and <code>format!</code>.</p></li>\n<li><p>There's the overhead of using <code>group_by</code>, which exists to give a nested <em>iterator</em>, which you don't need just to get the counts.</p></li>\n</ul>\n\n<p>Using <em>more</em> of itertools (<a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.batching\" rel=\"noreferrer\"><code>batching</code></a>, <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.take_while_ref\" rel=\"noreferrer\"><code>take_while_ref</code></a>, <a href=\"https://docs.rs/itertools/0.8.0/itertools/trait.Itertools.html#method.format_with\" rel=\"noreferrer\"><code>format_with</code></a>) brings the two implementations much closer:</p>\n\n<pre><code>pub fn encode_slim(data: &amp;str) -&gt; String {\n    data.chars()\n        .batching(|it| {\n            it.next()\n                .map(|v| (v, it.take_while_ref(|&amp;v2| v2 == v).count() + 1))\n        })\n        .format_with(\"\", |(c, count), f| match count {\n            1 =&gt; f(&amp;c),\n            n =&gt; f(&amp;format_args!(\"{}{}\", n, c)),\n        })\n        .to_string()\n}\n</code></pre>\n\n<p>A benchmark of 4MiB of random alphanumeric data, compiled with <code>RUSTFLAGS='-C target-cpu=native'</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>encode (procedural)     time:   [21.082 ms 21.620 ms 22.211 ms]\n\nencode (fast)           time:   [26.457 ms 27.104 ms 27.882 ms]\nFound 7 outliers among 100 measurements (7.00%)\n  4 (4.00%) high mild\n  3 (3.00%) high severe\n</code></pre>\n\n<p>If you are interested in creating your own iterator, you can mix-and-match the procedural code with more functional code:</p>\n\n<pre><code>struct RunLength&lt;I&gt; {\n    iter: I,\n    saved: Option&lt;char&gt;,\n}\n\nimpl&lt;I&gt; RunLength&lt;I&gt;\nwhere\n    I: Iterator&lt;Item = char&gt;,\n{\n    fn new(mut iter: I) -&gt; Self {\n        let saved = iter.next(); // See footnote 1\n        Self { iter, saved }\n    }\n}\n\nimpl&lt;I&gt; Iterator for RunLength&lt;I&gt;\nwhere\n    I: Iterator&lt;Item = char&gt;,\n{\n    type Item = (char, usize);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let c = self.saved.take().or_else(|| self.iter.next())?;\n\n        let mut count = 1;\n        while let Some(n) = self.iter.next() {\n            if n == c {\n                count += 1\n            } else {\n                self.saved = Some(n);\n                break;\n            }\n        }\n\n        Some((c, count))\n    }\n}\n\npub fn encode_tiny(data: &amp;str) -&gt; String {\n    use std::fmt::Write;\n\n    RunLength::new(data.chars()).fold(String::new(), |mut s, (c, count)| {\n        match count {\n            1 =&gt; s.push(c),\n            n =&gt; write!(&amp;mut s, \"{}{}\", n, c).unwrap(),\n        }\n        s\n    })\n}\n</code></pre>\n\n<p><strong>1</strong> \u2014 thanks to <a href=\"https://chat.stackoverflow.com/transcript/message/45932591#45932591\">Stargateur for pointing out</a> that eagerly getting the first value helps branch prediction.</p>\n\n<p>A benchmark of 4MiB of random alphanumeric data, compiled with <code>RUSTFLAGS='-C target-cpu=native'</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>encode (procedural)     time:   [19.888 ms 20.301 ms 20.794 ms]\nFound 4 outliers among 100 measurements (4.00%)\n  3 (3.00%) high mild\n  1 (1.00%) high severe\n\nencode (tiny)           time:   [19.150 ms 19.262 ms 19.399 ms]\nFound 11 outliers among 100 measurements (11.00%)\n  5 (5.00%) high mild\n  6 (6.00%) high severe\n</code></pre>\n\n<p>I believe this more clearly shows the main <em>fundamental</em> difference between the two implementations: an iterator-based solution is <em>resumable</em>. Every time we call <code>next</code>, we need to see if there was a previous character that we've read (<code>self.saved</code>). This adds a branch to the code that isn't there in the procedural code.</p>\n\n<p>On the flip side, the iterator-based solution is more flexible \u2014 we can now compose all sorts of transformations on the data, or write directly to a file instead of a <code>String</code>, etc. The custom iterator can be extended to operate on a generic type instead of <code>char</code> as well, making it <em>very</em> flexible.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/30540766/155423\">How can I add new methods to Iterator?</a></li>\n</ul>\n\n<blockquote>\n  <p>If I want to write high performance code, should I ever use this functional style?</p>\n</blockquote>\n\n<p>I would, until benchmarking shows that it's the bottleneck. Then evaluate <em>why</em> it's the bottleneck.</p>\n\n<h3>Supporting code</h3>\n\n<p>Always got to show your work, right?</p>\n\n<p><strong>benchmark.rs</strong></p>\n\n<pre><code>use criterion::{criterion_group, criterion_main, Criterion}; // 0.2.11\nuse rle::*;\n\nfn criterion_benchmark(c: &amp;mut Criterion) {\n    let data = rand_data(4 * 1024 * 1024);\n\n    c.bench_function(\"encode (procedural)\", {\n        let data = data.clone();\n        move |b| b.iter(|| encode_proc(&amp;data))\n    });\n\n    c.bench_function(\"encode (functional)\", {\n        let data = data.clone();\n        move |b| b.iter(|| encode_iter(&amp;data))\n    });\n\n    c.bench_function(\"encode (fast)\", {\n        let data = data.clone();\n        move |b| b.iter(|| encode_slim(&amp;data))\n    });\n\n    c.bench_function(\"encode (tiny)\", {\n        let data = data.clone();\n        move |b| b.iter(|| encode_tiny(&amp;data))\n    });\n}\n\ncriterion_group!(benches, criterion_benchmark);\ncriterion_main!(benches);\n</code></pre>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>use itertools::Itertools; // 0.8.0\nuse rand; // 0.6.5\n\npub fn rand_data(len: usize) -&gt; String {\n    use rand::distributions::{Alphanumeric, Distribution};\n    let mut rng = rand::thread_rng();\n    Alphanumeric.sample_iter(&amp;mut rng).take(len).collect()\n}\n\npub fn encode_proc(source: &amp;str) -&gt; String {\n    let mut retval = String::new();\n    let firstchar = source.chars().next();\n    let mut currentchar = match firstchar {\n        Some(x) =&gt; x,\n        None =&gt; return retval,\n    };\n    let mut currentcharcount: u32 = 0;\n    for c in source.chars() {\n        if c == currentchar {\n            currentcharcount += 1;\n        } else {\n            if currentcharcount &gt; 1 {\n                retval.push_str(&amp;currentcharcount.to_string());\n            }\n            retval.push(currentchar);\n            currentchar = c;\n            currentcharcount = 1;\n        }\n    }\n    if currentcharcount &gt; 1 {\n        retval.push_str(&amp;currentcharcount.to_string());\n    }\n    retval.push(currentchar);\n    retval\n}\n\npub fn encode_iter(data: &amp;str) -&gt; String {\n    data.chars()\n        .group_by(|&amp;c| c)\n        .into_iter()\n        .map(|(c, group)| match group.count() {\n            1 =&gt; c.to_string(),\n            n =&gt; format!(\"{}{}\", n, c),\n        })\n        .collect()\n}\n\npub fn encode_slim(data: &amp;str) -&gt; String {\n    data.chars()\n        .batching(|it| {\n            it.next()\n                .map(|v| (v, it.take_while_ref(|&amp;v2| v2 == v).count() + 1))\n        })\n        .format_with(\"\", |(c, count), f| match count {\n            1 =&gt; f(&amp;c),\n            n =&gt; f(&amp;format_args!(\"{}{}\", n, c)),\n        })\n        .to_string()\n}\n\nstruct RunLength&lt;I&gt; {\n    iter: I,\n    saved: Option&lt;char&gt;,\n}\n\nimpl&lt;I&gt; RunLength&lt;I&gt;\nwhere\n    I: Iterator&lt;Item = char&gt;,\n{\n    fn new(mut iter: I) -&gt; Self {\n        let saved = iter.next();\n        Self { iter, saved }\n    }\n}\n\nimpl&lt;I&gt; Iterator for RunLength&lt;I&gt;\nwhere\n    I: Iterator&lt;Item = char&gt;,\n{\n    type Item = (char, usize);\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        let c = self.saved.take().or_else(|| self.iter.next())?;\n\n        let mut count = 1;\n        while let Some(n) = self.iter.next() {\n            if n == c {\n                count += 1\n            } else {\n                self.saved = Some(n);\n                break;\n            }\n        }\n\n        Some((c, count))\n    }\n}\n\npub fn encode_tiny(data: &amp;str) -&gt; String {\n    use std::fmt::Write;\n\n    RunLength::new(data.chars()).fold(String::new(), |mut s, (c, count)| {\n        match count {\n            1 =&gt; s.push(c),\n            n =&gt; write!(&amp;mut s, \"{}{}\", n, c).unwrap(),\n        }\n        s\n    })\n}\n\n#[cfg(test)]\nmod test {\n    use super::*;\n\n    #[test]\n    fn all_the_same() {\n        let data = rand_data(1024);\n\n        let a = encode_proc(&amp;data);\n        let b = encode_iter(&amp;data);\n        let c = encode_slim(&amp;data);\n        let d = encode_tiny(&amp;data);\n\n        assert_eq!(a, b);\n        assert_eq!(a, c);\n        assert_eq!(a, d);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 483, "user_id": 11358933, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ISh6E.png?s=128&g=1", "display_name": "David Copernicus Bowie", "link": "https://stackoverflow.com/users/11358933/david-copernicus-bowie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2048, "favorite_count": 14, "accepted_answer_id": 55676567, "answer_count": 2, "score": 48, "last_activity_date": 1555290413, "creation_date": 1555243649, "last_edit_date": 1555248499, "question_id": 55675093, "link": "https://stackoverflow.com/questions/55675093/what-are-the-performance-impacts-of-functional-rust", "title": "What are the performance impacts of &#39;functional&#39; Rust?", "body": "<p>I am following the Rust track on <a href=\"https://exercism.io/\" rel=\"noreferrer\">Exercism.io</a>. I have a fair amount of C/C++ experience. I like the 'functional' elements of Rust but I'm concerned about the relative performance.</p>\n\n<p>I solved the <a href=\"https://exercism.io/tracks/rust/exercises/run-length-encoding/\" rel=\"noreferrer\">'run length encoding' problem</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn encode(source: &amp;str) -&gt; String {\n    let mut retval = String::new();\n    let firstchar = source.chars().next();\n    let mut currentchar = match firstchar {\n        Some(x) =&gt; x,\n        None =&gt; return retval,\n    };\n    let mut currentcharcount: u32 = 0;\n    for c in source.chars() {\n        if c == currentchar {\n            currentcharcount += 1;\n        } else {\n            if currentcharcount &gt; 1 {\n                retval.push_str(&amp;currentcharcount.to_string());\n            }\n            retval.push(currentchar);\n            currentchar = c;\n            currentcharcount = 1;\n        }\n    }\n    if currentcharcount &gt; 1 {\n        retval.push_str(&amp;currentcharcount.to_string());\n    }\n    retval.push(currentchar);\n    retval\n}\n</code></pre>\n\n<p>I noticed that one of the top-rated answers looked more like this: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate itertools;\n\nuse itertools::Itertools;\n\npub fn encode(data: &amp;str) -&gt; String {\n    data.chars()\n        .group_by(|&amp;c| c)\n        .into_iter()\n        .map(|(c, group)| match group.count() {\n            1 =&gt; c.to_string(),\n            n =&gt; format!(\"{}{}\", n, c),\n        })\n        .collect()\n}\n</code></pre>\n\n<p>I love the top rated solution; it is simple, functional, and elegant. This is what they promised me Rust would be all about. Mine on the other hand is gross and full of mutable variables. You can tell I'm used to C++.</p>\n\n<p>My problem is that the functional style has a SIGNIFICANT performance impact. I tested both versions with the same 4MB of random data encoded 1000 times. My imperative solution took under 10 seconds; the functional solution was ~2mins30seconds. </p>\n\n<ul>\n<li>Why is the functional style so much slower than the imperative style?</li>\n<li>Is there some problem with the functional implementation which is causing such a huge slowdown?</li>\n<li>If I want to write high performance code, should I <em>ever</em> use this functional style? </li>\n</ul>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 12745, "user_id": 1663023, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/fc43a735e2c498f450a9908a5bd9ebf4?s=128&d=identicon&r=PG", "display_name": "Qian Chen", "link": "https://stackoverflow.com/users/1663023/qian-chen"}, "edited": false, "score": 0, "creation_date": 1555237484, "post_id": 55673993, "comment_id": 98033772, "body": "Thanks. So in most cases, <code>module_name.rs</code> file and <code>module_name&#47;</code> directory will coexist, is it correct?"}, {"owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "reply_to_user": {"reputation": 12745, "user_id": 1663023, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/fc43a735e2c498f450a9908a5bd9ebf4?s=128&d=identicon&r=PG", "display_name": "Qian Chen", "link": "https://stackoverflow.com/users/1663023/qian-chen"}, "edited": false, "score": 0, "creation_date": 1555237685, "post_id": 55673993, "comment_id": 98033817, "body": "If most modules have multiple files, then yes. I don&#39;t know if it&#39;s the case that most modules have multiple files though."}], "tags": [], "owner": {"reputation": 95188, "user_id": 440119, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/5ec9ca2a92a94a5470396073129d79e7?s=128&d=identicon&r=PG", "display_name": "Benjamin Lindley", "link": "https://stackoverflow.com/users/440119/benjamin-lindley"}, "is_accepted": true, "score": 2, "last_activity_date": 1555237092, "last_edit_date": 1555237092, "creation_date": 1555235874, "answer_id": 55673993, "question_id": 55673651, "link": "https://stackoverflow.com/questions/55673651/rust-mod-statements-inconsistency/55673993#55673993", "title": "rust mod statement&#39;s inconsistency", "body": "<p>In a standard Rust bin project, <code>src/main.rs</code> is given a special position as the crate root. Other source files within <code>src/</code> are modules at the top level of the crate. Modules with multiple files can take one of two forms. The old way was like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\u251c\u2500\u2500 main.rs\n\u2514\u2500\u2500 mod_name\n    \u2514\u2500\u2500 mod.rs\n    \u2514\u2500\u2500 submodule.rs\n\u2514\u2500\u2500 some_other_mod.rs\n</code></pre>\n\n<p><code>mod.rs</code> was required (with that exact name), and would serve as the top level of the module. In this case you can see, I'm sure, that it wouldn't make sense for <code>src/mod_name/mod.rs</code> to refer to <code>some_other_mod</code> directly without prefixing it with <code>super::</code> or <code>crate::</code>.</p>\n\n<p>The new method, which you are using, allows you to forgo <code>mod.rs</code> and just have <code>mod_name.rs</code> in the parent mod's directory, which serves the same purpose as <code>mod.rs</code>. This is convenient for when you start developing a library as a single file, and then when you later decide to add more files, you aren't required to rename and move the top level file.</p>\n\n<p>In your case, <code>instrument.rs</code> needs to be in the <code>sound/</code> directory in order to be considered part of the <code>sound</code> module. If you placed it directly in <code>src/</code>, it would be considered a top level module in the crate.</p>\n"}], "owner": {"reputation": 12745, "user_id": 1663023, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/fc43a735e2c498f450a9908a5bd9ebf4?s=128&d=identicon&r=PG", "display_name": "Qian Chen", "link": "https://stackoverflow.com/users/1663023/qian-chen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 55673993, "answer_count": 1, "score": 0, "last_activity_date": 1555237092, "creation_date": 1555232841, "question_id": 55673651, "link": "https://stackoverflow.com/questions/55673651/rust-mod-statements-inconsistency", "title": "rust mod statement&#39;s inconsistency", "body": "<p>Following the example in separating modules into different files from the following link:\n<a href=\"https://doc.rust-lang.org/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html#separating-modules-into-different-files\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch07-02-modules-and-use-to-control-scope-and-privacy.html#separating-modules-into-different-files</a></p>\n\n<p>I have created the following files under src directory:</p>\n\n<pre><code>\u251c\u2500\u2500 main.rs\n\u251c\u2500\u2500 sound\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 instrument.rs\n\u2514\u2500\u2500 sound.rs\n</code></pre>\n\n<p>In <code>src/main.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod sound;\n\nfn main() {\n  // Absolute path\n  crate::sound::instrument::clarinet();\n\n  // Relative path\n  sound::instrument::clarinet();\n}\n</code></pre>\n\n<p>In <code>src/sound.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub mod instrument;\n</code></pre>\n\n<p>And in <code>src/sound/instrument.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn clarinet() {\n  println!(\"clarinet\");\n}\n</code></pre>\n\n<p>The example compiles and works as expected. Now my questions is: why in <code>main.rs</code>, it can \"mod\" the <code>sound.rs</code> from the same directory, while in <code>sound.rs</code>, it has to \"mod\" the <code>instrument.rs</code> from a sub-directory </p>\n"}, {"tags": ["rust", "nom"], "comments": [{"owner": {"reputation": 497, "user_id": 9499193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a205ab60584733c5a84aa4c6e780d106?s=128&d=identicon&r=PG&f=1", "display_name": "JayJamesJay", "link": "https://stackoverflow.com/users/9499193/jayjamesjay"}, "edited": false, "score": 0, "creation_date": 1555255634, "post_id": 55673515, "comment_id": 98038865, "body": "Are you sure that you have a slice of u16? Utf-8 characters are represented by u8 values."}, {"owner": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 1, "creation_date": 1555257311, "post_id": 55673515, "comment_id": 98039315, "body": "Are you trying to parse UTF-16?"}, {"owner": {"reputation": 1242, "user_id": 3252252, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/4V81y.jpg?s=128&g=1", "display_name": "Jesuspc", "link": "https://stackoverflow.com/users/3252252/jesuspc"}, "edited": false, "score": 0, "creation_date": 1555263490, "post_id": 55673515, "comment_id": 98041205, "body": "I am parsing raw date from modbus. In modbus all registers are u16."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555295560, "post_id": 55680712, "comment_id": 98047943, "body": "This... doesn&#39;t appear to use <a href=\"https://crates.io/crates/nom\" rel=\"nofollow noreferrer\">nom</a>, as the OP requests."}, {"owner": {"reputation": 4945, "user_id": 341510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9162e8bca37c48433207c1fccfb3bba1?s=128&d=identicon&r=PG", "display_name": "chucksmash", "link": "https://stackoverflow.com/users/341510/chucksmash"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555322135, "post_id": 55680712, "comment_id": 98056622, "body": "I&#39;d be interesting in understanding  the reason for the down vote here. My reading of the OP&#39;s question was that they were not able to use the library they wanted to use because they were dealing with type <code>&amp;[u16]</code>. I&#39;ve shown a few ways they can convert to <code>Vec&lt;u8&gt;</code> or <code>String</code>, which they then should be able to use with <code>nom</code>."}], "tags": [], "owner": {"reputation": 4945, "user_id": 341510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9162e8bca37c48433207c1fccfb3bba1?s=128&d=identicon&r=PG", "display_name": "chucksmash", "link": "https://stackoverflow.com/users/341510/chucksmash"}, "is_accepted": false, "score": 0, "last_activity_date": 1555325852, "last_edit_date": 1592644375, "creation_date": 1555282045, "answer_id": 55680712, "question_id": 55673515, "link": "https://stackoverflow.com/questions/55673515/how-to-parse-a-slice-of-u16-input-with-nom/55680712#55680712", "title": "How to parse a slice of u16 input with nom?", "body": "<p>There are a couple of ways you could go about doing this. I don't know anything about modbus, so I'm assuming that the input looks like your <code>RAW_INPUT</code> above. First, you can use <code>as</code> to cast the u16 to u8. This will silently truncate values larger than 255. The other, safer approach is to use <a href=\"https://doc.rust-lang.org/std/convert/trait.TryFrom.html\" rel=\"nofollow noreferrer\">std::convert::TryFrom</a>:</p>\n<blockquote>\n<p>Simple and safe type conversions that may fail in a controlled way under some circumstances. It is the reciprocal of <code>TryInto</code>.</p>\n<p>This is useful when you are doing a type conversion that may trivially succeed but may also need special handling. For example, there is no way to convert an <code>i64</code> into an <code>i32</code> using the <code>From</code> trait, because an <code>i64</code> may contain a value that an <code>i32</code> cannot represent and so the conversion would lose data. This might be handled by truncating the <code>i64</code> to an <code>i32</code> (essentially giving the <code>i64</code>'s value modulo <code>i32::MAX</code>) or by simply returning <code>i32::MAX</code>, or by some other method. The <code>From</code> trait is intended for perfect conversions, so the <code>TryFrom</code> trait informs the programmer when a type conversion could go bad and lets them decide how to handle it.</p>\n</blockquote>\n<p>Some illustrative code you can play around with on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=91d06730822f00a39de8e2a6679c7a31\" rel=\"nofollow noreferrer\">Rust Playground</a>:</p>\n<pre><code>#[cfg(test)]\nmod tests {\n    use std::convert::TryFrom;\n    use std::num::TryFromIntError;\n    use std::str;\n\n    pub const RAW_BAD_INPUT: &amp;[u16] = &amp;[102, 111, 111, 300];\n    pub const RAW_GOOD_INPUT: &amp;[u16] = &amp;[102, 111, 111];\n\n    /// Converts using `as`. Demonstrates truncation.\n    #[test]\n    fn test_truncating() {\n        let expected = vec![102, 111, 111, 44];  // Note: 44\n        let actual = RAW_BAD_INPUT\n            .iter()\n            .map(|val| *val as u8)\n            .collect::&lt;Vec&lt;u8&gt;&gt;();\n        assert_eq!(expected, actual);\n    }\n\n    /// Demonstrates conversion using `TryFrom` on input with values that\n    /// would be truncated\n    #[test]\n    fn test_try_from_bad() {\n        let actual: Vec&lt;Result&lt;u8, TryFromIntError&gt;&gt; =\n            RAW_BAD_INPUT.iter().map(|val| u8::try_from(*val)).collect();\n\n        assert_eq!(actual[0].unwrap(), 102u8);\n        assert_eq!(actual[1].unwrap(), 111u8);\n        assert_eq!(actual[2].unwrap(), 111u8);\n        assert!(actual[3].is_err());\n    }\n\n    /// Demonstrates conversion using `TryFrom` on input with values\n    /// that would not be truncated. Also parses the Vec&lt;u8&gt; as a UTF-8\n    /// encoded string\n    #[test]\n    fn test_try_from_ok() {\n        let intermediate: Vec&lt;u8&gt; = RAW_GOOD_INPUT\n            .iter()\n            .map(|val| u8::try_from(*val).unwrap())\n            .collect();\n        let actual = match str::from_utf8(&amp;intermediate) {\n            Ok(s) =&gt; s,\n            Err(e) =&gt; panic!(&quot;Invalid UTF-8: {}&quot;, e),\n        };\n        assert_eq!(&quot;foo&quot;, actual);\n    }\n}\n</code></pre>\n<p>Using the code in <code>test_try_from_ok</code>, you should now have a <code>String</code> containing the data you wish to parse with <code>nom</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 1242, "user_id": 3252252, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/4V81y.jpg?s=128&g=1", "display_name": "Jesuspc", "link": "https://stackoverflow.com/users/3252252/jesuspc"}, "is_accepted": false, "score": 0, "last_activity_date": 1555703278, "creation_date": 1555703278, "answer_id": 55767094, "question_id": 55673515, "link": "https://stackoverflow.com/questions/55673515/how-to-parse-a-slice-of-u16-input-with-nom/55767094#55767094", "title": "How to parse a slice of u16 input with nom?", "body": "<p>Given:</p>\n\n<pre><code>pub const RAW_INPUT: &amp;[u16] = &amp;[102, 111, 111];\n</code></pre>\n\n<p>I ended up converting the input to <code>u8</code> first:</p>\n\n<pre><code>let xs = RAW_INPUT\n    .iter()\n    .flat_map(|x| x.to_be_bytes().to_vec())\n    .collect::&lt;Vec&lt;u8&gt;&gt;();\n</code></pre>\n\n<p>And then parsing it normally with nom.</p>\n"}], "owner": {"reputation": 1242, "user_id": 3252252, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/4V81y.jpg?s=128&g=1", "display_name": "Jesuspc", "link": "https://stackoverflow.com/users/3252252/jesuspc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 213, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1555703278, "creation_date": 1555231770, "last_edit_date": 1555246317, "question_id": 55673515, "link": "https://stackoverflow.com/questions/55673515/how-to-parse-a-slice-of-u16-input-with-nom", "title": "How to parse a slice of u16 input with nom?", "body": "<p>Given a raw input stream of <code>&amp;[u16]</code> how can I use nom to parse it taking into account that nom expects <code>&amp;str</code> as input?</p>\n\n<p>For instance, given the following data:</p>\n\n<pre><code>pub const RAW_INPUT: &amp;[u16] = &amp;[102, 111, 111];\n</code></pre>\n\n<p>I want to parse it into the string \"foo\".</p>\n"}, {"tags": ["rust", "mutability", "interior-mutability"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555218486, "post_id": 55671605, "comment_id": 98030189, "body": "Why your struct need to hold the reference to the file ? Why not just give it to them when you call encode ? <code>idEnc.encode(f, id);</code> <code>dataEnc.encode(f, data);</code> this allow more flexibility."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555218635, "post_id": 55671605, "comment_id": 98030204, "body": "&quot;This won&#39;t work because some encoders don&#39;t write to a std::io::Write, but to another NumericEncoder.&quot; that not clear. This could need a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 0, "creation_date": 1555227421, "post_id": 55671605, "comment_id": 98031606, "body": "&quot;This won&#39;t work because some encoders don&#39;t write to a std::io::Write, but to another NumericEncoder&quot; - so why not to implement <code>NumericEncoder</code> for <code>T: io::Write</code>? Then modify its signature to accept another <code>NumericEncoder</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555246559, "post_id": 55671605, "comment_id": 98036128, "body": "Idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Use <code>id_enc</code> / <code>data_enc</code> instead, please."}, {"owner": {"reputation": 2462, "user_id": 632555, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/f906d30709e12cc20c0d5b6a6c98d33d?s=128&d=identicon&r=PG", "display_name": "Alexander Staubo", "link": "https://stackoverflow.com/users/632555/alexander-staubo"}, "reply_to_user": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "edited": false, "score": 0, "creation_date": 1555258984, "post_id": 55671605, "comment_id": 98039819, "body": "These questions made me realize that I was not thinking the signature through. Even though some encoders write to another encoder, and not a <code>W</code>, I can of course make <code>W</code> part of the signature ( <code>encode(W, V)</code>), because encoders can just pass the writer argument to its next encoder instead of using it. This means encoder structs don&#39;t need to carry the writer with them. Thanks, @Laney and @Stargateur."}], "answers": [{"comments": [{"owner": {"reputation": 2462, "user_id": 632555, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/f906d30709e12cc20c0d5b6a6c98d33d?s=128&d=identicon&r=PG", "display_name": "Alexander Staubo", "link": "https://stackoverflow.com/users/632555/alexander-staubo"}, "edited": false, "score": 0, "creation_date": 1555260472, "post_id": 55675699, "comment_id": 98040284, "body": "Thanks, this gives me some stuff to read about! <code>PhantomData</code> wasn&#39;t so useful in that case, I guess, but I&#39;ve been using it elsewhere to avoid return-type type inference: I can create a concrete <code>SomeDecoder&lt;u32&gt;</code> var and know that <code>let v = decoder.decode()</code> always returns <code>io::Result&lt;u32&gt;</code>, instead of <code>let v: io::Result&lt;u32&gt; = decoder.decode()</code>. It seems that in <code>let v: u32 = decoder.decode()?</code>, Rust cannot infer the inner type variable of the <code>Result</code>, but I could be wrong. I get a compile error saying my function returns <code>()</code>. Same with type inference in <code>match decoder.decode()</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1555248187, "last_edit_date": 1555248187, "creation_date": 1555247737, "answer_id": 55675699, "question_id": 55671605, "link": "https://stackoverflow.com/questions/55671605/how-do-i-share-a-mutable-writer-between-multiple-encoders/55675699#55675699", "title": "How do I share a mutable writer between multiple &quot;encoders&quot;?", "body": "<blockquote>\n  <p>the only way to accomplish this is with a <code>RefCell</code></p>\n</blockquote>\n\n<p>Any type that grants <em>interior mutability</em> will work. For example, a <a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html\" rel=\"nofollow noreferrer\"><code>Mutex</code></a> is also sufficient.</p>\n\n<blockquote>\n  <p>this would make all the encoder implementations less clean</p>\n</blockquote>\n\n<p>I don't know why you believe that. Create a type that uses interior mutability and only use that type when you need that extra functionality:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Funnel&lt;E&gt;(Rc&lt;RefCell&lt;E&gt;&gt;);\n\nimpl&lt;E&gt; Funnel&lt;E&gt; {\n    fn new(e: E) -&gt; Self {\n        Funnel(Rc::new(RefCell::new(e)))\n    }\n}\n\nimpl&lt;E&gt; Clone for Funnel&lt;E&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        Funnel(self.0.clone())\n    }\n}\n\nimpl&lt;V, E&gt; NumericEncoder&lt;V&gt; for Funnel&lt;E&gt;\nwhere\n    E: NumericEncoder&lt;V&gt;,\n{\n    fn encode(&amp;mut self, value: V) -&gt; io::Result&lt;()&gt; {\n        self.0.borrow_mut().encode(value)\n    }\n}\n</code></pre>\n\n<pre><code>fn main() -&gt; io::Result&lt;()&gt; {\n    let s = Shared;\n\n    let s1 = Funnel::new(s);\n    let s2 = s1.clone();\n\n    let mut e1 = Wrapper(s1);\n    let mut e2 = Wrapper(s2);\n\n    e1.encode(1)?;\n    e2.encode(2)?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>You should also think about taking <code>W</code> by value, and I'm not sure why you need <code>PhantomData</code> \u2014 my code didn't.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39415052/155423\">Deriving a trait results in unexpected compiler error, but the manual implementation works</a></li>\n<li><a href=\"https://stackoverflow.com/q/51809603/155423\">Why does serde_json::from_reader take ownership of the reader?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35869078/155423\">If BufReader takes ownership of a stream, how can I read and write lines on it?</a></li>\n</ul>\n"}], "owner": {"reputation": 2462, "user_id": 632555, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/f906d30709e12cc20c0d5b6a6c98d33d?s=128&d=identicon&r=PG", "display_name": "Alexander Staubo", "link": "https://stackoverflow.com/users/632555/alexander-staubo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1555248187, "creation_date": 1555210702, "last_edit_date": 1555246488, "question_id": 55671605, "link": "https://stackoverflow.com/questions/55671605/how-do-i-share-a-mutable-writer-between-multiple-encoders", "title": "How do I share a mutable writer between multiple &quot;encoders&quot;?", "body": "<p>I'm implementing a data compression interface:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait NumericEncoder&lt;V&gt; {\n    fn encode(&amp;mut self, value: V) -&gt; io::Result&lt;()&gt;;\n}\n</code></pre>\n\n<p>An encoder can encode some number in some kind of output, where an output might be a stream (file), byte buffer or even another encoder. One might would invoke an implementation like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let f = File::create(\"out\").unwrap();\n// Delta encoder whose data is run-length-compressed\nlet mut enc = DeltaEncoder::new(RunLengthEncoder::new(f));\nenc.encode(123).unwrap();\n</code></pre>\n\n<p>That's all fine and good, but in some cases I need multiple encoders against the same output stream. Something like (simplified):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let f = File::create(\"out\")?;\nlet mut idEnc = RunLengthEncoder::new(DeltaEncoder::new(f));\nlet mut dataEnc = LZEncoder::new(f);\nfor (id, data) in input.iter() {\n    idEnc.encode(id);\n    dataEnc.encode(data);\n}\n</code></pre>\n\n<p>Here, two encoders would be interleaving their data as they're writing it.</p>\n\n<p>This needs mutable access to the same file, which isn't possible with straight <code>&amp;mut</code> references. From what I can tell, the only way to accomplish this is with a <code>RefCell</code>; is there a better way?</p>\n\n<p>As far as I can tell, this would make all the encoder implementations less clean. Right now an encoder can be declared like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct MySpecialEncoder&lt;'a, V, W&gt;\nwhere\n    W: io::Write,\n{\n    w: &amp;'a mut W,\n    phantom: std::marker::PhantomData&lt;V&gt;,\n}\n</code></pre>\n\n<p>With a <code>RefCell</code>, every encoder struct and constructor would need to deal with <code>Rc&lt;RefCell&lt;W&gt;&gt;</code>, which is not as nice and leaks the sharedness of the writer into the encoder, which shouldn't need to know that the writer is shared.</p>\n\n<p>(I did consider whether I could change the <code>NumericEncoder</code> trait to take a writer argument, which would have to be <code>std::io::Write</code>. This won't work because some encoders don't write to a <code>std::io::Write</code>, but to another <code>NumericEncoder</code>.)</p>\n"}, {"tags": ["loops", "rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 2, "creation_date": 1555196099, "post_id": 55670511, "comment_id": 98027398, "body": "What did you try with <code>.[in]to_owned()</code>/<code>.to_string()</code>? Something like this? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1927970778f73b8fc316a4723e7567ee\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 762, "user_id": 2959763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mnsXN.png?s=128&g=1", "display_name": "nert", "link": "https://stackoverflow.com/users/2959763/nert"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1555196582, "post_id": 55670511, "comment_id": 98027466, "body": "@Ry- No. First of all I did not know about <code>*in*to_owned()</code>, although it does work with to_string()` as well. Second of all I was most probably already overcomplicating at that point, so I guess I didn&#39;t try that (although from looking at it it makes sense, that&#39;s what I wanted)."}, {"owner": {"reputation": 601, "user_id": 1491934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3773fa5055856dcfd2b6760a07ac3f84?s=128&d=identicon&r=PG", "display_name": "Jayson Reis", "link": "https://stackoverflow.com/users/1491934/jayson-reis"}, "edited": false, "score": 0, "creation_date": 1616227691, "post_id": 55670511, "comment_id": 117940647, "body": "Check the answer for this as well, it allows you to avoid cloning the string if there were no changes <a href=\"https://stackoverflow.com/questions/66714868/how-to-call-regexes-in-a-loop-without-cloning-the-data\" title=\"how to call regexes in a loop without cloning the data\">stackoverflow.com/questions/66714868/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 762, "user_id": 2959763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mnsXN.png?s=128&g=1", "display_name": "nert", "link": "https://stackoverflow.com/users/2959763/nert"}, "edited": false, "score": 0, "creation_date": 1555197210, "post_id": 55670581, "comment_id": 98027572, "body": "I was probably already too sleepy and the workarounds were overcomplicated. I thought I tried what you and @Ry- suggested, byt clearly I didn&#39;t. It makes perfect sense as this is what I was trying to tell the compiler I&#39;m trying to achieve, but I was also trying things that I knew can&#39;t work. Anyway, thanks a lot."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1555196297, "creation_date": 1555196297, "answer_id": 55670581, "question_id": 55670511, "link": "https://stackoverflow.com/questions/55670511/how-to-modify-a-cow-variable-that-uses-itself-in-a-loop/55670581#55670581", "title": "How to modify a Cow variable that uses itself in a loop?", "body": "<blockquote>\n  <p><code>re.replace_all()</code> returns <code>Cow</code></p>\n</blockquote>\n\n<p>This is the root of the problem. The compiler knows that the return value might reference <code>output</code>, but is also will <em>replace</em> <code>output</code>, causing <code>output</code> to be dropped right away. If it allowed this, the reference would point to unallocated memory, leading to memory unsafety.</p>\n\n<p>The solution is to avoid borrowing at all. </p>\n\n<blockquote>\n  <p>tried using <code>.to_owned()</code> </p>\n</blockquote>\n\n<p><code>to_owned</code> on a <code>Cow</code> just returns the same <code>Cow</code>. Perhaps you meant <code>into_owned</code>?</p>\n\n<pre><code>let mut output = re.replace_all(&amp;input, \"\").into_owned();\nwhile re.is_match(&amp;output) {\n    output = re.replace_all(&amp;output, \"\").into_owned();\n}\n</code></pre>\n\n<blockquote>\n  <p>and <code>.to_string()</code> in a couple of places</p>\n</blockquote>\n\n<p>This works as well:</p>\n\n<pre><code>let mut output = re.replace_all(&amp;input, \"\").to_string();\nwhile re.is_match(&amp;output) {\n    output = re.replace_all(&amp;output, \"\").to_string();\n}\n</code></pre>\n\n<p>It's a shame that you didn't show your actual attempts at solving the problem, we could have helped you understand why they didn't work.</p>\n"}], "owner": {"reputation": 762, "user_id": 2959763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mnsXN.png?s=128&g=1", "display_name": "nert", "link": "https://stackoverflow.com/users/2959763/nert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 55670581, "answer_count": 1, "score": 1, "last_activity_date": 1555196481, "creation_date": 1555195650, "last_edit_date": 1555196481, "question_id": 55670511, "link": "https://stackoverflow.com/questions/55670511/how-to-modify-a-cow-variable-that-uses-itself-in-a-loop", "title": "How to modify a Cow variable that uses itself in a loop?", "body": "<p>I am trying to remove all the parentheses in a string.  Not thinking about it too hard, I just do a simple regexp replace (i.e. the problem in question is not particularly about getting rid of arbitrary levels of nested parentheses, but feel free to suggest a better way of doing that in a comment if you want).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use regex::Regex;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let input = \"Text (with some (nested) parentheses)!\";\n    let re = Regex::new(r\"\\([^()]*\\)\")?;\n\n    let output = re.replace_all(&amp;input, \"\");\n    let output = re.replace_all(&amp;output, \"\");\n    //    let output = re.replace_all(&amp;output, \"\");\n    //    let output = re.replace_all(&amp;output, \"\");\n    //    let output = re.replace_all(&amp;output, \"\");\n    //    let output = re.replace_all(&amp;output, \"\");\n    // ...\n\n    assert_eq!(\"Text !\", output);\n\n    println!(\"Works!\");\n\n    Ok(())\n}\n</code></pre>\n\n<p>Because I do not know how nested the parentheses will be, I need to do the replacement in a loop rather than repeating it \"just enough times\".  Creating a loop, however, creates a new scope and that's where I'm hitting a dead point in the discussion with the borrow checker.</p>\n\n<p>The simplest case that shows what I am trying to do in the loop would be:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let mut output = re.replace_all(&amp;input, \"\");\n    while re.is_match(&amp;output) {\n        output = re.replace_all(&amp;output, \"\");\n    }\n</code></pre>\n\n<p>However that cannot be done because I am assigning to a borrowed variable:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `output` because it is borrowed\n --&gt; src/main.rs:9:9\n  |\n9 |         output = re.replace_all(&amp;output, \"\");\n  |         ^^^^^^                  ------- borrow of `output` occurs here\n  |         |\n  |         assignment to borrowed `output` occurs here\n  |         borrow later used here\n</code></pre>\n\n<p>What I would like to do, ideally, is to create new variable binding with the same name, but using <code>let output =</code> will shadow the outer variable binding, so the loop would cycle infinitely.</p>\n\n<p>No matter what inner or outer temporary variable I create I cannot make it do what I want.  I also tried using the fact that <code>re.replace_all()</code> returns <code>Cow</code> and tried using <code>.to_owned()</code> and <code>.to_string()</code> in a couple of places, but that didn't help either.</p>\n\n<p>Here's a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=14740dae9ef0de022ab8d0555a102293\" rel=\"nofollow noreferrer\">link to a playground</a>.</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 71, "user_id": 3072719, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/LESKH.jpg?s=128&g=1", "display_name": "AlterionX", "link": "https://stackoverflow.com/users/3072719/alterionx"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555191085, "post_id": 55670018, "comment_id": 98026341, "body": "I mean the lack of <code>use</code> as the lack of imports. I used the fully qualified names on all the types @Shepmaster"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555191236, "post_id": 55670018, "comment_id": 98026380, "body": "But, why actively go out of your way to make it harder for us to read?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555191304, "post_id": 55670018, "comment_id": 98026402, "body": "TL;DR the duplicates: <code>cb_w: Weak&lt;Mutex&lt;FnMut() + Send&gt;&gt;</code>."}, {"owner": {"reputation": 71, "user_id": 3072719, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/LESKH.jpg?s=128&g=1", "display_name": "AlterionX", "link": "https://stackoverflow.com/users/3072719/alterionx"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555191415, "post_id": 55670018, "comment_id": 98026425, "body": "@Shepmaster Thanks! Also, I&#39;ll remember to use <code>use</code> next time."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555191446, "post_id": 55670018, "comment_id": 98026438, "body": "And for the next error: <code>Ok(mut cb_lg) =&gt; (&amp;mut *cb_lg)()</code>"}], "owner": {"reputation": 71, "user_id": 3072719, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/LESKH.jpg?s=128&g=1", "display_name": "AlterionX", "link": "https://stackoverflow.com/users/3072719/alterionx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 458, "favorite_count": 0, "closed_date": 1555191274, "answer_count": 0, "score": 0, "last_activity_date": 1555191289, "creation_date": 1555190737, "last_edit_date": 1555191214, "question_id": 55670018, "link": "https://stackoverflow.com/questions/55670018/send-fnmut-to-other-thread-by-wrapping-it-into-a-weakmutexfnmut-complains-ab", "closed_reason": "Duplicate", "title": "Send FnMut to other thread by wrapping it into a Weak&lt;Mutex&lt;FnMut&gt;&gt; complains about missing Send", "body": "<p>I'm trying to write a simple Observer-pattern-ish thing with events and callbacks. The idea is that when the thing owning the mutating function dies (<code>struct Obj {cb: Arc&lt;Mutex&lt;FnMut&gt;&gt;, .. }</code>), it drops the <code>Arc</code>. After that, any <code>Weak</code> references will be (effectively) dead and can be detected on access. I was ALSO hoping that this would decouple the <code>FnMut</code> from <code>Thread</code>'s <code>'static</code> lifetime. I might need to wrap the whole thing in another <code>Arc&lt;Rwlock&lt;T&gt;&gt;</code> to prevent the <code>Weak</code> references from doing thread unsafe stuff, but that's a different problem.</p>\n\n<p>The closest solution I've gotten was this: <a href=\"https://stackoverflow.com/questions/30930547/how-can-i-send-a-function-to-another-thread\">How can I send a function to another thread?</a></p>\n\n<p>However, I seem to have the <code>Arc&lt;Mutex&lt;T&gt;&gt;</code> and adding lifetimes (I may have done that wrong, though) didn't seem to help. I'm kind of lost as to what is actually wrong.</p>\n\n<p>I wrote a minimal example:</p>\n\n<pre><code>use std::{\n    collections::HashMap,\n    sync::{\n        mpsc::{self, Receiver},\n        Arc, Mutex, Weak,\n    },\n    thread::{self, JoinHandle},\n};\n\nstruct Callback {\n    cb_w: Weak&lt;Mutex&lt;FnMut()&gt;&gt;,\n}\n\ntype FnMapping = Arc&lt;HashMap&lt;String, Callback&gt;&gt;;\n\nfn start_thread&lt;'a&gt;(rx: Receiver&lt;String&gt;, mapping: FnMapping) -&gt; JoinHandle&lt;()&gt; {\n    thread::spawn(move || {\n        match rx.recv() {\n            Ok(v) =&gt; {\n                if let Some(o) = mapping.get(&amp;v) {\n                    match o.cb_w.upgrade() {\n                        Some(cb_m) =&gt; match cb_m.lock() {\n                            Ok(cb_lg) =&gt; (*cb_lg)(),\n                            Err(e) =&gt; (),\n                        },\n                        None =&gt; { /* TODO owner is gone, mark for delete */ }\n                    }\n                }\n            }\n            Err(e) =&gt; (),\n        }\n    })\n}\n\nfn main() {\n    let mapping: FnMapping = Arc::new(HashMap::new());\n    let (tx, rx) = mpsc::channel();\n    drop(tx);\n    start_thread(rx, mapping)\n        .join()\n        .expect(\"Could not join thread -- failed to terminate?\");\n    println!(\"Leaving the test bay.\");\n}\n</code></pre>\n\n<p>This fails to compile with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `(dyn std::ops::FnMut() + 'static)` cannot be sent between threads safely\n  --&gt; src/main.rs:17:5\n   |\n17 |     thread::spawn(move || {\n   |     ^^^^^^^^^^^^^ `(dyn std::ops::FnMut() + 'static)` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `(dyn std::ops::FnMut() + 'static)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Mutex&lt;(dyn std::ops::FnMut() + 'static)&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Weak&lt;std::sync::Mutex&lt;(dyn std::ops::FnMut() + 'static)&gt;&gt;`\n   = note: required because it appears within the type `Callback`\n   = note: required because it appears within the type `(std::string::String, Callback)`\n   = note: required because it appears within the type `std::marker::PhantomData&lt;(std::string::String, Callback)&gt;`\n   = note: required because it appears within the type `std::collections::hash::table::RawTable&lt;std::string::String, Callback&gt;`\n   = note: required because it appears within the type `std::collections::HashMap&lt;std::string::String, Callback&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;std::collections::HashMap&lt;std::string::String, Callback&gt;&gt;`\n   = note: required because it appears within the type `[closure@src/main.rs:17:19: 32:6 rx:std::sync::mpsc::Receiver&lt;std::string::String&gt;, mapping:std::sync::Arc&lt;std::collections::HashMap&lt;std::string::String, Callback&gt;&gt;]`\n   = note: required by `std::thread::spawn`\n</code></pre>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1555189061, "post_id": 55669730, "comment_id": 98025851, "body": "This seems like a mix-up between a trait&#39;s parameter types and a trait&#39;s associated types. You would want the type <code>I</code> to be an associated type instead, but even after that you would be facing the <a href=\"https://stackoverflow.com/q/30422177/1233251\">streaming iterator problem</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555190707, "post_id": 55669730, "comment_id": 98026245, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/53085270/155423\">How do I implement a trait with a generic method?</a> and <a href=\"https://stackoverflow.com/q/30422177/155423\">How do I write an iterator that returns references to itself?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55669730/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555195684, "post_id": 55669730, "comment_id": 98027325, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e68cafe17009e59a39172054802b2935\" rel=\"nofollow noreferrer\">The duplicate applied to your case</a>. You may also be interested in <a href=\"https://doc.rust-lang.org/std/iter/trait.IntoIterator.html\" rel=\"nofollow noreferrer\"><code>IntoIterator</code></a>"}], "owner": {"reputation": 703, "user_id": 8458083, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9e6ca7ced7bd1272973fe4fa22f90971?s=128&d=identicon&r=PG&f=1", "display_name": "Pierre-olivier Gendraud", "link": "https://stackoverflow.com/users/8458083/pierre-olivier-gendraud"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1555195445, "answer_count": 0, "score": 0, "last_activity_date": 1555190279, "creation_date": 1555188408, "last_edit_date": 1555190279, "question_id": 55669730, "link": "https://stackoverflow.com/questions/55669730/how-to-implement-a-generic-trait-with-a-generic-type-implementing-iterator", "closed_reason": "Duplicate", "title": "How to implement a generic trait with a generic type implementing Iterator?", "body": "<p>I'm implementing the trait <code>Vector</code>. This trait has several methods including <code>iter</code> which returns an iterator. </p>\n\n<pre><code>pub trait Vector&lt;T, I: Iterator&lt;Item = T&gt;&gt; {\n    // several functions\n    fn iter(&amp;self) -&gt; I;\n}\n</code></pre>\n\n<p><code>VectorImplementation1</code> implements <code>Vector</code>:</p>\n\n<pre><code>pub struct VectorImplementation1&lt;T, I: Iterator&gt; {\n    numbers: Vec&lt;T&gt;,\n    phantom: std::marker::PhantomData&lt;I&gt;, //otherwise error because I not used\n}\n\nimpl&lt;T, I: Iterator&lt;Item = T&gt;&gt; VectorImplementation1&lt;T, I&gt; {\n    // constructor\n}\n\nimpl&lt;T, I: Iterator&lt;Item = T&gt;&gt; Vector&lt;T, I&gt; for VectorImplementation1&lt;T, I&gt; {\n    // several functions\n    fn iter(&amp;self) -&gt; I {\n        self.numbers.iter()\n    }\n}\n</code></pre>\n\n<p>The compiler returns an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:18:9\n   |\n17 |     fn iter(&amp;self) -&gt; I {\n   |                       - expected `I` because of return type\n18 |         self.numbers.iter()\n   |         ^^^^^^^^^^^^^^^^^^^ expected type parameter, found struct `std::slice::Iter`\n   |\n   = note: expected type `I`\n              found type `std::slice::Iter&lt;'_, T&gt;`\n</code></pre>\n\n<p>Apparently <code>std::slice::Iter</code> (the type returned by <code>iter</code>) doesn't implement <code>Iterator</code>.</p>\n\n<p>What trait can I use if I can't use <code>Iterator</code>? Must I do something  different?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 197, "user_id": 6802376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DsJ1r.png?s=128&g=1", "display_name": "flmng0", "link": "https://stackoverflow.com/users/6802376/flmng0"}, "edited": false, "score": 0, "creation_date": 1555168218, "post_id": 55666880, "comment_id": 98020278, "body": "The 0.0 is an artifact from just implementing it for f32. Forgetting about it made the issue much more difficult. This answer works perfectly, however. So thank you very much for your fast reply."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": true, "score": 3, "last_activity_date": 1555175796, "last_edit_date": 1555175796, "creation_date": 1555167920, "answer_id": 55666880, "question_id": 55666707, "link": "https://stackoverflow.com/questions/55666707/how-do-i-bind-the-output-type-of-operator-traits-in-rust/55666880#55666880", "title": "How do I bind the `Output` type of operator traits in Rust?", "body": "<p>Generics with primitives is not so simple. Fixing the first error reveals other errors because you compare <code>T</code> with <code>0.0</code>. There are many ways to fix these problems; here's one way using <a href=\"https://docs.rs/num/0.2.0/num/index.html\" rel=\"nofollow noreferrer\"><code>num</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use num::{Signed, Zero};\nuse std::ops::Rem;\n\nfn modulo&lt;T&gt;(num: T, det: T) -&gt; T\nwhere\n    T: Rem&lt;Output = T&gt;,\n    T: PartialOrd,\n    T: Zero,\n    T: Signed,\n    T: Copy,\n{\n    let num = num % det;\n    if num &lt; T::zero() {\n        num + det.abs()\n    } else {\n        num\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 197, "user_id": 6802376, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DsJ1r.png?s=128&g=1", "display_name": "flmng0", "link": "https://stackoverflow.com/users/6802376/flmng0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "closed_date": 1555175699, "accepted_answer_id": 55666880, "answer_count": 1, "score": 0, "last_activity_date": 1555175820, "creation_date": 1555166724, "last_edit_date": 1555175756, "question_id": 55666707, "link": "https://stackoverflow.com/questions/55666707/how-do-i-bind-the-output-type-of-operator-traits-in-rust", "closed_reason": "Duplicate", "title": "How do I bind the `Output` type of operator traits in Rust?", "body": "<p>I want to use the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Rem;\n\nfn modulo&lt;T: PartialOrd + Rem&gt;(num: T, det: T) -&gt; T {\n    let num = num % det;\n    if num &lt; 0.0 {\n        num + det.abs()\n    } else {\n        num\n    }\n}\n</code></pre>\n\n<p>This is just generalized code taken from the experimental <code>euclidean_division</code> feature. The error provided is along the lines of:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0369]: binary operation `&lt;` cannot be applied to type `&lt;T as std::ops::Rem&gt;::Output`\n --&gt; src/lib.rs:5:8\n  |\n5 |     if num &lt; 0.0 {\n  |        ^^^^^^^^^\n  |\n  = note: an implementation of `std::cmp::PartialOrd` might be missing for `&lt;T as std::ops::Rem&gt;::Output`\n\nerror[E0599]: no method named `abs` found for type `T` in the current scope\n --&gt; src/lib.rs:6:19\n  |\n6 |         num + det.abs()\n  |                   ^^^\n\nerror[E0369]: binary operation `+` cannot be applied to type `&lt;T as std::ops::Rem&gt;::Output`\n --&gt; src/lib.rs:6:9\n  |\n6 |         num + det.abs()\n  |         ^^^^^^^^^^^^^^^\n  |\n  = note: an implementation of `std::ops::Add` might be missing for `&lt;T as std::ops::Rem&gt;::Output`\n\nerror[E0308]: mismatched types\n --&gt; src/lib.rs:8:9\n  |\n3 | fn modulo&lt;T: PartialOrd + Rem&gt;(num: T, det: T) -&gt; T {\n  |                                                   - expected `T` because of return type\n...\n8 |         num\n  |         ^^^ expected type parameter, found associated type\n  |\n  = note: expected type `T`\n             found type `&lt;T as std::ops::Rem&gt;::Output`\n</code></pre>\n\n<p>Obviously the output of <code>Rem::rem</code> should be the same type as <code>T</code>, but the compiler doesn't know that, I assume.</p>\n\n<p>Is there a way to solve this issue, or should I just implement it per type the same way it does in the nightly edition?</p>\n"}, {"tags": ["windows", "path", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1555157282, "post_id": 55665098, "comment_id": 98017224, "body": "Have you actually tried this on Windows? The playground runs on Linux, on which those paths are just two regular files, without a directory component, and neither is a base of the other. Your example <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=302408d10517429e8bc9f901e37a3c9e\" rel=\"nofollow noreferrer\">does work with forward slashes on the playground</a>."}, {"owner": {"reputation": 4945, "user_id": 341510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9162e8bca37c48433207c1fccfb3bba1?s=128&d=identicon&r=PG", "display_name": "chucksmash", "link": "https://stackoverflow.com/users/341510/chucksmash"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1555185907, "post_id": 55665098, "comment_id": 98025039, "body": "Generally when I ask &quot;does this tool used by thousands have an obvious bug or am I missing something,&quot; I start from the assumption that I am missing something :). I think @mcarton has it right."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555187641, "post_id": 55665098, "comment_id": 98025478, "body": "<i>I was not able to get any reasonable details</i> \u2014  Why are you deliberately throwing away any error details with <code>.map_err(|_| ())</code>?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555187682, "post_id": 55665098, "comment_id": 98025488, "body": "I&#39;ve tested \u2014 this code works perfectly fine <b>on Windows</b>. It prints out <code>Result: Ok(&quot;site&quot;)</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555199201, "post_id": 55665098, "comment_id": 98027906, "body": "@Shepmaster that was also my first thought, but to be fair, even with the <code>map_err</code>, the message isn&#39;t that useful, as it only prints <code>Err(StripPrefixError(()))</code>."}, {"owner": {"reputation": 3668, "user_id": 2392960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549fcc9b00c4ce0ede36ede98548729?s=128&d=identicon&r=PG", "display_name": "Januson", "link": "https://stackoverflow.com/users/2392960/januson"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1555237828, "post_id": 55665098, "comment_id": 98033862, "body": "@mcarton I didn&#39;t. I don&#39;t have Windows machine at hand currently."}, {"owner": {"reputation": 3668, "user_id": 2392960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549fcc9b00c4ce0ede36ede98548729?s=128&d=identicon&r=PG", "display_name": "Januson", "link": "https://stackoverflow.com/users/2392960/januson"}, "reply_to_user": {"reputation": 4945, "user_id": 341510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9162e8bca37c48433207c1fccfb3bba1?s=128&d=identicon&r=PG", "display_name": "chucksmash", "link": "https://stackoverflow.com/users/341510/chucksmash"}, "edited": false, "score": 0, "creation_date": 1555237979, "post_id": 55665098, "comment_id": 98033901, "body": "@chucksmash That was my assumption as well. That&#39;s why I asked."}, {"owner": {"reputation": 3668, "user_id": 2392960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549fcc9b00c4ce0ede36ede98548729?s=128&d=identicon&r=PG", "display_name": "Januson", "link": "https://stackoverflow.com/users/2392960/januson"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555237982, "post_id": 55665098, "comment_id": 98033904, "body": "@Shepmaster Just as a demonstration of the result. Unwrapping example and output was there as well."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555207511, "post_id": 55670821, "comment_id": 98028942, "body": "<i>As the Playground runs on Linux</i> \u2014 as the primary maintainer of the Playground, I can assert this is true. <i>technically be possible to host it on Windows</i> \u2014 that&#39;s an unwelcome can of worms at the moment ;-)"}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 1, "last_activity_date": 1555199382, "last_edit_date": 1555199382, "creation_date": 1555199052, "answer_id": 55670821, "question_id": 55665098, "link": "https://stackoverflow.com/questions/55665098/stripping-a-windows-path-prefix/55670821#55670821", "title": "Stripping a Windows path prefix", "body": "<p>As the document of <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html\" rel=\"nofollow noreferrer\"><code>std::path::Path</code></a> says:</p>\n\n<blockquote>\n  <p>This type supports a number of operations for inspecting a path, including breaking the path into its components (<strong>separated by <code>/</code> on Unix and by either <code>/</code> or <code>\\</code> on Windows</strong>), extracting the file name, determining whether the path is absolute, and so on.</p>\n</blockquote>\n\n<p>(emphasis is mine)</p>\n\n<p>This means that on Linux, <code>\\</code> will not be recognized as a path separator, and therefore, <code>C:\\Users\\me</code> and <code>C:\\\\Users\\me\\site</code> are just filenames, in the current directory. On Linux, <code>\\</code> is indeed not a special character in filenames:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ mkdir foo\n$ cd foo\n$ touch 'C:\\Users\\me'\n$ ls -l\ntotal 0\n-rw-r--r-- 1 martin martin 0 Apr 14 01:47 'C:\\Users\\me'\n</code></pre>\n\n<p>As the Playground runs on Linux (<a href=\"https://github.com/integer32llc/rust-playground/tree/master/deployment\" rel=\"nofollow noreferrer\">as hinted by the fact that there is no deployment information for Windows</a>, although it might technically be possible to host it on Windows as well), your code cannot work there.</p>\n\n<p>However on Windows, <a href=\"https://stackoverflow.com/questions/55665098/stripping-a-windows-path-prefix?noredirect=1#comment98025488_55665098\">it works as expected</a>.</p>\n"}], "owner": {"reputation": 3668, "user_id": 2392960, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a549fcc9b00c4ce0ede36ede98548729?s=128&d=identicon&r=PG", "display_name": "Januson", "link": "https://stackoverflow.com/users/2392960/januson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 55670821, "answer_count": 1, "score": 1, "last_activity_date": 1555199382, "creation_date": 1555156014, "last_edit_date": 1555199120, "question_id": 55665098, "link": "https://stackoverflow.com/questions/55665098/stripping-a-windows-path-prefix", "title": "Stripping a Windows path prefix", "body": "<p>I am trying to strip a prefix from Windows path. I attempted to do this using the <a href=\"https://doc.rust-lang.org/std/path/struct.Path.html#method.strip_prefix\" rel=\"nofollow noreferrer\"><code>strip_prefix</code></a> method but it fails. You can try it out at the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=924c55d1b2f3f4a1e813e0fa3e65bdac\" rel=\"nofollow noreferrer\">Rust Playground</a>. I was not able to get any reasonable details as to why this failed even with <code>RUST_BACKTRACE=full</code>. </p>\n\n<pre><code>use std::path::Path;\n\nfn main() {\n    let pwd = Path::new(r#\"C:\\Users\\me\"#);\n    let path = Path::new(r#\"C:\\Users\\me\\site\"#);\n    let result = path.strip_prefix(pwd).map_err(|_| ());\n    println!(\"Result: {:?}\", result); // Result: Err(())\n    path.strip_prefix(pwd).unwrap();\n}\n</code></pre>\n\n<p>Is this a bug or am I missing something?</p>\n\n<p>Result with <code>RUST_BACKTRACE=full</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Result: Err(())\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: StripPrefixError(())', src/libcore/result.rs:997:5\nstack backtrace:\n\n0: 0x55f339d5eb53 - std::sys::unix::backtrace::tracing::imp::unwind_backtrace::hf8722b0178fb1b63\n    at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:39\n1: 0x55f339d5aa68 - std::sys_common::backtrace::_print::hc40139e5f1d656ee\n    at src/libstd/sys_common/backtrace.rs:70\n2: 0x55f339d5daa2 - std::panicking::default_hook::{{closure}}::h993d43465919c16a\n    at src/libstd/sys_common/backtrace.rs:58\n    at src/libstd/panicking.rs:200\n3: 0x55f339d5d814 - std::panicking::default_hook::h73d2c2ec3d9ba5a4\n    at src/libstd/panicking.rs:215\n4: 0x55f339d5e100 - std::panicking::rust_panic_with_hook::h744417edfe714d72\n    at src/libstd/panicking.rs:478\n5: 0x55f339d5dc81 - std::panicking::continue_panic_fmt::h3557b3c3fa21b47b\n    at src/libstd/panicking.rs:385\n6: 0x55f339d5db65 - rust_begin_unwind\n    at src/libstd/panicking.rs:312\n7: 0x55f339d6e0cc - core::panicking::panic_fmt::h74ee8034b317ceed\n    at src/libcore/panicking.rs:85\n8: 0x55f339d536fd - core::result::unwrap_failed::h3406097ad0bd8fc9\n    at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858/src/libcore/macros.rs:16\n9: 0x55f339d53429 - &lt;core::result::Result&lt;T, E&gt;&gt;::unwrap::hac51cf7638922ce6\n    at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858/src/libcore/result.rs:798\n10: 0x55f339d53e89 - g::main::h131de6fc3bc2b7fb\n    at src/main.rs:8\n11: 0x55f339d538df - std::rt::lang_start::{{closure}}::h68e0b763dc36e392\n    at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858/src/libstd/rt.rs:64\n12: 0x55f339d5db52 - std::panicking::try::do_call::h7a0381557c6c2cee\n    at src/libstd/rt.rs:49\n    at src/libstd/panicking.rs:297\n13: 0x55f339d5faa9 - __rust_maybe_catch_panic\n    at src/libpanic_unwind/lib.rs:92\n14: 0x55f339d5e655 - std::rt::lang_start_internal::he0d8d06abc6f912f\n    at src/libstd/panicking.rs:276\n    at src/libstd/panic.rs:388\n    at src/libstd/rt.rs:48\n15: 0x55f339d538b8 - std::rt::lang_start::h565ec575e9c57feb\n    at /rustc/2aa4c46cfdd726e97360c2734835aa3515e8c858/src/libstd/rt.rs:64\n16: 0x55f339d53ec9 - main\n17: 0x7f59a6820412 - __libc_start_main\n18: 0x55f339d531fd - _start\n19: 0x0 - &lt;unknown&gt;\n</code></pre>\n"}, {"tags": ["pointers", "rust", "unsafe"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1555161806, "post_id": 55664870, "comment_id": 98018519, "body": "Does <a href=\"https://stackoverflow.com/questions/48882391/what-are-the-semantics-for-dereferencing-raw-pointers\">What are the semantics for dereferencing raw pointers?</a> answer your question?"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1555163721, "post_id": 55664870, "comment_id": 98019048, "body": "@trentcl That helps a lot, thanks! But I don&#39;t think it completely answers my question. For one, that answer doesn&#39;t mention variance at all (the one thing, I know for sure is relevant here). I feel like the answer you linked should absolutely be linked in an answer answering this question. But yeah, I don&#39;t think it completely answers this question."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1555167724, "post_id": 55664870, "comment_id": 98020161, "body": "For one, you can&#39;t assign to the dereference of a <code>*const T</code>."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 6, "last_activity_date": 1555419287, "last_edit_date": 1555419287, "creation_date": 1555251677, "answer_id": 55676302, "question_id": 55664870, "link": "https://stackoverflow.com/questions/55664870/what-are-the-differences-between-const-t-and-mut-t-raw-pointers/55676302#55676302", "title": "What are the differences between `*const T` and *mut T` raw pointers?", "body": "<h3>Differences between <code>*const T</code> and <code>*mut T</code></h3>\n\n<p>The main difference between mutable and const raw pointer is, not surprisingly, whether dereferencing them yields a mutable or immutable place expression. Dereferencing a const pointer yields an immutable <a href=\"https://doc.rust-lang.org/reference/expressions.html#place-expressions-and-value-expressions\" rel=\"noreferrer\">place expression</a>, dereferencing a mutable pointer yields a mutable one. The implications of mutability <a href=\"https://doc.rust-lang.org/reference/expressions.html#mutability\" rel=\"noreferrer\">according to the language reference</a> are this:</p>\n\n<blockquote>\n  <p>For a place expression to be assigned to, mutably borrowed, implicitly mutably borrowed, or bound to a pattern containing <code>ref mut</code> it must be mutable.</p>\n</blockquote>\n\n<p>The other difference between const and mutable pointers is the variance of the types, as you already noted, and I think that's all there is.</p>\n\n<h3>Casting between mutable and const pointers</h3>\n\n<p>You can cast a <code>*const T</code> to a <code>*mut T</code> in safe code, since the difference in mutability only becomes relevant once you dereference the pointers, and dereferencing a raw pointer is an unsafe operation anyway. Without casting to a mutable pointer, you cannot get a mutable place expression for the memory a const pointer points to.</p>\n\n<p>One reason Rust can be a bit more relaxed about mutability for raw pointers is that it does not make any assumptions about aliasing for raw pointers, in contrast to references. See <a href=\"https://stackoverflow.com/questions/48882391/what-are-the-semantics-for-dereferencing-raw-pointers\">What are the semantics for dereferencing raw pointers?</a> for further details.</p>\n\n<h3>Why is <code>NonNull</code> using <code>*const T</code>?</h3>\n\n<p>The <code>NonNull</code> pointer type is used as a building block for smart pointers like <code>Box</code> and <code>Rc</code>. These types expose interfaces that follow the usual Rust rules for references \u2013 mutation of the pointee is only possible through ownership of or a mutable reference to the smart pointer itself, and a shared reference to the pointee can only be obtained by borrowing the smart pointer itself. This means it is safe for these types to be covariant, which is only possible if <code>NonNull</code> is covariant, which in turn means we need to use a <code>*const T</code> rather than a <code>*mut T</code>.</p>\n\n<h3>Why does the language include two different kinds of pointers if they are so similar?</h3>\n\n<p>Let's think about the alternative. If there was only a single pointer type, it would necessarily need to be the mutable pointer \u2013 otherwise we'd be unable to modify anything through a raw pointer. But that pointer type would also need to be covariant, since otherwise we'd be unable to build covariant smart pointer types. (It's always possible to  give up covariance by including a <code>PhantomData&lt;some invariant type&gt;</code> in a struct, but once your struct is rendered invariant by one of its members, there is no way to make it covariant again.) Since mutable references are invariant, the behaviour of this imaginary pointer type would be somewhat surprising.</p>\n\n<p>Having two different pointer types, on the other hand, allows for a nice analogy to references: const pointers are covariant and dereference to immutable place expressions, just like shared references, and mutable pointers are invariant and dereference to mutable place expressions, just like mutable references.</p>\n\n<p>I can only speculate whether these were the actual reasons for the design of the language, since I could not find any discussion on the topic, but the decision doesn't seem unreasonable to me.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1624, "favorite_count": 4, "accepted_answer_id": 55676302, "answer_count": 1, "score": 14, "last_activity_date": 1555419287, "creation_date": 1555154234, "last_edit_date": 1555163363, "question_id": 55664870, "link": "https://stackoverflow.com/questions/55664870/what-are-the-differences-between-const-t-and-mut-t-raw-pointers", "title": "What are the differences between `*const T` and *mut T` raw pointers?", "body": "<p>I'm writing some unsafe Rust code so I need to know the exact differences between <code>*const T</code> and <code>*mut T</code>. I assumed that it's like <code>&amp;T</code> and <code>&amp;mut T</code> (i.e. you just can't mutate <code>T</code> through <code>&amp;T</code>, period), but that doesn't seem to be the case! </p>\n\n<p>For example, the pointer wrapper <code>NonNull&lt;T&gt;</code> is defined as follows (<a href=\"https://github.com/rust-lang/rust/blob/aa35e73b258789d93b080e361542d7aa99e7fcd6/src/libcore/ptr.rs#L2936-L2938\" rel=\"noreferrer\">source</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct NonNull&lt;T: ?Sized&gt; {\n    pointer: *const T,\n}\n</code></pre>\n\n<p>However, it's possible to obtain a <code>*mut T</code> from this wrapper via <a href=\"https://doc.rust-lang.org/stable/std/ptr/struct.NonNull.html#method.as_ptr\" rel=\"noreferrer\"><code>as_ptr</code></a>, which is just defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub const fn as_ptr(self) -&gt; *mut T {\n    self.pointer as *mut T\n}\n</code></pre>\n\n<p>The function is not even marked as <code>unsafe</code>! I am not allowed to cast from <code>&amp;T</code> to <code>&amp;mut T</code> (for a good reason!), but apparently casting pointers like that is fine. </p>\n\n<p>The Nomicon mentions in <a href=\"https://doc.rust-lang.org/nomicon/subtyping.html#variance\" rel=\"noreferrer\">the chapter about variance</a> that <code>*const T</code> and <code>*mut T</code> differ in variance:</p>\n\n<blockquote>\n  <ul>\n  <li><code>*const T</code>: covariant</li>\n  <li><code>*mut T</code>: invariant</li>\n  </ul>\n</blockquote>\n\n<p>Is this the only difference between the pointer types? That would seem strange to me...</p>\n\n<hr>\n\n<p><strong>What exactly are the differences between the pointer types?</strong> Are there restrictions for <code>*const T</code> that <code>*mut T</code> doesn't have? If the differences are minimal: what are additional reasons to include both pointer types in the language?</p>\n"}, {"tags": ["module", "rust", "decorator"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1555147032, "post_id": 55663699, "comment_id": 98014994, "body": "Hi there! Unfortunately, I am really confused by your question. So you want to add function pointers to a <code>Vec</code>, ok. You don&#39;t want to push them one by one (why?), but via a loop, ok. Why don&#39;t you use a loop then? What has all of this to do with decorators? Also: please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> (particularly, we have no idea what <code>Arg</code> is. Also: <code>validate_incomplete</code>, the <code>Rules</code> wrapper and the different modules seem completely irrelevant to the main question). Could you try to explain your problem differently/with more detail?"}, {"owner": {"reputation": 91, "user_id": 7857104, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/793ed0627d2e6e844d229e9561f07542?s=128&d=identicon&r=PG&f=1", "display_name": "Ward", "link": "https://stackoverflow.com/users/7857104/ward"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1555147220, "post_id": 55663699, "comment_id": 98015043, "body": "If i would use a loop, how would the loop know which functions to select from the rule.rs file if I can&#39;t give them a decorator? I do not wan&#39;t to push them line by line with .push, because there would be more than 20..."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 1, "creation_date": 1555155640, "post_id": 55663699, "comment_id": 98016861, "body": "This is precisely what the <code>#[test]</code> annotations for the test-suite do, but they are special cased in the compiler, and while a generalization was proposed for custom test frameworks, it is still constrained to test suites."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555162855, "post_id": 55663699, "comment_id": 98018825, "body": "See also <a href=\"https://stackoverflow.com/q/39266001/155423\">How to introspect all available methods &amp; members in Rust?</a>; <a href=\"https://stackoverflow.com/q/32678845/155423\">How can I statically register structures at compile time?</a>; <a href=\"https://stackoverflow.com/q/50786312/155423\">How can I provide a custom test attribute?</a>;"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555162694, "post_id": 55664170, "comment_id": 98018779, "body": "I don&#39;t think that procedural macros would even work here, as there&#39;s no way for them to &quot;build up&quot; a vector across the separate invocations. You&#39;d have to wrap the <i>entire file</i> in the macro for it to work, I believe. See also <a href=\"https://stackoverflow.com/questions/55663699/how-to-include-a-list-of-functions-from-another-module-with-decorator#comment98016861_55663699\">Jan Hudec&#39;s comment</a>, which mentions the current hack."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555162712, "post_id": 55664170, "comment_id": 98018789, "body": "WDYTA duplicate of <a href=\"https://stackoverflow.com/q/39266001/155423\">How to introspect all available methods &amp; members in Rust?</a>"}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555163306, "post_id": 55664170, "comment_id": 98018941, "body": "@Shepmaster Good point about proc macros. I guess it would be possible with dirty hacks, but yeah, I agree. About duplicate: it doesn&#39;t fit perfectly (as this question has a specific goal: creating a vector of function pointers), but I wouldn&#39;t mind closing this as dupe."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 2, "last_activity_date": 1555148980, "creation_date": 1555148980, "answer_id": 55664170, "question_id": 55663699, "link": "https://stackoverflow.com/questions/55663699/how-to-create-a-vector-of-all-decorated-functions-from-a-specific-module/55664170#55664170", "title": "How to create a vector of all decorated functions from a specific module?", "body": "<p>Rust does not have the same reflection features as Python. In particular, you cannot iterate through all functions of a module at runtime. At least you can't do that with builtin tools. It is possible to write so called <em>procedural macros</em> which let you add custom attributes to your functions, e.g. <code>#[rule_decorator] fn foo() { ... }</code>. With proc macros, you can do almost anything.</p>\n\n<p><strong>However</strong>, using proc macros for this is way too over-engineered (in my opinion). In your case, I would simply list all functions to be included in your vector:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn test_constraint1(arg: u32) -&gt; bool {\n    arg &lt; 29_500\n} \nfn test_constraint2(arg: u32) -&gt; bool {\n    arg &lt; 35_000\n}\n\nfn main() {\n    let rules = vec![test_constraint1 as fn(_) -&gt; _, test_constraint2];\n\n    // Or, if you already have a vector and need to add to it:\n    let mut rules = Vec::new();\n    rules.extend_from_slice(\n        &amp;[test_constraint1 as fn(_) -&gt; _, test_constraint2]\n    );\n}\n</code></pre>\n\n<p>A few notes about this code:</p>\n\n<ul>\n<li>I replaced <code>&amp;Arg</code> with <code>u32</code>, because it doesn't have anything to do with the problem. Please omit unnecessary details from questions on StackOverflow.</li>\n<li>I used <code>_</code> in the number literals to increase readability.</li>\n<li>The strange <code>as fn(_) -&gt; _</code> cast is sadly necessary. You can read more about it in <a href=\"https://stackoverflow.com/questions/27895946/expected-fn-item-found-a-different-fn-item-when-working-with-function-pointer\">this question</a>.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1565296138, "creation_date": 1565296138, "answer_id": 57420135, "question_id": 55663699, "link": "https://stackoverflow.com/questions/55663699/how-to-create-a-vector-of-all-decorated-functions-from-a-specific-module/57420135#57420135", "title": "How to create a vector of all decorated functions from a specific module?", "body": "<p>You can, with some tweaks and restrictions, achieve your goals. You'll need to use the <a href=\"https://crates.io/crates/inventory\" rel=\"nofollow noreferrer\">inventory crate</a>. This is <strong>limited to Linux, macOS and Windows</strong> at the moment.</p>\n\n<p>You can then use <code>inventory::submit</code> to add values to a global registry, <code>inventory::collect</code> to build the registry, and <code>inventory::iter</code> to iterate over the registry.</p>\n\n<p>Due to language restrictions, you cannot create a registry for values of a type that you do not own, which includes the raw function pointer. We will need to create a <em>newtype</em> called <code>Predicate</code> to use the crate:</p>\n\n<pre><code>use inventory; // 0.1.3\n\nstruct Predicate(fn(&amp;u32) -&gt; bool);\ninventory::collect!(Predicate);\n\nstruct Rules;\n\nimpl Rules {\n    fn validate_incomplete(&amp;self, arg: &amp;u32) -&gt; bool {\n        inventory::iter::&lt;Predicate&gt;\n            .into_iter()\n            .all(|Predicate(constraint)| constraint(arg))\n    }\n}\n\nmod rules {\n    use super::Predicate;\n\n    pub fn test_constraint1(arg: &amp;u32) -&gt; bool {\n        *arg &lt; 29500\n    }\n    inventory::submit!(Predicate(test_constraint1));\n\n    pub fn test_constraint2(arg: &amp;u32) -&gt; bool {\n        *arg &lt; 35000\n    }\n    inventory::submit!(Predicate(test_constraint2));\n}\n\nfn main() {\n    if Rules.validate_incomplete(&amp;42) {\n        println!(\"valid\");\n    } else {\n        println!(\"invalid\");\n    }\n}\n</code></pre>\n\n<p>There are a few more steps you'd need to take to reach your originally-stated goal:</p>\n\n<ul>\n<li><p>\"a vector\"</p>\n\n<p>You can <code>collect</code> from the provided iterator to build a <code>Vec</code>.</p></li>\n<li><p>\"decorated functions\"</p>\n\n<p>You can write your own procedural macro that will call <code>inventory::submit!(Predicate(my_function_name));</code> for you.</p></li>\n<li><p>\"from a specific module\"</p>\n\n<p>You can add <a href=\"https://doc.rust-lang.org/std/macro.module_path.html\" rel=\"nofollow noreferrer\">the module name</a> into the <code>Predicate</code> struct and filter on that later.</p></li>\n</ul>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32678845/155423\">How can I statically register structures at compile time?</a></li>\n</ul>\n"}], "owner": {"reputation": 91, "user_id": 7857104, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/793ed0627d2e6e844d229e9561f07542?s=128&d=identicon&r=PG&f=1", "display_name": "Ward", "link": "https://stackoverflow.com/users/7857104/ward"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 436, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1565296138, "creation_date": 1555145617, "last_edit_date": 1555182361, "question_id": 55663699, "link": "https://stackoverflow.com/questions/55663699/how-to-create-a-vector-of-all-decorated-functions-from-a-specific-module", "title": "How to create a vector of all decorated functions from a specific module?", "body": "<p>I have a file <code>main.rs</code> and a file <code>rule.rs</code>. I want to define functions in <code>rule.rs</code> to be included in the <code>Rules::rule</code> vector without having to push them one by one. I'd prefer a loop to push them.</p>\n\n<p><strong>main.rs</strong>:</p>\n\n<pre><code>struct Rules {\n    rule: Vec&lt;fn(arg: &amp;Arg) -&gt; bool&gt;,\n}\n\nimpl Rules {\n    fn validate_incomplete(self, arg: &amp;Arg) -&gt; bool {\n        // iterate through all constraints and evaluate, if false return and stop\n        for constraint in self.incomplete_rule_constraints.iter() {\n            if !constraint(&amp;arg) {\n                return false;\n            }\n        }\n        true\n    }\n}\n</code></pre>\n\n<p><strong>rule.rs</strong>:</p>\n\n<pre><code>pub fn test_constraint1(arg: &amp;Arg) -&gt; bool {\n    arg.last_element().total() &lt; 29500\n}\n\npub fn test_constraint2(arg: &amp;Arg) -&gt; bool {\n    arg.last_element().total() &lt; 35000\n}\n</code></pre>\n\n<p><code>Rules::rule</code> should be populated with <code>test_constraint1</code> and <code>test_constraint2</code>.</p>\n\n<p>In Python, I could add a decorator <code>@rule_decorator</code> above the constraints which you want to be included in the <code>Vec</code>, but I don't see an equivalent in Rust.</p>\n\n<p>In Python, I could use <code>dir(module)</code> to see all available methods/attributes.</p>\n\n<p>Python variant:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>class Rules:\n\n    def __init__(self, name: str):\n        self.name = name\n        self.rule = []\n\n        for member in dir(self):\n            method = getattr(self, member)\n            if \"rule_decorator\" in dir(method):\n                self.rule.append(method)\n\n    def validate_incomplete(self, arg: Arg):\n        for constraint in self.incomplete_rule_constraints:\n            if not constraint(arg):\n                return False\n        return True\n</code></pre>\n\n<p>With the rule.py file:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>@rule_decorator\ndef test_constraint1(arg: Arg):\n    return arg.last_element().total() &lt; 29500\n\n@rule_decorator\ndef test_constraint1(arg: Arg):\n    return arg.last_element().total() &lt; 35000\n</code></pre>\n\n<p>All functions with a <code>rule_decorator</code> are added to the <code>self.rule</code> list and checked off by the <code>validate_incomplete</code> function.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 3523, "user_id": 9043475, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FNxvn.jpg?s=128&g=1", "display_name": "Rajagopalan", "link": "https://stackoverflow.com/users/9043475/rajagopalan"}, "edited": false, "score": 1, "creation_date": 1555137007, "post_id": 55662578, "comment_id": 98012925, "body": "Ah! Okay, thanks. Hi actually My requirement is, I wanted to run a command via <code>Command::new</code> For an example, typing <code>dir</code> in the command prompt will list out all the directories. How can I execute that command via this? If I type in my command prompt <code>ruby -e &quot;puts &#39;raja&#39;&quot;</code> it would print <code>raja</code>, Now I wanted to execute the same line through <code>Command.new</code> and when I execute that line it has to print &#39;raja&#39;, how do I that?"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 3523, "user_id": 9043475, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FNxvn.jpg?s=128&g=1", "display_name": "Rajagopalan", "link": "https://stackoverflow.com/users/9043475/rajagopalan"}, "edited": false, "score": 0, "creation_date": 1555138636, "post_id": 55662578, "comment_id": 98013250, "body": "For how to use <code>std::process::Command</code>, I recommend reading the documentation I linked. <a href=\"https://stackoverflow.com/a/25574952/4639273\">This answer</a> may also be enlightening. To print whatever that command sent to <code>stdout</code> and <code>stderr</code>, you can use the <code>stdout</code> and <code>stderr</code> fields on <code>the_output</code>. Just note that this data is kept as a <code>Vec&lt;u8&gt;</code>, so you&#39;ll have to convert it using something like <code>String::from_utf8</code>. If you&#39;re still confused, try asking a new question."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 1, "last_activity_date": 1555162581, "last_edit_date": 1555162581, "creation_date": 1555135652, "answer_id": 55662578, "question_id": 55662435, "link": "https://stackoverflow.com/questions/55662435/how-to-use-stdiocommand/55662578#55662578", "title": "How to use `std::io::Command`", "body": "<p>There isn't a <code>std::io::Command</code>. You were probably thinking of <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow noreferrer\"><code>std::process::Command</code></a>.</p>\n"}], "owner": {"reputation": 3523, "user_id": 9043475, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FNxvn.jpg?s=128&g=1", "display_name": "Rajagopalan", "link": "https://stackoverflow.com/users/9043475/rajagopalan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 55662578, "answer_count": 1, "score": -3, "last_activity_date": 1555162581, "creation_date": 1555134329, "last_edit_date": 1555161548, "question_id": 55662435, "link": "https://stackoverflow.com/questions/55662435/how-to-use-stdiocommand", "title": "How to use `std::io::Command`", "body": "<p>I am trying to execute the following code in Rust:</p>\n\n<pre><code>use std::io::Command;\n\nfn main() {\n    let the_output = Command::new(\"ruby\").arg([\"-e\", \"puts 'raja'\", \"x\"]).output()\n}\n</code></pre>\n\n<p>But it throws this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0432]: unresolved import `std::io::Command`\n --&gt; src\\main.rs:1:5\n  |\n1 | use std::io::Command;\n  |     ^^^^^^^^^^^^^^^^ no `Command` in `io`\n</code></pre>\n\n<p>Can someone guide me how to import this <code>use std::io::Command;</code> into my program? </p>\n"}, {"tags": ["rust", "constants"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1555134261, "post_id": 55662327, "comment_id": 98012444, "body": "For the future: <b><i>Always</i></b> include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. This means, that your code should be able to compile (unless you have an error in your code that you want us to solve). <b>But</b> all needed, externals should be included as well as all definition of structs, mods, etc. Please see the <a href=\"https://stackoverflow.com/tags/rust/info\">rust info tag</a> and the section <i>Producing a Minimal, Complete, Verifiable example for Rust code</i>. It contains very valuable information."}, {"owner": {"reputation": 694, "user_id": 1406186, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/efcdbad6895719edb74597d135ecbb91?s=128&d=identicon&r=PG", "display_name": "user1406186", "link": "https://stackoverflow.com/users/1406186/user1406186"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555134378, "post_id": 55662327, "comment_id": 98012459, "body": "Thanks, am I missing something else? I&#39;m not sure what else to add? I&#39;m new to rust sorry"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 2, "creation_date": 1555134490, "post_id": 55662327, "comment_id": 98012477, "body": "First of, for your actual problem <code>year</code>, <code>volume</code>, <code>amendment</code> are not necessary. You could just leave them out. Next <code>book_content_node::book_content_node</code> is not defined, nor needed. Just replace it by something simple like <code>u32</code>."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1555147702, "post_id": 55662327, "comment_id": 98015165, "body": "@user1406186 Additionally, the next time you ask on StackOverflow, please tell us what you tried. This question doesn&#39;t show any attempt to actually solve the problem. Show us what you tried and what error occurred. That way, it&#39;s way easier for people to help you and for future visitors to understand your problem."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 2, "last_activity_date": 1555161580, "last_edit_date": 1555161580, "creation_date": 1555134581, "answer_id": 55662454, "question_id": 55662327, "link": "https://stackoverflow.com/questions/55662327/how-to-initialize-a-btreemap-within-a-const-struct/55662454#55662454", "title": "How to initialize a BTreeMap within a const struct?", "body": "<p>You can't. As of Rust 1.34.0, there is no function marked with <code>const</code> for <code>BTreeMap</code>. That's why you can't define a <code>const BtreeMap</code> at all.</p>\n\n<p>The only way would be a static variable and the usage of the <a href=\"https://crates.io/crates/lazy_static\" rel=\"nofollow noreferrer\"><code>lazy_static</code> crate</a>.</p>\n\n<pre><code>use lazy_static::lazy_static; // 1.3.0\nuse std::collections::BTreeMap;\n\nlazy_static! {\n    static ref BOOK1: Book = Book {\n        year: 2019,\n        volume: 1,\n        amendment: 0,\n        contents: BTreeMap::new()\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 694, "user_id": 1406186, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/efcdbad6895719edb74597d135ecbb91?s=128&d=identicon&r=PG", "display_name": "user1406186", "link": "https://stackoverflow.com/users/1406186/user1406186"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 467, "favorite_count": 0, "closed_date": 1555161789, "answer_count": 1, "score": 1, "last_activity_date": 1555161822, "creation_date": 1555133154, "last_edit_date": 1555161748, "question_id": 55662327, "link": "https://stackoverflow.com/questions/55662327/how-to-initialize-a-btreemap-within-a-const-struct", "closed_reason": "Duplicate", "title": "How to initialize a BTreeMap within a const struct?", "body": "<p>How do I initialize a <code>BTreeMap</code> within a <code>const</code> struct?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::BTreeMap;\n\nstruct Book {\n    year: u16,\n    volume: u8,\n    amendment: u8,\n    contents: BTreeMap&lt;String, String&gt;,\n}\n\nconst BOOK1: Book = Book {\n    year: 2019,\n    volume: 1,\n    amendment: 0,\n    contents: BTreeMap::new(), // Issue here\n};\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n  --&gt; src/lib.rs:14:15\n   |\n14 |     contents: BTreeMap::new(),\n   |               ^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1555107650, "post_id": 55659731, "comment_id": 98008623, "body": "You only init <code>flags</code>, not <code>mbinfo</code>. Why not construct a <code>multiboot_info</code> properly ? Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, this question need it."}, {"owner": {"reputation": 1788, "user_id": 481232, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/Lh1e2.jpg?s=128&g=1", "display_name": "hfingler", "link": "https://stackoverflow.com/users/481232/hfingler"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1555110135, "post_id": 55659731, "comment_id": 98009114, "body": "Because it&#39;s generated by bindgen from a large linux header file, reimplementing it would be a waste of effort. Added MWE to question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555115144, "post_id": 55659731, "comment_id": 98009949, "body": "The word <b>Minimal</b> in <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> is just as important as the other words. The fact that your code cannot even be included on Stack Overflow is a really good sign that it&#39;s not <b>minimal</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555115261, "post_id": 55659731, "comment_id": 98009972, "body": "Your playground code does not produce the error you are asking about \u2014 not only is it not <i>minimal</i>, it&#39;s not <b>verifiable</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555115379, "post_id": 55659731, "comment_id": 98009985, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/34377051/155423\">Initializing sigset_t in Rust</a>; <a href=\"https://stackoverflow.com/q/46578050/155423\">Why does the compiler warn about an uninitialized variable even though I&#39;ve assigned each field of that variable?</a>; <a href=\"https://stackoverflow.com/q/45371062/155423\">Is it possible to mark a potentially uninitialized variable as good without using unsafe or panicking?</a>. If you disagree, please <b><a href=\"https://stackoverflow.com/posts/55659731/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1788, "user_id": 481232, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/Lh1e2.jpg?s=128&g=1", "display_name": "hfingler", "link": "https://stackoverflow.com/users/481232/hfingler"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1555144511, "post_id": 55659731, "comment_id": 98014446, "body": "@Shepmaster first one probably fixes it and it doesn&#39;t show on my google search for the error, thanks."}], "answers": [{"tags": [], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "is_accepted": false, "score": 2, "last_activity_date": 1555114942, "last_edit_date": 1555114942, "creation_date": 1555110731, "answer_id": 55660504, "question_id": 55659731, "link": "https://stackoverflow.com/questions/55659731/getting-use-of-possibly-uninitialized-variable-for-a-struct-member-while-expli/55660504#55660504", "title": "Getting &quot;use of possibly uninitialized variable&quot; for a struct member while explicitly initializing it", "body": "<pre class=\"lang-none prettyprint-override\"><code>error[E0381]: assign to part of possibly uninitialized variable: `mbinfo`\n    --&gt; src/lib.rs:1178:4\n     |\n1178 |    mbinfo.flags = 0;\n     |    ^^^^^^^^^^^^^^^^ use of possibly uninitialized `mbinfo`\n</code></pre>\n\n<p>The compiler tells you the exact problem: you are trying to work with an uninitialized struct. You are trying to initialize only one field of struct, Rust doesn't allow that.</p>\n\n<p><code>multiboot_info</code> doesn't implement the <code>Default</code> trait, so you need to figure out how to create it using its API.</p>\n"}], "owner": {"reputation": 1788, "user_id": 481232, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/Lh1e2.jpg?s=128&g=1", "display_name": "hfingler", "link": "https://stackoverflow.com/users/481232/hfingler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1305, "favorite_count": 0, "closed_date": 1555163132, "answer_count": 1, "score": -2, "last_activity_date": 1555163188, "creation_date": 1555104960, "last_edit_date": 1555110194, "question_id": 55659731, "link": "https://stackoverflow.com/questions/55659731/getting-use-of-possibly-uninitialized-variable-for-a-struct-member-while-expli", "closed_reason": "Duplicate", "title": "Getting &quot;use of possibly uninitialized variable&quot; for a struct member while explicitly initializing it", "body": "<p>Here's the error I'm getting:</p>\n\n<pre><code>error[E0381]: use of possibly uninitialized variable: `mbinfo.flags`\n   --&gt; kernel/src/loader/mod.rs:256:20\n    |\n256 |     mbinfo.flags = mbinfo.flags | multiboot::MULTIBOOT_INFO_CMDLINE;\n    |                    ^^^^^^^^^^^^ use of possibly uninitialized `mbinfo.flags`\n</code></pre>\n\n<p>and this is the code:</p>\n\n<pre><code>let mut mbinfo: multiboot::multiboot_info;\nmbinfo.flags = 0 as u32;\nmbinfo.flags = mbinfo.flags | multiboot::MULTIBOOT_INFO_CMDLINE\n</code></pre>\n\n<p>Even though I am explicitly initializing it, I get the error. I've tried making the struct derive Default, but the problem is that the struct contains unions, and when I try to derive Default, I get </p>\n\n<pre><code>error: this trait cannot be derived for unions \n</code></pre>\n\n<p>Any easy way out? Thanks.</p>\n\n<p>The multiboot module was auto generated by bindgen from a header file.</p>\n\n<p>MWE on Rust Playground, code is at the end:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=464b7fb21fc75a54618b14619076d152\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=464b7fb21fc75a54618b14619076d152</a></p>\n"}, {"tags": ["http", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555079722, "post_id": 55653917, "comment_id": 97996745, "body": "So you do not care <i>whatsoever</i> what the format of the returned JSON is? Just so long as it&#39;s something that counts as JSON?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1555080537, "last_edit_date": 1555080537, "creation_date": 1555080070, "answer_id": 55654131, "question_id": 55653917, "link": "https://stackoverflow.com/questions/55653917/how-to-serialize-httpheadermap-into-json/55654131#55654131", "title": "How to serialize http::HeaderMap into JSON?", "body": "<p>There is no \"proper\" way to do so. Just like there's no \"proper\" way to automatically implement <code>Display</code> for a struct, there's no One True Way to serialize some piece of data to JSON.</p>\n\n<p>If all you need is to get <em>something</em> that counts as JSON, and since this is for debugging, I'd just print out the debug form of the headers and then convert it into a <a href=\"https://docs.rs/serde_json/1.0.39/serde_json/enum.Value.html\" rel=\"noreferrer\"><code>Value</code></a>:</p>\n\n<pre><code>use http::{header::HeaderValue, HeaderMap}; // 0.1.17\nuse serde_json; // 1.0.39 \n\nfn convert(headers: &amp;HeaderMap&lt;HeaderValue&gt;) -&gt; serde_json::Value {\n    format!(\"{:?}\", headers).into()\n}\n</code></pre>\n\n<p>If you want something a bit more structured, you can (lossily!) convert the headers to a <code>HashMap&lt;String, Vec&lt;String&gt;&gt;</code>. This type can be trivially serialized to a JSON object:</p>\n\n<pre><code>use http::{header::HeaderValue, HeaderMap}; // 0.1.17\nuse std::collections::HashMap;\n\nfn convert(headers: &amp;HeaderMap&lt;HeaderValue&gt;) -&gt; HashMap&lt;String, Vec&lt;String&gt;&gt; {\n    let mut header_hashmap = HashMap::new();\n    for (k, v) in headers {\n        let k = k.as_str().to_owned();\n        let v = String::from_utf8_lossy(v.as_bytes()).into_owned();\n        header_hashmap.entry(k).or_insert_with(Vec::new).push(v)\n    }\n    header_hashmap\n}\n</code></pre>\n"}], "owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 322, "favorite_count": 0, "accepted_answer_id": 55654131, "answer_count": 1, "score": 3, "last_activity_date": 1555080537, "creation_date": 1555079370, "last_edit_date": 1555079577, "question_id": 55653917, "link": "https://stackoverflow.com/questions/55653917/how-to-serialize-httpheadermap-into-json", "title": "How to serialize http::HeaderMap into JSON?", "body": "<p>What is the proper way of serializing HTTP request headers (<a href=\"https://docs.rs/http/0.1.15/http/struct.HeaderMap.html\" rel=\"nofollow noreferrer\"><code>http::HeaderMap</code></a>) into JSON in Rust?</p>\n\n<p>I am implementing an AWS Lambda function and I would like to have a simple echo function for debugging.</p>\n\n<pre><code>use lambda_http::{lambda, IntoResponse, Request};\nuse lambda_runtime::{error::HandlerError, Context};\nuse log::{self, info};\nuse simple_logger;\nuse std::error::Error;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    simple_logger::init_with_level(log::Level::Debug)?;\n    info!(\"Starting up...\");\n    lambda!(handler);\n\n    return Ok(());\n}\n\nfn handler(req: Request, ctx: Context) -&gt; Result&lt;impl IntoResponse, HandlerError&gt; {\n    Ok(format!(\"{}\", req.headers()).into_response())\n}\n</code></pre>\n\n<p>Is there an easy way to convert <code>req.headers()</code> to JSON and return?</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1555076359, "post_id": 55652824, "comment_id": 97994496, "body": "If you are able to change the <code>my_method</code> signature, you could write it as <code>fn my_method(prm: impl Borrow&lt;BorrowedStruct&gt;)</code> and accept both by-value and by-reference."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1555076387, "post_id": 55652824, "comment_id": 97994520, "body": "Note: Static methods are usually called <a href=\"https://doc.rust-lang.org/book/ch05-03-method-syntax.html#associated-functions\" rel=\"nofollow noreferrer\"><i>associated functions</i></a> in Rust."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1555076755, "post_id": 55652824, "comment_id": 97994767, "body": "@rodrigo, could you please share a reference what makes differ in between <code>&amp;BorrowedStruct</code> and <code>impl Borrow&lt;BorrowedStruct&gt;</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1555076955, "post_id": 55652824, "comment_id": 97994892, "body": "Sure! The <a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html\" rel=\"nofollow noreferrer\">official documentation</a> is at the same time complete and confusing (at least for me). The TL;DR; thing is that <code>Borrow&lt;T&gt;</code> is implemente both for <code>T</code> and for <code>&amp;T</code>, and even for <code>Cow&lt;&#39;a,T&gt;</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1555077690, "post_id": 55652824, "comment_id": 97995404, "body": "Additionally, the fact that it&#39;s an associated function has no bearing here \u2014 the same question is true of regular functions."}], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 1, "creation_date": 1555077956, "post_id": 55653241, "comment_id": 97995549, "body": "Nice one but actually instead of this i&#39;d prefer calling it explicitly in closure, <code>.for_each(|x|MyStruct::my_method(&amp;x));</code>"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1555078651, "post_id": 55653241, "comment_id": 97996048, "body": "@&#214;merErden: Sure, I prefer your option, too. But the OP ask explicitly how to simplify this code. You can argue that my answer does not simplify the code, but it actually <i>complicates</i> it..."}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1555079001, "post_id": 55653241, "comment_id": 97996286, "body": "@rodrigo, I personally prefer that keep the code as it is as &#214;mer Erden&#39;s suggestion. Imho, writing such kind of specific functions for ref taking means a little boilerplate to me"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 1, "last_activity_date": 1555077754, "last_edit_date": 1555077754, "creation_date": 1555077171, "answer_id": 55653241, "question_id": 55652824, "link": "https://stackoverflow.com/questions/55652824/can-a-function-that-takes-a-reference-be-passed-as-a-closure-argument-that-will/55653241#55653241", "title": "Can a function that takes a reference be passed as a closure argument that will provide owned values?", "body": "<p>I don't think there is a <code>for_each_ref</code> in trait <code>Iterator</code> yet. But you can write your own quite easily <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=95851de847e73b28c6eb5d4f94f0f029\" rel=\"nofollow noreferrer\">(playground)</a>:</p>\n\n<pre><code>trait MyIterator {\n    fn for_each_ref&lt;F&gt;(self, mut f: F)\n    where\n        Self: Iterator + Sized,\n        F: FnMut(&amp;Self::Item),\n    {\n        self.for_each(|x| f(&amp;x));\n    }\n}\nimpl&lt;I: Iterator&gt; MyIterator for I {}\n</code></pre>\n\n<pre><code>borrowed_structs\n    .into_iter()\n    .for_each_ref(MyStruct::my_method);\n</code></pre>\n\n<p>Another option, if you are able to change the prototype of the <code>my_method</code> function you can make it accept the value either by value or by reference with borrow:</p>\n\n<pre><code>impl MyStruct {\n    fn my_method(prm: impl Borrow&lt;BorrowedStruct&gt;) {\n        let prm = prm.borrow();\n        prm.say_hello();\n    }\n}\n</code></pre>\n\n<p>And then your original code with <code>.for_each(MyStruct::my_method)</code> just works.</p>\n\n<p>A third option is to use a generic wrapper function <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3f8d8c26a8fca34625b2c0891307ccac\" rel=\"nofollow noreferrer\">(playground)</a>:</p>\n\n<pre><code>fn bind_by_ref&lt;T&gt;(mut f: impl FnMut(&amp;T)) -&gt; impl FnMut(T) {\n    move |x| f(&amp;x)\n}\n</code></pre>\n\n<p>And then call the wrapped function with <code>.for_each(bind_by_ref(MyStruct::my_method));</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1555078195, "creation_date": 1555078195, "answer_id": 55653556, "question_id": 55652824, "link": "https://stackoverflow.com/questions/55652824/can-a-function-that-takes-a-reference-be-passed-as-a-closure-argument-that-will/55653556#55653556", "title": "Can a function that takes a reference be passed as a closure argument that will provide owned values?", "body": "<p>The answer to your general question is <strong>no</strong>. Types must match exactly when passing a function as a closure argument.</p>\n\n<p>There are one-off workarounds, as shown in <a href=\"https://stackoverflow.com/a/55653241/155423\">rodrigo's answer</a>, but the general solution is to simply take the reference yourself, as you've done:</p>\n\n<pre><code>something_taking_a_closure(|owned_value| some_function_or_method(&amp;owned_value))\n</code></pre>\n\n<p>I actually <a href=\"https://internals.rust-lang.org/t/ergonomics-initiative-discussion-allowing-owned-values-where-references-are-expected/5161/2\" rel=\"nofollow noreferrer\">advocated for this case about two years ago</a> as part of ergonomics revamp, but no one else seemed interested.</p>\n\n<hr>\n\n<p>In your <em>specific</em> case, you can remove the type from the closure argument to make it more succinct:</p>\n\n<pre><code>.for_each(|consumed_struct| MyStruct::my_method(&amp;consumed_struct))\n</code></pre>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 55653556, "answer_count": 2, "score": 1, "last_activity_date": 1555078195, "creation_date": 1555075908, "last_edit_date": 1555077614, "question_id": 55652824, "link": "https://stackoverflow.com/questions/55652824/can-a-function-that-takes-a-reference-be-passed-as-a-closure-argument-that-will", "title": "Can a function that takes a reference be passed as a closure argument that will provide owned values?", "body": "<p>I am trying to simplify my closures, but I had a problem converting my closure to a reference to an associated function when the parameter is owned by the closure but the inner function call only expects a reference.</p>\n\n<pre><code>#![deny(clippy::pedantic)]\n\nfn main() {\n    let borrowed_structs = vec![BorrowedStruct, BorrowedStruct];\n\n    //Selected into_iter specifically to reproduce the minimal scenario that closure gets value instead of reference\n    borrowed_structs\n        .into_iter()\n        .for_each(|consumed_struct: BorrowedStruct| MyStruct::my_method(&amp;consumed_struct));\n    // I want to write it with static method reference like following line:\n    // for_each(MyStruct::my_method);\n}\n\nstruct MyStruct;\nstruct BorrowedStruct;\n\nimpl MyStruct {\n    fn my_method(prm: &amp;BorrowedStruct) {\n        prm.say_hello();\n    }\n}\n\nimpl BorrowedStruct {\n    fn say_hello(&amp;self) {\n        println!(\"hello\");\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b3adb8d44250b65dfc33dd53509e860f\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>Is it possible to simplify this code:</p>\n\n<pre><code>into_iter().for_each(|consumed_struct: BorrowedStruct| MyStruct::my_method(&amp;consumed_struct));\n</code></pre>\n\n<p>To the following:</p>\n\n<pre><code>into_iter().for_each(MyStruct::my_method)\n</code></pre>\n\n<p>Note that <code>into_iter</code> here is only to reproduce to scenario that I own the value in my closure. I know that <code>iter</code> can be used in such scenario but it is not the real scenario that I am working on.</p>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1555052376, "post_id": 55646068, "comment_id": 97981576, "body": "Does this help <a href=\"https://stackoverflow.com/questions/22596920/split-a-module-across-several-files\" title=\"split a module across several files\">stackoverflow.com/questions/22596920/&hellip;</a> ?"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 3, "creation_date": 1555055740, "post_id": 55646068, "comment_id": 97983079, "body": "Please don&#39;t name a module <code>lib</code>. That could create confusion, because <code>lib.rs</code> is the root of a library crate."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1555055932, "post_id": 55646068, "comment_id": 97983166, "body": "By removing <code>pub mod lib;</code> you effectively remove all the code, so the error disappears."}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 3, "last_activity_date": 1555058891, "last_edit_date": 1555058891, "creation_date": 1555056198, "answer_id": 55647077, "question_id": 55646068, "link": "https://stackoverflow.com/questions/55646068/confused-about-rust-modules/55647077#55647077", "title": "Confused about rust modules", "body": "<p>The help that compiler says is very meaningful. \nWhen you write <code>pub mod first;</code> inside of a <code>lib.rs</code> it checks for the <code>first.rs</code> file or <code>first</code> folder inside a <code>lib</code> folder and a <code>mod.rs</code> file. </p>\n\n<p>Please note that <code>mod.rs</code> usages are changed with Rust 2018. <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html#no-more-modrs\" rel=\"nofollow noreferrer\">Reference</a></p>\n\n<blockquote>\n  <p>Now, if I remove  pub mod lib  from main.rs, everything compiles fine.</p>\n</blockquote>\n\n<p>When you remove <code>pub mod lib;</code> from your main, </p>\n\n<p>You basically say that this code will not be used in production therefore it is not needed to compile even. So basically the code will not included to compile. </p>\n\n<p>This is why it works when you remove the <code>pub mod lib;</code></p>\n"}], "owner": {"reputation": 2932, "user_id": 7212809, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VlOyJEUeeSc/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jExBae7iJ2ALFtcMj_6BCoHGTMgw/mo/photo.jpg?sz=128", "display_name": "nz_21", "link": "https://stackoverflow.com/users/7212809/nz-21"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 519, "favorite_count": 0, "accepted_answer_id": 55647077, "answer_count": 1, "score": 1, "last_activity_date": 1555067645, "creation_date": 1555052135, "last_edit_date": 1555067645, "question_id": 55646068, "link": "https://stackoverflow.com/questions/55646068/confused-about-rust-modules", "title": "Confused about rust modules", "body": "<p>I have three files in <code>src/</code>, like so:</p>\n\n<p>lib.rs</p>\n\n<pre><code>pub mod first\n</code></pre>\n\n<p>first.rs</p>\n\n<pre><code>fn hello() {}\n</code></pre>\n\n<p>main.rs</p>\n\n<pre><code>pub mod lib\n</code></pre>\n\n<p>This gives me an error saying:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0583]: file not found for module `first`\n --&gt; src/lib.rs:1:9\n  |\n1 | pub mod first;\n  |         ^^^^^\n  |\n  = help: name the file either lib/first.rs or lib/first/mod.rs inside the directory \"src\"\n</code></pre>\n\n<p>Now, if I remove <code>pub mod lib</code> from <code>main.rs</code>, everything compiles fine. </p>\n\n<p>I don't understand why this is happening.</p>\n"}, {"tags": ["rust", "template-engine", "zola", "tera"], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1555019579, "post_id": 55640432, "comment_id": 97973646, "body": "Could you explain a little more about what is the difference? Is <code>paginator</code> a special term in Zola or is it a variable in your code?"}, {"owner": {"reputation": 2683, "user_id": 3540057, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wr61M.jpg?s=128&g=1", "display_name": "6754534367", "link": "https://stackoverflow.com/users/3540057/6754534367"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1555049233, "post_id": 55640432, "comment_id": 97980254, "body": "@PeterHall I&#39;m unsure, I&#39;ve been delving into Zola/Tera and this is what I came up with after checking out how a working theme managed to do it: <a href=\"https://github.com/shalzz/butler/blob/master/templates/blog.html\" rel=\"nofollow noreferrer\">github.com/shalzz/butler/blob/master/templates/blog.html</a> I think it has to do with the fact it&#39;s a &#39;paginated&#39; section but I can&#39;t find &#39;paginator&#39; in any of the docs..."}, {"owner": {"reputation": 9070, "user_id": 2044940, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/4d65c0da49dc5452127a8365226b31a4?s=128&d=identicon&r=PG", "display_name": "CodeManX", "link": "https://stackoverflow.com/users/2044940/codemanx"}, "edited": false, "score": 1, "creation_date": 1578999713, "post_id": 55640432, "comment_id": 105613865, "body": "<code>paginator</code> is described in the Templates section under Pagination: <a href=\"https://www.getzola.org/documentation/templates/pagination/\" rel=\"nofollow noreferrer\">getzola.org/documentation/templates/pagination</a>"}], "tags": [], "owner": {"reputation": 2683, "user_id": 3540057, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wr61M.jpg?s=128&g=1", "display_name": "6754534367", "link": "https://stackoverflow.com/users/3540057/6754534367"}, "is_accepted": true, "score": 2, "last_activity_date": 1579002230, "last_edit_date": 1579002230, "creation_date": 1555013501, "answer_id": 55640432, "question_id": 55640410, "link": "https://stackoverflow.com/questions/55640410/how-can-i-iterate-over-the-posts-of-a-section-using-zola/55640432#55640432", "title": "How can I iterate over the posts of a section using Zola?", "body": "<p>The correct way to iterate over a paginated section is as following:</p>\n\n<pre><code>{% for post in paginator.pages %}\n  &lt;h1&gt;&lt;a href=\"{{ post.permalink }}\"&gt;{{ post.title }}&lt;/a&gt;&lt;/h1&gt;\n{% endfor %}\n</code></pre>\n\n<p><code>paginator</code> is described in the Templates section under Pagination: <a href=\"https://www.getzola.org/documentation/templates/pagination/\" rel=\"nofollow noreferrer\">getzola.org/documentation/templates</a>.</p>\n\n<p>A paginated section gets the same section variable as a normal section page minus its pages. The pages are instead in <code>paginator.pages</code>.</p>\n"}], "owner": {"reputation": 2683, "user_id": 3540057, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/wr61M.jpg?s=128&g=1", "display_name": "6754534367", "link": "https://stackoverflow.com/users/3540057/6754534367"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 1, "accepted_answer_id": 55640432, "answer_count": 1, "score": 3, "last_activity_date": 1579002230, "creation_date": 1555013396, "last_edit_date": 1556139886, "question_id": 55640410, "link": "https://stackoverflow.com/questions/55640410/how-can-i-iterate-over-the-posts-of-a-section-using-zola", "title": "How can I iterate over the posts of a section using Zola?", "body": "<p>I tried the following, which I found in the Zola documentation but it didn't render anything. The Tera docs weren't rewarding either.</p>\n\n<pre><code>{% for post in section.pages %}\n  &lt;h1&gt;&lt;a href=\"{{ post.permalink }}\"&gt;{{ post.title }}&lt;/a&gt;&lt;/h1&gt;\n{% endfor %}\n</code></pre>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1555006995, "post_id": 55637959, "comment_id": 97968800, "body": "Do you want to check it during run-time or compile-time?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1555009385, "post_id": 55637959, "comment_id": 97969799, "body": "<i>but on construction</i> \u2014 so it&#39;s acceptable for the type to no longer conform to the constraints <b>after</b> construction? <i>behaves like <code>String</code></i> \u2014  In which <b>exact</b> manners? Should you be able to convert it into an iterator of <code>chars</code>? What about <code>push</code> a character to it? There are <i>a lot</i> of <code>String</code> behaviors to choose from."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 3, "last_activity_date": 1555009427, "last_edit_date": 1555009427, "creation_date": 1555007867, "answer_id": 55639162, "question_id": 55637959, "link": "https://stackoverflow.com/questions/55637959/type-for-a-string-that-must-conform-to-some-syntax/55639162#55639162", "title": "Type for a String that must conform to some syntax", "body": "<p>The idiomatic way would be to create a <a href=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html?highlight=newtype#using-the-newtype-pattern-for-type-safety-and-abstraction\" rel=\"nofollow noreferrer\">newtype</a> around <code>String</code> and to derive the traits that can be derived.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d71119771c93747d7ee95c62844a019b\" rel=\"nofollow noreferrer\">For example:</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde;\nuse serde_json;\n\n#[derive(\n    Eq, PartialEq, Ord, PartialOrd,\n    Debug, Default,\n    serde::Serialize, serde::Deserialize,\n)]\n#[serde(transparent)] // to serialize as a string\npub struct Identifier(\n    #[serde(deserialize_with = \"Identifier::deserialize\")]\n    String\n);\n\nimpl Identifier {\n    pub fn new(s: String) -&gt; Result&lt;Identifier, &amp;'static str&gt; {\n        // do some validation\n        if !s.is_empty() &amp;&amp; s.contains('a') {\n            Ok(Identifier(s))\n        } else {\n            Err(\"Not valid\")\n        }\n    }\n\n    fn deserialize&lt;'de, D&gt;(d: D) -&gt; Result&lt;String, D::Error&gt;\n    where\n        D: serde::Deserializer&lt;'de&gt;,\n    {\n        use serde::de::Error;\n        use serde::Deserialize;\n\n        let s = String::deserialize(d)?;\n        Identifier::new(s).map(|i| i.0).map_err(D::Error::custom)\n    }\n}\n\nfn main() {\n    let a = Identifier::new(\"aaa\".into()).unwrap();\n    let b: Identifier = serde_json::from_str(r#\"\"faaa\"\"#).unwrap();\n\n    println!(\"{:?}, {:?}\", a, b);\n    println!(\"{}\", a == b);\n}\n</code></pre>\n"}], "owner": {"reputation": 24273, "user_id": 525872, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/4d6f74711436cfe252bf4fc8f3cf4971?s=128&d=identicon&r=PG", "display_name": "Jo Liss", "link": "https://stackoverflow.com/users/525872/jo-liss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1555009427, "creation_date": 1555002892, "last_edit_date": 1555007989, "question_id": 55637959, "link": "https://stackoverflow.com/questions/55637959/type-for-a-string-that-must-conform-to-some-syntax", "title": "Type for a String that must conform to some syntax", "body": "<p>I'd like to make a \"constrained\" type that behaves like <code>String</code>, but on construction validates that it conforms to some syntax. For example, we might create an <code>Identifier</code> type that acts like a <code>String</code> but enforces that all characters match <code>[a-zA-Z_]</code>.</p>\n\n<p>In particular, I want the usual traits to be implemented (<code>Display</code>, <code>Ord</code>, etc.), and I want <code>serde::Serialize</code> and <code>serde::Deserialize</code> to behave just like with a normal <code>String</code>, except that we validate when deserializing.</p>\n\n<p>Is there an idiomatic way to do this, or would I have to implement all the traits manually?</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554989626, "post_id": 55632879, "comment_id": 97958741, "body": "Can you please provide a <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">playground</a> of the not working code? A <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> would be really nice here to see the actual error (maybe you can paste it as well)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1554990876, "post_id": 55632879, "comment_id": 97959609, "body": "I suppose/think/just an idea that you must use <a href=\"https://docs.rs/tokio/0.1.18/tokio/reactor/struct.Registration.html\" rel=\"nofollow noreferrer\"><code>Registration</code></a>"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1554991317, "creation_date": 1554986840, "last_edit_date": 1554991317, "question_id": 55632879, "link": "https://stackoverflow.com/questions/55632879/how-do-i-inform-tokio-about-an-event-in-a-c-owned-thread", "title": "How do I inform Tokio about an event in a C-owned thread?", "body": "<p>I use a C library which provides an API to call user provided function in a thread created by that C library. I cannot handle events inside the callback because it should not block the thread, so I want some way to inform the Tokio event loop that my callback was called.</p>\n\n<p>How can I do that?</p>\n\n<p>More precisely I have:</p>\n\n<pre><code>fn register_callback_to_run_inside_c_thread&lt;F&gt;(callback_f: F)\nwhere\n    F: FnMut() + Send + UnwindSafe + 'static,\n{\n    unimplemented!();\n}\n</code></pre>\n\n<p>I want to pass a closure inside <code>register_callback_to_run_inside_c_thread</code> to inform Tokio about the event.</p>\n\n<p>First I tried:</p>\n\n<pre><code>let (mut tx, rx) = watch::channel(\"hello\");\nregister_callback_to_run_inside_c_thread(move || {\n    tx.broadcast(\"world\").unwrap();\n});\n</code></pre>\n\n<p>This code doesn't compile because it uses <code>RefCell</code> somewhere inside.</p>\n\n<p>I also tried to use <code>lazy</code> to start a function inside Tokio. That code compiles, but crashes during runtime because <code>lazy</code> should be executed inside threads created by Tokio but the callback runs inside a thread created by the C library.</p>\n\n<p>Is there any way to inform Tokio about the event?</p>\n"}, {"tags": ["rust", "webassembly"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1555024029, "post_id": 55631776, "comment_id": 97974890, "body": "Did you properly link the local npm module? You need to use <code>npm link</code> in the <code>pkg</code> directory and <code>npm link wasm-game-of-life</code> in the <code>www</code> directory?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1555024226, "post_id": 55631776, "comment_id": 97974931, "body": "I followed the instructions just now (for the first time) and it worked for me. I&#39;m using the latest Rust 1.34 so I don&#39;t think the book is out of date."}, {"owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1555054526, "post_id": 55631776, "comment_id": 97982570, "body": "@PeterHall I think I linked everything properly, because <code>alert(&quot;NOT WORKING!&quot;);</code> is executed. I&#39;ll uninstall everything again and start from scratch. I&#39;ll also test this in my macOS at the moment I&#39;m working on Ubuntu 18.04. I&#39;m also working with the latest rust version. Good to know that this is working in general so there is something spooky with my environment."}], "answers": [{"tags": [], "owner": {"reputation": 1038, "user_id": 330406, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4e2db9197c36a702219a46a79c024fd0?s=128&d=identicon&r=PG", "display_name": "Antigluk", "link": "https://stackoverflow.com/users/330406/antigluk"}, "is_accepted": false, "score": 0, "last_activity_date": 1613719169, "creation_date": 1613719169, "answer_id": 66273265, "question_id": 55631776, "link": "https://stackoverflow.com/questions/55631776/why-is-a-string-passed-from-javascript-to-wasm-always-empty-in-section-4-2-of-th/66273265#66273265", "title": "Why is a string passed from JavaScript to Wasm always empty in section 4.2 of the Rust/Wasm beginner book?", "body": "<p>I know it's probably late, but I ran into the same issue today and it's just like this. So, for anybody who hit this, here is the answer:</p>\n<p>When you import <code>import * as wasm from &quot;wasm-game-of-life&quot;;</code>, in <code>wasm</code> variable you have the module exported from the rust library. It contains <code>greet</code> method, but it's not one that is defined in the JS file, it's a C function which accepts two arguments, pointer to the string and it's length.</p>\n<p>When you call <code>wasm.greet()</code> with a string param, you pass it to the C function, not to the JS function <code>greet</code> - that's why function call works but no string actually passed.</p>\n<p>In order to call JS <code>greet</code> wrapper you have to import it explicitly (substitute with your js file paths):</p>\n<pre><code>import { default as wasm, greet } from &quot;wasm-game-of-life&quot;\n\nwasm().then((module) =&gt; {\n  module.greet(&quot;Test&quot;);  // this won't work, it's C/rust greet function\n  console.log(module);\n  greet(&quot;Test&quot;);  // this should work! it's js wrapper around C function\n})\n</code></pre>\n"}], "owner": {"reputation": 1262, "user_id": 2686092, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/05c7bb05132e2621c3a0864d641f0b3f?s=128&d=identicon&r=PG&f=1", "display_name": "createproblem", "link": "https://stackoverflow.com/users/2686092/createproblem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 95, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1613719169, "creation_date": 1554983297, "last_edit_date": 1554991586, "question_id": 55631776, "link": "https://stackoverflow.com/questions/55631776/why-is-a-string-passed-from-javascript-to-wasm-always-empty-in-section-4-2-of-th", "title": "Why is a string passed from JavaScript to Wasm always empty in section 4.2 of the Rust/Wasm beginner book?", "body": "<p>I'm trying to follow the <a href=\"https://rustwasm.github.io/docs/book/game-of-life/hello-world.html\" rel=\"nofollow noreferrer\">Rust WebAssembly book</a> and I'm stuck at the exercise in section 4.2. I changed everything as described in the answer, but the given <code>&amp;str</code> (name) in the <code>greet</code> function is always empty.</p>\n\n<p>Here is my version of the <code>greet</code> function with debugging</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[wasm_bindgen]\npub fn greet(name: &amp;str) {\n    if name.len() == 0 {\n        alert(\"NOT WORKING!\");\n    } else {\n        alert(&amp;format!(\"Hello, {}!\", name));\n    }\n}\n</code></pre>\n\n<p>And the <strong>www/index.js</strong> file:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>import * as wasm from \"wasm-game-of-life\";\n\nwasm.greet(\"213\");\n</code></pre>\n\n<p>Here is the generated function in <strong>pkg/wasm_game_of_life.js</strong></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>/**\n* @param {string} name\n* @returns {void}\n*/\nexport function greet(name) {\n    const ptr0 = passStringToWasm(name);\n    const len0 = WASM_VECTOR_LEN;\n    try {\n        return wasm.greet(ptr0, len0);\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n\n    }\n\n}\n</code></pre>\n\n<p>I get an alert popup with the text <code>NOT WORKING!</code>, but I expect <code>Hello, 213</code>! Why is my string empty? Is the book out of date or something? I deleted everything and started from scratch without luck...</p>\n\n<p>I'm following the book, these are my first hours with WebAssembly.</p>\n"}, {"tags": ["rust", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "is_accepted": true, "score": 4, "last_activity_date": 1554979536, "creation_date": 1554979536, "answer_id": 55630617, "question_id": 55630325, "link": "https://stackoverflow.com/questions/55630325/resultbool-t-pattern-matching/55630617#55630617", "title": "Result&lt;bool, T&gt; pattern matching", "body": "<p>The compiler is just not able to confirm, that you're exhausting the match patterns, that's because you're doing the matching outside of the pattern:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n   match bool_result(false) {\n       Err(_) =&gt; println!(\"Got error\"),\n       Ok(true) =&gt; println!(\"Got value TRUE\"),\n       Ok(false) =&gt; println!(\"Got value FALSE\"),\n   }\n}\n\nfn bool_result(x: bool) -&gt; Result&lt;bool, ()&gt; {\n    Ok(x)\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1389a76ee657e11eb045a4ffc8da9800\" rel=\"nofollow noreferrer\">https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1389a76ee657e11eb045a4ffc8da9800</a></p>\n"}], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 0, "closed_date": 1554980045, "accepted_answer_id": 55630617, "answer_count": 1, "score": 0, "last_activity_date": 1554981467, "creation_date": 1554978536, "last_edit_date": 1554981467, "question_id": 55630325, "link": "https://stackoverflow.com/questions/55630325/resultbool-t-pattern-matching", "closed_reason": "Duplicate", "title": "Result&lt;bool, T&gt; pattern matching", "body": "<p>I've stumbled across a very strange behavior from the Rust compiler:</p>\n\n<pre><code>fn main() {\n   match bool_result(false) {\n       Err(_) =&gt; println!(\"Got error\"),\n       Ok(value) if value =&gt; println!(\"Got value TRUE\"),\n       Ok(value) if !value =&gt; println!(\"Got value FALSE\"),\n       // Ok(z) =&gt; println!(\"WTF: {}\", z), // uncomment to compile\n   }\n}\n\nfn bool_result(x: bool) -&gt; Result&lt;bool, ()&gt; {\n    Ok(x)\n}\n</code></pre>\n\n<p>The snippet above does not compile with the below error unless I uncomment the last match arm. But boolean values have only TRUE/FALSE, so why does rustc think that the match is not exhaustive?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0004]: non-exhaustive patterns: `Ok(_)` not covered\n --&gt; src/main.rs:4:10\n  |\n4 |    match bool_result(false) {\n  |          ^^^^^^^^^^^^^^^^^^^^^^ pattern `Ok(_)` not covered\n</code></pre>\n\n<p>Rustc: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>rustc --version\nrustc 1.33.0 (2aa4c46cf 2019-02-28)\n</code></pre>\n"}, {"tags": ["rust", "traits"], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 127, "favorite_count": 0, "answer_count": 0, "score": 5, "last_activity_date": 1554991020, "creation_date": 1554978190, "last_edit_date": 1554991020, "question_id": 55630220, "link": "https://stackoverflow.com/questions/55630220/is-it-a-compiler-limitation-that-reports-conflicting-implementations-of-trait", "title": "Is it a compiler limitation that reports &quot;conflicting implementations of trait&quot; even though it&#39;s impossible for a type to implement a trait?", "body": "<p>When attempting to answer <a href=\"https://stackoverflow.com/questions/55628334/trait-function-conditional-default-implementation\">this question</a>, I wrote this code:</p>\n\n<pre><code>trait MyTrait {\n    type A;\n    type B;\n}\n\ntrait WithFoo: MyTrait {\n    fn foo(a: Self::A) -&gt; Self::B;\n}\n\nimpl&lt;T, U: MyTrait&lt;A = T, B = T&gt;&gt; WithFoo for U {\n    fn foo(a: T) -&gt; T {\n        a\n    }\n}\n\nstruct S1;\n\nimpl MyTrait for S1 {\n    type A = u32;\n    type B = f32;\n}\n\nimpl WithFoo for S1 {\n    fn foo&lt;T&gt;(a: Self::A) -&gt; Self::B {\n        a as f32\n    }\n}\n\nstruct S2;\n\nimpl MyTrait for S2 {\n    type A = u32;\n    type B = u32;\n}\n\nfn main() {\n    S1::foo(42);\n    S2::foo(42);\n}\n\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=47d8849d433475bc06456dba7768dcc5\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>This fails to compile with the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0119]: conflicting implementations of trait `WithFoo` for type `S1`:\n  --&gt; src/main.rs:23:1\n   |\n10 | impl&lt;T, U: MyTrait&lt;A = T, B = T&gt;&gt; WithFoo for U {\n   | ----------------------------------------------- first implementation here\n...\n23 | impl WithFoo for S1 {\n   | ^^^^^^^^^^^^^^^^^^^ conflicting implementation for `S1`\n</code></pre>\n\n<p>According to <a href=\"https://stackoverflow.com/a/39161143/5397009\">these</a> <a href=\"https://stackoverflow.com/a/45034077/5397009\">answers</a> this error occurs even though type <code>S1</code> doesn't fit the <code>impl</code> trait bounds when the compiler can't be sure that some future blanket <code>impl</code> would cause <code>S1</code> to suddenly match the bounds.</p>\n\n<p>However in this case it is impossible that <code>S1</code> could ever implement <code>MyTrait</code> with <code>A == B</code> since it already implements <code>MyTrait</code> with <code>A != B</code>. Is the error a limitation of the current compiler implementation that might conceivably be lifted at some later point or is there something else I'm missing?</p>\n"}, {"tags": ["android", "dll", "compiler-errors", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1554976572, "post_id": 55629567, "comment_id": 97950772, "body": "<i>&quot;error: could not exec the linker <code>C:\\NDK\\arm\\bin\\arm-linux-androideabi-clang++</code>&quot;</i> Please verify that the path is correct and a executable by your OS (e.g. not an ELF that is not runable by Windows or vice versa)."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554981775, "post_id": 55629567, "comment_id": 97953732, "body": "You haven&#39;t answered my question yet. Can you execute the file (in a cmd) or not?"}, {"owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554981928, "post_id": 55629567, "comment_id": 97953853, "body": "linker file or what ?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554981994, "post_id": 55629567, "comment_id": 97953902, "body": "Yes. That file that the compiler is complaining about."}, {"owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554983131, "post_id": 55629567, "comment_id": 97954563, "body": "C:\\NDK\\arm\\bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../&zwnj;&#8203;../../arm-linux-andr&zwnj;&#8203;oideabi/bin\\ld: error: C:\\\\NDK\\\\arm\\\\bin\\\\arm-linux-androideabi-clang++:2:4: syntax error, unexpected $undefined C:\\NDK\\arm\\bin/../lib/gcc/arm-linux-androideabi/4.9.x/../../&zwnj;&#8203;../../arm-linux-andr&zwnj;&#8203;oideabi/bin\\ld: error: C:\\\\NDK\\\\arm\\\\bin\\\\arm-linux-androideabi-clang++: not an object or archive"}, {"owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554983138, "post_id": 55629567, "comment_id": 97954567, "body": "C:\\NDK\\arm\\bin/../sysroot/usr/lib/arm-linux-androideabi/28\\c&zwnj;&#8203;rtbegin_dynamic.o:cr&zwnj;&#8203;tbegin.c:function _start_main: error: undefined reference to &#39;main&#39; clang80++.exe: error: linker command failed with exit code 1 (use -v to see invocation)"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554983465, "post_id": 55629567, "comment_id": 97954725, "body": "It&#39;s hard to help you, because you are not really giving good information here. What is that output you just posted? Did you execute the file? What happened? Also your screenshot only shows the files without a file extension (which is always bad on windows, time that they change that!). The compiler wants to execute <code>C:\\NDK\\arm\\bin\\arm-linux-androideabi-clang++</code>, not the <code>.bat</code> file. Are you sure it&#39;s a windows executeable? Have you ever used that toolchain successfully?"}, {"owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554984887, "post_id": 55629567, "comment_id": 97955556, "body": "I just used this and same articles <a href=\"https://mozilla.github.io/firefox-browser-architecture/experiments/2017-09-21-rust-on-android.html\" rel=\"nofollow noreferrer\">link</a> to setup toolchain&#39;s"}, {"owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554985048, "post_id": 55629567, "comment_id": 97955645, "body": "arm-linux-androideabi-clang code: @echo off setlocal call :find_bin if &quot;%1&quot; == &quot;-cc1&quot; goto :L   set &quot;_BIN_DIR=&quot; &amp;&amp; %_BIN_DIR%clang80.exe -target armv7a-linux-androideabi28 -fno-addrsig %* if ERRORLEVEL 1 exit /b 1 goto :done  :L rem target/triple already spelled out. set &quot;_BIN_DIR=&quot; &amp;&amp; %_BIN_DIR%clang80.exe %* if ERRORLEVEL 1 exit /b 1 goto :done  :find_bin rem Accommodate a quoted arg0, e.g.: &quot;clang&quot; rem <a href=\"https://github.com/android-ndk/ndk/issues/616\" rel=\"nofollow noreferrer\">github.com/android-ndk/ndk/issues/616</a> set _BIN_DIR=%~dp0 exit /b  :done"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554985637, "post_id": 55629567, "comment_id": 97955997, "body": "The article looks like a mac tutorial for me. And so I suggest that the toolchain is for mac. If have no clue though."}, {"owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554986015, "post_id": 55629567, "comment_id": 97956243, "body": "It&#39;s not important Now we don&#39;t need to generate toolchain, just use $NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-&zwnj;&#8203;androideabi26-clang+&zwnj;&#8203;+"}, {"owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554986029, "post_id": 55629567, "comment_id": 97956249, "body": "But it&#39;s not make me happy :("}], "owner": {"reputation": 30, "user_id": 8332378, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a047366bb17d662e92ab6209bd371d8?s=128&d=identicon&r=PG&f=1", "display_name": "K1why", "link": "https://stackoverflow.com/users/8332378/k1why"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 365, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1554980870, "creation_date": 1554976208, "last_edit_date": 1554980870, "question_id": 55629567, "link": "https://stackoverflow.com/questions/55629567/could-not-execute-rust-linker-for-armv7-linux-android-target", "title": "Could not execute Rust linker for armv7-linux-android target", "body": "<p>I'm trying to compile a Rust project into a <code>*.so</code> lib for arm.</p>\n\n<p>Cargo.toml:</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[package]\nname = \"light_processor\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nlibc = \"0.2.51\"\nsync = \"0.1.0\"\nenum-primitive-derive = \"0.1.2\"\nnum-traits = \"0.2.6\"\n\n[lib]\nname = \"NativePluginRust\"\ncrate-type = [\"dylib\"]\n\n[target.'cfg(target_os=\"android\")'.dependencies]\njni = { version = \"0.5\", default-features = false }\n</code></pre>\n\n<p>.cargo/config</p>\n\n<pre class=\"lang-toml prettyprint-override\"><code>[target.x86_64-linux-android]\nar = \"C:\\\\NDK\\\\x86\\\\bin\\\\x86_64-linux-android-ar\"\nlinker = \"C:\\\\NDK\\\\x86_64\\\\bin\\\\x86_64-linux-android-clang++\"\n\n[target.aarch64-linux-android]\nar = \"C:\\\\NDK\\\\arm64\\\\bin\\\\aarch64-linux-android-ar\"\nlinker = \"C:\\\\NDK\\\\arm64\\\\bin\\\\aarch64-linux-android-clang++\"\n\n[target.armv7-linux-androideabi]\nar = \"C:\\\\NDK\\\\arm\\\\bin\\\\arm-linux-androideabi-ar\"\nlinker = \"C:\\\\NDK\\\\arm\\\\bin\\\\arm-linux-androideabi-clang++\"\n\n[target.i686-linux-android]\nar = \"C:\\\\NDK\\\\x86\\\\bin\\\\i686-linux-android-ar\"\nlinker = \"C:\\\\NDK\\\\x86\\\\bin\\\\i686-linux-android-clang++\"\n</code></pre>\n\n<p>Platform and other</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Cargo/rustc version: cargo 1.35.0-nightly (0e35bd8af 2019-03-13)\nWindows 10\nNDK - r19c\n</code></pre>\n\n<p>When I run <code>cargo build --target armv7-linux-androideabi --release</code>, I get this compile error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: could not exec the linker\n`C:\\NDK\\arm\\bin\\arm-linux-androideabi-clang++`\n\n= note: %1 is not a valid Win32 application. (os error 193)\n= note: \"C:\\\\NDK\\\\arm\\\\bin\\\\arm-linux-androideabi-clang++\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-Wl,--allow-multiple-definition\" \"-march=armv7-a\" \"-L\"\n\"C:\\\\Users\\\\User\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\armv7-linux-androideabi\\\\lib\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.0.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.1.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.10.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.11.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.12.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.13.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.14.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.2.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.3.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.4.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.5.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.6.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.7.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.8.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.NativePluginRust.aeolmuqr-cgu.9.rcgu.o\" \"-o\" \"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\libNativePluginRust.so\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.2sbup2a6qpfbk1uq.rcgu.o\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\\\\NativePluginRust.j6dacp3pd956ibr.rcgu.o\" \"-Wl,-zrelro\" \"-Wl,-znow\" \"-Wl,-O1\" \"-nodefaultlibs\" \"-L\"\n\"C:\\\\other\\\\light_processor\\\\target\\\\armv7-linux-androideabi\\\\release\\\\deps\" \"-L\" \"C:\\\\other\\\\light_processor\\\\target\\\\release\\\\deps\" \"-L\" \"C:\\\\Users\\\\User\\\\.rustup\\\\toolchains\\\\nightly-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\armv7-linux-androideabi\\\\lib\" \"-Wl,-Bstatic\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\liblibc-dcfb7bb75e1bfeb5.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\libnum_traits-be8894f2a1f013ae.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--start-group\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\libstd-97937ccdc225868f.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\libpanic_unwind-527aca3d5ee99993.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\libbacktrace_sys-a0c445accc9b96e3.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\librustc_demangle-c3cf34e8879986a1.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\libunwind-0b9df9c0d003ddcb.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\liblibc-26698ce62cc62b28.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\liballoc-d934247b7fc04a98.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\librustc_std_workspace_core-beae7b27ff1a115e.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--whole-archive\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\libcore-449b58af4aafb370.rlib\" \"-Wl,--no-whole-archive\" \"-Wl,--end-group\"\n\"C:\\\\Users\\\\User\\\\AppData\\\\Local\\\\Temp\\\\rustc7zLh6u\\\\libcompiler_builtins-24a897e39347c695.rlib\" \"-Wl,-Bdynamic\" \"-ldl\" \"-llog\" \"-lgcc\" \"-lc\" \"-lm\" \"-shared\"\n</code></pre>\n\n<p><img src=\"https://i.stack.imgur.com/4YFP1.png\" alt=\"Screenshot linker directory\"></p>\n\n<p>What is the problem behind this error?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1554978303, "post_id": 55628334, "comment_id": 97951814, "body": "While trying to answer, I ran into <a href=\"https://stackoverflow.com/questions/55630220/conflicting-implementations-of-trait\">another question</a> which might be of interest."}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1555038323, "post_id": 55628334, "comment_id": 97977478, "body": "Does the function in trait which doesn&#39;t either take <code>self</code> (or reference to it) or return <code>Self</code> ever make sense?"}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1555154534, "post_id": 55628334, "comment_id": 98016614, "body": "@Cerberus I guess it wouldn&#39;t, but this was just simplified example. I will edit it to make more sense."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554975668, "post_id": 55628699, "comment_id": 97950190, "body": "why did you add &#39;Additional methods&#39; in the question again? Is that really important here?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1554977713, "post_id": 55628699, "comment_id": 97951467, "body": "@hellow It <i>may</i> very well be important. Case in point, the fixed version of the code in the other answer actually works for the case that the aren&#39;t any further methods, but becomes cumbersome otherwise."}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1554984211, "post_id": 55628699, "comment_id": 97955143, "body": "Thank you, but this solution doesn&#39;t work for me for the reason you already described - it is not possible to call <code>foo</code> if <code>A != B</code>, even if you provide your own implementation of <code>foo</code>."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 4, "last_activity_date": 1554973979, "last_edit_date": 1554973979, "creation_date": 1554973630, "answer_id": 55628699, "question_id": 55628334, "link": "https://stackoverflow.com/questions/55628334/can-i-conditionally-provide-a-default-implementation-of-a-trait-function/55628699#55628699", "title": "Can I conditionally provide a default implementation of a trait function?", "body": "<p>You can provide a default implementation in the trait definition itself by introducing a redundant type parameter:</p>\n\n<pre><code>trait MyTrait {\n    type A;\n    type B;\n\n    fn foo&lt;T&gt;(a: Self::A) -&gt; Self::B\n    where\n        Self: MyTrait&lt;A = T, B = T&gt;,\n    {\n        a\n    }\n}\n</code></pre>\n\n<p>This default implementation can be overridden for individual types. However, the specialized versions will inherit the trait bound from the definition of <code>foo()</code> on the trait so you can only actually <em>call</em> the method if <code>A == B</code>:</p>\n\n<pre><code>struct S1;\n\nimpl MyTrait for S1 {\n    type A = u32;\n    type B = f32;\n\n    fn foo&lt;T&gt;(a: Self::A) -&gt; Self::B {\n        a as f32\n    }\n}\n\nstruct S2;\n\nimpl MyTrait for S2 {\n    type A = u32;\n    type B = u32;\n}\n\nfn main() {\n    S1::foo(42);  // Fails with compiler error\n    S2::foo(42);  // Works fine\n}\n</code></pre>\n\n<p>Rust also has an <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1210-impl-specialization.md\" rel=\"nofollow noreferrer\">unstable impl specialization feature</a>, but I don't think it can be used to achieve what you want.</p>\n"}, {"comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1554974703, "post_id": 55628849, "comment_id": 97949607, "body": "The issue is that there could be multiple <code>MyTraitId</code> implementations for any type <code>P</code>, so you would end up with multiple conflictin impls for <code>MyTrait</code>. It may be possible to get this working by making <code>T</code> an associated type of <code>MyTraitId</code> instead of a type parameter, but it would still only be a partial solution, since you will have to implement all methods of <code>MyTrait</code> in the blanket implementation."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1554974866, "post_id": 55628849, "comment_id": 97949703, "body": "Please don&#39;t post <i>untested</i> code. Instead use <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the playground</a> to easily and quickly check your code. This makes your and our life much easier :)"}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1554984947, "post_id": 55628849, "comment_id": 97955593, "body": "This would work, but what if there are other functions in the trait that do not have default implementation? Originally I had comment indicating that there are other functions, now I edited my question and added second function to make it clear."}], "tags": [], "owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "is_accepted": false, "score": 2, "last_activity_date": 1554981567, "last_edit_date": 1554981567, "creation_date": 1554974105, "answer_id": 55628849, "question_id": 55628334, "link": "https://stackoverflow.com/questions/55628334/can-i-conditionally-provide-a-default-implementation-of-a-trait-function/55628849#55628849", "title": "Can I conditionally provide a default implementation of a trait function?", "body": "<p>Will this suffice?:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait MyTrait {\n    type A;\n    type B;\n\n    fn foo(a: Self::A) -&gt; Self::B;\n}\n\ntrait MyTraitId {\n    type AB;\n}\n\nimpl&lt;P&gt; MyTrait for P\nwhere\n    P: MyTraitId\n{\n    type A = P::AB;\n    type B = P::AB;\n\n    fn foo(a: Self::A) -&gt; Self::B {\n        a\n    }\n}\n\nstruct S2;\n\nimpl MyTraitId for S2 {\n    type AB = i32;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3128566f15b640154ba0305eba7d65df\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n\n<p>As noted, it'll bump into problems if <code>MyTrait</code> as other methods that <code>MyTraitId</code> can't provide an implementation for.</p>\n"}, {"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 0, "last_activity_date": 1555077381, "last_edit_date": 1555077381, "creation_date": 1555038749, "answer_id": 55643956, "question_id": 55628334, "link": "https://stackoverflow.com/questions/55628334/can-i-conditionally-provide-a-default-implementation-of-a-trait-function/55643956#55643956", "title": "Can I conditionally provide a default implementation of a trait function?", "body": "<p>Extending <a href=\"https://stackoverflow.com/a/55628849/155423\">user31601's answer</a> and using the remark from Sven Marnach's comment, here's an implementation of the trait with additional functions using the \"delegate methods\" pattern:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait MyTrait {\n    type A;\n    type B;\n\n    fn foo(a: Self::A) -&gt; Self::B;\n    fn bar();\n}\n\ntrait MyTraitId {\n    type AB;\n    fn bar_delegate();\n}\n\nimpl&lt;P&gt; MyTrait for P\nwhere\n    P: MyTraitId,\n{\n    type A = P::AB;\n    type B = P::AB;\n\n    fn foo(a: Self::A) -&gt; Self::B {\n        a\n    }\n    fn bar() {\n        &lt;Self as MyTraitId&gt;::bar_delegate();\n    }\n}\n\nstruct S2;\n\nimpl MyTraitId for S2 {\n    type AB = i32;\n    fn bar_delegate() {\n        println!(\"bar called\");\n    }\n}\n\nfn main() {\n    &lt;S2 as MyTrait&gt;::bar(); // prints \"bar called\"\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ff5bf6aa207d3cc0a5cf630adaeb66ba\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 508, "favorite_count": 0, "accepted_answer_id": 55643956, "answer_count": 3, "score": 3, "last_activity_date": 1555154580, "creation_date": 1554972559, "last_edit_date": 1555154580, "question_id": 55628334, "link": "https://stackoverflow.com/questions/55628334/can-i-conditionally-provide-a-default-implementation-of-a-trait-function", "title": "Can I conditionally provide a default implementation of a trait function?", "body": "<p>I have the following trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait MyTrait {\n    type A;\n    type B;\n\n    fn foo(a: Self::A) -&gt; Self::B;\n\n    fn bar(&amp;self);\n}\n</code></pre>\n\n<p>There are other functions like <code>bar</code> that must be always implemented by the user of the trait.</p>\n\n<p>I would like to give <code>foo</code> a default implementation, but only when the type <code>A = B</code>.</p>\n\n<p>Pseudo-Rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl??? MyTrait where Self::A = Self::B ??? {\n    fn foo(a: Self::A) -&gt; Self::B {\n        a\n    }\n}\n</code></pre>\n\n<p>This would be possible:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct S1 {}\n\nimpl MyTrait for S1 {\n    type A = u32;\n    type B = f32;\n\n    // `A` is different from `B`, so I have to implement `foo`\n    fn foo(a: u32) -&gt; f32 {\n        a as f32\n    }\n\n    fn bar(&amp;self) {\n        println!(\"S1::bar\");\n    }\n}\n\nstruct S2 {}\n\nimpl MyTrait for S2 {\n    type A = u32;\n    type B = u32;\n\n    // `A` is the same as `B`, so I don't have to implement `foo`,\n    // it uses the default impl\n\n    fn bar(&amp;self) {\n        println!(\"S2::bar\");\n    }\n}\n</code></pre>\n\n<p>Is that possible in Rust?</p>\n"}, {"tags": ["reference", "rust", "optional"], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 10, "last_activity_date": 1554991851, "last_edit_date": 1554991851, "creation_date": 1554959711, "answer_id": 55625204, "question_id": 55625001, "link": "https://stackoverflow.com/questions/55625001/why-does-pattern-matching-on-optiont-yield-something-of-type-somet/55625204#55625204", "title": "Why does pattern matching on &amp;Option&lt;T&gt; yield something of type Some(&amp;T)?", "body": "<p>The type of the expression <code>&amp;l</code> you match against is <code>&amp;Option&lt;i32&gt;</code>, so if we are strict the patterns should be <code>&amp;None</code> and <code>&amp;Some(x)</code>, and if we use these patterns, the type of <code>x</code> indeed is <code>i32</code>. If we omit the ampersand in the patterns, as you did in your code, it first looks like the patterns should not be able to match at all, and the compiler should throw an error similar to \"expected Option, found reference\", and indeed this is what the compiler did before Rust version 1.26.</p>\n\n<p>Current versions of Rust support \"match ergonomics\" introduced by <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2005-match-ergonomics.md\" rel=\"noreferrer\">RFC 2005</a>, and matching a reference to an enum against a pattern without the ampersand is now allowed. In general, if your match expression is only a reference, you can't move any members out of the enum, so matching a reference against <code>Some(x)</code> is equivalent to matching against the pattern <code>&amp;Some(ref x)</code>, i.e. <code>x</code> becomes a reference to the inner value of the <code>Option</code>. In your particular case, the inner value is an <code>i32</code>, which is <code>Copy</code>, so you would be allowed to match against <code>&amp;Some(x)</code> and get an <code>i32</code>, but this is not possible for general types.</p>\n\n<p>The idea of the RFC is to make it easier to get the ampersands and <code>ref</code>s in patterns right, but I'm not completely convinced whether the new rules actually simplified things, or whether they added to the confusion by making things magically work in some cases, thereby making it more difficult for people to get a true understanding of the underlying logic.</p>\n"}], "owner": {"reputation": 2932, "user_id": 7212809, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VlOyJEUeeSc/AAAAAAAAAAI/AAAAAAAAAAA/AGDgw-jExBae7iJ2ALFtcMj_6BCoHGTMgw/mo/photo.jpg?sz=128", "display_name": "nz_21", "link": "https://stackoverflow.com/users/7212809/nz-21"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "accepted_answer_id": 55625204, "answer_count": 1, "score": 3, "last_activity_date": 1554991851, "creation_date": 1554958651, "last_edit_date": 1554968853, "question_id": 55625001, "link": "https://stackoverflow.com/questions/55625001/why-does-pattern-matching-on-optiont-yield-something-of-type-somet", "title": "Why does pattern matching on &amp;Option&lt;T&gt; yield something of type Some(&amp;T)?", "body": "<p>I have a tiny <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e0dea168222319539c5ad523e4632a97\" rel=\"nofollow noreferrer\">playground example</a> here</p>\n\n<pre><code>fn main() {\n    let l = Some(3);\n    match &amp;l {\n        None =&gt; {}\n        Some(_x) =&gt; {} // x is of type &amp;i32\n    }\n}\n</code></pre>\n\n<p>I'm pattern matching on <code>&amp;Option</code> and if I use <code>Some(x)</code> as a branch, why is <code>x</code> of type <code>&amp;i32</code>?</p>\n"}]