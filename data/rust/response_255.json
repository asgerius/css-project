[{"tags": ["rust", "frameworks"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1574903352, "post_id": 59079630, "comment_id": 104397797, "body": "I&#39;d start by getting familiarized with the apis in other crates; they will show you how to design things in a rust-like fashion. Also, you&#39;ll probably need quite a bit of rust intuition, so that you won&#39;t end up fighting the borrow checker as often. Perhaps designing your project in a modular fashion; using traits very often, using various crates, etc. can make its development easier."}, {"owner": {"reputation": 111, "user_id": 10697123, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jooLH.jpg?s=128&g=1", "display_name": "Derek C", "link": "https://stackoverflow.com/users/10697123/derek-c"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1574922971, "post_id": 59079630, "comment_id": 104402238, "body": "Thanks, I&#39;ll do that. Also got some advice from someone else today who suggested that I build a project and extract from there."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1574929801, "post_id": 59079630, "comment_id": 104404976, "body": "Checkout romio..."}, {"owner": {"reputation": 111, "user_id": 10697123, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jooLH.jpg?s=128&g=1", "display_name": "Derek C", "link": "https://stackoverflow.com/users/10697123/derek-c"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1575018541, "post_id": 59079630, "comment_id": 104435785, "body": "@MatthieuM., do you have a link? When I Google <code>romio</code> the top results are an app to find service providers. EDIT: found it here <a href=\"https://docs.rs/romio/0.3.0-alpha.10/romio/\" rel=\"nofollow noreferrer\">docs.rs/romio/0.3.0-alpha.10/romio</a>"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1575019180, "post_id": 59079630, "comment_id": 104436093, "body": "Oh, and you might also want to look at the async book: it explains <a href=\"https://rust-lang.github.io/async-book/02_execution/04_executor.html\" rel=\"nofollow noreferrer\">how to build an Executor</a>."}], "owner": {"reputation": 111, "user_id": 10697123, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/jooLH.jpg?s=128&g=1", "display_name": "Derek C", "link": "https://stackoverflow.com/users/10697123/derek-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1574896115, "creation_date": 1574896115, "question_id": 59079630, "link": "https://stackoverflow.com/questions/59079630/how-to-create-a-web-application-framework", "title": "How to create a web application framework", "body": "<p>I want to attempt creating a framework like Ruby on Rails but for Rust. I know it will take long and it's a lot of work but I figured it would help me better understand the abstractions that are used in frameworks and reasoning behind framework developers' decisions. By building a framework I will also get to learn lots about the framework I'm building. The only projects I've created with Rust is Philip Opperman's Rust OS, a Ray Tracer and a sudoku game using the Piston engine. Can anyone give me some tips/pointers on how to go about this project or where to start? I want to build it specifically for API development.</p>\n"}, {"tags": ["rust", "rust-crates"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1574891983, "post_id": 59078459, "comment_id": 104395099, "body": "Feature names are separate from dependency names, so no, you can&#39;t specify a version for them. They are also always <i>additive</i>, i.e. if there are multiple crates depending on the same version of crate <code>foo</code>, and one of them enables feature <code>bar</code>, you will end up with a single version of <code>foo</code> with feature <code>bar</code> enabled."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1574892071, "post_id": 59078459, "comment_id": 104395126, "body": "In general, it&#39;s not a problem to have more than one version of the <code>image</code> crate in your project. It <i>may</i> be a problem if <code>barcoders</code> uses types from the <code>image</code> crate in its external interface."}], "answers": [{"tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": true, "score": 2, "last_activity_date": 1574917204, "creation_date": 1574917204, "answer_id": 59082007, "question_id": 59078459, "link": "https://stackoverflow.com/questions/59078459/is-it-possible-to-specify-version-for-feature-in-dependency-in-cargo-toml/59082007#59082007", "title": "Is it possible to specify version for feature in dependency in Cargo.toml?", "body": "<p>No, there is no way to specify the version for a dependency's (optional) dependency. This makes sense, as your dependency run their tests only against the version they specify in their <code>Cargo.toml</code>. In this case, as it appears everything you're doing uses open source, you could fork <code>barcoders</code>, update the dependency, run the test suite and if it passes, use your fork. It would also be polite to open an issue in that case.</p>\n\n<p>If <code>barcoders</code> wasn't open-source, so you couldn't fork it, your best bet would be to switch to the version of <code>image</code> that <code>barcoders</code> uses. If your crate is a library, it may be annoying to expose a public interface that uses outdated libraries, but that's life. The \"proper\" solution to this problem is to wait until image has a <code>1.0</code> release, which is basically a forward compatibility promise, then <code>barcoders</code> can specify <code>image = \"^1\"</code> (i.e. >=1.0.0 &lt;2.0.0). I mention this \"solution\" only because you appear to have commit privileges on <code>barcoders</code>, in fact you solved your own problem by updating the <code>image</code> dependency in <code>barcoders</code>.</p>\n\n<p>As one of the comments points out, this version compatibility issue is less fragile that it at first seems. So long as types from different versions of some dependency crate don't cross api boundaries, your project can include any number of versions of that dependency simultaneously. Working with multiple versions of libraries took some work from the rust team on <a href=\"https://en.wikipedia.org/wiki/Name_mangling\" rel=\"nofollow noreferrer\">name mangling</a>, which you can read about <a href=\"https://stephencoakley.com/2019/04/24/how-rust-solved-dependency-hell\" rel=\"nofollow noreferrer\">here</a></p>\n"}, {"tags": [], "owner": {"reputation": 338, "user_id": 11811572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23035f8030e092e4f79c592461ed68d4?s=128&d=identicon&r=PG&f=1", "display_name": "LotB", "link": "https://stackoverflow.com/users/11811572/lotb"}, "is_accepted": false, "score": 0, "last_activity_date": 1574918487, "creation_date": 1574918487, "answer_id": 59082193, "question_id": 59078459, "link": "https://stackoverflow.com/questions/59078459/is-it-possible-to-specify-version-for-feature-in-dependency-in-cargo-toml/59082193#59082193", "title": "Is it possible to specify version for feature in dependency in Cargo.toml?", "body": "<p>No, you can't, and shouldn't, and shouldn't worry.</p>\n\n<p>Libraries were developed at a single point in time, used dependencies with a certain API. The dependency is likely to change some of that between major versions (changing the type a function returns, exposing different patterns, or whatever). This may make it unable to compile anymore. To really update something, you might need to change parts of the code that is using the dependency in the first place. </p>\n\n<p>This is open source world, so you can do so and publish a pull request in the original crate to update. It might be appreciated, but don't underestimate the care that needs to be taken to not break other people's crates yourself when doing so.\nOr make your own fork of the crate that updates it just for you.</p>\n\n<p>But you are probably just worried seeing duplicates of the same crate with different versions during compilation. Cargo indeed compiles with different versions, so all calls to the dependended crate will receive what the developer expected when he/she wrote it. This is not a problem, in performance, or amount of instructions that end up in the binary. Just stop worrying.</p>\n"}], "owner": {"reputation": 2770, "user_id": 995270, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/jgv9N.jpg?s=128&g=1", "display_name": "Nikolai Golub", "link": "https://stackoverflow.com/users/995270/nikolai-golub"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 544, "favorite_count": 0, "accepted_answer_id": 59082007, "answer_count": 2, "score": 2, "last_activity_date": 1574918487, "creation_date": 1574888927, "question_id": 59078459, "link": "https://stackoverflow.com/questions/59078459/is-it-possible-to-specify-version-for-feature-in-dependency-in-cargo-toml", "title": "Is it possible to specify version for feature in dependency in Cargo.toml?", "body": "<p>For example, I use barcoders crate:</p>\n\n<pre><code>barcoders = {version = \"0.10.0\", features = [\"image\",]}\n</code></pre>\n\n<p>Is it possible to specify which version of image this dependency should use?</p>\n\n<p>Something like </p>\n\n<pre><code>barcoders = {version = \"0.10.0\", features = [\"image=0.22.3\",]}\n</code></pre>\n\n<p>Because it uses image crate version <code>0.18.0</code> and in my project I use latest <code>0.22.3</code>.</p>\n\n<p>Does it mean that there's only 2 ways to resolve that:</p>\n\n<ol>\n<li>I downgrade version in my package</li>\n<li>Barcoders dependency get updated</li>\n</ol>\n"}, {"tags": ["unit-testing", "testing", "rust", "integration-testing", "teardown"], "comments": [{"owner": {"reputation": 1560, "user_id": 1572989, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e04ae0ce5748144724b955be3459d19?s=128&d=identicon&r=PG", "display_name": "Ivan Gozali", "link": "https://stackoverflow.com/users/1572989/ivan-gozali"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1574895287, "post_id": 59077877, "comment_id": 104396096, "body": "I tried that but couldn&#39;t get it to work. Something like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8224db31fdf2f2ef099e313d937bfcde\" rel=\"nofollow noreferrer\">this</a>, maybe?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574895805, "post_id": 59077877, "comment_id": 104396209, "body": "you can make a script I think like <code>build.rs</code>, you must probably configure a profil"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1574930117, "post_id": 59077877, "comment_id": 104405112, "body": "You are right, destructors aren&#39;t run for static variables \u2013 see <a href=\"https://stackoverflow.com/questions/48732387/how-can-i-run-clean-up-code-in-a-rust-library\" title=\"how can i run clean up code in a rust library\">stackoverflow.com/questions/48732387/&hellip;</a> as well."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 5, "creation_date": 1574933938, "post_id": 59077877, "comment_id": 104407115, "body": "There&#39;s an accepted experimental RFC to allow custom test frameworks \u2013 see <a href=\"https://github.com/rust-lang/rust/issues/50297\" rel=\"nofollow noreferrer\">this tracking issue</a>. This would allow a lot more flexibility around tests, but unfortunately there hasn&#39;t been much progress on this yet."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1574934991, "post_id": 59077877, "comment_id": 104407729, "body": "As @SvenMarnach, I think that there is no solution to this issue unless this RFC is implemented. If you use the nightly compiler, you can do that with the few that was implemented AFAIK"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574935065, "post_id": 59077877, "comment_id": 104407781, "body": "People often use trybuild (<a href=\"https://docs.rs/trybuild/1.0.18/trybuild/\" rel=\"nofollow noreferrer\">docs.rs/trybuild/1.0.18/trybuild</a>) for testing procedural macros, and I&#39;m fairly certain you can actually apply this crate to any use case, even custom testing framework, if you must. Maybe if someone built such thing on top of this, the RFC mentioned above might even move forward?"}], "answers": [{"tags": [], "owner": {"reputation": 15119, "user_id": 8182118, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d321a0bcd7b3d7831b54d1d9b5b70f60?s=128&d=identicon&r=PG", "display_name": "Masklinn", "link": "https://stackoverflow.com/users/8182118/masklinn"}, "is_accepted": false, "score": 3, "last_activity_date": 1596034787, "last_edit_date": 1596034787, "creation_date": 1596013392, "answer_id": 63150059, "question_id": 59077877, "link": "https://stackoverflow.com/questions/59077877/is-there-a-way-to-execute-a-teardown-function-after-all-tests-have-been-run/63150059#63150059", "title": "Is there a way to execute a teardown function after all tests have been run?", "body": "<p>I'm not sure there's a way to have a global (&quot;session&quot;) teardown with Rust's built-in testing features, <a href=\"https://stackoverflow.com/questions/59077877/rust-teardown-function-after-all-tests\">previous inquiries seem to have yielded little</a>, aside from &quot;maybe a build script&quot;. Third-party testing systems (e.g. shiny or stainless) might have that option though, might be worth looking into their exact capabilities</p>\n<p>Alternatively, if nightly is suitable <a href=\"https://github.com/rust-lang/rust/issues/50297\" rel=\"nofollow noreferrer\">there's a custom test frameworks feature being implemented</a>, which <a href=\"https://doc.rust-lang.org/unstable-book/language-features/custom-test-frameworks.html\" rel=\"nofollow noreferrer\">you might be able to use for that purpose</a>.</p>\n<p>That aside, you may want to look at <code>macro_rules!</code> to cleanup some boilerplate, that's what folks like burntsushi do <a href=\"https://github.com/rust-lang/regex/blob/master/tests/macros.rs\" rel=\"nofollow noreferrer\">e.g. in the regex package</a>.</p>\n"}], "owner": {"reputation": 1560, "user_id": 1572989, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e04ae0ce5748144724b955be3459d19?s=128&d=identicon&r=PG", "display_name": "Ivan Gozali", "link": "https://stackoverflow.com/users/1572989/ivan-gozali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1590, "favorite_count": 1, "answer_count": 1, "score": 19, "last_activity_date": 1596034742, "creation_date": 1574885984, "last_edit_date": 1596034742, "question_id": 59077877, "link": "https://stackoverflow.com/questions/59077877/is-there-a-way-to-execute-a-teardown-function-after-all-tests-have-been-run", "title": "Is there a way to execute a teardown function after all tests have been run?", "body": "<p>In Rust, is there any way to execute a teardown function after <strong>all</strong> tests have been run (i.e. at the end of <code>cargo test</code>) using the standard testing library?</p>\n<p>I'm not looking to run a teardown function after <strong>each</strong> test, as they've been discussed in these related posts:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/58006033/how-to-run-setup-code-before-any-tests-run-in-rust\">How to run setup code before any tests run in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/30177845/how-to-initialize-the-logger-for-integration-tests\">How to initialize the logger for integration tests?</a>))</li>\n</ul>\n<p>These discuss ideas to run:</p>\n<ul>\n<li>setup before <strong>each</strong> test</li>\n<li>teardown before <strong>each</strong> test (using <a href=\"https://doc.rust-lang.org/std/panic/fn.catch_unwind.html\" rel=\"nofollow noreferrer\"><code>std::panic::catch_unwind</code></a>)</li>\n<li>setup before <strong>all</strong> tests (using <a href=\"https://doc.rust-lang.org/std/sync/struct.Once.html\" rel=\"nofollow noreferrer\"><code>std::sync::Once</code></a>)</li>\n</ul>\n<p>One workaround is a shell script that wraps around the <code>cargo test</code> call, but I'm still curious if the above is possible.</p>\n"}, {"tags": ["hash", "rust", "mapping", "distribution", "uniform-distribution"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574893230, "post_id": 59078278, "comment_id": 104395490, "body": "this need O(N) memory"}, {"owner": {"reputation": 8448, "user_id": 995246, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/0d956964e915c9b3efd2731abb7371b0?s=128&d=identicon&r=PG&f=1", "display_name": "gliderkite", "link": "https://stackoverflow.com/users/995246/gliderkite"}, "edited": false, "score": 0, "creation_date": 1574935589, "post_id": 59078278, "comment_id": 104408078, "body": "The problem with this approach, if I&#39;m not mistaken, is that I would need to make the <code>Bucket::get</code> operation a mutable operation, taking <code>&amp;mut self</code> in order to increase this counter, which in a multi-threaded context would require a write lock with a mutex, that would slow down the impl substantially."}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "reply_to_user": {"reputation": 8448, "user_id": 995246, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/0d956964e915c9b3efd2731abb7371b0?s=128&d=identicon&r=PG&f=1", "display_name": "gliderkite", "link": "https://stackoverflow.com/users/995246/gliderkite"}, "edited": false, "score": 0, "creation_date": 1574936250, "post_id": 59078278, "comment_id": 104408446, "body": "@gliderkite Are the inputs/outputs given as a whole? If so, you could do all this as a preprocessing (where mutability should not be that much of a problem)."}, {"owner": {"reputation": 8448, "user_id": 995246, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/0d956964e915c9b3efd2731abb7371b0?s=128&d=identicon&r=PG&f=1", "display_name": "gliderkite", "link": "https://stackoverflow.com/users/995246/gliderkite"}, "edited": false, "score": 0, "creation_date": 1574957731, "post_id": 59078278, "comment_id": 104419910, "body": "Only outputs are given as a whole at startup (fixed), while inputs are not, each new request can present a new input."}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 1, "last_activity_date": 1574888032, "creation_date": 1574888032, "answer_id": 59078278, "question_id": 59077701, "link": "https://stackoverflow.com/questions/59077701/how-to-map-inputs-to-outputs-with-same-output-and-uniform-distribution-guarantee/59078278#59078278", "title": "How to map inputs to outputs with same output and uniform distribution guarantees?", "body": "<p>I think you are correct that the 1st point is ok with your implementation.</p>\n\n<p>Regarding the 2nd point: It depends on what <code>DefaultHasher</code> does. In practice it may be good enough, but there is another technique that will lead to your requirement fulfilled:</p>\n\n<ul>\n<li>Have a counter <code>m</code>, initially 0.</li>\n<li>Have a <code>HashMap</code> mapping <code>String</code> to <code>usize</code>.</li>\n<li>Whenever you want to <code>get</code> the result, look up the given string in the <code>HashMap</code>:\n\n<ul>\n<li>If the string is already present, return the associated value.</li>\n<li>If the string is not already present:</li>\n<li>Add a new entry to the <code>HashMap</code> that maps the given string to the current value of <code>m</code>.</li>\n<li>Increment <code>m</code> by 1.</li>\n<li>If <code>m==M</code>, reset m to 0.</li>\n</ul></li>\n</ul>\n"}], "owner": {"reputation": 8448, "user_id": 995246, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/0d956964e915c9b3efd2731abb7371b0?s=128&d=identicon&r=PG&f=1", "display_name": "gliderkite", "link": "https://stackoverflow.com/users/995246/gliderkite"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1574888032, "creation_date": 1574884945, "question_id": 59077701, "link": "https://stackoverflow.com/questions/59077701/how-to-map-inputs-to-outputs-with-same-output-and-uniform-distribution-guarantee", "title": "How to map inputs to outputs with same output and uniform distribution guarantees?", "body": "<p>I have a set of inputs (in my case <code>String</code>s) of variable size <code>N</code>, that I need to map to a set of outputs (in my case indexes of an array) of fixed size <code>M</code>. So, I basically need a function like:</p>\n\n<pre><code>fn map(input: String) -&gt; usize;\n</code></pre>\n\n<p>I need to guarantee 2 things:</p>\n\n<ol>\n<li>For any input <code>X</code> I must always return the same output <code>Y</code>. For example: every time I pass the string <code>\"hello\"</code> to my function the returned value must always be the same, for example <code>1</code>.</li>\n<li>The distribution of the values returned must be uniform, that is, for an infinite number of inputs, the average of the same returned values must be the same. For example, if I have <code>M = 4</code> different values to return, and I have <code>N = 100</code> different inputs, the number of inputs mapped to each output must be ideally equal to <code>25</code>.</li>\n</ol>\n\n<p>I came up with the following piece of code:</p>\n\n<pre><code>use std::collections::hash_map::DefaultHasher;\nuse std::hash::{Hash, Hasher};\n\nfn main() {\n    let bucket = Bucket::new(5);\n    let inputs = [\"hello\", \"world\", \"house\", \"hi\"];\n\n    for input in &amp;inputs {\n        let output = bucket.get(input);\n        assert_eq!(output, bucket.get(input));\n        println!(\"{} -&gt; {}\", input, output);\n    }\n}\n\npub struct Bucket {\n    values: Vec&lt;usize&gt;,\n}\n\nimpl Bucket {\n    pub fn new(size: usize) -&gt; Self {\n        let values = (0..size).collect();\n        Bucket { values }\n    }\n\n    pub fn get&lt;T: Hash&gt;(&amp;self, id: &amp;T) -&gt; usize {\n        let mut hasher = DefaultHasher::new();\n        Hash::hash(id, &amp;mut hasher);\n        let index = (hasher.finish() % self.values.len() as u64) as usize;\n        self.values[index]\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2e26cf02bd919a75379221f6b7928f7a\" rel=\"nofollow noreferrer\">Link to Playground</a></p>\n\n<p>I think that the above code guarantees the 1st point (always same output for same input), but not necessarily the 2nd (uniformity of the distribution).</p>\n\n<p>Is there a fast implementation of such a function so that both points are guaranteed?</p>\n"}, {"tags": ["asynchronous", "rust", "async-await"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 5, "last_activity_date": 1574877302, "creation_date": 1574877302, "answer_id": 59075947, "question_id": 59075820, "link": "https://stackoverflow.com/questions/59075820/is-there-a-way-for-await-to-return-resultt-e-and-not-t/59075947#59075947", "title": "Is there a way for await to return Result&lt;T, E&gt; and not T?", "body": "<p>The <code>?</code> is not an integral part of <code>await</code>. It is an operator itself, which will unwrap valid values or return erroneous values, propagating them to the calling function. Without it, you then have to check the result yourself:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match get_item_response(&amp;client, \"1\").await {\n    Ok(response) =&gt; /* do things with response */,\n    Err(e) =&gt; /* deal with error */,\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12316478, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/mBsoc.jpg?s=128&g=1", "display_name": "S. O. James", "link": "https://stackoverflow.com/users/12316478/s-o-james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 59075947, "answer_count": 1, "score": 1, "last_activity_date": 1574877359, "creation_date": 1574876842, "last_edit_date": 1574877359, "question_id": 59075820, "link": "https://stackoverflow.com/questions/59075820/is-there-a-way-for-await-to-return-resultt-e-and-not-t", "title": "Is there a way for await to return Result&lt;T, E&gt; and not T?", "body": "<p>I am using reqwest to make a get request on an API using the function:</p>\n\n<pre><code>async fn get_item_response(client: &amp;Client, id: &amp;str) -&gt; Result&lt;Response, reqwest::Error&gt; {\n    let base = \"http://someurl.com/item?={item_id}\"\n    .replace(\"{item_id}\", id);\n    client.get(&amp;base).send()\n}\n</code></pre>\n\n<pre><code>async fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let client = Client::new();\n    let response = get_item_response(&amp;client, \"1\").await?;\n}\n</code></pre>\n\n<p>The response is a Response type and not a Result which means I can't check if an error occured without panicking.\nIs there a way to access the Result?</p>\n"}, {"tags": ["multithreading", "rust"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1574875430, "creation_date": 1574875430, "answer_id": 59075478, "question_id": 59075477, "link": "https://stackoverflow.com/questions/59075477/what-are-idiomatic-ways-to-send-data-between-threads/59075478#59075478", "title": "What are idiomatic ways to send data between threads?", "body": "<p>The idiomatic way to do so is to use a <a href=\"https://doc.rust-lang.org/std/sync/mpsc/fn.channel.html\" rel=\"nofollow noreferrer\">channel</a>. It conceptually behaves like an unidirectional tunnel: you put something in one end and it comes out the other side.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::mpsc::channel;\n\nfn main() {\n    let (sender, receiver) = channel();\n\n    let handle = std::thread::spawn(move || {\n        sender.send(String::from(\"Hello world!\")).unwrap();\n    });\n\n    let data = receiver.recv().unwrap();\n    println!(\"Got {:?}\", data);\n\n    handle.join().unwrap();\n}\n</code></pre>\n\n<p>The channel won't work anymore when the receiver is dropped.</p>\n\n<p>They are mainly 3 ways to recover the data:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv\" rel=\"nofollow noreferrer\"><code>recv</code></a> will block until something is received</li>\n<li><a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv\" rel=\"nofollow noreferrer\"><code>try_recv</code></a> will return immediately. If the channel is not closed, it is either <code>Ok(data)</code> or <a href=\"https://doc.rust-lang.org/std/sync/mpsc/enum.TryRecvError.html#variant.Empty\" rel=\"nofollow noreferrer\"><code>Err(TryRevcError::Empty)</code></a>.</li>\n<li><a href=\"https://doc.rust-lang.org/std/sync/mpsc/struct.Receiver.html#method.recv_timeout\" rel=\"nofollow noreferrer\"><code>recv_timeout</code></a> is the same as <code>try_recv</code> but it waits to get a data a certain amount of time.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": true, "score": 7, "last_activity_date": 1574885264, "creation_date": 1574885264, "answer_id": 59077764, "question_id": 59075477, "link": "https://stackoverflow.com/questions/59075477/what-are-idiomatic-ways-to-send-data-between-threads/59077764#59077764", "title": "What are idiomatic ways to send data between threads?", "body": "<p>There are lots of ways to send send data between threads -- without a clear \"best\" solution. It depends on your situation. </p>\n\n<p><br></p>\n\n<h2>Using just <code>thread::join</code></h2>\n\n<p>Many people do not realize that you can very easily send data with only the <code>thread</code> API, but only twice: once to the new thread and once back.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::thread;\n\nlet data_in = String::from(\"lots of data\");\nlet handle = thread::spawn(move || {\n    println!(\"{}\", data_in);  // we can use the data here!\n\n    let data_out = heavy_compuations();\n    data_out // &lt;-- simply return the data from the closure\n});\n\nlet data_out = handle.join().expect(\"thread panicked :(\");\nprintln!(\"{}\", data_out);  // we can use the data generated in the thread here!\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3040f45fba1d8c00b64e40853626849e\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>This is immensely useful for threads that are just spawned to do one specific job. Note the <code>move</code> keyword before the closure that makes sure all referenced variables are moved into the closure (which is then moved to another thread).</p>\n\n<p><br></p>\n\n<h2>Channels from <code>std</code></h2>\n\n<p>The standard library offers a <a href=\"https://doc.rust-lang.org/stable/std/sync/mpsc/index.html\" rel=\"noreferrer\"><strong>m</strong>ulti <strong>p</strong>roducer <strong>s</strong>ingle <strong>c</strong>onsumer channel in <code>std::sync::mpsc</code></a>. You can send arbitrarily many values through a channel, so it can be used in more situations. Simple example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    sync::mpsc::channel,\n    thread,\n    time::Duration,\n};\n\nlet (sender, receiver) = channel();\nthread::spawn(move || {\n    sender.send(\"heavy computation 1\").expect(\"receiver hung up :(\");\n    thread::sleep(Duration::from_millis(500));\n    sender.send(\"heavy computation 2\").expect(\"receiver hung up :(\");\n});\n\nlet result1 = receiver.recv().unwrap();\nlet result2 = receiver.recv().unwrap();\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7121a537d8653f747198144ffa3a6a59\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>Of course you can create another channel to provide communication in the other direction as well. </p>\n\n<p><br></p>\n\n<h2>More powerful channels by <code>crossbeam</code></h2>\n\n<p>Unfortunately, the standard library currently only provides channels that are restricted to a single consumer (i.e. <code>Receiver</code> can't be cloned). To get more powerful channels, you probably want to use the <a href=\"https://docs.rs/crossbeam-channel/0.4.0/crossbeam_channel/index.html\" rel=\"noreferrer\">channels from the awesome <code>crossbeam</code> library</a>. Their description:</p>\n\n<blockquote>\n  <p>This crate is an alternative to <code>std::sync::mpsc</code> with more features and better performance.</p>\n</blockquote>\n\n<p>In particular, it is a mpmc (multi consumer!) channel. This provides a nice way to easily share work between multiple threads. Example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::thread;\n\n// You might want to use a bounded channel instead...\nlet (sender, receiver) = crossbeam_channel::unbounded();\nfor _ in 0..num_cpus::get() {\n    let receiver = receiver.clone();  // clone for this thread\n    thread::spawn(move || {\n        for job in receiver {\n            // process job\n        }\n    });\n}\n\n// Generate jobs\nfor x in 0..10_000 {\n    sender.send(x).expect(\"all threads hung up :(\");\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fc405090aad59c7d83edc8dcb986ba4e\" rel=\"noreferrer\">Playground</a>)</p>\n\n<p>Again, adding another channel allows you to communicate results back to the main thread.</p>\n\n<p><br></p>\n\n<h2>Other methods</h2>\n\n<p>There are plenty of other crates that offer some other means of sending data between threads. Too many to list them here. </p>\n\n<p>Note that <em>sending</em> data is not the only way to communicate between threads. There is also the possibility to <em>share</em> data between threads via <a href=\"https://doc.rust-lang.org/stable/std/sync/struct.Mutex.html\" rel=\"noreferrer\"><code>Mutex</code></a>, <a href=\"https://doc.rust-lang.org/stable/std/sync/atomic/index.html\" rel=\"noreferrer\">atomics</a>, lock-free data structures and many other ways. This is conceptually very different. It depends on the situation whether sending or sharing data is the better way to describe your cross thread communication.</p>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 607, "favorite_count": 1, "accepted_answer_id": 59077764, "answer_count": 2, "score": 5, "last_activity_date": 1574885264, "creation_date": 1574875430, "last_edit_date": 1574883115, "question_id": 59075477, "link": "https://stackoverflow.com/questions/59075477/what-are-idiomatic-ways-to-send-data-between-threads", "title": "What are idiomatic ways to send data between threads?", "body": "<p>I want to do some calculation in a separate thread, and then recover the data from the main thread. What are the canonical ways to pass some data from a thread to another in Rust?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let handle = std::thread::spawn(|| {\n        // I want to send this to the main thread:\n        String::from(\"Hello world!\")\n    });\n\n    // How to recover the data from the other thread?\n\n    handle.join().unwrap();\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574932904, "post_id": 59073701, "comment_id": 104406565, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/59075477/what-are-idiomatic-ways-to-send-data-between-threads\">What are idiomatic ways to send data between threads?</a>"}, {"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574940878, "post_id": 59073701, "comment_id": 104410974, "body": "@FrenchBoiethios it was not about sending between threads. It was about modifying the pointed data. I got the point of <code>Arc</code>, that it is like <code>std::shared_ptr</code> without <code>mutex</code> or <code>lock</code>. But I do not realize the point of <code>std::sync::RwLock</code> for necessity of wrapping it with <code>Arc</code>. <code>RwLock</code> is meaningless without threads, isn&#39;t it?  But it is another question, of course."}], "answers": [{"comments": [{"owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 0, "creation_date": 1574873329, "post_id": 59074518, "comment_id": 104387321, "body": "No, the interest was in changing the value for another thread."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "edited": false, "score": 1, "creation_date": 1574873400, "post_id": 59074518, "comment_id": 104387361, "body": "@dronte7 Hum, that wasn&#39;t clear from the question. You want to transfer some data from the spawned thread to the main thread? Just use a channel."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 0, "last_activity_date": 1574871882, "creation_date": 1574871882, "answer_id": 59074518, "question_id": 59073701, "link": "https://stackoverflow.com/questions/59073701/rust-arc-how-to-get-mut-and-after-that-restore-ability-to-read-by-other-copies-o/59074518#59074518", "title": "Rust Arc how to get_mut and after that restore ability to read by other copies of the Arc?", "body": "<p>I simplified the code to make the issue obvious:</p>\n\n<pre><code>use std::sync::Arc;\nuse std::thread;\nuse std::time::Duration;\n\n#[derive(Debug)]\nstruct El {\n    n: i64,\n}\n\nfn main() {\n    let mut a = Arc::new(El { n: 5 });\n    let b = Arc::clone(&amp;a);\n    let th = thread::spawn(move || {\n        thread::sleep(Duration::from_millis(1000));\n        println!(\"{:?}\", b);\n    });\n    let _c = Arc::get_mut(&amp;mut a).unwrap();\n    th.join().expect(\"some errors occurred\");\n}\n</code></pre>\n\n<p><code>Arc::get_mut</code> functions only when its <code>Arc</code> parameter is the unique owner: in this situation you can take back the ownership of the data.</p>\n\n<p>In your code, at this line, the spawned thread is still running, and it still holds the shared data through <code>b</code>: <code>a</code> and <code>b</code> share the ownership of the data. You must first ensure that <code>b</code> is dropped before taking back the data's ownership (notice the swap of the 2 last lines):</p>\n\n<pre><code>use std::sync::Arc;\nuse std::thread;\nuse std::time::Duration;\n\n#[derive(Debug)]\nstruct El {\n    n: i64,\n}\n\nfn main() {\n    let mut a = Arc::new(El { n: 5 });\n    let b = Arc::clone(&amp;a);\n    let th = thread::spawn(move || {\n        thread::sleep(Duration::from_millis(1000));\n        println!(\"{:?}\", b);\n    });\n    th.join().expect(\"some errors occurred\"); // b has been dropped\n    let _c = Arc::get_mut(&amp;mut a).unwrap();\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "is_accepted": true, "score": 2, "last_activity_date": 1574924000, "last_edit_date": 1574924000, "creation_date": 1574923660, "answer_id": 59083154, "question_id": 59073701, "link": "https://stackoverflow.com/questions/59073701/rust-arc-how-to-get-mut-and-after-that-restore-ability-to-read-by-other-copies-o/59083154#59083154", "title": "Rust Arc how to get_mut and after that restore ability to read by other copies of the Arc?", "body": "<p>You want to write the contents of an <code>Arc</code> in one thread an read it in another. In Rust a value is either shared readable or exclusive writable. Arcs with more than one reference are shared.</p>\n\n<p>You can solve this problem by using internal mutability, e.g. via <code>Arc&lt;Mutex&lt;El&gt;&gt;</code> or <code>Arc&lt;RwLock&lt;El&gt;&gt;</code>. <code>Mutex</code> and <code>RwLock</code> ensure the shared/exclusive constraint dynamically by blocking all reads until a write is complete and blocking all writes as long as a read lock exists.</p>\n\n<p>Example:</p>\n\n<pre><code>fn main() -&gt; io::Result&lt;()&gt; {\n  let a = Arc::new(Mutex::new(El{n: 5}));\n  let b = Arc::clone(&amp;a);\n  let th = thread::spawn(move || {\n    println!(r#\"Hello, World!\"#);\n    thread::sleep(Duration::from_millis(1000));\n    println!(\"{:?}\", b.lock().unwrap());\n  });\n  a.lock().unwrap().n = 10;\n  drop(a);\n  th.join().expect(\"some errors occured\");\n  Ok(())\n}\n</code></pre>\n"}], "owner": {"reputation": 675, "user_id": 11759324, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/21a203b04e986490ef45fe9d09e29467?s=128&d=identicon&r=PG&f=1", "display_name": "dronte7", "link": "https://stackoverflow.com/users/11759324/dronte7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1222, "favorite_count": 0, "accepted_answer_id": 59083154, "answer_count": 2, "score": 0, "last_activity_date": 1574924000, "creation_date": 1574869081, "last_edit_date": 1574871923, "question_id": 59073701, "link": "https://stackoverflow.com/questions/59073701/rust-arc-how-to-get-mut-and-after-that-restore-ability-to-read-by-other-copies-o", "title": "Rust Arc how to get_mut and after that restore ability to read by other copies of the Arc?", "body": "<p>I'd like to know how to change the value inside the <code>Arc</code> and then make other copies of the <code>Arc</code> valid again.</p>\n\n<pre><code>use std::sync::Arc;\nuse std::thread;\nuse std::error::Error;\nuse std::io;\nuse std::time::Duration;\n\n#[derive(Debug)]\nstruct El {\n  n: i64,\n}\n\nfn main() -&gt; io::Result&lt;()&gt; {\n  let mut a = Arc::new(El{n: 5});\n  let b = Arc::clone(&amp;a);\n  let th = thread::spawn(move || {\n    println!(r#\"Hello, World!\"#);\n    thread::sleep(Duration::from_millis(1000));\n    println!(\"{:?}\", b);\n  });\n  let mut c = Arc::get_mut(&amp;mut a).unwrap();\n  c.n = 10;\n  drop(c);\n  drop(a);\n  th.join().expect(\"some errors occured\");\n  Ok(())\n}\n</code></pre>\n\n<p>this would results into a panic at the moment when the mutation is already done and pointers are dropped. How to resolve it?</p>\n"}, {"tags": ["enums", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574870818, "post_id": 59073465, "comment_id": 104385991, "body": "So what wrong with <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6c0e05fc4a108965e096ae37967c24d2\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ?"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 0, "creation_date": 1574870906, "post_id": 59073465, "comment_id": 104386041, "body": "@VittorioRomeo I think there is one, but unfortunately I do not remember. Still, it shouldn&#39;t be too much code, so maybe you could just implement it yourself in your project."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574873405, "post_id": 59073465, "comment_id": 104387364, "body": "Note that there is a major difference between <code>enum</code>s and <code>std::variant</code>: the ability to have different variants of the same contained type, which is very important for some uses of <code>enum</code>. I don&#39;t know how you could preserve that ability while also eliminating the perceived repetition here, which is probably why no related RFC has really gotten off the ground. I can also imagine interesting (=surprising) interactions with &quot;anonymous <code>enum</code>s&quot;, which is another commonly asked for feature."}], "answers": [{"comments": [{"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 0, "creation_date": 1574872882, "post_id": 59074616, "comment_id": 104387080, "body": "I still want to use <code>Foo</code> and <code>Bar</code> independently of <code>MyEnum</code>. I don&#39;t see how the <code>Either</code> solution helps, as it still needs names for <code>L</code>and <code>R</code> (i.e. <code>Left</code> and `Right)."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "edited": false, "score": 2, "creation_date": 1574873325, "post_id": 59074616, "comment_id": 104387317, "body": "@VittorioRomeo nothing stops you from using Rust like C or C++. It is just that with more powerful language mechanisms like pattern matching, your concern here is mostly void. I happen to believe that it is more important to spell out the fact you are using a sum type."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 3, "last_activity_date": 1574872151, "creation_date": 1574872151, "answer_id": 59074616, "question_id": 59073465, "link": "https://stackoverflow.com/questions/59073465/avoiding-variant-name-and-type-repetition-in-enum/59074616#59074616", "title": "Avoiding variant name and type repetition in `enum`", "body": "<p>An <code>enum</code> variant can be struct, tuple or unit struct. So you can simply define:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum MyEnum {\n    Foo {},\n    Bar {},\n    Baz {},\n}\n</code></pre>\n\n<p>Or if you would like to define these variants as independent structs themselves, I'd argue that a more idiomatic 'functional' way is to use something like <code>Either</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Either&lt;L, R&gt; {\n    Left(L),\n    Right(R),\n}\n\nstruct Foo {}\nstruct Bar {}\n\ntype MyEnum = Either&lt;Foo, Bar&gt;;\n</code></pre>\n\n<p>There's a crate with the same name, but this basic definition should be sufficient most of the time.</p>\n"}, {"tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 4, "last_activity_date": 1574873501, "creation_date": 1574873501, "answer_id": 59074991, "question_id": 59073465, "link": "https://stackoverflow.com/questions/59073465/avoiding-variant-name-and-type-repetition-in-enum/59074991#59074991", "title": "Avoiding variant name and type repetition in `enum`", "body": "<p>Maybe you can use this macro-based solution:</p>\n\n<pre><code>macro_rules! type_dispatch_enum{(enum $e: ident {$($v: ident,)*}) =&gt; {\n    enum $e {\n        $($v($v),)*\n    }\n    $(\n        impl From&lt;$v&gt; for $e {\n            fn from(v: $v) -&gt; Self {\n                $e::$v(v)\n            }\n        }\n    )+\n}}\n\nstruct S1 {}\nstruct S2;\nstruct S3(usize);\n\ntype_dispatch_enum!(enum E {\n    S1,\n    S2,\n    S3,\n});\n\nfn take_e(e: E) {}\n\nfn main() {\n    take_e(S1{}.into());\n    take_e(S2.into());\n    take_e(S3(5).into());\n}\n</code></pre>\n"}], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "closed_date": 1574929294, "accepted_answer_id": 59074991, "answer_count": 2, "score": 1, "last_activity_date": 1574873501, "creation_date": 1574868301, "question_id": 59073465, "link": "https://stackoverflow.com/questions/59073465/avoiding-variant-name-and-type-repetition-in-enum", "closed_reason": "Duplicate", "title": "Avoiding variant name and type repetition in `enum`", "body": "<p>I find myself often defining <code>enum</code> types like the following:</p>\n\n<pre><code>struct Foo { }\nstruct Bar { }\nstruct Baz { }\n\nenum MyEnum {\n    Foo(Foo),\n    Bar(Bar),\n    Baz(Baz),\n}\n</code></pre>\n\n<p>I find the repetition of <code>Foo(Foo)</code> inelegant and redundant. It also makes initialization redundant:</p>\n\n<pre><code>let example = MyEnum::Foo(Foo{ /* ... */ });\n</code></pre>\n\n<p>I would like to instead write something like the following pseudocode:</p>\n\n<pre><code>struct Foo { }\nstruct Bar { }\nstruct Baz { }\n\ntype_enum MyEnum {\n    Foo,\n    Bar,\n    Baz,\n}\n\nlet example = MyEnum::Foo{ /* ...anything that `Foo` supports ... */ };\n</code></pre>\n\n<p>The above is very similar to <code>std::variant</code> in C++17. <strong>Does Rust support anything like that?</strong> </p>\n"}, {"tags": ["rust", "formatting"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574860867, "post_id": 59070218, "comment_id": 104380209, "body": "I&#39;m... surprised you can even pass <code>Arguments</code> to <code>println!</code> directly. I mean, I guess it makes sense, but it seems kind of magical."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574861335, "post_id": 59070218, "comment_id": 104380488, "body": "But it&#39;s not, <a href=\"https://github.com/rust-lang/rust/blob/770b9e3012bd58bdf6046d328dabfd57df163eb6/src/libstd/io/stdio.rs#L801\" rel=\"nofollow noreferrer\"><code>std::io::_print</code></a>, which is called by <code>print!</code> and <code>println!</code> macros directly accepts <code>Arguments</code>... Hence the confusion."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574861697, "post_id": 59070218, "comment_id": 104380696, "body": "But <code>println!</code> <i>itself</i> calls <code>format_args!</code> on its arguments, so you&#39;re making an <code>Arguments</code> that <i>contains</i> an <code>Arguments</code>. The reason it works is because <a href=\"https://doc.rust-lang.org/std/fmt/struct.Arguments.html\" rel=\"nofollow noreferrer\"><code>Arguments</code> itself implements <code>Display</code></a>, which is the part that surprises me."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574861877, "post_id": 59070218, "comment_id": 104380812, "body": "Yes, I tried to do it this way because I&#39;m aware of it, you can chain <code>format_args!</code> as many times as possible and that&#39;s something I gotten used to doing to allocate as little as possible for logging... And it always worked for most things, just for some reason alignment is special in some way and also is completely ignored. When I noticed, I doublechecked my code just to check whether I did something wrong, because it does work for pretty much everything else."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1574859648, "post_id": 59070466, "comment_id": 104379543, "body": "It would be nice to explain why the extra allocation is necessary."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1574861323, "post_id": 59070466, "comment_id": 104380485, "body": "That still doesn&#39;t really explain why <code>format_args!</code> arguments don&#39;t respect the width parameter, which I&#39;m assuming is because they can&#39;t predict the actual width of what they are going to display, unlike <code>format!</code> which knows because it uses a temporary buffer."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1574861433, "post_id": 59070466, "comment_id": 104380549, "body": "Exactly, I&#39;m not following. <a href=\"https://github.com/rust-lang/rust/blob/770b9e3012bd58bdf6046d328dabfd57df163eb6/src/libstd/io/stdio.rs#L801\" rel=\"nofollow noreferrer\"><code>std::io::_print</code></a>, which is called by <code>print!</code> and <code>println!</code> macros directly accepts <code>Arguments</code>... Did I just find a bug? It shouldn&#39;t silently fail. Other than that, I asked if there&#39;s a way to do it, and I got an answer, thanks."}, {"owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "edited": false, "score": 1, "creation_date": 1574862136, "post_id": 59070466, "comment_id": 104380952, "body": "Since <code>format_args!</code>  produces a value of type <code>fmt::Arguments</code> and <code>std::fmt::Display</code>  trait of <code>fmt::Arguments</code> has no alignment (look inside <a href=\"https://doc.rust-lang.org/src/core/fmt/mod.rs.html#415-419\" rel=\"nofollow noreferrer\">source code</a>)"}], "tags": [], "owner": {"reputation": 8841, "user_id": 8208215, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXD4t.png?s=128&g=1", "display_name": "wasmup", "link": "https://stackoverflow.com/users/8208215/wasmup"}, "is_accepted": true, "score": 3, "last_activity_date": 1574862372, "last_edit_date": 1592644375, "creation_date": 1574858418, "answer_id": 59070466, "question_id": 59070218, "link": "https://stackoverflow.com/questions/59070218/centering-a-dynamic-string-in-rust/59070466#59070466", "title": "Centering a dynamic string in Rust?", "body": "<p>Try <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fbdd906f301ea82753ff3e88f7ccd505\" rel=\"nofollow noreferrer\">this</a> (see <a href=\"https://doc.rust-lang.org/std/fmt/index.html\" rel=\"nofollow noreferrer\">fmt</a>):</p>\n<pre><code>fn main() {\n    println!(&quot;{:=^50}&quot;, &quot;Stuff&quot;);\n    println!(&quot;{:=^50}&quot;, format!(&quot;Stuff {}&quot;, 42));\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>======================Stuff=======================\n=====================Stuff 42=====================\n</code></pre>\n<hr />\n<p>Try <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cf435d5ce59ee7260ce692cc60fe616c\" rel=\"nofollow noreferrer\">this</a>:</p>\n<pre><code>fn main() {\n    println!(&quot;{:=^50}&quot;, &quot;Stuff&quot;);\n    println!(&quot;{:=^50}&quot;, std::fmt::format(format_args!(&quot;Stuff {}&quot;, 42)));\n}\n</code></pre>\n<p>Output:</p>\n<pre><code>======================Stuff=======================\n=====================Stuff 42=====================\n</code></pre>\n<hr />\n<p>See <a href=\"https://doc.rust-lang.org/std/macro.format_args.html\" rel=\"nofollow noreferrer\">format_args</a>:</p>\n<blockquote>\n<p>This macro produces a value of type fmt::Arguments. This value can be passed to the macros within std::fmt for performing useful redirection. All other formatting macros (format!, write!, println!, etc) are proxied through this one. format_args!, unlike its derived macros, avoids heap allocations.</p>\n</blockquote>\n<p><a href=\"https://doc.rust-lang.org/std/fmt/struct.Arguments.html\" rel=\"nofollow noreferrer\">Arguments</a>:</p>\n<blockquote>\n<p>The format_args! macro will safely create an instance of this structure. The macro validates the format string at compile-time so usage of the write and format functions can be safely performed.</p>\n</blockquote>\n<p>See <a href=\"https://doc.rust-lang.org/src/core/fmt/mod.rs.html#415-419\" rel=\"nofollow noreferrer\">Display for Arguments</a>:</p>\n<pre><code>impl Display for Arguments&lt;'_&gt; {\n    fn fmt(&amp;self, fmt: &amp;mut Formatter&lt;'_&gt;) -&gt; Result {\n        write(fmt.buf, *self)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 0, "accepted_answer_id": 59070466, "answer_count": 1, "score": 3, "last_activity_date": 1574862372, "creation_date": 1574857589, "question_id": 59070218, "link": "https://stackoverflow.com/questions/59070218/centering-a-dynamic-string-in-rust", "title": "Centering a dynamic string in Rust?", "body": "<pre><code>fn main() {\n    println!(\"{:=^50}\", \"Stuff\");\n    println!(\"{:=^50}\", format_args!(\"Stuff {}\", 42));\n}\n</code></pre>\n\n<p>One would think there's no reason it shouldn't work, but actually, it doesn't:</p>\n\n<pre><code>======================Stuff=======================\nStuff 42\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7797aab7fc5c424a2fc16516488a501b\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n\n<p>I can just do it myself, sure, but is there a built in way to do this?</p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574865806, "post_id": 59070028, "comment_id": 104383182, "body": "Related: <a href=\"https://stackoverflow.com/questions/47980023/how-to-convert-from-u8-to-vecu8\">How to convert from &amp;&#91;u8&#93; to Vec&lt;u8&gt;?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 150, "user_id": 3045824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91ebcb0c0cb75ebaa96ff078fc53af81?s=128&d=identicon&r=PG&f=1", "display_name": "esguti", "link": "https://stackoverflow.com/users/3045824/esguti"}, "edited": false, "score": 0, "creation_date": 1574930760, "post_id": 59072084, "comment_id": 104405430, "body": "I see, the dynamic (run time) arrays (fixed lenght) are someway the &quot;slices&quot; in Rust. Coming from C/C++ this is not a clear conversion.  <a href=\"https://aminb.gitbooks.io/rust-for-c/content/arrays/index.html\" rel=\"nofollow noreferrer\">aminb.gitbooks.io/rust-for-c/content/arrays/index.html</a>"}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": true, "score": 4, "last_activity_date": 1574863891, "creation_date": 1574863891, "answer_id": 59072084, "question_id": 59070028, "link": "https://stackoverflow.com/questions/59070028/copy-array-and-modify-one-value-in-rust/59072084#59072084", "title": "Copy array and modify one value in Rust", "body": "<p>You do not have an array (whose length is known), but you have a slice (whose length is not known at compile time). Thus, you must adjust to the dynamic length. </p>\n\n<p>You probably want to use <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.to_vec\" rel=\"nofollow noreferrer\"><code>self.data.to_vec()</code></a> instead of <code>Box::new(self.data)</code>.</p>\n\n<p><code>to_vec</code> copies the values into a newly allocated vector having enough capacity. </p>\n"}], "owner": {"reputation": 150, "user_id": 3045824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/91ebcb0c0cb75ebaa96ff078fc53af81?s=128&d=identicon&r=PG&f=1", "display_name": "esguti", "link": "https://stackoverflow.com/users/3045824/esguti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 890, "favorite_count": 0, "accepted_answer_id": 59072084, "answer_count": 1, "score": 3, "last_activity_date": 1574863891, "creation_date": 1574856925, "last_edit_date": 1574858285, "question_id": 59070028, "link": "https://stackoverflow.com/questions/59070028/copy-array-and-modify-one-value-in-rust", "title": "Copy array and modify one value in Rust", "body": "<p>I have an struct with a refence to an array of type T:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct myStruct&lt;'a, T&gt; {\n    pub data: &amp;'a [T],\n}\n</code></pre>\n\n<p>I want to modify one element of this array and check the result of an operation. for that I am trying to copy the array, modify the value and execute the operation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn check_value(&amp;self, data: &amp;T, position: usize) -&gt; bool {\n    if position &gt;= self.data.len() {\n        return false;\n    }\n    let array_temp = Box::new(self.data);\n    array_temp[position] = *data;\n\n    return mycheck(array_temp);\n}\n</code></pre>\n\n<p>I am getting this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to `array_temp[_]` which is behind a `&amp;` reference\n</code></pre>\n\n<p>I would like to know how to copy the array and modify the value or just modify directly the value in the original array (<em>data</em>) and restore the original value later.</p>\n\n<p>Here you have a complete code to compile</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct MyStruct&lt;'a, T&gt; {\n    pub data: &amp;'a [T],\n}\n\nimpl&lt;'a, T&gt; MyStruct&lt;'a, T&gt;\nwhere\n    T: Copy,\n{\n    fn mycheck(&amp;self, myarray: &amp;[T]) -&gt; bool {\n        if myarray.len() &gt; 0 {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    pub fn check_value(&amp;self, data: &amp;T, position: usize) -&gt; bool {\n        if position &gt;= self.data.len() {\n            return false;\n        }\n        let array_temp = Box::new(self.data);\n        array_temp[position] = *data;\n        return self.mycheck(&amp;array_temp);\n    }\n}\n\nfn main() {\n    println!(\"Hello World!\");\n}\n</code></pre>\n"}, {"tags": ["rust", "refactoring", "mutex", "borrowing"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1574856069, "post_id": 59069382, "comment_id": 104377512, "body": "<code>lock()</code> returns a <code>MutexGuard</code> and not the value itself. You can access the value stored inside because it implements <code>Deref</code> and <code>DerefMut</code>, but still you are referencing the mutex guard. When the mutex guard goes out of scope, your reference will point to freed memory, so rust is preventing that from happening. (Remember that the mutex lock will be released once the mutex guard goes out of scope!!!) PS: Instead of hiding the <code>.expect()</code> in another method you should properly handle the error case"}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1574856305, "post_id": 59069382, "comment_id": 104377641, "body": "@SvetlinZarev: that makes sense. Let&#39;s say I don&#39;t use <code>expect</code>, and I do handle the error, but the error handling is the same in every function. Again, how do I avoid the repetition in that case? The only way I can think of is a higher-order function - is that idiomatic?"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1574856434, "post_id": 59069382, "comment_id": 104377706, "body": "I really cannot say what is idiomatic, but my observation is that common repetitive tasks are usually handled by macros."}, {"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1574856681, "post_id": 59069382, "comment_id": 104377860, "body": "The refactoring would be valid if you change the result type from <code>&amp;mut State</code> to <code>MutexGuard&lt;State&gt;</code>. @Svetlin: I think this is what you wanted to express right?"}, {"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1574857037, "post_id": 59069382, "comment_id": 104378049, "body": "I meant that one cannot bypass the <code>MutexGuard</code>.  If OP returns MutexGuard -&gt; then that should work."}, {"owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1574857495, "post_id": 59069382, "comment_id": 104378321, "body": "@SvetlinZarev: I am OK with returning <code>MutexGuard</code>, feel free to add that as an answer."}], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": true, "score": 4, "last_activity_date": 1574858419, "creation_date": 1574858419, "answer_id": 59070467, "question_id": 59069382, "link": "https://stackoverflow.com/questions/59069382/mutable-borrow-to-object-inside-mutex-how-to-refactor/59070467#59070467", "title": "Mutable borrow to object inside Mutex - how to refactor?", "body": "<p>The <code>lock()</code> method returns <code>MutexGuard</code> instead of a direct reference to the guarded object. You are able to work with object reference, because <code>MutexGuard</code> implements <code>Deref</code> and <code>DerefMut</code>, but you still need the mutex-guard to be in scope, because when it goes out of scope the mutex lock will be released. Also the lifetime of the reference to the iner object is bound to the lifetime of the mutex guard, so the compiler will not allow you to use the reference to the inner object without the mutex guard.</p>\n\n<p>You can extract your common logic in a macro or a method, but it should return MutexGuard instead of a reference to the inner object.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 2, "last_activity_date": 1574872827, "last_edit_date": 1574872827, "creation_date": 1574864742, "answer_id": 59072336, "question_id": 59069382, "link": "https://stackoverflow.com/questions/59069382/mutable-borrow-to-object-inside-mutex-how-to-refactor/59072336#59072336", "title": "Mutable borrow to object inside Mutex - how to refactor?", "body": "<p>One way to abstract over locking and unlocking a mutex is for the API to accept a closure and pass the unlocked reference to it.</p>\n\n<pre><code>fn with_state&lt;R&gt;(data: Arc&lt;Mutex&lt;State&gt;&gt;, f: impl FnOnce(&amp;mut State) -&gt; R) -&gt; R {\n    let state = &amp;mut data.lock().expect(\"Could not lock mutex\");\n    f(state)\n}\n</code></pre>\n\n<p>Given <code>with_state</code>, you can write <code>foo</code> as follows:</p>\n\n<pre><code>fn foo(data: Arc&lt;Mutex&lt;State&gt;&gt;) {\n    with_state(data, |state| state.value += 1)\n}\n</code></pre>\n\n<p>This is similar to the way crates like <code>crossbeam</code> guarantee that scoped threads always join. It is stricter than returning a <code>MutexGuard</code> because when you call <code>with_state</code>, the guard is guaranteed to be dropped after the closure returns. On the other hand, returning a <code>MutexGuard</code> is more general because you can write <code>with_state</code> in terms of a function that returns a guard, but you can't go the other way around (use <code>with_state</code> to write a function that returns a guard). </p>\n"}], "owner": {"reputation": 82712, "user_id": 598696, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/k1Yif.png?s=128&g=1", "display_name": "Vittorio Romeo", "link": "https://stackoverflow.com/users/598696/vittorio-romeo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 673, "favorite_count": 0, "accepted_answer_id": 59070467, "answer_count": 2, "score": 1, "last_activity_date": 1574872827, "creation_date": 1574854762, "question_id": 59069382, "link": "https://stackoverflow.com/questions/59069382/mutable-borrow-to-object-inside-mutex-how-to-refactor", "title": "Mutable borrow to object inside Mutex - how to refactor?", "body": "<p>I have the following pattern in many of my functions:</p>\n\n<pre><code>use std::sync::{Arc, Mutex};\n\nstruct State { \n    value: i32\n}\n\nfn foo(data: Arc&lt;Mutex&lt;State&gt;&gt;) {\n    let state = &amp;mut data.lock().expect(\"Could not lock mutex\");\n    // mutate `state`\n}\n</code></pre>\n\n<p><code>&amp;mut *data.lock().expect(\"Could not lock mutex\")</code> is repeated over and over, so I would like to refactor it to a function, in order to write something like</p>\n\n<pre><code>let state = get_state(data); \n</code></pre>\n\n<p>I've tried the following:</p>\n\n<pre><code>fn get_state(data: &amp;Arc&lt;Mutex&lt;State&gt;&gt;) -&gt; &amp;mut State {\n    &amp;mut data.lock().expect(\"Could not lock mutex\")\n}\n</code></pre>\n\n<p>Which fails to compile with:</p>\n\n<blockquote>\n  <p>ERROR: cannot return value referencing temporary value</p>\n</blockquote>\n\n<p>This makes me believe that <code>data.state.lock().expect(\"...\")</code> returns by value. However, I can see the state being mutated through multiple <code>foo</code> calls <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7d968a7f324ffeb11d4c9e70187c08f2\" rel=\"nofollow noreferrer\"><strong>on this playground</strong></a>.</p>\n\n<p><strong>What is going on here? Why does my seemingly simple refactor fail to compile?</strong></p>\n\n<hr>\n\n<p>EDIT: </p>\n\n<p>I would expect the following to work as well:</p>\n\n<pre><code>fn get_state&lt;'a&gt;(data: &amp;'a Arc&lt;Mutex&lt;State&gt;&gt;) -&gt; &amp;'a mut State {\n    let state: &amp;'a mut State = &amp;mut data.lock().expect(\"Could not lock mutex\");\n    state\n}\n</code></pre>\n\n<p>But it fails with:</p>\n\n<pre><code>   |\n12 | fn get_state&lt;'a&gt;(data: &amp;'a Arc&lt;Mutex&lt;State&gt;&gt;) -&gt; &amp;'a mut State {\n   |              -- lifetime `'a` defined here\n13 |     let state: &amp;'a mut State = &amp;mut data.lock().expect(\"Could not lock mutex\");\n   |                -------------        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n   |                |\n   |                type annotation requires that borrow lasts for `'a`\n14 |     state\n15 | }\n   | - temporary value is freed at the end of this statement\n</code></pre>\n\n<p><strong>Why doesn't the lifetime of whatever is returned from <code>lock</code> match the one of the <code>data</code> parameter?</strong></p>\n"}, {"tags": ["reference", "rust", "iterator", "min"], "answers": [{"comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 2, "creation_date": 1574845027, "post_id": 59065433, "comment_id": 104371262, "body": "Note that <code>a.into_iter()</code> takes ownership of <code>a</code>. For integer values, you can also get an owned value with <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.copied\" rel=\"nofollow noreferrer\"><code>a.iter().copied()</code></a> which allows you to keep using <code>a</code> afterwards."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 6, "last_activity_date": 1574849826, "last_edit_date": 1574849826, "creation_date": 1574841038, "answer_id": 59065433, "question_id": 59065115, "link": "https://stackoverflow.com/questions/59065115/in-rust-why-does-stditeriterators-min-function-return-a-reference/59065433#59065433", "title": "In Rust, why does std::iter::Iterator&#39;s min function return a reference?", "body": "<p>Technically it does not: <code>min()</code> returns an <code>Option&lt;Self::Item&gt;</code> where <code>Self</code> is the Iterator. That is, <code>min()</code> returns whatever the iterator yields. Since the iterator is created via <code>.iter()</code> on the <code>Vec</code>, you get an Iterator over references, therefore <code>min()</code> returns a reference. If you use <code>a.into_iter().min()</code> you get an owned value.</p>\n\n<p>Your question suggests you wondered about the <code>Option</code> as well: The iterator may not yield any items at all. In this case, <code>min()</code> has no value and <code>None</code> is returned.</p>\n"}], "owner": {"reputation": 2003, "user_id": 457586, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/8fced1b618d6b8a714c598d3f8f7d9fe?s=128&d=identicon&r=PG", "display_name": "dynamitereed", "link": "https://stackoverflow.com/users/457586/dynamitereed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 266, "favorite_count": 0, "accepted_answer_id": 59065433, "answer_count": 1, "score": 2, "last_activity_date": 1574849826, "creation_date": 1574839731, "question_id": 59065115, "link": "https://stackoverflow.com/questions/59065115/in-rust-why-does-stditeriterators-min-function-return-a-reference", "title": "In Rust, why does std::iter::Iterator&#39;s min function return a reference?", "body": "<p>In Rust, why does std::iter::Iterator's <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.min\" rel=\"nofollow noreferrer\">min</a> function return a reference?</p>\n\n<p>Take this example from the documentation page linked above:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let a = vec![1, 2, 3];\n\nassert_eq!(a.iter().min(), Some(&amp;1));\n</code></pre>\n\n<p>Why is the result a reference to the value <code>1</code> wrapped inside the Option type instead of the literal value <code>1</code>?  This little detail tripped me up recently.  I found I had to dereference the result after unwrapping it before I could use it in math operations.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "edited": false, "score": 2, "creation_date": 1574833626, "post_id": 59063537, "comment_id": 104366219, "body": "Can you tell us what symbols those are?  Those would be relevant to telling you how to fix the problem."}, {"owner": {"reputation": 2636, "user_id": 4635560, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iv67d.jpg?s=128&g=1", "display_name": "Manthan Tilva", "link": "https://stackoverflow.com/users/4635560/manthan-tilva"}, "edited": false, "score": 0, "creation_date": 1574850361, "post_id": 59063537, "comment_id": 104374289, "body": "Add full error log. I tried with <code>cargo 1.41.0-nightly (8280633db 2019-11-11)</code> and <code>cargo 1.39.0 (1c6ec66d5 2019-09-30)</code> not getting any error."}, {"owner": {"reputation": 31706, "user_id": 479180, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/a6a0fe77d0b255095771224c05db75cc?s=128&d=identicon&r=PG", "display_name": "LuxuryMode", "link": "https://stackoverflow.com/users/479180/luxurymode"}, "reply_to_user": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "edited": false, "score": 0, "creation_date": 1574900711, "post_id": 59063537, "comment_id": 104397303, "body": "@bk2204 added what I think is the relevant part of the error log. It was a huge output so didn&#39;t want to paste the entire thing."}], "owner": {"reputation": 31706, "user_id": 479180, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/a6a0fe77d0b255095771224c05db75cc?s=128&d=identicon&r=PG", "display_name": "LuxuryMode", "link": "https://stackoverflow.com/users/479180/luxurymode"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 719, "favorite_count": 2, "answer_count": 0, "score": 2, "last_activity_date": 1574900649, "creation_date": 1574832289, "last_edit_date": 1574900649, "question_id": 59063537, "link": "https://stackoverflow.com/questions/59063537/how-can-i-resolve-cargo-build-failing-with-linking-with-cc-failed-exit-code", "title": "How can I resolve cargo build failing with &quot;linking with `cc` failed: exit code: 1&quot;", "body": "<p>I cloned <a href=\"https://github.com/nushell/nushell\" rel=\"nofollow noreferrer\">a project</a> and ran <code>cargo build</code>. It fails with \"error: linking with cc failed: exit code: 1\" and something about \"Undefined symbols for architecture x86_64:...\". </p>\n\n<p>Any ideas on how to resolve this?</p>\n\n<p>I'm using MacOS 10.13.6 with cargo 1.40.0-nightly (5da4b4d47 2019-10-28) </p>\n\n<p>EDIT: adding full error log:</p>\n\n<pre><code>  = note: ld: warning: text-based stub file /System/Library/Frameworks//Security.framework/Security.tbd and library file /System/Library/Frameworks//Security.framework/Security are out of sync. Falling back to library file for linking.\n          ld: warning: text-based stub file /System/Library/Frameworks//CoreFoundation.framework/CoreFoundation.tbd and library file /System/Library/Frameworks//CoreFoundation.framework/CoreFoundation are out of sync. Falling back to library file for linking.\n          ld: warning: text-based stub file /System/Library/Frameworks//Security.framework/Security.tbd and library file /System/Library/Frameworks//Security.framework/Security are out of sync. Falling back to library file for linking.\n          ld: warning: text-based stub file /System/Library/Frameworks//CoreFoundation.framework/CoreFoundation.tbd and library file /System/Library/Frameworks//CoreFoundation.framework/CoreFoundation are out of sync. Falling back to library file for linking.\n          ld: warning: text-based stub file /System/Library/Frameworks//CoreFoundation.framework/CoreFoundation.tbd and library file /System/Library/Frameworks//CoreFoundation.framework/CoreFoundation are out of sync. Falling back to library file for linking.\n          Undefined symbols for architecture x86_64:\n            \"___isOSVersionAtLeast\", referenced from:\n                _sectransp_connect_step1 in libcurl_sys-c02273f998a26b4c.rlib(sectransp.o)\n                _sectransp_connect_step2 in libcurl_sys-c02273f998a26b4c.rlib(sectransp.o)\n          ld: symbol(s) not found for architecture x86_64\n          clang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1574823034, "post_id": 59062240, "comment_id": 104363707, "body": "<code>impl Iterator&lt;Item=std::str::CharIndices&gt;</code> they must be a question somewhere that already answer that"}, {"owner": {"reputation": 338, "user_id": 11811572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23035f8030e092e4f79c592461ed68d4?s=128&d=identicon&r=PG&f=1", "display_name": "LotB", "link": "https://stackoverflow.com/users/11811572/lotb"}, "edited": false, "score": 0, "creation_date": 1574870408, "post_id": 59062240, "comment_id": 104385756, "body": "you can shorten that by specifying a custom <code>type</code>. It looks like <code>type MyVerboseType = std::iter::Skip&lt;std::iter::Take&lt;std::str::CharIndices&gt;&gt;</code> Then you can jusy use <code>MyVerboseType</code> instead of this long combination."}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "closed_date": 1574823476, "answer_count": 0, "score": 1, "last_activity_date": 1574822892, "creation_date": 1574822446, "last_edit_date": 1574822892, "question_id": 59062240, "link": "https://stackoverflow.com/questions/59062240/do-i-have-to-write-the-whole-type-of-the-iterator", "closed_reason": "Duplicate", "title": "Do I have to write the whole type of the iterator?", "body": "<p>Let's say I have an iterator like this:</p>\n\n<pre><code>let it = text.char_indices().take(x).skip(y);\n</code></pre>\n\n<p>Then I want to pass it to a function <code>my_func</code>. Currently I have a parameter like this:</p>\n\n<pre><code>fn my_func(it: std::iter::Skip&lt;std::iter::Take&lt;std::str::CharIndices&gt;&gt;) {\n}\n</code></pre>\n\n<p>Is there a shorter way to write the type? Also, the function shouldn't really require that all iterator parameters now must be derived from <code>.skip</code> and <code>.take</code> and in this exact order. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574813236, "post_id": 59060970, "comment_id": 104361657, "body": "type that implement copy are not moved but copied. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cdca162a2aebe1c3921df6815195deff\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> &lt;= &quot;I have tried the above code with integers and strings&quot; press X to doubt"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574813319, "post_id": 59060970, "comment_id": 104361680, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics\">How does Rust provide move semantics?</a>"}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574816153, "post_id": 59060970, "comment_id": 104362309, "body": "@Stargateur, thanks for the speedy response, I tried let x = &quot;hello&quot; , the code worked and as you mentioned on your comment when I tried let x = String::new(&quot;Hello&quot;) it didn&#39;t. I guess i am getting whats wrong here. When it is let x = &quot;hello&quot;, it is a str which will be in allocated memory and it has copy trait implemented, is that right?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574818523, "post_id": 59060970, "comment_id": 104362838, "body": "<code>&quot;hello&quot;</code> is a <code>&amp;&#39;static str</code> it not allocated in the &quot;heap&quot; but directly &quot;somewhere&quot; depend on your OS etc. Anyway, reference implement copy so yes this work with reference. <code>&amp;str</code> != <code>String</code> == View != Object <a href=\"https://doc.rust-lang.org/book/ch08-02-strings.html#what-is-a-string\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch08-02-strings.html#what-is-a-string</a>"}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574818743, "post_id": 59060970, "comment_id": 104362881, "body": "Perfect thanks, Stargateur"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1574836195, "post_id": 59060970, "comment_id": 104367177, "body": "@Sumchans it&#39;s called a <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"nofollow noreferrer\">string slice</a>. And yes, they &#39;are Copy as well as primitive integers."}], "answers": [{"comments": [{"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "edited": false, "score": 0, "creation_date": 1574817973, "post_id": 59061712, "comment_id": 104362722, "body": "Okay thanks, Where to find the documentation for that, like I want to know what traits are included with what types?"}, {"owner": {"reputation": 1373, "user_id": 7016666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3451e33e5888626bf933f5c6884ab53?s=128&d=identicon&r=PG&f=1", "display_name": "apatniv", "link": "https://stackoverflow.com/users/7016666/apatniv"}, "reply_to_user": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "edited": false, "score": 0, "creation_date": 1574826250, "post_id": 59061712, "comment_id": 104364368, "body": "See look at this documentation. This may be meaty but take some time to go through the documentation. It will clarify some of the stuff <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/marker/trait.Copy.html</a>"}, {"owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "edited": false, "score": 0, "creation_date": 1574879105, "post_id": 59061712, "comment_id": 104390059, "body": "have been looking into it. Just got confused with a few stuff. I guess I am getting it. Thanks again."}], "tags": [], "owner": {"reputation": 1373, "user_id": 7016666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c3451e33e5888626bf933f5c6884ab53?s=128&d=identicon&r=PG&f=1", "display_name": "apatniv", "link": "https://stackoverflow.com/users/7016666/apatniv"}, "is_accepted": true, "score": 2, "last_activity_date": 1574817680, "creation_date": 1574817680, "answer_id": 59061712, "question_id": 59060970, "link": "https://stackoverflow.com/questions/59060970/variable-value-not-moved/59061712#59061712", "title": "Variable value not moved", "body": "<p>Primitives types by default implement Copy trait. So, in this case, value of x is copied into y. Try doing the same thing with anything that doesn't implement copy trait like String, you will encounter a compile time error. It is inefficient to create a copy every time you assign a variable to another variable. However, certain things can be trivially copied.</p>\n"}], "owner": {"reputation": 799, "user_id": 3826733, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/7ccdfb84b351e4dce5872bda7052f5ba?s=128&d=identicon&r=PG&f=1", "display_name": "Sumchans", "link": "https://stackoverflow.com/users/3826733/sumchans"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 59061712, "answer_count": 1, "score": 0, "last_activity_date": 1574817680, "creation_date": 1574811466, "last_edit_date": 1574813424, "question_id": 59060970, "link": "https://stackoverflow.com/questions/59060970/variable-value-not-moved", "title": "Variable value not moved", "body": "<p>Given the code bellow:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let x = 5;\nlet y = x;\nprintln!(\"{}\", x);\n</code></pre>\n\n<p>As far as I have been reading, I learned that the above code would end up in error as the value of x has been moved to y. But it doesn't work that way. I have tried the above code with integers and strings, it just works.</p>\n"}, {"tags": ["generics", "reference", "rust", "serde"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574821126, "post_id": 59059887, "comment_id": 104363284, "body": "What is the error message with the first piece of code? It&#39;s hard to answer this question because when I compile it I get a bunch of errors about missing imports and the incorrect <code>&amp;self</code> argument, but I don&#39;t know what <i>you</i> see. Please try to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, ideally on <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">the playground</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574821583, "post_id": 59059887, "comment_id": 104363391, "body": "I strongly suspect this to be a duplicate of <a href=\"https://stackoverflow.com/q/44343166/3650362\">How do I write the lifetimes for references in a type constraint when one of them is a local reference?</a> (similar questions: <a href=\"https://stackoverflow.com/q/34630695/3650362\">How to write a trait bound for adding two references of a generic type?</a>, <a href=\"https://stackoverflow.com/q/53125347/3650362\">Wrong trait chosen based on type parameter</a> and <a href=\"https://stackoverflow.com/q/53566761/3650362\">How to define lifetimes on a Fn trait bound returning references?</a>) In each case the answer is to use an HRTB."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574821672, "post_id": 59059887, "comment_id": 104363410, "body": "Applied to your problem, that would look something like <code>fn get_many_generic&lt;T: for&lt;&#39;a&gt; TryFrom&lt;&amp;&#39;a Value&gt;&gt;(...)</code>"}, {"owner": {"reputation": 19, "user_id": 1515826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/096910eeed1147483b347de9166b9e6d?s=128&d=identicon&r=PG", "display_name": "Chris Thomas", "link": "https://stackoverflow.com/users/1515826/chris-thomas"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574871679, "post_id": 59059887, "comment_id": 104386451, "body": "@trentcl You are right, this fixed my problem. I guess it&#39;s time to re-read that chapter in the Rustnomicon. Thank you! Also sorry for posting a dupe."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574872733, "post_id": 59059887, "comment_id": 104386997, "body": "There&#39;s no reason to be sorry! Duplicate questions are sometimes useful; they can be linked together to help future askers find the answer more easily. Glad I was able to help!"}], "answers": [{"tags": [], "owner": {"reputation": 19, "user_id": 1515826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/096910eeed1147483b347de9166b9e6d?s=128&d=identicon&r=PG", "display_name": "Chris Thomas", "link": "https://stackoverflow.com/users/1515826/chris-thomas"}, "is_accepted": false, "score": -1, "last_activity_date": 1574871758, "creation_date": 1574871758, "answer_id": 59074484, "question_id": 59059887, "link": "https://stackoverflow.com/questions/59059887/why-must-a-i-specify-a-lifetime-when-using-a-generic-type-reference-in-rust/59074484#59074484", "title": "Why must a I specify a lifetime when using a generic type reference in Rust?", "body": "<p>Higher rank trait bounds (suggested by trentcl) fixed this issue. See their comment.</p>\n"}], "owner": {"reputation": 19, "user_id": 1515826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/096910eeed1147483b347de9166b9e6d?s=128&d=identicon&r=PG", "display_name": "Chris Thomas", "link": "https://stackoverflow.com/users/1515826/chris-thomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 294, "favorite_count": 0, "closed_date": 1575136868, "answer_count": 1, "score": -1, "last_activity_date": 1574871758, "creation_date": 1574805127, "question_id": 59059887, "link": "https://stackoverflow.com/questions/59059887/why-must-a-i-specify-a-lifetime-when-using-a-generic-type-reference-in-rust", "closed_reason": "Duplicate", "title": "Why must a I specify a lifetime when using a generic type reference in Rust?", "body": "<p>I am implementing Rust's <code>TryFrom</code> trait for a <code>serde_json::value::Value</code> reference, and a function that generically converts a <code>Vec&lt;Value&gt;</code> into a <code>Vec&lt;T&gt;</code>, where <code>T</code> implements <code>TryFrom&lt;&amp;Value&gt;</code>. Because I must specify a lifetime for the <code>Value</code> reference in my function, I cannot return the result of <code>T::try_from</code> (borrowed value is dropped).</p>\n\n<p>I have tried an alternate approach that works; creating my own trait that is similar to <code>TryFrom</code> but without a generic. This works, but I don't understand why I can't use <code>TryFrom</code> and a generic, since the trait already exists.</p>\n\n<p>My generic code which throws a compile-time error:</p>\n\n<pre><code>impl TryFrom&lt;&amp;Value&gt; for Channel {\n    type Error = &amp;'static str;\n\n    fn try_from(value: &amp;Value) -&gt; Result&lt;Self, Self::Error&gt; {\n        let title = value.get(\"title\").ok_or(\"couldn't find title property in json\")?\n            .as_str().ok_or(\"title was not a string\")?;\n        let name = value.get(\"user_name\").ok_or(\"couldn't find user_name property in json\")?\n            .as_str().ok_or(\"user_name was not a string\")?;\n\n        Ok(Channel {\n            title: String::from(title),\n            user_name: String::from(name)\n        })\n    }\n}\n\n// I must add a lifetime below. Please ignore the self reference.\nfn get_many_generic&lt;'a, T: TryFrom&lt;&amp;'a Value&gt;&gt;(&amp;self, url_str: &amp;str) -&gt; Result&lt;Vec&lt;T&gt;, Box&lt;dyn std::error::Error&gt;&gt; {\n    // perform_get returns a serde_json::Value\n    let mut value = &amp;self.perform_get(url_str)?;\n\n    if let Value::Object(map) = value {\n        value = map.get(\"data\").ok_or(\"found a map without a 'data' property when expecting an array\")?;\n    }\n\n    if let Value::Array(vec) = value {\n        Ok(vec.iter()\n            .filter_map(|item|\n                match T::try_from(item) {\n                    Ok(model) =&gt; Some(model),\n                    Err(e) =&gt; {\n                        println!(\"Could not deserialize value {}\", item);\n                        None\n                    }\n                }\n            ).collect())\n    }\n    else {\n        Err(Box::new(\n            Error::new(format!(\"Expected array from {}, but didn't receive one.\", url_str))\n        ))\n    }\n}\n</code></pre>\n\n<p>My code which works:</p>\n\n<pre><code>pub trait TryFromValue where Self: std::marker::Sized {\n    fn try_from_value(value: &amp;Value) -&gt; Result&lt;Self, Box&lt;dyn Error&gt;&gt;;\n}\n\nimpl TryFromValue for Channel {\n    fn try_from_value(value: &amp;Value) -&gt; Result&lt;Channel, Box&lt;dyn Error&gt;&gt; {\n        let title = value.get(\"title\").ok_or(\"couldn't find title property in json\")?\n            .as_str().ok_or(\"title was not a string\")?;\n        let name = value.get(\"user_name\").ok_or(\"couldn't find user_name property in json\")?\n            .as_str().ok_or(\"user_name was not a string\")?;\n\n        Ok(Channel {\n            title: String::from(title),\n            user_name: String::from(name)\n        })\n    }\n}\n\nfn get_many&lt;T: TryFromValue&gt;(&amp;self, url_str: &amp;str) -&gt; Result&lt;Vec&lt;T&gt;, Box&lt;dyn std::error::Error&gt;&gt; {\n    // perform_get returns a serde_json::Value\n    let mut value = &amp;self.perform_get(url_str)?;\n\n    if let Value::Object(map) = value {\n        value = map.get(\"data\").ok_or(\"found a map without a 'data' property when expecting an array\")?;\n    }\n\n    if let Value::Array(vec) = value {\n        Ok(vec.iter()\n            .filter_map(|item|\n                match T::try_from_value(item) {\n                    Ok(model) =&gt; Some(model),\n                    Err(e) =&gt; {\n                        println!(\"Could not deserialize value {}. Error {}\", item, e);\n                        None\n                    }\n                }\n            ).collect())\n    }\n    else {\n        Err(Box::new(\n            Error::new(format!(\"Expected array from {}, but didn't receive one.\", url_str))\n        ))\n    }\n}\n</code></pre>\n\n<p>Why does this approach work, but the first code example fails?</p>\n"}, {"tags": ["rust", "sdl"], "comments": [{"owner": {"reputation": 15473, "user_id": 744720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65030f1bd22dbb4d1e6976cfac08a1c5?s=128&d=identicon&r=PG", "display_name": "keltar", "link": "https://stackoverflow.com/users/744720/keltar"}, "edited": false, "score": 2, "creation_date": 1574838658, "post_id": 59058419, "comment_id": 104368165, "body": "SDL2 provides two mutually exclusive (i.e. can&#39;t be used simultaneously on the same window) methods to draw into window - SDL1.2-style window&#39;s <code>SDL_Surface</code> and new hardware accelerated <code>SDL_Renderer</code>. Directly filling big image with custom pixels would be slow regardless of what method you use. While window surface holds pixels to be displayed, you still need to call <code>SDL_UpdateWindowSurface</code>. After resize you&#39;ll have to get new window surface as old one may be destroyed by SDL; there are no promises about its contents after resize. I can&#39;t help you with anything rust-specific, sorry."}], "owner": {"reputation": 4970, "user_id": 1726797, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a76b9e0b9a393201d9897082bf70bf07?s=128&d=identicon&r=PG", "display_name": "nnnmmm", "link": "https://stackoverflow.com/users/1726797/nnnmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 346, "favorite_count": 1, "answer_count": 0, "score": 1, "last_activity_date": 1574797793, "creation_date": 1574797793, "question_id": 59058419, "link": "https://stackoverflow.com/questions/59058419/what-is-the-most-efficient-way-to-manipulate-raw-pixels-in-an-sdl2-window-in-rus", "title": "What is the most efficient way to manipulate raw pixels in an SDL2 window in Rust?", "body": "<p>I would like to efficiently manipulate (on the CPU) the raw pixels that are displayed in an SDL2 window. There is a lot of information on SDL2 out there, but it's mostly for C++ and the relationship to the Rust bindings is not always clear.</p>\n\n<p>I found out that from the window, I can <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/video/struct.Window.html#method.into_canvas\" rel=\"nofollow noreferrer\">create a canvas</a>, which can <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/render/struct.Canvas.html#method.texture_creator-1\" rel=\"nofollow noreferrer\">create a</a> <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/render/struct.TextureCreator.html#method.create_texture_streaming\" rel=\"nofollow noreferrer\">texture</a>, whose raw data <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/render/struct.Texture.html#method.with_lock\" rel=\"nofollow noreferrer\">can be manipulated</a> as expected. That texture must be <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/render/struct.Canvas.html#method.copy\" rel=\"nofollow noreferrer\">copied into the canvas</a> to display it.</p>\n\n<p>That works, but it seems like it could be possible to directly access a pixel buffer with the contents of the window and mutate that. Is that the case? That would perhaps be a bit faster and automatically resize with the window. Some other answers led me to believe that a <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/surface/struct.SurfaceRef.html\" rel=\"nofollow noreferrer\">Surface</a> already exposes these raw pixels, but</p>\n\n<ol>\n<li>These answers always cautioned that using a Surface is inefficient \u2013 is that true even for my use case? </li>\n<li>I could not find out how to get the right Surface. There is Window's <a href=\"https://docs.rs/sdl2/0.32.2/sdl2/video/struct.Window.html#method.surface\" rel=\"nofollow noreferrer\">surface</a> method, but if that holds a reference to an EventPump, how can I use the EventPump in the main loop afterwards?</li>\n</ol>\n"}, {"tags": ["rust", "arm", "embedded", "modulo", "cortex-m"], "comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1574783616, "post_id": 59054054, "comment_id": 104349157, "body": "As the other answer says: If you can round up the modulus to a power of 2 (e.g. 2048) the test becomes a simple bit-test which should be one instruction even on an embedded system. E.g. if <code>next_update_time % 2048 == 0</code> is true, then the lower 15 bits in <code>next_update_time</code> are all zero."}, {"owner": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "edited": false, "score": 0, "creation_date": 1574832013, "post_id": 59054054, "comment_id": 104365691, "body": "This is expensive in terms of size because you&#39;re using a 64-bit data type on a 32-bit machine and you have to divide across both halves.  The 32-bit mod operator is much smaller."}], "answers": [{"tags": [], "owner": {"reputation": 8286, "user_id": 533037, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/f711473fb27cd269ba5ad2064c15dcd3?s=128&d=identicon&r=PG", "display_name": "solidpixel", "link": "https://stackoverflow.com/users/533037/solidpixel"}, "is_accepted": true, "score": 3, "last_activity_date": 1574784321, "creation_date": 1574784321, "answer_id": 59054955, "question_id": 59054054, "link": "https://stackoverflow.com/questions/59054054/how-to-do-modulo-with-less-memory-in-arm-embedded-rust/59054955#59054955", "title": "How to do modulo with less memory in ARM embedded Rust", "body": "<p>Not sure how clever the Rust linker is, but in many embedded linker implementations you would be able to swap in your own implementation of <code>__udivmodi4</code> which used a smaller (but slower) method in preference to the version provided by the compiler.</p>\n\n<p>In general generic division and modulo are expensive on embedded platforms, but division by a constant can often be specialized with a \"fixed\" implementation by a smart compiler (often with special cases for common divisors - 3, 5, 7, 10, etc). </p>\n\n<p>If you can control the application then changing the code to divide or modulo by <code>2^N</code> is obviously preferable (it collapses to either a \"right shift\" instruction for divide, or an \"and\" instruction for modulo). E.g. in this case 2048 might be acceptably close to 2000, and turns 1 KB of code into 4 bytes of code.</p>\n\n<p>FWIW the Rust version of this does seem a little on the fat side - the <a href=\"https://github.com/DynamoRIO/dynamorio/blob/master/third_party/libgcc/udivmoddi4.c\" rel=\"nofollow noreferrer\">GCC implementation</a> for example is much smaller.</p>\n"}], "owner": {"reputation": 346, "user_id": 2287549, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/tqVx3.png?s=128&g=1", "display_name": "Geoxion", "link": "https://stackoverflow.com/users/2287549/geoxion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 170, "favorite_count": 0, "accepted_answer_id": 59054955, "answer_count": 1, "score": 2, "last_activity_date": 1574784321, "creation_date": 1574781578, "last_edit_date": 1574782759, "question_id": 59054054, "link": "https://stackoverflow.com/questions/59054054/how-to-do-modulo-with-less-memory-in-arm-embedded-rust", "title": "How to do modulo with less memory in ARM embedded Rust", "body": "<p>I have an embedded project in Rust on the STM32F446 MCU. Consider the next line:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>leds::set_g(self.next_update_time % 2000 == 0)\n</code></pre>\n\n<p>The modulo is used and reading online, it appears that the Cortex M4 doesn't have a modulo instruction. Instead, a function gets added to the binary that does this in software. Using cargo bloat (based on Google's Bloaty), it can be found.</p>\n\n<pre><code>File  .text    Size                 Crate Name\n...\n0.1%   6.9%    990B     compiler_builtins __udivmoddi4\n...\n</code></pre>\n\n<p>Much to my surprise, it takes just under a kilobyte of memory. I think that's a lot. The code behind it is quite long as well, see <a href=\"https://github.com/rust-lang/compiler-builtins/blob/master/src/int/udiv.rs\" rel=\"nofollow noreferrer\">this</a> link. I assume this implementation is made to be fast. Luckily I have the memory to spare.</p>\n\n<p>Using <code>opt-level = 'z'</code> doesn't change this.</p>\n\n<p>But what if I couldn't afford this, how could I let it take up less memory?</p>\n\n<p>Of course resorting to a solution like <a href=\"https://stackoverflow.com/a/28060687/2287549\">this</a> would work, but then I'd lose the ability to use the <code>%</code> operator.</p>\n"}, {"tags": ["rust", "hashmap"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 4, "creation_date": 1574774219, "post_id": 59051781, "comment_id": 104343636, "body": "If you really want a <code>HashMap</code>, this is conceptually the best you can do. If you are fine using a <code>BTreeMap</code>, iteration will automatically be in order."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1574774806, "post_id": 59051781, "comment_id": 104343973, "body": "Yes I&#39;m aware of <code>BTreeMap</code>, and I know this is algorithmically optimal. I&#39;m just asking about coding ergonomics - is there a shorter more elegant way to write it basically."}], "answers": [{"comments": [{"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1574775542, "post_id": 59052121, "comment_id": 104344380, "body": "Yeah I&#39;m aware of <code>BTreeMap</code> - <code>Itertools</code> was the answer I was looking for, thanks!"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1574775776, "post_id": 59052121, "comment_id": 104344508, "body": "Also using <code>O(N)</code> memory isn&#39;t likely to ever be a concern because <code>O(N)</code> memory is already used to store the actual data. I would also expect the memory overhead of <code>BTreeMap</code> to that of storing <code>N</code> iterators. As for the time, sorting more than once is definitely slower but if you only need the data sorted once I wouldn&#39;t be surprised if it was very similar or even faster (depending on how it is implemented), since <code>BTreeMap</code> is effectively an insertion sort anyway."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 2, "creation_date": 1574776886, "post_id": 59052121, "comment_id": 104345113, "body": "@Timmmm &quot;Insertion sort&quot; usually means the O(<i>n</i> &#178;) algorithm to sort an array in place. Inserting <i>n</i> elements in a <code>BTreeMap</code> is fumdamentally different, and has a time complexity of O(<i>n</i> log <i>n</i>). If you need the data in order even once, I&#39;d go with a <code>BTreeMap</code> \u2013 it&#39;s definitely simpler, and likely faster as well."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1574784300, "post_id": 59052121, "comment_id": 104349554, "body": "D&#39;oh, of course I meant tree sort! I&#39;m not convinced <code>BTreeMap</code> it would be faster. Algorithmically they are the same complexity, and at least in C++ land, <code>std::map</code> can be very slow because it involves a lot of allocations. Maybe I&#39;ll benchmark it if I have time."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 1, "creation_date": 1574785467, "post_id": 59052121, "comment_id": 104350247, "body": "@Timmmm I&#39;m also not convinced it&#39;s faster, but in the absence of a benchmark I&#39;d go with the simpler solution. :)"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1574791282, "post_id": 59052121, "comment_id": 104353263, "body": "Just did a simple benchmark, with 10000 random <code>u32</code> keys and values. <code>HashMap</code> (with <code>.reserve()</code>) followed by <code>sort</code> takes 1.16 ms, <code>BTreeMap</code> takes 1.47 ms, so I was right! Another reason to not use <code>BTreeMap</code> is that it only allows a single sort order."}], "tags": [], "owner": {"reputation": 1795, "user_id": 6099096, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/623gR.jpg?s=128&g=1", "display_name": "Inline", "link": "https://stackoverflow.com/users/6099096/inline"}, "is_accepted": true, "score": 8, "last_activity_date": 1574775121, "creation_date": 1574775121, "answer_id": 59052121, "question_id": 59051781, "link": "https://stackoverflow.com/questions/59051781/how-to-iterate-through-the-keys-of-a-hashmap-in-order/59052121#59052121", "title": "How to iterate through the keys of a HashMap in order", "body": "<p><code>HashMap</code> doesn't guarantee a particular order of iteration. Simplest way to achieve consistent order is to use <code>BTreeMap</code> which is based on <code>B-tree</code>, where data is sorted.</p>\n\n<p>You should understand that any implementation will do this in <code>O(n)</code> memory, particularly storing references to all items and at least <code>O(n * log(n))</code> time to sort data out.</p>\n\n<p>If you understand cost of doing this you can use <code>IterTools::sorted</code> from <code>itertools</code> crate.</p>\n\n<pre><code>use itertools::Itertools; // 0.8.2\nuse std::collections::HashMap;\n\nfn main() {\n    let mut m = HashMap::&lt;String, String&gt;::new();\n\n    m.insert(\"a\".to_string(), \"1\".to_string());\n    m.insert(\"b\".to_string(), \"2\".to_string());\n    m.insert(\"c\".to_string(), \"3\".to_string());\n    m.insert(\"d\".to_string(), \"4\".to_string());\n\n    println!(\"{:#?}\", m.iter().sorted())\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a449c4fe8b1fd6c23721dff02bea4633\" rel=\"noreferrer\">Playground link</a></p>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2309, "favorite_count": 0, "accepted_answer_id": 59052121, "answer_count": 1, "score": 1, "last_activity_date": 1574879207, "creation_date": 1574774003, "last_edit_date": 1574879207, "question_id": 59051781, "link": "https://stackoverflow.com/questions/59051781/how-to-iterate-through-the-keys-of-a-hashmap-in-order", "title": "How to iterate through the keys of a HashMap in order", "body": "<p>I'd like to iterate through the keys of a <code>HashMap</code> in order. Is there an elegant way to do this? The best I can think of is this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut m = HashMap::&lt;String, String&gt;::new();\n\n    m.insert(\"a\".to_string(), \"1\".to_string());\n    m.insert(\"b\".to_string(), \"2\".to_string());\n    m.insert(\"c\".to_string(), \"3\".to_string());\n    m.insert(\"d\".to_string(), \"4\".to_string());\n\n    let mut its = m.iter().collect::&lt;Vec&lt;_&gt;&gt;();\n    its.sort();\n\n    for (k, v) in &amp;its {\n        println!(\"{}: {}\", k, v);\n    }\n}\n</code></pre>\n\n<p>I'd like to be able to do something like this:</p>\n\n<pre><code>for (k, v) in m.iter_sorted() {\n}\nfor (k, v) in m.iter_sorted_by(...) {\n}\n</code></pre>\n\n<p>Obviously I can write a trait to do that, but my question is <em>does something like this already exist</em>?</p>\n\n<p><strong>Edit:</strong> Also, since people are pointing out that <code>BTreeMap</code> is already sorted I should probably note that while this is true, it isn't actually as fast as a <code>HashMap</code> followed by <code>sort()</code> (as long as you only sort it once of course). Here are some benchmark results for random <code>u32-&gt;u32</code> maps:</p>\n\n<p><a href=\"https://i.stack.imgur.com/7Zond.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/7Zond.png\" alt=\"hashmap vs btreemap\"></a></p>\n\n<p>Additionally, a <code>BTreeMap</code> only allows a single sort order.</p>\n"}, {"tags": ["visual-studio-code", "rust"], "answers": [{"comments": [{"owner": {"reputation": 9560, "user_id": 2023370, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4840a671d94ce5df0818cce059cab62b?s=128&d=identicon&r=PG&f=1", "display_name": "user2023370", "link": "https://stackoverflow.com/users/2023370/user2023370"}, "edited": false, "score": 0, "creation_date": 1574785321, "post_id": 59051377, "comment_id": 104350164, "body": "Can you explain how to do that?"}, {"owner": {"reputation": 9560, "user_id": 2023370, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4840a671d94ce5df0818cce059cab62b?s=128&d=identicon&r=PG&f=1", "display_name": "user2023370", "link": "https://stackoverflow.com/users/2023370/user2023370"}, "edited": false, "score": 0, "creation_date": 1574805067, "post_id": 59051377, "comment_id": 104359191, "body": "Thanks. I will check it out by hand. As for the plugin, I was led to believe &quot;Rust (rls)&quot; was the leading Rust plugin. I&#39;m wary of installing multiple plugins dealing with the same language and toolset."}, {"owner": {"reputation": 9560, "user_id": 2023370, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4840a671d94ce5df0818cce059cab62b?s=128&d=identicon&r=PG&f=1", "display_name": "user2023370", "link": "https://stackoverflow.com/users/2023370/user2023370"}, "edited": false, "score": 0, "creation_date": 1582802075, "post_id": 59051377, "comment_id": 106906332, "body": "It took me a while to get to trying this. I&#39;ll put aside the point about using the plugin you mention for the moment. The main issue then is that <code>launch.json</code> is still needed to launch the <code>cppvsdbg</code> debugger. Again I am drawn to the <code>&quot;program&quot;</code> parameter of <code>launch.json</code>&#39;s <code>configurations</code> array I mentioned, which needs the executable&#39;s filepath."}], "tags": [], "owner": {"reputation": 1255, "user_id": 4982148, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/X52Wq.jpg?s=128&g=1", "display_name": "atakanyenel", "link": "https://stackoverflow.com/users/4982148/atakanyenel"}, "is_accepted": false, "score": 4, "last_activity_date": 1574785961, "last_edit_date": 1574785961, "creation_date": 1574772623, "answer_id": 59051377, "question_id": 59051290, "link": "https://stackoverflow.com/questions/59051290/using-rust-cargo-toml-variables-within-vscode/59051377#59051377", "title": "Using Rust Cargo TOML variables within VSCode?", "body": "<p>I want to propose a different approach. What if you define <code>cargo run</code> as a task in your <code>tasks.json</code> with a shortcut and let cargo handle the naming. That also has the advantage that, if students make a change ,cargo will compile it automatically when running <code>cargo run</code>.</p>\n\n<p>This is how to do it:</p>\n\n<ul>\n<li>Create a <code>.vscode</code> folder on project directory.</li>\n<li>Create a <code>tasks.json</code> file in it.</li>\n<li>In the <code>tasks.json</code> file, my content is like this:</li>\n</ul>\n\n<pre><code>{\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\n    // for the documentation about the tasks.json format\n    \"version\": \"2.0.0\",\n    \"tasks\": [\n        {\n            \"label\": \"run\",\n            \"type\": \"shell\",\n            \"command\": \"cargo run\",\n            \"problemMatcher\": []\n        }\n    ]\n}\n</code></pre>\n\n<ul>\n<li>Now when you run the command  <code>tasks: run task</code> on the command palette, you will see a new task called <code>run</code>. Clicking it will run <code>cargo run</code> on the workspace folder.</li>\n</ul>\n\n<p>The documentation can be found in <a href=\"https://code.visualstudio.com/docs/editor/tasks\" rel=\"nofollow noreferrer\">https://code.visualstudio.com/docs/editor/tasks</a> . </p>\n\n<p>Sidenote: I checked the <a href=\"https://github.com/editor-rs/vscode-rust\" rel=\"nofollow noreferrer\">VsCode Rust Plugin</a> and it seems that they already have that functionality, so just let your students install that extension and they can run all the cargo tasks without doing the above steps. </p>\n"}], "owner": {"reputation": 9560, "user_id": 2023370, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4840a671d94ce5df0818cce059cab62b?s=128&d=identicon&r=PG&f=1", "display_name": "user2023370", "link": "https://stackoverflow.com/users/2023370/user2023370"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 479, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1574785961, "creation_date": 1574772361, "last_edit_date": 1574785337, "question_id": 59051290, "link": "https://stackoverflow.com/questions/59051290/using-rust-cargo-toml-variables-within-vscode", "title": "Using Rust Cargo TOML variables within VSCode?", "body": "<p>I need to prepare a number of exercises for students learning Rust. I've found the use of <code>${workspaceFolderBasename}</code> within the <code>program</code> field of my <code>launch.json</code> to be quite useful, as in:</p>\n\n<pre><code>\"program\": \"${workspaceFolder}/target/debug/${workspaceFolderBasename}.exe\"\n</code></pre>\n\n<p>This allows me to execute the program using <code>CTRL+F5</code>. However, this only works while the resulting executable has the same name as the workspace folder (i.e. <code>${workspaceFolderBasename}</code>). I note that the <code>name</code> field in my project's <code>Cargo.toml</code> file has a <code>name</code> field under <code>[package]</code> which controls the name of the resulting executable. Is there a way to use this field within <code>launch.json</code>?</p>\n"}, {"tags": ["rust", "serde", "serde-json"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574788990, "post_id": 59047280, "comment_id": 104352107, "body": "please explain more, I think you could just create a hashmap or struct and serialize it. You are doing it the wrong way."}], "answers": [{"tags": [], "owner": {"reputation": 1480, "user_id": 3680119, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/x7ea1.png?s=128&g=1", "display_name": "Cormac O&#39;Brien", "link": "https://stackoverflow.com/users/3680119/cormac-obrien"}, "is_accepted": false, "score": 1, "last_activity_date": 1574761268, "creation_date": 1574761268, "answer_id": 59047900, "question_id": 59047280, "link": "https://stackoverflow.com/questions/59047280/how-to-build-json-arrays-or-objects-dynamically-with-serde-json/59047900#59047900", "title": "How to build json arrays or objects dynamically with serde_json?", "body": "<p>You can do this with <code>serde_json::Value</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::{Map, Value};\n\nlet mut map = Map::new();\n\n// assuming keys_vals is a Vec&lt;(String, String)&gt;\nfor (key, val) in keys_vals.into_iter() {\n    map.insert(key, Value::String(val));\n}\n\nlet obj = Value::Object(map);\n</code></pre>\n\n<p>If you need to have the object constructed and still update the map:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut obj = Value::Object(map);\n\nif let Value::Object(ref mut map) = obj {\n    map.insert(key, val);\n}\n</code></pre>\n"}], "owner": {"reputation": 143, "user_id": 10087197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb2dce8b46248b37e70f4224753e0b9?s=128&d=identicon&r=PG&f=1", "display_name": "danda", "link": "https://stackoverflow.com/users/10087197/danda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1398, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1574761268, "creation_date": 1574759270, "question_id": 59047280, "link": "https://stackoverflow.com/questions/59047280/how-to-build-json-arrays-or-objects-dynamically-with-serde-json", "title": "How to build json arrays or objects dynamically with serde_json?", "body": "<p>I need to build a json object at runtime.  For now, just a simple {\"key\": \"stringvalue\"} object.  But each key/val pair must be added in a loop.</p>\n\n<p>This seems really simple/basic, but I didn't find any good examples or docs on it.   I did finally manage to make something work, but it seems too convoluted to be the right way.</p>\n\n<p>Can anyone post a working example?</p>\n"}, {"tags": ["file", "rust"], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1574757307, "post_id": 59046435, "comment_id": 104334449, "body": "This could be subject to a TOCTOU attack and needs to be developed to be correct."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1574757977, "post_id": 59046435, "comment_id": 104334782, "body": "While your concern is correct, they didn&#39;t ask anything security related. Providing full blown solution that deals with every single case, that still contains this exact code somewhere, after some sanity checks, is completely pointless, they asked how to do it, and this is exactly how you do it, it&#39;s not our job to ensure that the code they write is actually safe, although I do agree that a mention of security related issues above or in the code would have been nice, that&#39;s why you can edit it as you deem fit, though :)"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "edited": false, "score": 4, "creation_date": 1574770241, "post_id": 59046435, "comment_id": 104341426, "body": "There seems to be no C here, just U. You always call <code>create_dir_all</code> unconditionally."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1588664709, "post_id": 59046435, "comment_id": 108977823, "body": "@Sahsahae I don&#39;t agree. If this code had a TOCTOU race condition, it would be wrong, regardless of any security concerns. A race condition of that kind is a bug. But the code simply doesn&#39;t have a race condition."}], "tags": [], "owner": {"reputation": 81656, "user_id": 8446, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8f9c683775bfbe76ed4855a19b73dc81?s=128&d=identicon&r=PG", "display_name": "Roger Lipscombe", "link": "https://stackoverflow.com/users/8446/roger-lipscombe"}, "is_accepted": false, "score": 6, "last_activity_date": 1576098832, "last_edit_date": 1576098832, "creation_date": 1574756119, "answer_id": 59046435, "question_id": 59046312, "link": "https://stackoverflow.com/questions/59046312/how-can-i-create-a-file-and-its-parent-directories-using-a-single-method-in-rust/59046435#59046435", "title": "How can I create a file and its parent directories using a single method in Rust?", "body": "<p>I couldn't find a <em>single</em> method to do this, but here's how to create the parent directory (etc.) for a given file in <em>two</em> (if you don't count <code>let path =</code>...).</p>\n\n<pre><code>let path = std::path::Path::new(\"/home/roger/foo/bar/baz.txt\");\nlet prefix = path.parent().unwrap();\nstd::fs::create_dir_all(prefix).unwrap();\n</code></pre>\n"}], "owner": {"reputation": 615, "user_id": 770476, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/8cf9af3473871c08a5a80833a7d2824a?s=128&d=identicon&r=PG", "display_name": "fabiim", "link": "https://stackoverflow.com/users/770476/fabiim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1325, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1576098832, "creation_date": 1574755595, "last_edit_date": 1574771032, "question_id": 59046312, "link": "https://stackoverflow.com/questions/59046312/how-can-i-create-a-file-and-its-parent-directories-using-a-single-method-in-rust", "title": "How can I create a file and its parent directories using a single method in Rust?", "body": "<p>Can I open a file creating it and its parent directories using <code>OpenOptions</code> or a similar single method? </p>\n\n<p>This only creates a new file, it does not work if my path includes non-existing directories: </p>\n\n<pre><code>pub fn save_file(file_path: String) -&gt; Result&lt;(), Error&gt; {\n    let mut db_file = OpenOptions::new()\n        .create(true)\n        .append(true)\n        .open(file_path)?;\n    db_file.write_all(b\"some content\")?;\n    Ok(())\n}\n</code></pre>\n"}, {"tags": ["rust", "iterator"], "answers": [{"comments": [{"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1574752912, "post_id": 59045627, "comment_id": 104332575, "body": "What If I want to skip, say 50 chars? Calling <code>.next</code> 50 times is neither nice nor fast. I tried modifying your example by replacing the second <code>.next</code> with <code>.skip</code> but that doesn&#39;t work."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1574754343, "post_id": 59045627, "comment_id": 104333144, "body": "My bad! Your answer is (almost) correct! I&#39;ve edited it slightly so that it better matches my case."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574758370, "post_id": 59045627, "comment_id": 104334986, "body": "Remember that &quot;calling 50 times&quot; applies only to people, especially when we are talking about iterator api, which is highly optimizable and LLVM tears apart repetetive tasks like these with ease. Unless you generated and looked at ASM yourself, you can&#39;t really claim that it happens &quot;50 times&quot;, your cpu would increment-check 50 times either way, the call will most likely be elided."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574759255, "post_id": 59045627, "comment_id": 104335459, "body": "@Sahsahae You are so wrong... See for example this: <a href=\"https://stackoverflow.com/questions/59044638/why-is-what-timers-show-so-counter-intuitive/59045092#59045092\" title=\"why is what timers show so counter intuitive\">stackoverflow.com/questions/59044638/&hellip;</a> where simple <code>.nth</code> shows how incredibly slow it may become."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1574760387, "post_id": 59045627, "comment_id": 104336022, "body": "What you linked is completely different so it in no way makes me wrong, there you iterate from beginning N times, I&#39;m talking about iter().next() on same iterator, besides, if you&#39;re writing a parser by hand, you probably should be using <code>.next()</code> manually in any case, so it completely removes the issue."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 1, "creation_date": 1574794386, "post_id": 59045627, "comment_id": 104354668, "body": "@NurbolAlpysbayev please avoid change code without permission specially if you forget to update playground link - -"}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 8, "last_activity_date": 1574794174, "last_edit_date": 1574794174, "creation_date": 1574752660, "answer_id": 59045627, "question_id": 59045408, "link": "https://stackoverflow.com/questions/59045408/how-to-skip-n-items-from-inside-of-an-iterator-loop/59045627#59045627", "title": "How to skip n items from inside of an iterator loop?", "body": "<p>AFAIK you can't do that with a <code>for</code> loop. You will need to desugar it by hand:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut it = text.chars();\nwhile let Some(char) = it.next() {\n    if char == 'b' {\n        it.nth(1); // nth(1) skips/consumes exactly 2 items\n        continue;\n    }\n    print!(\"{}\", char);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7873372f2ef21df4d68daaba9c0cff1d\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1574773793, "post_id": 59048126, "comment_id": 104343392, "body": "Very interesting! However I find it less readable personally (yes I have a procedural, not functional brain)"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574794781, "post_id": 59048126, "comment_id": 104354829, "body": "This doesn&#39;t work with two consecutive sequence with <code>!</code> and why filter ?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574801871, "post_id": 59048126, "comment_id": 104357923, "body": "@Stargateur Try to remove it\u2026"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574809008, "post_id": 59048126, "comment_id": 104360504, "body": "from_fn make more sense so: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=662c27f686555e1be4a9c720f319c7b7\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574843217, "post_id": 59048126, "comment_id": 104370297, "body": "@Stargateur You better write it like that: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2499e7baed5753d27a1203dfeb57c85e\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 3, "last_activity_date": 1574762042, "creation_date": 1574762042, "answer_id": 59048126, "question_id": 59045408, "link": "https://stackoverflow.com/questions/59045408/how-to-skip-n-items-from-inside-of-an-iterator-loop/59048126#59048126", "title": "How to skip n items from inside of an iterator loop?", "body": "<p>If you want to keep an iterator style, you can use <a href=\"https://doc.rust-lang.org/std/iter/fn.successors.html\" rel=\"nofollow noreferrer\"><code>std::iter::successors</code></a> (I've replaced the special char with <code>'!'</code> for being more readable:</p>\n\n<pre><code>fn my_iter&lt;'a&gt;(s: &amp;'a str) -&gt; impl Iterator&lt;Item = char&gt; + 'a {\n    let mut it = s.chars();\n\n    std::iter::successors(it.next(), move |c| {\n        if *c == '!' {\n            it.next().and_then(|_| it.next())\n        } else {\n            it.next()\n        }\n    })\n    .filter(|c| *c != '!')\n}\n\nfn main() {\n    assert!(my_iter(\"a!bc\").eq(\"ac\".chars()));\n    assert!(my_iter(\"!abcd\").eq(\"bcd\".chars()));\n    assert!(my_iter(\"abc!d\").eq(\"abc\".chars()));\n    assert!(my_iter(\"abcd!\").eq(\"abcd\".chars()));\n}\n</code></pre>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 928, "favorite_count": 0, "accepted_answer_id": 59045627, "answer_count": 2, "score": 7, "last_activity_date": 1616162635, "creation_date": 1574751739, "last_edit_date": 1616162635, "question_id": 59045408, "link": "https://stackoverflow.com/questions/59045408/how-to-skip-n-items-from-inside-of-an-iterator-loop", "title": "How to skip n items from inside of an iterator loop?", "body": "<p>This code: </p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b839fbcbc215a3c9dc0c38c6b476ce80\" rel=\"noreferrer\">play</a></p>\n\n<pre><code>fn main() {\n    let text = \"abcd\";\n\n    for char in text.chars() {\n        if char == 'b' {\n            // skip 2 chars\n        }\n        print!(\"{}\", char);\n    }\n    // prints `abcd`, but I want `ad`\n}\n</code></pre>\n\n<p>prints <code>abcd</code>, but I want to skip 2 chars if <code>b</code> was found, so that it prints <code>ad</code>. How do I do that? </p>\n\n<p>I tried to put the iterator into a variable outside the loop and manipulate that iterator within the loop, but the Borrow Checker doesn't allow that.</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 7, "creation_date": 1574749724, "post_id": 59044638, "comment_id": 104331408, "body": "Each loop iteration is going to run in much less than a millisecond (when doing <code>.chars().enumerate()</code>). <code>as_millis</code> returns an integer, so anything less than a millisecond is rounded to 0. Try to use <code>as_nanos</code> instead..."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 0, "creation_date": 1574749922, "post_id": 59044638, "comment_id": 104331470, "body": "@kazemakase Oh my god. You are correct. I had many other things to think about so I couldn&#39;t see this simple reason.... Thank you!"}], "answers": [{"comments": [{"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1574750987, "post_id": 59045092, "comment_id": 104331836, "body": "For a moment I thought that this answer is a low-effort stealing, but you know what, those links you appended are incredibly useful to a Rust beginner like me! Thank you!"}, {"owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "reply_to_user": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 1, "creation_date": 1574751958, "post_id": 59045092, "comment_id": 104332198, "body": "I apologize to the commenter who said the same thing as me, but I didn&#39;t see their comment while writing this. If they had posted an answer instead, I would have gotten a notification, and known."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "edited": false, "score": 8, "creation_date": 1574755779, "post_id": 59045092, "comment_id": 104333755, "body": "I posted a comment because I did not have the time to phrase out a proper answer. Since someone else took that time it&#39;s only fair they receive the praise and upvotes. Here, have mine :)"}], "tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": true, "score": 7, "last_activity_date": 1574750444, "creation_date": 1574750444, "answer_id": 59045092, "question_id": 59044638, "link": "https://stackoverflow.com/questions/59044638/why-is-what-timers-show-so-counter-intuitive/59045092#59045092", "title": "Why is what timers show so counter-intuitive?", "body": "<p>You are running into a resolution problem. The inside of the loop takes (on average) less than one millisecond to execute, so <code>start2.elapsed().as_millis()</code> usually evaluates to 0. To fix this problem, you could do some operation inside the loop that takes even longer, or change your resolution from milliseconds to something smaller, like microseconds or nanoseconds.</p>\n\n<p>switching to microseconds yields a more consistent time</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::{Instant};\n\nfn main() {\n    let text = \"a\".repeat(10000);\n    let mut timer1 = 0;\n    let mut timer2 = 0;\n\n    let start1 = Instant::now();\n    for pos in 1..10000 {\n        let start2 = Instant::now();\n        let ch = text.chars().nth(pos).unwrap();\n        timer2+=start2.elapsed().as_micros();\n    }\n    timer1+=start1.elapsed().as_micros();\n\n    println!(\"timer1: {} timer2: {}\", timer1, timer2);\n}\n</code></pre>\n\n<p>output</p>\n\n<pre><code>timer1: 3511812 timer2: 3499669\n</code></pre>\n\n<p>This question was tagged performance, so I'd like to point out that using <code>std::Instant</code> is a very tedious way to measure performance. Better ways include <a href=\"https://github.com/bheisler/criterion.rs\" rel=\"noreferrer\">criterion.rs</a>, <a href=\"https://github.com/ferrous-systems/flamegraph\" rel=\"noreferrer\">flamegraph</a> and <a href=\"https://doc.rust-lang.org/1.16.0/book/benchmark-tests.html\" rel=\"noreferrer\">cargo-bench</a>.</p>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "accepted_answer_id": 59045092, "answer_count": 1, "score": 3, "last_activity_date": 1574785630, "creation_date": 1574747958, "last_edit_date": 1574785630, "question_id": 59044638, "link": "https://stackoverflow.com/questions/59044638/why-is-what-timers-show-so-counter-intuitive", "title": "Why is what timers show so counter-intuitive?", "body": "<p>I am making a parser of some text. I need to support unicode texts, that's why I am using the <code>String::chars</code> iterator:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=384b5b4c8c5d570aa5623b34768b91f3\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::time::Instant;\n\nfn main() {\n    let text = \"a\".repeat(10000);\n    let mut timer1 = 0;\n    let mut timer2 = 0;\n\n    let start1 = Instant::now();\n    for pos in 1..10000 {\n        let start2 = Instant::now();\n        let ch = text.chars().nth(pos).unwrap();\n        timer2 += start2.elapsed().as_millis();\n    }\n    timer1 += start1.elapsed().as_millis();\n\n    println!(\"timer1: {} timer2: {}\", timer1, timer2);\n}\n</code></pre>\n\n<p>Example output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>timer1: 4276 timer2: 133\n</code></pre>\n\n<p>Why is <code>timer2</code> unbelievably less than <code>timer1</code>, when I believe they should be very close to each other?</p>\n\n<p>P.S. I know already that <code>.nth</code> is slow, and shouldn't be used.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 11, "creation_date": 1574754521, "post_id": 59043189, "comment_id": 104333218, "body": "This is like putting <code>#define begin {</code>, <code>#define end }</code> in your C files so you can make it look like ALGOL: it&#39;s a stupid trick that just makes your code look weird to anyone with actual experience. If you&#39;re interested in learning Rust, <i>learn Rust</i>, don&#39;t try to make it look like C or whatever other language you already know. It&#39;s not as if forbidding implicit <code>return</code> will magically make Rust into a statement-oriented language; you will still need to understand the underlying syntax. You&#39;re just making life harder for yourself (and for anyone else who has to read your code)."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1574757368, "post_id": 59043189, "comment_id": 104334471, "body": "If you don&#39;t want an expression-oriented language, you should forbid this kind of statement: <code>let i = if condition { 0 } else { 1 };</code> and use <code>let i; if condition { i = 0; } else { i = 1; }</code>. Same for the <code>match</code>."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574852569, "post_id": 59043189, "comment_id": 104375565, "body": "@trentcl It&#39;s probably already going to scare away majority of people who read the code, but when it doesn&#39;t... &quot;<b><i>you must put return in your code</i></b>&quot; if they ever try to contribute, definitely will."}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 9, "last_activity_date": 1574757447, "last_edit_date": 1574757447, "creation_date": 1574743256, "answer_id": 59043851, "question_id": 59043189, "link": "https://stackoverflow.com/questions/59043189/how-can-i-require-explicit-return-statements-and-forbid-implicit-returns/59043851#59043851", "title": "How can I require explicit return statements and forbid implicit returns?", "body": "<p>I don't believe this can be done with Cargo itself, but <a href=\"https://rust-lang.github.io/rust-clippy/master/#implicit_return\" rel=\"nofollow noreferrer\">Clippy has a lint</a> for exactly this.</p>\n\n<p>To enable the lint, place the line <code>#![deny(clippy::implicit_return)]</code> at the top of your root file (usually <code>main.rs</code> or <code>lib.rs</code>). Now running <code>cargo clippy</code> should show an error if you use implicit returns. You'll probably also want to disable the lint that has the opposite warning: <code>#![allow(clippy::needless_return)]</code>.</p>\n\n<p>Example code:</p>\n\n<pre><code>#![deny(clippy::implicit_return)]\n#![allow(clippy::needless_return)]\n\nfn foo() -&gt; u32 {\n    0\n}\n\nfn main() {\n    println!(\"{}\", foo());\n}\n</code></pre>\n\n<p>And the error after running <code>cargo clippy</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: missing return statement\n --&gt; src/main.rs:5:5\n  |\n5 |     0\n  |     ^ help: add `return` as shown: `return 0`\n  |\nnote: lint level defined here\n --&gt; src/main.rs:1:9\n  |\n1 | #![deny(clippy::implicit_return)]\n  |         ^^^^^^^^^^^^^^^^^^^^^^^\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return\n</code></pre>\n"}], "owner": {"reputation": 91, "user_id": 4976095, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-PaY1rwZLlXM/AAAAAAAAAAI/AAAAAAAAABE/zecvJjz5LlM/photo.jpg?sz=128", "display_name": "Yann", "link": "https://stackoverflow.com/users/4976095/yann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 282, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1574770368, "creation_date": 1574737883, "last_edit_date": 1574770368, "question_id": 59043189, "link": "https://stackoverflow.com/questions/59043189/how-can-i-require-explicit-return-statements-and-forbid-implicit-returns", "title": "How can I require explicit return statements and forbid implicit returns?", "body": "<p>I want to ensure the code style is consistent by requiring this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn calc() -&gt; u32 {\n    return 1 + 1;\n}\n</code></pre>\n\n<p>And forbidding this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn calc() -&gt; u32 {\n    1 + 1\n}\n</code></pre>\n\n<p>Is there any setting in Cargo.toml? </p>\n"}, {"tags": ["arrays", "rust"], "comments": [{"owner": {"reputation": 81656, "user_id": 8446, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8f9c683775bfbe76ed4855a19b73dc81?s=128&d=identicon&r=PG", "display_name": "Roger Lipscombe", "link": "https://stackoverflow.com/users/8446/roger-lipscombe"}, "edited": false, "score": 3, "creation_date": 1574718395, "post_id": 59040549, "comment_id": 104323628, "body": "&quot;append at the start&quot; = &quot;prepend&quot;; you might have better luck searching with that term"}, {"owner": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574719065, "post_id": 59040549, "comment_id": 104323875, "body": "Is it not possible to make an array of size one with your prepending value, and just concat with the array?"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574767242, "post_id": 59040549, "comment_id": 104339922, "body": "@BrandonDyer For <i>array</i>? Not at runtime. You could create your own <code>Arr</code> type that allocates <code>N</code> elements then recreate another one of size <code>N+1</code> every time you want to add something... Or you could stop trying to avoid using <code>Vec</code> which manages all of that already and cannot be done better (well, maybe vector that is designed to allow inserting lots of elements in front and back by keeping elements in the middle with &quot;padding memory&quot; around them would work better for some cases, even though at that point you&#39;re better off using lists) at this point in time with computers we have right now."}], "answers": [{"comments": [{"owner": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574719113, "post_id": 59040666, "comment_id": 104323894, "body": "That&#39;s not entirely true, you can set a variable to be an array with size one larger and have the prepended value be the first."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 1, "creation_date": 1574719208, "post_id": 59040666, "comment_id": 104323929, "body": "@BrandonDyer that&#39;s not a generally available solution. Arrays require that all the values be populated at all times. See also <a href=\"https://stackoverflow.com/q/36925673/155423\">How can I initialize an array using a function?</a>. Can you post a playground example demonstrating how you&#39;d do it to make sure we are talking about the same thing?"}, {"owner": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574720656, "post_id": 59040666, "comment_id": 104324390, "body": "I was making my assumption based on &quot;I know how to concatenate two arrays&quot;. If this is true, then it is possible to use the method I described."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574720977, "post_id": 59040666, "comment_id": 104324494, "body": "@BrandonDyer I do not believe it to be possible to concatenate two arrays at runtime and result in another array in stable Rust."}, {"owner": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574721292, "post_id": 59040666, "comment_id": 104324579, "body": "I am referring to compile-time allocation. Of course, the values from the first array would need to be copied at runtime, but the array itself would be perfectly valid on compile. <code>let arr1: [T; num]; let arr2: [T; num + 1];</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574721677, "post_id": 59040666, "comment_id": 104324705, "body": "@BrandonDyer please provide a playground link showing your solution in action and/or provide an alternate answer. Arrays require that all the values be populated at all times. You cannot declare an array and only partially fill it in."}, {"owner": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574722927, "post_id": 59040666, "comment_id": 104325056, "body": "Something like this: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3d1c476b9b859a3132e268b6aeb8955b\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1106, "user_id": 4208022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8PLXt.jpg?s=128&g=1", "display_name": "Brandon Dyer", "link": "https://stackoverflow.com/users/4208022/brandon-dyer"}, "edited": false, "score": 0, "creation_date": 1574724837, "post_id": 59040666, "comment_id": 104325530, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/203063/discussion-between-shepmaster-and-brandon-dyer\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1615217654, "last_edit_date": 1615217654, "creation_date": 1574718908, "answer_id": 59040666, "question_id": 59040549, "link": "https://stackoverflow.com/questions/59040549/how-do-i-append-a-value-at-the-beginning-of-an-array/59040666#59040666", "title": "How do I append a value at the beginning of an array?", "body": "<p>There is no way to do this in stable Rust; arrays cannot have values added or removed at runtime; their lengths are fixed at compile time.</p>\n<p>It\u2019s more likely you want a <code>Vec</code> and <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.insert\" rel=\"nofollow noreferrer\"><code>Vec::insert</code></a>.</p>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34684261/155423\">How to set a Rust array length dynamically?</a></li>\n<li><a href=\"https://stackoverflow.com/q/30794235/155423\">What is the difference between a slice and an array?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32571441/155423\">What is the difference between storing a Vec vs a Slice?</a></li>\n<li><a href=\"https://stackoverflow.com/q/28678615/155423\">Efficiently insert or replace multiple elements in the middle or at the beginning of a Vec?</a></li>\n</ul>\n<hr />\n<p>In nightly Rust, you can use unstable features to construct a brand new array that's slightly bigger and move all the values over:</p>\n<pre><code>// 1.52.0-nightly (2021-03-07 234781afe33d3f339b00)\n#![allow(incomplete_features)]\n#![feature(const_generics, const_evaluatable_checked)]\n\nuse std::{\n    array::IntoIter,\n    mem::{self, MaybeUninit},\n    ptr,\n};\n\nfn prepend&lt;T, const N: usize&gt;(a: [T; N], v: T) -&gt; [T; N + 1] {\n    // # SAFETY\n    //\n    // Converting an uninitialized array to an array of\n    // uninitialized values is always safe.\n    // https://github.com/rust-lang/rust/issues/80908\n    let mut xs: [MaybeUninit&lt;T&gt;; N + 1] = unsafe { MaybeUninit::uninit().assume_init() };\n\n    let (head, tail) = xs.split_first_mut().unwrap();\n    *head = MaybeUninit::new(v);\n    for (x, v) in tail.iter_mut().zip(IntoIter::new(a)) {\n        *x = MaybeUninit::new(v)\n    }\n\n    // # SAFETY\n    //\n    // We are effectively transmuting from an array of filled `MaybeUninit&lt;T&gt;` to\n    // the array of `T`, but cannot actually use `transmute`:\n    // https://github.com/rust-lang/rust/issues/61956\n    unsafe {\n        let tmp_xs = &amp;mut xs as *mut [MaybeUninit&lt;T&gt;; N + 1] as *mut [T; N + 1];\n        mem::forget(xs);\n        ptr::read(tmp_xs)\n    }\n}\n\nfn main() {\n    let v = prepend([1, 2, 3], 4);\n    assert_eq!([4, 1, 2, 3], v);\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28136739/155423\">Is it possible to control the size of an array using the type parameter of a generic?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34406251/155423\">How do I move values out of an array one at a time?</a></li>\n<li><a href=\"https://stackoverflow.com/q/26757355/155423\">How do I collect into an array?</a></li>\n</ul>\n"}], "owner": {"reputation": 2284, "user_id": 1964489, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/dced6d8951b4771cde68c08e372bbede?s=128&d=identicon&r=PG", "display_name": "Ziva", "link": "https://stackoverflow.com/users/1964489/ziva"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3864, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1615217654, "creation_date": 1574718294, "last_edit_date": 1574718941, "question_id": 59040549, "link": "https://stackoverflow.com/questions/59040549/how-do-i-append-a-value-at-the-beginning-of-an-array", "title": "How do I append a value at the beginning of an array?", "body": "<p>Is it possible to append a value at the beginning of an array? I know how to concatenate two arrays, but if I have an array and a single value (of the same type as the array), can I append this element at the beginning of the array?</p>\n"}, {"tags": ["rust", "allocation", "ownership"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1574718379, "post_id": 59040514, "comment_id": 104323624, "body": "<i>I don&#39;t actually need the raw connection any more</i> \u2014 that&#39;s not up for you to decide. The library has decided that it is required, which is expressed in the lifetimes and enforced by the compiler."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574718490, "post_id": 59040514, "comment_id": 104323659, "body": "See the &quot;How do I fix it?&quot; section of the <a href=\"https://stackoverflow.com/a/32300133/155423\">linked duplicate</a>. The primary solution is to use the <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">rental</a> crate, which may or may not work for your case."}, {"owner": {"reputation": 1495, "user_id": 1582407, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/ea7adcdc43c61ff9eeba5eab4f27d0d5?s=128&d=identicon&r=PG", "display_name": "Brendan", "link": "https://stackoverflow.com/users/1582407/brendan"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574972278, "post_id": 59040514, "comment_id": 104424858, "body": "@Shepmaster yes but what I meant was my user code doesn&#39;t need a reference - I meant to highlight that I was only trying to keep the <code>Connection</code> in the <code>Wrapper</code> as a way to control when it gets dropped."}], "owner": {"reputation": 1495, "user_id": 1582407, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/ea7adcdc43c61ff9eeba5eab4f27d0d5?s=128&d=identicon&r=PG", "display_name": "Brendan", "link": "https://stackoverflow.com/users/1582407/brendan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 67, "favorite_count": 0, "closed_date": 1574718248, "answer_count": 0, "score": 0, "last_activity_date": 1574718323, "creation_date": 1574718089, "last_edit_date": 1574718323, "question_id": 59040514, "link": "https://stackoverflow.com/questions/59040514/how-can-i-transparently-allocate-an-internal-object-in-rust", "closed_reason": "Duplicate", "title": "How can I transparently allocate an internal object in Rust?", "body": "<p>I am trying to provide a thin abstraction over a database in Rust. Here's a simplified version of the <a href=\"https://docs.rs/rusqlite/0.20.0/rusqlite/index.html\" rel=\"nofollow noreferrer\">underlying database API</a> as I understand it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Connection to a database\nstruct Connection {}\n\nimpl Connection {\n    fn new() -&gt; Connection {\n        Connection {}\n    }\n}\n\n// Prepared SQL statement\nstruct Statement&lt;'a&gt; {\n    conn: &amp;'a Connection,\n}\n\nimpl Connection {\n    // Create a prepared statement\n    fn prepare(&amp;self) -&gt; Statement {\n        return Statement { conn: self };\n    }\n}\n</code></pre>\n\n<p>I want to provide a wrapper which upon construction connects to a database and stores some prepared statements. After constructing the wrapper I don't actually need the raw connection any more.</p>\n\n<p>Here's a simplified version of my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Wrapper&lt;'a&gt; {\n    stmt: Statement&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Wrapper&lt;'a&gt; {\n    fn new() -&gt; Wrapper&lt;'a&gt; {\n        let conn = Connection::new();\n        Wrapper {\n            stmt: conn.prepare(),\n        }\n    }\n}\n\nfn main() {\n    let _w = Wrapper::new();\n}\n</code></pre>\n\n<p><code>Wrapper::new</code> fails to compile because the returned value references <code>conn</code> whose lifetime ends at the end of the function (\"error[E0515]: cannot return value referencing local variable <code>conn</code>\"). </p>\n\n<p>The simplest solution is just to require the caller to construct a <code>Connection</code>; but then this is a rather leaky \"wrapper\" for the database.</p>\n\n<p>Ideally I'd like to move <code>conn</code> out of the function. Since I'm moving the <code>Wrapper</code> out of the function, I thought I could just move <code>conn</code> into the <code>Wrapper</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Wrapper&lt;'a&gt; {\n    conn: Connection,\n    stmt: Statement&lt;'a&gt;,\n}\n\nimpl&lt;'a&gt; Wrapper&lt;'a&gt; {\n    fn new() -&gt; Wrapper&lt;'a&gt; {\n        let conn = Connection {};\n        Wrapper {\n            stmt: conn.prepare(),\n            conn,\n        }\n    }\n}\n</code></pre>\n\n<p>But this just adds another error: \"cannot move out of <code>conn</code> because it is borrowed\", even if I try to dodge the chicken-and-egg initialisation of the <code>.stmt</code> and <code>.conn</code> fields with <code>Option</code> &amp; mutation hackery. I've read that you can't really have one struct member reference another in rust, which would explain this.</p>\n\n<p>For a while I thought I could use an <code>Rc</code>, but for this to work I think it would need to be on the <code>Statement</code>'s reference to the <code>Connection</code>; which is in library code.</p>\n\n<p>Can anyone see which Rust design pattern I'm missing?</p>\n"}, {"tags": ["rust", "rust-macros", "rust-decl-macros"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1574718071, "post_id": 59040426, "comment_id": 104323507, "body": "You cannot do this."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574724238, "post_id": 59040426, "comment_id": 104325390, "body": "why make life complicated ?"}, {"owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "edited": false, "score": 0, "creation_date": 1574724732, "post_id": 59040426, "comment_id": 104325503, "body": "It&#39;s because hunting traits is difficult. For example, to generalize this I&#39;d have to manually find many different kinds traits and a lot of compilation/failure/look for macros/add traits etc. This (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9ad12a671c9e8faab349e1859be8f72e\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>) looks ugly but it does the job for now."}, {"owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "edited": false, "score": 2, "creation_date": 1574751721, "post_id": 59040426, "comment_id": 104332096, "body": "What do you mean by trait hunting? I can tell you without looking at Rust&#39;s documentation that <code>T</code> needs to implement <code>Hash</code>, <code>Eq</code>, and <code>Ord</code> (and the compiler could tell you the same). The way you wrote it, <code>T</code> also needs to implement <code>Copy</code>, but it could be modified so <code>T</code> needs <code>Clone</code> instead.  If you&#39;re doing this as a learning exercise, go ahead, but this is like using the processor to implement generics in C++. You can do it, but it doesn&#39;t make sense."}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574777563, "post_id": 59046813, "comment_id": 104345483, "body": "Technically, <code>PartialOrd</code> should also work here, if you don&#39;t care about the total ordering property."}], "tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": false, "score": 1, "last_activity_date": 1574757579, "creation_date": 1574757579, "answer_id": 59046813, "question_id": 59040426, "link": "https://stackoverflow.com/questions/59040426/how-to-implement-a-macro-that-defines-a-new-public-type-and-returns-an-instance/59046813#59046813", "title": "How to implement a macro that defines a new public type and returns an instance of that type?", "body": "<blockquote>\n  <p>generics require a lot of boilerplate</p>\n</blockquote>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\nuse core::hash::Hash;\nuse std::ops::AddAssign;\n\nstruct YtzU64&lt;T: Eq + Ord + Hash + Copy + AddAssign&gt; {\n    table: HashMap&lt;T, T&gt;\n}\n\nimpl&lt;T: Eq + Ord + Hash + Copy + AddAssign&gt; YtzU64&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        Self {\n            table: HashMap::new()\n        }\n    }\n\n    pub fn add(&amp;mut self, item: &amp;T) {\n        if let Some(item) = self.table.get_mut(item) {\n            *item += *item;\n        } else {\n            self.table.insert(*item, *item);\n        }\n    }\n\n    pub fn largest(&amp;self) -&gt; Option&lt;T&gt; {\n        let mut values = self.table.values();\n        let mut largest:Option&lt;T&gt; = values.next().map(|t| *t);\n        for v in values {\n            if largest &lt; Some(*v) {\n                largest = Some(*v);\n            }\n        }\n        largest\n    }\n}\n\nfn main() {\n    let mut y = YtzU64::new();\n    y.add(&amp;71);\n    y.add(&amp;25);\n    y.add(&amp;25);\n    y.add(&amp;25);\n    y.add(&amp;34);\n    println!(\"{}\", y.largest().unwrap());\n}\n</code></pre>\n\n<p>My translation of your macro requires less boilerplate than your macro. It has two fewer indents, 4 fewer lines (macro_rules!, pattern matching at the top, two close braces at the end). Note that I changed the api slightly, as <code>largest</code> now returns an <code>Option</code>, to match <code>std::iter::Iterator::max()</code>. Also note that your api design is limited to <code>T:Copy</code>. You would have to redesign it a little if you want to support <code>T: ?Copy + Clone</code> or <code>T: ?Copy + ?Clone</code>.</p>\n\n<blockquote>\n  <p>trait hunting</p>\n</blockquote>\n\n<p>The compiler is your friend. Watch what happens when I remove one of the trait bounds</p>\n\n<pre><code>error[E0277]: the trait bound `T: std::hash::Hash` is not satisfied\n...\n</code></pre>\n\n<p>Using a macro is an interesting exercise, but re-implementing generics using macros is not useful.</p>\n"}], "owner": {"reputation": 527, "user_id": 12029705, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd1de2d386e583758ff0fb8ca08e980e?s=128&d=identicon&r=PG&f=1", "display_name": "Hossain Adnan", "link": "https://stackoverflow.com/users/12029705/hossain-adnan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1574757579, "creation_date": 1574717649, "last_edit_date": 1574717964, "question_id": 59040426, "link": "https://stackoverflow.com/questions/59040426/how-to-implement-a-macro-that-defines-a-new-public-type-and-returns-an-instance", "title": "How to implement a macro that defines a new public type and returns an instance of that type?", "body": "<p>I want to implement a struct using <code>macro_rules!</code> because the generics require a lot of boilerplate and trait hunting.</p>\n\n<p>The struct in question has a hash table inside but the key and the value types are to be provided by the user. The code is as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! new_ytz {\n    ($T: ty) =&gt; {\n        // define the struct\n        pub struct Ytz {\n            table: hashbrown::hash_map::HashMap&lt;$T, $T&gt;,\n        }\n\n        impl Ytz {\n            pub fn new() -&gt; Self {\n                Ytz {\n                    table: hashbrown::hash_map::HashMap::&lt;$T, $T&gt;::new(),\n                }\n            }\n\n            pub fn add(&amp;mut self, item: &amp;$T) {\n                if self.table.contains_key(item) {\n                    *self.table.get_mut(item).unwrap() += *item;\n                } else {\n                    self.table.insert(*item, *item);\n                }\n            }\n\n            pub fn largest(&amp;self) -&gt; $T {\n                let mut result = 0;\n                for v in self.table.values() {\n                    if result &lt; *v {\n                        result = *v;\n                    }\n                }\n                result\n            }\n        }\n        // construct an instance of the struct and return it\n        Ytz::new()\n    };\n}\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// driver\nfn main() {\n    let mut y = new_ytz!(u64); // should construct the object and return Ytz::new()\n    y.add(&amp;71);\n    y.add(&amp;25);\n    y.add(&amp;25);\n    y.add(&amp;25);\n    y.add(&amp;34);\n    println!(\"{}\", y.largest());\n}\n</code></pre>\n\n<p>This won't compile since it tries to paste the struct within the main function:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected expression, found keyword `pub`\n  --&gt; src/main.rs:4:9\n   |\n4  |         pub struct Ytz {\n   |         ^^^ expected expression\n...\n40 |     let mut y = new_ytz!(u64); // should construct the object and return Ytz::new()\n   |                 ------------- in this macro invocation\n</code></pre>\n\n<p>How can I work around it? How can I paste the struct outside the main function publicly, along with the <code>impl</code> block?</p>\n"}, {"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 6, "creation_date": 1574705182, "post_id": 59037556, "comment_id": 104318219, "body": "A leak only happens inside a process; it doesn&#39;t make sense to ask if something is leaked &quot;when a process dies&quot;."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574705636, "post_id": 59037556, "comment_id": 104318437, "body": "@trentcl I would guess that OP means thread, not process. But then, the example code shows the process ending immediately after the thread anyway..."}, {"owner": {"reputation": 263, "user_id": 1156132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a9a27e22b5327aaa642a17226c2f6e4c?s=128&d=identicon&r=PG", "display_name": "Thane Thomson", "link": "https://stackoverflow.com/users/1156132/thane-thomson"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574706032, "post_id": 59037556, "comment_id": 104318631, "body": "No, @trentcl&#39;s right. I was thinking about processes (perhaps a noob misunderstanding on my part), but more so about potential untoward consequences outside of a process of not waiting for all child threads to join (not memory leaks per se)."}, {"owner": {"reputation": 263, "user_id": 1156132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a9a27e22b5327aaa642a17226c2f6e4c?s=128&d=identicon&r=PG", "display_name": "Thane Thomson", "link": "https://stackoverflow.com/users/1156132/thane-thomson"}, "edited": false, "score": 0, "creation_date": 1574706228, "post_id": 59037556, "comment_id": 104318721, "body": "My main concern is actually cleanup within threads when the process dies, but especially from within threads that are running some kind of blocking code where communicating with them from outside isn&#39;t possible."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574706698, "post_id": 59037556, "comment_id": 104318930, "body": "<i>The output of which is as follows</i> \u2014 that&#39;s <b>one possible</b> output. Running it myself showed &quot;Created instance outside of threads with ID: 255 Dropped item 255&quot; because the threads never had a chance to run."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574706761, "post_id": 59037556, "comment_id": 104318961, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/2975831/155423\">Is leaked memory freed up when the program exits?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/59037556/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1574707384, "post_id": 59037556, "comment_id": 104319259, "body": "You don&#39;t, period. See <a href=\"https://stackoverflow.com/q/52465480/155423\">What is the standard way to get a Rust thread out of blocking operations?</a>; <a href=\"https://stackoverflow.com/q/55228629/155423\">How does Rust handle killing threads?</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574707402, "post_id": 59037556, "comment_id": 104319265, "body": "See also <a href=\"https://stackoverflow.com/q/53458755/155423\">How do I gracefully shutdown the Tokio runtime in response to a SIGTERM?</a>; <a href=\"https://stackoverflow.com/q/26280859/155423\">How to catch signals in Rust</a>."}], "owner": {"reputation": 263, "user_id": 1156132, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a9a27e22b5327aaa642a17226c2f6e4c?s=128&d=identicon&r=PG", "display_name": "Thane Thomson", "link": "https://stackoverflow.com/users/1156132/thane-thomson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1574707868, "creation_date": 1574704431, "last_edit_date": 1574707868, "question_id": 59037556, "link": "https://stackoverflow.com/questions/59037556/how-do-i-perform-cleanup-in-blocking-child-threads-when-the-process-dies", "title": "How do I perform cleanup in blocking child threads when the process dies?", "body": "<p>I have the following contrived Rust code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::thread;\n\nconst THREAD_COUNT: u8 = 10;\n\nstruct DropMe {\n    id: u8,\n}\n\nimpl Drop for DropMe {\n    fn drop(&amp;mut self) {\n        println!(\"Dropped item {}\", self.id);\n    }\n}\n\nfn main() {\n    let outer_drop_me = DropMe { id: 255 };\n    println!(\n        \"Created instance outside of threads with ID: {}\",\n        &amp;outer_drop_me.id\n    );\n    for i in 0..THREAD_COUNT {\n        let drop_me = DropMe { id: i };\n        thread::spawn(move || {\n            println!(\"Spawned thread {}\", drop_me.id);\n            // Poor man's substitute for illustrating blocking I/O\n            thread::sleep(std::time::Duration::from_millis(500));\n            // Poor man's substitute for illustrating a cleanup function\n            drop(drop_me);\n        });\n    }\n    // outer_drop_me should be dropped automatically here as it goes out of\n    // scope\n}\n</code></pre>\n\n<p>The output of which is as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Created instance outside of threads with ID: 255\nSpawned thread 0\nSpawned thread 1\nSpawned thread 2\nSpawned thread 3\nSpawned thread 4\nSpawned thread 5\nSpawned thread 6\nSpawned thread 7\nSpawned thread 8\nDropped item 255\nSpawned thread 9\n</code></pre>\n\n<p>How can I do cleanup in threads where the code inside those threads may be blocking, but the process is being terminated (e.g. by way of <code>SIGTERM</code>)?</p>\n\n<p>In this contrived example, one could <code>join</code> on the returned thread handles from the spawned threads, but what if <code>join</code> is not available and the child threads are blocking? Do you just resign yourself to forfeiting the cleanup code after the part of the code that may be blocking?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574769782, "post_id": 59037266, "comment_id": 104341156, "body": "Fair enough. I&#39;ve drastically simplified and generalized the question to focus on the why."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1574769939, "creation_date": 1574769939, "answer_id": 59050599, "question_id": 59037266, "link": "https://stackoverflow.com/questions/59037266/why-does-an-impl-trait-return-value-implement-send-while-boxdyn-trait-does/59050599#59050599", "title": "Why does an `impl Trait` return value implement Send while `Box&lt;dyn Trait&gt;` does not?", "body": "<p>For ergonomic reasons. <a href=\"https://rust-lang.github.io/rfcs/1522-conservative-impl-trait.html\" rel=\"nofollow noreferrer\">RFC 1522, conservative impl trait</a>, specifically discusses this design decision:</p>\n\n<blockquote>\n  <p>OIBITs leak through an abstract return type. This might be considered controversial, since\n  it effectively opens a channel where the result of function-local type inference affects\n  item-level API, but has been deemed worth it for the following reasons:</p>\n  \n  <ul>\n  <li><p>Ergonomics: Trait objects already have the issue of explicitly needing to\n  declare <code>Send</code>/<code>Sync</code>-ability, and not extending this problem to abstract\n  return types is desirable. In practice, most uses of this feature would have\n  to add explicit bounds for OIBITS if they wanted to be maximally usable.</p></li>\n  <li><p>Low real change, since the situation already somewhat exists on structs with private fields:</p>\n  \n  <ul>\n  <li>In both cases, a change to the private implementation might change whether a OIBIT is\n  implemented or not.</li>\n  <li>In both cases, the existence of OIBIT impls is not visible without documentation tools</li>\n  <li>In both cases, you can only assert the existence of OIBIT impls\n  by adding explicit trait bounds either to the API or to the crate's test suite.</li>\n  </ul></li>\n  </ul>\n  \n  <p>In fact, a large part of the point of OIBITs in the first place was to cut\n  across abstraction barriers and provide information about a type without the\n  type's author having to explicitly opt in.</p>\n  \n  <p>This means, however, that it has to be considered a silent breaking change to\n  change a function with an abstract return type in a way that removes OIBIT impls,\n  which might be a problem. (As noted above, this is already the case for <code>struct</code>\n  definitions.)</p>\n  \n  <p>But since the number of used OIBITs is relatively small, deducing the return type\n  in a function body and reasoning about whether such a breakage will occur has\n  been deemed as a manageable amount of work.</p>\n</blockquote>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/49710852/155423\">What is an auto trait in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 425, "favorite_count": 0, "accepted_answer_id": 59050599, "answer_count": 1, "score": 5, "last_activity_date": 1574769939, "creation_date": 1574703273, "last_edit_date": 1574769641, "question_id": 59037266, "link": "https://stackoverflow.com/questions/59037266/why-does-an-impl-trait-return-value-implement-send-while-boxdyn-trait-does", "title": "Why does an `impl Trait` return value implement Send while `Box&lt;dyn Trait&gt;` does not?", "body": "<p>The solution from <a href=\"https://stackoverflow.com/questions/59035366/how-do-i-store-a-variable-of-type-impl-trait-in-a-struct\">How do I store a variable of type `impl Trait` in a struct?</a> suggests creating a <code>Future</code> trait object. Doing that in my real code generates an error that the type is not <code>Send</code>, but the only difference between the working and non working version is the presence or absence of the cast to <code>dyn Future</code>.</p>\n\n<p>Why does the compiler see these as different and how do I resolve the problem?</p>\n\n<p>Here's a simplified version of the problem:</p>\n\n<pre><code>use std::future::Future;\n\nfn uses_impl_trait() -&gt; impl Future&lt;Output = i32&gt; {\n    async { 42 }\n}\n\nfn uses_trait_object() -&gt; Box&lt;dyn Future&lt;Output = i32&gt;&gt; {\n    Box::new(async { 42 })\n}\n\nfn requires_send&lt;T: Send&gt;(_: T) {}\n\nfn example() {\n    requires_send(uses_impl_trait()); // Works\n    requires_send(uses_trait_object()); // Fails\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `dyn std::future::Future&lt;Output = i32&gt;` cannot be sent between threads safely\n  --&gt; src/lib.rs:15:19\n   |\n11 | fn requires_send&lt;T: Send&gt;(_: T) {}\n   |    -------------    ---- required by this bound in `requires_send`\n...\n15 |     requires_send(uses_trait_object());\n   |                   ^^^^^^^^^^^^^^^^^^^ `dyn std::future::Future&lt;Output = i32&gt;` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `dyn std::future::Future&lt;Output = i32&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;dyn std::future::Future&lt;Output = i32&gt;&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;dyn std::future::Future&lt;Output = i32&gt;&gt;`\n</code></pre>\n\n<p>From <a href=\"https://stackoverflow.com/q/25649423/155423\">Sending trait objects between threads in Rust</a>, I already know that I can change the trait object to <code>Box&lt;dyn Future&lt;Output = i32&gt; + Send&gt;</code>, but <strong>why</strong> does this difference exist?</p>\n"}, {"tags": ["rust", "future"], "comments": [{"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 0, "creation_date": 1574697872, "post_id": 59035366, "comment_id": 104314478, "body": "<code>impl</code> just means &quot;any type that implements this trait&quot;. To store it in a struct or enum, you have 3 options: 1) make the stuct generic, e.g. <code>struct Foo&lt;T: Future&gt;</code>, 2) use the concrete type that implements the trait, 3) use a trait object, e.g. <code>Box&lt;dyn Future&gt;</code>"}, {"owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "reply_to_user": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 0, "creation_date": 1574698193, "post_id": 59035366, "comment_id": 104314652, "body": "In this example (2) or (3) don&#39;t seem to work. Did you manage to get it to work on the playground? And 1 would leak out details of an internal implementation to the outside world"}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 0, "creation_date": 1574699531, "post_id": 59035366, "comment_id": 104315423, "body": "For <code>Future</code> option (2) doesn&#39;t work if the future is from an async block. But option (3) works. Just cast the result of <code>Box::pin</code> to <code>Pin&lt;Box&lt;dyn Future&lt;Output = i32&gt;&gt;&gt;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1609770817, "last_edit_date": 1609770817, "creation_date": 1574697728, "answer_id": 59035722, "question_id": 59035366, "link": "https://stackoverflow.com/questions/59035366/how-do-i-store-a-variable-of-type-impl-trait-in-a-struct/59035722#59035722", "title": "How do I store a variable of type `impl Trait` in a struct?", "body": "<p>You cannot, really. <code>impl Trait</code> creates an anonymous, unnameable type. That means that you cannot declare a variable with an explicit type that will work.</p>\n<p>The primary solution is to use a <em>trait object</em>:</p>\n<pre><code>use std::fmt::Display;\n\nfn make_it() -&gt; impl Display {\n    2\n}\n\nstruct Example {\n    it: Box&lt;dyn Display&gt;,\n}\n\nimpl Example {\n    fn make() -&gt; Self {\n        Example {\n            it: Box::new(make_it()),\n        }\n    }\n}\n</code></pre>\n<p>You can also avoid using an associated function and use a plain function instead, coupled with a generic:</p>\n<pre><code>use std::fmt::Display;\n\nfn make_it() -&gt; impl Display {\n    2\n}\n\nstruct Example&lt;T&gt; {\n    it: T,\n}\n\nimpl Example&lt;Box&lt;dyn Display&gt;&gt; {\n    fn make() -&gt; Self {\n        Example {\n            it: Box::new(make_it()),\n        }\n    }\n}\n\nfn make_example() -&gt; Example&lt;impl Display&gt; {\n    Example {\n        it: make_it(),\n    }\n}\n</code></pre>\n<h3>Nightly only</h3>\n<p>If you wish to use unstable nightly features, you can use <a href=\"https://rust-lang.github.io/rfcs/2071-impl-trait-existential-types.html\" rel=\"nofollow noreferrer\"><em>existential types</em> (RFC 2071)</a>:</p>\n<pre><code>// 1.51.0-nightly (2021-01-03 80184183ba0a53aa4f49)\n#![feature(type_alias_impl_trait)]\n\nuse std::fmt::Display;\n\ntype SomeDisplay = impl Display;\n\nfn make_it() -&gt; SomeDisplay {\n    2\n}\n\nstruct Example {\n    it: SomeDisplay,\n}\n\nimpl Example {\n    fn make() -&gt; Self {\n        Example { it: make_it() }\n    }\n}\n</code></pre>\n<p>Or:</p>\n<pre><code>// 1.51.0-nightly (2021-01-03 80184183ba0a53aa4f49)\n#![feature(type_alias_impl_trait)]\n\nuse std::fmt::Display;\n\nfn make_it() -&gt; impl Display {\n    2\n}\n\nstruct Example&lt;T&gt; {\n    it: T,\n}\n\ntype SomeDisplay = impl Display;\n\nimpl Example&lt;SomeDisplay&gt; {\n    fn make() -&gt; Self {\n        Example { it: make_it() }\n    }\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27535289/155423\">What is the correct way to return an Iterator (or any other trait)?</a></li>\n<li><a href=\"https://stackoverflow.com/q/52001592/155423\">Why can impl trait not be used to return multiple / conditional types?</a></li>\n<li><a href=\"https://stackoverflow.com/q/39482131/155423\">Is it possible to use `impl Trait` as a function&#39;s return type in a trait definition?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27567849/155423\">What makes something a &quot;trait object&quot;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/52079983/155423\">What is the advantage of publishing a concrete type in a crate&#39;s API instead of `impl trait`?</a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574701902, "post_id": 59036846, "comment_id": 104316703, "body": "Please pay attention to the compiler warnings about this code and adjust it accordingly."}], "tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 0, "last_activity_date": 1574702295, "last_edit_date": 1574702295, "creation_date": 1574701685, "answer_id": 59036846, "question_id": 59035366, "link": "https://stackoverflow.com/questions/59035366/how-do-i-store-a-variable-of-type-impl-trait-in-a-struct/59036846#59036846", "title": "How do I store a variable of type `impl Trait` in a struct?", "body": "<p>Though the suggestions above are useful, the specific answer to the question is to cast the <code>Pin&lt;Box&lt;Future&gt;&gt;&gt;</code> appropriately</p>\n\n<p>This line</p>\n\n<pre><code>let fut = Arc::new(Mutex::new(Box::pin(async { 1 })));\n</code></pre>\n\n<p>needs to change</p>\n\n<pre><code>let fut = Arc::new(Mutex::new(Box::pin(async { 1 }) as Pin&lt;Box&lt;Future&lt;Output=i32&gt;&gt;&gt; ));\n</code></pre>\n\n<p>which will allow one to express the following struct</p>\n\n<pre><code>struct Foo {\n    conn_futures: BTreeMap&lt;ChannelId, Arc&lt;Mutex&lt;Pin&lt;Box&lt;dyn Future&lt;Output = i32&gt;&gt;&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>and the compiler won't complain. Thanks @Aloso for the hint</p>\n\n<p>However, the following error is given instead</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)` cannot be sent between threads safely\n  --&gt; src/main.rs:24:16\n   |\n24 |        spawner.spawn(async move {\n   |                ^^^^^ `(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)` cannot be sent between threads safely\n   |\n   = help: the trait `std::marker::Send` is not implemented for `(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;`\n   = note: required because it appears within the type `std::boxed::Box&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;`\n   = note: required because it appears within the type `std::pin::Pin&lt;std::boxed::Box&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `futures_util::lock::mutex::Mutex&lt;std::pin::Pin&lt;std::boxed::Box&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;&gt;&gt;`\n   = note: required because of the requirements on the impl of `std::marker::Send` for `std::sync::Arc&lt;futures_util::lock::mutex::Mutex&lt;std::pin::Pin&lt;std::boxed::Box&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;&gt;&gt;&gt;`\n   = note: required because it appears within the type `[static generator@src/main.rs:24:33: 27:10 fut:std::sync::Arc&lt;futures_util::lock::mutex::Mutex&lt;std::pin::Pin&lt;std::boxed::Box&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;&gt;&gt;&gt; _]`\n   = note: required because it appears within the type `std::future::GenFuture&lt;[static generator@src/main.rs:24:33: 27:10 fut:std::sync::Arc&lt;futures_util::lock::mutex::Mutex&lt;std::pin::Pin&lt;std::boxed::Box&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;&gt;&gt;&gt; _]&gt;`\n   = note: required because it appears within the type `impl core::future::future::Future`\n</code></pre>\n\n<p>which will be a separate question</p>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1486, "favorite_count": 0, "accepted_answer_id": 59035722, "answer_count": 2, "score": 2, "last_activity_date": 1609770817, "creation_date": 1574696412, "last_edit_date": 1574698251, "question_id": 59035366, "link": "https://stackoverflow.com/questions/59035366/how-do-i-store-a-variable-of-type-impl-trait-in-a-struct", "title": "How do I store a variable of type `impl Trait` in a struct?", "body": "<p>This works:</p>\n\n<pre><code>let fut = Arc::new(Mutex::new(Box::pin(async { 1 })));\n\nlet mut conn_futures = BTreeMap::new(); // implicitly typed\nconn_futures.insert(123, fut);\nif let Some(fut) = conn_futures.get_mut(&amp;123) {\n   let fut = fut.clone();\n   self.pool.spawn(async move {\n        let mut fut = fut.try_lock().unwrap();\n        (&amp;mut *fut).await;\n    });\n};\n</code></pre>\n\n<p>How do I write the same thing inside a structure; what is the type of <code>conn_futures</code>? According to the compiler, it's <code>BTreeMap&lt;i32, impl Future&gt;</code>, but there's no way to write that in a structure: </p>\n\n<pre><code>struct Foo {\n    conn_futures: BTreeMap&lt;i32, impl Future&gt;, // impl not allow in this position\n}\n</code></pre>\n\n<p>I tried this:</p>\n\n<pre><code>use futures::{executor::LocalPool, lock::Mutex, task::SpawnExt, Future}; // 0.3.1\nuse std::{collections::BTreeMap, pin::Pin, sync::Arc};\n\nstruct Foo {\n    conn_futures: BTreeMap&lt;i32, Arc&lt;Mutex&lt;Pin&lt;Box&lt;dyn Future&lt;Output = i32&gt;&gt;&gt;&gt;&gt;&gt;,\n}\n\nfn alternative() {\n    let mut pool = LocalPool::new();\n    let spawner = pool.spawner();\n\n    // Have a structure with the btreemap instead\n    let mut foo = Foo {\n        conn_futures: BTreeMap::new(),\n    };\n    let fut = Arc::new(Mutex::new(Box::pin(async { 1 })));\n    foo.conn_futures.insert(123, fut);\n    if let Some(fut) = foo.conn_futures.get_mut(&amp;123) {\n        let fut = fut.clone();\n        spawner.spawn(async move {\n            let mut fut = fut.try_lock().unwrap();\n            (&amp;mut *fut).await;\n        });\n    };\n}\n\nfn main() {\n    let mut pool = LocalPool::new();\n    let spawner = pool.spawner();\n    let fut = Arc::new(Mutex::new(Box::pin(async { 1 })));\n\n    let mut conn_futures = BTreeMap::new(); // implicitly typed\n    conn_futures.insert(123, fut);\n    if let Some(fut) = conn_futures.get_mut(&amp;123) {\n        let fut = fut.clone();\n        spawner.spawn(async move {\n            let mut fut = fut.try_lock().unwrap();\n            (&amp;mut *fut).await;\n        });\n    };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=eb30cc4e1d90af5b2f3cb78d7ce4e71e\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>And got an error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:34\n   |\n17 |     foo.conn_futures.insert(123, fut);\n   |                                  ^^^ expected trait core::future::future::Future, found opaque type\n   |\n   = note: expected type `std::sync::Arc&lt;futures_util::lock::mutex::Mutex&lt;std::pin::Pin&lt;std::boxed::Box&lt;(dyn core::future::future::Future&lt;Output = i32&gt; + 'static)&gt;&gt;&gt;&gt;`\n              found type `std::sync::Arc&lt;futures_util::lock::mutex::Mutex&lt;std::pin::Pin&lt;std::boxed::Box&lt;impl core::future::future::Future&gt;&gt;&gt;&gt;`\n</code></pre>\n\n<p>How do I declare the type of <code>conn_futures</code> in a struct?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1574682955, "post_id": 59030952, "comment_id": 104306282, "body": "I think this is the same problem as in <a href=\"https://stackoverflow.com/questions/48143889/retaking-ownership-of-a-mutable-reference-passed-to-a-function-accepting-a-gener\">Retaking ownership of a mutable reference passed to a function accepting a generic type</a>. (The question is a little obscure but the answer is on point.) <code>for i in bar</code> calls <code>bar.into_iter()</code>, where <code>into_iter</code> is a trait function that takes <code>self</code>, so it doesn&#39;t trigger automatic reborrowing. You can solve it the same way, too. Does that answer your question?"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 2, "creation_date": 1574683469, "post_id": 59030952, "comment_id": 104306586, "body": "<code>for i in bar.iter_mut()</code> is probably what you are looking for"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574683878, "post_id": 59030952, "comment_id": 104306817, "body": "@trentcl Yes, exactly! Thank you! Why didn&#39;t you post answer?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1574684490, "post_id": 59030952, "comment_id": 104307119, "body": "I prefer to link questions together, if possible, rather than write a new answer that is 90% the same as an existing answer. Marking this question as a duplicate may help future askers find the answer more easily, and if there are updates (let&#39;s say the auto-reborrowing algorithm changes so the original code becomes legal), the answer only needs to be updated in one place."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1574694940, "post_id": 59030952, "comment_id": 104312836, "body": "Another solution is to explicitly reborrow the reference: <code>for i in &amp;mut *bar</code>"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1574695203, "post_id": 59030952, "comment_id": 104312996, "body": "@SvenMarnach Thank you, I think that may be useful in future as well."}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 1, "closed_date": 1574695132, "answer_count": 0, "score": 2, "last_activity_date": 1574681914, "creation_date": 1574681914, "question_id": 59030952, "link": "https://stackoverflow.com/questions/59030952/borrow-of-moved-value-how-did-the-value-move-into-the-loop", "closed_reason": "Duplicate", "title": "Borrow of moved value: how did the value move into the loop?", "body": "<p>I am getting a <code>borrow of moved value</code> error for this code:</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=71fc4d76df5da10fa1a95ae9f2cd79aa\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>let mut foo = vec![1,2,3];\nlet bar = &amp;mut foo;\n\nfor i in bar { // ...value moved here\n    // whatever\n}\n\nbar.push(1); // borrow of moved value `bar`...\n</code></pre>\n\n<p>But how did the value of <code>bar</code> moved there? It's just a reference, right, so it should have been borrowed, not moved?</p>\n"}, {"tags": ["winapi", "rust", "wallpaper"], "comments": [{"owner": {"reputation": 1170, "user_id": 5682416, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/eca9557bc24253c2921579ad1644f234?s=128&d=identicon&r=PG&f=1", "display_name": "Hugal31", "link": "https://stackoverflow.com/users/5682416/hugal31"}, "edited": false, "score": 1, "creation_date": 1574686764, "post_id": 59030468, "comment_id": 104308360, "body": "Not really your question but there is already a crate for setting wallpapers that you could look : <a href=\"https://github.com/reujab/wallpaper.rs\" rel=\"nofollow noreferrer\">github.com/reujab/wallpaper.rs</a>"}, {"owner": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "reply_to_user": {"reputation": 1170, "user_id": 5682416, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/eca9557bc24253c2921579ad1644f234?s=128&d=identicon&r=PG&f=1", "display_name": "Hugal31", "link": "https://stackoverflow.com/users/5682416/hugal31"}, "edited": false, "score": 0, "creation_date": 1574687383, "post_id": 59030468, "comment_id": 104308678, "body": "Hey, thanks I&#39;ll take a look at this since I still need to figure out how to set the wallpaper for different monitors Edit: Ahh damnit the crate supports only one monitor as well ..."}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "edited": false, "score": 0, "creation_date": 1574682505, "post_id": 59030949, "comment_id": 104306015, "body": "Hey thanks. It works now. You got the CString types a little wrong though, I added the working code in my question."}, {"owner": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "edited": false, "score": 0, "creation_date": 1574682586, "post_id": 59030949, "comment_id": 104306061, "body": "Another question, do you by any chance know if I can set the background for different screens individually with SystemParametersInfo?"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "reply_to_user": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "edited": false, "score": 0, "creation_date": 1574683063, "post_id": 59030949, "comment_id": 104306346, "body": "Sorry, I haven&#39;t really worked with WINAPI so I can not comment on the specifics of it. As for types, I think <code>CStr</code> should work as you have a static string anyway, no?"}, {"owner": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "edited": false, "score": 0, "creation_date": 1574683165, "post_id": 59030949, "comment_id": 104306407, "body": "The compiler complained whne using your code. I looked up the CStr Docs and the example was using CString::new()"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "reply_to_user": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "edited": false, "score": 0, "creation_date": 1574683218, "post_id": 59030949, "comment_id": 104306437, "body": "An explicit cast is perhaps needed so I added that."}, {"owner": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "edited": false, "score": 0, "creation_date": 1574683267, "post_id": 59030949, "comment_id": 104306465, "body": "The compiler complained about the Cstr::from() part"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574686786, "post_id": 59030949, "comment_id": 104308372, "body": "&quot;which will dereference the pointer and get a &amp;str&quot; no it&#39;s completely UB"}, {"owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574687433, "post_id": 59030949, "comment_id": 104308704, "body": "@Stargateur not sure why that would be UB: taking a mutable reference to a <code>&amp;&#39;static str</code> and dereferencing it again <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9cc7540a3215b61dde9b64a80f470ef5\" rel=\"nofollow noreferrer\">is a perfectly safe action</a>. Does the FFI play into this somehow?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574688850, "post_id": 59030949, "comment_id": 104309423, "body": "the memory model of fat pointer is unspecified and so you can&#39;t know what happen on C side you said &quot;You then pass it to C&quot;, So UB if one use it in any context on C side, you can&#39;t pass a fat pointer to C It&#39;s a Rust only object type."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574689165, "post_id": 59030949, "comment_id": 104309639, "body": "Oh you are talking about <code>&amp;mut &amp;str</code> not <code>&amp;str</code>, well still UB to use <code>&amp;str</code> but nevermind"}], "tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": true, "score": 4, "last_activity_date": 1574732021, "last_edit_date": 1574732021, "creation_date": 1574681903, "answer_id": 59030949, "question_id": 59030468, "link": "https://stackoverflow.com/questions/59030468/why-does-calling-systemparametersinfo-from-rust-to-set-the-wallpaper-set-it-to-b/59030949#59030949", "title": "Why does calling SystemParametersInfo from Rust to set the wallpaper set it to black?", "body": "<p>Rust strings are not C strings. You should instead use <a href=\"https://doc.rust-lang.org/std/ffi/struct.CString.html\" rel=\"nofollow noreferrer\"><code>CString</code></a> to interface with C code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ffi::CString;\n\n// use ...\n\nfn main() {\n    let mut image_path = CString::new(\"Path to Image\").unwrap();\n\n    unsafe {\n        SystemParametersInfoA(\n            SPI_SETDESKWALLPAPER,\n            0,\n            image_path.as_ptr() as *mut c_void,\n            SPIF_UPDATEINIFILE,\n        );\n    }\n}\n</code></pre>\n\n<p>To elaborate: <code>image_path</code> is a <code>&amp;str</code> (a fat pointer). By taking a mutable reference to it you are getting a <code>&amp;mut &amp;str</code>. You then pass it to C, which will dereference the pointer and get a <code>&amp;str</code>.</p>\n\n<p>But C code does not know how to deal with a Rust type: it is only aware of C strings and instead expects a pointer to the first byte. It also expects the string to be <code>NUL</code> terminated, which Rust strings are not. Thus it makes no sense to pass a Rust <code>&amp;str</code> to C code in this case and this is exactly the reason <code>CStr</code> and <code>CString</code> exist.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1574731846, "creation_date": 1574731846, "answer_id": 59042428, "question_id": 59030468, "link": "https://stackoverflow.com/questions/59030468/why-does-calling-systemparametersinfo-from-rust-to-set-the-wallpaper-set-it-to-b/59042428#59042428", "title": "Why does calling SystemParametersInfo from Rust to set the wallpaper set it to black?", "body": "<p>\n</p>\n\n<p>This was my final working code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(windows)]\nextern crate winapi;\n\nuse std::ffi::CString;\nuse winapi::ctypes::c_void;\n\nuse winapi::um::winuser::{SystemParametersInfoA, SPIF_UPDATEINIFILE, SPI_SETDESKWALLPAPER};\n\nfn main() {\n    let mut image_path = CString::new(\"Path to Image\").unwrap();\n\n    unsafe {\n        SystemParametersInfoA(\n            SPI_SETDESKWALLPAPER,\n            0,\n            image_path.as_ptr() as *mut c_void,\n            SPIF_UPDATEINIFILE,\n        );\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 2734662, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8faf7a0c55dabdee6f17642119a7336c?s=128&d=identicon&r=PG&f=1", "display_name": "eriksimon", "link": "https://stackoverflow.com/users/2734662/eriksimon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 59030949, "answer_count": 2, "score": 2, "last_activity_date": 1574732021, "creation_date": 1574680343, "last_edit_date": 1574731941, "question_id": 59030468, "link": "https://stackoverflow.com/questions/59030468/why-does-calling-systemparametersinfo-from-rust-to-set-the-wallpaper-set-it-to-b", "title": "Why does calling SystemParametersInfo from Rust to set the wallpaper set it to black?", "body": "<p>I am trying to set the Windows background in Rust using the winapi crate and <code>SystemParametersInfo</code>, but it sets the background to black. In C++, that usually means that <code>pvParam</code> isn't passed correctly or it has the wrong type. \nWhat's wrong?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[cfg(windows)]\nextern crate winapi;\n\nuse winapi::ctypes::c_void;\n\nuse winapi::um::winuser::{SystemParametersInfoA, SPIF_UPDATEINIFILE, SPI_SETDESKWALLPAPER};\n\nfn main() {\n    let mut image_path = \"Path to Image\";\n    let image_path_c_ptr: *mut c_void = &amp;mut image_path as *mut _ as *mut c_void;\n\n    unsafe {\n        SystemParametersInfoA(\n            SPI_SETDESKWALLPAPER,\n            0,\n            image_path_c_ptr,\n            SPIF_UPDATEINIFILE,\n        );\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "edited": false, "score": 1, "creation_date": 1574679760, "post_id": 59028838, "comment_id": 104304546, "body": "What&#39;s the nature of the mutable state, and why does it need to persist across function calls?"}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "reply_to_user": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "edited": false, "score": 0, "creation_date": 1574682287, "post_id": 59028838, "comment_id": 104305904, "body": "The state will be stored by many vectors of structs, each containing many thousands of elements, and probably a lot of hierarchy within the structs. It will be a model of a micro processor. It needs to persist across function calls since Rust is being used for the main application engine but exposed to the user via a Python interface. A single Python process will call Rust functions to manipulate and query the model and the Rust domain needs to keep track of that state."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574709628, "post_id": 59028838, "comment_id": 104320255, "body": "See also <a href=\"http://jakegoulding.com/rust-ffi-omnibus/objects/\" rel=\"nofollow noreferrer\">Objects in <i>The Rust FFI Omnibus</i></a>."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1574723978, "post_id": 59028838, "comment_id": 104325332, "body": "Thanks @Shepmaster, user31601 and Matthieu M. for your time and patience. It took me a while but I see what you were all getting at now and it is a good solution you have provided. I may write up my own answer to this question in more layman&#39;s terms once I get a working solution based on the FFI example. Thanks again!"}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "reply_to_user": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "edited": false, "score": 0, "creation_date": 1574723987, "post_id": 59028838, "comment_id": 104325337, "body": "@user31601, please see above"}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574724013, "post_id": 59028838, "comment_id": 104325340, "body": "@Matthieu M., please see above"}], "answers": [{"comments": [{"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574682882, "post_id": 59031050, "comment_id": 104306235, "body": "Thanks for the answer, I can see that working for something simple like an app configuration and I fact I already do something along these lines for that. However, in this case we are talking about a large amount of data, e.g. many MB, which I am doing in Rust specifically for performance and I don&#39;t want to pass it all over to the Python space. I want it to exist in Rust only and have it exposed to Python via an API to read/write discrete portions of it. Maybe the comment I just added to the question provides better context."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 4, "creation_date": 1574687823, "post_id": 59031050, "comment_id": 104308911, "body": "@Ginty: You don&#39;t have to expose the <i>internals</i> to Python. From the Python point of view, it can just be some opaque handle to a blob of state (<code>void*</code> in C parlance), which the user passes to the functions calls."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574699516, "post_id": 59031050, "comment_id": 104315412, "body": "Ok, thanks for the clarification, but I don&#39;t think it&#39;s really answering my question. This seems like the answer to something like &quot;how to expose data strored in Rust to a client/Python&quot;, whereas my question is about how to store the data on the Rust side."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574701785, "post_id": 59031050, "comment_id": 104316641, "body": "<i>I don&#39;t want to pass [multiple megabytes of data] all over to the Python space</i> \u2014 @Ginty there&#39;s no reason to. The Python C code can own the struct (or put the struct in a <code>Box</code> and it owns that raw pointer), and then passes back the reference to that data to the Rust code. Passing 8 bytes of pointer is not a hardship."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574702264, "post_id": 59031050, "comment_id": 104316864, "body": "Thanks @Shepmaster, but I think this is going off on a tangent away from my original question. Actually, I don&#39;t want the Python side to be the owner of the data at all, or have any direct low level access to it. The data will will be interfaced to/from the Python side via a much higher-level API. Really, the crux of my question is simply: If I don&#39;t have a main() (as I would with a Rust binary situation), what is the recommended way to store a large amount of long-lived mutable data in Rust?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574702579, "post_id": 59031050, "comment_id": 104317017, "body": "@Ginty speaking bluntly, your desired outcome is not a good one. You are effectively asking how to create a global variable (see <a href=\"https://stackoverflow.com/a/27826181/155423\">How do I create a global, mutable singleton?</a>). The best answer is <b>don&#39;t</b>, which is what this answer generally recommends and what the linked answer also recommends. We give this advice with decades of experience behind it in the hopes that you don&#39;t have to spend the same decades learning it the way we did."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574703404, "post_id": 59031050, "comment_id": 104317412, "body": "Thanks for the link @Shepmaster, I think I&#39;d seen that before. In fact, I think why I asked this question originally is that you managed to convinced that asker to ditch their plan for a mutable global and instead pass the data around. So my question here was, if I don&#39;t have a main() to provide the lifetime for this data to be passed around, how else should I do it? I don&#39;t see much wrong with your answer of how to create a mutable static variable."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574703530, "post_id": 59031050, "comment_id": 104317467, "body": "@Shepmaster continued... In my case the global variable here is very analogous to a database, and in fact maybe in future I&#39;ll replace it with a callout to sqlite or something. Initially though I just want to build and keep it in memory at runtime and the static mutable seems like the tool for the job. Maybe the only one, because I don&#39;t think any of the (very helpful) people here have actually offered any workable alternative."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574703746, "post_id": 59031050, "comment_id": 104317572, "body": "<i>if I don&#39;t have a <code>main()</code> to provide the lifetime for this data to be passed around, how else should I do it</i> \u2014 You always have a main function or equivalent. As this answer states, require the consumer (Python code) to own the data and pass a reference to that data back to the Rust code to manipulate it. Then the variable is owned by the <b>Python</b> main function. <i>analogous to a database</i> \u2014 Yes, and hidden globals like database connections are a pain when you outgrow them."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1574704004, "post_id": 59031050, "comment_id": 104317691, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/203047/discussion-between-ginty-and-shepmaster\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1574701371, "last_edit_date": 1592644375, "creation_date": 1574682208, "answer_id": 59031050, "question_id": 59028838, "link": "https://stackoverflow.com/questions/59028838/how-to-implement-long-lived-variables-state-in-a-library/59031050#59031050", "title": "How to implement long-lived variables/state in a library?", "body": "<h3>Bundle it</h3>\n<p>In general, and absent other requirements, the answer is to bundle your state in <em>some</em> object and hand it over to the client. A popular name is <code>Context</code>.</p>\n<p>Then, the client should have to pass the object around in each function call that requires it:</p>\n<ul>\n<li>Either by defining the functionality as methods on the object.</li>\n<li>Or by requiring the object as parameter of the functions/methods.</li>\n</ul>\n<p><strong>This gives full control to the client.</strong></p>\n<p>The client may end up creating a global for it, or may actually appreciate the flexibility of being able to juggle multiple instances.</p>\n<p><em>Note: There is no need to provide any access to the inner state of the object; all the client needs is a handle (ref-counted, in Python) to control the lifetime and decide when to use which handle. In C, this would be a <code>void*</code>.</em></p>\n<hr />\n<h3>Exceptions</h3>\n<p>There are cases, such as a cache, where the functionality is not impacted, only the performance.</p>\n<p>In this case, while the flexibility could be appreciated, it may be more of a burden than anything. A global, or thread-local, would then make sense.</p>\n"}, {"comments": [{"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574699854, "post_id": 59032766, "comment_id": 104315592, "body": "Thanks, that&#39;s helpful. Looking at variations on this question in other places the answers always include variants of &quot;global vars/state are evil, you should pass the data between the functions that need access&quot;. However, I think you&#39;ve confirmed that in my case with a lib a static/global var is exactly how this should be done, and maybe the only way. I think I can live with the limitations of static that you note."}, {"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574700405, "post_id": 59032766, "comment_id": 104315901, "body": "That wasn&#39;t what I was intending to suggest! A heap allocated, manually managed blob is not the same as a static variable. I&#39;m advocating the former."}, {"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574700506, "post_id": 59032766, "comment_id": 104315949, "body": "<code>unsafe</code> code does not mean &quot;bad&quot; code. The whole reason <code>unsafe</code> exists as a keyword in Rust is because there are situations that the Rust borrow checker can&#39;t handle. This is one of them, so use <code>unsafe</code>."}, {"owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574700524, "post_id": 59032766, "comment_id": 104315969, "body": "What&#39;s the difference? A static vector would go on the heap, right?"}, {"owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "reply_to_user": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "edited": false, "score": 0, "creation_date": 1574701058, "post_id": 59032766, "comment_id": 104316262, "body": "Well, the contents of <i>any</i> vector would go on the heap, technically. The distinction I&#39;m trying to draw is between data managed behind a static (i.e. global) variable, and a dynamically allocated region of heap data that isn&#39;t tied to <i>any</i> long-lived rust variable. If you know C++, its the difference between <code>static BigThingy x;</code> and <code>BigThingy* x = new BigThingy();</code>."}], "tags": [], "owner": {"reputation": 1594, "user_id": 7099148, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfd45aa79d7886852587e3d9b6eb2ac9?s=128&d=identicon&r=PG&f=1", "display_name": "user31601", "link": "https://stackoverflow.com/users/7099148/user31601"}, "is_accepted": false, "score": 0, "last_activity_date": 1574687898, "creation_date": 1574687898, "answer_id": 59032766, "question_id": 59028838, "link": "https://stackoverflow.com/questions/59028838/how-to-implement-long-lived-variables-state-in-a-library/59032766#59032766", "title": "How to implement long-lived variables/state in a library?", "body": "<p>I'd be tempted to dip into <code>unsafe</code> code here. You cannot use non-static lifetimes, as the lifetime of your state would be determined by the Python code, which Rust can't see. On the other hand, <code>'static</code> state has other problems:</p>\n\n<ul>\n<li>It necessarily persists until the end of the program, which means there's no way of recovering memory you're no longer using.</li>\n<li><code>'static</code> variables are essentially singletons, making it very difficult to write an application that makes multiple independent usages of your library.</li>\n</ul>\n\n<p>I would go with a solution similar to what <a href=\"https://stackoverflow.com/a/59031050/7099148\">@Matthieu M. suggests</a>, but instead of passing the entire data structure back and forth over the interface, allocate it on the heap, unsafely, and then pass some sort of handle (i.e. pointer) back and forth.</p>\n\n<p>You would probably want to write a cleanup function, and document your library to compel users to call the cleanup function when they're done using a particular handle. Effectively, you're explicitly delegating the management of the lifecycle of the data to the calling code.</p>\n\n<p>With this model, if desired, an application could create, use, and cleanup multiple datasets (each represented by their own handle) concurrently and independently. If an application \"forgets\" to cleanup a handle when finished, you have a memory leak, but that's no worse than storing the data in a <code>'static</code> variable.</p>\n\n<p>There may be helper crates and libraries to assist with doing this sort of thing. I'm not familiar enough with rust to know.</p>\n"}], "owner": {"reputation": 3381, "user_id": 220679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a5c165ffc801b46ddff8851d5b49bf3e?s=128&d=identicon&r=PG", "display_name": "Ginty", "link": "https://stackoverflow.com/users/220679/ginty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "accepted_answer_id": 59031050, "answer_count": 2, "score": 3, "last_activity_date": 1574701371, "creation_date": 1574674723, "last_edit_date": 1574679125, "question_id": 59028838, "link": "https://stackoverflow.com/questions/59028838/how-to-implement-long-lived-variables-state-in-a-library", "title": "How to implement long-lived variables/state in a library?", "body": "<p>I understand that the preferred way to implement something like a global/instance/module variable in Rust is to create said variable in <code>main()</code> or other common entry point and then pass it down to whoever needs it.\nIt also seems possible to use a <code>lazy_static</code> for an immutable variable, or it can be combined with a <code>mutex</code> to implement a mutable one.</p>\n\n<p>In my case, I am using Rust to create a .so with bindings to Python and I need to have a large amount of mutable state stored within the Rust library (in response to many different function calls invoked by the Python application).</p>\n\n<p>What is the preferred way to store that state?</p>\n\n<p>Is it only via the mutable <code>lazy_static</code> approach since I have no <code>main()</code> (or more generally, any function which does not terminate between function calls from Python), or is there another way to do it?</p>\n"}, {"tags": ["rust", "rayon"], "comments": [{"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1574674337, "post_id": 59028562, "comment_id": 104301460, "body": "You need to add a constraint stating that <code>C::Result = QueueItem</code>"}, {"owner": {"reputation": 14335, "user_id": 110963, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/096c2c331fa0c946d103e9038930f80e?s=128&d=identicon&r=PG", "display_name": "Achim", "link": "https://stackoverflow.com/users/110963/achim"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1574689597, "post_id": 59028562, "comment_id": 104309916, "body": "Could you add a few more details where and how to do that? I tried it in the where clause, but get an <code>expected trait, found struct </code>QueueItem<code>: not a trait</code> error."}, {"owner": {"reputation": 126, "user_id": 4709888, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PslUe.png?s=128&g=1", "display_name": "dotPoozer", "link": "https://stackoverflow.com/users/4709888/dotpoozer"}, "edited": false, "score": 3, "creation_date": 1574692676, "post_id": 59028562, "comment_id": 104311616, "body": "I know this isn&#39;t exactly what you are asking for, but fastest solution would be using <a href=\"https://docs.rs/rayon/1.2.1/rayon/iter/trait.ParallelBridge.html\" rel=\"nofollow noreferrer\">docs.rs/rayon/1.2.1/rayon/iter/trait.ParallelBridge.html</a>, which turns every Iterator into ParIter."}, {"owner": {"reputation": 14335, "user_id": 110963, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/096c2c331fa0c946d103e9038930f80e?s=128&d=identicon&r=PG", "display_name": "Achim", "link": "https://stackoverflow.com/users/110963/achim"}, "reply_to_user": {"reputation": 126, "user_id": 4709888, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PslUe.png?s=128&g=1", "display_name": "dotPoozer", "link": "https://stackoverflow.com/users/4709888/dotpoozer"}, "edited": false, "score": 0, "creation_date": 1574694969, "post_id": 59028562, "comment_id": 104312849, "body": "@dotPoozer it is not exactly the answer to my question, but the perfect solution for my problem. Thanks!"}], "owner": {"reputation": 14335, "user_id": 110963, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/096c2c331fa0c946d103e9038930f80e?s=128&d=identicon&r=PG", "display_name": "Achim", "link": "https://stackoverflow.com/users/110963/achim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 244, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1574673800, "creation_date": 1574673800, "question_id": 59028562, "link": "https://stackoverflow.com/questions/59028562/implementing-a-rayoniterparalleliterator", "title": "Implementing a rayon::iter::ParallelIterator", "body": "<p>I'm rather new to Rust, but managed to successfully use <a href=\"https://docs.rs/rayon/1.2.1/rayon/index.html\" rel=\"nofollow noreferrer\">Rayon</a> to process data in parallel. At least as long as I'm working on existing data structures and <code>par_iter()</code> works out of the box. Now I have implemented my own <code>struct</code> which also implements <code>Iterator</code>:</p>\n\n<pre><code>struct TaskQueue {\n      // ...\n}\n\nimpl Iterator for TaskQueue {\n    type Item = QueueItem;\n\n    fn next(&amp;mut self) -&gt; Option&lt;QueueItem&gt; {\n         // ...\n    }\n}\n</code></pre>\n\n<p>That code works fine for a plain <code>for item in queue_instance {...}</code> loop. I hoped, that this enough to get Rayon working with my code, but that's not the case. I have to implement a <a href=\"https://docs.rs/rayon/1.2.1/rayon/iter/trait.ParallelIterator.html\" rel=\"nofollow noreferrer\">ParallelIterator</a>. Based on the docs I tried</p>\n\n<pre><code>impl ParallelIterator for TaskQueue {\n    type Item = QueueItem;\n\n    fn drive_unindexed&lt;C&gt;(self, consumer: C) -&gt; C::Result\n        where C: UnindexedConsumer&lt;QueueItem&gt;\n    {\n        self.next().unwrap()\n    }\n}\n</code></pre>\n\n<p>The compiler tells me</p>\n\n<blockquote>\n  <p>expected <code>&lt;C as rayon::iter::plumbing::Consumer&lt;QueueItem&gt;&gt;::Result</code>\n  because of return type</p>\n</blockquote>\n\n<p>with the following hint:</p>\n\n<blockquote>\n  <p>note: expected type <code>&lt;C as rayon::iter::plumbing::Consumer&lt;QueueItem&gt;&gt;::Result</code> found type <code>QueueItem</code></p>\n  \n  <p>note: consider constraining the associated type <code>&lt;C as rayon::iter::plumbing::Consumer&lt;QueueItem&gt;&gt;::Result</code> to <code>QueueItem</code> or calling a method that returns <code>&lt;C as rayon::iter::plumbing::Consumer&lt;QueueItem&gt;&gt;::Result</code></p>\n  \n  <p>note: for more information, visit <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch19-03-advanced-traits.html</a></p>\n</blockquote>\n\n<p>To my understanding <code>::Result</code> should be <code>QueueItem</code> and I could not (yet) make much sense out of the chapter about advanced traits. How do I have to implement the <code>drive_unindexed</code> function to get my code working with Rayon?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 10, "last_activity_date": 1598301108, "last_edit_date": 1598301108, "creation_date": 1574675231, "answer_id": 59028996, "question_id": 59028400, "link": "https://stackoverflow.com/questions/59028400/comparing-every-element-in-a-vector-with-the-next-one/59028996#59028996", "title": "Comparing every element in a vector with the next one", "body": "<p>This can be done in several ways.</p>\n<h2>Using <code>slice::windows</code></h2>\n<p><a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.windows\" rel=\"nofollow noreferrer\"><code>slice::windows</code></a>:</p>\n<blockquote>\n<p>Returns an iterator over all contiguous windows of length size.</p>\n</blockquote>\n<p>In this case, the window size will be <code>2</code> so <code>windows</code> will return an iterator which will mask 2 elements and it will move to the right on every iteration.</p>\n<pre class=\"lang-none prettyprint-override\"><code>initial position : [|0, 5|, 10, 40, 30] // &amp;[0, 5]\nnext position    : [0, |5, 10|, 40, 30] // &amp;[5, 10]\n</code></pre>\n<p>Here is an applied solution to your problem:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let data: Vec&lt;Obj&gt; = vec![Obj { i: 0 }, Obj { i: 1 }, Obj { i: 2 }, Obj { i: 3 }];\n\n    let is_valid = data.windows(2).all(|w| w[0].is_valid_next(&amp;w[1]));\n\n    println!(&quot;Is consecutive -&gt; {:?}&quot;, is_valid); // true\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=18823f458f70bcc6ac6c7986bf797c6a\" rel=\"nofollow noreferrer\">Playground</a></p>\n<p>Please note that direct index access of a slice might cause a <code>panic</code>, but since the produced slice from <code>Windows</code> iterator will be the same size as the argument to <code>windows</code>, it will be fine to access elements directly by index as long as the index is less than the window size.</p>\n<h2>Using <code>Iterator::zip</code></h2>\n<p>You can compare the current element with the next one by using two different iterators of same <code>Vec</code> with <code>std::iter::Zip</code>.</p>\n<p>The iterator elements from the first iterator (<code>data.iter()</code>) will represent the current element. Elements from the second iterator (<code>data.iter().skip(1)</code>) will represent the next element.</p>\n<p>Here is the implementation:</p>\n<pre><code>fn main() {\n    let data: Vec&lt;Obj&gt; = vec![Obj { i: 0 }, Obj { i: 1 }, Obj { i: 2 }];\n\n    let is_valid = data\n        .iter()\n        .zip(data.iter().skip(1))\n        .all(|(current, next)| current.is_valid_next(next));\n\n    println!(&quot;Is consecutive -&gt; {:?}&quot;, is_valid); // true\n}\n</code></pre>\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=33782360231ec8b0a1c3bbcc2916fa30\" rel=\"nofollow noreferrer\">Playground</a></p>\n<p>If you are sure your <code>Vec</code> is not empty, you can use slices to create the iterators: <code>&amp;data[1..]</code> instead of <code>data.iter().skip(1)</code> (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3b40e7a2ddc6a5da3ee7e6619d4f6d96\" rel=\"nofollow noreferrer\">sample</a>). This will panic if you have an empty <code>Vec</code>.</p>\n"}], "owner": {"reputation": 25878, "user_id": 1594933, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c79e2c2fc783083a98e4d515b091edfe?s=128&d=identicon&r=PG", "display_name": "gontard", "link": "https://stackoverflow.com/users/1594933/gontard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 296, "favorite_count": 1, "accepted_answer_id": 59028996, "answer_count": 1, "score": 2, "last_activity_date": 1598301108, "creation_date": 1574673279, "last_edit_date": 1574683486, "question_id": 59028400, "link": "https://stackoverflow.com/questions/59028400/comparing-every-element-in-a-vector-with-the-next-one", "title": "Comparing every element in a vector with the next one", "body": "<p>I want to compare every element of a vector with the next one. I found the following solution but it is not so readable.</p>\n\n<pre><code>struct Obj {\n    i: u32,\n}\n\nimpl Obj {\n    fn is_valid_next(&amp;self, next: &amp;Obj) -&gt; bool {\n        self.i + 1 == next.i\n    }\n}\n\nfn main() {\n    let data: Vec&lt;Obj&gt; = vec![Obj { i: 0 }, Obj { i: 2 }, Obj { i: 2 }];\n    let mut previous: Option&lt;Obj&gt; = None;\n    let mut is_valid = true;\n    for current in data.into_iter() {\n        match previous {\n            Some(p) =&gt; {\n                is_valid = p.is_valid_next(&amp;current);\n                if !is_valid {\n                    break;\n                }\n            }\n            None =&gt; {}\n        }\n        previous = Some(current);\n    }\n    println!(\"is valid {}\", is_valid);\n}\n</code></pre>\n"}, {"tags": ["error-handling", "rust", "flatten"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1592836077, "post_id": 59028327, "comment_id": 110559644, "body": "See also <a href=\"https://stackoverflow.com/q/52453180/155423\">How do I unwrap an arbitrary number of nested Option types?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 1148, "user_id": 11619101, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Pgyla3H7sk4/AAAAAAAAAAI/AAAAAAAAABc/XQ20NuIAEmM/photo.jpg?sz=128", "display_name": "Yuri Kovalenko", "link": "https://stackoverflow.com/users/11619101/yuri-kovalenko"}, "is_accepted": true, "score": 11, "last_activity_date": 1574678582, "last_edit_date": 1574678582, "creation_date": 1574676819, "answer_id": 59029485, "question_id": 59028327, "link": "https://stackoverflow.com/questions/59028327/how-can-i-flatten-nested-results/59029485#59029485", "title": "How can I flatten nested Results?", "body": "<p>This is an example of issue, when you're working with various wrappers like <code>Option</code> in functional programming. In functional programming there are such called 'pure' functions, that instead of changing some state (global variables, out parameters) only rely on input parameters and only return their result as return value without any side effects. It makes programs much more predictable and safe, but it introduced some inconveniences.</p>\n\n<p>Imagine we have <code>let x = Some(2)</code> and some function <code>f(x: i32) -&gt; Option&lt;f32&gt;</code>. When you use <code>map</code> to apply that <code>f</code> to <code>x</code>, you'll get nested <code>Option&lt;Option&lt;f32&gt;&gt;</code>, which is the same issue that you got.</p>\n\n<p>But in the world of functional programming (Rust was inspired with their ideas a lot and supports a lot of typical 'functional' features) they came up with solution: monads.</p>\n\n<p>We can show <code>map</code> a signature like <code>(A&lt;T&gt;, FnOnce(T)-&gt;U) -&gt; A&lt;U&gt;</code> where <code>A</code> is something like wrapper type, such as <code>Option</code> or <code>Result</code>. In FP such types are called functors. But there is an advanced version of it, called a monad. It has, besides the <code>map</code> function, one more similar function in its interface, traditionally called <code>bind</code> with signature like <code>(A&lt;T&gt;, FnOnce(T) -&gt; A&lt;U&gt;) -&gt; A&lt;U&gt;</code>. More details <a href=\"https://stackoverflow.com/questions/44965/what-is-a-monad\">there</a>.</p>\n\n<p>In fact, Rust's <code>Option</code> and <code>Result</code> is not only a functor, but a monad too. That <code>bind</code> in our case is implemented as <a href=\"https://doc.rust-lang.org/std/result/enum.Result.html#method.and_then\" rel=\"noreferrer\"><code>and_then</code></a> method. For example, you could use it in our example like this: <code>x.and_then(f)</code>, and get simple <code>Option&lt;f32&gt;</code> as a result. So instead of a <code>.map</code> chain you could have <code>.and_then</code> chain that will act very similar, but there will be no nested results.</p>\n"}], "owner": {"reputation": 2208, "user_id": 2172752, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c16c7a34114664cf0cd1c5cab0b02e4?s=128&d=identicon&r=PG", "display_name": "MartenCatcher", "link": "https://stackoverflow.com/users/2172752/martencatcher"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2980, "favorite_count": 0, "accepted_answer_id": 59029485, "answer_count": 1, "score": 5, "last_activity_date": 1592836271, "creation_date": 1574673013, "last_edit_date": 1592836271, "question_id": 59028327, "link": "https://stackoverflow.com/questions/59028327/how-can-i-flatten-nested-results", "title": "How can I flatten nested Results?", "body": "<p>I'm working with a third-party library that provides tree-based data structures that I have to use &quot;as is&quot;. The API returns <code>Result&lt;T, Error&gt;</code>. I have to make some sequential calls and convert the error to my  application's internal error.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::error::Error;\nuse std::fmt;\n\npub struct Tree {\n    branches: Vec&lt;Tree&gt;,\n}\n\nimpl Tree {\n    pub fn new(branches: Vec&lt;Tree&gt;) -&gt; Self {\n        Tree { branches }\n    }\n\n    pub fn get_branch(&amp;self, id: usize) -&gt; Result&lt;&amp;Tree, TreeError&gt; {\n        self.branches.get(id).ok_or(TreeError {\n            description: &quot;not found&quot;.to_string(),\n        })\n    }\n}\n\n#[derive(Debug)]\npub struct TreeError {\n    description: String,\n}\n\nimpl Error for TreeError {\n    fn description(&amp;self) -&gt; &amp;str {\n        self.description.as_str()\n    }\n}\n\nimpl fmt::Display for TreeError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        self.description.fmt(f)\n    }\n}\n\n#[derive(Debug)]\npub struct MyAwesomeError {\n    description: String,\n}\n\nimpl MyAwesomeError {\n    pub fn from&lt;T: fmt::Debug&gt;(t: T) -&gt; Self {\n        MyAwesomeError {\n            description: format!(&quot;{:?}&quot;, t),\n        }\n    }\n}\n\nimpl Error for MyAwesomeError {\n    fn description(&amp;self) -&gt; &amp;str {\n        &amp;self.description\n    }\n}\n\nimpl fmt::Display for MyAwesomeError {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        self.description.fmt(f)\n    }\n}\n</code></pre>\n<p>If I write this code:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn take_first_three_times(tree: &amp;Tree) -&gt; Result&lt;&amp;Tree, MyAwesomeError&gt; {\n    let result = tree\n        .get_branch(0)\n        .map(|r| r.get_branch(0))\n        .map(|r| r.map(|r| r.get_branch(0)));\n    //    ...\n}\n</code></pre>\n<p>The type of <code>result</code> will be <code>Result&lt;Result&lt;Result&lt;Tree, TreeError&gt;, TreeError&gt;, TreeError&gt;</code>. I don't want to process errors by cascades of <code>match</code>.</p>\n<p>I can write an internal function that adjusts the API's interface and processes the error in the level of base function:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn take_first_three_times_internal(tree: &amp;Tree) -&gt; Result&lt;&amp;Tree, TreeError&gt; {\n    tree.get_branch(0)?.get_branch(0)?.get_branch(0)\n}\n\npub fn take_first_three_times(tree: &amp;Tree) -&gt; Result&lt;&amp;Tree, MyAwesomeError&gt; {\n    take_first_three_times_internal(tree).map_err(MyAwesomeError::from)\n}\n</code></pre>\n<p>How can I achieve this without an additional function?</p>\n"}, {"tags": ["rust", "closures", "traits", "type-inference", "higher-kinded-types"], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 8, "last_activity_date": 1575016726, "creation_date": 1575016726, "answer_id": 59101369, "question_id": 59023616, "link": "https://stackoverflow.com/questions/59023616/why-isnt-stdmemdrop-exactly-the-same-as-the-closure-in-higher-ranke/59101369#59101369", "title": "Why isn&#39;t `std::mem::drop` exactly the same as the closure |_|() in higher-ranked trait bounds?", "body": "<p>The core of the issue is that <code>drop</code> is not a single function, but rather a parameterized set of functions that each drop some particular type. To satisfy a higher-ranked trait bound (hereafter hrtb), you'd need a <em>single</em> function that can simultaneously take references to a type with any given lifetime.</p>\n\n<hr>\n\n<p>We'll use <code>drop</code> as our typical example of a generic function, but all this applies more generally too. Here's the code for reference: <code>fn drop&lt;T&gt;(_: T) {}</code>.</p>\n\n<p>Conceptually, <code>drop</code> is not a single function, but rather one function for every possible type <code>T</code>. Any particular instance of <code>drop</code> takes only arguments of a single type. This is called <a href=\"https://doc.rust-lang.org/book/ch10-01-syntax.html#performance-of-code-using-generics\" rel=\"noreferrer\">monomorphization</a>. If a different <code>T</code> is used with <code>drop</code>, a different version of <code>drop</code> is compiled. That's why you can't pass a generic function as an argument and use that function in full generality (see <a href=\"https://stackoverflow.com/questions/37606035/pass-generic-function-as-argument\">this question</a>)</p>\n\n<p>On the other hand, a function like <code>fn pass(x: &amp;i32) -&gt; &amp;i32 {x}</code> satisfies the hrtb <code>for&lt;'a&gt; Fn(&amp;'a i32) -&gt; &amp;'a i32</code>. Unlike <code>drop</code>, we have a <em>single</em> function that simultaneously satisfies <code>Fn(&amp;'a i32) -&gt; &amp;'a i32</code> for <em>every</em> lifetime <code>'a</code>. This is reflected in how <code>pass</code> can be used.</p>\n\n<pre><code>fn pass(x: &amp;i32) -&gt; &amp;i32 {\n    x\n}\n\nfn two_uses&lt;F&gt;(f: F)\nwhere\n    for&lt;'a&gt; F: Fn(&amp;'a i32) -&gt; &amp;'a i32, // By the way, this can simply be written\n                                       // F: Fn(&amp;i32) -&gt; &amp;i32 due to lifetime elision rules.\n                                       // That applies to your original example too.\n{\n    {\n        // x has some lifetime 'a\n        let x = &amp;22;\n        println!(\"{}\", f(x));\n        // 'a ends around here\n    }\n    {\n        // y has some lifetime 'b\n        let y = &amp;23;\n        println!(\"{}\", f(y));\n        // 'b ends around here\n    }\n    // 'a and 'b are unrelated since they have no overlap\n}\n\nfn main() {\n    two_uses(pass);\n}\n\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=398fa09ad2856a9af307d3f07f4f063d\" rel=\"noreferrer\">(playground)</a></p>\n\n<p>In the example, the lifetimes <code>'a</code> and <code>'b</code> have no relation to each other: neither completely encompasses the other. So there isn't some kind of subtyping thing going on here. A single instance of <code>pass</code> is really being used with two different, unrelated lifetimes.</p>\n\n<p>This is why <code>drop</code> doesn't satisfy <code>for&lt;'a&gt; FnOnce(&amp;'a T)</code>. Any particular instance of <code>drop</code> can only cover <em>one</em> lifetime (ignoring subtyping). If we passed <code>drop</code> into <code>two_uses</code> from the example above (with slight signature changes and assuming the compiler let us), it would have to choose some particular lifetime <code>'a</code> and the instance of <code>drop</code> in the scope of <code>two_uses</code> would be <code>Fn(&amp;'a i32)</code> for some <em>concrete</em> lifetime <code>'a</code>. Since the function would only apply to single lifetime <code>'a</code>, it wouldn't be possible to use it with two unrelated lifetimes.</p>\n\n<p>So why does the toilet closure get a hrtb? When inferring the type for a closure, if the expected type hints that a higher-ranked trait bound is needed, <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-293646723\" rel=\"noreferrer\">the compiler will try to make one fit</a>. In this case, it succeeds.</p>\n\n<hr>\n\n<p><a href=\"https://github.com/rust-lang/rust/issues/41078\" rel=\"noreferrer\">Issue #41078</a> is closely related to this and in particular, eddyb's comment <a href=\"https://github.com/rust-lang/rust/issues/41078#issuecomment-552062755\" rel=\"noreferrer\">here</a> gives essentially the explanation above (though in the context of closures, rather than ordinary functions). The issue itself doesn't address the present problem though. It instead addresses what happens if you assign the toilet closure to a variable before using it (try it out!).</p>\n\n<p>It's possible that the situation will change in the future, but it would require a pretty big change in how generic functions are monomorphized.</p>\n"}, {"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": false, "score": 5, "last_activity_date": 1575212301, "last_edit_date": 1575212301, "creation_date": 1575200244, "answer_id": 59125121, "question_id": 59023616, "link": "https://stackoverflow.com/questions/59023616/why-isnt-stdmemdrop-exactly-the-same-as-the-closure-in-higher-ranke/59125121#59125121", "title": "Why isn&#39;t `std::mem::drop` exactly the same as the closure |_|() in higher-ranked trait bounds?", "body": "<p>In short, both lines should fail. But since one step in old way of handling hrtb lifetimes, namely <a href=\"https://rust-lang.github.io/rustc-guide/traits/hrtb.html#basic-matching-and-placeholder-leaks\" rel=\"nofollow noreferrer\">the leak check</a>, currently has some soundness issue, <code>rustc</code> ends up (incorrectly) accepting one and leaving the other with a pretty bad error message.</p>\n\n<p>If you disable the leak check with <code>rustc +nightly -Zno-leak-check</code>, you'll be able to see a more sensible error message:</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:10:5\n   |\n10 |     foo(drop, \"drop\");\n   |     ^^^ one type is more general than the other\n   |\n   = note: expected type `std::ops::FnOnce&lt;(&amp;'a &amp;str,)&gt;`\n              found type `std::ops::FnOnce&lt;(&amp;&amp;str,)&gt;`\n</code></pre>\n\n<p>My interpretation of this error is that the <code>&amp;x</code> in the body of the <code>foo</code> function only has a scope lifetime confined to the said body, so <code>f(&amp;x)</code> also has the same scope lifetime which can't possibly satisfy the <code>for&lt;'a&gt;</code> universal quantification required by the trait bound.</p>\n\n<p>The question you present here is almost identical to <a href=\"https://github.com/rust-lang/rust/issues/57642\" rel=\"nofollow noreferrer\">issue #57642</a>, which also has two contrasting parts.</p>\n\n<p>The new way to process hrtb lifetimes is by using so-called <a href=\"https://github.com/rust-lang/rust/blob/master/src/librustc/ty/mod.rs#L1527\" rel=\"nofollow noreferrer\">universes</a>. Niko has a <a href=\"https://github.com/rust-lang/rust/pull/65232\" rel=\"nofollow noreferrer\">WIP</a> to tackle the leak check with universes. Under this new regime, both parts of issue #57642 linked above is said to <a href=\"https://github.com/rust-lang/rust/issues/57642#issuecomment-540012551\" rel=\"nofollow noreferrer\">all fail</a> with far more clear diagnoses. I suppose the compiler should be able to handle your example code correctly by then, too.</p>\n"}], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 496, "favorite_count": 6, "accepted_answer_id": 59101369, "answer_count": 2, "score": 19, "last_activity_date": 1575212301, "creation_date": 1574640017, "question_id": 59023616, "link": "https://stackoverflow.com/questions/59023616/why-isnt-stdmemdrop-exactly-the-same-as-the-closure-in-higher-ranke", "title": "Why isn&#39;t `std::mem::drop` exactly the same as the closure |_|() in higher-ranked trait bounds?", "body": "<p>The implementation of <a href=\"https://doc.rust-lang.org/std/mem/fn.drop.html\" rel=\"noreferrer\"><code>std::mem::drop</code></a> is documented to be the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn drop&lt;T&gt;(_x: T) { }\n</code></pre>\n\n<p>As such, I would expect the closure <code>|_| ()</code> (colloquially known as the <a href=\"https://enet4.github.io/rust-tropes/#toilet-closure\" rel=\"noreferrer\">toilet closure</a>) to be a potential 1:1 replacement to <code>drop</code>, in both directions. However, the code below shows that <code>drop</code> isn't compatible with a higher ranked trait bound on the function's parameter, whereas the toilet closure is.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo&lt;F, T&gt;(f: F, x: T)\nwhere\n    for&lt;'a&gt; F: FnOnce(&amp;'a T),\n{\n    dbg!(f(&amp;x));\n}\n\nfn main() {\n    foo(|_| (), \"toilet closure\"); // this compiles\n    foo(drop, \"drop\"); // this does not!\n}\n</code></pre>\n\n<p>The compiler's error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0631]: type mismatch in function arguments\n  --&gt; src/main.rs:10:5\n   |\n1  | fn foo&lt;F, T&gt;(f: F, x: T)\n   |    ---\n2  | where\n3  |     for&lt;'a&gt; F: FnOnce(&amp;'a T),\n   |                ------------- required by this bound in `foo`\n...\n10 |     foo(drop, \"drop\"); // this does not!\n   |     ^^^\n   |     |\n   |     expected signature of `for&lt;'a&gt; fn(&amp;'a _) -&gt; _`\n   |     found signature of `fn(_) -&gt; _`\n\nerror[E0271]: type mismatch resolving `for&lt;'a&gt; &lt;fn(_) {std::mem::drop::&lt;_&gt;} as std::ops::FnOnce&lt;(&amp;'a _,)&gt;&gt;::Output == ()`\n  --&gt; src/main.rs:10:5\n   |\n1  | fn foo&lt;F, T&gt;(f: F, x: T)\n   |    ---\n2  | where\n3  |     for&lt;'a&gt; F: FnOnce(&amp;'a T),\n   |                ------------- required by this bound in `foo`\n...\n10 |     foo(drop, \"drop\"); // this does not!\n   |     ^^^ expected bound lifetime parameter 'a, found concrete lifetime\n</code></pre>\n\n<p>Considering that <code>drop</code> is supposedly generic with respect to any sized <code>T</code>, it sounds unreasonable that the \"more generic\" signature <code>fn(_) -&gt; _</code> is not compatible with <code>for&lt;'a&gt; fn (&amp;'a _) -&gt; _</code>. Why is the compiler not admitting the signature of <code>drop</code> here, and what makes it different when the toilet closure is placed in its stead?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 2, "creation_date": 1574667281, "post_id": 59023737, "comment_id": 104298490, "body": "Great answer! Regarding primitive types: there are only a handful generic primitive types: <code>&amp;T</code>, <code>&amp;mut T</code>, <code>*const T</code>, <code>*mut T</code>, <code>[T; N]</code>, <code>[T]</code>, <code>fn</code> pointer and tuples. And <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9457ce9fba4a1de04b837e961201c65e\" rel=\"nofollow noreferrer\">testing them all</a> (please tell me if this code does not make sense) <b>it seems that references are the only fundamental primitive types</b>. Interesting. I would be interested in knowing the reasoning why the others are not, especially raw pointers. But that&#39;s not the scope of this question, I guess."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 1, "creation_date": 1574669322, "post_id": 59023737, "comment_id": 104299222, "body": "@LukasKalbertodt Thanks for the information on primitive types. I&#39;ve added in your tests. As for the rationale about references vs pointers, check out <a href=\"https://github.com/rust-lang/rfcs/pull/1023#discussion-diff-27353727\" rel=\"nofollow noreferrer\">this comment</a> in the RFC pull request."}, {"owner": {"reputation": 1421, "user_id": 412478, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e799a79441c7543be48562403411cd13?s=128&d=identicon&r=PG", "display_name": "Havvy", "link": "https://stackoverflow.com/users/412478/havvy"}, "edited": false, "score": 0, "creation_date": 1574993502, "post_id": 59023737, "comment_id": 104429132, "body": "The reference doesn&#39;t document unstable attributes, so that&#39;s why you didn&#39;t find it there."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 36, "last_activity_date": 1574669325, "last_edit_date": 1574669325, "creation_date": 1574641247, "answer_id": 59023737, "question_id": 59022263, "link": "https://stackoverflow.com/questions/59022263/what-is-a-fundamental-type-in-rust/59023737#59023737", "title": "What is a &quot;fundamental type&quot; in Rust?", "body": "<p>Normally, if a library has a generic type <code>Foo&lt;T&gt;</code>, downstream crates can't implement traits on it, even if <code>T</code> is some local type. For example,</p>\n\n<p>(<code>crate_a</code>)</p>\n\n<pre><code>struct Foo&lt;T&gt;(pub t: T)\n</code></pre>\n\n<p>(<code>crate_b</code>)</p>\n\n<pre><code>use crate_a::Foo;\n\nstruct Bar;\n\n// This causes an error\nimpl Clone for Foo&lt;Bar&gt; {\n    fn clone(&amp;self) -&gt; Self {\n        Foo(Bar)\n    }\n}\n</code></pre>\n\n<p>For a concrete example that works on the playground (that is, gives an error),</p>\n\n<pre><code>use std::rc::Rc;\n\nstruct Bar;\n\n// This causes an error\n// error[E0117]: only traits defined in the current crate\n// can be implemented for arbitrary types\nimpl Default for Rc&lt;Bar&gt; {\n    fn default() -&gt; Self {\n        Rc::new(Bar)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=140c6a56a4b28c0881d31170df4c4f22\" rel=\"noreferrer\">(playground)</a></p>\n\n<hr>\n\n<p>This normally enables the crate author to add (blanket) implementations of traits without breaking downstream crates. That's great in cases where it isn't initially certain that a type should implement a particular trait, but it later becomes clear that it should. For example, we might have some sort of numeric type that initially doesn't implement the traits from <code>num-traits</code>. Those traits could be added in later without needing a breaking change.</p>\n\n<p>However, in some cases, the library author wants downstream crates to be able to implement traits themselves. This is where the <code>#[fundamental]</code> attribute comes in. When placed on a type, any trait not currently implemented for that type won't be implemented (barring a breaking change). As a result, downstream crates can implement traits for that type as long as a type parameter is local (there are some complicated rules for deciding which type parameters count for this). Since the fundamental type won't implement a given trait, that trait can freely be implemented without causing coherence issues.</p>\n\n<p>For example, <code>Box&lt;T&gt;</code> is marked <code>#[fundamental]</code>, so the following code (similar to the <code>Rc&lt;T&gt;</code> version above) works. <code>Box&lt;T&gt;</code> doesn't implement <code>Default</code> (unless <code>T</code> implements <code>Default</code>) so we can assume that it won't in the future because <code>Box&lt;T&gt;</code> is fundamental. Note that implementing <code>Default</code> for <code>Bar</code> would cause problems, since then <code>Box&lt;Bar&gt;</code> already implements <code>Default</code>.</p>\n\n<pre><code>struct Bar;\n\nimpl Default for Box&lt;Bar&gt; {\n    fn default() -&gt; Self {\n        Box::new(Bar)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ed445f469ffa0de027161fb6adfacae6\" rel=\"noreferrer\">(playground)</a></p>\n\n<hr>\n\n<p>On the other hand, traits can also be marked with <code>#[fundamental]</code>. This has a dual meaning to fundamental types. If any type doesn't currently implement a fundamental trait, it can be assumed that that type won't implement it in the future (again, barring a breaking change). I'm not exactly sure how this is used in practice. In the code (linked below), <code>FnMut</code> is marked fundamental with the note that it's needed for regex (something about <code>&amp;str: !FnMut</code>). I couldn't find where it's used in the <code>regex</code> crate or if it's used elsewhere.</p>\n\n<p>In theory, if the <code>Add</code> trait were marked fundamental (which has been discussed) this could be used to implement addition between things that don't already have it. For example, adding <code>[MyNumericType; 3]</code> (pointwise), which could be useful in certain situations (of course, making <code>[T; N]</code> fundamental would also allow this).</p>\n\n<hr>\n\n<p>The primitive fundamental types are <code>&amp;T</code>, <code>&amp;mut T</code> (see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=88fca9d19e4d55db4362d948e780d58c\" rel=\"noreferrer\">here</a> for a demonstration of all the generic primitive types). In the standard library, <a href=\"https://github.com/rust-lang/rust/blob/9578272d681c8691ca2ff3f5c4230b491bc1c694/src/liballoc/boxed.rs#L104\" rel=\"noreferrer\"><code>Box&lt;T&gt;</code></a> and <a href=\"https://github.com/rust-lang/rust/blob/e8f43b72eb2596f360004f6cdf9cdde4b9e789e1/src/libcore/pin.rs#L398\" rel=\"noreferrer\"><code>Pin&lt;T&gt;</code></a> are also marked as fundamental.</p>\n\n<p>The fundamental traits in the standard library are <a href=\"https://github.com/rust-lang/rust/blob/35ef33a89dfd8ff8c8a7b3c58fa7136bbcb2f1ed/src/libcore/marker.rs#L91\" rel=\"noreferrer\"><code>Sized</code></a>, <a href=\"https://github.com/rust-lang/rust/blob/361791bb5fdd714bdc39f8af835f6468dd18331d/src/libcore/ops/function.rs#L64\" rel=\"noreferrer\"><code>Fn&lt;T&gt;</code></a>, <a href=\"https://github.com/rust-lang/rust/blob/361791bb5fdd714bdc39f8af835f6468dd18331d/src/libcore/ops/function.rs#L143\" rel=\"noreferrer\"><code>FnMut&lt;T&gt;</code></a>, <a href=\"https://github.com/rust-lang/rust/blob/361791bb5fdd714bdc39f8af835f6468dd18331d/src/libcore/ops/function.rs#L214\" rel=\"noreferrer\"><code>FnOnce&lt;T&gt;</code></a> and <a href=\"https://github.com/rust-lang/rust/blob/9ebf47851a357faa4cd97f4b1dc7835f6376e639/src/libcore/ops/generator.rs#L69\" rel=\"noreferrer\"><code>Generator</code></a>.</p>\n\n<hr>\n\n<p>Note that the <code>#[fundamental]</code> attribute is currently unstable. The tracking issue is <a href=\"https://github.com/rust-lang/rust/issues/29635\" rel=\"noreferrer\">issue #29635</a>.</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2729, "favorite_count": 5, "accepted_answer_id": 59023737, "answer_count": 1, "score": 39, "last_activity_date": 1574669325, "creation_date": 1574628557, "question_id": 59022263, "link": "https://stackoverflow.com/questions/59022263/what-is-a-fundamental-type-in-rust", "title": "What is a &quot;fundamental type&quot; in Rust?", "body": "<p>Somewhere I picked up the term \"fundamental type\" (and its attribute <code>#[fundamental]</code>) and just now I wanted to learn more about it. I vaguely remember it being about relaxing the coherence rules in some situations. And I think the reference types are such fundamental types.</p>\n\n<p>Unfortunately, searching the web didn't bring me very far. The Rust reference does not mention it (as far as I can see). I just found <a href=\"https://github.com/rust-lang/rust/issues/31682\" rel=\"noreferrer\">an issue about making tuples fundamental types</a> and <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\" rel=\"noreferrer\">the RFC that introduced the attribute</a>. However, the RFC has a single paragraph about fundamental types:</p>\n\n<blockquote>\n  <ul>\n  <li>A <code>#[fundamental]</code> type <code>Foo</code> is one where implementing a blanket\n  impl over <code>Foo</code> is a breaking change. As described, <code>&amp;</code> and <code>&amp;mut</code> are\n  fundamental. This attribute would be applied to <code>Box</code>, making <code>Box</code>\n  behave the same as <code>&amp;</code> and <code>&amp;mut</code> with respect to coherence.</li>\n  </ul>\n</blockquote>\n\n<p>I find the wording fairly hard to understand and it feels like I need in-depth knowledge of the full RFC to understand this bit about fundamental types. I was hoping someone could explain fundamental types in somewhat simpler terms (without simplifying too much, of course). This question would also serve as an easy-to-find piece of knowledge.</p>\n\n<p>To understand fundamental types, I'd like to answer these questions (in addition to the main \"what are they even?\" question, of course):</p>\n\n<ul>\n<li>Can fundamental types do more than non-fundamental ones?</li>\n<li>Can I, as a library author, benefit in some way from marking some of my types as <code>#[fundamental]</code>?</li>\n<li>Which types from the core language or standard library are fundamental?</li>\n</ul>\n"}, {"tags": ["reference", "rust", "lifetime", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 37, "user_id": 12425876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72a38c44e0d8f2523848022827b2de0d?s=128&d=identicon&r=PG&f=1", "display_name": "orhun", "link": "https://stackoverflow.com/users/12425876/orhun"}, "edited": false, "score": 0, "creation_date": 1574631986, "post_id": 59022650, "comment_id": 104290552, "body": "I&#39;ve added other parts of the code. This snippet works well but I think the BufReader (<code>.lines()</code>) is the problem."}], "tags": [], "owner": {"reputation": 24, "user_id": 8736487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff8bfb5b5948eb801339f4b1b9a5c623?s=128&d=identicon&r=PG&f=1", "display_name": "Fazer", "link": "https://stackoverflow.com/users/8736487/fazer"}, "is_accepted": false, "score": -1, "last_activity_date": 1574631260, "creation_date": 1574631260, "answer_id": 59022650, "question_id": 59022234, "link": "https://stackoverflow.com/questions/59022234/borrowed-value-does-not-live-long-enough-in-loop/59022650#59022650", "title": "borrowed value does not live long enough in loop", "body": "<p>It would be better if more code was provided, but I tried to reproduce it and arrived at this working snippet:</p>\n\n<pre><code>type Error = i32;\n\nstruct Reader\n{\n    lines: Vec&lt;Result&lt;String, Error&gt;&gt;\n}\n\nimpl Reader\n{\n    pub fn new() -&gt; Self\n    {\n        Self{lines: vec![Ok(\"foo\".into()), Ok(\"bar\".into())]}\n    }\n\n    pub fn lines(&amp;self) -&gt; &amp;[Result&lt;String, Error&gt;]\n    {\n        &amp;self.lines\n    }\n}\n\nfn main() {\n    let reader = Reader::new();\n    let mut main_vector: Vec&lt;Vec&lt;&amp;str&gt;&gt; = Vec::new();\n    for line in reader.lines() {\n        match line {\n            Ok(v) =&gt; {\n                let mut sub_vector: Vec&lt;&amp;str&gt; = Vec::new();\n                for element in v.split_whitespace().collect::&lt;Vec&lt;&amp;str&gt;&gt;() {\n                    sub_vector.push(element);\n                }\n                main_vector.push(sub_vector);\n            },\n            Err(e) =&gt; panic!(\"failed to parse: {:?}\", e),\n        }\n    }\n}\n</code></pre>\n\n<p>You can check it on Rust Playground here <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f2785fcad682b9dd1f5ed61c7e0308d8\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f2785fcad682b9dd1f5ed61c7e0308d8</a></p>\n"}, {"comments": [{"owner": {"reputation": 37, "user_id": 12425876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72a38c44e0d8f2523848022827b2de0d?s=128&d=identicon&r=PG&f=1", "display_name": "orhun", "link": "https://stackoverflow.com/users/12425876/orhun"}, "edited": false, "score": 0, "creation_date": 1574633278, "post_id": 59022835, "comment_id": 104290849, "body": "It&#39;s solved by using <code>Vec&lt;Vec&lt;String&gt;&gt;</code> instead of <code>Vec&lt;Vec&lt;&amp;str&gt;&gt;</code>. Thank you!"}], "tags": [], "owner": {"reputation": 920, "user_id": 6677437, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fdfe2432cdce6e35079355784c05993c?s=128&d=identicon&r=PG&f=1", "display_name": "asky", "link": "https://stackoverflow.com/users/6677437/asky"}, "is_accepted": true, "score": 3, "last_activity_date": 1574632655, "creation_date": 1574632655, "answer_id": 59022835, "question_id": 59022234, "link": "https://stackoverflow.com/questions/59022234/borrowed-value-does-not-live-long-enough-in-loop/59022835#59022835", "title": "borrowed value does not live long enough in loop", "body": "<p>This question is similar to <a href=\"https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str\">Return local String as a slice (&amp;str)</a>. And the easiest solution is the same as in that question - <strong>use String, not &amp;str</strong>.\nThese questions are different as that answer specifically talks about returning from a function, and you have no function listed.</p>\n\n<p>To address why lifetimes make your code fail, try a simpler example</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut v:Vec&lt;&amp;str&gt; = Vec::new();\n    {\n        let chars = [b'x', b'y', b'z'];\n        let s:&amp;str = std::str::from_utf8(&amp;chars).unwrap();\n        v.push(&amp;s);\n     }\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>and compiler output</p>\n\n<pre><code>\nlet s:&amp;str = std::str::from_utf8(&amp;chars).unwrap();\n                                 ^^^^^^ borrowed value does not live long enough\n</code></pre>\n\n<p>The reason this doesn't work is exactly what the compiler says. <code>chars</code> is created inside the block, so it gets a lifetime associated with that block, and when your program exits that block, chars might not exist anymore. Anything that referred to <code>chars</code> might have a dangling pointer. Rust avoids dangling pointers by making this illegal. In my example it seems silly that Rust doesn't allow this, but in yours it makes sense - Rust can keep the stack small by deleting the old <code>str</code>s from <code>v.split_whitespace().collect::&lt;Vec&lt;&amp;str&gt;&gt;()</code> every time through the loop.</p>\n"}], "owner": {"reputation": 37, "user_id": 12425876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72a38c44e0d8f2523848022827b2de0d?s=128&d=identicon&r=PG&f=1", "display_name": "orhun", "link": "https://stackoverflow.com/users/12425876/orhun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1450, "favorite_count": 0, "accepted_answer_id": 59022835, "answer_count": 2, "score": 3, "last_activity_date": 1574632655, "creation_date": 1574628342, "last_edit_date": 1574631911, "question_id": 59022234, "link": "https://stackoverflow.com/questions/59022234/borrowed-value-does-not-live-long-enough-in-loop", "title": "borrowed value does not live long enough in loop", "body": "<p>I'm trying to parse a file and return <code>Vec&lt;Vec&lt;&amp;str&gt;&gt;</code> from a function. But I'm getting borrowed value error inside the file read loop while pushing to the vector.</p>\n\n<pre><code>use std::io::{self, BufReader, prelude::*};\nuse std::fs::File;\n\nfn read() -&gt; Vec&lt;Vec&lt;&amp;'static str&gt;&gt; {\n let file = File::open(\"~/test\").expect(\"failed to read file\");\n let reader = BufReader::new(file);\n let mut main_vector: Vec&lt;Vec&lt;&amp;str&gt;&gt; = Vec::new();\n    for line in reader.lines() {\n        match line {\n            Ok(v) =&gt; {\n                let mut sub_vector: Vec&lt;&amp;str&gt; = Vec::new();\n                for element in v.split_whitespace().collect::&lt;Vec&lt;&amp;str&gt;&gt;() {\n                    sub_vector.push(element);\n                }\n                main_vector.push(sub_vector);\n            },\n            Err(e) =&gt; panic!(\"failed to parse: {:?}\", e),\n        }\n    }\n    //return main_vector;\n}\n</code></pre>\n\n<p>Here's the compiler error:</p>\n\n<pre><code>error[E0597]: `v` does not live long enough\n  --&gt; src/main.rs:67:32\n   |\n67 |                 for element in v.split_whitespace().collect::&lt;Vec&lt;&amp;str&gt;&gt;() {\n   |                                ^ borrowed value does not live long enough\n...\n70 |                 main_vector.push(sub_vector);\n   |                 -------------- borrow later used here\n71 |             },\n   |              - `v` dropped here while still borrowed\n</code></pre>\n\n<p>I think it's about the references and borrowing but still I'm having hard time to figure this out.</p>\n"}, {"tags": ["generics", "vector", "rust"], "answers": [{"comments": [{"owner": {"reputation": 747, "user_id": 1125462, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d1cafe6ebc788e6fb9da2b6622e214c0?s=128&d=identicon&r=PG", "display_name": "Chklang", "link": "https://stackoverflow.com/users/1125462/chklang"}, "edited": false, "score": 0, "creation_date": 1574725716, "post_id": 59021580, "comment_id": 104325751, "body": "Thanks for your explanation. I suspected that a thing in this way. Tomorrow i will try it. I havn&#39;t done any language with memory manipulations since some years, i need to work on it! :)"}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": false, "score": 0, "last_activity_date": 1574623952, "creation_date": 1574623952, "answer_id": 59021580, "question_id": 59021265, "link": "https://stackoverflow.com/questions/59021265/rust-generic-of-generic-type-into-vec/59021580#59021580", "title": "Rust - Generic of generic type into vec", "body": "<p>First to focus on the core problem: To have a <code>Vec</code> of heterogenous objects, you must use dynamic dispatch, for example the <code>Box&lt;dyn ...&gt;</code>, which you already used successfully. But then inside you need another dynamic dispatch and this one is not possible. The <code>Box&lt;dyn ...&gt;</code> will end up being a \"fat pointer\" - one pointer pointing to the data, other pointer pointing to a virtual table for that type. <a href=\"https://en.wikipedia.org/wiki/Virtual_method_table\" rel=\"nofollow noreferrer\">Virtual table</a> is generated by the compiler and contains pointer to implementation of every method the type has. And here comes the problem, look at the <code>Serialize</code> trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait Serialize {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where S: Serializer;\n}\n</code></pre>\n\n<p>It has one method <code>serialize</code>, but this method is generic over <code>Serializer</code>. So really there is not one method, but <em>\"infinite\"</em> amount of methods, one for each possible <code>Serializer</code>. The compiler is not able to make virtual table for that, so <code>Serializer</code> can not be made into an (trait) object.</p>\n\n<p>I would suggest you to define your own trait that describes what you want to do with <code>Config</code> and is <a href=\"https://stackoverflow.com/questions/44096235/understanding-traits-and-object-safety\">object safe</a>. Perhaps methods for saving and loading with a specific <code>Serializer</code>, <code>toml</code> for example?</p>\n"}], "owner": {"reputation": 747, "user_id": 1125462, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d1cafe6ebc788e6fb9da2b6622e214c0?s=128&d=identicon&r=PG", "display_name": "Chklang", "link": "https://stackoverflow.com/users/1125462/chklang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 151, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1574641788, "creation_date": 1574621786, "last_edit_date": 1574641788, "question_id": 59021265, "link": "https://stackoverflow.com/questions/59021265/rust-generic-of-generic-type-into-vec", "title": "Rust - Generic of generic type into vec", "body": "<p>I need to create a Vec like this code :</p>\n\n<pre><code>use serde::{Serialize, Deserialize};\ntrait TPlugin&lt;'a, Config&gt; where Config : Serialize + Deserialize&lt;'a&gt; {}\n\n#[derive(Serialize, Deserialize)]\nstruct MyConfig {}\n\nstruct MyPlugin1 {\n  conf: MyConfig,\n}\nimpl TPlugin&lt;MyConfig&gt; for MyPlugin1 {}\nimpl MyPlugin1 {\n  pub fn new() -&gt; MyConfig1 {\n    MyConfig1{}\n  }\n}\n\nfn main() {\n  let my_vec: Vec&lt;Box&lt;dyn TPlugin&lt;????&gt;&gt;&gt; = Vec::new();\n  my_vec.push(MyConfig1::new());\n  my_vec.push(MyConfig2::new());\n}\n</code></pre>\n\n<p>What is the code that I must add instead of \"????\"? I've tried <code>Box&lt;dyn Serialize + Deserialize&lt;'a&gt;&gt;</code> but rust tells me \"the trait <code>serde::Serialize</code> cannot be made into an object\".</p>\n\n<p>I'm newbie on rust, so generics are obscure for me, like lifetimes. I'm from Java/Typescript.\nIn Java/Typescript I write:</p>\n\n<pre><code>let myVec: Vec&lt;TPlugin&lt;?&gt;&gt;;\n</code></pre>\n\n<p>Regards.</p>\n"}, {"tags": ["random", "rust", "random-seed", "rust-crates"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574618998, "post_id": 59020767, "comment_id": 104287096, "body": "why the generated number should be the same even with the same &quot;seed&quot;, Rust have its own implementation, java too."}], "answers": [{"tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 6, "last_activity_date": 1574622166, "last_edit_date": 1574622166, "creation_date": 1574621809, "answer_id": 59021270, "question_id": 59020767, "link": "https://stackoverflow.com/questions/59020767/how-can-i-input-an-integer-seed-for-producing-random-numbers-using-the-rand-crat/59021270#59021270", "title": "How can I input an integer seed for producing random numbers using the rand crate in Rust?", "body": "<p>Check this function out: <a href=\"https://rust-random.github.io/rand/rand/trait.SeedableRng.html#method.seed_from_u64\" rel=\"noreferrer\"><code>StdRng::seed_from_u64</code></a></p>\n\n<p>It comes from the <code>SeedableRng</code> trait, which <code>StdRng</code> implements.</p>\n\n<p>For example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut r = StdRng::seed_from_u64(42);\n</code></pre>\n\n<p>Note that this will give you reproducible random numbers as long as you use the same build on the same platform, but the internal implementation of the <code>StdRng</code> is not guaranteed to stay the same between platforms and versions of the library! If reproducibility between platforms and builds is important for you, then look at crates such as <code>rand_chacha</code>, <code>rand_pcg</code>, <code>rand_xoshiro</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 420, "user_id": 9300379, "user_type": "registered", "profile_image": "https://graph.facebook.com/10213319949658135/picture?type=large", "display_name": "German Faller", "link": "https://stackoverflow.com/users/9300379/german-faller"}, "is_accepted": false, "score": 3, "last_activity_date": 1607085709, "creation_date": 1607085709, "answer_id": 65143769, "question_id": 59020767, "link": "https://stackoverflow.com/questions/59020767/how-can-i-input-an-integer-seed-for-producing-random-numbers-using-the-rand-crat/65143769#65143769", "title": "How can I input an integer seed for producing random numbers using the rand crate in Rust?", "body": "<p>I will share my own answer because I had to search a little more to achieve my goal.</p>\n<p><strong>Cargo.toml</strong></p>\n<pre><code>[dependencies]\nrand = &quot;0.7.3&quot;\nrand_distr = &quot;0.3.0&quot;\n</code></pre>\n<p><strong>Code:</strong></p>\n<pre class=\"lang-rust prettyprint-override\"><code>use rand_distr::{Normal, Distribution};\nuse rand::{Rng,SeedableRng};\nuse rand::rngs::StdRng;\n\nfn main() {\n\n    let mut r = StdRng::seed_from_u64(222); // &lt;- Here we set the seed\n    let normal = Normal::new(15.0, 5.0).unwrap(); //&lt;- I needed Normal Standard distribution\n\n    let v1 = normal.sample(&amp;mut r); // &lt;- Here we use the generator\n    let v2 = normal.sample(&amp;mut r);\n    let n1: u8 = r.gen();   // &lt;- Here we use the generator as uniform distribution\n    let n2: u16 = r.gen();\n    println!(&quot;Normal Sample1: {}&quot;, v1);\n    println!(&quot;Normal Sample2: {}&quot;, v2);\n    println!(&quot;Random u8: {}&quot;, n1);\n    println!(&quot;Random u16: {}&quot;, n2);\n}\n</code></pre>\n<p><strong>My Output:</strong></p>\n<pre><code>Normal Sample1: 12.75371699717887\nNormal Sample2: 10.82577389791956\nRandom u8: 194\nRandom u16: 7290\n</code></pre>\n<p>As <a href=\"https://stackoverflow.com/users/2992101/michalsrb\">michaelsrb</a> mentioned on his <a href=\"https://stackoverflow.com/a/59021270/9300379\">answer</a>\nPlease note that this will guarantee the same values on different runs on your (build - Platform), the same seed used in a two months later version, could give different values.</p>\n"}], "owner": {"reputation": 173, "user_id": 11563930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b2915bed2736d7574ebdc5d09fc81364?s=128&d=identicon&r=PG&f=1", "display_name": "Katharina", "link": "https://stackoverflow.com/users/11563930/katharina"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1373, "favorite_count": 0, "accepted_answer_id": 59021270, "answer_count": 2, "score": 6, "last_activity_date": 1607085709, "creation_date": 1574618507, "last_edit_date": 1574618837, "question_id": 59020767, "link": "https://stackoverflow.com/questions/59020767/how-can-i-input-an-integer-seed-for-producing-random-numbers-using-the-rand-crat", "title": "How can I input an integer seed for producing random numbers using the rand crate in Rust?", "body": "<p>In a Rust project, I want to generate <strong>reproducible</strong> random numbers based on a integer seed as I'm used to in Java.</p>\n\n<p>The documentation for <code>Seed</code> in the <code>rand</code> crate states:</p>\n\n<blockquote>\n  <p>Seed type, which is restricted to types mutably-dereferencable as u8 arrays (we recommend [u8; N] for some N).</p>\n</blockquote>\n\n<p>Does this mean an integer seed is not possible? If it is possible, how can I use <code>StdRng</code> with an integral seed?</p>\n"}, {"tags": ["rust", "rust-actix"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574617828, "post_id": 59020097, "comment_id": 104286734, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/52001592/why-can-impl-trait-not-be-used-to-return-multiple-conditional-types\">Why can impl trait not be used to return multiple / conditional types?</a>"}, {"owner": {"reputation": 12061, "user_id": 87191, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5a32c1cfc71ebf97967c5d6fd2cf2cf2?s=128&d=identicon&r=PG", "display_name": "simao", "link": "https://stackoverflow.com/users/87191/simao"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574619787, "post_id": 59020097, "comment_id": 104287318, "body": "No, not really. impl Future is imposed on me by actix?"}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1574659398, "post_id": 59020097, "comment_id": 104295944, "body": "The actix-web book <a href=\"https://actix.rs/docs/handlers/\" rel=\"nofollow noreferrer\">handlers chapter</a> <i>Different return types (Either)</i> section might be of help for you. But without a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, one can never be certain."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574678925, "post_id": 59020097, "comment_id": 104304105, "body": "to be honest this is a bad question so downvoting is here to says this is a bad question. The duplicate is perfect, if you can&#39;t change your return type so the answer of shepmaster is for you."}, {"owner": {"reputation": 12061, "user_id": 87191, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5a32c1cfc71ebf97967c5d6fd2cf2cf2?s=128&d=identicon&r=PG", "display_name": "simao", "link": "https://stackoverflow.com/users/87191/simao"}, "edited": false, "score": 0, "creation_date": 1574681882, "post_id": 59020097, "comment_id": 104305653, "body": "Can you explain how this is a bad question?"}, {"owner": {"reputation": 12061, "user_id": 87191, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5a32c1cfc71ebf97967c5d6fd2cf2cf2?s=128&d=identicon&r=PG", "display_name": "simao", "link": "https://stackoverflow.com/users/87191/simao"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1574683576, "post_id": 59020097, "comment_id": 104306643, "body": "@edwardw Yeah that works, thanks a lot I didn&#39;t see that in the docs."}], "owner": {"reputation": 12061, "user_id": 87191, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/5a32c1cfc71ebf97967c5d6fd2cf2cf2?s=128&d=identicon&r=PG", "display_name": "simao", "link": "https://stackoverflow.com/users/87191/simao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1574668969, "creation_date": 1574614334, "last_edit_date": 1574668969, "question_id": 59020097, "link": "https://stackoverflow.com/questions/59020097/unifying-futuresfuturemapmap-and-futuresfutureresult-futureresult", "title": "unifying futures::future::map::Map and futures::future::result_::FutureResult", "body": "<p>I am using the following actix handler:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn callback(info: web::Query&lt;CallbackInfo&gt;, session: Session) -&gt; impl Future&lt;Item = HttpResponse, Error = actix_web::Error&gt;\n</code></pre>\n\n<p>Inside this function I do some branching and sometimes I return:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>web::block(|| Result::&lt;Backup, String&gt;::Ok(run_backup(token_info)))\n    .from_err()\n    .map(|backup| HttpResponse::Ok().json(backup))\n</code></pre>\n\n<p>other times I return:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let r = HttpResponse::Found()\n    .set_header(http::header::LOCATION, \"/\")\n    .finish();\nfutures::future::ok(r)\n</code></pre>\n\n<p>Which fails to compile with</p>\n\n<pre><code>expected struct `futures::future::map::Map`, found struct `futures::future::result_::FutureResult`\n</code></pre>\n\n<p>Which I think I understand, even though it's weird that <code>.map</code> doesn't return another future. But how can I unify these two times so I can use them as return types?</p>\n\n<p>Update:\nIt has been suggested this is a duplicate of: <a href=\"https://stackoverflow.com/questions/52001592/why-can-impl-trait-not-be-used-to-return-multiple-conditional-types\">Why can impl trait not be used to return multiple / conditional types?</a> But that question does not solve this problem, it only describes why this occurs. I see that the problem is with <code>impl Future</code>, but I cannot change this as I am using actix-web, which requires this signature, or a similar signature that I am not able to find out, hence why I ask this question.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "edited": false, "score": 0, "creation_date": 1574607233, "post_id": 59018900, "comment_id": 104283802, "body": "I see. To me it&#39;s a bit weird that immutable by reference is not the default here(or actually with any parameter)"}, {"owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "edited": false, "score": 0, "creation_date": 1574607476, "post_id": 59018900, "comment_id": 104283866, "body": "I&#39;m kind of phrasing it wrong; it&#39;s not really a default. But the easiest thing to write is just <code>self</code>, which is according to the documentation something that is very rare. I would expect things that are rare to be more difficult to write compared to things that are generally used (<code>&amp;self</code>)."}, {"owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "edited": false, "score": 0, "creation_date": 1574607592, "post_id": 59018900, "comment_id": 104283901, "body": "Unless the compiler warns when you are passing by value where a reference would be sufficient. I&#39;m kind of scared that I will miss the ampersant in some occasions, making everything a lot less efficient."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "edited": false, "score": 1, "creation_date": 1574607797, "post_id": 59018900, "comment_id": 104283968, "body": "This really applies just as much to non-<code>self</code> arguments (as you mention in the beginning)."}, {"owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "edited": false, "score": 0, "creation_date": 1574607903, "post_id": 59018900, "comment_id": 104283997, "body": "Yeah I agree. It&#39;s not really part of the question I guess, just something I find weird."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "edited": false, "score": 1, "creation_date": 1574608447, "post_id": 59018900, "comment_id": 104284175, "body": "I&#39;ve just noticed that I omitted the answer to the last part of your question initially, added it."}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1574618427, "post_id": 59018900, "comment_id": 104286904, "body": "If you forget the ampersand by accident, you will know. The compiler will give you error if you try to use the object after calling such method. Unless the object is <code>Copy</code>, in which case passing it by value is cheap anyway."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1574621008, "post_id": 59018900, "comment_id": 104287659, "body": "@michalsrb But it can potentially be a concern if you provide this method as part of your API, but don&#39;t call it yourself (or at least don&#39;t call it often enough to run into the problem)."}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 1, "creation_date": 1574621336, "post_id": 59018900, "comment_id": 104287745, "body": "@AlexeyRomanov If it is part of public API of a library, you should have tests and examples in documentation that use it and so you are likely to discover that problem for yourself."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": true, "score": 4, "last_activity_date": 1593018013, "last_edit_date": 1593018013, "creation_date": 1574606910, "answer_id": 59018900, "question_id": 59018413, "link": "https://stackoverflow.com/questions/59018413/when-to-use-self-self-mut-self-in-methods/59018900#59018900", "title": "When to use self, &amp;self, &amp;mut self in methods?", "body": "<p>From the example <a href=\"https://doc.rust-lang.org/book/ch05-03-method-syntax.html\" rel=\"nofollow noreferrer\">in the book</a> (just split onto three separate paragraphs and marked to maybe make it clearer):</p>\n<blockquote>\n<p><code>&amp;self</code>: We\u2019ve chosen <code>&amp;self</code> here for the same reason we used <code>&amp;Rectangle</code> in the function version: we don\u2019t want to take ownership, and we just want to read the data in the struct, not write to it.</p>\n<p><code>&amp;mut self</code>: If we wanted to change the instance that we\u2019ve called the method on as part of what the method does, we\u2019d use <code>&amp;mut self</code> as the first parameter.</p>\n<p><code>self</code>: Having a method that takes ownership of the instance by using just <code>self</code> as the first parameter is rare; this technique is usually used when the method transforms self into something else and you want to prevent the caller from using the original instance after the transformation.</p>\n</blockquote>\n<p>Or in other words: the difference is exactly the same as <code>SomeStruct</code>, <code>&amp;SomeStruct</code>, and <code>&amp;mut SomeStruct</code>.</p>\n<blockquote>\n<p>Say I want to implement a method that pretty prints the struct to stdout, should I take <code>&amp;self</code>? I guess <code>self</code> also works?</p>\n</blockquote>\n<p>As you can see, this is exactly a case for <code>&amp;self</code>. If you use <code>self</code> (or <code>&amp;mut self</code>) the method will likely still compile, but it can only be used in more restricted situations.</p>\n"}], "owner": {"reputation": 2198, "user_id": 2476219, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/89yiG.jpg?s=128&g=1", "display_name": "Aart Stuurman", "link": "https://stackoverflow.com/users/2476219/aart-stuurman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 590, "favorite_count": 0, "accepted_answer_id": 59018900, "answer_count": 1, "score": 4, "last_activity_date": 1593018013, "creation_date": 1574603918, "last_edit_date": 1593017931, "question_id": 59018413, "link": "https://stackoverflow.com/questions/59018413/when-to-use-self-self-mut-self-in-methods", "title": "When to use self, &amp;self, &amp;mut self in methods?", "body": "<p>What is the difference between a method taking <code>self</code> and a method taking <code>&amp;self</code> or even <code>&amp;mut self</code>?</p>\n<p>E.g.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl SomeStruct {\n    fn example1(self) { }\n    fn example2(&amp;self) { }\n    fn example3(&amp;mut self) { }\n}\n</code></pre>\n<p>Say I want to implement a method that pretty prints the struct to stdout, should I take <code>&amp;self</code>? I guess <code>self</code> also works? I'm not sure when to use what.</p>\n"}, {"tags": ["rust", "llvm"], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 15237234, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc615ff3fcd64ec3c02b92b76d78b185?s=128&d=identicon&r=PG", "display_name": "Rdna123", "link": "https://stackoverflow.com/users/15237234/rdna123"}, "is_accepted": false, "score": 1, "last_activity_date": 1613669808, "creation_date": 1613669808, "answer_id": 66265177, "question_id": 59015151, "link": "https://stackoverflow.com/questions/59015151/llvm-sys-didnt-find-usable-system-wide-llvm/66265177#66265177", "title": "llvm-sys - Didn&#39;t find usable system-wide LLVM", "body": "<p>LLVM is not shipped with a component called llvm-config.exe, I am not sure how to bypass though.</p>\n"}, {"tags": [], "owner": {"reputation": 8022, "user_id": 164925, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/35f656cad1ff0d8797c598930dda7faa?s=128&d=identicon&r=PG", "display_name": "Anton Korobeynikov", "link": "https://stackoverflow.com/users/164925/anton-korobeynikov"}, "is_accepted": true, "score": 1, "last_activity_date": 1613722492, "creation_date": 1613722492, "answer_id": 66273923, "question_id": 59015151, "link": "https://stackoverflow.com/questions/59015151/llvm-sys-didnt-find-usable-system-wide-llvm/66273923#66273923", "title": "llvm-sys - Didn&#39;t find usable system-wide LLVM", "body": "<p>llvm-config is a developer-side tool, it is not shipped with binaries. You need to build LLVM from sources.</p>\n"}], "owner": {"reputation": 101, "user_id": 8457028, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-jU3s_s7n0rA/AAAAAAAAAAI/AAAAAAAAATM/2qSBMYc2c24/photo.jpg?sz=128", "display_name": "pranav ap", "link": "https://stackoverflow.com/users/8457028/pranav-ap"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 408, "favorite_count": 0, "accepted_answer_id": 66273923, "answer_count": 2, "score": 3, "last_activity_date": 1613722492, "creation_date": 1574576065, "last_edit_date": 1574576389, "question_id": 59015151, "link": "https://stackoverflow.com/questions/59015151/llvm-sys-didnt-find-usable-system-wide-llvm", "title": "llvm-sys - Didn&#39;t find usable system-wide LLVM", "body": "<p>I'm trying to learn LLVM to make a programming language using Rust. I am using the <code>llvm-sys</code> crate that wraps around the LLVM API.</p>\n\n<p>I have installed LLVM : <code>LLVM-8.0.0-win64</code></p>\n\n<p>My dependencies in <code>cargo.toml</code></p>\n\n<pre><code>[dependencies]\nllvm-sys = \"80.1.1\"\n</code></pre>\n\n<p>When I run <code>cargo run</code> I get the following error,</p>\n\n<pre><code>    Updating crates.io index\n   Compiling memchr v2.2.1\n   Compiling lazy_static v1.4.0\n   Compiling regex-syntax v0.6.12\n   Compiling semver-parser v0.7.0\n   Compiling libc v0.2.65\n   Compiling cc v1.0.47\n   Compiling thread_local v0.3.6\n   Compiling semver v0.9.0\n   Compiling aho-corasick v0.7.6\n   Compiling regex v1.3.1\n   Compiling llvm-sys v80.1.1\nerror: failed to run custom build command for `llvm-sys v80.1.1`\n\nCaused by:\n  process didn't exit successfully: `C:\\Users\\Name\\Desktop\\Carbon\\carbon-lang\\target\\debug\\build\\llvm-sys-ed5d351b1ae6a41b\\build-script-build` (exit code: 101)\n--- stdout\ncargo:rerun-if-env-changed=LLVM_SYS_80_PREFIX\ncargo:rerun-if-env-changed=LLVM_SYS_80_IGNORE_BLACKLIST\ncargo:rerun-if-env-changed=LLVM_SYS_80_STRICT_VERSIONING\ncargo:rerun-if-env-changed=LLVM_SYS_80_NO_CLEAN_CFLAGS\ncargo:rerun-if-env-changed=LLVM_SYS_80_USE_DEBUG_MSVCRT\ncargo:rerun-if-env-changed=LLVM_SYS_80_FFI_WORKAROUND\nDidn't find usable system-wide LLVM.\n\n--- stderr\nthread 'main' panicked at 'Failed to execute \"C:\\\\Program Files\\\\LLVM\\\\bin\\\\llvm-config\": Os { code: 2, kind: NotFound, message: \"The system cannot find the file specified.\" }', src\\libcore\\result.rs:1165:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n\n<p>But I have set the <code>LLVM_SYS_80_PREFIX</code> as <code>C:\\Program Files\\LLVM</code> which is where the bin folder is.</p>\n\n<p>Should the <code>llvm-config</code> file be separately installed? I could not find it anywhere.</p>\n\n<p>FYI: I'm on Windows 10</p>\n\n<p>Thanks for the help!</p>\n"}, {"tags": ["javascript", "rust", "webassembly"], "answers": [{"tags": [], "owner": {"reputation": 64343, "user_id": 249933, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/458f2e0d08d4114f8b323798cfea141d?s=128&d=identicon&r=PG", "display_name": "ColinE", "link": "https://stackoverflow.com/users/249933/coline"}, "is_accepted": false, "score": 5, "last_activity_date": 1574582686, "creation_date": 1574582686, "answer_id": 59015739, "question_id": 59015066, "link": "https://stackoverflow.com/questions/59015066/using-rustwebassembly-for-web-development-how-to-solve-the-extra-cost-of-wasm/59015739#59015739", "title": "Using rust+webassembly for web development, how to solve the extra cost of wasm and js interaction", "body": "<p>There are a few things that add overhead to JS &lt;=> WebAssembly calls, and impact performance:</p>\n\n<ol>\n<li>There is quite a bit of overhead involved in communicating between WebAssembly and JavaScript, involving a process called trampolining via C++ code.</li>\n<li>In order to exchange data (other than simple numbers), the values need to be encoded / decoded via linear memory.</li>\n</ol>\n\n<p>Both of these contribute to a measurable overhead on a per-function call basis.</p>\n\n<p>However, things are improving ...</p>\n\n<ol>\n<li>Browser vendors are <a href=\"https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-%F0%9F%8E%89/\" rel=\"noreferrer\">looking to remove the trampolining</a>.</li>\n<li>Via the <a href=\"https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-%F0%9F%8E%89/\" rel=\"noreferrer\">interface types</a> proposal, the encode / decode overhead will be significantly reduced.</li>\n</ol>\n\n<p>WebAssembly is a very new technology, it takes time to optimise and resolve performance issues.</p>\n\n<blockquote>\n  <p>Does this mean that rust+wasm is not suitable for web development that interacts frequently with dom operations</p>\n</blockquote>\n\n<p>At the moment, potentially yes. In the future, this will likely be viable</p>\n\n<blockquote>\n  <p>Is my analysis correct?</p>\n</blockquote>\n\n<p>Your current observation, that it is a bit slow at the moment is correct.</p>\n"}], "owner": {"reputation": 379, "user_id": 6676972, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TotvU8qdfQA/AAAAAAAAAAI/AAAAAAAAABE/-Kg59N1l4D8/photo.jpg?sz=128", "display_name": "\u8042\u5c0f\u6d9b", "link": "https://stackoverflow.com/users/6676972/%e8%81%82%e5%b0%8f%e6%b6%9b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 367, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1574582686, "creation_date": 1574575161, "question_id": 59015066, "link": "https://stackoverflow.com/questions/59015066/using-rustwebassembly-for-web-development-how-to-solve-the-extra-cost-of-wasm", "title": "Using rust+webassembly for web development, how to solve the extra cost of wasm and js interaction", "body": "<p>I am currently trying to develop a part of a web application using Rust compiled into a wasm part (there are similar frameworks such as yew, etc.), but I find that using webassembly may have more consumption, for example, I have to do a click button call a JS function. The JS function performs some calculations\uff08very simple calculation\uff09 and presents the results to dom</p>\n\n<p>Use only js's solution:</p>\n\n<ul>\n<li>JS calls another JS function</li>\n<li>Another JS function performs some calculations and directly renders the results through some of the document's APIs.</li>\n</ul>\n\n<p>The solution for using Rust + Webassembly:</p>\n\n<ul>\n<li>JS calls a wasm function</li>\n<li>Wasm performs some calculations. After the calculation, the result is encoded into a TypedArray, and the JS function is called to render the dom.</li>\n<li>JS decodes the corresponding content in the TypeArray and then renders the dom to screen.</li>\n</ul>\n\n<p>Here we do not consider using React or Vue, just using WebAssembly may reduce performance, which is mainly reflected in:</p>\n\n<ul>\n<li>More function calls</li>\n<li>Added the encode/decode procedure and possible memory copies.</li>\n</ul>\n\n<p>The advantage of Webassembly may be that the calculation is faster, but this advantage is likely to not save the overall time due to the increased overhead mentioned above, and it is obviously slow when it comes to DOM operations.</p>\n\n<p>But I still did a comparison test for DOM operations:</p>\n\n<p>JS creates 10,000 p-tags and takes about 120ms:</p>\n\n<pre><code>function web_bench() {\n  let container = document.getElementById(\"container\");\n  let begin = Date.now();\n  for(let i = 0; i &lt; 10000; i += 1) {\n    let str = \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\" +\n      \"123456789012345678901234567890123456abcd123456789012345678901234567890123456789012345678901234567890\" +\n      \"1234567890123456789012345678901234567890123456789012345678\u54c8\u54c81234567890123456789012345678901234567890\" +\n      \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\" +\n      \"1234567890123456789012345678901234567890123456789\u54c8\u54c82345678901234567890123456789012345678901234567890\" +\n      \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\" +\n      \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\" +\n      \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\" +\n      \"123456789012345678901234567890123456789012345678901234567890123\u563b\u563b67890123456789012345678901234567890\" +\n      \"12345678901234567890123456789012345678901234\u54c8\u54c8\u54c8012345678901234567890123456789012345678901234567890\";\n\n    let p = document.createElement(\"p\");\n    p.innerHTML = str;\n    container.appendChild(p);\n  }\n  let time = Date.now() - begin;\n  console.log('cost time:', time);\n}\n</code></pre>\n\n<p>If I use rust: cost 180ms</p>\n\n<pre><code>#[wasm_bindgen]\npub fn bench() {\n    let document = web_sys::window().unwrap().document().unwrap();\n    for i in 0..10000 {\n        let str = \"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456abcd1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678\u54c8\u54c8123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\u54c8\u54c8234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678902345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123\u563b\u563b6789012345678901234567890123456789012345678901234567890123456789012345678901234\u54c8\u54c8\u54c8012345678901234567890123456789012345678901234567890\";\n        let p = document\n          .create_element(\"p\")\n          .unwrap();\n        p.set_inner_html(str);\n        document\n          .get_element_by_id(\"container\")\n          .unwrap()\n          .append_child(&amp;p);\n    }\n}\n</code></pre>\n\n<p>Does this mean that rust+wasm is not suitable for web development that interacts frequently with dom operations, and is only suitable for computing modules. How does the current Rust web framework think this problem? Is my analysis correct?</p>\n\n<p>Thanks for your opinion~</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1574573186, "post_id": 59014881, "comment_id": 104277008, "body": "Try <code>Iterator::position</code>."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1574573309, "post_id": 59014881, "comment_id": 104277022, "body": "@edwardw Oh my god. So this is how it&#39;s called. Thank you!!!"}], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1574573370, "creation_date": 1574573370, "answer_id": 59014930, "question_id": 59014881, "link": "https://stackoverflow.com/questions/59014881/how-to-find-a-value-in-a-vector-and-return-its-index-in-a-functional-way/59014930#59014930", "title": "How to find a value in a vector and return its index, in a functional way?", "body": "<p>Fortunately there is <code>Iterator::position</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let v = vec![1,2,3];\nlet key_of_two = v.iter().position(|&amp;x| x == 2);\nassert_eq!(key_of_two, Some(1));\n</code></pre>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 59014930, "answer_count": 1, "score": 0, "last_activity_date": 1574573384, "creation_date": 1574572575, "last_edit_date": 1574573384, "question_id": 59014881, "link": "https://stackoverflow.com/questions/59014881/how-to-find-a-value-in-a-vector-and-return-its-index-in-a-functional-way", "title": "How to find a value in a vector and return its index, in a functional way?", "body": "<p>I can't find in the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.partial_cmp\" rel=\"nofollow noreferrer\">docs</a> an iterator method that will allow to write code equivalent to this:</p>\n\n<pre><code>let v = vec![1,2,3];\nlet key_of_two = v.iter().find_key(|x| x == 2);\nassert_eq!(key_of_two, 1)\n</code></pre>\n\n<p>There's only <code>find</code> method, but how to return the index, instead of the element?</p>\n"}, {"tags": ["configuration", "rust", "runtime", "lifetime", "ownership"], "comments": [{"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 2, "creation_date": 1574586930, "post_id": 59013919, "comment_id": 104279041, "body": "If you&#39;re going to clone the config anyway, why not just construct it normally and share it between threads?  As for the config parsing itself, that depends on what format you use, you could either roll your own, or use something like <a href=\"https://crates.io/crates/toml\" rel=\"nofollow noreferrer\"><code>toml</code></a> crate to do it for you. I see you already use serde, and <code>toml</code> depends on it :) Since you seem to write to it only once, there&#39;s no reason not to construct <code>Arc&lt;Config&gt;</code> in main and share it immutably without any locks by cloning just the <code>Arc</code>."}, {"owner": {"reputation": 9224, "user_id": 881272, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f4daab0a92c07d1ec95556c4ab5f0159?s=128&d=identicon&r=PG", "display_name": "Angelo Fuchs", "link": "https://stackoverflow.com/users/881272/angelo-fuchs"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 1, "creation_date": 1585322053, "post_id": 59013919, "comment_id": 107726725, "body": "@Sahsahae could you form this into an answer?"}], "owner": {"user_type": "does_not_exist", "display_name": "user12422833"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2218, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1574622471, "creation_date": 1574559382, "last_edit_date": 1574622471, "question_id": 59013919, "link": "https://stackoverflow.com/questions/59013919/rust-how-to-read-a-config-file-at-runtime-and-store-in-a-global-struct-accessi", "title": "Rust: How to read a config file at runtime and store in a global struct, accessible across threads?", "body": "<p>This is my first project in Rust, and I think I'm missing something simple. </p>\n\n<p>I'm attempting to create a simple Web API daemon that will receive POSTs of JSON, parse the JSON, and send an email using credentials provided in a config file.\n90% of that problem has been easy.  I am struggling with \"parse the config file at runtime\".</p>\n\n<p>I'm successfully use hyper and letter to receive JSON and send emails.  But I'd like this daemon to be configurable on the server, not at build-time (like most Linux / Unix daemons).  I've diligently followed through <a href=\"https://omarabid.com/rust-intro\" rel=\"nofollow noreferrer\">here</a>. </p>\n\n<p>I've created a config module, declared a struct, and used <code>lazy_static!{}</code> to store an initial version of the configuration struct.</p>\n\n<p>I think I've boiled my problem down to one core question: How do I read and parse a config file, then <em>clone</em> the values into my struct?  Especially considering the fact that the size of those values can't be known at runtime...</p>\n\n<p>e.g. <code>src/config.rs</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::RwLock;\nuse serde::Deserialize;\nuse std::fs;\nuse std::io::prelude::*;\n\n#[derive(Debug, Deserialize, Clone, Copy)]\npub struct RimfireCfg {\n    pub verbose: u8,\n\n    /* web api server config */\n    pub listen_address: &amp;'static str,\n\n    /* mail server config */\n    pub mailserver: &amp;'static str,\n    pub port:                u16,\n    pub user:       &amp;'static str,\n    pub password:   &amp;'static str,\n}\n\nlazy_static! {\n    pub static ref CONFIG: RwLock&lt;RimfireCfg&gt; = RwLock::new(\n        RimfireCfg {\n            verbose: 0,\n            listen_address: \"127.0.0.1:3000\",\n            mailserver: \"smtp-mail.outlook.com\",\n            port: 587,\n            user: \"\",\n            password: \"\",\n        }\n    );\n}\n\nimpl RimfireCfg {\n    pub fn init() -&gt; Result&lt;(), i32&gt; {\n        let mut w = CONFIG.write().unwrap();\n\n        /* read the config file */\n        let _lcfg: RimfireCfg =\n            toml::from_slice(&amp;fs::read(\"rimfire.toml\").unwrap()).unwrap();\n\n        // this is clearly wrong ...\n        *w.listen_address = _lcfg.listen_address.clone();\n        dbg!(*w);\n\n        Ok(())\n    }\n\n    pub fn clone_config() -&gt; RimfireCfg {\n        let m = CONFIG.read().unwrap();\n\n        *m\n    }\n}\n</code></pre>\n\n<p>and <code>src/main.rs</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[macro_use]\nextern crate lazy_static;\n\nmod config;\n\nuse config::RimfireCfg;\n\nfn main() {\n    let a = RimfireCfg::clone_config();\n\n    dbg!(a);\n\n    RimfireCfg::init().unwrap();\n\n    let a = RimfireCfg::clone_config();\n\n    dbg!(a);\n}\n</code></pre>\n\n<p>Any thoughts?  suggestions?</p>\n"}, {"tags": ["rust", "return", "serde-json"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 1, "creation_date": 1574554301, "post_id": 59013389, "comment_id": 104274484, "body": "<code>return</code> returns from the whole function, whereas the last expression of a block (if a semicolon is omitted) implicitly returns <i>from that block only</i>. See the answers to <a href=\"https://stackoverflow.com/questions/38663359/what-type-is-the-type-in-rust\"><i>What type is the \u201ctype ()\u201d in Rust?</i></a> for some more discussion."}], "answers": [{"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 6, "last_activity_date": 1574568361, "creation_date": 1574568361, "answer_id": 59014554, "question_id": 59013389, "link": "https://stackoverflow.com/questions/59013389/whats-the-difference-between-using-the-return-statement-and-omitting-the-semico/59014554#59014554", "title": "What&#39;s the difference between using the return statement and omitting the semicolon in Rust?", "body": "<p>A <code>return</code> statement, otherwise known as an early return, will return an object from the last/innermost function-like scope. (Function-like because it applies to both closures and functions)</p>\n\n<pre><code>let x = || {\n    return 0;\n    println!(\"This will never happen!\");\n};\nfn foo() {\n    return 0;\n    println!(\"This won't happen either\");\n}\n</code></pre>\n\n<p>An absent semicolon will instead evaluate the expression, like a <code>return</code>, but only return to the last/innermost scope, or in other words, it returns from within any set of <code>{}</code>.</p>\n\n<pre><code>let x = {           // Scope start\n    0\n};                  // Scope end\n\nfn foo() -&gt; usize { // Scope start\n    0\n}                   // Scope end\n</code></pre>\n\n<p><code>return</code> statement will break out of any amount of nested scopes until it hits a function-like scope:</p>\n\n<pre><code>fn foo() -&gt; usize {// &lt;------------------------------------------\\\n    {                                                      //    |\n        {                                                  //    |\n            {                                              //    |\n                {                                          //    |\n                    {                                      //    |\n                        {                                  //    |\n                            {                              //    |\n                                {                          //    |\n                                    {                      //    |\n                                        {                  //    |\n                                            {              //    |\n                                                 return 0; // ---/\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The <code>return</code> statement also has a type of its own, that is to say that <code>let x = return;</code> will actually compile. </p>\n\n<p>A return statement will evaluate to <code>!</code>, AKA <a href=\"https://doc.rust-lang.org/std/primitive.never.html\" rel=\"noreferrer\">the never type</a>. You can't name it in stable rust right now, but it will eventually become stable and usable. </p>\n"}, {"tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": false, "score": 4, "last_activity_date": 1574640731, "creation_date": 1574640731, "answer_id": 59023697, "question_id": 59013389, "link": "https://stackoverflow.com/questions/59013389/whats-the-difference-between-using-the-return-statement-and-omitting-the-semico/59023697#59023697", "title": "What&#39;s the difference between using the return statement and omitting the semicolon in Rust?", "body": "<p>As it says in <a href=\"https://doc.rust-lang.org/book/ch03-03-how-functions-work.html\" rel=\"nofollow noreferrer\">The Book</a>:</p>\n\n<blockquote>\n  <p>In Rust, the return value of the function is synonymous with the value of the final expression in the block of the body of a function.</p>\n</blockquote>\n\n<p>In other words - it is not the fact that an expression does not have a semicolon that makes it the return value, it is the fact that it is the final expression in the function. A semicolon is used to separate expressions, so this:</p>\n\n<pre><code>fn foo() -&gt; i32 {\n    5;\n}\n</code></pre>\n\n<p>is equivalent to an expression yielding the value 5, followed by an empty expression that does not yield anything. Thus the function above would not compile.</p>\n\n<p>Where the <code>return</code> keyword comes in handy is if you want to return from a function early, before reaching the final expression. This is what you are trying to do in your example.</p>\n\n<p>Also note that all potential return values have to have the same type as the return value of the function itself.</p>\n\n<p>None of the above fully explains the compiler error you were getting though. Your inner match looks like this:</p>\n\n<pre><code>match json_data[\"status\"].as_str() {\n    Some(status_str) =&gt; {\n        if status_str == \"ok\" {\n            Ok(json_data[\"response\"].clone())\n        }\n    }\n    None =&gt; eprintln!(\"\\\"status\\\" was not a string\")\n}\n</code></pre>\n\n<p>One of the rules of match blocks is that each of the arms has to evaluate to the same type. But in the case above, one arm potentially evaluates to <code>std::result::Result&lt;serde_json::value::Value, _&gt;</code>, while the other does not evaluate to anything (or to be more precise, evaluates to the empty value <code>()</code>).</p>\n\n<p>Inserting the <code>return</code> avoids that error, because the <code>Some</code> arm now returns from the function altogether, rather than evaluating to a value of type <code>std::result::Result&lt;serde_json::value::Value, _&gt;</code>. </p>\n"}], "owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 478, "favorite_count": 1, "accepted_answer_id": 59014554, "answer_count": 2, "score": 5, "last_activity_date": 1574640731, "creation_date": 1574553156, "question_id": 59013389, "link": "https://stackoverflow.com/questions/59013389/whats-the-difference-between-using-the-return-statement-and-omitting-the-semico", "title": "What&#39;s the difference between using the return statement and omitting the semicolon in Rust?", "body": "<p>I'm writing a function that returns a serde_json::Value upon success (and failure). Previously in Rust I have been omitting the semicolon to return data from a function, like in the code example below: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::{Result, Value};\nuse core::result::Result as ResultCore;\n\nfn returning_function() -&gt; ResultCore&lt;Value, Value&gt; {\n    let data = r#\"\n    {\n        \"status\": \"ok\",\n        \"response\": {\n            \"data\": \"secret message!\"\n         }\n    }\n    \"#;\n\n    match str_to_json(data) {\n        Ok(json_data) =&gt; match json_data[\"status\"].as_str() {\n            Some(status_str) =&gt; {\n                if status_str == \"ok\" {\n                    Ok(json_data[\"response\"].clone())\n                }\n            }\n            None =&gt; eprintln!(\"\\\"status\\\" was not a string\")\n        }\n        Err(error) =&gt; eprintln!(\"something went wrong! here's what: {}\", error)\n    }\n\n    Err(serde_json::Value::Null)\n}\n\nfn str_to_json(json_data: &amp;str) -&gt; Result&lt;Value&gt; {\n    Ok(serde_json::from_str(json_data)?)\n}\n</code></pre>\n\n<p>Here comes the part I don't understand: this doesn't compile. Rust's compiler tells me \"mismatched types\", and that it <code>expected type ()</code>, but <code>found type serde_json::value::Value</code>. Now, I found a solution to this that does compile, and it is as follows: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use serde_json::{Result, Value};\nuse core::result::Result as ResultCore;\n\nfn returning_function() -&gt; ResultCore&lt;Value, Value&gt; {\n    let data = r#\"\n    {\n        \"status\": \"ok\",\n        \"response\": {\n            \"data\": \"secret message!\"\n         }\n    }\n    \"#;\n\n    match str_to_json(data) {\n        Ok(json_data) =&gt; match json_data[\"status\"].as_str() {\n            Some(status_str) =&gt; {\n                if status_str == \"ok\" {\n                    return Ok(json_data[\"response\"].clone());\n                    // ^ added return statement here\n                }\n            }\n            None =&gt; eprintln!(\"\\\"status\\\" was not a string\")\n        }\n        Err(error) =&gt; eprintln!(\"something went wrong! here's what: {}\", error)\n    }\n\n    Err(serde_json::Value::Null)\n}\n\nfn str_to_json(json_data: &amp;str) -&gt; Result&lt;Value&gt; {\n    Ok(serde_json::from_str(json_data)?)\n}\n</code></pre>\n\n<p>By adding the <code>return</code> statement the compiler suddenly is happy and the compiler doesn't have anything to say about it any more. Why is this? I was under the impression that omitting the semicolon and using the return statement had the same implications \u00ad\u2014 why does it differ here? </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1574545970, "post_id": 59012404, "comment_id": 104272824, "body": "It&#39;s because the compiler must <i>deduce</i> types, it can&#39;t <i>guess</i> them even if there is only one to guess from (except in certain specific scenarios not including this one). <code>None</code> could be <code>Option&lt;Struct&gt;::None</code> or <code>Option::&lt;AnotherTypeImplementingTrait&gt;::None</code>. <code>impl trait</code> in argument position works like generics, so the compiler has to know what version of <code>foo</code> to instantiate, and <code>None</code> could be anything."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574546149, "post_id": 59012404, "comment_id": 104272863, "body": "See for example, <a href=\"https://stackoverflow.com/questions/58593042/is-there-a-way-to-hint-to-the-compiler-to-use-some-kind-of-default-generic-type\">Is there a way to hint to the compiler to use some kind of default generic type when using Option::None?</a> (all the answers) and <a href=\"https://stackoverflow.com/questions/27283507/optional-function-argument-that-is-specified-as-a-trait-instead-of-a-concrete-ty\">Optional function argument that is specified as a trait instead of a concrete type</a>. Does one of those answer your question or are you still unsure?"}, {"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574546192, "post_id": 59012404, "comment_id": 104272871, "body": "@trentcl Does that mean the compiler is not able to consider types like <code>Option</code> and realize that a generic type does not matter for the use case?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1574547016, "post_id": 59012404, "comment_id": 104273055, "body": "it does matter, the size of the Option depend of the type that impl the trait."}, {"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574547345, "post_id": 59012404, "comment_id": 104273124, "body": "@Stargateur So an <code>Option&lt;HugeThing&gt;</code> would always take up huge amounts of memory even if it were <code>None::HugeThing</code>? Fair enough, but if it were an <code>Option&lt;&amp;HugeThing&gt;</code>, that should not matter anymore. All adresses are of the same size, no matter if they point to a trait object or struct, right?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1574551662, "post_id": 59012404, "comment_id": 104273964, "body": "I think you&#39;re missing that <code>foo::HugeThing</code> might behave differently than <code>foo::OtherThing</code> <i>even when passed <code>None</code></i>, and the compiler has to know to use the right one."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574551803, "post_id": 59012404, "comment_id": 104274005, "body": "(Also, not all references are the same size because references to unsized types are fat pointers, but even if they were, the compiler still won&#39;t pick a type for you.)"}, {"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574585383, "post_id": 59012404, "comment_id": 104278732, "body": "I just woke up with the thought &quot;Wait! References are fat pointers sometimes&quot;. So Thanks for confirming @trentcl. But Re: &quot;different behaviour when None&quot;, that would only matter if the function did a type check on the <code>Option&lt;T&gt;</code> or called a function where the distinction matters. Am I right that some such cases could be optimized if the references were guaranteed to have the same size?"}, {"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "edited": false, "score": 0, "creation_date": 1574585479, "post_id": 59012404, "comment_id": 104278745, "body": "Either way, I think I&#39;d accept your answer :) Bonus appreciation if you could explain what kind of info an unsized type reference contains"}], "answers": [{"comments": [{"owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "edited": false, "score": 0, "creation_date": 1574627054, "post_id": 59021922, "comment_id": 104289292, "body": "Thanks! Together with the comments by @trenctl this is perfect. I&#39;ll just wait a little before accepting so that he would get a chance to write an answer as well, since he explained some good points as well"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "edited": false, "score": 1, "creation_date": 1574638051, "post_id": 59021922, "comment_id": 104291867, "body": "@lucidbrot Thanks, but unless there&#39;s something significant in my comments you think is not explained in this answer, I&#39;ll let michalsrb have the checkmark :) Glad I was able to help!"}, {"owner": {"reputation": 26541, "user_id": 188535, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/d04ab2422a8f061608f58708de9bb138?s=128&d=identicon&r=PG", "display_name": "detly", "link": "https://stackoverflow.com/users/188535/detly"}, "edited": false, "score": 0, "creation_date": 1604833475, "post_id": 59021922, "comment_id": 114462045, "body": "This finally made it click for me, great answer."}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 5, "last_activity_date": 1574628165, "last_edit_date": 1574628165, "creation_date": 1574626428, "answer_id": 59021922, "question_id": 59012404, "link": "https://stackoverflow.com/questions/59012404/why-does-the-rust-compiler-require-a-type-annotation-for-optionimpl-trait/59021922#59021922", "title": "Why does the rust compiler require a type annotation for Option&lt;&amp;impl Trait&gt;?", "body": "<p>This:</p>\n\n<pre><code>fn foo(maybe_trait: Option&lt;&amp;impl Trait&gt;) -&gt; String {\n</code></pre>\n\n<p>is just syntactic sugar for this:</p>\n\n<pre><code>fn foo&lt;T: Trait&gt;(maybe_trait: Option&lt;&amp;T&gt;) -&gt; String {\n</code></pre>\n\n<p>Which means that the compiler will generate many <code>foo</code> functions, one for every <code>T</code> (type implementing <code>Trait</code>) that you are going to use it with. So even if you call it with <code>None</code>, the compiler needs to know which is the <code>T</code> in that case, so it can pick/generate the right function.</p>\n\n<p>The way <code>Option&lt;T&gt;</code> type is represented in memory depends on how the <code>T</code> type is represented. The compiled assembly of the function <code>foo</code> depends on that. For different <code>T</code> the resulting assembly may look differently. (For example the enum tag that defines whether it is <code>Some</code> or <code>None</code> may be at different byte offset. It may use different registers, it may decide differently whether to unroll loops, inline functions, vectorize, ...) This is the strength of static dispatch - even that you write code with lot of abstraction, you get code fully optimized for the concrete types you actually use.</p>\n\n<p>With the upcoming <a href=\"https://github.com/rust-lang/rfcs/pull/1210\" rel=\"nofollow noreferrer\">specialization</a> feature you can actually manually write different implementation of <code>foo</code> for different subsets of <code>T</code>, so it is really important for the compiler to know which <code>foo</code> are you calling. Each may do something different with <code>None</code>.</p>\n\n<hr>\n\n<p>On the other hand this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(maybe_trait: Option&lt;&amp;dyn Trait&gt;) -&gt; String {\n</code></pre>\n\n<p>Means that there is <strong>exactly one</strong> function <code>foo</code> that takes Option containing a fat pointer to some type implementing <code>Trait</code>. If you call some method on <code>maybe_trait</code> inside the function, the call goes thru dynamic dispatch.</p>\n\n<p>Since there is exactly one function <code>foo</code>, you don't have to say anything about the type when using <code>None</code>, there is only one.</p>\n\n<p>But dynamic dispatch comes at cost - this one function is not optimized for any specific <code>T</code>, it works with every <code>T</code> dynamically.</p>\n"}], "owner": {"reputation": 3719, "user_id": 2550406, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/GhBMm.png?s=128&g=1", "display_name": "lucidbrot", "link": "https://stackoverflow.com/users/2550406/lucidbrot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1126, "favorite_count": 2, "accepted_answer_id": 59021922, "answer_count": 1, "score": 3, "last_activity_date": 1574628165, "creation_date": 1574544129, "last_edit_date": 1574545208, "question_id": 59012404, "link": "https://stackoverflow.com/questions/59012404/why-does-the-rust-compiler-require-a-type-annotation-for-optionimpl-trait", "title": "Why does the rust compiler require a type annotation for Option&lt;&amp;impl Trait&gt;?", "body": "<p>Given this MCVE:</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", foo(None));\n}\n\ntrait Trait {}\nstruct Struct {}\nimpl Trait for Struct {}\n\nfn foo(maybe_trait: Option&lt;&amp;impl Trait&gt;) -&gt; String {\n    return \"hello\".to_string();\n}\n</code></pre>\n\n<p>The rust compiler is not happy:  </p>\n\n<pre><code>error[E0282]: type annotations needed\n --&gt; src\\main.rs:2:20\n  |\n2 |     println!(\"{}\", foo(None));\n  |                    ^^^ cannot infer type for `impl Trait`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0282`.\n</code></pre>\n\n<p>Using type annotations makes this compile:  </p>\n\n<pre><code>fn main() {\n    let nothing: Option&lt;&amp;Struct&gt; = None;\n    println!(\"{}\", foo(nothing));\n}\n\ntrait Trait {}\nstruct Struct {}\nimpl Trait for Struct {}\n\nfn foo(maybe_trait: Option&lt;&amp;impl Trait&gt;) -&gt; String {\n    return \"hello\".to_string();\n}\n</code></pre>\n\n<p>If we use <code>Trait</code> instead of <code>Struct</code> in the type annotation, there is a bit more information given to us:  </p>\n\n<pre><code>warning: trait objects without an explicit `dyn` are deprecated\n --&gt; src\\main.rs:2:26\n  |\n2 |     let nothing: Option&lt;&amp;Trait&gt; = None;\n  |                          ^^^^^ help: use `dyn`: `dyn Trait`\n  |\n  = note: #[warn(bare_trait_objects)] on by default\n\nerror[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n --&gt; src\\main.rs:3:20\n  |\n3 |     println!(\"{}\", foo(nothing));\n  |                    ^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `dyn Trait`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\nnote: required by `foo`\n --&gt; src\\main.rs:10:1\n  |\n10| fn foo(maybe_trait: Option&lt;&amp;impl Trait&gt;) -&gt; String {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\n</code></pre>\n\n<p>I understand this as \"You shall not use a trait here, because then I do not know how much memory I need to allocate for this parameter\".  </p>\n\n<p><strong>But why is that relevant when I am passing <code>None</code>?</strong><br>\nOf course, passing any concrete instance of a type implementing <code>Trait</code> (i.e. <code>Struct</code>) is okay to the compiler.</p>\n\n<hr>\n\n<p>Sidenote:<br>\nI have read <a href=\"https://stackoverflow.com/a/53769384/2550406\">this answer</a> on the difference between <code>&amp;dyn Trait</code> and <code>&amp;impl Trait</code>. I'm unsure when to use which, but since my program does compile with <code>&amp;impl Trait</code> (when using type annotations as above) it seems like the safe choice.  </p>\n\n<p>If instead we make the function parameter be of type <code>Option&lt;&amp;dyn Trait&gt;</code>, my program compiles without type annotations within <code>main()</code>:  </p>\n\n<pre><code>fn main() {\n    println!(\"{}\", foo(None));\n}\n\ntrait Trait {}\nstruct Struct {}\nimpl Trait for Struct {}\n\nfn foo(maybe_trait: Option&lt;&amp;dyn Trait&gt;) -&gt; String {\n    return \"hello\".to_string();\n}\n</code></pre>\n\n<hr>\n\n<pre><code>$ cargo --version\ncargo 1.37.0 (9edd08916 2019-08-02)  \n\n$ cat Cargo.toml\n[package]\nname = \"rdbug\"\nversion = \"0.1.0\"\nauthors = [\"redacted\"]\nedition = \"2018\"\n</code></pre>\n"}, {"tags": ["rust", "blockchain", "substrate"], "answers": [{"tags": [], "owner": {"reputation": 989, "user_id": 4184410, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cyvsh.jpg?s=128&g=1", "display_name": "JoshOrndorff", "link": "https://stackoverflow.com/users/4184410/joshorndorff"}, "is_accepted": false, "score": 1, "last_activity_date": 1574783906, "creation_date": 1574783906, "answer_id": 59054816, "question_id": 59012154, "link": "https://stackoverflow.com/questions/59012154/substrate-how-to-integrate-with-the-session-module/59054816#59054816", "title": "Substrate: How to integrate with the session module", "body": "<p>To fix the build above, change the <code>OnSessionEnding</code>'s type parameter to <code>T::ValidatorId</code>.</p>\n\n<pre><code>- impl&lt;T: Trait&gt; OnSessionEnding&lt;T::AccountId&gt; for Module&lt;T&gt; {\n+ impl&lt;T: Trait&gt; OnSessionEnding&lt;T::ValidatorId&gt; for Module&lt;T&gt; {\n</code></pre>\n\n<p>Here is the full working implementation</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T: Trait&gt; OnSessionEnding&lt;T::ValidatorId&gt; for Module&lt;T&gt; {\n    fn on_session_ending(_ending_index: SessionIndex, _will_apply_at: SessionIndex) -&gt; Option&lt;Vec&lt;T::ValidatorId&gt;&gt; {\n        match &lt;QueuedValidator&lt;T&gt;&gt;::get() {\n            Some(n00b) =&gt; {\n                // Get the list of current validators from the session module\n                let mut validators = session::Module::&lt;T&gt;::validators();\n\n                // Add the new validator to the list\n                //TODO handle the unwrapping better\n                validators.push(T::ValidatorIdOf::convert(n00b.clone()).unwrap());\n\n                // Clear the queued validator from local storage\n                &lt;QueuedValidator&lt;T&gt;&gt;::kill();\n\n                // Return the vector of new validators\n                Some(validators)\n            }\n            None =&gt; None\n        }\n\n    }\n}\n</code></pre>\n\n<p>(This answer is courtesy of @sushisource:matrix.org)</p>\n"}], "owner": {"reputation": 989, "user_id": 4184410, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cyvsh.jpg?s=128&g=1", "display_name": "JoshOrndorff", "link": "https://stackoverflow.com/users/4184410/joshorndorff"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1574783906, "creation_date": 1574542355, "question_id": 59012154, "link": "https://stackoverflow.com/questions/59012154/substrate-how-to-integrate-with-the-session-module", "title": "Substrate: How to integrate with the session module", "body": "<p>I'm working on a toy validator addition module to better understand the workings of the <a href=\"https://substrate.dev/rustdocs/master/pallet_session/index.html\" rel=\"nofollow noreferrer\">session module</a>. Here is my <a href=\"https://github.com/paritytech/substrate/tree/joshy-sessions/bin/node-template/runtime/src\" rel=\"nofollow noreferrer\">complete attempt on github</a>.</p>\n\n<p>I've got my code nearly working but I'm running into type-checking errors in my implementation of <a href=\"https://substrate.dev/rustdocs/master/pallet_session/trait.OnSessionEnding.html\" rel=\"nofollow noreferrer\"><code>OnSessionEnding</code></a>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T: Trait&gt; OnSessionEnding&lt;T::AccountId&gt; for Module&lt;T&gt; {\n    fn on_session_ending(_ending_index: SessionIndex, _will_apply_at: SessionIndex) -&gt; Option&lt;Vec&lt;T::AccountId&gt;&gt; {\n        match &lt;QueuedValidator&lt;T&gt;&gt;::get() {\n            Some(n00b) =&gt; {\n                // Get the list of current validators from the session module\n                let mut validators = session::Module::&lt;T&gt;::validators();\n                validators.push(T::ValidatorIdOf::convert(n00b.clone()).unwrap());\n                Some(validators.into())\n            }\n            None =&gt; None\n        }\n\n    }\n}\n// https://github.com/paritytech/substrate/blob/4a17a8aaa5042759d934abb10b1703ffdff7d902/bin/node-template/runtime/src/add_validator.rs#L66-L79\n</code></pre>\n\n<p>I'm not sure what the type-checker needs to understand that <code>ValidatorId</code> and <code>AccountId</code> are truly the same type as I've declared them to be.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl session::Trait for Runtime {\n    // --snip--\n    type ValidatorId = &lt;Self as system::Trait&gt;::AccountId;\n    type ValidatorIdOf = ConvertInto;\n}\n// https://github.com/paritytech/substrate/blob/4a17a8aaa5042759d934abb10b1703ffdff7d902/bin/node-template/runtime/src/lib.rs#L250-L262\n</code></pre>\n\n<p>The exact error is</p>\n\n<pre><code>error[E0277]: the trait bound `add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as palette_system::Trait&gt;::AccountId&gt;: core::convert::From&lt;add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as pallet_session::Trait&gt;::ValidatorId&gt;&gt;` is not satisfied\n  --&gt; /home/joshy/ProgrammingProjects/substrate/bin/node-template/runtime/src/add_validator.rs:73:10\n   |\n73 |                 Some(validators.into())\n   |                      ^^^^^^^^^^^^^^^^^ the trait `core::convert::From&lt;add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as pallet_session::Trait&gt;::ValidatorId&gt;&gt;` is not implemented for `add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as palette_system::Trait&gt;::AccountId&gt;`\n   |\n   = note: required because of the requirements on the impl of `core::convert::Into&lt;add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as palette_system::Trait&gt;::AccountId&gt;&gt;` for `add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as pallet_session::Trait&gt;::ValidatorId&gt;`\n\n</code></pre>\n\n<p>Or without the final <code>.into()</code> it becomes</p>\n\n<pre><code>error[E0308]: mismatched types\n  --&gt; /home/joshy/ProgrammingProjects/substrate/bin/node-template/runtime/src/add_validator.rs:73:10\n   |\n73 |                 Some(validators)\n   |                      ^^^^^^^^^^ expected palette_system::Trait::AccountId, found pallet_session::Trait::ValidatorId\n   |\n   = note: expected type `add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as palette_system::Trait&gt;::AccountId&gt;`\n              found type `add_validator::sr_api_hidden_includes_decl_storage::hidden_include::sr_primitives::substrate_application_crypto::substrate_primitives::sr_std::prelude::Vec&lt;&lt;T as pallet_session::Trait&gt;::ValidatorId&gt;`\n</code></pre>\n"}, {"tags": ["tcp", "server", "proxy", "rust"], "comments": [{"owner": {"reputation": 4967, "user_id": 13161155, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4SPLU.jpg?s=128&g=1", "display_name": "Yagiz Degirmenci", "link": "https://stackoverflow.com/users/13161155/yagiz-degirmenci"}, "edited": false, "score": 0, "creation_date": 1614707265, "post_id": 59011136, "comment_id": 117465428, "body": "Have you found a better solution for this?"}], "owner": {"reputation": 307, "user_id": 3189988, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/Vxc3I.gif?s=128&g=1", "display_name": "fragsalat", "link": "https://stackoverflow.com/users/3189988/fragsalat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 360, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1574535773, "creation_date": 1574535773, "question_id": 59011136, "link": "https://stackoverflow.com/questions/59011136/rust-tcp-proxy-to-pipe-http-ssh-and-other-tcp-traffic", "title": "Rust TCP Proxy to pipe http, ssh and other tcp traffic", "body": "<p>I am new to rust and as learning project I want to create a tcp proxy. Tokio overwhelmed me and I could not find the proper documentation to understand how it works. So I tried to go with std net modules but I stuck at properly piping the traffic. I bound multiple listeners in their own threads and want to pipe the traffic forth and back like a proper tcp proxy would do. Unfortunately I seem to don't understand how that has to work in Rust. Can someone give me an example without 3rd party dependencies?</p>\n\n<p>Here is my code.  handle_connection gets called from accepting the connection.</p>\n\n<pre><code>fn forward(direction: &amp;str, input: &amp;mut BufReader&lt;TcpStream&gt;, output: &amp;mut BufWriter&lt;TcpStream&gt;) {\n    loop {\n        let mut buffer = [0;1024];\n        debug!(\"{} Reading\", direction);\n        match input.read(&amp;mut buffer) {\n            Ok(bytes) =&gt; {\n                debug!(\"Read {} bytes\", bytes);\n                if bytes &lt; 1  {\n                    break;\n                }\n                match output.write_all(&amp;mut buffer) {\n                    Ok(_) =&gt; {\n                        debug!(\"Forwarded {:#?} bytes\", bytes);\n                        output.flush();\n                        if bytes &lt; 1024 {\n                            break; // abort when everything is sent\n                        }\n                    },\n                    Err(error) =&gt; panic!(\"Could not forward: {}\", error)\n                }\n            },\n            Err(error) =&gt; panic!(\"Could not read: {}\", error)\n        }\n    }\n}\n\nfn handle_connection(mapping: ProxyMapping, incoming: TcpStream) -&gt; Result&lt;(), String&gt; {\n    info!(\"Incomming connection from {}\", incoming.peer_addr().map_err(|e| format!(\"{}\", e))?);\n    // Try to connect to target\n    let outgoing = TcpStream::connect_timeout(\n        &amp;mapping.get_target_addr()?,\n        Duration::from_secs(1)\n    )?;\n\n    // forward tcp steam\n    debug!(\"Start sync\");\n    let input_clone = input.try_clone()\n        .map_err(|error| format!(\"Couldn't clone {}\", error))?;\n    let mut input_read = BufReader::new(input);\n    let mut input_write = BufWriter::new(input_clone);\n\n    let output_clone = output.try_clone()\n        .map_err(|error| format!(\"Couldn't clone {}\", error))?;\n    let mut output_read = BufReader::new(output);\n    let mut output_write = BufWriter::new(output_clone);\n    debug!(\"spawn sync\");\n\n    loop {\n        debug!(\"Forward\");\n        forward(\"forward\", &amp;mut input_read, &amp;mut output_write);\n        debug!(\"Backward\");\n        forward(\"backward\",&amp;mut output_read, &amp;mut input_write);\n    }\n\n    Ok(())\n}\n</code></pre>\n\n<p>So far it proxies some data but for http requests it stops at backward reading as I don't know yet when I should shutdown a connection. After some time it just floods the log with read 0 bytes. I added a loop for the sync as for one tcp connection multiple packets could be sent. Any ideas how to improve this?</p>\n"}, {"tags": ["rust", "arm", "embedded", "rust-cargo", "stm32f0"], "comments": [{"owner": {"reputation": 304, "user_id": 10124827, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22adbe933ba29413ef64aac370adf743?s=128&d=identicon&r=PG&f=1", "display_name": "G&#225;bor", "link": "https://stackoverflow.com/users/10124827/g%c3%a1bor"}, "edited": false, "score": 0, "creation_date": 1574534563, "post_id": 59009533, "comment_id": 104269846, "body": "Do you have Linux on stm32f0?"}, {"owner": {"reputation": 5167, "user_id": 4862613, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/1583232551699623/picture?type=large", "display_name": "Maldus", "link": "https://stackoverflow.com/users/4862613/maldus"}, "reply_to_user": {"reputation": 304, "user_id": 10124827, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22adbe933ba29413ef64aac370adf743?s=128&d=identicon&r=PG&f=1", "display_name": "G&#225;bor", "link": "https://stackoverflow.com/users/10124827/g%c3%a1bor"}, "edited": false, "score": 0, "creation_date": 1574535223, "post_id": 59009533, "comment_id": 104270047, "body": "No, it&#39;s a very small MCU, just trying to flash in standalone firmware."}], "answers": [{"comments": [{"owner": {"reputation": 5167, "user_id": 4862613, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/1583232551699623/picture?type=large", "display_name": "Maldus", "link": "https://stackoverflow.com/users/4862613/maldus"}, "edited": false, "score": 0, "creation_date": 1574536237, "post_id": 59011204, "comment_id": 104270303, "body": "Normally specifying the <code>cargo</code> package for the target architecture is enough for that - it is on my Intel system. I know how to setup a binary from scratch, but here I&#39;m working on a setup environment"}, {"owner": {"user_type": "does_not_exist", "display_name": "user8725011"}, "edited": false, "score": 0, "creation_date": 1574640367, "post_id": 59011204, "comment_id": 104292258, "body": "Did you try it with the linker script? According to your assumption, the binary isn&#39;t linked correctly. @Gab&#243;r might be correct here."}], "tags": [], "owner": {"reputation": 304, "user_id": 10124827, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22adbe933ba29413ef64aac370adf743?s=128&d=identicon&r=PG&f=1", "display_name": "G&#225;bor", "link": "https://stackoverflow.com/users/10124827/g%c3%a1bor"}, "is_accepted": false, "score": -1, "last_activity_date": 1574536157, "creation_date": 1574536157, "answer_id": 59011204, "question_id": 59009533, "link": "https://stackoverflow.com/questions/59009533/rust-embedded-application-is-not-linked-correctly-under-aarch64-system/59011204#59011204", "title": "Rust embedded application is not linked correctly under AArch64 system", "body": "<p>You have to create raw binary image by using a linker srcipt dedicated to that board.</p>\n\n<p><a href=\"https://github.com/szczys/stm32f0-discovery-basic-template/tree/master/Device/ldscripts\" rel=\"nofollow noreferrer\">https://github.com/szczys/stm32f0-discovery-basic-template/tree/master/Device/ldscripts</a></p>\n"}, {"tags": [], "owner": {"reputation": 5167, "user_id": 4862613, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/1583232551699623/picture?type=large", "display_name": "Maldus", "link": "https://stackoverflow.com/users/4862613/maldus"}, "is_accepted": true, "score": 0, "last_activity_date": 1581776351, "creation_date": 1581776351, "answer_id": 60239612, "question_id": 59009533, "link": "https://stackoverflow.com/questions/59009533/rust-embedded-application-is-not-linked-correctly-under-aarch64-system/60239612#60239612", "title": "Rust embedded application is not linked correctly under AArch64 system", "body": "<p>I was correct in assuming there was a problem with the linker, and there are a couple of solutions.</p>\n\n<p>Since two years ago Rust uses LLD as the default linker for the ARM architecture (<a href=\"https://rust-embedded.github.io/blog/2018-08-2x-psa-cortex-m-breakage/\" rel=\"nofollow noreferrer\">https://rust-embedded.github.io/blog/2018-08-2x-psa-cortex-m-breakage/</a>). Unfortunately <code>rust-lld</code> itself is not distributed in binary form for the ARM platforms (ironic, isn't it?), so I had to compile it from source and specify it via command line.</p>\n\n<p>Exporting the <code>RUSTFLAGS</code> variable works but overwrites its default value defined in <code>.cargo/config</code>, which would include also the directive for the linker script (<code>-C link-arg=-Tlink.x</code>). In short I was convinced of using the correct linker script because it was listed in <code>.cargo/config</code>, but the <code>RUSTFLAGS</code> env variable was removing it.</p>\n\n<p>The solution is to either </p>\n\n<ul>\n<li>include the linker script explicitly when exporting RUSTFLAGS:\n<code>export RUSTFLAGS=\"-C linker=ldd -C link-arg=-Tlink.x\"</code></li>\n<li>specify <code>\"-C\",  \"linker=lld\"</code> as a rust flag in the <code>.cargo/config</code> file with the other options</li>\n<li>Enable the old linker (<code>arm-none-eabi-ld</code>) which is more easily retrievable by uncommenting the following line in <code>.cargo/config</code>: <code>\"-C\", \"linker=arm-none-eabi-gcc\"</code></li>\n</ul>\n"}], "owner": {"reputation": 5167, "user_id": 4862613, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/1583232551699623/picture?type=large", "display_name": "Maldus", "link": "https://stackoverflow.com/users/4862613/maldus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 646, "favorite_count": 0, "accepted_answer_id": 60239612, "answer_count": 2, "score": 0, "last_activity_date": 1581776351, "creation_date": 1574525223, "last_edit_date": 1592644375, "question_id": 59009533, "link": "https://stackoverflow.com/questions/59009533/rust-embedded-application-is-not-linked-correctly-under-aarch64-system", "title": "Rust embedded application is not linked correctly under AArch64 system", "body": "<p>I'm trying to compile and debug an embedded rust application for stm32f0 using an ARM system as host.\nThe application already compiles and works under an Intel installation.</p>\n<p>I am running on a <a href=\"https://wiki.pine64.org/index.php/Pinebook_Pro_Main_Page\" rel=\"nofollow noreferrer\">Pinebook Pro</a>, powered by a Quad Cortex-A53, 64-bit CPU. The OS is a 64-bit version of Debian:</p>\n<pre><code>$ uname -a\nLinux pinebook 4.4.196 #1 SMP Tue Oct 15 16:54:21 EDT 2019 aarch64 GNU/Linux\n</code></pre>\n<p>I installed rust and cargo with rustup for AArch64 (channel stable):</p>\n<pre><code>$ rustc --version\nrustc 1.39.0 (4560ea788 2019-11-04)\n$ cargo --version\ncargo 1.39.0 (1c6ec66d5 2019-09-30)\n</code></pre>\n<p>As per <a href=\"https://github.com/rustwasm/team/issues/215\" rel=\"nofollow noreferrer\">this issue</a> I found out that rust-lld is not distributed in binary form for ARM systems, so I had to compile it from sources:</p>\n<pre><code>$ ld.lld --version\nLLD 10.0.0 (https://github.com/llvm/llvm-project.git 1c247dd028b368875bc36cd2a9ccc7fd90507776) (compatible with GNU linkers)\n</code></pre>\n<p>Now the compilation process completes without issues:</p>\n<pre><code>export RUSTFLAGS=&quot;-C linker=ld.lld&quot;\ncargo build\n</code></pre>\n<p>However the resulting elf file seems to be linked incorrectly: trying to load it with <code>gdb</code> through <code>openocd</code> results in some kind of silent failure:</p>\n<pre><code>(gdb) target remote :3333\nRemote debugging using :3333\n0x00000000 in ?? ()\n(gdb) load\nStart address 0x0, load size 0\nTransfer rate: 0 bits in &lt;1 sec.\n(gdb) \n</code></pre>\n<p>The load size is empty, so no new program is flashed. In contrast, when using the elf compiled in my Intel system (with <code>openocd</code> still running on the arm laptop) everything works as expected:</p>\n<pre><code>(gdb) target remote 192.168.1.153:3333\nRemote debugging using 192.168.1.153:3333\n0x00000000 in ?? ()\n(gdb) load\nLoading section .vector_table, size 0xc0 lma 0x8000000\nLoading section .text, size 0x686e lma 0x80000c0\nLoading section .rodata, size 0x4a0 lma 0x8006940\nStart address 0x8005b58, load size 28110\nTransfer rate: 19 KB/sec, 7027 bytes/write.\n(gdb)\n</code></pre>\n<p>It would seems like the elf is not linked correctly. Running <code>readelf -l</code> highlights that on my ARM system the entry point set is <code>0x0</code>, which is wrong for the stm32f0.\nThis is <code>readelf</code> on my ARM laptop:</p>\n<pre><code>lf file type is EXEC (Executable file)\nEntry point 0x0\nThere are 3 program headers, starting at offset 52\n\nProgram Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  PHDR           0x000034 0x00010034 0x00010034 0x00060 0x00060 R   0x4\n  LOAD           0x000000 0x00010000 0x00010000 0x00094 0x00094 R   0x1000\n  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0\n\n Section to Segment mapping:\n  Segment Sections...\n   00     \n   01     \n   02 \n</code></pre>\n<p>While this is from the elf that works, compiled under my Intel system:</p>\n<pre><code>Elf file type is EXEC (Executable file)\nEntry point 0x8005b59\nThere are 3 program headers, starting at offset 52\n\nProgram Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  LOAD           0x001000 0x08000000 0x08000000 0x06de0 0x06de0 R E 0x1000\n  LOAD           0x007de0 0x20000000 0x08006de0 0x00000 0x00028 RW  0x1000\n  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0\n\n Section to Segment mapping:\n  Segment Sections...\n   00     .vector_table .text .rodata \n   01     .data .bss \n   02     \n</code></pre>\n<p>I'm not sure if this has something to do with the target architecture being the same as the host (thus using the linux userland linking) or simple because arm systems are less supported.</p>\n<p>Can anyone point me in the right direction?</p>\n"}, {"tags": ["rust", "amethyst"], "comments": [{"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 0, "creation_date": 1574520677, "post_id": 59008310, "comment_id": 104265860, "body": "Can you try <code>RUST_BACKTRACE=1 cargo run</code>? It will show you where the panic originates, which may also be the offending line."}, {"owner": {"reputation": 445, "user_id": 8061828, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/06317685957055a3ca527087e4ee8c14?s=128&d=identicon&r=PG&f=1", "display_name": "BurningPapaya", "link": "https://stackoverflow.com/users/8061828/burningpapaya"}, "reply_to_user": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "edited": false, "score": 1, "creation_date": 1574690192, "post_id": 59008310, "comment_id": 104310276, "body": "@edwardw the error occurs after I have initialized <code>game_data</code> and then initialize application itself <code>let mut game = Application::new(assets_dir, Pong, game_data)?;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 539, "user_id": 2603535, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/1429398768/picture?type=large", "display_name": "Zach Dahl", "link": "https://stackoverflow.com/users/2603535/zach-dahl"}, "is_accepted": true, "score": 1, "last_activity_date": 1587594328, "creation_date": 1587594328, "answer_id": 61376116, "question_id": 59008310, "link": "https://stackoverflow.com/questions/59008310/amethyst-rust-cannot-insert-multiple-systems-with-the-same-name-parent-hiera/61376116#61376116", "title": "Amethyst Rust: &#39;Cannot insert multiple systems with the same name (&quot;parent_hierarchy_system&quot;) when running pong tutorial", "body": "<p>You have added the <code>TransformBundle</code> twice.</p>\n\n<p>Removing one will remove this error.</p>\n"}], "owner": {"reputation": 445, "user_id": 8061828, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/06317685957055a3ca527087e4ee8c14?s=128&d=identicon&r=PG&f=1", "display_name": "BurningPapaya", "link": "https://stackoverflow.com/users/8061828/burningpapaya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 61376116, "answer_count": 1, "score": 1, "last_activity_date": 1587594328, "creation_date": 1574516836, "question_id": 59008310, "link": "https://stackoverflow.com/questions/59008310/amethyst-rust-cannot-insert-multiple-systems-with-the-same-name-parent-hiera", "title": "Amethyst Rust: &#39;Cannot insert multiple systems with the same name (&quot;parent_hierarchy_system&quot;) when running pong tutorial", "body": "<p>I am learning Amethyst framework for Rust. And now I follow pong tutorial <a href=\"https://book.amethyst.rs/stable/pong-tutorial.html\" rel=\"nofollow noreferrer\">here</a>.\nOn step 3 (Moving paddles) tutorial teaches how to set up <code>System</code> for moving paddles.\nI followed all the steps, however when I <code>cargo run</code> my application i get an error:</p>\n\n<pre><code>thread 'main' panicked at 'Cannot insert multiple systems with the same name (\"parent_hierarchy_system\")', /home/path_to_cargo/shred-0.9.4/src/dispatch/builder.rs:172:17\n</code></pre>\n\n<p>I tried just to copy from GitHub repository of tutorial but get the same result.</p>\n\n<p>My <code>Cargo.toml</code> looks:</p>\n\n<pre><code>[package]\nname = \"pong\"\nversion = \"0.1.0\"\nauthors = []\nedition = \"2018\"\n\n[dependencies.amethyst]\nversion = \"0.13\"\nfeatures = [\"vulkan\"]\n</code></pre>\n\n<p>I run the project on Ubuntu 19.10.\nRust version 1.37.</p>\n\n<p>My guess is that <code>input_system</code> is somehow added twice when running. I have searched both tutorial repository for the same issue and the web. But it seems I am the only one who faced it. Perhaps solution is very easy but I have spent my Saturday trying to fix it.</p>\n\n<pre><code>let game_data = GameDataBuilder::default()\n    .with_bundle(TransformBundle::new())?\n    .with_bundle(input_bundle)?\n    .with(systems::PaddleSystem, \"paddle_system\", &amp;[\"input_system\"]) // Add this line\n    .with_bundle(\n        RenderingBundle::&lt;DefaultBackend&gt;::new()\n            .with_plugin(\n                RenderToWindow::from_config_path(display_config_path)\n                    .with_clear([0.0, 0.0, 0.0, 1.0]),\n            )\n            // RenderFlat2D plugin is used to render entities with a `SpriteRender` component.\n            .with_plugin(RenderFlat2D::default()),\n        )?\n    .with_bundle(TransformBundle::new())?;\n</code></pre>\n\n<p>The code of my <code>GameDataBuilder</code> initialization.</p>\n"}, {"tags": ["rust", "binary-tree"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574524092, "post_id": 59009299, "comment_id": 104266772, "body": "Not bad! I noticed <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=43a73c17f287d5f4748b3dcf15a4c26f\" rel=\"nofollow noreferrer\">you don&#39;t need <code>Clone</code> if you can use a reference</a>. You could also call <code>fmt_tree</code> from inside <code>Display</code> instead of the other way around, and then you don&#39;t have to expose the internals."}, {"owner": {"reputation": 155, "user_id": 1904497, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/STG9Y.jpg?s=128&g=1", "display_name": "ksceriath", "link": "https://stackoverflow.com/users/1904497/ksceriath"}, "edited": false, "score": 0, "creation_date": 1574536992, "post_id": 59009299, "comment_id": 104270509, "body": "This works! I would implement a sort of a to_string function, and then use it inside println! I, however, was looking if there is a proper way to do this recursively with fmt::Display itself."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574542940, "post_id": 59009299, "comment_id": 104272059, "body": "Also, stock <code>&amp;String</code> in this case make more sense cause you don&#39;t have to match self for the final printing."}], "tags": [], "owner": {"reputation": 230, "user_id": 10566115, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0xjWM.jpg?s=128&g=1", "display_name": "Nihar Karve", "link": "https://stackoverflow.com/users/10566115/nihar-karve"}, "is_accepted": false, "score": 2, "last_activity_date": 1574523770, "creation_date": 1574523770, "answer_id": 59009299, "question_id": 59008063, "link": "https://stackoverflow.com/questions/59008063/printing-all-paths-from-root-to-leaf/59009299#59009299", "title": "Printing all paths from root to leaf", "body": "<pre><code>use std::fmt;\n\n#[derive(Clone)]\nenum Node {\n    Nil,\n    Data(String, Box&lt;Node&gt;, Box&lt;Node&gt;),\n}\n\n\nimpl Node {\n    fn fmt_tree(&amp;self, path: &amp;mut Vec&lt;Node&gt;) {\n        match self {\n            Node::Nil =&gt; {\n                for node in path {\n                    print!(\"{} -&gt; \", node);\n                }\n                println!(\"{}\", self);\n            },\n            Node::Data(_, left, right) =&gt; {\n                path.push(self.clone());\n                left.fmt_tree(path);\n                right.fmt_tree(path);\n                path.pop();\n            },\n        }\n    }\n}\n\nimpl fmt::Display for Node {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Node::Nil =&gt; write!(f, \"Nil\"),\n            Node::Data(s, _, _) =&gt; write!(f, \"{}\", s)\n        }\n    }\n}\n\nfn main() {\n\n    let tree = Node::Data(String::from(\"a\"),\n                            Box::new(Node::Data(String::from(\"b\"),\n                                        Box::new(Node::Data(String::from(\"c\"),\n                                                    Box::new(Node::Nil), Box::new(Node::Nil))),\n                                        Box::new(Node::Data(String::from(\"d\"),\n                                                    Box::new(Node::Nil), Box::new(Node::Nil))))),\n                            Box::new(Node::Data(String::from(\"e\"),\n                                        Box::new(Node::Nil), Box::new(Node::Nil))));\n\n    tree.fmt_tree(&amp;mut Vec::new());\n}\n</code></pre>\n\n<p>prints:</p>\n\n<pre><code>a -&gt; b -&gt; c -&gt; Nil\na -&gt; b -&gt; c -&gt; Nil\na -&gt; b -&gt; d -&gt; Nil\na -&gt; b -&gt; d -&gt; Nil\na -&gt; e -&gt; Nil\na -&gt; e -&gt; Nil\n</code></pre>\n\n<p>exactly, using a simple recursive depth-first binary tree search (in <code>fmt_tree</code>)</p>\n"}], "owner": {"reputation": 155, "user_id": 1904497, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/STG9Y.jpg?s=128&g=1", "display_name": "ksceriath", "link": "https://stackoverflow.com/users/1904497/ksceriath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1574523770, "creation_date": 1574515058, "last_edit_date": 1574519555, "question_id": 59008063, "link": "https://stackoverflow.com/questions/59008063/printing-all-paths-from-root-to-leaf", "title": "Printing all paths from root to leaf", "body": "<p>I have a binary tree structure, and I am trying to print all the paths from root to leaf nodes using the <code>fmt::Display</code> trait in Rust.</p>\n\n<p>For example, for the following tree:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    a\n   / \\\n  b   e\n / \\\nc   d  \n</code></pre>\n\n<p>I want an output something like the following.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a -&gt; b -&gt; c -&gt; Nil\na -&gt; b -&gt; c -&gt; Nil\na -&gt; b -&gt; d -&gt; Nil\na -&gt; b -&gt; d -&gt; Nil\na -&gt; e -&gt; Nil\na -&gt; e -&gt; Nil\n</code></pre>\n\n<p>This is what I have:</p>\n\n<pre><code>use std::fmt;\n\nenum Node {\n    Nil,\n    Data(String, Box&lt;Node&gt;, Box&lt;Node&gt;),\n}\n\nimpl fmt::Display for Node {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        match self {\n            Node::Nil =&gt; write!(f, \"Nil\"),\n            Node::Data(data, left, right) =&gt; write!(f, \"{} -&gt; {} , {}\", data, *left, *right),\n        }\n    }\n}\n\nfn main() {\n    let tree = Node::Data(\n        String::from(\"a\"),\n        Box::new(Node::Data(\n            String::from(\"b\"),\n            Box::new(Node::Data(\n                String::from(\"c\"),\n                Box::new(Node::Nil),\n                Box::new(Node::Nil),\n            )),\n            Box::new(Node::Data(\n                String::from(\"d\"),\n                Box::new(Node::Nil),\n                Box::new(Node::Nil),\n            )),\n        )),\n        Box::new(Node::Data(\n            String::from(\"e\"),\n            Box::new(Node::Nil),\n            Box::new(Node::Nil),\n        )),\n    );\n\n    println!(\"{}\", tree);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=76af35929c56ee8c583b019a9380a9f4\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=76af35929c56ee8c583b019a9380a9f4</a></p>\n\n<p>I am not sure if it is possible to pass the parent node's information to the child nodes.</p>\n"}, {"tags": ["pointers", "memory", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574513519, "post_id": 59007464, "comment_id": 104264053, "body": "why it should if there is enough space ? <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cbe2d555c4c2ffbdef243ec986af6d2c\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> basic test would have give you the answer"}], "answers": [{"tags": [], "owner": {"reputation": 8861, "user_id": 298656, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/722360c2469d7dec462ada999a2f80a7?s=128&d=identicon&r=PG", "display_name": "jilles", "link": "https://stackoverflow.com/users/298656/jilles"}, "is_accepted": false, "score": 5, "last_activity_date": 1574513608, "creation_date": 1574513608, "answer_id": 59007828, "question_id": 59007464, "link": "https://stackoverflow.com/questions/59007464/why-address-of-pointer-doesnt-change-when-modifying-the-string-variable-in-rust/59007828#59007828", "title": "Why address of pointer doesn&#39;t change when modifying the string variable in Rust?", "body": "<p><code>Vec&lt;T&gt;</code> and <code>String</code> may maintain extra space to avoid allocating on every push operation. This provides amortized O(1) time for push operations.</p>\n\n<p>It happens to be the case that the <code>vec!</code> macro is guaranteed to create a vector without such extra space, while <code>String::from(&amp;str)</code> does not have such a guarantee.</p>\n\n<p>See <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation\" rel=\"noreferrer\">https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation</a> for more details.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1574514883, "last_edit_date": 1592644375, "creation_date": 1574513944, "answer_id": 59007880, "question_id": 59007464, "link": "https://stackoverflow.com/questions/59007464/why-address-of-pointer-doesnt-change-when-modifying-the-string-variable-in-rust/59007880#59007880", "title": "Why address of pointer doesn&#39;t change when modifying the string variable in Rust?", "body": "<p>A <code>String</code> is like a <code>Vec&lt;T&gt;</code>\u00b9 in that it has both a <a href=\"https://doc.rust-lang.org/std/string/struct.String.html?search=#method.len\" rel=\"nofollow noreferrer\"><code>len</code>gth</a> and a <a href=\"https://doc.rust-lang.org/std/string/struct.String.html?search=#method.capacity\" rel=\"nofollow noreferrer\"><code>capacity</code></a>. If the capacity of the current allocation is big enough to hold the new string, the underlying buffer does not need to be reallocated. <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#capacity-and-reallocation\" rel=\"nofollow noreferrer\">The documentation for <code>Vec&lt;T&gt;</code> explains it this way</a>:</p>\n<blockquote>\n<p>The capacity of a vector is the amount of space allocated for any future elements that will be added onto the vector. This is not to be confused with the length of a vector, which specifies the number of actual elements within the vector. If a vector's length exceeds its capacity, its capacity will automatically be increased, but its elements will have to be reallocated.</p>\n<p>For example, a vector with capacity 10 and length 0 would be an empty vector with space for 10 more elements. <strong>Pushing 10 or fewer elements onto the vector will not change its capacity or cause reallocation to occur.</strong></p>\n</blockquote>\n<p>However, even if the capacity <em>does</em> change, the pointer value is still not guaranteed to move. The system allocator itself may be able to resize the allocation without moving it if there is enough unallocated space adjacent to it. That appears to be what's happening in your code. If you print the capacity along with the pointer, you can observe this behavior:</p>\n<pre><code>let mut hello = String::from(&quot;hello&quot;);\nfor _ in 0..10 {\n    println!(&quot;({:3}) {:?}&quot;, hello.capacity(), hello.as_ptr()); // 0x7fcfa7c01be0\n    hello.push_str(&quot;, world!&quot;);\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>(  5) 0x557624d8da40\n( 13) 0x557624d8da40\n( 26) 0x557624d8dba0\n( 52) 0x557624d8dba0\n( 52) 0x557624d8dba0\n( 52) 0x557624d8dba0\n(104) 0x557624d8dba0\n(104) 0x557624d8dba0\n(104) 0x557624d8dba0\n(104) 0x557624d8dba0\n</code></pre>\n<p>In this example, the buffer was resized 4 times, but the contents were only moved once.</p>\n<hr />\n<p>\u00b9 Actually, a <code>String</code> <em>is</em> a newtyped <code>Vec&lt;u8&gt;</code>, which explains why they work the same.</p>\n"}], "owner": {"reputation": 432, "user_id": 8463154, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UEGMl.jpg?s=128&g=1", "display_name": "parksb", "link": "https://stackoverflow.com/users/8463154/parksb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 0, "accepted_answer_id": 59007880, "answer_count": 2, "score": 2, "last_activity_date": 1574514883, "creation_date": 1574511033, "question_id": 59007464, "link": "https://stackoverflow.com/questions/59007464/why-address-of-pointer-doesnt-change-when-modifying-the-string-variable-in-rust", "title": "Why address of pointer doesn&#39;t change when modifying the string variable in Rust?", "body": "<p>I thought rust makes another data on the heap memory when modifying the string. Therefore I expected a pointer address would change when I push a value to the string variable.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut hello = String::from(\"hello\");\n    println!(\"{:?}\", hello.as_ptr()); // 0x7fcfa7c01be0\n    hello.push_str(\", world!\");\n    println!(\"{:?}\", hello.as_ptr()); // 0x7fcfa7c01be0\n}\n</code></pre>\n\n<p>However, the result shows it's not. The address of the pointers was not changed, so I tested it with vector type.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut numbers = vec![1, 2, 3];\n    println!(\"{:?}\", numbers.as_ptr()); // 0x7ffac4401be0\n    numbers.push(4);\n    println!(\"{:?}\", numbers.as_ptr()); // 0x7ffac4401ce0\n}\n</code></pre>\n\n<p>The pointer address of the vector variable was changed when modifying it. What is the difference between the memory of string and vector type?</p>\n"}, {"tags": ["rust", "wasm-bindgen"], "comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1574504773, "post_id": 59006135, "comment_id": 104262282, "body": "Have you tried <code>wasm-opt</code> from <a href=\"https://github.com/WebAssembly/binaryen\" rel=\"nofollow noreferrer\">this project</a>? it would also be helpful if you tell us how exactly you built your wasm file. &quot;wasm-pack build&quot; is in the title, but we don&#39;t know a lot of other information. Would be useful if you&#39;d add them to your question. Thanks."}, {"owner": {"reputation": 51, "user_id": 11093057, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ZSlD8r-GIYM/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQNP-c18pvuFEGVlrlq5gp2oXO7LIg/mo/photo.jpg?sz=128", "display_name": "ProJin", "link": "https://stackoverflow.com/users/11093057/projin"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1574577432, "post_id": 59006135, "comment_id": 104277545, "body": "Yes, I tried: wasm-opt -Oz -o output.wasm input.wasm, but the problem still exists"}, {"owner": {"reputation": 51, "user_id": 11093057, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ZSlD8r-GIYM/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQNP-c18pvuFEGVlrlq5gp2oXO7LIg/mo/photo.jpg?sz=128", "display_name": "ProJin", "link": "https://stackoverflow.com/users/11093057/projin"}, "reply_to_user": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1574577508, "post_id": 59006135, "comment_id": 104277556, "body": "This is my build method: wasm-pack build --release"}], "owner": {"reputation": 51, "user_id": 11093057, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-ZSlD8r-GIYM/AAAAAAAAAAI/AAAAAAAAAAA/ACevoQNP-c18pvuFEGVlrlq5gp2oXO7LIg/mo/photo.jpg?sz=128", "display_name": "ProJin", "link": "https://stackoverflow.com/users/11093057/projin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1574500298, "creation_date": 1574500298, "question_id": 59006135, "link": "https://stackoverflow.com/questions/59006135/how-to-remove-binary-file-reference-information-from-wasm-pack-build", "title": "How to remove binary file reference information from wasm-pack build", "body": "<p><a href=\"https://i.stack.imgur.com/Zk3aI.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/Zk3aI.png\" alt=\"enter image description here\"></a></p>\n\n<p>When I edit wasm with text, there is a lot of unwanted information.</p>\n\n<p>Such as unnecessary \".cargo\\registry\\src\\github.com-1ecc6299db9ec823\"</p>\n\n<p>I am trying to add</p>\n\n<pre><code>[profile.release]\nlto = true\nopt-level = \"z\"\n</code></pre>\n\n<p>But the information still exists</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 2, "creation_date": 1574488762, "post_id": 59004640, "comment_id": 104259566, "body": "<code>writer1</code> lives in the scope of the loop. <code>vecs</code> lives outside. <code>writer1</code> is dropped at the end of the loop, but <code>vecs</code> probably is used later. But its contents <code>doing_this</code> depend (reference) on the dropped contents of <code>writer1</code>. If <code>doing_this</code> were a <code>Vec&lt;String&gt;</code> (owned) there would be no problem."}, {"owner": {"reputation": 360, "user_id": 2320392, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/V9UaC.jpg?s=128&g=1", "display_name": "JustDave", "link": "https://stackoverflow.com/users/2320392/justdave"}, "reply_to_user": {"reputation": 6608, "user_id": 4497253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dc929d11ae26463d18e337d295c86fcc?s=128&d=identicon&r=PG&f=1", "display_name": "CoronA", "link": "https://stackoverflow.com/users/4497253/corona"}, "edited": false, "score": 0, "creation_date": 1574496283, "post_id": 59004640, "comment_id": 104260654, "body": "I follow you @CoronA  doing_this is holding a &amp;str ref to writer1 that eventually goes out of scope. Though split_whitespace won&#39;t allow collect to be anything other than the underlying string, as it is an &amp;str iter so if you use collect it has to be a Vec&lt;&amp;str&gt;. I&#39;m not new to coding but this is way different to think about. I added my solution though I know there has to be something a bit more canonical.  I was hoping for a clone().collect()..."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574503719, "post_id": 59004640, "comment_id": 104262070, "body": "You should be able to use <code>.map(String::from)</code>, which will do same thing without additional closure noise. You cannot use clone here, because you&#39;re providing <code>&amp;str</code>&#39;s. Not that it&#39;s a bad thing, <code>&amp;String</code> is often code smell, because you provide unnecessary indirection for little to no gain. Also, the methods you use deliberately provide <code>&amp;str</code>, as you don&#39;t always want to copy data, which is both more performant and doesn&#39;t allocate more memory unless you yourself declare with <code>String::from</code>/<code>str::to_owned</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574516110, "post_id": 59004640, "comment_id": 104264664, "body": "You might find it helpful to read <a href=\"https://stackoverflow.com/questions/24158114/what-are-the-differences-between-rusts-string-and-str\">What are the differences between Rust&#39;s <code>String</code> and <code>str</code>?</a>"}, {"owner": {"reputation": 360, "user_id": 2320392, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/V9UaC.jpg?s=128&g=1", "display_name": "JustDave", "link": "https://stackoverflow.com/users/2320392/justdave"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574526013, "post_id": 59004640, "comment_id": 104267290, "body": "@Sahsahae I find myself unable to use the value in place due to &quot;temp free errors&quot; so I use a let binding for an intermediate and clone it so that I don&#39;t get those errors. So because I make a clone I don&#39;t want to keep cloning it or taking a full slice with something like &amp;writer1[] &lt;- that looks like a code smell and I reuse it so I can&#39;t move it so the only option is &amp;String. I deliberately say &lt;&amp;str&gt; because that is the is a &amp;str iter co collect is &amp;str until I clone it."}], "answers": [{"tags": [], "owner": {"reputation": 360, "user_id": 2320392, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/V9UaC.jpg?s=128&g=1", "display_name": "JustDave", "link": "https://stackoverflow.com/users/2320392/justdave"}, "is_accepted": true, "score": 0, "last_activity_date": 1574528778, "last_edit_date": 1574528778, "creation_date": 1574525407, "answer_id": 59009567, "question_id": 59004640, "link": "https://stackoverflow.com/questions/59004640/rust-e0597-borrowed-value-does-not-live-long-enough/59009567#59009567", "title": "Rust E0597 - borrowed value does not live long enough", "body": "<pre><code>        // changed this \n        let doing_this: Vec&lt;&amp;str&gt; = writer1.split_whitespace().collect();\n\n\n        // to this\n        let doing_this: Vec&lt;String&gt; =\n            writer1.split_whitespace().map(|x| x.to_owned()).collect();\n\n        // or as suggested to clean up the closure\n        let doing_this: Vec&lt;String&gt; =\n            writer1.split_whitespace().map(String::from).collect();\n</code></pre>\n"}], "owner": {"reputation": 360, "user_id": 2320392, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/V9UaC.jpg?s=128&g=1", "display_name": "JustDave", "link": "https://stackoverflow.com/users/2320392/justdave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 59009567, "answer_count": 1, "score": 0, "last_activity_date": 1574528778, "creation_date": 1574484900, "last_edit_date": 1574525224, "question_id": 59004640, "link": "https://stackoverflow.com/questions/59004640/rust-e0597-borrowed-value-does-not-live-long-enough", "title": "Rust E0597 - borrowed value does not live long enough", "body": "<p>Alright so, I'm about a month in on Rust and doing more mundane tasks in it just for exercise. I came across the calamine crate to read in data from excel. I thought I was well on my way to understand burrowing and ownership, but this one is new and even reading some other examples and looking in the docs didn't help explain it or I at least haven't came across it. So a basic for loop</p>\n\n<pre><code> for row in r.rows() {\n        let writer1 = row[11].to_string(); \n        if let Some(cap) = exp.captures(&amp;writer1) { // borrow here\n            println!(\"{} --- {}\", &amp;cap[1], &amp;cap[2]);\n        } else {\n            println!(\"{}\", &amp;writer1); // and borrow here\n        }\n        // This works fine... great\n        // writer1 is type String\n        // row     is type &amp;[calamine::datatype::DataType]\n\n        let doing_this: Vec&lt;&amp;str&gt; = writer1.split_whitespace().collect();\n\n        vecs.push(doing_this); // assume vecs exists above for\n    }\n</code></pre>\n\n<p>When I go to push the collection \"doing_this\" into a vector it gives the E0597 error. Can anyone help explain what is going on? I assume lifetimes but I already created a string from the column and took ownership.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1574481149, "post_id": 59004311, "comment_id": 104258631, "body": "Would you be allowed to destroy your <code>A</code>? IE drop it?"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1574483614, "post_id": 59004311, "comment_id": 104259016, "body": "@OptimisticPeach You mean the <code>A</code>&#39;s instance <code>a</code>? Yes!"}], "answers": [{"comments": [{"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1574484334, "post_id": 59004426, "comment_id": 104259094, "body": "Wow, great! I am surprised the code I&#39;ve wrote for the question&#39;s example, does work. That&#39;s of course not the real code I have in my app. Everything is a bit complicated in there. While writing this, I am starting to realise, while your answer is really great, I will not be able to use it because of the same reasons, why Rust didn&#39;t let me to use a simple <code>let b = a.v;</code> (<code>a</code> is a property of a borrowed reference), but at least you gave me these precious ideas!"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 0, "creation_date": 1574484460, "post_id": 59004426, "comment_id": 104259103, "body": "Regarding your note on <code>Drop</code>. I thought every struct implements <code>Drop</code> by default, isn&#39;t that the truth?"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "edited": false, "score": 1, "creation_date": 1574485689, "post_id": 59004426, "comment_id": 104259221, "body": "@NurbolAlpysbayev Nope. Yes, everything gets dropped (barring some special cases), but by default, structs drop recursively. This drops the fields independently, so they don&#39;t all have to be intact. Implementing <code>Drop</code> can override that, though. Since the <code>drop</code> method has (mutable) access to the object right before it&#39;s dropped, all the fields need to be intact. Try using the code in the answer with <code>impl Drop for A {fn drop(&amp;mut self) {}}</code> added in to see the error."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 4, "last_activity_date": 1574486249, "last_edit_date": 1574486249, "creation_date": 1574481951, "answer_id": 59004426, "question_id": 59004311, "link": "https://stackoverflow.com/questions/59004311/how-to-take-away-move-out-of-a-struct-field-that-contains-a-big-datastructure/59004426#59004426", "title": "How to take away (move out of) a struct field that contains a big datastructure type?", "body": "<p>Incidentally, what you already have written works. This transfers ownership of <code>a.v</code> to <code>b</code> invalidates <code>a</code> (the old variable no longer exists). That means that we don't need to replace the data we took out with valid data. That's one of the benefits of having ownership versus mere mutable access.</p>\n\n<pre><code>let a = A {\n    v: VeryLargeStructure {/* ... */},\n};\nlet b = a.v;\n// Now `b` has ownership of what was once `a.v`.\n// `a` no longer exists as a single entity,\n// but you could extract other fields too if you wish.\n// E.g. `let c = a.w` if `w` is some other field of `a`.\n</code></pre>\n\n<p>In context,</p>\n\n<pre><code>struct VeryLargeStructure {\n    // many tens of fields here\n}\n\nstruct A {\n    v: VeryLargeStructure,\n}\n\nfn main() {\n    let a = A {\n        v: VeryLargeStructure {/* ... */},\n    };\n    let b = a.v;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9f326e98245da2c6845c07312d45d087\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<hr>\n\n<p>The somewhat desugared version of this is <a href=\"https://doc.rust-lang.org/rust-by-example/flow_control/match/destructuring/destructure_structures.html\" rel=\"nofollow noreferrer\">destructuring</a>. It can be used to easily extract several fields at once. For a single field, though, <code>let b = a.v;</code> is probably preferred since it's simpler and clearer.</p>\n\n<pre><code>struct VeryLargeStructure {\n    // many tens of fields here\n}\n\nstruct A {\n    v: VeryLargeStructure,\n}\n\nfn main() {\n    let a = A {\n        v: VeryLargeStructure {/* ... */},\n    };\n    let A { v: b } = a;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b58ebbbca839acc89d6b2374526872b2\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<hr>\n\n<p>Note that if <code>A</code> implements <code>Drop</code>, it has to keep ownership of all its fields. That means you can never move out of it without replacement. Replacing data (e.g. with <code>mem::replace</code>) is fine, though.</p>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "accepted_answer_id": 59004426, "answer_count": 1, "score": 2, "last_activity_date": 1574486249, "creation_date": 1574480115, "last_edit_date": 1574483716, "question_id": 59004311, "link": "https://stackoverflow.com/questions/59004311/how-to-take-away-move-out-of-a-struct-field-that-contains-a-big-datastructure", "title": "How to take away (move out of) a struct field that contains a big datastructure type?", "body": "<p>I have a very large structure:</p>\n\n<pre><code>struct VeryLargeStructure {\n    // many tens of fields here\n}\n</code></pre>\n\n<p>And another structure that contains it in a field:</p>\n\n<pre><code>struct A {\n  v: VeryLargeStructure \n}\n</code></pre>\n\n<p>How do I move value from the <code>v</code> field...</p>\n\n<pre><code>let a = A{/* ... */}\nlet b = a.v;\n</code></pre>\n\n<p>...<em>without having to construct a new instance of VeryLargeStructure</em> for <code>a.v</code>, because that will be non-performant and useless?</p>\n\n<p>I am aware of <code>mem::replace</code> and <code>mem::swap</code>, but they do not satisfy said requirement.</p>\n\n<p>I prefer safe approach, but I suspect there isn't one, so I am also ready for an <code>unsafe</code> one.</p>\n"}, {"tags": ["rust", "lifetime"], "owner": {"reputation": 340, "user_id": 2862665, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/394d6a3e56f7f52c0888d3570cc71561?s=128&d=identicon&r=PG", "display_name": "monnoroch", "link": "https://stackoverflow.com/users/2862665/monnoroch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 442, "favorite_count": 3, "answer_count": 0, "score": 5, "last_activity_date": 1574606029, "creation_date": 1574469712, "last_edit_date": 1574606029, "question_id": 59003532, "link": "https://stackoverflow.com/questions/59003532/using-higher-ranked-trait-bounds-with-generics", "title": "Using higher-ranked trait bounds with generics", "body": "<p>I've stumbled upon an interesting edge case: using higher-ranked lifetime bounds to accept closures that return generic parameters, such as <code>for&lt;'a&gt; FnOnce(&amp;'a T) -&gt; R: MyTrait</code>. There's no way to specify that <code>R</code> lives for at most <code>'a</code>. Perhaps it's best to explain with an example.</p>\n\n<p>Let's define a simple reference-like type wrapping a value:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Source;\n\nstruct Ref&lt;'a&gt; {\n    source: &amp;'a Source,\n    value: i32,\n}\n</code></pre>\n\n<p>For convenience, let's add a helper constructor. Here I will use explicit lifetimes to make the borrowing self-explanatory:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl Source {\n    fn new_ref&lt;'a&gt;(&amp;'a self, value: i32) -&gt; Ref&lt;'a&gt; {\n        Ref { source: self, value }\n    }\n}\n</code></pre>\n\n<p>This is an extremely fancy implementation of a integer copying routine using HRTBs with a closure over our <code>Ref</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn call_1&lt;F&gt;(callback: F) -&gt; i32\nwhere\n    for&lt;'a&gt; F: FnOnce(&amp;'a Source) -&gt; Ref&lt;'a&gt;,\n{\n    let source = Source;\n    callback(&amp;source).value\n}\n\nfn fancy_copy_1(value: i32) -&gt; i32 {\n    call_1(|s| s.new_ref(value))\n}\n</code></pre>\n\n<p>This is fine and is working as expected. We know that <code>Ref</code> does not outlive the <code>Source</code> and the compiler is also able to pick it up. Now let's create a simple trait and implement it for our reference:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait MyTrait {\n    fn value(&amp;self) -&gt; i32;\n}\n\nimpl&lt;'a&gt; MyTrait for Ref&lt;'a&gt; {\n    fn value(&amp;self) -&gt; i32 {\n        self.value\n    }\n}\n</code></pre>\n\n<p>And modify our integer copying routine to return a generic type implementing that trait instead of just returning <code>Ref</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn call_2&lt;R, F&gt;(callback: F) -&gt; i32\nwhere\n    for&lt;'a&gt; F: FnOnce(&amp;'a Source) -&gt; R,\n    R: MyTrait,\n{\n    let source = Source;\n    callback(&amp;source).value()\n}\n\nfn fancy_copy_2(value: i32) -&gt; i32 {\n    call_2(|s| s.new_ref(value))\n}\n</code></pre>\n\n<p>Suddenly I get an error: <code>cannot infer an appropriate lifetime for autoref due to conflicting requirements</code>. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0120d3dcaa3a5d72ffdee9e0d1694351\" rel=\"nofollow noreferrer\">Rust playground link for convenience</a>. That actually makes sense from some perspective: unlike with <code>Ref&lt;'a&gt;</code> in the first example I never said that <code>R</code> has to live for at most <code>'a</code>. could very well live longer and thus have access to freed memory. So I need to annotate it with it's own lifetime. But there's no place to do it! The first instinct is to put the lifetime in the bounds:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>where\n    for&lt;'a&gt; F: FnOnce(&amp;'a Source) -&gt; R,\n    R: MyTrait + 'a,\n</code></pre>\n\n<p>which is of course incorrect, as <code>'a</code> is only defined for the first bound.</p>\n\n<p>This is where I got confused, started searching and never found anything about combining HRTBs and generic types in one bound. Perhaps more experienced people in Rust have any suggestions?</p>\n\n<p>Upd 1.</p>\n\n<p>While I was thinking about the problem some more, I remembered I could use the <code>impl Trait</code> syntax. This looks like a solution to my problem:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn call_3&lt;F&gt;(callback: F) -&gt; i32\nwhere\n     F: for&lt;'a&gt; FnOnce(&amp;'a Source) -&gt; (impl MyTrait + 'a),\n{\n    let source = Source;\n    callback(&amp;source).value()\n}\n\nfn fancy_copy_3(value: i32) -&gt; i32 {\n    call_3(|s| Box::new(s.new_ref(value)))\n}\n</code></pre>\n\n<p>That, however does not work because <code>impl MyTrait</code> is not allowed in this place for some reason (probably temporarily). But that made me think of <code>dyn Trait</code> syntax and that indeed does work!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn call_4&lt;F&gt;(callback: F) -&gt; i32\nwhere\n     F: for&lt;'a&gt; FnOnce(&amp;'a Source) -&gt; Box&lt;dyn MyTrait + 'a&gt;,\n{\n    let source = Source;\n    let value = callback(&amp;source); // note how a temporary is required\n    value.value()\n}\n\nfn fancy_copy_4(value: i32) -&gt; i32 {\n    call_4(|s| Box::new(s.new_ref(value)))\n}\n</code></pre>\n\n<p>Here's my solution: with  <code>dyn Trait</code> syntax there is a place to put the <code>+ 'a</code>! Unfortunately this solution still doesn't quite work for me too well, as it requires object-safety on the trait plus adds an overhead of allocating a boxed value. But at least it's something.</p>\n"}, {"tags": ["rust", "async-await", "future", "polling"], "answers": [{"tags": [], "owner": {"reputation": 2452, "user_id": 5082427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b04ffa64c1eeae620048e1ed31dab54f?s=128&d=identicon&r=PG&f=1", "display_name": "Wazner", "link": "https://stackoverflow.com/users/5082427/wazner"}, "is_accepted": false, "score": 2, "last_activity_date": 1574608528, "last_edit_date": 1574608528, "creation_date": 1574440808, "answer_id": 58998397, "question_id": 58995888, "link": "https://stackoverflow.com/questions/58995888/different-context-or-waker-for-each-future-in-async-rust/58998397#58998397", "title": "Different Context or Waker for each Future in Async Rust", "body": "<p>The method <a href=\"https://docs.rs/futures/0.3.1/futures/future/fn.join_all.html\" rel=\"nofollow noreferrer\"><code>futures::future::join_all</code></a> returns a future that polls the given futures in sequence, instead of in parallel. The way you should look at it, is that futures are nested and the executor will only have a reference to the top-most future that is scheduled (in this case the future returned by <code>futures::future::join_all</code>).\nThis means that when the join_all future is polled, it passes the context to the nested future its currently executing. Thereafter the join_all future will pass it to the next nested future and so on. Effectively using the same context for all nested futures. This can be verified by viewing the source code of the <a href=\"https://docs.rs/futures-util/0.3.1/src/futures_util/future/join_all.rs.html#130\" rel=\"nofollow noreferrer\"><code>JoinAll</code> future</a> in the futures crate.</p>\n\n<p>The <code>block_on</code> executor can only execute a single future at the time. Executors such as tokio that use thread pools can actually execute futures in parallel, and thus will use different contexts for different <strong>scheduled</strong> futures (But still the same one for JoinAll futures for the reasons described above).</p>\n"}], "owner": {"reputation": 1243, "user_id": 1682673, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/3c93dd597cdf4fa73876e42f96f17b2b?s=128&d=identicon&r=PG", "display_name": "rnbguy", "link": "https://stackoverflow.com/users/1682673/rnbguy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 346, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1574608528, "creation_date": 1574431473, "question_id": 58995888, "link": "https://stackoverflow.com/questions/58995888/different-context-or-waker-for-each-future-in-async-rust", "title": "Different Context or Waker for each Future in Async Rust", "body": "<p>I am trying to understand how polling works in a Async Rust Future. Using this following code, I tried to run two futures <code>Fut0</code> and <code>Fut1</code>, such that they interleave as following <code>Fut0 -&gt; Fut1 -&gt; Fut0 -&gt; Fut0</code>.</p>\n\n<pre><code>extern crate futures; // 0.3.1\n\nuse std::future::Future;\nuse std::pin::Pin;\nuse std::task::{Context, Poll, Waker};\n\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nuse std::collections::HashMap;\n\nuse futures::executor::block_on;\nuse futures::future::join_all;\n\n#[derive(Default, Debug)]\nstruct Fut {\n    id: usize,\n    step: usize,\n    wakers: Rc&lt;RefCell&lt;HashMap&lt;usize, Waker&gt;&gt;&gt;,\n}\n\nimpl Future for Fut {\n    type Output = ();\n\n    fn poll(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Self::Output&gt; {\n        self.step += 1;\n        println!(\"Fut{} at step {}\", self.id, self.step);\n\n        {\n            let mut wakers = self.wakers.borrow_mut();\n            wakers.insert(self.id, cx.waker().clone());\n        }\n\n        {\n            let next_id = (self.id + self.step) % 2;\n            let wakers = self.wakers.borrow();\n            if let Some(w) = wakers.get(&amp;next_id) {\n                println!(\"Waking up Fut{} from Fut{}\", next_id, self.id);\n                w.wake_by_ref();\n            }\n        }\n\n        if self.step &gt; 1 {\n            Poll::Ready(())\n        } else {\n            Poll::Pending\n        }\n    }\n}\n\nmacro_rules! create_fut {\n    ($i:ident, $e:expr, $w:expr) =&gt; (\n        let $i = Fut {\n            id: $e,\n            step: 0,\n            wakers: $w.clone(),\n        };\n    )\n}\n\nfn main() {\n    let wakers = Rc::new(RefCell::new(HashMap::new()));\n    create_fut!(fut0, 0, wakers);\n    create_fut!(fut1, 1, wakers);\n\n    block_on(join_all(vec![fut0, fut1]));\n}\n</code></pre>\n\n<p>But they are always being polled in round robin fashion i.e. <code>Fut0 -&gt; Fut1 -&gt; Fut0 -&gt; Fut1 -&gt; ...</code>.</p>\n\n<pre><code>Fut0 at step 1\nFut1 at step 1\nWaking up Fut0 from Fut1\nFut0 at step 2\nWaking up Fut0 from Fut0\nFut1 at step 2\nWaking up Fut1 from Fut1\n</code></pre>\n\n<p>It seems, all of their Contexts are same, hence the Wakers for the each Futures are same too. So waking one of them wakes the other. Is it possible to have different Context(or Waker) for each future?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 230, "user_id": 10566115, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0xjWM.jpg?s=128&g=1", "display_name": "Nihar Karve", "link": "https://stackoverflow.com/users/10566115/nihar-karve"}, "is_accepted": true, "score": 2, "last_activity_date": 1574421005, "last_edit_date": 1574421005, "creation_date": 1574400411, "answer_id": 58988035, "question_id": 58987875, "link": "https://stackoverflow.com/questions/58987875/how-to-limit-the-activation-bar-so-that-i-can-use-the-exp-function-for-type/58988035#58988035", "title": "How to limit the Activation bar so that I can use the exp () function for type &lt;T&gt;?", "body": "<p>Looks like you could use the num_traits crate:</p>\n\n<pre><code>use num_traits::float::Float;\n\npub trait Activation&lt;T: Float&gt; {\n    fn compute(&amp;self, input: &amp;Vec&lt;T&gt;) -&gt; Vec&lt;T&gt;;\n}\n\npub struct Sigmoid {}\nimpl Sigmoid {\n    pub fn new() -&gt; Sigmoid {\n        Sigmoid {}\n    }\n}\n\nimpl&lt;T&gt; Activation&lt;T&gt; for Sigmoid\n    where T: Float {\n\n    fn compute(&amp;self, input: &amp;Vec&lt;T&gt;) -&gt; Vec&lt;T&gt; {\n        let mut out: Vec&lt;T&gt; = vec![];\n        for (_, v) in input.iter().enumerate() {\n            let z = v.exp();\n            out.push(z);\n        }\n\n        out\n    }\n}\n</code></pre>\n\n<p>You can also implement this without the num crate, but its a tad ugly:</p>\n\n<pre><code>pub trait LocalFloat {\n    fn exp(self) -&gt; Self;\n}\n\nimpl LocalFloat for f32 {\n    fn exp(self) -&gt; Self {\n        f32::exp(self)\n    }\n}\n\nimpl LocalFloat for f64 {\n    fn exp(self) -&gt; Self {\n        f64::exp(self)\n    }\n}\n\npub trait Activation&lt;T: LocalFloat&gt; {\n    fn compute(&amp;self, input: &amp;Vec&lt;T&gt;) -&gt; Vec&lt;T&gt;;\n}\n\npub struct Sigmoid {}\nimpl Sigmoid {\n    pub fn new() -&gt; Sigmoid {\n        Sigmoid {}\n    }\n}\n\nimpl&lt;T&gt; Activation&lt;T&gt; for Sigmoid\n    where T: LocalFloat + Copy {\n\n    fn compute(&amp;self, input: &amp;Vec&lt;T&gt;) -&gt; Vec&lt;T&gt; {\n        let mut out: Vec&lt;T&gt; = vec![];\n        for (_, v) in input.iter().enumerate() {\n            let z = v.exp();\n            out.push(z);\n        }\n\n        out\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12411364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba0176e9230388cc591e24f1e062f842?s=128&d=identicon&r=PG&f=1", "display_name": "Tion", "link": "https://stackoverflow.com/users/12411364/tion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 58988035, "answer_count": 1, "score": 1, "last_activity_date": 1574421005, "creation_date": 1574399327, "last_edit_date": 1574409865, "question_id": 58987875, "link": "https://stackoverflow.com/questions/58987875/how-to-limit-the-activation-bar-so-that-i-can-use-the-exp-function-for-type", "title": "How to limit the Activation bar so that I can use the exp () function for type &lt;T&gt;?", "body": "<p>I am trying to make a sigmoid function that works with the numbers f32 and f64.\nThis code gets an error - no method named <code>exp</code> found for type<code>&amp; T</code> in the current scope.\nI think I know why this happens, and I want to explain to the compiler that the numbers will be F32 and F64, but I don\u2019t know how. Sorry for my English .</p>\n\n<pre><code>pub trait Activation&lt;T&gt; {\n  fn compute(&amp;self,input:&amp;Vec&lt;T&gt;) -&gt; Vec&lt;T&gt;;\n}\n\npub struct Sigmoid {}\n  impl Sigmoid {\n    pub fn new() -&gt; Sigmoid {\n      Sigmoid{}\n    }\n  }\n\n  impl&lt;T&gt; Activation&lt;T&gt; for Sigmoid {\n  fn compute(&amp;self, input: &amp;Vec&lt;T&gt;) -&gt; Vec&lt;&gt; {\n    let mut out:Vec&lt;T&gt; = vec![];\n      for (i,v) in input.iter().enumerate() {\n        let mut z =  *v.exp() ;\n        out.push(z);\n      }\n    out\n  }\n}\n</code></pre>\n"}, {"tags": ["rust", "wasm-bindgen"], "answers": [{"tags": [], "owner": {"reputation": 1959, "user_id": 421914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52130756638b6fbc9d74acd3aeec7657?s=128&d=identicon&r=PG", "display_name": "dchang", "link": "https://stackoverflow.com/users/421914/dchang"}, "is_accepted": true, "score": 5, "last_activity_date": 1574434353, "last_edit_date": 1574434353, "creation_date": 1574434032, "answer_id": 58996628, "question_id": 58987115, "link": "https://stackoverflow.com/questions/58987115/how-to-use-vect-as-return-type-and-make-it-readable-in-javascript-with-wasm-bi/58996628#58996628", "title": "How to use Vec&lt;T&gt; as return type and make it readable in Javascript with wasm_bindgen", "body": "<p>Doesn't look like it's possible yet, there's a related issue <a href=\"https://github.com/rustwasm/wasm-bindgen/issues/111\" rel=\"noreferrer\">here</a>. Some workarounds mentioned include serializing/deserializing bytes or JSON via Serde. But converting to a JS <code>Array</code> looks like a nicer workaround added by Pauan. With your example, see if this works for you:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use js_sys::Array;\nuse wasm_bindgen::prelude::*;\n\n#[wasm_bindgen]\npub struct Dummy {}\n\n#[wasm_bindgen]\npub fn test() -&gt; Array {\n    let dummies: Vec&lt;Dummy&gt; = vec![];\n    dummies.into_iter().map(JsValue::from).collect()\n}\n</code></pre>\n"}], "owner": {"reputation": 139, "user_id": 9395791, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a8c83e53212e368b0cf27c7e4e200ee?s=128&d=identicon&r=PG&f=1", "display_name": "buckle2000", "link": "https://stackoverflow.com/users/9395791/buckle2000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 676, "favorite_count": 1, "accepted_answer_id": 58996628, "answer_count": 1, "score": 5, "last_activity_date": 1574436268, "creation_date": 1574393768, "last_edit_date": 1574436268, "question_id": 58987115, "link": "https://stackoverflow.com/questions/58987115/how-to-use-vect-as-return-type-and-make-it-readable-in-javascript-with-wasm-bi", "title": "How to use Vec&lt;T&gt; as return type and make it readable in Javascript with wasm_bindgen", "body": "<p>I want to compile the following code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use wasm_bindgen::prelude::*;\n\n#[wasm_bindgen]\npub struct Dummy {}\n\n#[wasm_bindgen]\npub fn test() -&gt; Vec&lt;Dummy&gt; {\n    vec![]\n}\n</code></pre>\n\n<p>However, the compiler doesn't allow me to do that.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::boxed::Box&lt;[Dummy]&gt;: wasm_bindgen::convert::traits::IntoWasmAbi` is not satisfied\n  --&gt; xxxx\n   |\nXX | #[wasm_bindgen]\n   | ^^^^^^^^^^^^^^^ the trait `wasm_bindgen::convert::traits::IntoWasmAbi` is not implemented for `std::boxed::Box&lt;[Dummy]&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;std::boxed::Box&lt;[f32]&gt; as wasm_bindgen::convert::traits::IntoWasmAbi&gt;\n             &lt;std::boxed::Box&lt;[f64]&gt; as wasm_bindgen::convert::traits::IntoWasmAbi&gt;\n             &lt;std::boxed::Box&lt;[i16]&gt; as wasm_bindgen::convert::traits::IntoWasmAbi&gt;\n             &lt;std::boxed::Box&lt;[i32]&gt; as wasm_bindgen::convert::traits::IntoWasmAbi&gt;\n           and 9 others\n   = note: required because of the requirements on the impl of `wasm_bindgen::convert::traits::IntoWasmAbi` for `std::vec::Vec&lt;Dummy&gt;`\n</code></pre>\n\n<p>I'm using the latest version of wasm_bindgen (v0.2.55). I think this should be possible, right?</p>\n"}, {"tags": ["rust", "async-await", "hyper"], "comments": [{"owner": {"reputation": 3903, "user_id": 158913, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/90b5038827dc6dedece5166e5125bd47?s=128&d=identicon&r=PG", "display_name": "Vadym Chekan", "link": "https://stackoverflow.com/users/158913/vadym-chekan"}, "edited": false, "score": 0, "creation_date": 1574386199, "post_id": 58985476, "comment_id": 104224706, "body": "I am not sure what do you mean &quot;something to read&quot;. Can you provide function or trait as an example?"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1574417783, "post_id": 58985476, "comment_id": 104234936, "body": "I am not sure I see the difference, to be honest. Specifically, there is no API guarantee in Go or Java that when you return a chunk it will be written in full, the framework could only flush every 4KB for example. And conversely, there is nothing that prevents a Rust framework not to try and flush anything appearing in the response stream as soon as possible. It seems more like an implementation detail than an API construct to me."}], "owner": {"reputation": 11, "user_id": 12379806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/79626507509cae0fb32cf6cf2d9a8da7?s=128&d=identicon&r=PG&f=1", "display_name": "Peter Nehrer", "link": "https://stackoverflow.com/users/12379806/peter-nehrer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1574380201, "creation_date": 1574380201, "question_id": 58985476, "link": "https://stackoverflow.com/questions/58985476/why-do-rust-http-libraries-implement-both-request-and-response-body-as-something", "title": "Why do Rust HTTP libraries implement both request and response body as something to read?", "body": "<p>After reviewing several HTTP implementations in Rust I realized that all of them seem to implement message body as \"something to read\". For example, all of these are used as both request AND response bodies:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/http-body/0.2.0-alpha.3/http_body/trait.Body.html\" rel=\"nofollow noreferrer\">https://docs.rs/http-body/0.2.0-alpha.3/http_body/trait.Body.html</a></li>\n<li><a href=\"https://docs.rs/http-service/0.3.1/http_service/struct.Body.html\" rel=\"nofollow noreferrer\">https://docs.rs/http-service/0.3.1/http_service/struct.Body.html</a></li>\n<li><a href=\"https://docs.rs/hyper/0.13.0-alpha.4/hyper/body/trait.Payload.html\" rel=\"nofollow noreferrer\">https://docs.rs/hyper/0.13.0-alpha.4/hyper/body/trait.Payload.html</a></li>\n</ul>\n\n<p>Which means that when implementing a server endpoint, you are expected to provide a source of bytes that will be read whenever the server decides to read.</p>\n\n<p>But what if you need to control how the body is written into the response stream; e.g., when individual chunks need to be flushed exactly when needed?</p>\n\n<p>This is often required in order to implement something like Server-Sent Events or similar long-poll protocols.</p>\n\n<p>May other language frameworks (like Go or Java) model server response bodies (as well as client request bodies) as \"something to write\" -- the implementation controls when to write and flush the bytes.</p>\n\n<p>In Rust, and perhaps just those frameworks specifically, what is the reasoning for representing both request and response bodies as the same type/trait?</p>\n\n<p>Is there an HTTP framework (preferably async/await friendly) that doesn't?</p>\n"}, {"tags": ["postgresql", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574381942, "post_id": 58985290, "comment_id": 104223758, "body": "&quot;When asking the database to return data from a query, load should probably be used instead.&quot; <a href=\"https://docs.diesel.rs/diesel/query_dsl/trait.RunQueryDsl.html#method.execute\" rel=\"nofollow noreferrer\">docs.diesel.rs/diesel/query_dsl/&hellip;</a>"}, {"owner": {"reputation": 2330, "user_id": 939467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5c2ca1b3b94f649a13dfdee859a4db07?s=128&d=identicon&r=PG", "display_name": "Evan", "link": "https://stackoverflow.com/users/939467/evan"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574459176, "post_id": 58985290, "comment_id": 104254629, "body": "@Stargateur \u2014 Thanks, this worked: <code>diesel::select(my_add_fn).first(&amp;conn)</code>. (Where <code>first</code> and <code>load</code> are pretty similar.) If you want to write it up as a full answer, I&#39;ll mark it as accepted"}], "owner": {"reputation": 2330, "user_id": 939467, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/5c2ca1b3b94f649a13dfdee859a4db07?s=128&d=identicon&r=PG", "display_name": "Evan", "link": "https://stackoverflow.com/users/939467/evan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 621, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1574379357, "creation_date": 1574378984, "last_edit_date": 1574379357, "question_id": 58985290, "link": "https://stackoverflow.com/questions/58985290/how-to-get-return-value-from-a-diesel-sql-function", "title": "How to get return value from a Diesel sql function", "body": "<p>I have a SQL function (in Postgres) that I'd like to call using Diesel. I've declared it using the <code>sql_function!</code> macro, and I can call the function OK. But I'm not able to get the return value \u2014 it always returns <code>1</code>, which I'm assuming is a row count. How can I get the actual return value?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>sql_function! {\n    fn my_add(a: Int4, b: Int4) -&gt; Int4;\n}\n\nlet my_add_fn = my_add(2, 4);\nlet result = diesel::select(my_add_fn).execute(&amp;conn).unwrap();\ndbg!(&amp;result); // This prints 1. Should be 6\n</code></pre>\n\n<p>When I call <code>my_add</code> from the Postgres CLI, it works correctly:</p>\n\n<pre><code>select my_add(2, 4);\n my_add \n--------\n      6\n(1 row)\n</code></pre>\n\n<p>And here is the <code>my_add</code> function</p>\n\n<pre><code>CREATE OR REPLACE FUNCTION my_add(\n    a integer,\n    b integer\n)\n    RETURNS integer\nAS $$\nBEGIN\n    return a + b;\nEND;\n$$ LANGUAGE plpgsql\n    IMMUTABLE;\n</code></pre>\n"}, {"tags": ["rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1574414628, "creation_date": 1574414628, "answer_id": 58991100, "question_id": 58983585, "link": "https://stackoverflow.com/questions/58983585/i-am-getting-the-trait-bound-t-sns-pub-impl-deserialize-for-message-serde/58991100#58991100", "title": "I am getting the trait bound `T: sns_pub::_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` is not satisfied", "body": "<p>The provided code is missing <em>a lot</em> of information, and the error is actually caused by code that you didn't provide. This is why it's important to provide a [reprex].</p>\n\n<p>However, I can guess some of the code is actually from a method of <code>Message</code>, since it uses <code>self</code>. What you have missed is to but bounds on <code>T</code> for the impl block that defines the method:</p>\n\n<pre><code>impl&lt;T&gt; Message&lt;T&gt;\nwhere\n    T: Serialize + for&lt;'de&gt; Deserialize&lt;'de&gt;,\n{\n     /// methods go here \n{\n</code></pre>\n\n<p>I know this because the error message already tells you pretty much this exactly.</p>\n"}], "owner": {"reputation": 11, "user_id": 4571124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/050a5d25a8ad315604c296d9cd4e0d50?s=128&d=identicon&r=PG&f=1", "display_name": "ymoharaza", "link": "https://stackoverflow.com/users/4571124/ymoharaza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 185, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1574414835, "creation_date": 1574369633, "last_edit_date": 1574414835, "question_id": 58983585, "link": "https://stackoverflow.com/questions/58983585/i-am-getting-the-trait-bound-t-sns-pub-impl-deserialize-for-message-serde", "title": "I am getting the trait bound `T: sns_pub::_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` is not satisfied", "body": "<p>I am trying to serialize a stuct with a generic member I get the error 'equired because of the requirements on the impl of <code>sns_pub::_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize</code> for <code>sns_pub::Message&lt;T&gt;</code></p>\n\n<pre><code>#[derive(Debug, PartialEq, Serialize, Deserialize)]\n#[serde(bound(\nserialize = \"T: Serialize\",\ndeserialize = \"T: Deserialize&lt;'de&gt;\",\n))]\nstruct Message&lt;T&gt; {\n    topic: String,\n    message_id: String,\n    created_date: DateTime&lt;Utc&gt;,\n    message: T,\n    subject: String\n}\nlet msg = String::from(\"TEST_MESSAGE\"); \nlet message = Message {\n             topic: self.topic.clone(),\n             message_id: id.to_string(),\n             created_date: now,\n             subject: self.subject.clone(),\n             message: msg\n         };\nlet filename = format!(\"{}/{}_{}\", self.folder_path, prefix, id);\nlet mut file = File::create(filename.clone())?;\n file.write_all(serde_yaml::to_string(&amp;message)?.as_str())?;\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `T: sns_pub::_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` is not satisfied\n    --&gt; src/sns_pub.rs:57:46\n    | \n43  | impl&lt;T&gt; SnsPub&lt;T&gt; for DiskSnsPub {\n    |      - help: consider restricting this bound: `T: sns_pub::_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` ... \n57  |  file.write_all(serde_yaml::to_string(&amp;message)?.as_str())?;\n    |                                       ^^^^^^^^ the trait `sns_pub::_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` is not implemented for `T`\n    |     ::: /home/moharaza/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_yaml-0.8.11/src/ser.rs:421:8\n    | \n421 |     T: ser::Serialize,\n    |              -------------- required by this bound in `serde_yaml::ser::to_string`\n    |\n    = note: required because of the requirements on the impl of `sns_pub::_IMPL_DESERIALIZE_FOR_Message::_serde::Serialize` for `sns_pub::Message&lt;T&gt;`\n\nerror[E0308]: mismatched types\n</code></pre>\n"}, {"tags": ["multithreading", "parallel-processing", "rust"], "answers": [{"comments": [{"owner": {"reputation": 85, "user_id": 8003030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dc32b4332c9f7cb9cf94cef878b1a65?s=128&d=identicon&r=PG&f=1", "display_name": "Le Marin", "link": "https://stackoverflow.com/users/8003030/le-marin"}, "edited": false, "score": 0, "creation_date": 1574375534, "post_id": 58984477, "comment_id": 104222009, "body": "thanks you for your answer, these are very interesting insights I will dig into!  The benchmark code came with the exercise, so i have to work with it...  As for <code>chunk_size</code> and <code>worker_count</code>, the reason is that, as you mentioned, time per iteration is pretty low, so on small inputs time to spawn a thread &gt; time to do the task..."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574377736, "post_id": 58984477, "comment_id": 104222692, "body": "To add to this answer: complete <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=21c881f0b6fd6f64229c019a0bc8415f\" rel=\"nofollow noreferrer\">example</a> of improved code. <code>30</code> is a little too low to show paralleled improvement."}, {"owner": {"reputation": 85, "user_id": 8003030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dc32b4332c9f7cb9cf94cef878b1a65?s=128&d=identicon&r=PG&f=1", "display_name": "Le Marin", "link": "https://stackoverflow.com/users/8003030/le-marin"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574381477, "post_id": 58984477, "comment_id": 104223658, "body": "@Stargateur nicely done! Have you found a way around re-allocating each string?"}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 4, "last_activity_date": 1574377657, "last_edit_date": 1574377657, "creation_date": 1574374012, "answer_id": 58984477, "question_id": 58981542, "link": "https://stackoverflow.com/questions/58981542/how-can-i-improve-low-performance-in-parallel-code-in-vanilla-rust/58984477#58984477", "title": "How can i improve low performance in parallel code in vanilla rust?", "body": "<p>This is not a full or particularly nice answer, but only a few random things I noticed. Maybe it helps you:</p>\n\n<ul>\n<li><p>Due to high iterators work, you are always just creating a thread and immediately joining it again. Please try executing this code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b9d803d75fc5ddc225b626c06d8839d4\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n\n<pre><code>(0..3)\n    .map(|i| { println!(\"spawning {}\", i); i })\n    .map(|i| { println!(\"joining {}\", i); i })\n    .last(); \n</code></pre>\n\n<p>The output will probably surprise you. You can read a bit about iterator laziness <a href=\"https://doc.rust-lang.org/stable/std/iter/index.html#laziness\" rel=\"nofollow noreferrer\">here</a>, but it doesn't explain this particular situation, unfortunately. </p></li>\n<li><p>Your parallel and sequential benchmarks don't do the same. Parallel:</p>\n\n<pre><code>for c in string\n    .as_ref()\n    .to_lowercase()\n    .chars()\n    .filter(|c| c.is_alphabetic())\n{\n    *dic.entry(c).or_insert(0) += 1;\n}\n</code></pre>\n\n<p>Sequential:</p>\n\n<pre><code>for chr in line.chars().filter(|c| c.is_alphabetic()) {\n    if let Some(c) = chr.to_lowercase().next() {\n        (*map.entry(c).or_insert(0)) += 1;\n    }\n}\n</code></pre>\n\n<p>In particular, the parallel one calls <code>to_lowercase</code> on a <code>str</code>, returning a <code>String</code> and thus doing at least one heap allocation. That's a big nono. Furthermore, in the sequential case you only use the first character from the \"lowercased\" character. That's simply doing something completely different. It might not matter for your datasets, but just imagine if <a href=\"https://en.wikipedia.org/wiki/Ode_to_Joy\" rel=\"nofollow noreferrer\">Mr. Schiller</a> would have used <code>o</code> plus <code>U+0308 \u25cc\u0308 COMBINING DIAERESIS</code> instead of <code>U+00F6 LATIN SMALL LETTER O WITH DIAERESIS</code>! Then you would be in <a href=\"https://stackoverflow.com/a/35716552/2408867\">deep trouble</a>.</p></li>\n<li><p>Why the strange check of <code>chunk_size</code> and <code>worker_count</code>? If I'm doing the math right, for <code>small</code> and <code>tiny</code> you are not even spawning multiple threads because of that check. So the <code>parallel</code> in those benchmarks' names is a lie.</p></li>\n<li><p>800\u00b5s per iteration is not a lot. Creating threads takes time. Together with all the heap allocations you do to give each thread its own data, the advantage from multithreading is not very high.</p></li>\n<li><p>As you said, lots of heap allocation. Most of it can be avoided by using <code>crossbeam::scoped</code>, but since you are not allowed to you that, the next best bet would be to put all data into an <code>Arc</code> and give each thread a range to work in. Since everything (apart from the hash map per thread) is immutable, sharing these things should be easy.</p></li>\n</ul>\n\n<p>There are probably more things to improve, but that's the one I noticed now. I hope this helps!</p>\n"}], "owner": {"reputation": 85, "user_id": 8003030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dc32b4332c9f7cb9cf94cef878b1a65?s=128&d=identicon&r=PG&f=1", "display_name": "Le Marin", "link": "https://stackoverflow.com/users/8003030/le-marin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1574377657, "creation_date": 1574361044, "last_edit_date": 1574366705, "question_id": 58981542, "link": "https://stackoverflow.com/questions/58981542/how-can-i-improve-low-performance-in-parallel-code-in-vanilla-rust", "title": "How can i improve low performance in parallel code in vanilla rust?", "body": "<p>I am working on an exercism code exercise in which you have to count characters in a slice of string in parrallel. The code comes with some benchmarks to compare parallel vs. sequential performance.</p>\n\n<p>I added a constaint that is not using any threading library (crossbeam, rayon etc.), just vanilla rust.</p>\n\n<p>so far I have come up with this: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(test)]\nextern crate test;\n\npub mod parallel_letter_frequency {\n    use std::collections::HashMap;\n    use std::thread;\n\n    const MIN_CHUNCK_SIZE: usize = 15;\n\n    pub fn string_len&lt;T: AsRef&lt;str&gt;&gt;(strings: &amp;[T]) -&gt; HashMap&lt;char, usize&gt; {\n        let mut dic = HashMap::new();\n        for string in strings {\n            for c in string\n                .as_ref()\n                .to_lowercase()\n                .chars()\n                .filter(|c| c.is_alphabetic())\n            {\n                *dic.entry(c).or_insert(0) += 1;\n            }\n        }\n        dic\n    }\n\n    pub fn frequency(input: &amp;[&amp;str], worker_count: usize) -&gt; HashMap&lt;char, usize&gt; {\n        let chunk_size = input.len() / worker_count;\n\n        match (worker_count, chunk_size) {\n            (w, c) if w == 1 || c &lt; MIN_CHUNCK_SIZE =&gt; string_len(input),\n            _ =&gt; input\n                .chunks(chunk_size)\n                .map(|chunk| {\n                    let vals = chunk.iter().map(|s| s.to_string()).collect::&lt;Vec&lt;_&gt;&gt;();\n                    thread::spawn(move || -&gt; HashMap&lt;char, usize&gt; { string_len(&amp;vals) })\n                })\n                .map(|child| child.join().unwrap())\n                .fold(HashMap::new(), |mut acc, val| {\n                    val.iter()\n                        .for_each(|(k, v)| *(acc).entry(*k).or_insert(0) += v);\n                    acc\n                }),\n        }\n    }\n}\n\n#[cfg(test)]\nmod tests {\n    use crate::parallel_letter_frequency;\n    use std::collections::HashMap;\n    use test::Bencher;\n\n    #[bench]\n    fn bench_tiny_parallel(b: &amp;mut Bencher) {\n        let tiny = &amp;[\"a\"];\n        b.iter(|| parallel_letter_frequency::frequency(tiny, 3));\n    }\n\n    #[bench]\n    fn bench_tiny_sequential(b: &amp;mut Bencher) {\n        let tiny = &amp;[\"a\"];\n        b.iter(|| frequency(tiny));\n    }\n\n    #[bench]\n    fn bench_small_parallel(b: &amp;mut Bencher) {\n        let texts = all_texts(1);\n        b.iter(|| parallel_letter_frequency::frequency(&amp;texts, 3));\n    }\n\n    #[bench]\n    fn bench_small_sequential(b: &amp;mut Bencher) {\n        let texts = all_texts(1);\n        b.iter(|| frequency(&amp;texts));\n    }\n\n    #[bench]\n    fn bench_large_parallel(b: &amp;mut Bencher) {\n        let texts = all_texts(30);\n        b.iter(|| parallel_letter_frequency::frequency(&amp;texts, 3));\n    }\n\n    #[bench]\n    fn bench_large_sequential(b: &amp;mut Bencher) {\n        let texts = all_texts(30);\n        b.iter(|| frequency(&amp;texts));\n    }\n\n    /// Simple sequential char frequency. Can it be beat?\n    pub fn frequency(texts: &amp;[&amp;str]) -&gt; HashMap&lt;char, usize&gt; {\n        let mut map = HashMap::new();\n\n        for line in texts {\n            for chr in line.chars().filter(|c| c.is_alphabetic()) {\n                if let Some(c) = chr.to_lowercase().next() {\n                    (*map.entry(c).or_insert(0)) += 1;\n                }\n            }\n        }\n\n        map\n    }\n\n    fn all_texts(repeat: usize) -&gt; Vec&lt;&amp;'static str&gt; {\n        [ODE_AN_DIE_FREUDE, WILHELMUS, STAR_SPANGLED_BANNER]\n            .iter()\n            .cycle()\n            .take(3 * repeat)\n            .flat_map(|anthem| anthem.iter().cloned())\n            .collect()\n    }\n\n    // Poem by Friedrich Schiller. The corresponding music is the European Anthem.\n    pub const ODE_AN_DIE_FREUDE: [&amp;'static str; 8] = [\n        \"Freude sch\u00f6ner G\u00f6tterfunken\",\n        \"Tochter aus Elysium,\",\n        \"Wir betreten feuertrunken,\",\n        \"Himmlische, dein Heiligtum!\",\n        \"Deine Zauber binden wieder\",\n        \"Was die Mode streng geteilt;\",\n        \"Alle Menschen werden Br\u00fcder,\",\n        \"Wo dein sanfter Fl\u00fcgel weilt.\",\n    ];\n\n    // Dutch national anthem\n    pub const WILHELMUS: [&amp;'static str; 8] = [\n        \"Wilhelmus van Nassouwe\",\n        \"ben ik, van Duitsen bloed,\",\n        \"den vaderland getrouwe\",\n        \"blijf ik tot in den dood.\",\n        \"Een Prinse van Oranje\",\n        \"ben ik, vrij, onverveerd,\",\n        \"den Koning van Hispanje\",\n        \"heb ik altijd ge\u00eberd.\",\n    ];\n\n    // American national anthem\n    pub const STAR_SPANGLED_BANNER: [&amp;'static str; 8] = [\n        \"O say can you see by the dawn's early light,\",\n        \"What so proudly we hailed at the twilight's last gleaming,\",\n        \"Whose broad stripes and bright stars through the perilous fight,\",\n        \"O'er the ramparts we watched, were so gallantly streaming?\",\n        \"And the rockets' red glare, the bombs bursting in air,\",\n        \"Gave proof through the night that our flag was still there;\",\n        \"O say does that star-spangled banner yet wave,\",\n        \"O'er the land of the free and the home of the brave?\",\n    ];\n}\n</code></pre>\n\n<p>and here are my benchmarks:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test bench_large_parallel   ... bench:     851,675 ns/iter (+/- 92,416)                                                                                                                                              \ntest bench_large_sequential ... bench:     839,470 ns/iter (+/- 52,717)                                                                                                                                              \ntest bench_small_parallel   ... bench:      22,488 ns/iter (+/- 5,062)                                                                                                                                               \ntest bench_small_sequential ... bench:      28,692 ns/iter (+/- 1,406)                                                                                                                                               \ntest bench_tiny_parallel    ... bench:          76 ns/iter (+/- 3)                                                                                                                                                   \ntest bench_tiny_sequential  ... bench:          66 ns/iter (+/- 3)   \n</code></pre>\n\n<p>As you can see the performance of both sequential and parallel are pretty similar...</p>\n\n<p>I have to copy each chunk before i pass it to the thread so I don't have <code>'static</code> lifetime issue, that surely impacts performance, how can I address that?</p>\n\n<p>I tried to address spawn time overhead by counting small inputs on the main thread, is it good practice?</p>\n\n<p>What else is impacting performance here? What am I doing wrong?</p>\n"}, {"tags": ["string", "rust", "lifetime"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574359705, "post_id": 58981039, "comment_id": 104215129, "body": "&quot;I&#39;m trying to have a function return a &amp;&#39;a str from a String that&#39;s created inside the function:&quot; and so where the string will live ? you can&#39;t return local value in any language I know."}, {"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574360899, "post_id": 58981039, "comment_id": 104215704, "body": "The String won&#39;t live. I&#39;m only interested in creating a <code>&amp;&#39;a str</code> with the same contents"}, {"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574362267, "post_id": 58981039, "comment_id": 104216352, "body": "Or create a long-lived clone of the first apple, throw the first apple and give people the second one."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574362446, "post_id": 58981039, "comment_id": 104216425, "body": "yeah we call that apple, so in this context a STRING"}, {"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 2, "creation_date": 1574368837, "post_id": 58981039, "comment_id": 104219308, "body": "One useful thing to remember with Rust is that lifetimes are descriptive and not prescriptive. Apart from <code>static</code>s which live forever, you can&#39;t declare that you want a particular object to have a particular lifetime."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574504338, "post_id": 58981039, "comment_id": 104262202, "body": "Another way to look at it is that references should be passed &quot;up the stack&quot;, not &quot;down the stack&quot;. You have a value on lower end, you push reference upwards, another function that takes hold of reference might even push it higher... But reference can never be lower than the value itself. Not from the standpoint of implementation, but logic. Value should always be popped off <b><i>after</i></b> all references are. To avoid the impossibility of moving reference below the value in the stack... We create a new value and now we can put it anywhere, even move it downwards. You can never sanely avoid that."}, {"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "reply_to_user": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574516159, "post_id": 58981039, "comment_id": 104264678, "body": "@Sahsahae that&#39;s a really useful way to picture it, will keep it in mind. If I create a String on the top of the stack and pass it down when the function returns, I suppose it&#39;s the exact same memory being re-used ?"}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "edited": false, "score": 0, "creation_date": 1574539160, "post_id": 58981039, "comment_id": 104271084, "body": "You&#39;d have to look into what code LLVM generates to know what exactly happens. String struct itself is very cheap to copy, and actual <b><i>string</i></b> is on the heap. And what you&#39;re trying to avoid, as I understand, is allocation on the heap, that&#39;s simply not possible in this case."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574361861, "post_id": 58981521, "comment_id": 104216177, "body": "&quot;In the second example, longlife is a literal &amp;&#39;static str.&quot; not exactly, longlife have <code>&#39;a</code> lifetime but in the line is assigned to a static str, still longlife doesn&#39;t have a static lifetime."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574361882, "post_id": 58981521, "comment_id": 104216190, "body": "&quot;This quite simly means you leak the memory of the allocated String, making it live for at least as long as any &#39;a&quot; a leak is a leak, it will live as long as the program."}, {"owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "edited": false, "score": 0, "creation_date": 1574362103, "post_id": 58981521, "comment_id": 104216288, "body": "In the real code I will certainly change <code>strField</code> to a <code>String</code>. In other questions answers suggested returning the String, which is different than creating a <code>&amp;&#39;a str</code>. So I was still curious to know if this was impossible, or simply not the recommended way to do in other questions&#39; cases. Also it didn&#39;t occur to me that <code>longlife</code> was <code>&amp;&#39;static</code>, so thanks. By the way creating a <code>&amp;&#39;static</code> like <code>longlife</code> each time would re-use the same memory and not leak more over time ?"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1574363903, "post_id": 58981521, "comment_id": 104217093, "body": "Stargateur is correct that <code>longlife</code> is a <code>&amp;&#39;a str</code> which gets a <code>&amp;&#39;static str</code> assigned. Same argument applies: Since <code>&#39;static</code> outlives any <code>&#39;a</code>, the assignment is always sound."}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1574363998, "post_id": 58981521, "comment_id": 104217146, "body": "A literal like <code>let longlife = &quot;foobar&quot;</code> will always re-use the same memory and not leak over time. The literal is baked into the executable and, therefor, not even allocated on the heap in the first place"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 1, "last_activity_date": 1574360941, "creation_date": 1574360941, "answer_id": 58981521, "question_id": 58981039, "link": "https://stackoverflow.com/questions/58981039/get-a-str-with-longer-lifetime-than-the-current-function-from-a-string/58981521#58981521", "title": "Get `&amp;&#39;a str` with longer lifetime than the current function from a `String`", "body": "<p>This depends on how hard you need to try...</p>\n\n<p>In the second example, <code>longlife</code> is a literal <code>&amp;'static str</code>. Since <code>'static</code> lives for at least as long as any <code>'a</code> no matter what <code>'a</code> is, it's valid to be assigned to the return value via <code>S</code>. This is not very useful in the general case, though, since you can't modify a <code>&amp;'static str</code> for obvious reasons.</p>\n\n<p>I'd highly recommend to re-structure the code so there is an owner, <code>S</code> seems to be a candidate.</p>\n\n<p>You <em>can</em> make this work via <code>std::mem::forget</code>: You create the <code>String</code>, forget about it and manually derive a forced <code>&amp;'static str</code> from it. This quite simly means you leak the memory of the allocated String, making it live for at least as long as any <code>'a</code>. Most people would consider this simply a bug or at least a really ugly, ugly hack. But it's possible.</p>\n"}], "owner": {"reputation": 2754, "user_id": 1621232, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/4ca2ea1416fa3dc15d1037e6502ac4da?s=128&d=identicon&r=PG", "display_name": "Nicolas Marshall", "link": "https://stackoverflow.com/users/1621232/nicolas-marshall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "closed_date": 1574374372, "accepted_answer_id": 58981521, "answer_count": 1, "score": 0, "last_activity_date": 1574361069, "creation_date": 1574359100, "last_edit_date": 1574361069, "question_id": 58981039, "link": "https://stackoverflow.com/questions/58981039/get-a-str-with-longer-lifetime-than-the-current-function-from-a-string", "closed_reason": "Duplicate", "title": "Get `&amp;&#39;a str` with longer lifetime than the current function from a `String`", "body": "<p>Inside a function that returns a <code>&amp;'a str</code>, I created a <code>String</code>.\nI want to return a <code>&amp;'a str</code> with the same contents than this <code>String</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn givesString(A: &amp;str) -&gt; String {\n    String::from(\"example\")\n}\n\npub struct S&lt;'a&gt; {\n    pub strField: &amp;'a str,\n}\nimpl&lt;'a&gt; S&lt;'a&gt; {\n    pub fn from_String_A(A: &amp;'a str) -&gt; Result&lt;Self, Box&lt;dyn std::error::Error&gt;&gt; {\n        let processed_String = givesString(&amp;A);\n        let processed_str: &amp;'a str = a_processed_String.as_str();\n\n        Ok(Self {\n            strField: processed_str,\n        })\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b5f69f0499a5e554e0e7a132f1766cbf\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>which doesn't compile: the <code>borrowed value a_processed_String does not live long enough</code>, since it's dropped at the end of the function.</p>\n\n<p>I understand the <code>String</code> will be dropped no matter what. </p>\n\n<p>But now, if I create a <code>&amp;'a str</code> and pass it into the return value, it compiles with no issue:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn givesString(A: &amp;str) -&gt; String {\n    String::from(\"example\")\n}\n\npub struct S&lt;'a&gt; {\n    pub strField: &amp;'a str,\n}\nimpl&lt;'a&gt; S&lt;'a&gt; {\n    pub fn from_String_A(A: &amp;'a str) -&gt; Result&lt;Self, Box&lt;dyn std::error::Error&gt;&gt; {\n        let longlife: &amp;'a str = \"hello from the outside of this fn\";\n\n        Ok(Self {\n            strField: longlife,\n        })\n    }\n}\n\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7ab517d90573e518dd472b39692a54d0\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p><strong>So, is it possible to create a new <code>&amp;'a str</code> that, instead of borrowing from the <code>String</code> that will be dropped, simply points to some memory with a lifetime <code>'a</code> that holds the same contents as the <code>String</code> ?</strong></p>\n\n<p>There has been countless similar questions where the answer was to simply return a <code>String</code> instead, but let's assume I cannot touch the code for <code>givesString</code> or the struct <code>S</code></p>\n"}, {"tags": ["rust", "async-await", "threadpool"], "answers": [{"tags": [], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "is_accepted": false, "score": 0, "last_activity_date": 1574508440, "creation_date": 1574508440, "answer_id": 59007114, "question_id": 58980780, "link": "https://stackoverflow.com/questions/58980780/moving-a-arcfuture-into-threadpool/59007114#59007114", "title": "Moving a Arc&lt;Future&gt; into Threadpool", "body": "<p>This is possibly a non-problem. It can be done with an Arc as long as there is also a Box::pin as well.</p>\n\n<pre><code>   fn thread_pool() {\n        use futures::executor::ThreadPool;\n        use async_std::sync::Mutex;\n        let pool = ThreadPool::new().unwrap();\n\n        let mut map: BTreeMap&lt;i32, _&gt; = BTreeMap::new();\n        let fut =  Arc::new(Mutex::new(Box::pin(async {1})));\n        map.insert(1,fut);\n\n        let mut one = map.get(&amp;1).unwrap().clone();\n\n        pool.spawn(async move { \n            let mut guard = one.lock().await;\n            let x  = (&amp;mut *guard).await;\n        });\n\n    }\n</code></pre>\n\n<p>But is probably not necessary and may lead to undefined behaviour. For example once the future has completed the map holds a reference to a dead future which may be accessed. So the correct solution is not to store the future in a map in the first place. Using a <code>Box::pin</code> is sufficient</p>\n\n<pre><code>fn thread_pool() {\n    use futures::executor::ThreadPool;\n    let mut pool = ThreadPool::new().unwrap();\n    let fut = Box::pin(async {1});\n\n    pool.spawn(async move { \n        let x :i32 = fut.await;\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 2439, "user_id": 2294472, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/231b9fba4257295e39e1484a410d246d?s=128&d=identicon&r=PG", "display_name": "Delta_Fore", "link": "https://stackoverflow.com/users/2294472/delta-fore"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 288, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1574508440, "creation_date": 1574358070, "last_edit_date": 1574358621, "question_id": 58980780, "link": "https://stackoverflow.com/questions/58980780/moving-a-arcfuture-into-threadpool", "title": "Moving a Arc&lt;Future&gt; into Threadpool", "body": "<p>I have a simple example (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=af2a64330704da2f4b5abb18a15c8505\" rel=\"nofollow noreferrer\">Playground</a>) where in the first instance I'm using a Box::pin() to move a future into an local executor.</p>\n\n<pre><code>use std::collections::BTreeMap;\nuse futures::executor::LocalPool;\nuse futures::task::SpawnExt;\nuse std::sync::Arc;\n\nasync fn foo(input: i32) -&gt; i32 {\n    println!(\"foo {}\", input);\n    42 + input\n}\n\n\nfn code() {\n    let mut pool = LocalPool::new();\n    let mut map: BTreeMap&lt;i32, _&gt; = BTreeMap::new();\n    map.insert(1, Box::pin(foo(1)));\n    map.insert(2, Box::pin(foo(2)));\n\n    let mut two = map.get_mut(&amp;2).unwrap();\n    let mut one = map.get_mut(&amp;1).unwrap();\n\n    let spawner = pool.spawner();\n    spawner.spawn(async move { one.await; });\n//    println!(\"one: {} two: {}\", one, two);\n}\n\n\nfn code2() {\n    let mut pool = LocalPool::new();\n    let mut map: BTreeMap&lt;i32, _&gt; = BTreeMap::new();\n    map.insert(1, Arc::pin(foo(1)));\n    map.insert(2, Arc::pin(foo(2)));\n\n    let mut two = map.get_mut(&amp;2).unwrap();\n    let mut one = map.get(&amp;1).unwrap();\n\n    let spawner = pool.spawner();\n    let one = Arc::get_mut(&amp;mut one.clone());\n    spawner.spawn(async move { one.await; });\n//    println!(\"one: {} two: {}\", one, two);\n}\n\nfn main() {\n    code();\n}\n</code></pre>\n\n<p>In function code2() I'm replacing it with Arc, because instead of a localpool I want to utilise a threadpool. (not shown as that is not available in playground). Unfortunately it errors with</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:37:28\n   |\n37 |     let one = Arc::get_mut(&amp;mut one.clone()).unwrap();\n   |                            ^^^^^^^^^^^^^^^^ expected struct `std::sync::Arc`, found struct `std::pin::Pin`\n   |\n   = note: expected type `&amp;mut std::sync::Arc&lt;_&gt;`\n              found type `&amp;mut std::pin::Pin&lt;std::sync::Arc&lt;impl core::future::future::Future&gt;&gt;`\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>What is the appropriate way to move an <code>Arc</code>'d and <code>Pin</code>'ned future into a threadpool?</p>\n"}, {"tags": ["ubuntu", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574354599, "post_id": 58979682, "comment_id": 104212582, "body": "How did you install Rust? If you installed it with rustup, don&#39;t forget to install <code>build-essential</code>: <code># apt install build-essential</code>"}, {"owner": {"reputation": 93, "user_id": 11944806, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rcSqT.jpg?s=128&g=1", "display_name": "M Saad Sajid", "link": "https://stackoverflow.com/users/11944806/m-saad-sajid"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574354916, "post_id": 58979682, "comment_id": 104212753, "body": "&quot;sudo apt-get install update&quot;  &quot;sudo apt-get install crul&quot;   I use these commands, then I use this command    &quot;curl --proto &#39;=https&#39; --tlsv1.2 -sSf <a href=\"https://sh.rustup.rs\" rel=\"nofollow noreferrer\">sh.rustup.rs</a> | sh&quot;  And Installation starts."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574355455, "post_id": 58979682, "comment_id": 104213054, "body": "Well, so as I said, you must install the <code>build-essential</code> package"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1574355808, "post_id": 58979682, "comment_id": 104213247, "body": "Does this answer your question? <a href=\"https://stackoverflow.com/questions/52445961/how-do-i-fix-the-rust-error-linker-cc-not-found-for-debian-on-windows-10\">How do I fix the Rust error &quot;linker &#39;cc&#39; not found&quot; for Debian on Windows 10?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574553550, "post_id": 58980191, "comment_id": 104274323, "body": "@FrenchBoiethios That is very much true. My apologies, I&#39;m not very well-versed in how cases like these usually are handled on Stackexchange. Would it be better to not answer the question in the case that there is a linked duplicate (which this question doesn&#39;t seem to be flagged as any more?)?"}], "tags": [], "owner": {"reputation": 1093, "user_id": 9315690, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/747b19bfb99db8f9f3411c19da6c9c50?s=128&d=identicon&r=PG&f=1", "display_name": "Newbyte", "link": "https://stackoverflow.com/users/9315690/newbyte"}, "is_accepted": false, "score": -1, "last_activity_date": 1574356010, "creation_date": 1574356010, "answer_id": 58980191, "question_id": 58979682, "link": "https://stackoverflow.com/questions/58979682/linker-cc-not-found/58980191#58980191", "title": "linker `cc` not found,", "body": "<p>Your system is missing a C linker, which Rustup assumes that you already have. You can install one (among other potentially useful tools, like make) via the following command: </p>\n\n<p><code>sudo apt install build-essential</code></p>\n"}, {"tags": [], "owner": {"reputation": 93, "user_id": 11944806, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rcSqT.jpg?s=128&g=1", "display_name": "M Saad Sajid", "link": "https://stackoverflow.com/users/11944806/m-saad-sajid"}, "is_accepted": true, "score": 4, "last_activity_date": 1578552162, "last_edit_date": 1578552162, "creation_date": 1574679316, "answer_id": 59030162, "question_id": 58979682, "link": "https://stackoverflow.com/questions/58979682/linker-cc-not-found/59030162#59030162", "title": "linker `cc` not found,", "body": "<p>As mentioned, linker 'cc' is missing, \nUse command:</p>\n\n<p>\"sudo apt-get install gcc\"</p>\n\n<p>After that installation starts and problem solved.</p>\n"}], "owner": {"reputation": 93, "user_id": 11944806, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rcSqT.jpg?s=128&g=1", "display_name": "M Saad Sajid", "link": "https://stackoverflow.com/users/11944806/m-saad-sajid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1313, "favorite_count": 0, "accepted_answer_id": 59030162, "answer_count": 2, "score": 4, "last_activity_date": 1578552162, "creation_date": 1574354290, "last_edit_date": 1574355526, "question_id": 58979682, "link": "https://stackoverflow.com/questions/58979682/linker-cc-not-found", "title": "linker `cc` not found,", "body": "<p>After installing First time rust on ubuntu try to run this program.</p>\n\n<pre><code>fn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p><strong>Error:</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo run\n   Compiling test1 v0.1.0 (/home/saad/Documents/Rust/test1)\nerror: linker `cc` not found\n  |\n  = note: No such file or directory (os error 2)\n\nerror: aborting due to previous error\n\nerror: could not compile `test1`.\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 9614, "user_id": 7715250, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/21e16ee79a2d82cf66a9f8c9a45e4021?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/7715250/j-doe"}, "edited": false, "score": 0, "creation_date": 1574362955, "post_id": 58979617, "comment_id": 104216659, "body": "Ok, that compiles :). But the main question was: what are the differences between the two methods? When would you prefer one over the other?"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "reply_to_user": {"reputation": 9614, "user_id": 7715250, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/21e16ee79a2d82cf66a9f8c9a45e4021?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/7715250/j-doe"}, "edited": false, "score": 0, "creation_date": 1574400696, "post_id": 58979617, "comment_id": 104227852, "body": "Edited, hope this is the thing you&#39;ve asked for."}], "tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": false, "score": 1, "last_activity_date": 1574400679, "last_edit_date": 1574400679, "creation_date": 1574354094, "answer_id": 58979617, "question_id": 58979396, "link": "https://stackoverflow.com/questions/58979396/differences-generic-trait-bounded-method-vs-direct-trait-method/58979617#58979617", "title": "Differences generic trait-bounded method vs &#39;direct&#39; trait method", "body": "<p>The problem is not with the functions themselves, but with the trait bounds on types.</p>\n\n<p>Every generic types in Rust has an implicit <code>Sized</code> bound: since this is correct in the majority of cases, it was decided not to force the developer to write this out every time. But, if you are using this type only behind some kind of reference, as you do here, you may want to lift this restriction by specifying <code>T: ?Sized</code>. If you add this, your code will compile fine:</p>\n\n<pre><code>impl Consumer {\n    fn consume(eatable: &amp;dyn Eatable) {}\n    fn consume_generic&lt;T: Eatable + ?Sized&gt;(eatable: &amp;T) {}\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=91d211bc468e29ab6744bffc7424c6fb\" rel=\"nofollow noreferrer\">Playground as a proof</a></p>\n\n<hr>\n\n<p>As for the other questions, the main difference is in static vs dynamic dispatch.</p>\n\n<p>When you use the generic function (or the semantically equivalent <code>impl Trait</code> syntax), the function calls are dispatched statically. That is, for every type of argument you pass to the function, compiler generates the definition independently of others. This will likely result in more optimized code in most cases, but the drawbacks are possibly larger binary size and some limitations in API (e.g. you can't easily create a heterogeneous collection this way).</p>\n\n<p>When you use <code>dyn Trait</code> syntax, you opt in for dynamic dispatch. The necessary data will be stored into the table attached to trait object, and the correct implementation for every trait method will be chosen at runtime. The consumer, however, needs to be compiled only once. This is usually slower, both due to the indirection and to the fact that individual optimizations are impossible, but more flexible.</p>\n\n<hr>\n\n<p>As for the recommendations (note that this is an opinion, not the fact) - I'd say it's better to stick to generics whenever possible and only change it to trait objects if the goal is impossible to achieve otherwise.</p>\n"}], "owner": {"reputation": 9614, "user_id": 7715250, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/21e16ee79a2d82cf66a9f8c9a45e4021?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/7715250/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1574400679, "creation_date": 1574353350, "question_id": 58979396, "link": "https://stackoverflow.com/questions/58979396/differences-generic-trait-bounded-method-vs-direct-trait-method", "title": "Differences generic trait-bounded method vs &#39;direct&#39; trait method", "body": "<p>I have this code:</p>\n\n<pre><code>fn main() {\n    let p = Person;\n    let r = &amp;p as &amp;dyn Eatable;\n\n    Consumer::consume(r);\n    // Compile error\n    Consumer::consume_generic(r);\n}\n\ntrait Eatable {}\n\nstruct Person;\n\nimpl Eatable for Person {}\n\nstruct Consumer;\n\nimpl Consumer {\n    fn consume(eatable: &amp;dyn Eatable) {}\n    fn consume_generic&lt;T: Eatable&gt;(eatable: &amp;T) {}\n}\n</code></pre>\n\n<p>Error: </p>\n\n<blockquote>\n  <p>the size for values of type <code>dyn Eatable</code> cannot be known at\n  compilation time</p>\n</blockquote>\n\n<p>I think it is strange. I have a method that literally takes a <code>dyn Eatable</code> and compiles fine, so that method knows somehow the size of <code>Eatable</code>. The generic method (<code>consume_generic</code>) will properly compile down for every used type for performance and the <code>consume</code> method will not.</p>\n\n<p>So a few questions arise: why the compiler error? <strong>Are there things inside the body of the methods in which I can do something which I can not do in the other method?</strong> When should I prefer the one over the other?</p>\n\n<p>Sidenote: I asked this question for the language Swift as well: <a href=\"https://stackoverflow.com/questions/58962468/differences-generic-protocol-type-parameter-vs-direct-protocol-type\">Differences generic protocol type parameter vs direct protocol type</a>. In Swift I get the same compile error but the underlying error is different: protocols/traits do not conform to themselves (because Swift protocols can holds initializers, static things etc. which makes it harder to generically reference them). I also tried it in Java, I believe the generic type is erased and it makes absolutely no difference.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1574352257, "post_id": 58979033, "comment_id": 104211192, "body": "Of course there is no leak in this case. Do you imagine a modern language with such a flaw?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1574353706, "post_id": 58979033, "comment_id": 104212040, "body": "just test it <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=463feb204a32376690c1cd5da6af8e45\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 89, "user_id": 2906916, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OOQHm.jpg?s=128&g=1", "display_name": "Wazir Ahmed", "link": "https://stackoverflow.com/users/2906916/wazir-ahmed"}, "is_accepted": false, "score": 4, "last_activity_date": 1574356033, "creation_date": 1574356033, "answer_id": 58980197, "question_id": 58979033, "link": "https://stackoverflow.com/questions/58979033/when-does-rust-drop-the-value-in-case-of-reassignment/58980197#58980197", "title": "When does Rust drop the value in case of reassignment?", "body": "<p>After some research I got the answer.</p>\n\n<p>When a new value is assigned to a variable (by overwriting, not by shadowing) then the old value will be dropped as part of the assignment operation.</p>\n\n<p><strong>Reference</strong></p>\n\n<ul>\n<li><p><a href=\"https://stackoverflow.com/questions/48227347/does-rust-free-up-the-memory-of-overwritten-variables\">Does Rust free up the memory of overwritten variables?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/questions/47648958/whats-the-semantic-of-assignment-in-rust\">What&#39;s the semantic of assignment in Rust?</a></p></li>\n</ul>\n"}], "owner": {"reputation": 89, "user_id": 2906916, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OOQHm.jpg?s=128&g=1", "display_name": "Wazir Ahmed", "link": "https://stackoverflow.com/users/2906916/wazir-ahmed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 0, "closed_date": 1592234260, "answer_count": 1, "score": 1, "last_activity_date": 1592234268, "creation_date": 1574352082, "last_edit_date": 1574356110, "question_id": 58979033, "link": "https://stackoverflow.com/questions/58979033/when-does-rust-drop-the-value-in-case-of-reassignment", "closed_reason": "Duplicate", "title": "When does Rust drop the value in case of reassignment?", "body": "<pre><code>struct Item {\n    name: String,\n}\n\nimpl Item {\n    fn new(x: &amp;str) -&gt; Item {\n        Item { name: String::from(x) }\n    }\n\n    fn change_name(&amp;mut self, x: &amp;str) {\n        self.name = String::from(x);\n    }\n}\n\nfn main() {\n    let mut item1 = Item::new(\"Foo\");\n    item1.change_name(\"Bar\");\n}\n</code></pre>\n\n<p>When I call <code>item1.change_name()</code>, what will happen to the <code>String(\"Foo\")</code> assigned to the <code>name</code> previously. When will <code>drop()</code> be called on the <code>String(\"Foo\")</code>? Will this leak memory? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1608, "user_id": 1576254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jq33n.png?s=128&g=1", "display_name": "ikamen", "link": "https://stackoverflow.com/users/1576254/ikamen"}, "edited": false, "score": 0, "creation_date": 1574415560, "post_id": 58978339, "comment_id": 104233635, "body": "Does this cover case <code>(Some(child1), Some(child2))</code>? My test passes. So it will try the condition <code>if self.array[i] &lt; self.array[child]</code> on both children separately, and return false if any of them match?"}, {"owner": {"reputation": 1608, "user_id": 1576254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jq33n.png?s=128&g=1", "display_name": "ikamen", "link": "https://stackoverflow.com/users/1576254/ikamen"}, "edited": false, "score": 0, "creation_date": 1574415764, "post_id": 58978339, "comment_id": 104233756, "body": "Also, while you have provided a great solution to this specific problem, the answer to the question in the title is not given."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1608, "user_id": 1576254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jq33n.png?s=128&g=1", "display_name": "ikamen", "link": "https://stackoverflow.com/users/1576254/ikamen"}, "edited": false, "score": 0, "creation_date": 1574416343, "post_id": 58978339, "comment_id": 104234091, "body": "It is strictly equivalent to your code: if left has a child, it won&#39;t check for right. About the specific question, that&#39;s an XY problem: you thought that a good way to solve the issue was to refactor a block with <code>return</code> while the idiomatic solution is to use <code>all</code>/<code>any</code>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1574416955, "last_edit_date": 1574416955, "creation_date": 1574350027, "answer_id": 58978339, "question_id": 58978137, "link": "https://stackoverflow.com/questions/58978137/is-it-possible-to-factor-a-piece-of-function-containing-return-statement/58978339#58978339", "title": "Is it possible to factor a piece of function containing return statement?", "body": "<p>You can't refactor a code containing a statement like return into closures because it refers to the current scope.</p>\n\n<p>I would refactor it like that:</p>\n\n<pre><code>pub fn has_heap_property(&amp;self) -&gt; bool {\n    (0..self.array.len()).all(|i| match (self.left(i), self.right(i)) {\n        (Some(child), _) | (_, Some(child)) if self.array[i] &lt; self.array[child] =&gt; false,\n        _ =&gt; true,\n    })\n}\n</code></pre>\n"}], "owner": {"reputation": 1608, "user_id": 1576254, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Jq33n.png?s=128&g=1", "display_name": "ikamen", "link": "https://stackoverflow.com/users/1576254/ikamen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 58978339, "answer_count": 1, "score": -1, "last_activity_date": 1593019269, "creation_date": 1574349295, "last_edit_date": 1593019269, "question_id": 58978137, "link": "https://stackoverflow.com/questions/58978137/is-it-possible-to-factor-a-piece-of-function-containing-return-statement", "title": "Is it possible to factor a piece of function containing return statement?", "body": "<p>I have following code in my implementation of a Heap data structure:</p>\n<pre><code>pub fn has_heap_property(&amp;self) -&gt; bool{\n\n    for i in 0..self.array.len() {\n\n        match self.left(i) {\n            Some(child) =&gt; {\n                if self.array[i] &gt; self.array[child]{\n                    return false\n                }\n            }\n            None =&gt; {}\n        }\n        match self.right(i) {\n            Some(child) =&gt; {\n                if self.array[i] &gt; self.array[child]{\n                    return false\n                }\n            }\n            None =&gt; {}\n        }\n    }\n    true\n}\n</code></pre>\n<p>The 7 lines under <code>match self.left(i)</code> and <code>match self.right(i)</code> are identical. I would like to refactor this code not to have duplication, however due to return statement in the duplicated code, wrapping it into a closure would not allow to return from parent function. Is there a way to refactor this?</p>\n<p>My attempt is below, but it doesn't compile:</p>\n<pre><code>pub fn has_heap_property(&amp;self) -&gt; bool{\n\n    for i in 0..self.array.len() {\n\n        let check_child = |maybe_child: Option&lt;usize&gt;, usize|{\n            match maybe_child {\n                Some(child) =&gt; {\n                    if self.array[i] &gt; self.array[child]{\n                        return false;\n                    }\n                }\n                None =&gt; {}\n            }\n        };\n\n        check_child(self.left(i)); \n        check_child(self.right(i)); \n    }\n    true\n}\n</code></pre>\n<p>Full code:</p>\n<pre><code>/// This module defines the heap data structure\n\nuse std::fmt::Debug;\n\n#[derive(Debug)]\nstruct MaxHeap&lt;T&gt; {\n    array: Vec&lt;T&gt;,\n    heapsize: usize,\n}\n\nimpl&lt;T&gt; MaxHeap&lt;T&gt;\n    where T: std::cmp::Ord + Copy + Debug {\n    fn left(&amp;self, idx: usize) -&gt; Option&lt;usize&gt; {\n        let result = idx * 2 + 1;\n        if result &lt; self.heapsize {\n            Some(result)\n        } else {\n            None\n        }\n    }\n\n    fn right(&amp;self, idx: usize) -&gt; Option&lt;usize&gt; {\n        let result = idx * 2 + 2;\n        if result &lt; self.heapsize {\n            Some(result)\n        } else {\n            None\n        }\n    }\n\n    fn parent(idx: usize) -&gt; Option&lt;usize&gt; {\n        if idx &gt; 0 {\n            Some((idx - 1) / 2)\n        } else {\n            None\n        }\n    }\n\n    pub fn max_heapify(&amp;mut self, idx: usize) {\n        let mut options = vec![];\n\n        let mut maybe_option = |maybe_child: Option&lt;usize&gt;| {\n            match maybe_child {\n                Some(child_idx) =&gt; {\n                    options.push((&amp;self.array[child_idx], child_idx))\n                }\n                None =&gt; {}\n            }\n        };\n\n        maybe_option(self.left(idx));\n        maybe_option(self.right(idx));\n\n        let swap_with = options.iter().fold((&amp;self.array[idx], idx), |a, &amp;b| a.max(b)).1;\n\n        if swap_with == idx {\n            return;\n        } else {\n            self.array.swap(idx, swap_with);\n            self.max_heapify(swap_with);\n        }\n    }\n\n    pub fn build_heap(array: Vec&lt;T&gt;) -&gt; MaxHeap&lt;T&gt; {\n        let mut mh = MaxHeap { heapsize: array.len(), array };\n        for idx in (0..mh.heapsize / 2).rev() {\n            mh.max_heapify(idx);\n        }\n        mh\n    }\n\n    pub fn has_heap_property(&amp;self) -&gt; bool {\n        for i in 0..self.heapsize {\n            match self.left(i) {\n                Some(child) =&gt; {\n                    if self.array[i] &lt; self.array[child] {\n                        return false;\n                    }\n                }\n                None =&gt; {}\n            }\n            match self.right(i) {\n                Some(child) =&gt; {\n                    if self.array[i] &lt; self.array[child] {\n                        return false;\n                    }\n                }\n                None =&gt; {}\n            }\n        }\n        true\n    }\n\n    fn heapsort(&amp;mut self) {\n        while self.heapsize &gt; 0 {\n            self.array.swap(0, self.heapsize - 1);\n            self.heapsize -= 1;\n            self.max_heapify(0)\n        }\n    }\n\n    fn return_array(self) -&gt; Vec&lt;T&gt; {\n        self.array\n    }\n}\n\npub fn heapsort&lt;T&gt;(array: &amp;[T]) -&gt; Vec&lt;T&gt;\n    where T: std::cmp::Ord + Copy + Debug {\n\n    let mut mh = MaxHeap::build_heap(Vec::from(array));\n    mh.heapsort();\n    mh.return_array()\n}\n\nfn main() {\n    let mut mh = MaxHeap { array: vec![30, 100, 200, 10, 20, 30], heapsize: 6};\n    println!(&quot;Incorrect maxheap {:?} has max-heap property: {:?}&quot;, mh, mh.has_heap_property());\n\n    let mut mh = MaxHeap::build_heap(vec![30, 100, 200, 10, 20, 30]);\n    println!(&quot;Correct maxheap {:?} has max-heap property: {:?}&quot;, mh, mh.has_heap_property());\n}\n</code></pre>\n"}, {"tags": ["rust", "unsafe"], "answers": [{"comments": [{"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1574350615, "post_id": 58978379, "comment_id": 104210145, "body": "While I agree that using <code>Arc</code> may be the easiest solution possibly with no or small performance hit, this does not answer my question. My question is: &quot;Is the code I posted safe? If not, why?&quot; You are not correct about not being able to clone the <code>Rc</code> at all - you may clone it, then drop the clones, then you can verify that they are gone using <code>strong_count</code> and <code>weak_count</code>."}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1574351190, "post_id": 58978379, "comment_id": 104210481, "body": "Actually if you can give me source for the statement &quot;If you have never cloned the Rc, it is safe to send between threads.&quot;, then that would most likely answer my question."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1574351981, "post_id": 58978379, "comment_id": 104211010, "body": "@michalsrb (apart from <a href=\"https://github.com/rust-lang/rust/blob/master/src/liballoc/rc.rs\" rel=\"nofollow noreferrer\">this source</a>), it&#39;s just logic: there is no risk of data races on a variable that doesn&#39;t change, and which is only accessible in one thread!"}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1574355419, "post_id": 58978379, "comment_id": 104213030, "body": "That is true in today&#39;s implementation. But it could change tomorrow. Some types, e.g. <code>Box</code> or <code>Vec</code> provide guarantees that the internals will remain the same, I am not sure about <code>Rc</code>. But I guess it is mostly safe to assume it won&#39;t change to something crazy (e.g. using thread local storage)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "edited": false, "score": 0, "creation_date": 1574358469, "post_id": 58978379, "comment_id": 104214574, "body": "@michalsrb The principle of an <code>Rc</code> is not complex. It&#39;s difficult to imagine the fundamentals of the implementation changing."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1574350132, "creation_date": 1574350132, "answer_id": 58978379, "question_id": 58977260, "link": "https://stackoverflow.com/questions/58977260/is-it-safe-to-send-struct-containing-rc-if-strong-count-is-1-and-weak-count/58978379#58978379", "title": "Is it safe to `Send` struct containing `Rc` if strong_count is 1 and weak_count is 0?", "body": "<p>The only difference between <code>Arc</code> and <code>Rc</code> is that <code>Arc</code> uses atomic counters. The counters are only accessed when the pointer is cloned or dropped, so the difference between the two is negligible in applications which just share pointers between long-lived threads.</p>\n\n<p>If you have never cloned the <code>Rc</code>, it is safe to send between threads. However, if you can <em>guarantee</em> that the pointer is unique then you can make the same guarantee about a raw value, without using a smart pointer at all!</p>\n\n<p>This all seems quite fragile, for little benefit; future changes to the code might not meet your assumptions, and you will end up with Undefined Behaviour. I suggest that you at least try making some benchmarks with <code>Arc</code>. Only consider approaches like this when you measure a performance problem.</p>\n\n<hr>\n\n<p>You might also consider using the <a href=\"https://crates.io/crates/archery\" rel=\"nofollow noreferrer\"><code>archery</code> crate</a>, which provides a reference-counted pointer that abstracts over atomicity.</p>\n"}, {"tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": true, "score": 6, "last_activity_date": 1607861829, "last_edit_date": 1607861829, "creation_date": 1574439904, "answer_id": 58998150, "question_id": 58977260, "link": "https://stackoverflow.com/questions/58977260/is-it-safe-to-send-struct-containing-rc-if-strong-count-is-1-and-weak-count/58998150#58998150", "title": "Is it safe to `Send` struct containing `Rc` if strong_count is 1 and weak_count is 0?", "body": "<p><strong>No.</strong></p>\n<p>There are multiple points that need to be verified to be able to send <code>Rc</code> across threads:</p>\n<ol>\n<li>There can be no other handle (<code>Rc</code> or <code>Weak</code>) sharing ownership.</li>\n<li>The content of <code>Rc</code> must be <code>Send</code>.</li>\n<li>The implementation of <code>Rc</code> must use a thread-safe strategy.</li>\n</ol>\n<p>Let's review them in order!</p>\n<p><strong>Guaranteeing the absence of aliasing</strong></p>\n<p>While your algorithm -- checking the counts yourself -- works for now, it would be better to simply ask <code>Rc</code> whether it is aliased or not.</p>\n<pre><code>fn is_aliased&lt;T&gt;(t: &amp;mut Rc&lt;T&gt;) -&gt; bool { Rc::get_mut(t).is_some() }\n</code></pre>\n<p>The implementation of <a href=\"https://doc.rust-lang.org/std/rc/struct.Rc.html#method.get_mut\" rel=\"nofollow noreferrer\"><code>get_mut</code></a> will be adjusted should the implementation of <code>Rc</code> change in ways you have not foreseen.</p>\n<p><strong>Sendable content</strong></p>\n<p>While your implementation of <code>MyStruct</code> currently puts <code>String</code> (which is <code>Send</code>) into <code>Rc</code>, it could tomorrow change to <code>Rc&lt;str&gt;</code>, and then all bets are off.</p>\n<p>Therefore, the sendable check needs to be implemented at the <code>Rc</code> level itself, otherwise you need to audit any change to whatever <code>Rc</code> holds.</p>\n<pre><code>fn sendable&lt;T: Send&gt;(mut t: Rc&lt;T&gt;) -&gt; Result&lt;Rc&lt;T&gt;, ...&gt; {\n    if !is_aliased(&amp;mut t) {\n        Ok(t)\n    } else {\n        ...\n    }\n}\n</code></pre>\n<p><strong>Thread-safe <code>Rc</code> internals</strong></p>\n<p>And that... cannot be guaranteed.</p>\n<p>Since <code>Rc</code> is not <code>Send</code>, its implementation can be optimized in a variety of ways:</p>\n<ul>\n<li>The entire memory could be allocated using a thread-local arena.</li>\n<li>The counters could be allocated using a thread-local arena, separately, so as to seamlessly convert to/from <code>Box</code>.</li>\n<li>...</li>\n</ul>\n<p>This is not the case at the moment, AFAIK, however the API allows it, so the next release could definitely take advantage of this.</p>\n<hr />\n<p>What should you do?</p>\n<p>You could make <code>pack_for_sending</code> <code>unsafe</code>, and dutifully document all assumptions that are counted on -- I suggest using <code>get_mut</code> to remove one of them. Then, on each new release of Rust, you'd have to double-check each assumption to ensure that your usage if still safe.</p>\n<p>Or, if you do not mind making an allocation, you could write a conversion to <code>Arc&lt;T&gt;</code> yourself (see <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ed7d485b14c036c327a21a564653b34c\" rel=\"nofollow noreferrer\">Playground</a>):</p>\n<p>fn into_arc(this: Rc) -&gt; Result&lt;Arc, Rc&gt; {\nRc::try_unwrap(this).map(|t| Arc::new(t))\n}</p>\n<p>Or, you could write a RFC proposing a <code>Rc &lt;-&gt; Arc</code> conversion!</p>\n<p>The API would be:</p>\n<pre><code>fn Rc&lt;T: Send&gt;::into_arc(this: Self) -&gt; Result&lt;Arc&lt;T&gt;, Rc&lt;T&gt;&gt;\n\nfn Arc&lt;T&gt;::into_rc(this: Self) -&gt; Result&lt;Rc&lt;T&gt;, Arc&lt;T&gt;&gt;\n</code></pre>\n<p>This could be made very efficiently inside <code>std</code>, and could be of use to others.</p>\n<p>Then, you'd convert from <code>MyStruct</code> to <code>MySendableStruct</code>, just moving the fields and converting <code>Rc</code> to <code>Arc</code> as you go, send to another thread, then convert back to <code>MyStruct</code>.</p>\n<p>And you would not need any <code>unsafe</code>...</p>\n"}], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 0, "accepted_answer_id": 58998150, "answer_count": 2, "score": 7, "last_activity_date": 1607861829, "creation_date": 1574346518, "last_edit_date": 1574346980, "question_id": 58977260, "link": "https://stackoverflow.com/questions/58977260/is-it-safe-to-send-struct-containing-rc-if-strong-count-is-1-and-weak-count", "title": "Is it safe to `Send` struct containing `Rc` if strong_count is 1 and weak_count is 0?", "body": "<p>I have a struct that is not <code>Send</code> because it contains <code>Rc</code>. Lets say that <code>Arc</code> has too big overhead, so I want to keep using <code>Rc</code>. I would still like to occasionally <code>Send</code> this struct between threads, but only when I can verify that the <code>Rc</code> has strong_count 1 and weak_count 0.</p>\n\n<p>Here is (hopefully safe) abstraction that I have in mind:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod my_struct {\n    use std::rc::Rc;\n\n    #[derive(Debug)]\n    pub struct MyStruct {\n        reference_counted: Rc&lt;String&gt;,\n        // more fields...\n    }\n\n    impl MyStruct {\n        pub fn new() -&gt; Self {\n            MyStruct {\n                reference_counted: Rc::new(\"test\".to_string())\n            }\n        }\n\n        pub fn pack_for_sending(self) -&gt; Result&lt;Sendable, Self&gt; {\n            if Rc::strong_count(&amp;self.reference_counted) == 1 &amp;&amp;\n               Rc::weak_count(&amp;self.reference_counted) == 0\n            {\n                Ok(Sendable(self))\n            } else {\n                Err(self)\n            }\n        }\n\n        // There are more methods, some may clone the `Rc`!\n    }\n\n    /// `Send`able wrapper for `MyStruct` that does not allow you to access it,\n    /// only unpack it.\n    pub struct Sendable(MyStruct);\n\n    // Safety: `MyStruct` is not `Send` because of `Rc`. `Sendable` can be\n    //         only created when the `Rc` has strong count 1 and weak count 0.\n    unsafe impl Send for Sendable {}\n\n    impl Sendable {\n        /// Retrieve the inner `MyStruct`, making it not-sendable again.\n        pub fn unpack(self) -&gt; MyStruct {\n            self.0\n        }\n    }\n}\n\nuse crate::my_struct::MyStruct;\n\nfn main() {\n    let handle = std::thread::spawn(|| {\n        let my_struct = MyStruct::new();\n        dbg!(&amp;my_struct);\n\n        // Do something with `my_struct`, but at the end the inner `Rc` should\n        // not be shared with anybody.\n\n        my_struct.pack_for_sending().expect(\"Some Rc was still shared!\")\n    });\n\n    let my_struct = handle.join().unwrap().unpack();\n    dbg!(&amp;my_struct);\n}\n</code></pre>\n\n<p>I did a demo on the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9a117786de90cc8e99297dbc3d71bc2c\" rel=\"noreferrer\">Rust playground</a>.</p>\n\n<p>It works. My question is, is it actually safe?</p>\n\n<p>I know that the <code>Rc</code> is owned only by a single onwer and nobody can change that under my hands, because it can't be accessed by other threads and we wrap it into <code>Sendable</code> which does not allow access to the contained value.</p>\n\n<p>But in some crazy world <code>Rc</code> could for example internally use thread local storage and this would not be safe... So is there some guarantee that I can do this?</p>\n\n<p>I know that I must be extremely careful to not introduce some additional reason for the <code>MyStruct</code> to not be <code>Send</code>.</p>\n"}, {"tags": ["rust", "gtk", "glade", "gtk-rs"], "comments": [{"owner": {"reputation": 746, "user_id": 12126234, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b10a7b87642cedea860405eebe2625b2?s=128&d=identicon&r=PG&f=1", "display_name": "lb90", "link": "https://stackoverflow.com/users/12126234/lb90"}, "edited": false, "score": 0, "creation_date": 1574343889, "post_id": 58974527, "comment_id": 104205865, "body": "Please, add the gtk-rs tag"}], "answers": [{"tags": [], "owner": {"reputation": 1710, "user_id": 3898725, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/074CQ.jpg?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/3898725/michael"}, "is_accepted": false, "score": 3, "last_activity_date": 1574345229, "creation_date": 1574345229, "answer_id": 58976833, "question_id": 58974527, "link": "https://stackoverflow.com/questions/58974527/connect-to-custom-gtk-signals-defined-in-glade-file/58976833#58976833", "title": "Connect to custom GTK signals defined in Glade file", "body": "<p>This seems to be very new. The <a href=\"https://github.com/gtk-rs/gtk/pull/852\" rel=\"nofollow noreferrer\">pull request</a> is actually not in a stable release of gtk crate (as of v0.7.0). By using the git repo directly I managed to connect signals using <code>Builder::connect_signals()</code> like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// the handler\nfn on_start_clicked(param: &amp;[glib::Value]) -&gt; Option&lt;glib::Value&gt; {\n    println!(\"on_start_clicked fired!\");\n    None\n}\n\n// ...\n\n// connect all signals\nbuilder.connect_signals(|builder, handler_name| {\n    match handler_name {\n        // handler_name as defined in the glade file =&gt; handler function as defined above\n        \"_on_start_clicked\" =&gt; Box::new(on_start_clicked),\n        _ =&gt; Box::new(|_| {None})\n    }\n});\n</code></pre>\n\n<p>If still not in stable release use this dependency in Cargo.toml file:</p>\n\n<pre><code>[dependencies]\nglib = { git = \"https://github.com/gtk-rs/glib.git\" }\n\n[dependencies.gtk]\ngit = \"https://github.com/gtk-rs/gtk.git\"\nfeatures = [\"v3_22\"]\n</code></pre>\n"}], "owner": {"reputation": 1710, "user_id": 3898725, "user_type": "registered", "accept_rate": 44, "profile_image": "https://i.stack.imgur.com/074CQ.jpg?s=128&g=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/3898725/michael"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 532, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1574345246, "creation_date": 1574337565, "last_edit_date": 1574345246, "question_id": 58974527, "link": "https://stackoverflow.com/questions/58974527/connect-to-custom-gtk-signals-defined-in-glade-file", "title": "Connect to custom GTK signals defined in Glade file", "body": "<p>I want to connect a handler to a custom signal. In my glade file I have a window with some buttons. The window is loaded like this in Rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let glade_src = include_str!(\"views/window.glade\");\nlet builder = gtk::Builder::new_from_string(glade_src);\nlet window: gtk::ApplicationWindow = builder.get_object(\"Window\").expect(\"Couldn't get window view\");\nwindow.set_application(Some(app));\n</code></pre>\n\n<p>A button in this window has this signal defined:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;signal name=\"clicked\" handler=\"_on_start_clicked\" swapped=\"no\"/&gt;\n</code></pre>\n\n<p>In Python I can connect using simple method annotations:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>@Gtk.Template.Callback()\ndef _on_start_clicked(self, sender):\n    print(\"start clicked\")\n</code></pre>\n\n<p>But how can I connect a function in Rust to this signal?</p>\n\n<p>AFAIK I don't have such annotations in Rust. I'd need something like <code>window.connect_signal(\"_on_start_clicked\", handler);</code></p>\n\n<p>I'm using Rust and the gtk crate.</p>\n"}, {"tags": ["rust", "ethereum", "substrate", "parity-io", "evm"], "answers": [{"tags": [], "owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "is_accepted": true, "score": 1, "last_activity_date": 1574382479, "last_edit_date": 1574382479, "creation_date": 1574381188, "answer_id": 58985601, "question_id": 58972350, "link": "https://stackoverflow.com/questions/58972350/paint-evmevent-is-not-implemented-for-event/58985601#58985601", "title": "`paint_evm::Event` is not implemented for `Event`", "body": "<p>The error here is misleading. The real problem here is that you did not put the EVM module into your <code>construct_runtime!</code> macro.</p>\n\n<p>You need to add this line to you <code>construct_runtime!</code> definition:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>EVM: evm::{Module, Call, Storage, Config, Event},\n</code></pre>\n\n<p>To explain in a bit more detail, the <code>construct_runtime!</code> macro will implement the <code>core::convert::From&lt;YOUR_MODULE::Event&gt;</code> trait for each of <code>YOUR_MODULE</code>s. Because you did not include your module into the macro, it does not generate the trait implementation and you get the error you see here.</p>\n\n<p>This is why you see the error message suggest to you all of the other modules which do have this trait implemented, simply because they were included into your <code>construct_runtime!</code>. </p>\n\n<p>Once you add this line, you will get past the error you have shown here and find any <em>real</em> errors related to other parts of your configuration.</p>\n"}], "owner": {"reputation": 8871, "user_id": 1260906, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/aPM5A.png?s=128&g=1", "display_name": "Afr", "link": "https://stackoverflow.com/users/1260906/afr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 58985601, "answer_count": 1, "score": 1, "last_activity_date": 1574382479, "creation_date": 1574331129, "question_id": 58972350, "link": "https://stackoverflow.com/questions/58972350/paint-evmevent-is-not-implemented-for-event", "title": "`paint_evm::Event` is not implemented for `Event`", "body": "<p>Following the <a href=\"https://substrate.dev/docs/en/next/tutorials/adding-a-module-to-your-runtime\" rel=\"nofollow noreferrer\">adding a module to your runtime</a>, I'm trying to implement the <a href=\"https://github.com/paritytech/substrate\" rel=\"nofollow noreferrer\">Parity Substrate</a> <code>paint-evm</code> trait for the <a href=\"https://github.com/dothereum/dothereum/tree/beta/runtime\" rel=\"nofollow noreferrer\">Dothereum Runtime</a>. </p>\n\n<p>According to my previous work: <a href=\"https://stackoverflow.com/q/58942015/1260906\">How to implement the EVM Trait for a Substrate Runtime?</a></p>\n\n<p>I implemented the EVM Trait for the Dothereum Runtime:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Implement the EVM Trait for the Dothereum Runtime.\nimpl evm::Trait for Runtime {\n    type FeeCalculator = FixedGasPrice;\n    type ConvertAccountId = TruncatedAccountId;\n    type Currency = Balances;\n    type Event = Event;\n    type Precompiles = ();\n}\n</code></pre>\n\n<p>However, the <code>paint_evm::Event</code> trait is not implemented for <code>Event</code>: </p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>error: failed to run custom build command for `dothereum-runtime v0.2.2 (/home/user/.opt/dothereum/runtime)`\n\nCaused by:\n  process didn't exit successfully: `/home/user/.opt/dothereum/target/debug/build/dothereum-runtime-54902422e823ba8e/build-script-build` (exit code: 1)\n--- stdout\nExecuting build command: \"rustup\" \"run\" \"nightly\" \"cargo\" \"build\" \"--target=wasm32-unknown-unknown\" \"--manifest-path=/home/user/.opt/dothereum/target/debug/wbuild/dothereum-runtime/Cargo.toml\"\n\n--- stderr\n    Blocking waiting for file lock on package cache\n   Compiling wasm-build-runner-impl v1.0.0 (/home/user/.opt/dothereum/target/debug/wbuild-runner/dothereum-runtime)\n    Finished dev [unoptimized + debuginfo] target(s) in 1.62s\n     Running `/home/user/.opt/dothereum/target/debug/wbuild-runner/dothereum-runtime/target/debug/wasm-build-runner-impl`\n   Compiling dothereum-runtime v0.2.2 (/home/user/.opt/dothereum/runtime)\nerror[E0277]: the trait bound `Event: core::convert::From&lt;paint_evm::Event&gt;` is not satisfied\n   --&gt; /home/user/.opt/dothereum/runtime/src/lib.rs:255:2\n    |\n251 | impl evm::Trait for Runtime {\n    | --------------------------- in this `impl` item\n...\n255 |     type Event = Event;\n    |     ^^^^^^^^^^^^^^^^^^^ the trait `core::convert::From&lt;paint_evm::Event&gt;` is not implemented for `Event`\n    |\n    = help: the following implementations were found:\n              &lt;Event as core::convert::From&lt;paint_balances::RawEvent&lt;substrate_primitives::crypto::AccountId32, u128, paint_balances::DefaultInstance&gt;&gt;&gt;\n              &lt;Event as core::convert::From&lt;paint_grandpa::Event&gt;&gt;\n              &lt;Event as core::convert::From&lt;paint_indices::RawEvent&lt;substrate_primitives::crypto::AccountId32, u32&gt;&gt;&gt;\n              &lt;Event as core::convert::From&lt;paint_sudo::RawEvent&lt;substrate_primitives::crypto::AccountId32&gt;&gt;&gt;\n              &lt;Event as core::convert::From&lt;paint_system::Event&gt;&gt;\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: could not compile `dothereum-runtime`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n\n<p>What does the <code>paint_evm</code> module expect here. How can this be substituted?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574330862, "post_id": 58972143, "comment_id": 104198177, "body": "TLDR: that&#39;s the same thing. <code>next</code> is converted to a pointer to <code>Node</code>: <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d41d7d3ecea770280f3fadc2da0f170a\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}, {"owner": {"reputation": 3495, "user_id": 36585, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a0ccd55542e51b1b98f5a72b30c815dc?s=128&d=identicon&r=PG", "display_name": "pnkfelix", "link": "https://stackoverflow.com/users/36585/pnkfelix"}, "edited": false, "score": 6, "creation_date": 1574334184, "post_id": 58972143, "comment_id": 104200246, "body": "There are certainly differences between the two definitions. Differences which I argue are not explicitly covered by <a href=\"https://stackoverflow.com/questions/16504643/what-is-the-overhead-of-rusts-option-type\" title=\"what is the overhead of rusts option type\">stackoverflow.com/questions/16504643/&hellip;</a> . (For example, there are clear reasons to prefer <code>Node2</code> (the one that does <code>Option&lt;Box&lt;...&gt;&gt;</code>), but it is interesting to note that <code>Option&lt;Node&gt;</code> is itself smaller than <code>Option&lt;Node2&gt;</code>, because the former has a niche to store the discriminant.)"}], "owner": {"reputation": 1729, "user_id": 3859522, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/fe4a78465ab98520ed124337edad97c8?s=128&d=identicon&r=PG&f=1", "display_name": "Dulguun Otgon", "link": "https://stackoverflow.com/users/3859522/dulguun-otgon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1574338414, "creation_date": 1574330507, "question_id": 58972143, "link": "https://stackoverflow.com/questions/58972143/memory-layout-of-optionboxt-vs-boxoptiont-which-one-is-better", "title": "Memory layout of Option&lt;Box&lt;T&gt;&gt; vs Box&lt;Option&lt;T&gt;&gt;. Which one is better?", "body": "<p>Let's say I have these two structs</p>\n\n<pre><code>struct Node&lt;T&gt; {\n    value: T,\n    next: Box&lt;Option&lt;Node&lt;T&gt;&gt;&gt;\n}\n\nstruct Node2&lt;T&gt; {\n    value: T,\n    next: Option&lt;Box&lt;Node2&lt;T&gt;&gt;&gt;\n}\n</code></pre>\n\n<p>What's the difference in memory layout? Which one is better?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574327920, "post_id": 58971219, "comment_id": 104196222, "body": "<a href=\"https://docs.rs/tokio/0.2.0-alpha.6/tokio/timer/index.html\" rel=\"nofollow noreferrer\">https://docs.rs/tokio/0.2.0-alpha.6/tokio/timer/index.html</a>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574327950, "post_id": 58971219, "comment_id": 104196244, "body": "What is the problem you&#39;re trying to solve?"}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574328280, "post_id": 58971219, "comment_id": 104196455, "body": "@FrenchBoiethios trying to implement <code>you draw I guess</code> game server side, where every room have a timer to count down painter remain paint time"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574328390, "post_id": 58971219, "comment_id": 104196539, "body": "Oh, you want a tick system, so that everybody uses the same &quot;game time&quot;? You should elaborate on that in your question because as is, it is not super clear."}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574328483, "post_id": 58971219, "comment_id": 104196593, "body": "just a small piece of feature, don&#39;t want whole <code>tokio</code> thing, maybe I will eventually use it after I lose my patient"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1574328922, "post_id": 58971219, "comment_id": 104196901, "body": "Sounds like you just want an atomic integer to use across threads? Btw, if your C++ program was not using one, your C++ program was wrong."}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1574329446, "post_id": 58971219, "comment_id": 104197244, "body": "@mcarton the tricky thing is to modify value in the <code>&amp;mut self</code>, normal spawn need static lifetime. c++ with mutex or something is wayyyy straightforward to me than Rust, lifetime thing is really tricky"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1574356080, "post_id": 58975577, "comment_id": 104213397, "body": "First of all, thank you for your advice, but because that ` it has several rooms, each room have a timer to count down`, I need multiple Timer(Ticker) each have their own state, so I think it is a good idea to let each Timer instance have their own thread to take care itself, but I think your idea is feasible, each Timer only have their own state, there will be a dedicated thread to mutate them all"}], "tags": [], "owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "is_accepted": false, "score": 2, "last_activity_date": 1574340866, "creation_date": 1574340866, "answer_id": 58975577, "question_id": 58971219, "link": "https://stackoverflow.com/questions/58971219/how-to-let-struct-hold-a-thread-and-destroy-thread-as-soon-as-it-go-out-of-scope/58975577#58975577", "title": "How to let struct hold a thread and destroy thread as soon as it go out of scope", "body": "<p>What you want is so simple that you don't even need it to be mutable in any way, and then it becomes trivial to share it across threads, unless you want to reset it. You said you need to leave a thread, for one reason or another, therefore I'll assume that you don't care about this.</p>\n\n<p>You instead can poll it every tick (most games run in ticks so I don't think there will be any issue implementing that).</p>\n\n<p>I will provide example that uses sleep, so it's not most accurate thing, it is painfully obvious on the last subsecond duration, but I am not trying to do your work for you anyway, there's enough resources on internet that can help you deal with it.</p>\n\n<p>Here it goes:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    sync::Arc,\n    thread::{self, Result},\n    time::{Duration, Instant},\n};\n\nstruct Timer {\n    end: Instant,\n}\n\nimpl Timer {\n    fn new(duration: Duration) -&gt; Self {\n        // this code is valid for now, but might break in the future\n        // future so distant, that you really don't need to care unless\n        // you let your players draw for eternity\n        let end = Instant::now().checked_add(duration).unwrap();\n\n        Timer { end }\n    }\n\n    fn left(&amp;self) -&gt; Duration {\n        self.end.saturating_duration_since(Instant::now())\n    }\n\n    // more usable than above with fractional value being accounted for\n    fn secs_left(&amp;self) -&gt; u64 {\n        let span = self.left();\n\n        span.as_secs() + if span.subsec_millis() &gt; 0 { 1 } else { 0 }\n    }\n}\n\nfn main() -&gt; Result&lt;()&gt; {\n    let timer = Timer::new(Duration::from_secs(10));\n    let timer_main = Arc::new(timer);\n\n    let timer = timer_main.clone();\n    let t = thread::spawn(move || loop {\n        let seconds_left = timer.secs_left();\n        println!(\"[Worker] Seconds left: {}\", seconds_left);\n\n        if seconds_left == 0 {\n            break;\n        }\n\n        thread::sleep(Duration::from_secs(1));\n    });\n\n    loop {\n        let seconds_left = timer_main.secs_left();\n        println!(\"[Main] Seconds left: {}\", seconds_left);\n\n        if seconds_left == 5 {\n            println!(\"[Main] 5 seconds left, waiting for worker thread to finish work.\");\n            break;\n        }\n\n        thread::sleep(Duration::from_secs(1));\n    }\n\n    t.join()?;\n\n    println!(\"[Main] worker thread finished work, shutting down!\");\n\n    Ok(())\n}\n</code></pre>\n\n<p>By the way, this kind of implementation wouldn't be any different in any other language, so please don't blame Rust for it. It's not the easiest language, but it provides more than enough tools to build anything you want from scratch as long as you put effort into it.</p>\n\n<p>Goodluck :)</p>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "is_accepted": true, "score": 0, "last_activity_date": 1574427652, "last_edit_date": 1574427652, "creation_date": 1574420576, "answer_id": 58992903, "question_id": 58971219, "link": "https://stackoverflow.com/questions/58971219/how-to-let-struct-hold-a-thread-and-destroy-thread-as-soon-as-it-go-out-of-scope/58992903#58992903", "title": "How to let struct hold a thread and destroy thread as soon as it go out of scope", "body": "<p>I think I got it work</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\nuse std::thread::{sleep, spawn, JoinHandle};\nuse std::time::Duration;\n\nstruct Timer {\n    pub(crate) time: Arc&lt;Mutex&lt;u32&gt;&gt;,\n    jh_ticker: Option&lt;JoinHandle&lt;()&gt;&gt;,\n}\n\nimpl Timer {\n    fn new&lt;T&gt;(i: T, duration: Duration) -&gt; Self\n    where\n        T: Iterator&lt;Item = u32&gt; + Send + 'static,\n    {\n        let time = Arc::new(Mutex::new(0));\n\n        let arc_time = time.clone();\n        let jh_ticker = Some(spawn(move || {\n            for item in i {\n                let mut mg = arc_time.lock().unwrap();\n                *mg = item;\n                drop(mg); // needed, otherwise this thread will always hold lock\n                sleep(duration);\n            }\n        }));\n\n        Timer { time, jh_ticker }\n    }\n}\n\nimpl Drop for Timer {\n    fn drop(&amp;mut self) {\n        self.jh_ticker.take().unwrap().join();\n    }\n}\n\n#[test]\nfn test_timer() {\n    let t = Timer::new(0..=10, Duration::from_secs(1));\n    let a = t.time.clone();\n    for _ in 0..100 {\n        let b = *a.lock().unwrap();\n        println!(\"{}\", b);\n        sleep(Duration::from_millis(100));\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "accepted_answer_id": 58992903, "answer_count": 2, "score": 0, "last_activity_date": 1574427652, "creation_date": 1574327857, "last_edit_date": 1574382668, "question_id": 58971219, "link": "https://stackoverflow.com/questions/58971219/how-to-let-struct-hold-a-thread-and-destroy-thread-as-soon-as-it-go-out-of-scope", "title": "How to let struct hold a thread and destroy thread as soon as it go out of scope", "body": "<pre class=\"lang-rust prettyprint-override\"><code>struct ThreadHolder{\n  state: ???\n  thread: ???\n}\n\nimpl ThreadHolder {\n  fn launch(&amp;mut self) {\n    self.thread = ???\n    // in thread change self.state\n  }\n}\n\n#[test]\nfn test() {\n  let mut th = ThreadHolder{...};\n  th.launch();\n  // thread will be destroy as soon as th go out of scope\n}\n</code></pre>\n\n<p>I think there is something to deal with lifetime, but I don't know how to write it.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574327988, "post_id": 58970905, "comment_id": 104196272, "body": "There&#39;re tons of questions about tree structures in Rust. Did you see them?"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574328114, "post_id": 58970905, "comment_id": 104196350, "body": "@FrenchBoiethios I googled a bit and I&#39;ve seen some libraries for making trees. I didn&#39;t want to pull a new dependency and thought I&#39;ll make a very basic tree. Then I stumbled upon this error. I now have changed my mind and I am going to use a library. However, I am still curious how this basic logic could be handled in Rust. Also, I didn&#39;t find a similar-to-mine question."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574328219, "post_id": 58970905, "comment_id": 104196414, "body": "I was talking about SO questions: does this answer your question? <a href=\"https://stackoverflow.com/questions/36167160/how-do-i-express-mutually-recursive-data-structures-in-safe-rust\">How do I express mutually recursive data structures in safe Rust?</a> especially the Shepmaster&#39;s answer."}, {"owner": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1574328378, "post_id": 58970905, "comment_id": 104196530, "body": "how about using <code>hm.get_mut(&amp;2)</code>? <code>node</code> is an immutable reference, but <code>.remove()</code> obviously requires the reference it was invoked on to be mutable. Also, why remove the children explicitly in your example? They&#39;ll go out of scope with the removal of node 2 anyways"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1574328552, "post_id": 58970905, "comment_id": 104196644, "body": "@FrenchBoiethios Thanks so much for useful links! I am going to read them through."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1574328844, "post_id": 58970905, "comment_id": 104196848, "body": "@Sty no that doesn&#39;t help, unfortunately. Also, <code>remove()</code> already has the immutable reference <code>hm</code>. <code>remove</code> is on <code>hm</code>, not on <code>node</code>, you are probably confused on that. And... how are children going to go out of scope with the removal of node 2? That even doesn&#39;t make sense to me, sorry."}, {"owner": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1574329669, "post_id": 58970905, "comment_id": 104197378, "body": "@NurbolAlpysbayev oh, indeed I parsed that wrong and did not realise that the the entries in the children structs were supposed to be references to other nodes. Have you ever read about <a href=\"https://doc.rust-lang.org/book/ch15-00-smart-pointers.html\" rel=\"nofollow noreferrer\">pointers in Rust</a>, though? Trees should be recursive data structures and certainly don&#39;t benefit from this kind of indirection, so I&#39;d recommend using <code>Rc&lt;Node&gt;</code> or something for an actual tree structure"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 574, "user_id": 1545888, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/CSfE8.png?s=128&g=1", "display_name": "Sty", "link": "https://stackoverflow.com/users/1545888/sty"}, "edited": false, "score": 0, "creation_date": 1574329967, "post_id": 58970905, "comment_id": 104197585, "body": "@Sty Thanks for that advice. I believe <code>Rc</code> can&#39;t be a solution here, because I&#39;d still need to make mutable reference to the main hashmap at the same time with immutable one. I think I&#39;ll go with a crate (I thought it would be easier to implement a basic tree myself, but I was wrong)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574329979, "post_id": 58970905, "comment_id": 104197590, "body": "I notice the problem <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0745a2982784cfb6a53aa6911e6c2bb9\" rel=\"nofollow noreferrer\">goes away if you remove the parent first</a>. Failing that, you can still <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c021e19b111385a099ce6564dada81e1\" rel=\"nofollow noreferrer\">extract the children vec using <code>mem::replace</code></a>."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574330177, "post_id": 58970905, "comment_id": 104197724, "body": "@trentcl Wow! Interesting! Finally someone with the actual solution :D Why on earth I didn&#39;t think about that myself (I know why, I have been working for 14 hours already). And that <code>mem::replace</code> usage, great! Thank you so much!"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1574330370, "post_id": 58970905, "comment_id": 104197854, "body": "Glad to help! Another quick tip: A <code>match</code> that panics on <code>None</code> can usually be concisely replaced by a call to <code>.unwrap()</code> or <code>.expect(&quot;your error message here&quot;)</code>."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1574330546, "post_id": 58970905, "comment_id": 104197974, "body": "@trentcl Yep, just noticed and admired that :) However, in my actual app I don&#39;t panic so I can&#39;t use that unfortunately."}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 46, "favorite_count": 0, "closed_date": 1574329132, "answer_count": 0, "score": 0, "last_activity_date": 1574327208, "creation_date": 1574326865, "last_edit_date": 1574327208, "question_id": 58970905, "link": "https://stackoverflow.com/questions/58970905/cannot-borrow-x-as-mutable-because-it-is-also-borrowed-as-immutable", "closed_reason": "Duplicate", "title": "Cannot borrow x as mutable because it is also borrowed as immutable", "body": "<p>I am aware what this error means, I just don't have any idea how to solve this puzzle. As a short background - I need a tree structure in my app, I've discovered Rust doesn't play well with circular references, hence I am trying to implement a tree-like data structure myself (but the borrow checker doesn't let me do that either):</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e44e827d5b64fd16ffbbd82f47dcd5ca\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre><code>struct Node {\n    children: Vec&lt;i32&gt;,\n}\n\nlet mut hm = HashMap::new();\n\nhm.insert(1, Node { children: vec![] });\nhm.insert(2, Node { children: vec![1] });\n\n// Let's say I want to remove node 2...\nlet node = match hm.get(&amp;2) {\n    Some(node) =&gt; node,\n    None =&gt; panic!(\"\"),\n};\n\n// ...but first I want to remove its children:\nfor removable in &amp;node.children {\n    match hm.get(&amp;removable) {\n        Some(_) =&gt; hm.remove(&amp;removable), // cannot borrow `hm` as mutable because it is also borrowed as immutable\n        None =&gt; panic!(\"Oops, trying to remove data that's not there\"),\n    };\n}\n\n</code></pre>\n\n<p>How to solve that?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1574381214, "post_id": 58969846, "comment_id": 104223601, "body": "This way of thinking about the behaviour is overly simplified, the answer by user2722968 is more complete (but requires a deeper understanding of how all rusts syntax fits together.)"}], "tags": [], "owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "is_accepted": false, "score": 5, "last_activity_date": 1574322814, "creation_date": 1574322814, "answer_id": 58969846, "question_id": 58968488, "link": "https://stackoverflow.com/questions/58968488/why-is-this-mutexguard-not-dropped/58969846#58969846", "title": "Why is this MutexGuard not dropped?", "body": "<p>The temporaries are cleaned up at the end of the statement, not the end of the expression. </p>\n\n<p>In this case the whole while block is the statement, not just the expression inside the <code>let</code> pattern matching.</p>\n"}, {"comments": [{"owner": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 0, "creation_date": 1574381098, "post_id": 58975597, "comment_id": 104223567, "body": "That first link contains a counter-example to my simplified view of what was happening. &quot;<code>while foo(&amp;temp()) {bar();}</code>. The temporary containing the return value from the call to temp() is created in the loop conditional expression. Hence it will be freed at the end of the loop conditional expression; in this example before the call to bar if the loop body is executed.&quot;. My explanation would have had <code>&amp;temp()</code> living until the end of the loop"}, {"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "reply_to_user": {"reputation": 60850, "user_id": 221955, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0bc09e1bd45610fc85274cd7bb002c56?s=128&d=identicon&r=PG", "display_name": "Michael Anderson", "link": "https://stackoverflow.com/users/221955/michael-anderson"}, "edited": false, "score": 1, "creation_date": 1574409018, "post_id": 58975597, "comment_id": 104230653, "body": "The <code>foo(&amp;temp())</code> expression is not bound, it&#39;s a <code>while x</code>, not <code>while let x = y</code>. The <code>&amp;temp()</code> can therefor be freed at the end of the loop conditional expression. It&#39;s the binding via <code>while let x = y</code> which requires extending the temporary lifetime of <code>y</code>to the whole block, so one can actually use <code>x</code>."}, {"owner": {"reputation": 1495, "user_id": 1582407, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/ea7adcdc43c61ff9eeba5eab4f27d0d5?s=128&d=identicon&r=PG", "display_name": "Brendan", "link": "https://stackoverflow.com/users/1582407/brendan"}, "edited": false, "score": 0, "creation_date": 1575013734, "post_id": 58975597, "comment_id": 104433730, "body": "It&#39;s not obvious to me why Rust works this way. Is this a feature people use or just a happenstance?"}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": true, "score": 5, "last_activity_date": 1575016429, "last_edit_date": 1575016429, "creation_date": 1574340935, "answer_id": 58975597, "question_id": 58968488, "link": "https://stackoverflow.com/questions/58968488/why-is-this-mutexguard-not-dropped/58975597#58975597", "title": "Why is this MutexGuard not dropped?", "body": "<p>Michael's answer is basically correct. More details can be found in <a href=\"https://doc.rust-lang.org/beta/reference/expressions.html#temporary-lifetimes\" rel=\"nofollow noreferrer\">Rust's reference regarding Place Expressions, Value Expressions and Temporary Lifetimes</a>:</p>\n\n<p>In the first example (<code>let job = ...</code>), the <code>MutexGuard</code> is a temporary. The temporary lifetime ends at the end of the statement. Therefore the <code>MutexGuard</code> is dropped after the <code>let job = ...</code> statement.</p>\n\n<p>In the second example <code>while let ...</code>, the <code>MutexGuard</code> is part of the <a href=\"https://doc.rust-lang.org/beta/reference/glossary.html#scrutinee\" rel=\"nofollow noreferrer\">scrutinee</a> of the <code>while</code>-expression. This makes the <code>MutexGuard</code> part of a value-expression in a place-expression context. Since promotion to a <code>'static</code> can't occur, the lifetime of the entire <code>scrutinee</code> is the enclosing block, not the enclosing statement. That is, the <code>MutexGuard</code> is held for the whole <code>while let</code>-block.</p>\n"}], "owner": {"reputation": 1495, "user_id": 1582407, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/ea7adcdc43c61ff9eeba5eab4f27d0d5?s=128&d=identicon&r=PG", "display_name": "Brendan", "link": "https://stackoverflow.com/users/1582407/brendan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 341, "favorite_count": 0, "accepted_answer_id": 58975597, "answer_count": 2, "score": 6, "last_activity_date": 1575016429, "creation_date": 1574317429, "last_edit_date": 1574317795, "question_id": 58968488, "link": "https://stackoverflow.com/questions/58968488/why-is-this-mutexguard-not-dropped", "title": "Why is this MutexGuard not dropped?", "body": "<p>In <a href=\"https://doc.rust-lang.org/book/ch20-02-multithreaded.html\" rel=\"noreferrer\">Chapter 20 of The Rust Book</a>, an example implementation of a thread pool is built. Jobs are passed to workers via a single-producer multiple-consumer channel: each worker has an <code>Arc&lt;Mutex&lt;Receiver&gt;&gt;</code> to pick jobs off the queue.</p>\n\n<p>The first example of the worker thread body looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>loop {\n    let job = receiver.lock().unwrap().recv().unwrap();\n\n    println!(\"Worker {} got a job; executing.\", id);\n\n    job();\n}\n</code></pre>\n\n<p>When I saw this my first thought was \"but the mutex is held while <code>job</code> is run\" (i.e. I did not expect the mutex to be released until the return value of <code>lock</code> went out of scope at the end of the loop).</p>\n\n<p>However the book then provides a second example:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>while let Ok(job) = receiver.lock().unwrap().recv() {\n    println!(\"Worker {} got a job; executing.\", id);\n\n    job();\n}\n</code></pre>\n\n<p>The book says that <em>this</em> example exhibits the problem I described, i.e. \"the lock remains held for the duration of the call to <code>job()</code>\". It goes on to say that the former example escapes the issue because \"the <code>MutexGuard</code> returned from the <code>lock</code> method is dropped as soon as the <code>let job</code> statement ends\".</p>\n\n<p>That last part makes it sound as if, because the <code>MutexGuard</code> is never actually assigned to a variable, its lifetime ends as soon as the expression is finished evaluating. That would make sense. But isn't that also true of the second example? Why does being in a <code>while</code> expression change the lifetime of the <code>MutexGuard</code> value?</p>\n"}, {"tags": ["vector", "rust"], "comments": [{"owner": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1574314914, "post_id": 58967942, "comment_id": 104190362, "body": "Most languages require/use \u201csafety\u201d checks; where violation of API is a coding error."}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1574315035, "post_id": 58967942, "comment_id": 104190394, "body": "@user2864740 I am sorry I didn&#39;t understand... By safety check do you mean manually checking if item exists?"}, {"owner": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1574315341, "post_id": 58967942, "comment_id": 104190485, "body": "By checking if the INDEX IS IN RANGE. Nothing about a particular item existing.. Many languages will throw exceptions (panics, random crashes, eg.) when such invalid request is made to a collection. The problem was in the usage of the API, which is clearly documented: <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/vec/struct.Vec.html</a>"}, {"owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "reply_to_user": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1574315470, "post_id": 58967942, "comment_id": 104190523, "body": "@user2864740 I meant that, but conveyed badly, sorry. Yep it seems it&#39;s the only way (it&#39;s just so unidiomatic in Rust)."}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574337102, "post_id": 58970485, "comment_id": 104201872, "body": "&quot;in Rust is to panic for programming errors&quot; what is programming errors to you. For me you can panic only for unrecoverable error, not just errors, that the case of remove cause there is no object to remove so can&#39;t return it."}, {"owner": {"reputation": 529, "user_id": 11877195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0ed77976acc203f50e7699ba07061865?s=128&d=identicon&r=PG&f=1", "display_name": "Sahsahae", "link": "https://stackoverflow.com/users/11877195/sahsahae"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1574341386, "post_id": 58970485, "comment_id": 104204316, "body": "@Stargateur for more interactive applications, I really wouldn&#39;t want my server to go down with a hard panic just because user who tried to login didn&#39;t actually exist :)  Panicking should never be the way for anything logic oriented. Panics are for &quot;hard/impossible to detect at compile time things&quot; (for example what machine it will run on, you could be cross compiling and your user might not have AVX instructions, now that&#39;s a good excuse to panic, probably) and similar &quot;actually irrecoverable&quot; errors. Vec bounds cannot be checked at compile time, so we deal with runtime. For dev only."}], "tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": true, "score": 4, "last_activity_date": 1574325345, "creation_date": 1574325345, "answer_id": 58970485, "question_id": 58967942, "link": "https://stackoverflow.com/questions/58967942/how-to-safely-remove-item-from-a-vector/58970485#58970485", "title": "How to safely remove item from a vector?", "body": "<p>In general, vector and slice methods consider it a programming error if they receive an index that is out of range, and the convention in Rust is to panic for programming errors. If your code panics, you generally need to fix the code to uphold the invariant that was disregarded.</p>\n\n<p>Some of the slice methods have variants that don't panic for invalid indices. One example is the indexing operator <code>[index]</code>, which panics for and out-of-bounds index, and the <code>get()</code> method, which returns <code>None</code> if the index is out of bounds.</p>\n\n<p>The <code>remove()</code> method does not have an equivalent that does not panic. You should check the index manually before passing it in:</p>\n\n<pre><code>if (index &lt; v.len()) {\n    v.remove(index);\n} else {\n    // Handle error\n}\n</code></pre>\n\n<p>In real applications, this should rarely be necessary, though. The code that generates the index to be deleted can usually be written in a way that it will only yield in-bounds indices.</p>\n"}], "owner": {"reputation": 11799, "user_id": 9259778, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/R157q.jpg?s=128&g=1", "display_name": "Nurbol Alpysbayev", "link": "https://stackoverflow.com/users/9259778/nurbol-alpysbayev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 302, "favorite_count": 0, "accepted_answer_id": 58970485, "answer_count": 1, "score": 0, "last_activity_date": 1574325345, "creation_date": 1574314644, "last_edit_date": 1574315087, "question_id": 58967942, "link": "https://stackoverflow.com/questions/58967942/how-to-safely-remove-item-from-a-vector", "title": "How to safely remove item from a vector?", "body": "<p>Let's say I have this vector:</p>\n\n<pre><code>let mut v = vec![1,2,3];\n</code></pre>\n\n<p>And I want to remove some item from it:</p>\n\n<pre><code>v.remove(3);\n</code></pre>\n\n<p>It panics. How can I catch/gracefully handle that panic? I tried to use <code>panic::catch_unwind</code> but it doesn't seem to work with vectors (<code>std::vec::Vec&lt;i32&gt; may not be safely transferred across an unwind boundary</code>). Should I manually check if item exists at an index before removing it? </p>\n"}, {"tags": ["rust", "aws-lambda", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 598, "user_id": 1107350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/28b0c2645da6a61f949db6196e52c567?s=128&d=identicon&r=PG", "display_name": "Thomas Ingalls", "link": "https://stackoverflow.com/users/1107350/thomas-ingalls"}, "edited": false, "score": 0, "creation_date": 1578375599, "post_id": 58967150, "comment_id": 105408370, "body": "Have you been able to answer some of these questions?"}, {"owner": {"reputation": 979, "user_id": 1554154, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OpBwW.jpg?s=128&g=1", "display_name": "rinde", "link": "https://stackoverflow.com/users/1554154/rinde"}, "reply_to_user": {"reputation": 598, "user_id": 1107350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/28b0c2645da6a61f949db6196e52c567?s=128&d=identicon&r=PG", "display_name": "Thomas Ingalls", "link": "https://stackoverflow.com/users/1107350/thomas-ingalls"}, "edited": false, "score": 1, "creation_date": 1578414712, "post_id": 58967150, "comment_id": 105427097, "body": "@ThomasIngalls so far I have opted for not using \u2018actix_web\u2019. I have only a couple routes so far (still early in the dev cycle), so it hasn\u2019t been a problem so far"}], "owner": {"reputation": 979, "user_id": 1554154, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/OpBwW.jpg?s=128&g=1", "display_name": "rinde", "link": "https://stackoverflow.com/users/1554154/rinde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 201, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1574309133, "creation_date": 1574309133, "question_id": 58967150, "link": "https://stackoverflow.com/questions/58967150/can-i-use-actix-web-on-aws-lambda-without-spawning-a-thread-for-httpserver", "title": "Can I use actix_web on AWS Lambda without spawning a thread for HttpServer?", "body": "<p>I am building a REST API using AWS Lambda and Rust. I want the Rust code to handle multiple resources from within the same library as this seems to make more sense than creating a separate binary for every resource.</p>\n\n<p>What I would like to do is use <a href=\"https://github.com/actix/actix-web\" rel=\"nofollow noreferrer\">actix_web</a>'s configuration and middleware options to configure my REST endpoints. Because my code is running in an AWS Lambda environment I don't need to use the <code>HttpServer</code> parts of <code>actix_web</code>. The code just needs to respond to the request from within the same thread using the configuration of <code>App</code> from <code>actix_web</code>.</p>\n\n<p>I've studied <a href=\"https://github.com/palfrey/actix_lambda\" rel=\"nofollow noreferrer\">actix_lambda</a> but it actually starts a separate thread for <code>HttpServer</code> which seems unnecessary resource usage.</p>\n\n<p>The code that I would like to write looks similar to this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    lambda!(handle); // this macro is from lambda_http crate\n    Ok(())\n}\n\nfn handle(request: Request, _ctx: Context) -&gt; Result&lt;impl IntoResponse, HandlerError&gt; {\n  let app = App::new()\n    .service(web::resource(\"/resource1\").to(|| HttpResponse::Ok())))\n    .service(web::resource(\"/resource2\").to(|| HttpResponse::Ok())))\n    .service(web::resource(\"/resource3\").to(|| HttpResponse::Ok())));\n\n  // the method below does not exist, but what I would like to do is \n  // figure out where the incoming request is pointing to and let the\n  // App configuration take it from there.\n  app.handle(request) \n}\n</code></pre>\n\n<p>Questions:</p>\n\n<ul>\n<li>Is it possible to use the <code>App</code> part of <code>actix_web</code> without the <code>HttpServer</code> in a way similar to what the code above shows?</li>\n<li>Does it make sense not to use <code>HttpServer</code> to avoid spawning a thread? </li>\n<li>Why has no one done this before?</li>\n<li>Is it better to have separate binaries for every REST resource?</li>\n<li>Should I not use <code>actix_web</code> and just create my own routing and middleware solution?</li>\n<li>Is there a more rustacean way to approach this problem? (I'm new to Rust)</li>\n</ul>\n"}, {"tags": ["rust", "async-await"], "answers": [{"tags": [], "owner": {"reputation": 353, "user_id": 4522084, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ccc498c02064892dab4d728d460a741b?s=128&d=identicon&r=PG&f=1", "display_name": "pdiffley", "link": "https://stackoverflow.com/users/4522084/pdiffley"}, "is_accepted": true, "score": 2, "last_activity_date": 1574398633, "creation_date": 1574398633, "answer_id": 58987775, "question_id": 58965796, "link": "https://stackoverflow.com/questions/58965796/why-do-i-get-the-error-no-block-on-in-executor-when-attempting-to-block-on/58987775#58987775", "title": "Why do I get the error &quot;no `block_on` in `executor`&quot; when attempting to block on an async function?", "body": "<p>As mentioned by Stargateur, <code>futures = { version = \"0.3\", features = [\"compat\"] }</code> needs to be added to your Cargo.toml dependencies.</p>\n\n<p>The dependency is indicated at the top of <a href=\"https://rust-lang.github.io/async-book/01_getting_started/05_http_server_example.html\" rel=\"nofollow noreferrer\">the page following the hello world example</a>.</p>\n"}], "owner": {"reputation": 353, "user_id": 4522084, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/ccc498c02064892dab4d728d460a741b?s=128&d=identicon&r=PG&f=1", "display_name": "pdiffley", "link": "https://stackoverflow.com/users/4522084/pdiffley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 922, "favorite_count": 0, "accepted_answer_id": 58987775, "answer_count": 1, "score": 0, "last_activity_date": 1585527970, "creation_date": 1574298813, "last_edit_date": 1585527970, "question_id": 58965796, "link": "https://stackoverflow.com/questions/58965796/why-do-i-get-the-error-no-block-on-in-executor-when-attempting-to-block-on", "title": "Why do I get the error &quot;no `block_on` in `executor`&quot; when attempting to block on an async function?", "body": "<p>I am following Rust's <a href=\"https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html\" rel=\"nofollow noreferrer\">async/await primer</a> but am having trouble running the hello world program shown below.</p>\n\n<pre><code>use futures::executor::block_on;\n\nasync fn hello_world() {\n    println!(\"hello, world!\");\n}\n\nfn main() {\n    let future = hello_world(); // Nothing is printed\n    block_on(future); // `future` is run and \"hello, world!\" is printed\n}\n</code></pre>\n\n<p>I receive the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>1 | use futures::executor::block_on;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `block_on` in `executor`\n</code></pre>\n\n<p>Is there an import required to use this function?</p>\n"}]