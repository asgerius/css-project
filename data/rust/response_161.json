[{"tags": ["bash", "rust"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 4, "creation_date": 1518047294, "post_id": 48675235, "comment_id": 84348977, "body": "What\u2019s in test.sh? Did you install Rust based off instructions given by the course?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 4, "creation_date": 1518047670, "post_id": 48675235, "comment_id": 84349054, "body": "This question seems to be lacking an actual... <i>question</i>. What do you want to know? Do you think the compiler is lying to you? Have you tried installing a nightly toolchain?"}], "answers": [{"tags": [], "owner": {"reputation": 455, "user_id": 9218031, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e130f1944fa76209ad76e225df9e4786?s=128&d=identicon&r=PG&f=1", "display_name": "Desert Digital", "link": "https://stackoverflow.com/users/9218031/desert-digital"}, "is_accepted": true, "score": 21, "last_activity_date": 1518076318, "last_edit_date": 1518076318, "creation_date": 1518048901, "answer_id": 48675452, "question_id": 48675235, "link": "https://stackoverflow.com/questions/48675235/error-the-option-z-is-only-accepted-on-the-nightly-compiler/48675452#48675452", "title": "error: the option `Z` is only accepted on the nightly compiler", "body": "<p>Rust has multiple compilers and nightly contains some of the more experimental features. I was able to upgrade from stable Rust to nightly following the advice on the <a href=\"https://github.com/rust-lang-nursery/rustup.rs#working-with-nightly-rust\" rel=\"noreferrer\">Rust-Lang-Nursery GitHub Page</a>:</p>\n\n<blockquote>\n  <p>Install nightly toolchain:</p>\n\n<pre><code>$ rustup install nightly\n</code></pre>\n  \n  <p>Switch to nightly toolchain as default toolchain:</p>\n\n<pre><code>$ rustup default nightly\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 455, "user_id": 9218031, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e130f1944fa76209ad76e225df9e4786?s=128&d=identicon&r=PG&f=1", "display_name": "Desert Digital", "link": "https://stackoverflow.com/users/9218031/desert-digital"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3170, "favorite_count": 1, "closed_date": 1518296739, "accepted_answer_id": 48675452, "answer_count": 1, "score": 1, "last_activity_date": 1518350011, "creation_date": 1518047217, "last_edit_date": 1518047629, "question_id": 48675235, "link": "https://stackoverflow.com/questions/48675235/error-the-option-z-is-only-accepted-on-the-nightly-compiler", "closed_reason": "Needs details or clarity", "title": "error: the option `Z` is only accepted on the nightly compiler", "body": "<p>I am working through the <a href=\"https://web.stanford.edu/class/cs140e/\" rel=\"nofollow noreferrer\">Stanford Operating Systems Course cs140e</a>. In one of the problems, there is a bash file named test.sh that checks if the Rust programs compile correctly. The test script accepts a -v flag. With -v, the script will emit the error output from the Rust compiler for each failure.</p>\n\n<p>When I run <code>./test.sh -v</code> I get this message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: the option `Z` is only accepted on the nightly compiler\n</code></pre>\n"}, {"tags": ["iterator", "rust"], "answers": [{"tags": [], "owner": {"reputation": 2286, "user_id": 1981468, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/HnKNp.jpg?s=128&g=1", "display_name": "Others", "link": "https://stackoverflow.com/users/1981468/others"}, "is_accepted": false, "score": 2, "last_activity_date": 1518046280, "creation_date": 1518046280, "answer_id": 48675063, "question_id": 48674936, "link": "https://stackoverflow.com/questions/48674936/remove-only-the-trailing-elements-of-a-vec-that-match-a-condition/48675063#48675063", "title": "Remove only the trailing elements of a Vec that match a condition", "body": "<p>Just to get things started, here is a really dodgy solution:</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![0, 1, 0, 2, 3, 0, 0];\n    vec = vec.into_iter().rev().skip_while(|&amp;x| x == 0).collect();\n    vec = vec.into_iter().rev().collect();\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1518056477, "post_id": 48675073, "comment_id": 84351274, "body": "I like this solution as it&#39;s probably the most memory-efficient of the answers. If you wanted to keep the <code>take_while</code>, you could use <code>.take_while(|&amp;&amp;x| x == 0).count()</code>."}, {"owner": {"reputation": 205, "user_id": 4846418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be82940aac7db2359ec9e7b64a9e511b?s=128&d=identicon&r=PG&f=1", "display_name": "raggy", "link": "https://stackoverflow.com/users/4846418/raggy"}, "edited": false, "score": 0, "creation_date": 1518096691, "post_id": 48675073, "comment_id": 84370929, "body": "You can express your intent more clearly by using <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.rposition\" rel=\"nofollow noreferrer\">rposition</a>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 205, "user_id": 4846418, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/be82940aac7db2359ec9e7b64a9e511b?s=128&d=identicon&r=PG&f=1", "display_name": "raggy", "link": "https://stackoverflow.com/users/4846418/raggy"}, "edited": false, "score": 0, "creation_date": 1518097111, "post_id": 48675073, "comment_id": 84371218, "body": "@raggy Thanks, that tweak was added now."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 6, "last_activity_date": 1518100167, "last_edit_date": 1518100167, "creation_date": 1518046316, "answer_id": 48675073, "question_id": 48674936, "link": "https://stackoverflow.com/questions/48674936/remove-only-the-trailing-elements-of-a-vec-that-match-a-condition/48675073#48675073", "title": "Remove only the trailing elements of a Vec that match a condition", "body": "<p>The iterator adaptor for reversal only works for iterators which can be traversed from any of the two ends (as in, it is a <a href=\"https://doc.rust-lang.org/stable/std/iter/trait.DoubleEndedIterator.html\" rel=\"nofollow noreferrer\"><code>DoubleEndedIterator</code></a>). While this is the case for the original one, this is no longer possible from the moment we include <code>skip_while</code>. In order to follow that approach, you would have to collect the rest of the reversed vector, and only then reverse again.</p>\n\n<p>I, on the other hand, would just choose to fetch the index of the first trailing zero and truncate the vector with it.</p>\n\n<pre><code>let mut vec = vec![0, 1, 0, 2, 3, 0, 0];\nif let Some(i) = vec.iter().rposition(|x| *x != 0) {\n    let new_len = i + 1;\n    vec.truncate(new_len);\n}\n</code></pre>\n\n<p>... or just grab a slice instead:</p>\n\n<pre><code>let piece = &amp;vec[..new_len];\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=a8f1e9e4f57da0d06ed787c9c74be821&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1518048273, "last_edit_date": 1518048273, "creation_date": 1518046480, "answer_id": 48675112, "question_id": 48674936, "link": "https://stackoverflow.com/questions/48674936/remove-only-the-trailing-elements-of-a-vec-that-match-a-condition/48675112#48675112", "title": "Remove only the trailing elements of a Vec that match a condition", "body": "<p>As the error messages state:</p>\n\n<ol>\n<li><p><em>the trait <code>DoubleEndedIterator</code> is not implemented for <code>SkipWhile&lt;...&gt;</code></em> \u2014 Take a look at the implementation of <code>SkipWhile</code>:</p>\n\n<pre><code>pub struct SkipWhile&lt;I, P&gt; {\n    iter: I,\n    flag: bool,\n    predicate: P,\n}\n</code></pre>\n\n<p>You cannot reverse an iterator built from <code>SkipWhile</code> because it has no way of tracking if the \"current\" item was skipped when you add in the ability to pull from the front and the back. </p></li>\n<li><em>expected struct <code>Vec</code>, found struct <code>Rev</code></em> \u2014 You still have an iterator, but you are trying to store it where a <code>Vec</code> must be stored. You cannot put a type A where a type B is needed.</li>\n</ol>\n\n<p>I would <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>collect</code></a> the vector and then <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.reverse\" rel=\"nofollow noreferrer\"><code>reverse</code></a> it in place:</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![0, 1, 0, 2, 3, 0, 0];\n\n    vec = vec.into_iter().rev().skip_while(|&amp;x| x == 0).collect();\n    vec.reverse();\n\n    println!(\"{:?}\", vec);\n    assert_eq!(vec, [0, 1, 0, 2, 3]);\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p><code>DoubleEndedIterator</code> is implemented for <code>SkipWhile</code>. </p>\n</blockquote>\n\n<p>This is not true. If you look at the documentation for <a href=\"https://doc.rust-lang.org/std/iter/struct.SkipWhile.html\" rel=\"nofollow noreferrer\"><code>SkipWhile</code></a>, it does not list that it implements <code>DoubleEndedIterator</code>. Here's an example of a trait it does implement: <a href=\"https://doc.rust-lang.org/std/iter/struct.SkipWhile.html#impl-FusedIterator\" rel=\"nofollow noreferrer\"><code>FusedIterator</code></a>.</p>\n\n<blockquote>\n  <p>In fact, <code>SkipWhile</code> even implements <code>rev()</code></p>\n</blockquote>\n\n<p>It doesn't actually. <code>Iterator::rev</code> is only implemented in the condition that <code>Self</code> (which is <code>SkipWhile</code>) implements <code>DoubleEndedIterator</code>, which this doesn't:</p>\n\n<pre><code>fn rev(self) -&gt; Rev&lt;Self&gt;\nwhere\n    Self: DoubleEndedIterator, \n</code></pre>\n"}], "owner": {"reputation": 1498, "user_id": 6844327, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/9fWJl.jpg?s=128&g=1", "display_name": "HiDefender", "link": "https://stackoverflow.com/users/6844327/hidefender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 692, "favorite_count": 0, "accepted_answer_id": 48675112, "answer_count": 3, "score": 4, "last_activity_date": 1518100167, "creation_date": 1518045476, "last_edit_date": 1518047517, "question_id": 48674936, "link": "https://stackoverflow.com/questions/48674936/remove-only-the-trailing-elements-of-a-vec-that-match-a-condition", "title": "Remove only the trailing elements of a Vec that match a condition", "body": "<p>I have a <code>Vec&lt;T&gt;</code> that has elements matching a pattern. I want to remove all trailing instances of the elements that match the pattern.</p>\n\n<p>For example, I have a <code>Vec&lt;i32&gt;</code> and the pattern is <code>(|x| x == 0)</code>. If the input was: <code>vec![0, 1, 0, 2, 3, 0, 0]</code>, the output should be: <code>vec![0, 1, 0, 2, 3]</code></p>\n\n<p>To do this I tried:</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![0, 1, 0, 2, 3, 0, 0];\n    vec = vec.into_iter().rev().skip_while(|&amp;x| x == 0).rev();\n}\n</code></pre>\n\n<p>But I get these compiler errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::iter::SkipWhile&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;, [closure@src/main.rs:3:44: 3:55]&gt;: std::iter::DoubleEndedIterator` is not satisfied\n --&gt; src/main.rs:3:57\n  |\n3 |     vec = vec.into_iter().rev().skip_while(|&amp;x| x == 0).rev();\n  |                                                         ^^^ the trait `std::iter::DoubleEndedIterator` is not implemented for `std::iter::SkipWhile&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;, [closure@src/main.rs:3:44: 3:55]&gt;`\n\nerror[E0308]: mismatched types\n --&gt; src/main.rs:3:11\n  |\n3 |     vec = vec.into_iter().rev().skip_while(|&amp;x| x == 0).rev();\n  |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `std::iter::Rev`\n  |\n  = note: expected type `std::vec::Vec&lt;{integer}&gt;`\n             found type `std::iter::Rev&lt;std::iter::SkipWhile&lt;std::iter::Rev&lt;std::vec::IntoIter&lt;{integer}&gt;&gt;, [closure@src/main.rs:3:44: 3:55]&gt;&gt;`\n</code></pre>\n\n<p>The strange thing is that <code>DoubleEndedIterator</code> is implemented for <code>SkipWhile</code>. In fact, <code>SkipWhile</code> even implements <code>rev()</code>. <a href=\"https://doc.rust-lang.org/std/iter/struct.SkipWhile.html\" rel=\"nofollow noreferrer\">See here</a>.</p>\n\n<p>What am I doing wrong? Is there a better approach?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1518025562, "post_id": 48670109, "comment_id": 84338128, "body": "Are you actually concerned about the performance implications of <i>cloning two integers</i>? I&#39;d expect that creating that <code>Vec</code> will have a much bigger impact on performance."}, {"owner": {"reputation": 7881, "user_id": 409475, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/K4GzT.jpg?s=128&g=1", "display_name": "Ernest", "link": "https://stackoverflow.com/users/409475/ernest"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1518029480, "post_id": 48670109, "comment_id": 84340392, "body": "@Shepmaster good question. But what about if array has more elements, and I am doing the clone several times for each iteration? Anyway, I have something to think about, but it looks like my concernes are misplaced."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1518046939, "last_edit_date": 1518046939, "creation_date": 1518026383, "answer_id": 48670458, "question_id": 48670109, "link": "https://stackoverflow.com/questions/48670109/how-to-reuse-ranges-for-getting-parts-of-arrays/48670458#48670458", "title": "How to reuse ranges for getting parts of arrays?", "body": "<p>No, it is not currently possible. The valid values to pass to a slice's <code>index</code> method (a.k.a. <code>[]</code>) are those types which implement the <a href=\"https://doc.rust-lang.org/std/slice/trait.SliceIndex.html\" rel=\"nofollow noreferrer\"><code>SliceIndex</code></a> trait. <code>&amp;Range</code> is not in that list, although I don't know if there's any technical reason that prevents it from being the case.</p>\n\n<p>An aside on the performance of cloning in this case...</p>\n\n<p>When you call <code>foo[1..2]</code>, you are passing ownership of the created <code>Range&lt;usize&gt;</code> into <code>Index::index</code>, which takes up two <code>usize</code> values. If we <em>were</em> able to pass in a <code>&amp;Range</code>, we'd only be passing in a single <code>usize</code> worth, but we'd have to perform a dereference and then probably copy at least one of the inner <code>usize</code>s anyway. My (untested) hypothesis is that it would be slower than cloning anyway.</p>\n\n<p>See also</p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/issues/35729\" rel=\"nofollow noreferrer\">Tracking issue for the <code>SliceIndex</code> trait</a></li>\n</ul>\n"}], "owner": {"reputation": 7881, "user_id": 409475, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/K4GzT.jpg?s=128&g=1", "display_name": "Ernest", "link": "https://stackoverflow.com/users/409475/ernest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 227, "favorite_count": 0, "accepted_answer_id": 48670458, "answer_count": 1, "score": 2, "last_activity_date": 1518046939, "creation_date": 1518025152, "last_edit_date": 1518046927, "question_id": 48670109, "link": "https://stackoverflow.com/questions/48670109/how-to-reuse-ranges-for-getting-parts-of-arrays", "title": "How to reuse ranges for getting parts of arrays?", "body": "<p>I am processing arrays in chunks of different sizes (3, 4, 5 etc.) (<a href=\"https://play.rust-lang.org/?gist=b3b6d8e29ea9f59a3d92684c718eb17a&amp;version=stable\" rel=\"nofollow noreferrer\">link to the playground</a>):</p>\n\n<pre><code>fn main() {\n    let arr: [u8; 10] = [\n        1, 1, 1,\n        2, 2, 2,\n        3, 3, 3, 0\n    ];\n    let mut results: [u8; 10] = [0; 10];\n    let corrections: [u8; 10] = [\n        1, 1, 1,\n        1, 1, 1,\n        1, 1, 1, 0\n    ];\n    let group_ranges = vec![\n        0..3,\n        3..6,\n        6..10\n    ];\n\n    for range in group_ranges {\n        let group_sum: u8 = arr[&amp;range].iter().sum();\n        for (idx, el) in arr[&amp;range].iter().enumerate() {\n            results[&amp;range][idx] = el * group_sum * corrections[&amp;range][idx];\n        }\n    }\n    println!(\"{:?}\", results);\n    // =&gt; [3, 3, 3, 12, 12, 12, 27, 27, 27, 0]\n}\n</code></pre>\n\n<p>The errors returned:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;std::ops::Range&lt;{integer}&gt;: std::slice::SliceIndex&lt;[u8]&gt;` is not satisfied\n  --&gt; src/main.rs:20:29\n   |\n20 |         let group_sum: u8 = arr[&amp;range].iter().sum();\n   |                             ^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[u8]&gt;` is not implemented for `&amp;std::ops::Range&lt;{integer}&gt;`\n   = note: required because of the requirements on the impl of `std::ops::Index&lt;&amp;std::ops::Range&lt;{integer}&gt;&gt;` for `[u8]`\n\nerror[E0277]: the trait bound `&amp;std::ops::Range&lt;{integer}&gt;: std::slice::SliceIndex&lt;[u8]&gt;` is not satisfied\n  --&gt; src/main.rs:21:26\n   |\n21 |         for (idx, el) in arr[&amp;range].iter().enumerate() {\n   |                          ^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[u8]&gt;` is not implemented for `&amp;std::ops::Range&lt;{integer}&gt;`\n   = note: required because of the requirements on the impl of `std::ops::Index&lt;&amp;std::ops::Range&lt;{integer}&gt;&gt;` for `[u8]`\n\nerror[E0277]: the trait bound `&amp;std::ops::Range&lt;{integer}&gt;: std::slice::SliceIndex&lt;[u8]&gt;` is not satisfied\n  --&gt; src/main.rs:22:13\n   |\n22 |             results[&amp;range][idx] = el * group_sum * corrections[&amp;range][idx];\n   |             ^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[u8]&gt;` is not implemented for `&amp;std::ops::Range&lt;{integer}&gt;`\n   = note: required because of the requirements on the impl of `std::ops::Index&lt;&amp;std::ops::Range&lt;{integer}&gt;&gt;` for `[u8]`\n\nerror[E0277]: the trait bound `&amp;std::ops::Range&lt;{integer}&gt;: std::slice::SliceIndex&lt;[u8]&gt;` is not satisfied\n  --&gt; src/main.rs:22:53\n   |\n22 |             results[&amp;range][idx] = el * group_sum * corrections[&amp;range][idx];\n   |                                                     ^^^^^^^^^^^^^^^^^^^ slice indices are of type `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[u8]&gt;` is not implemented for `&amp;std::ops::Range&lt;{integer}&gt;`\n   = note: required because of the requirements on the impl of `std::ops::Index&lt;&amp;std::ops::Range&lt;{integer}&gt;&gt;` for `[u8]`\n</code></pre>\n\n<p>Using <code>range</code> instead of <code>&amp;range</code> yields the <code>use of moved value</code> error. Is it possible to work without using <code>range.clone()</code> all over?</p>\n"}, {"tags": ["rust", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1518023993, "post_id": 48669260, "comment_id": 84337209, "body": "Perhaps related: <a href=\"https://github.com/rust-lang/rust/issues/43486\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/43486</a>"}, {"owner": {"reputation": 460, "user_id": 13753914, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/821f54b2caeb2bd6858c61670f65c4b7?s=128&d=identicon&r=PG&f=1", "display_name": "Henry", "link": "https://stackoverflow.com/users/13753914/henry"}, "edited": false, "score": 0, "creation_date": 1611367477, "post_id": 48669260, "comment_id": 116436915, "body": "In your SQL, I would recommend putting semi-colons at the end of the statements."}], "owner": {"reputation": 2231, "user_id": 4465497, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/vibwv.png?s=128&g=1", "display_name": "XAMPPRocky", "link": "https://stackoverflow.com/users/4465497/xampprocky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 510, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1518023221, "creation_date": 1518022587, "last_edit_date": 1518023221, "question_id": 48669260, "link": "https://stackoverflow.com/questions/48669260/compiling-diesel-migrations-on-musl-undefined-symbol-strlcpy", "title": "Compiling Diesel migrations on musl: undefined symbol strlcpy", "body": "<p>The following is a minimal working example of Diesel's <code>diesel_migrations</code> crate failing to compile on musl through Docker using the <code>clux/muslrust</code> image. It gives an <code>undefined symbol: strlcpy</code> error. The code works fine on the native system (macOS).</p>\n\n<h2>Docker command</h2>\n\n<pre class=\"lang-none prettyprint-override\"><code>docker run \\\n  -v cargo-cache:/root/.cargo \\\n  -v \"$PWD:/volume\" \\\n  --rm -it clux/muslrust cargo build --release\n</code></pre>\n\n<h2>Full cargo output</h2>\n\n<pre class=\"lang-none prettyprint-override\"><code>       Fresh bitflags v1.0.1\n       Fresh unicode-xid v0.0.4\n       Fresh byteorder v1.2.1\n       Fresh antidote v1.0.0\n       Fresh uuid v0.5.1\n       Fresh num-traits v0.2.0\n       Fresh itoa v0.3.4\n       Fresh quote v0.3.15\n       Fresh serde v1.0.27\n       Fresh cfg-if v0.1.2\n       Fresh dtoa v0.4.2\n       Fresh synom v0.11.3\n       Fresh scheduled-thread-pool v0.2.0\n       Fresh num-traits v0.1.43\n       Fresh log v0.4.1\n       Fresh syn v0.11.11\n       Fresh serde_json v1.0.9\n       Fresh pq-sys v0.4.4\n       Fresh r2d2 v0.8.2\n       Fresh diesel_derives v1.1.0\n       Fresh diesel v1.1.1\n       Fresh migrations_internals v1.1.0\n       Fresh migrations_macros v1.1.0\n   Compiling diesel_migrations v1.1.0\n     Running `rustc --crate-name diesel_migrations /root/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel_migrations-1.1.0/src/lib.rs --crate-type lib --emit=dep-info,link -C opt-level=3 --cfg 'feature=\"default\"' -C metadata=4358fb7d50fa83b4 -C extra-filename=-4358fb7d50fa83b4 --out-dir /volume/target/x86_64-unknown-linux-musl/release/deps --target x86_64-unknown-linux-musl -L dependency=/volume/target/x86_64-unknown-linux-musl/release/deps -L dependency=/volume/target/release/deps --extern migrations_internals=/volume/target/x86_64-unknown-linux-musl/release/deps/libmigrations_internals-0fb7c87a53458af1.rlib --extern migrations_macros=/volume/target/release/deps/libmigrations_macros-410fd6f73c776a1c.so --cap-lints allow -L native=/musl/lib`\nerror: /volume/target/release/deps/libmigrations_macros-410fd6f73c776a1c.so: undefined symbol: strlcpy\n  --&gt; /root/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel_migrations-1.1.0/src/lib.rs:77:1\n   |\n77 | extern crate migrations_macros;\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: Could not compile `diesel_migrations`.\n\nCaused by:\n  process didn't exit successfully: `rustc --crate-name diesel_migrations /root/.cargo/registry/src/github.com-1ecc6299db9ec823/diesel_migrations-1.1.0/src/lib.rs --crate-type lib --emit=dep-info,link -C opt-level=3 --cfg feature=\"default\" -C metadata=4358fb7d50fa83b4 -C extra-filename=-4358fb7d50fa83b4 --out-dir /volume/target/x86_64-unknown-linux-musl/release/deps --target x86_64-unknown-linux-musl -L dependency=/volume/target/x86_64-unknown-linux-musl/release/deps -L dependency=/volume/target/release/deps --extern migrations_internals=/volume/target/x86_64-unknown-linux-musl/release/deps/libmigrations_internals-0fb7c87a53458af1.rlib --extern migrations_macros=/volume/target/release/deps/libmigrations_macros-410fd6f73c776a1c.so --cap-lints allow -L native=/musl/lib` (exit code: 101)\n</code></pre>\n\n<h2>Cargo.toml</h2>\n\n<pre><code>[package]\nname = \"diesel_test\"\nversion = \"0.1.0\"\nauthors = [\"John Doe &lt;example@email.com&gt;\"]\n\n[dependencies]\ndiesel_migrations = \"1\"\n\n[dependencies.diesel]\nversion = \"1\"\nfeatures = [\"postgres\", \"uuid\", \"serde_json\", \"r2d2\", \"large-tables\"]\n</code></pre>\n\n<h2>src/main.rs</h2>\n\n<pre><code>#[macro_use] extern crate diesel_migrations;\nextern crate diesel;\n\nembed_migrations!();\n\nfn main() {\n    println!(\"Hello, world!\");\n}\n</code></pre>\n\n<h2>migrations/2018-02-07-164146_create_post/up.sql</h2>\n\n<pre class=\"lang-sql prettyprint-override\"><code>-- Your SQL goes here\ncreate table posts (\n    id serial primary key,\n)\n</code></pre>\n\n<h2>migrations/2018-02-07-164146_create_post/down.sql</h2>\n\n<pre class=\"lang-sql prettyprint-override\"><code>-- Your SQL goes here\ndrop table posts\n</code></pre>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 148, "user_id": 10023168, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c52228f9c5ed51856eebe4139a34941?s=128&d=identicon&r=PG&f=1", "display_name": "fanyul", "link": "https://stackoverflow.com/users/10023168/fanyul"}, "edited": false, "score": 0, "creation_date": 1605535309, "post_id": 48666889, "comment_id": 114671900, "body": "I leave this here, in case someone would not find on rust forum. With <a href=\"https://docs.rs/paste/1.0.3/paste/index.html\" rel=\"nofollow noreferrer\">paste</a> crate it&#39;s possible now."}], "owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 386, "favorite_count": 0, "closed_date": 1518015945, "answer_count": 0, "score": 1, "last_activity_date": 1518016118, "creation_date": 1518015593, "last_edit_date": 1518016118, "question_id": 48666889, "link": "https://stackoverflow.com/questions/48666889/can-i-append-a-variable-name-to-the-setter-and-getter-function-names-in-a-macro", "closed_reason": "Duplicate", "title": "Can I append a variable name to the setter and getter function names in a macro?", "body": "<p>I need to generate setters and getters for my FFI code.</p>\n\n<p>Is there a way I can append the variable name to the setter and getter function names in a macro? I tried <code>stringify!($var + set)</code> but it generated a bunch of errors.</p>\n\n<p>Is hiding it in a module for each variable the only way?  </p>\n\n<pre><code>macro_rules! gen {\n    ($var:ident: $type:ident) =&gt; {\n        pub fn set(new_val: $type) {\n            unsafe { $var = new_val; }\n        }\n        pub fn get() -&gt; $type {\n            unsafe { $var }\n        }\n    }\n}\ngen!(myvar1: u32);\ngen!(myvar2: i32);\n</code></pre>\n\n<p>For <code>myvar1</code> the setter and getter would be <code>myvar1_set</code> and <code>myvar1_get</code> respectively.</p>\n"}, {"tags": ["asynchronous", "rust", "future", "rust-tokio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1518015117, "post_id": 48664087, "comment_id": 84331000, "body": "Your question is not very clear; why are you using <code>for_each</code>? What do you want to happen when the socket/channel is empty?"}, {"owner": {"reputation": 2227, "user_id": 1037094, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/7949edc53b97713ab2030bffa38b3610?s=128&d=identicon&r=PG", "display_name": "Manuel Schmidt", "link": "https://stackoverflow.com/users/1037094/manuel-schmidt"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1518020644, "post_id": 48664087, "comment_id": 84334986, "body": "I want to listen to the socket forever. Therefore the <code>for_each</code>."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1518022846, "post_id": 48664087, "comment_id": 84336487, "body": "You could write your own <code>Future</code> (which could, on finding a matching item/packet, also return the inner stream, so you can continue using it)."}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1518022760, "post_id": 48669117, "comment_id": 84336428, "body": "How does this complete on the first matching item?  Afaict this only completes after the timout or end-of-stream.  You could return an error from <code>for_each</code> to abort the loop, but then you don&#39;t need a separate <code>filter</code> call - this can be done directly from <code>for_each</code>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1518022938, "post_id": 48669117, "comment_id": 84336553, "body": "@Stefan I admit that I&#39;m partially trying to guess and fill in missing pieces as to what the OP wants. They state that they &quot;want to listen to the socket forever&quot;, but they also seem to end the program. I took that to actually mean &quot;I want to do something for every matching response, with a timeout on each step&quot;. If you think I guessed wrong, that&#39;s totally plausible! I&#39;d encourage you to ask clarification or provide your own answer if that&#39;s the case, as well."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1518022171, "creation_date": 1518022171, "answer_id": 48669117, "question_id": 48664087, "link": "https://stackoverflow.com/questions/48664087/complete-future-if-certain-condition-happens/48669117#48669117", "title": "Complete future if certain condition happens", "body": "<p>You can use <a href=\"https://docs.rs/tokio-timer/0.1.2/tokio_timer/struct.Timer.html#method.timeout_stream\" rel=\"nofollow noreferrer\"><code>tokio_timer::Timer::timeout_stream</code></a> and <a href=\"https://docs.rs/futures/0.1.18/futures/stream/trait.Stream.html#method.filter\" rel=\"nofollow noreferrer\"><code>futures::Stream::filter</code></a>:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_timer;\n\nuse tokio_core::reactor::*;\nuse futures::Stream;\nuse futures::sync::mpsc;\nuse std::time::Duration;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let timer = tokio_timer::Timer::default();\n\n    // simulate my UDP socket connection\n    let (remote, socket) = mpsc::unbounded::&lt;i32&gt;();\n    remote.unbounded_send(1).unwrap();\n    remote.unbounded_send(2).unwrap();\n    remote.unbounded_send(3).unwrap();\n\n    let consumer = timer\n        .timeout_stream(socket, Duration::from_secs(2))\n        .filter(|&amp;v| v == 2)\n        .for_each(|id| {\n            println!(\"received {}\", id);\n            Ok(())\n        });\n\n    println!(\"{:?}\", core.run(consumer));\n}\n</code></pre>\n"}], "owner": {"reputation": 2227, "user_id": 1037094, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/7949edc53b97713ab2030bffa38b3610?s=128&d=identicon&r=PG", "display_name": "Manuel Schmidt", "link": "https://stackoverflow.com/users/1037094/manuel-schmidt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 95, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1518025161, "creation_date": 1518007223, "last_edit_date": 1518025161, "question_id": 48664087, "link": "https://stackoverflow.com/questions/48664087/complete-future-if-certain-condition-happens", "title": "Complete future if certain condition happens", "body": "<p>I would like to create a future that completes if a certain value is received over a UDP connection.</p>\n\n<p>To clarify, assume I send a ping with id 2 and want to asynchronously wait for the pong with the same id. My idea was to use something like <code>send_ping(endpoint, id) -&gt; Future</code> and work with the future (e.g. passing it to other functions) knowing that it either resolves to the matching pong or to a timeout.</p>\n\n<p>A sketch of my idea:</p>\n\n<pre><code>extern crate tokio_core;\nextern crate futures;\n\nuse tokio_core::reactor::*;\nuse futures::Stream;\nuse futures::sync::mpsc;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n\n    // simulate my UDP socket connection\n    let (remote, socket) = mpsc::unbounded::&lt;i32&gt;();\n    remote.unbounded_send(1).unwrap();\n    remote.unbounded_send(2).unwrap();\n    remote.unbounded_send(3).unwrap();\n\n    let reader = socket.for_each(|id| {\n        println!(\"received {}\", id);\n        Ok(())\n    });\n\n    // create future which completes if 2 is received\n    // or after a given timeout\n\n    core.run(reader).unwrap();\n}\n</code></pre>\n\n<p>Is this even possible? I cannot find any examples.</p>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1518015034, "post_id": 48659864, "comment_id": 84330936, "body": "<code>ContrivedId</code> might as well take a <code>&amp;&#39;static T</code>"}], "tags": [], "owner": {"reputation": 3212, "user_id": 2731452, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xA89V.jpg?s=128&g=1", "display_name": "red75prime", "link": "https://stackoverflow.com/users/2731452/red75prime"}, "is_accepted": false, "score": 1, "last_activity_date": 1518014949, "last_edit_date": 1518014949, "creation_date": 1517994804, "answer_id": 48659864, "question_id": 48657718, "link": "https://stackoverflow.com/questions/48657718/using-static-lifetimes-triggers-closure-may-outlive-function-when-self-is-borr/48659864#48659864", "title": "Using static lifetimes triggers &quot;closure may outlive function&quot; when self is borrowed inside a closure", "body": "<p>The signatures of those functions:</p>\n\n<ul>\n<li><p><code>fn foo(_: &amp;'static Contrived)</code></p></li>\n<li><p><code>fn func (&amp;'static mut self)</code></p></li>\n</ul>\n\n<p>require references which borrow their values for the duration of entire program, while you need references which borrow their values just long enough.</p>\n\n<p>Remove <code>'static</code> and the program will compile:</p>\n\n<pre><code>fn foo(_: &amp;Contrived) {}\n\nfn run_in_special_state&lt;F, R&gt;(f: F) -&gt; R\nwhere\n    F: FnOnce() -&gt; R,\n{\n    // Some stuff happens before the function\n    let r = f();\n    // Some stuff happens after the function\n    r\n}\n\nstruct Contrived {\n    value: u32,\n}\n\nimpl Contrived {\n    fn func(&amp;mut self) {\n        run_in_special_state(|| foo(self));\n\n        self.value = 6;\n    }\n}\n\nstatic mut INSTANCE: Contrived = Contrived { value: 4 };\n\nfn main() {\n    unsafe { INSTANCE.func() };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=71360cb0aa5b0c3b212fcaa8a597ab3e&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p><code>&amp;'static T</code> isn't just an address of a variable, it bears additional semantics. If you want to use it as a unique identifier, you'll probably be better off creating a type, which retains only the uniqueness of the address and don't borrow the value:</p>\n\n<pre><code>mod key {\n    use super::Contrived;\n\n    #[derive(Debug, Hash)]\n    pub struct ContrivedId(usize);\n\n    impl ContrivedId {\n        pub fn new(r: &amp;'static Contrived) -&gt; Self {\n            ContrivedId(r as *const _ as usize)\n        }\n    }\n}\n\nuse key::ContrivedId;\n\nfn foo(_: ContrivedId) {}\n\nfn run_in_special_state&lt;F, R&gt;(f: F) -&gt; R\nwhere\n    F: FnOnce() -&gt; R,\n{\n    // Some stuff happens before the function\n    let r = f();\n    // Some stuff happens after the function\n    r\n}\n\npub struct Contrived {\n    value: u32,\n}\n\nimpl Contrived {\n    fn func(&amp;mut self, id: ContrivedId) {\n        run_in_special_state(|| foo(id));\n\n        self.value = 6;\n    }\n}\n\nstatic mut INSTANCE: Contrived = Contrived { value: 4 };\n\nfn main() {\n    unsafe {\n        let id = ContrivedId::new(&amp;INSTANCE);\n        INSTANCE.func(id)\n    };\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c01f0f4bdfb15a1fbc84469625f09501&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 4491, "user_id": 1124529, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/831a081035dd88efc295348b17890a5e?s=128&d=identicon&r=PG", "display_name": "Los Frijoles", "link": "https://stackoverflow.com/users/1124529/los-frijoles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 268, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1518014949, "creation_date": 1517986696, "last_edit_date": 1518013706, "question_id": 48657718, "link": "https://stackoverflow.com/questions/48657718/using-static-lifetimes-triggers-closure-may-outlive-function-when-self-is-borr", "title": "Using static lifetimes triggers &quot;closure may outlive function&quot; when self is borrowed inside a closure", "body": "<p>My program uses the memory address of variables as a unique identifier. I know this is incredibly ugly, but it is a very lightweight way to get a unique identifier. <strong>This pattern is only valid if I make these variables static so their unique id (i.e. address) lives \"forever\"</strong> which means I have several functions which require a reference with a <code>'static</code> lifetime.</p>\n\n<p>I'm using the <a href=\"https://crates.io/crates/cortex-m\" rel=\"nofollow noreferrer\">cortex-m crate</a> which provides a method which places the processor in a state that allows a function to run in an interrupt-free critical section. This is accomplished by a function which wraps the call to the function that needs to be executed in a critical section with the appropriate assembly calls.</p>\n\n<p>In this contrived example, the wrapper function is called <code>run_in_special_state</code>. I need to execute the <code>foo</code> method in the special state. However, it requires a <code>'static Contrived</code>. Here's an example that  illustrates the error:</p>\n\n<pre><code>fn foo(_: &amp;'static Contrived) {}\n\nfn run_in_special_state&lt;F, R&gt;(f: F) -&gt; R\nwhere\n    F: FnOnce() -&gt; R,\n{\n    // Some stuff happens before the function\n    let r = f();\n    // Some stuff happens after the function\n    r\n}\n\nstruct Contrived {\n    value: u32,\n}\n\nimpl Contrived {\n    fn func(&amp;'static mut self) {\n        run_in_special_state(|| foo(self));\n\n        self.value = 6;\n    }\n}\n\nstatic mut INSTANCE: Contrived = Contrived { value: 4 };\n\nfn main() {\n    unsafe { INSTANCE.func() };\n}\n</code></pre>\n\n<p>Here's what you'll get when you run that in the playground:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0373]: closure may outlive the current function, but it borrows `self`, which is owned by the current function\n  --&gt; src/main.rs:19:30\n   |\n19 |         run_in_special_state(|| foo(self));\n   |                              ^^     ---- `self` is borrowed here\n   |                              |\n   |                              may outlive borrowed value `self`\nhelp: to force the closure to take ownership of `self` (and any other referenced variables), use the `move` keyword\n   |\n19 |         run_in_special_state(move || foo(self));\n   |                              ^^^^^^^\n</code></pre>\n\n<p>I know that the <code>FnOnce</code> is going to be called before <code>run_in_special_state</code> exits. I believe this also means that the closure will not outlive the current function (<code>func</code>?), since it (the closure) will be executed and discarded before the current function (<code>func</code>) exits. How can I communicate this to the borrow checker? Is something else going on here? I've noticed that if I drop the <code>'static</code> requirement on <code>foo</code> that the error disappears.</p>\n\n<p>I can't do the suggested fix, since I need to use <code>self</code> after <code>run_in_special_state</code> is called.</p>\n"}, {"tags": ["rust", "ffi"], "comments": [{"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 2, "creation_date": 1517997253, "post_id": 48657360, "comment_id": 84318783, "body": "Aside: the Rust equivalent of C&#39;s <code>int</code> is <b>not</b> <code>i32</code>; it&#39;s <code>c_int</code> in the <a href=\"https://crates.io/crates/libc\" rel=\"nofollow noreferrer\"><code>libc</code></a> crate."}], "answers": [{"comments": [{"owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "edited": false, "score": 0, "creation_date": 1518022446, "post_id": 48659960, "comment_id": 84336232, "body": "I have two questions? Is the usize to isize because C indexing is different from Rust? Also why did you have to malloc. The space is already allocated in C right?"}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "edited": false, "score": 1, "creation_date": 1518050281, "post_id": 48659960, "comment_id": 84349766, "body": "@KDN malloc was just an example (the code above runs on play.rust-lang.org). Obviously in your situation there&#39;s no need to malloc. The usize thing is because it&#39;s legal in C (and meaningful sometimes) to use x[-1]; so offset() can take a -ve number. In this case it&#39;s not meaningful to allow -ve values, so I made it usize instead of isize, but it&#39;s arbitrary. Just use isize if you don&#39;t care."}], "tags": [], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "is_accepted": false, "score": 2, "last_activity_date": 1518014112, "last_edit_date": 1518014112, "creation_date": 1517995090, "answer_id": 48659960, "question_id": 48657360, "link": "https://stackoverflow.com/questions/48657360/change-c-array-element-via-rust-ffi/48659960#48659960", "title": "Change C array element via Rust FFI", "body": "<p>Use:</p>\n\n<pre><code>a.offset(x) as *mut i32\n</code></pre>\n\n<p>Like this:</p>\n\n<pre><code>extern crate libc;\n\nuse libc::malloc;\nuse std::mem::size_of;\n\nunsafe fn zero(data: *mut u32, length: usize) {\n    for i in 0..length - 1 {\n        let ptr = data.offset(i as isize) as *mut u32;\n        *ptr = 0;\n    }\n}\n\nunsafe fn set(data: *mut u32, offset: usize, value: u32) {\n    let ptr = data.offset(offset as isize) as *mut u32;\n    *ptr = value;\n}\n\nunsafe fn get(data: *mut u32, offset: usize) -&gt; u32 {\n    let ptr = data.offset(offset as isize) as *mut u32;\n    return *ptr;\n}\n\nunsafe fn alloc(length: usize) -&gt; *mut u32 {\n    let raw = malloc(length * size_of::&lt;*mut u32&gt;());\n    return raw as *mut u32;\n}\n\nfn main() {\n    unsafe {\n        let data = alloc(10);\n        zero(data, 10);\n\n        println!(\"{:?}\", get(data, 4));\n\n        set(data, 4, 100);\n        println!(\"{:?}\", get(data, 4));\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "edited": false, "score": 0, "creation_date": 1518022302, "post_id": 48660350, "comment_id": 84336127, "body": "This was exactly what I wanted. Worked perfectly"}], "tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": true, "score": 5, "last_activity_date": 1517996268, "creation_date": 1517996268, "answer_id": 48660350, "question_id": 48657360, "link": "https://stackoverflow.com/questions/48657360/change-c-array-element-via-rust-ffi/48660350#48660350", "title": "Change C array element via Rust FFI", "body": "<p>You could use the <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.offset\" rel=\"noreferrer\"><code>offset</code></a> method to find a single element, or use <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts_mut.html\" rel=\"noreferrer\"><code>std::slice::from_raw_parts_mut</code></a> to create a slice from pointer and (possibly dynamic) length, or use <code>static mut a: *mut [i32; 10]</code> in the first place (use <code>(*a)[index]</code> to use it).</p>\n\n<p>But: I'm pretty sure that <code>int a[10];</code> from <code>C</code> doesn't export a location of a pointer to that array, it exports the location of the array (i.e the location of the first element), and <code>extern</code> in Rust expects a location to a value of the given type (i.e. it is implemented as a pointer on both sides) , so I'd try this:</p>\n\n<pre><code>extern \"C\" {\n    static mut a: [i32; 10];\n}\n\nfn set_a(val: i32, index: usize) {\n    unsafe {\n        a[index] = val;\n    }\n}\n\nfn get_a(index: usize) -&gt; i32 {\n    unsafe { a[index] }\n}\n</code></pre>\n"}], "owner": {"reputation": 345, "user_id": 2179079, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ebbf8303d2f09da0b0a55ef801b58597?s=128&d=identicon&r=PG", "display_name": "KDN", "link": "https://stackoverflow.com/users/2179079/kdn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 707, "favorite_count": 0, "closed_date": 1518014175, "accepted_answer_id": 48660350, "answer_count": 2, "score": 0, "last_activity_date": 1518014222, "creation_date": 1517985063, "last_edit_date": 1518014087, "question_id": 48657360, "link": "https://stackoverflow.com/questions/48657360/change-c-array-element-via-rust-ffi", "closed_reason": "Duplicate", "title": "Change C array element via Rust FFI", "body": "<p>I'm using Rust to test some C code:</p>\n\n<p><strong>lol.c</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include \"lol.h\"\nint a[10]; //Assume lol.h has an extern declaration for a[10]\n</code></pre>\n\n<p><strong>lib.rs</strong></p>\n\n<pre><code>extern \"C\" {\n    static a: *mut i32;\n}\n\nfn set_a(val: i32, index: usize) {\n    assert!(index &lt; 10);\n    unsafe {\n        a[index] = val;\n    }\n}\n\nfn get_a(index: usize) {\n    assert!(index &lt; 10);\n    unsafe { a[index] }\n}\n</code></pre>\n\n<p>I used <a href=\"https://crates.io/crates/cc\" rel=\"nofollow noreferrer\">the cc crate</a> to compile and link lol.o. How do I write the <code>set_a</code> and <code>get_a</code> functions? The compiler says:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0608]: cannot index into a value of type `*mut i32`\n --&gt; src/main.rs:8:9\n  |\n8 |         a[index] = val;\n  |         ^^^^^^^^\n\nerror[E0608]: cannot index into a value of type `*mut i32`\n  --&gt; src/main.rs:14:14\n   |\n14 |     unsafe { a[index] }\n   |              ^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1517987296, "post_id": 48655891, "comment_id": 84313279, "body": "New error, new question.  What makes you think <code>Header</code> is implemented for <code>Mime</code>? Not listed here: <a href=\"https://docs.rs/hyper/0.11.17/hyper/header/trait.Header.html\" rel=\"nofollow noreferrer\">docs.rs/hyper/0.11.17/hyper/header/trait.Header.html</a> - perhaps you want the <code>ContentType</code> header, which has a <code>Mime</code> field."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 8, "last_activity_date": 1517978217, "creation_date": 1517978217, "answer_id": 48656101, "question_id": 48655891, "link": "https://stackoverflow.com/questions/48655891/no-function-or-associated-item-named-from-str-found-for-type-hypermimemim/48656101#48656101", "title": "no function or associated item named `from_str` found for type `hyper::mime::Mime`", "body": "<p>You get this error because, sure enough, there is no <code>from_str</code> method defined on <a href=\"https://docs.rs/mime/0.3.5/mime/struct.Mime.html\" rel=\"noreferrer\"><code>Mime</code></a>. In order to resolve a name like <code>Mime::from_str</code>, <code>from_str</code> has to be either an inherent method of <code>Mime</code> (not part of a trait), or part of a trait that is in scope in the place where it's used. <code>FromStr</code> isn't in scope, so you get an error -- although the error message goes so far as to tell you what's wrong and how to fix it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no function or associated item named `from_str` found for type `hyper::&lt;unnamed&gt;::Mime` in the current scope\n --&gt; src/main.rs:3:13\n  |\n3 | let test1 = hyper::mime::Mime::from_str(\"text/html+xml\").unwrap();\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: items from traits can only be used if the trait is in scope\n  = note: the following trait is implemented but not in scope, perhaps add a `use` for it:\n          candidate #1: `use std::str::FromStr;`\n</code></pre>\n\n<p>However, in this <em>particular</em> case, it's more common to use <code>FromStr</code> not by calling <code>from_str</code> directly, but indirectly with the <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.parse\" rel=\"noreferrer\"><code>parse</code></a> method on <code>str</code>, as <a href=\"https://doc.rust-lang.org/std/str/trait.FromStr.html\" rel=\"noreferrer\"><code>FromStr</code>'s documentation</a> mentions.</p>\n\n<pre><code>let test1: hyper::mime::Mime = \"text/html+xml\".parse().unwrap();\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 9325430, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc573b4c8cea8ce092e972fcbc4d1246?s=128&d=identicon&r=PG&f=1", "display_name": "Olegu", "link": "https://stackoverflow.com/users/9325430/olegu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4028, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1518014508, "creation_date": 1517976866, "last_edit_date": 1518014508, "question_id": 48655891, "link": "https://stackoverflow.com/questions/48655891/no-function-or-associated-item-named-from-str-found-for-type-hypermimemim", "title": "no function or associated item named `from_str` found for type `hyper::mime::Mime`", "body": "<p>I'm using Hyper 0.11 which re-exports the crate \"mime\". I'm trying to create a MIME type from a string:</p>\n\n<pre><code>extern crate hyper;\n\nfn main() {\n    let test1 = hyper::mime::Mime::from_str(\"text/html+xml\").unwrap();\n}\n</code></pre>\n\n<p>The error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no function or associated item named `from_str` found for type `hyper::&lt;unnamed&gt;::Mime` in the current scope\n</code></pre>\n\n<p>Why is this error, what's the cause? How to fix it?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 1, "creation_date": 1517974823, "post_id": 48655520, "comment_id": 84309114, "body": "You could implement and register a <code>Logger</code> that dispatches to per-thread <code>Loggers</code> (tracked with <a href=\"https://doc.rust-lang.org/stable/std/macro.thread_local.html\" rel=\"nofollow noreferrer\">thread-local storage</a>, perhaps), and (assuming you control the threads) have each thread register its own <code>Logger</code> (it doesn&#39;t have to be the <code>Logger</code> trait; you could define your own trait that doesn&#39;t require <code>Send + Sync</code>)."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1517975079, "post_id": 48655520, "comment_id": 84309178, "body": "There is no unsafe code in env_logger: <a href=\"https://github.com/sebasmagri/env_logger/search?utf8=\" rel=\"nofollow noreferrer\">github.com/sebasmagri/env_logger/search?utf8=</a>\u2713&amp;q=unsafe&amp;type&zwnj;&#8203;="}, {"owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1517976070, "post_id": 48655520, "comment_id": 84309434, "body": "@BurntSushi5 I never said there was. All I said that log does (<a href=\"https://github.com/rust-lang-nursery/log/blob/master/src/lib.rs#L977\" rel=\"nofollow noreferrer\">github.com/rust-lang-nursery/log/blob/master/src/lib.rs#L97&zwnj;&#8203;7</a>) and so do some logger implementations. Using a singleton  <i>mandates</i> the use of some kind of unsafe code, even if you wrap it away behind an UnsafeCell.. It&#39;s a bad design, flat out, but I&#39;m only really interested in trying to figure a pragmatic way to use it for now. /shrug"}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1517976673, "post_id": 48655520, "comment_id": 84309577, "body": "&quot;a pile of unsafe in <i>both</i> the log package and the various implementations&quot; --- interior mutability is not inherently bad design, and it can be done in several different ways using <i>safe</i> abstractions from the standard library."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1517978100, "post_id": 48655520, "comment_id": 84309918, "body": "The log crate itself doesn&#39;t force you to use a global logger, it just makes it convenient. If you don&#39;t want a global logger then, just use the logger directly. For example: <a href=\"https://docs.rs/env_logger/0.5.3/env_logger/struct.Logger.html\" rel=\"nofollow noreferrer\">docs.rs/env_logger/0.5.3/env_logger/struct.Logger.html</a> --- you won&#39;t be able to use the log crate&#39;s macros, but they look pretty easy to recreate in your own code and parameterize them by an explicit logger."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1517978215, "post_id": 48655520, "comment_id": 84309949, "body": "It might also help if you expanded this question to explain what you think a &quot;contextual logger&quot; is. Could you show a code example that approximates the code you would like to write with a logger?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1518058396, "creation_date": 1518058396, "answer_id": 48676747, "question_id": 48655520, "link": "https://stackoverflow.com/questions/48655520/is-it-possible-to-have-different-loggers-in-different-contexts/48676747#48676747", "title": "Is it possible to have different loggers in different contexts?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/48655520/is-it-possible-to-have-different-loggers-in-different-contexts#comment84309114_48655520\">mentioned in the comments</a>, you can use thread-local storage to build up a stack of loggers. You can then always log to the logger at top of the stack:</p>\n\n<pre><code>use std::cell::RefCell;\n\ntrait Logger {\n    fn log(&amp;self, message: &amp;str);\n}\n\nstruct StderrLogger;\n\nimpl Logger for StderrLogger {\n    fn log(&amp;self, message: &amp;str) {\n        eprintln!(\"Logger: {}\", message);\n    }\n}\n\nstruct NetworkLogger;\n\nimpl Logger for NetworkLogger {\n    fn log(&amp;self, message: &amp;str) {\n        eprintln!(\"The cloud: {}\", message);\n    }\n}\n\nthread_local! {\n    static LOGGER: RefCell&lt;Vec&lt;Box&lt;Logger&gt;&gt;&gt; = RefCell::new(vec![Box::new(StderrLogger)]);\n}\n\nfn push_context&lt;L, F, R&gt;(l: L, f: F) -&gt; R\nwhere\n    L: Logger + 'static,\n    F: FnOnce() -&gt; R,\n{\n    LOGGER.with(|logger| logger.borrow_mut().push(Box::new(l)));\n\n    let r = f();\n\n    LOGGER.with(|logger| logger.borrow_mut().pop());\n\n    r\n}\n\nmacro_rules! log {\n    ($msg:expr) =&gt; {\n        LOGGER.with(|logger| {\n            if let Some(logger) = logger.borrow().last() {\n                logger.log($msg)\n            }\n        })\n    }\n}\n\nfn main() {\n    log!(\"a\");\n    push_context(NetworkLogger, || {\n        log!(\"b\");\n    });\n    log!(\"c\");\n}\n</code></pre>\n\n<p>You will need to have methods to add a new logger to the stack and remove it (<code>push_context</code>).</p>\n\n<p>I didn't take the time to actually integrate this with the log crate, but I believe it should be straight-forward to do. You'll have to implement whichever trait the log crate needs to do the work found in this <code>log</code> macro.</p>\n\n<hr>\n\n<p>Here's my opinion, though: global <em>anything</em>, including loggers, is a code smell. This is especially true when you start wanting to impose more and more details on what was a simple abstraction.</p>\n\n<p><a href=\"http://www.growing-object-oriented-software.com/\" rel=\"nofollow noreferrer\"><em>Growing Object-Oriented Software, Guided by Tests</em></a> really helped me clarify my thinking on this:</p>\n\n<blockquote>\n  <h1>Logging Is a Feature</h1>\n  \n  <ul>\n  <li><p><em>Support</em> logging (errors and info) is\n  part of the user interface of the application. These messages are\n  intended to be tracked by support staff, as well as perhaps system\n  administrators and operators, to diagnose a failure or monitor the\n  progress of the running system. </p></li>\n  <li><p><em>Diagnostic</em> logging (debug and trace)\n  is infrastructure for programmers. These messages should not be turned\n  on in production because they\u2019re intended to help the programmers\n  understand what\u2019s going on inside the system they\u2019re developing.</p></li>\n  </ul>\n</blockquote>\n\n<p>The former should almost always be something that is part of the domain of the system and should not be a second-class citizen. Make a custom trait with methods that make sense for your application and use dependency injection to pass it around.</p>\n\n<p>The latter is what I find something like the log crate suited for \u2014 dumping out raw data to diagnose a problem in the wild.</p>\n"}], "owner": {"reputation": 25893, "user_id": 353820, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/32b29e1dc23c2c5abe0283ab7b9541d3?s=128&d=identicon&r=PG", "display_name": "Doug", "link": "https://stackoverflow.com/users/353820/doug"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "accepted_answer_id": 48676747, "answer_count": 1, "score": 0, "last_activity_date": 1518058396, "creation_date": 1517974199, "last_edit_date": 1518056893, "question_id": 48655520, "link": "https://stackoverflow.com/questions/48655520/is-it-possible-to-have-different-loggers-in-different-contexts", "title": "Is it possible to have different loggers in different contexts?", "body": "<p>The <a href=\"https://github.com/rust-lang-nursery/log\" rel=\"nofollow noreferrer\">log crate</a> uses:</p>\n\n<ul>\n<li>A single global static <code>Logger</code> (<code>Send + Sync</code>) instance is registered.</li>\n<li>All the <code>info!</code>, <code>warn!</code>, etc. macros are dispatched to the global logger from all threads.</li>\n<li>You globally set the minimum log level with <code>set_max_level</code></li>\n</ul>\n\n<p>Is it possible to somehow untangle this and have different loggers in different contexts, for example, for different threads?</p>\n\n<p>Here is a specific example of what I want to achieve:</p>\n\n<p>Target 'A', 'B' and 'C' are different logging targets, e.g. console for A, file for B, and a network log endpoint for C. It doesn't really matter what A/B/C are, just that they are <em>different</em> from each other.</p>\n\n<pre><code>#[macro_use]\nextern crate log;\n\nuse std::thread::spawn;\n\nuse log::{set_logger, set_max_level, Level, LevelFilter, Log, Metadata, Record};\n\nstruct Logger {}\n\nimpl Log for Logger {\n    fn enabled(&amp;self, metadata: &amp;Metadata) -&gt; bool {\n        metadata.level() &lt;= Level::Info\n    }\n\n    fn log(&amp;self, record: &amp;Record) {\n        println!(\"{}\", record.args());\n    }\n\n    fn flush(&amp;self) {}\n}\n\nstatic LOGGER: Logger = Logger {};\n\nfn init() {\n    set_logger(&amp;LOGGER).unwrap();\n    set_max_level(LevelFilter::Info);\n}\n\nfn foo() {\n    // Should always log to target 'B'\n    info!(\"B\");\n}\n\nfn main() {\n    init();\n\n    // Should log to target 'A'\n    info!(\"A\");\n    foo();\n\n    spawn(move || {\n        // It would be nice, to be able to also, say, use a different\n        // logging level here, e.g. only log error!() in this thread.\n\n        // should log to target 'C'\n        info!(\"C\");\n\n        // should still log to target 'B'\n        foo();\n    }).join()\n        .unwrap();\n}\n</code></pre>\n\n<p>Obviously, the trivial logger above doesn't do what I want, but is it <em>possible</em> to implement a <code>log::Log</code> in way that does, or not? If so, how?</p>\n\n<p>I see the <code>Record</code> type has a <code>metadata</code> field, but I can't see any meaningful way of using this in a custom logger to dispatch based on the context?</p>\n\n<p>Is the only solution to write a custom log package?</p>\n\n<p>It seems worth noting that <a href=\"https://github.com/rust-lang-nursery/log/blob/master/src/macros.rs#L36\" rel=\"nofollow noreferrer\">in log 0.4.1</a> the logger is not even invoked if the global level is > the max level; the documentation <a href=\"https://docs.rs/log/0.4.1/log/#implementing-a-logger\" rel=\"nofollow noreferrer\">on how to do this</a> appears wrong, so normally you would have a function to wrap <code>set_max_level</code> and <code>set_logger</code>, but this is just a trivial example.</p>\n"}, {"tags": ["types", "rust", "strong-typing"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 2, "creation_date": 1517958089, "post_id": 48653052, "comment_id": 84304793, "body": "more minimal example: <code>fn main() { let ans = (0u32..10u32).sum(); }</code> fails to compile with <code>error[E0282]: type annotations needed</code>. If you turbo-fish the call to <code>sum</code> it will compile."}], "answers": [{"comments": [{"owner": {"reputation": 1192, "user_id": 7023187, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/321015561587503/picture?type=large", "display_name": "Rares Dima", "link": "https://stackoverflow.com/users/7023187/rares-dima"}, "edited": false, "score": 0, "creation_date": 1517960148, "post_id": 48653400, "comment_id": 84305431, "body": "I see, this makes sense. Thank you!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1517958313, "creation_date": 1517958313, "answer_id": 48653400, "question_id": 48653052, "link": "https://stackoverflow.com/questions/48653052/type-must-be-known-in-this-context-when-using-iteratorsum/48653400#48653400", "title": "Type must be known in this context when using Iterator::sum", "body": "<p>I recommend checking the documentation for new functions. <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.sum\" rel=\"nofollow noreferrer\"><code>Iterator::sum</code></a> is defined as:</p>\n\n<pre><code>fn sum&lt;S&gt;(self) -&gt; S\nwhere\n    S: Sum&lt;Self::Item&gt;, \n</code></pre>\n\n<p>This means that it can be called on any iterator when the return type (<code>S</code>) can be created from the items of the iterator.</p>\n\n<p>This conceptually allows an array of <code>i8</code>s to be summed to an <code>i8</code>, an <code>i16</code>, <code>i32</code>, etc. This flexibility comes at a price: you have to specify what type to sum to:</p>\n\n<pre><code>.sum::&lt;MyType&gt;()\n</code></pre>\n\n<p>You can also stash the result in an explicitly typed variable:</p>\n\n<pre><code>fn euclidean_to(&amp;self, other: Vec&lt;u32&gt;) -&gt; f64 {\n    let x: u32 = self.iter()\n        .zip(other)\n        .map(|(xa, xb)| (xa - xb).pow(2))\n        .sum();\n\n    (x as f64).sqrt()\n}\n</code></pre>\n\n<p>This is the exact same as <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>Iterator::collect</code></a>.</p>\n"}], "owner": {"reputation": 1192, "user_id": 7023187, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/321015561587503/picture?type=large", "display_name": "Rares Dima", "link": "https://stackoverflow.com/users/7023187/rares-dima"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 567, "favorite_count": 0, "closed_date": 1517968931, "accepted_answer_id": 48653400, "answer_count": 1, "score": 2, "last_activity_date": 1517958313, "creation_date": 1517956331, "last_edit_date": 1517958103, "question_id": 48653052, "link": "https://stackoverflow.com/questions/48653052/type-must-be-known-in-this-context-when-using-iteratorsum", "closed_reason": "Duplicate", "title": "Type must be known in this context when using Iterator::sum", "body": "<p>I am trying to implement a trait that models the euclidean distance between 2 points in an n-dim space. The points are represented as <code>Vec&lt;u32&gt;</code>.</p>\n\n<pre><code>pub trait Point {\n    fn euclidean_to(&amp;self, other: Vec&lt;u32&gt;) -&gt; f64;\n}\n\nimpl Point for Vec&lt;u32&gt; {\n    fn euclidean_to(&amp;self, other: Vec&lt;u32&gt;) -&gt; f64 {\n        (self.iter()\n            .zip(other.iter())\n            .map(|(xa, xb): (&amp;u32, &amp;u32)| (xa - xb).pow(2))\n            .sum() as f64)\n            .sqrt()\n    }\n}\n</code></pre>\n\n<p>Logic tells me that there is no reason for this not to work. As far as I know, the type parser works top to bottom, so all the types should be known. I am using Intellij-Rust and up until the <code>.map(|(xa, xb): (&amp;u32, &amp;u32)|</code> the compiler got the types just fine, at least I believe it did since it was able to figure out and give type hints about <code>(xa, xb)</code> before I explicitly specified the type. </p>\n\n<p>As far as I can see, everything goes downhill when I use <code>sum()</code>. I'm pretty sure I'm missing something since it's pretty unlikely that the type parser wouldn't figure out that the sum of some <code>u32</code>s is another <code>u32</code> but it still gives the <code>type must be known in this context</code> treatment.</p>\n\n<p>What exactly am I missing?</p>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 1, "creation_date": 1517917862, "post_id": 48642342, "comment_id": 84281237, "body": "<a href=\"https://meta.stackexchange.com/questions/55437/how-can-the-backtick-character-be-included-in-code\">Please format your code carefully</a>."}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 0, "creation_date": 1517918007, "post_id": 48642342, "comment_id": 84281331, "body": "I&#39;ve adjusted the error message format as requested"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517922181, "post_id": 48642342, "comment_id": 84283932, "body": "See also <a href=\"https://stackoverflow.com/q/30811107/155423\">Getting a single character out of a string</a>."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 1, "creation_date": 1517926206, "post_id": 48642342, "comment_id": 84286702, "body": "By character you mean unicode codepoint?"}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1517926842, "post_id": 48642342, "comment_id": 84287129, "body": "@CodesInChaos Not sure what a unicode codepoint is, but basically, what I  was trying to do was if I had <code>abcd</code> as my string, I would want to get <code>d</code> as the final char. My current use case did not involve the use of strings like <code>\u3042\u3044\u3046\u3048\u304a</code>, but if so, then I would have liked to get the final char <code>\u304a</code>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1517928607, "post_id": 48642342, "comment_id": 84288560, "body": "@BB The question you should perhaps answer, mostly for yourself, is whether the final &quot;character&quot; of <code>cafe\u0301</code> is <code>e\u0301</code> or <code>&#180;</code>. If it should be <code>&#233;</code>, you want to iterate by graphemes instead of <code>char</code>s."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517928883, "post_id": 48642342, "comment_id": 84288777, "body": "See also <a href=\"https://stackoverflow.com/q/38406793/155423\">Why is capitalizing the first letter of a string so convoluted in Rust?</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517929471, "post_id": 48642342, "comment_id": 84289191, "body": "Likewise, what do you want the second-to-last character of &quot;&#197;str&#246;m&quot; and &quot;A\u030astro\u0308m&quot; to be? Welcome to <a href=\"https://en.wikipedia.org/wiki/Precomposed_character\" rel=\"nofollow noreferrer\">precomposed characters</a>; they <a href=\"https://play.rust-lang.org/?gist=37f106fbc7b537edf0ea66b64ed8b63f&amp;version=stable\" rel=\"nofollow noreferrer\">have different answers</a>."}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1517929814, "post_id": 48642342, "comment_id": 84289442, "body": "@trentcl I would expect the final &quot;character&quot; of <code>cafe\u0301</code> to be <code>e\u0301</code>. You mentioned graphemes, and I did some googling to check it out (for potential future use cases). Looks like I may have to import an external crate to do so as mentioned here: <a href=\"https://users.rust-lang.org/t/how-do-you-iterate-over-grapheme-clusters-of-a-string-in-rust/11338/2\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517929979, "post_id": 48642342, "comment_id": 84289565, "body": "@Shepmaster it looks like using rust for text wrangling (of non ascii text) would prove to be a fairly difficult exercise. Although, I believe python also had these difficulties prior to python 3."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1517930362, "post_id": 48642342, "comment_id": 84289810, "body": "@BB I think you are looking at it backwards. Text processing is <b>hard</b> because human languages are complicated and encoding them into computers is also complicated. Rust has a small set of opinions (e.g. that strings are UTF-8), but otherwise has to be hands-off in order to allow programmers to build the correct abstractions they need for their cases. As other people have mentioned, thinking of strings as bags of characters is ultimately incorrect because what a &quot;character&quot; is  is poorly defined to start with in our global world."}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517930540, "post_id": 48642342, "comment_id": 84289924, "body": "@Shepmaster That makes sense. I haven&#39;t had to do any text wrangling with &quot;non-generic&quot; characters in years, But I do remember the previous experiences to be fairly frustrating."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1517931083, "post_id": 48642342, "comment_id": 84290314, "body": "@BB Python 3 made great strides in correct Unicode handling, but it still doesn&#39;t offer an easy way to work with graphemes -- Rust (with the <code>unicode-segmentation</code> crate) is actually better in this regard. If you copy and paste <code>&quot;cafe\u0301&quot;[-1]</code> into your Python interpreter, it probably won&#39;t give you <code>&quot;&#233;&quot;</code>."}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1517931237, "post_id": 48642342, "comment_id": 84290414, "body": "@trentcl You&#39;re right, I didn&#39;t get <code>&quot;&#233;&quot;</code>, I got <code>&#39;\u0301&#39;</code>, whatever that is."}], "answers": [{"comments": [{"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "edited": false, "score": 0, "creation_date": 1517918806, "post_id": 48642497, "comment_id": 84281821, "body": "<code>mystring.chars().last().unwrap()</code> looks easier to read, and is more concise. Is there a way to use it without <code>unwrap?</code>.  I had the impression that using <code>unwrap</code> was discouraged."}, {"owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "reply_to_user": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "edited": false, "score": 1, "creation_date": 1517919104, "post_id": 48642497, "comment_id": 84282015, "body": "@BB <a href=\"https://doc.rust-lang.org/1.6.0/book/patterns.html\" rel=\"nofollow noreferrer\">Pattern matching.</a>"}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "edited": false, "score": 1, "creation_date": 1517919177, "post_id": 48642497, "comment_id": 84282059, "body": "@erip Haven&#39;t gotten to that part of the book yet, but thanks for the headsup!"}, {"owner": {"reputation": 13883, "user_id": 2883245, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/NPpPG.jpg?s=128&g=1", "display_name": "erip", "link": "https://stackoverflow.com/users/2883245/erip"}, "reply_to_user": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "edited": false, "score": 1, "creation_date": 1517919209, "post_id": 48642497, "comment_id": 84282080, "body": "@BB Best of luck!"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "edited": false, "score": 3, "creation_date": 1517919451, "post_id": 48642497, "comment_id": 84282221, "body": "@BB It should also be noted that this is an O(n) operation in Rust, as opposed to Python&#39;s O(1).  You <i>should not</i> treat strings like arrays."}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1517919672, "post_id": 48642497, "comment_id": 84282372, "body": "@DK Well, I was hoping to get the canonical way to do it, since I figured that getting the final element of a string was a fairly common operation.  I didn&#39;t have much luck googling for the answer however. Does rust have a O*(1) version for this as well?"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "reply_to_user": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 6, "creation_date": 1517920230, "post_id": 48642497, "comment_id": 84282735, "body": "@DK To clarify, getting the last character is an O(1) operation. Getting the nth character from either end is O(n) where n is the index."}, {"owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1517920959, "post_id": 48642497, "comment_id": 84283178, "body": "@interjay Thanks!"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 4, "creation_date": 1517922086, "post_id": 48642497, "comment_id": 84283874, "body": "<i>&quot;I had the impression that using <code>unwrap</code> was discouraged&quot;</i> It&#39;s a matter of whether <a href=\"https://doc.rust-lang.org/book/second-edition/ch09-03-to-panic-or-not-to-panic.html\" rel=\"nofollow noreferrer\">to <code>panic!</code> or not to <code>panic!</code></a>. <code>unwrap</code> is to express that any potential error coming from there is irrecoverable and should not happen. There still are legitimate cases for this."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1517938708, "post_id": 48642497, "comment_id": 84295242, "body": "@E_net4: I still prefer <code>expect</code>."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1517939070, "post_id": 48642497, "comment_id": 84295447, "body": "@MatthieuM. I&#39;ve had this conversation before. :) Feel free to replace <code>unwrap</code> with <code>expect</code> above. The latter can often be better, but it&#39;s also noise if the only message you can think of is &quot;IT SHOULD WORK!!!1&quot;."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 21, "last_activity_date": 1534172797, "last_edit_date": 1534172797, "creation_date": 1517918069, "answer_id": 48642497, "question_id": 48642342, "link": "https://stackoverflow.com/questions/48642342/how-to-get-the-last-character-of-a-str/48642497#48642497", "title": "How to get the last character of a &amp;str?", "body": "<p>That is how you get the last <code>char</code> (which may not be what you think of as a \"character\"):</p>\n\n<pre><code>mystring.chars().last().unwrap();\n</code></pre>\n\n<p>Use <code>unwrap</code> only if you are sure that there is at least one char in your string.</p>\n\n<hr>\n\n<p><strong>Warning</strong>: About the general case (do the same thing as <code>mystring[-n]</code> in Python): UTF-8 strings are not to be used through indexing, because indexing is not a O(1) operation (a string in Rust is not an array). Please read <a href=\"https://stackoverflow.com/a/24542608/4498831\">this</a> for more information.</p>\n\n<p>However, if you want to index from the end like in Python, you must do this in Rust:</p>\n\n<pre><code>mystring.chars().rev().nth(n - 1) // Python: mystring[-n]\n</code></pre>\n\n<p>and check if there is such a character.</p>\n\n<p>If you miss the simplicity of Python syntax, you can write your own extension:</p>\n\n<pre><code>trait StrExt {\n    fn from_end(&amp;self, n: usize) -&gt; char;\n}\n\nimpl&lt;'a&gt; StrExt for &amp;'a str {\n    fn from_end(&amp;self, n: usize) -&gt; char {\n        self.chars().rev().nth(n).expect(\"Index out of range in 'from_end'\")\n    }\n}\n\nfn main() {\n    println!(\"{}\", \"foobar\".from_end(2)) // prints 'b'\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534172624, "post_id": 51825009, "comment_id": 90604833, "body": "Saying that a solution has problems <i>but not stating what those problems are</i> creates a very poor answer. Links to external resources are great, but any pertinent information needs to be included in the answer itself."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1534172666, "post_id": 51825009, "comment_id": 90604861, "body": "<i>That is, the final value contained in the string.</i> \u2014 this is not true unless you are dealing with ASCII-only text; which is less and less true as time progresses. Think about emoji."}], "tags": [], "owner": {"reputation": 101, "user_id": 9388666, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d9035e744bd6720a555d54a9102ebe1?s=128&d=identicon&r=PG&f=1", "display_name": "nyghtly", "link": "https://stackoverflow.com/users/9388666/nyghtly"}, "is_accepted": false, "score": 10, "last_activity_date": 1577467905, "last_edit_date": 1577467905, "creation_date": 1534171538, "answer_id": 51825009, "question_id": 48642342, "link": "https://stackoverflow.com/questions/48642342/how-to-get-the-last-character-of-a-str/51825009#51825009", "title": "How to get the last character of a &amp;str?", "body": "<p>One option is to use <a href=\"https://doc.rust-lang.org/book/2018-edition/ch04-03-slices.html#string-slices\" rel=\"noreferrer\">slices</a>. Here's an example:</p>\n\n<pre><code>let len = my_str.len();\nlet final_str = &amp;my_str[len-1..];\n</code></pre>\n\n<p>This returns a string slice from position <code>len-1</code> through the end of the string. That is to say, the last <em>byte</em> of your string. If your string consists of only ASCII values, then you'll get the final character of your string. </p>\n\n<p>The reason why this only works with ASCII values is because they only ever require one byte of storage. Anything else, and Rust is likely to panic at runtime. This is what happens when you try to slice out one byte from a 2-byte character.</p>\n\n<p>For a more detailed explanation, please see the strings section of <a href=\"https://doc.rust-lang.org/book/ch08-02-strings.html\" rel=\"noreferrer\">the Rust book</a>.</p>\n"}], "owner": {"reputation": 786, "user_id": 6284629, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/c9a790c3aff19cbf1c62cfb788b467a3?s=128&d=identicon&r=PG&f=1", "display_name": "B B", "link": "https://stackoverflow.com/users/6284629/b-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10635, "favorite_count": 0, "accepted_answer_id": 48642497, "answer_count": 2, "score": 17, "last_activity_date": 1577467905, "creation_date": 1517917562, "last_edit_date": 1517922164, "question_id": 48642342, "link": "https://stackoverflow.com/questions/48642342/how-to-get-the-last-character-of-a-str", "title": "How to get the last character of a &amp;str?", "body": "<p>In Python, this would be <code>final_char = mystring[-1]</code>.  How can I do the same in Rust?</p>\n\n<p>I have tried</p>\n\n<pre><code>mystring[mystring.len() - 1]\n</code></pre>\n\n<p>but I get the error <code>the type 'str' cannot be indexed by 'usize'</code></p>\n"}, {"tags": ["rust", "serde", "toml"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 3, "creation_date": 1517917648, "post_id": 48641541, "comment_id": 84281115, "body": "The quickest way to figure out how your toml should be looking is by deriving <code>Serialize</code> and emitting toml for your structures."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1517922274, "post_id": 48641541, "comment_id": 84283993, "body": "@oli_obk-ker that&#39;s a really good idea, thank you!"}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1517922348, "post_id": 48641541, "comment_id": 84284047, "body": "And now that you mentioned it, it seems so obvious, I feel stupid for not trying this in the first place lol."}, {"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1517925654, "post_id": 48641541, "comment_id": 84286317, "body": "Well, it seems the toml crate has the same questions I do: how do you serialize the enum? When I create an actor and use toml::to_string() on it, it produces the output Err(UnsupportedType). If I change the definition of actor so that actions be Vec&lt;String&gt; instead of Vec&lt;Actions&gt;, it produces valid TOML."}], "answers": [{"comments": [{"owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "edited": false, "score": 0, "creation_date": 1518006756, "post_id": 48651990, "comment_id": 84325006, "body": "Thanks, Shep. That serde enum documentation is exactly what I was looking for. Cheers!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1606875539, "last_edit_date": 1606875539, "creation_date": 1517951332, "answer_id": 48651990, "question_id": 48641541, "link": "https://stackoverflow.com/questions/48641541/deserializing-toml-into-vector-of-enum-with-values/48651990#48651990", "title": "Deserializing TOML into vector of enum with values", "body": "<p>Serde has <a href=\"https://serde.rs/enum-representations.html\" rel=\"nofollow noreferrer\">lots of options for serializing enums</a>. One that works for your case:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use serde::{Deserialize, Serialize}; // 1.0.117\nuse toml; // 0.5.7\n\n#[derive(Debug, Serialize, Deserialize, PartialEq)]\n#[serde(tag = &quot;type&quot;, content = &quot;args&quot;)]\nenum Actions {\n    Wait(usize),\n    Move { x: usize, y: usize },\n}\n\nfn main() {\n    let a_wait = Actions::Wait(5);\n    println!(&quot;{}&quot;, toml::to_string(&amp;a_wait).unwrap());\n\n    let a_move = Actions::Move { x: 1, y: 1 };\n    println!(&quot;{}&quot;, toml::to_string(&amp;a_move).unwrap());\n}\n</code></pre>\n<pre><code>type = &quot;Wait&quot;\nargs = 5\n</code></pre>\n<pre><code>type = &quot;Move&quot;\n\n[args]\nx = 1\ny = 1\n</code></pre>\n"}], "owner": {"reputation": 916, "user_id": 3019905, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/P1ga3.png?s=128&g=1", "display_name": "Dash83", "link": "https://stackoverflow.com/users/3019905/dash83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1987, "favorite_count": 1, "accepted_answer_id": 48651990, "answer_count": 1, "score": 5, "last_activity_date": 1606875539, "creation_date": 1517915175, "last_edit_date": 1517951119, "question_id": 48641541, "link": "https://stackoverflow.com/questions/48641541/deserializing-toml-into-vector-of-enum-with-values", "title": "Deserializing TOML into vector of enum with values", "body": "<p>I'm trying to read a TOML file to create a struct that contains a vector of enums with associated values. Here's the sample code:</p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate toml;\n\nuse std::fs::File;\nuse std::io::Read;\n\n#[derive(Debug, Deserialize, PartialEq)]\nstruct Actor {\n    name: String,\n    actions: Vec&lt;Actions&gt;,\n}\n\n#[derive(Debug, Deserialize, PartialEq)]\nenum Actions {\n    Wait(usize),\n    Move { x: usize, y: usize },\n}\n\nfn main() {\n    let input_file = \"./sample_actor.toml\";\n    let mut file = File::open(input_file).unwrap();\n    let mut file_content = String::new();\n    let _bytes_read = file.read_to_string(&amp;mut file_content).unwrap();\n    let actor: Actor = toml::from_str(&amp;file_content).unwrap();\n    println!(\"Read actor {:?}\", actor);\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[dependencies]\nserde_derive = \"1.0.10\"\nserde = \"1.0.10\"\ntoml = \"0.4.2\"\n</code></pre>\n\n<p><strong>sample_actor.toml</strong></p>\n\n<pre><code>name = \"actor1\"\nactions = [move 3 4, wait 20, move 5 6]\n</code></pre>\n\n<p>I know the file looks \"wrong\", but I have no idea how I should write the actions in the TOML file such that the crate would be able to recognize them as an enum with X number of values.</p>\n\n<p>The error I get when running this example with <code>cargo run</code> is the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { inner: ErrorInner { kind: NumberInvalid, line: Some(1), col: 11, message: \"\", key: [] } }', /checkout/src/libcore/result.rs:906:4\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>I know that I probably need to implement <code>FromStr</code> for my enum to convert a string into my enum, and I briefly know that custom deserializers can be implemented to deserialize in a specific way, but I'm not sure how these pieces fit together.</p>\n\n<p>It seems an equivalent example using serde_json instead of TOML works straight out (using JSON files instead of TOML of course).</p>\n\n<p>JSON version of the code:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\n\n#[macro_use]\nextern crate serde_derive;\n\nuse serde_json::Error;\nuse std::fs::File;\nuse std::io::Read;\n\n#[derive(Debug, Serialize, Deserialize)]\nenum Foo {\n    bar(u32),\n    baz { x: u32, y: u32 },\n}\n\n#[derive(Debug, Serialize, Deserialize)]\nstruct Address {\n    street: String,\n    city: String,\n    nums: Vec&lt;Foo&gt;,\n}\n\nfn main() {\n    /*\n        let address = Address {\n            street: \"10 Downing Street\".to_owned(),\n            city: \"London\".to_owned(),\n            nums : vec![Foo::bar(1), Foo::baz{x : 2, y : 3}],\n        };\n\n        // Serialize it to a JSON string.\n        let j = serde_json::to_string(&amp;address).unwrap();\n\n        // Print, write to a file, or send to an HTTP server.\n        println!(\"{}\", j);\n    */\n    let input_file = \"./sample_address.json\";\n    let mut file = File::open(input_file).unwrap();\n    let mut file_content = String::new();\n    let _bytes_read = file.read_to_string(&amp;mut file_content).unwrap();\n    let address: Address = serde_json::from_str(&amp;file_content).unwrap();\n    println!(\"{:?}\", address);\n}\n</code></pre>\n\n<p>The JSON data read/written in this example is:</p>\n\n<pre><code>Address { street: \"10 Downing Street\", city: \"London\", nums: [bar(1), baz { x: 2, y: 3 }] }\n</code></pre>\n\n<p>Maybe the TOML crate can't support my use-case?</p>\n"}, {"tags": ["asynchronous", "concurrency", "rust", "future", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 2, "last_activity_date": 1517915914, "creation_date": 1517915914, "answer_id": 48641782, "question_id": 48640642, "link": "https://stackoverflow.com/questions/48640642/async-read-from-udpsocket/48641782#48641782", "title": "Async read from UdpSocket", "body": "<p>Never <code>sleep</code> in async code (and avoid any other blocking calls too).</p>\n\n<p>You might want to use <a href=\"https://docs.rs/tokio-core/0.1.12/tokio_core/reactor/struct.Timeout.html\" rel=\"nofollow noreferrer\"><code>Timeout</code></a> instead like this:</p>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9d95d98f4419f8dedac51b0e101121f3&amp;version=stable\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre><code>fn compute(handle: &amp;Handle, addr: SocketAddr, _msg: Vec&lt;u8&gt;) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt;&gt; {\n    println!(\"Starting to compute for: {}\", addr);\n    Box::new(\n        Timeout::new(std::time::Duration::from_secs(8), handle)\n            .unwrap()\n            .map_err(|e| panic!(\"timeout failed: {:?}\", e))\n            .and_then(move |()| {\n                println!(\"Done computing for for: {}\", addr);\n                Ok(())\n            }),\n    )\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2227, "user_id": 1037094, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/7949edc53b97713ab2030bffa38b3610?s=128&d=identicon&r=PG", "display_name": "Manuel Schmidt", "link": "https://stackoverflow.com/users/1037094/manuel-schmidt"}, "edited": false, "score": 0, "creation_date": 1517918677, "post_id": 48642164, "comment_id": 84281741, "body": "Yes, this is what I meant. I made a comment to my question to clarify the use of sleep."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 2, "last_activity_date": 1517924284, "last_edit_date": 1517924284, "creation_date": 1517917010, "answer_id": 48642164, "question_id": 48640642, "link": "https://stackoverflow.com/questions/48640642/async-read-from-udpsocket/48642164#48642164", "title": "Async read from UdpSocket", "body": "<p>As @Stefan said in another answer, you should not block in the asynchronous code. Given your example, it looks like the <code>sleep</code> is a placeholder for some long computation. So instead of using a timeout, you should delegate that computation to another thread like <a href=\"https://tokio.rs/docs/getting-started/futures/#asynchronous-version\" rel=\"nofollow noreferrer\">this example</a>:</p>\n\n<pre><code>extern crate futures;\nextern crate futures_cpupool;\n\nuse futures::Future;\nuse futures_cpupool::CpuPool;\n\n...\n\nlet pool = CpuPool::new_num_cpus();\n\n...\n\nfn compute(handle: &amp;Handle, addr: SocketAddr, _msg: Vec&lt;u8&gt;) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt;&gt; {\n    // I don't know enough about Tokio to know how to make `pool` available here\n    pool.spawn_fn (|| {\n        println!(\"Starting to compute for: {}\", addr);\n        std::thread::sleep(std::time::Duration::from_secs(8));\n        println!(\"Done computing for for: {}\", addr);\n        Ok(())\n    })\n}\n</code></pre>\n"}], "owner": {"reputation": 2227, "user_id": 1037094, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/7949edc53b97713ab2030bffa38b3610?s=128&d=identicon&r=PG", "display_name": "Manuel Schmidt", "link": "https://stackoverflow.com/users/1037094/manuel-schmidt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 591, "favorite_count": 0, "accepted_answer_id": 48642164, "answer_count": 2, "score": 1, "last_activity_date": 1517924284, "creation_date": 1517912513, "last_edit_date": 1517923108, "question_id": 48640642, "link": "https://stackoverflow.com/questions/48640642/async-read-from-udpsocket", "title": "Async read from UdpSocket", "body": "<p>I am trying to concurrently process arriving UDP packets in Tokio. However the following MWE does not do what I expected:</p>\n\n<pre><code>extern crate futures;\nextern crate tokio_core;\nextern crate tokio_io;\n\nuse futures::{Future, Stream};\nuse std::net::SocketAddr;\nuse tokio_core::net::{UdpCodec, UdpSocket};\nuse tokio_core::reactor::Core;\n\n// just a codec to send and receive bytes\npub struct LineCodec;\nimpl UdpCodec for LineCodec {\n    type In = (SocketAddr, Vec&lt;u8&gt;);\n    type Out = (SocketAddr, Vec&lt;u8&gt;);\n\n    fn decode(&amp;mut self, addr: &amp;SocketAddr, buf: &amp;[u8]) -&gt; std::io::Result&lt;Self::In&gt; {\n        Ok((*addr, buf.to_vec()))\n    }\n\n    fn encode(&amp;mut self, (addr, buf): Self::Out, into: &amp;mut Vec&lt;u8&gt;) -&gt; SocketAddr {\n        into.extend(buf);\n        addr\n    }\n}\n\nfn compute(addr: SocketAddr, msg: Vec&lt;u8&gt;) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt;&gt; {\n    println!(\"Starting to compute for: {}\", addr);\n    // sleep is a placeholder for a long computation\n    std::thread::sleep(std::time::Duration::from_secs(8));\n    println!(\"Done computing for for: {}\", addr);\n    Box::new(futures::future::ok(()))\n}\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n    let listening_addr = \"127.0.0.1:8080\".parse::&lt;SocketAddr&gt;().unwrap();\n    let socket = UdpSocket::bind(&amp;listening_addr, &amp;handle).unwrap();\n    println!(\"Listening on: {}\", socket.local_addr().unwrap());\n\n    let (writer, reader) = socket.framed(LineCodec).split();\n\n    let socket_read = reader.for_each(|(addr, msg)| {\n        println!(\"Got {:?}\", msg);\n        handle.spawn(compute(addr, msg));\n        Ok(())\n    });\n\n    core.run(socket_read).unwrap();\n}\n</code></pre>\n\n<p>Connecting two terminals with <code>$ nc -u localhost 8080</code> and sending some text, I can see that the message from the second terminal is processed after the first finished.</p>\n\n<p>What do I have to change?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "edited": false, "score": 0, "creation_date": 1517885228, "post_id": 48634652, "comment_id": 84266274, "body": "So, I did try that and it seemed to mess up the shared dependency nature of workspaces. When I add in the printer crate as a dependency, I then need to add its dependencies to its <code>Cargo.toml</code>. It stops sharing the dependencies with the root crate."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "edited": false, "score": 2, "creation_date": 1517886242, "post_id": 48634652, "comment_id": 84266482, "body": "@garrettmaring <i>I then need to add its dependencies to its Cargo.toml</i> \u2014 yes; that&#39;s how it is <b>supposed</b> to work. The point of a workspace is to ensure that all the members have the same version of the compiled dependencies (a unified <b>Cargo.lock</b>). Each crate in a workspace is supposed to define its own <b>Cargo.toml</b>; otherwise where would you define things like the crate name? You may wish to re-read the <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-workspace-section\" rel=\"nofollow noreferrer\">Cargo docs about workspaces</a>. Perhaps file a bug if you think the docs are unclear."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 2, "creation_date": 1517895307, "post_id": 48634652, "comment_id": 84268773, "body": "If a dependency is only used in tests, it should be defined in <code>[dev-dependencies]</code> rather than in <code>[dependencies]</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1517921973, "last_edit_date": 1517921973, "creation_date": 1517884912, "answer_id": 48634652, "question_id": 48634617, "link": "https://stackoverflow.com/questions/48634617/how-do-you-include-all-crates-in-a-workspace-inside-the-test-directory/48634652#48634652", "title": "How do you include all crates in a workspace inside the test directory?", "body": "<p>There's nothing special about workspaces or even the concept of tests. If you want to use a crate in Rust code, you have to add it as a dependency:</p>\n\n<pre><code>[dependencies]\nprinter = { path = \"crates/printer\" }\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/29857002/155423\">How to define test-only dependencies?</a></li>\n</ul>\n"}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 440, "favorite_count": 0, "accepted_answer_id": 48634652, "answer_count": 1, "score": 1, "last_activity_date": 1517921973, "creation_date": 1517884598, "last_edit_date": 1517884682, "question_id": 48634617, "link": "https://stackoverflow.com/questions/48634617/how-do-you-include-all-crates-in-a-workspace-inside-the-test-directory", "title": "How do you include all crates in a workspace inside the test directory?", "body": "<p>I have a binary Rust project which uses the workspaces to manage sub-crates.</p>\n\n<p><strong>Directory structure</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/myapp\n  Cargo.toml\n  /src\n  /tests\n    test.rs\n  /crates\n    /printer\n      Cargo.toml\n      /src\n</code></pre>\n\n<p><strong>myapp/Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"myapp\"\n\n[workspace]\nmembers = [\"crates/printer\"]\n</code></pre>\n\n<p>Inside of <code>test.rs</code> I can compile <code>extern crate myapp;</code> to pull in the parts of the application that are exposed in <code>src/lib.rs</code>. This works as expected.</p>\n\n<p>However, when attempting to compile <code>extern crate printer;</code> it errors that it cannot find it. I've confirmed that the printer package is correctly placed in the top-level <code>Cargo.lock</code> file.</p>\n\n<p>How do I include my sub-crates into the <code>/tests</code> directory at the top level?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 15044, "user_id": 8746216, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DclnR.jpg?s=128&g=1", "display_name": "Taylor Wood", "link": "https://stackoverflow.com/users/8746216/taylor-wood"}, "is_accepted": true, "score": 12, "last_activity_date": 1517886546, "last_edit_date": 1517886546, "creation_date": 1517886211, "answer_id": 48634823, "question_id": 48634335, "link": "https://stackoverflow.com/questions/48634335/how-do-i-multiply-an-integer-and-a-floating-value-together-and-display-the-resul/48634823#48634823", "title": "How do I multiply an integer and a floating value together and display the result as a floating value in Rust?", "body": "<p>Assuming you want the result of <em>1 * 1.5</em> to be a floating point number, you can cast <code>thing</code> to <code>f64</code> with the <code>as</code> operator:</p>\n\n<pre><code>fn main() {\n    let the_stuff = Stuff { thing: 1 };\n    println!(\"{}\", the_stuff.thing as f64 * 1.5);\n}\n</code></pre>\n\n<p>This prints <code>1.5</code>. Rust forces you to be explicit about how different numeric types interact.</p>\n\n<p>Assuming you're always multiplying an <code>i8</code> by <code>1.5</code>, then you can fit the result in a <code>f32</code> return type:</p>\n\n<pre><code>fn main() {\n    let the_stuff = Stuff { thing: i8::max_value() };\n    println!(\"{}\", the_stuff.thing as f32 * 1.5);\n}\n</code></pre>\n"}], "owner": {"reputation": 1338, "user_id": 1678392, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LuMvG.jpg?s=128&g=1", "display_name": "skia.heliou", "link": "https://stackoverflow.com/users/1678392/skia-heliou"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4527, "favorite_count": 1, "closed_date": 1517886465, "accepted_answer_id": 48634823, "answer_count": 1, "score": 5, "last_activity_date": 1517943550, "creation_date": 1517882187, "last_edit_date": 1517943550, "question_id": 48634335, "link": "https://stackoverflow.com/questions/48634335/how-do-i-multiply-an-integer-and-a-floating-value-together-and-display-the-resul", "closed_reason": "Duplicate", "title": "How do I multiply an integer and a floating value together and display the result as a floating value in Rust?", "body": "<p>I have the following code:</p>\n\n<pre><code>struct Stuff {\n    thing: i8\n}\n\nfn main(){\n    let theStuff = Stuff { thing: 1 };\n    println!(\"{}\", theStuff.thing * 1.5);\n}\n</code></pre>\n\n<p>I get the following on compilation:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `i8: std::ops::Mul&lt;{float}&gt;` is not satisfied\n --&gt; IntFloatMultiply.rs:7:32\n  |\n7 |  println!(\"{}\", theStuff.thing * 1.5);\n  |                                ^ no implementation for `i8 * {float}`\n  |\n  = help: the trait `std::ops::Mul&lt;{float}&gt;` is not implemented for `i8`\n</code></pre>\n\n<p>I've read some other posts including a bunch of stuff that is pretty well over my head (including <a href=\"https://stackoverflow.com/a/44552464/1678392\">https://stackoverflow.com/a/44552464/1678392</a>). I don't care about the technical details, what or why, if I don't have a concrete answer to start from. How do I get this code to compile so it displays a float result?</p>\n"}, {"tags": ["windows", "rust", "child-process", "stdio"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517887099, "post_id": 48631713, "comment_id": 84266667, "body": "Does redirecting the output of your server process work <i>outside</i> of Rust? I&#39;m guessing that it&#39;s not Rust-related."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 1, "creation_date": 1517889090, "post_id": 48631713, "comment_id": 84267110, "body": "Sounds related to the Windows subsystem the app is compiled for. Here&#39;s an RFC that goes into this a bit <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/1665-windows-subsystem.md\" rel=\"nofollow noreferrer\">github.com/rust-lang/rfcs/blob/master/text/&hellip;</a>"}], "owner": {"reputation": 319, "user_id": 1167407, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f24815b6b60543ac37af378a22031e4f?s=128&d=identicon&r=PG", "display_name": "Dan Wiebe", "link": "https://stackoverflow.com/users/1167407/dan-wiebe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1517866513, "creation_date": 1517865821, "last_edit_date": 1517866513, "question_id": 48631713, "link": "https://stackoverflow.com/questions/48631713/how-do-i-start-a-child-process-on-windows-and-capture-its-stderr", "title": "How do I start a child process on Windows and capture its stderr?", "body": "<p>I'm trying to write an integration test that starts my server, tickles it, and asserts on what it logs to <code>stderr</code> to pass or fail the test.</p>\n\n<p>I'm using:</p>\n\n<pre><code>Command::new(\"stuff\")\n    .args(&amp;[more, stuff])\n    .stderr(/* XXX */)\n    .spawn()\n    .unwrap()\n</code></pre>\n\n<p>to start the server, where <code>XXX</code> has by turns been </p>\n\n<ol>\n<li><p><code>std::process::Stdio::piped()</code>, </p></li>\n<li><p>a <code>std::fs::File</code> object, and </p></li>\n<li><p>a raw something (handle or file descriptor) distilled from the <code>std::fs::File</code> object and converted <code>unsafe</code>ly into a <code>std::process::Stdio</code>.</p></li>\n</ol>\n\n<p>All of these work fine under Linux (Ubuntu 16.04); none of them work under Windows.  In every case in Windows, when the test runs, I see a console window pop up and display the (correct) stuff from the server's <code>stderr</code> stream, but the pipe or the file remains empty and the assert times out waiting for data.</p>\n\n<p>I think I've run out of ideas.  What should I be doing to make this test run under Windows?</p>\n"}, {"tags": ["rust", "sha256", "hmac"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517863054, "post_id": 48630814, "comment_id": 84259183, "body": "<i>I suspect it might have something to do with <code>.as_ref().to_vec()</code> conversions</i> \u2014 why do you suspect that?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user9318640"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517863426, "post_id": 48630814, "comment_id": 84259338, "body": "The <code>.as_ref()</code> should return a byte slice <code>&amp;[u8]</code> and that there could be a problem with converting that to a <code>Vec&lt;u8&gt;</code>. I tried with <code>.extend_from_slice()</code>, instead of <code>.append()</code> (to get rid of the conversion) earlier today, had no luck with that either."}, {"owner": {"reputation": 3153, "user_id": 641234, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42888171bce11ee00617e3f803af6a6b?s=128&d=identicon&r=PG", "display_name": "emulbreh", "link": "https://stackoverflow.com/users/641234/emulbreh"}, "edited": false, "score": 1, "creation_date": 1517867177, "post_id": 48630814, "comment_id": 84261117, "body": "You just swapped inner and outer padding, it&#39;s working otherwise."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9318640"}, "edited": false, "score": 0, "creation_date": 1517911731, "post_id": 48630814, "comment_id": 84277208, "body": "That is next level idiocy. I can&#39;t believe I missed that."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user9318640"}, "edited": false, "score": 0, "creation_date": 1517913619, "post_id": 48634777, "comment_id": 84278487, "body": "Very nice! I&#39;m fairly new to Rust and haven&#39;t seen <code>let hash = |v| digest::digest(&amp;digest::SHA256, v);</code>. Is that a shorthand way of writing a function?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1517918426, "post_id": 48634777, "comment_id": 84281580, "body": "@brycx This is the syntax to define a <a href=\"https://doc.rust-lang.org/book/second-edition/ch13-01-closures.html\" rel=\"nofollow noreferrer\">closure</a>.  It&#39;s similar to a function, except that it can capture variables from the local scope.  This particular closure doesn&#39;t close over any local variables, so it could have been written as a function, too."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1517885950, "creation_date": 1517885950, "answer_id": 48634777, "question_id": 48630814, "link": "https://stackoverflow.com/questions/48630814/why-do-i-get-incorrect-values-when-implementing-hmac-sha256/48634777#48634777", "title": "Why do I get incorrect values when implementing HMAC-SHA256?", "body": "<p>As mentioned in a comment, you have swapped the bytes for the inner and outer padding. Refer back to the <a href=\"https://en.wikipedia.org/wiki/Hash-based_message_authentication_code#Implementation\" rel=\"nofollow noreferrer\">Wikipedia page</a>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>o_key_pad = key xor [0x5c * blockSize]   //Outer padded key\ni_key_pad = key xor [0x36 * blockSize]   //Inner padded key\n</code></pre>\n\n<p>Here's what my take on the function would look like. I believe it has less allocation:</p>\n\n<pre><code>extern crate ring;\n\nuse ring::{digest, test};\n\nconst BLOCK_SIZE: usize = 64;\n\npub fn hmac(k: &amp;[u8], m: &amp;[u8]) -&gt; Vec&lt;u8&gt; {\n    assert_eq!(k.len(), BLOCK_SIZE);\n\n    let mut i_key_pad: Vec&lt;_&gt; = k.iter().map(|&amp;k| k ^ 0x36).collect();\n    let mut o_key_pad: Vec&lt;_&gt; = k.iter().map(|&amp;k| k ^ 0x5C).collect();\n\n    i_key_pad.extend_from_slice(m);\n\n    let hash = |v| digest::digest(&amp;digest::SHA256, v);\n\n    let a = hash(&amp;i_key_pad);\n\n    o_key_pad.extend_from_slice(a.as_ref());\n\n    hash(&amp;o_key_pad).as_ref().to_vec()\n}\n\n#[test]\nfn test_hmac_digest() {\n    let k = [0x61; BLOCK_SIZE];\n    let m = [0x62; BLOCK_SIZE];\n    let actual = hmac(&amp;k, &amp;m);\n\n    // Expected value taken from: https://www.freeformatter.com/hmac-generator.html#ad-output\n    let expected = test::from_hex(\"f6cbb37b326d36f2f27d294ac3bb46a6aac29c1c9936b985576041bfb338ae70\").unwrap();\n    assert_eq!(actual, expected);\n}\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9318640"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "accepted_answer_id": 48634777, "answer_count": 1, "score": 2, "last_activity_date": 1517885950, "creation_date": 1517861945, "last_edit_date": 1517862899, "question_id": 48630814, "link": "https://stackoverflow.com/questions/48630814/why-do-i-get-incorrect-values-when-implementing-hmac-sha256", "title": "Why do I get incorrect values when implementing HMAC-SHA256?", "body": "<p>I'm trying to make a function in Rust that will return a HMAC-SHA256 digest. I've been working from the description at <a href=\"https://en.wikipedia.org/wiki/Hash-based_message_authentication_code\" rel=\"nofollow noreferrer\">Wikipedia</a> and <a href=\"https://tools.ietf.org/html/rfc2104\" rel=\"nofollow noreferrer\">RFC 2104</a>. </p>\n\n<p>I've been struggling with returning the correct HMAC. I'm using <a href=\"https://www.briansmith.org/rustdoc/ring/\" rel=\"nofollow noreferrer\">ring</a> for the SHA256 digests but no matter what I try, I can't seem to get the right result. I suspect it might have something to do with <code>.as_ref().to_vec()</code> conversions. Even if that's true, I don't know how to continue from that. Not everything from RFC 2104 is implemented in the following code, but it highlights my issue.</p>\n\n<pre><code>extern crate ring;\nuse ring::{digest, test};\n\npub fn hmac(k: Vec&lt;u8&gt;, mut m: Vec&lt;u8&gt;) -&gt; Vec&lt;u8&gt; {\n    // Initialize ipad and opad as byte vectors with SHA256 blocksize\n    let ipad = vec![0x5C; 64];\n    let opad = vec![0x36; 64];\n    // iround and oround are used to seperate the two steps with XORing\n    let mut iround = vec![];\n    let mut oround = vec![];\n\n    for count in 0..k.len() {\n        iround.push(k[count] ^ ipad[count]);\n        oround.push(k[count] ^ opad[count]);\n    }\n\n    iround.append(&amp;mut m); // m is emptied here\n    iround = (digest::digest(&amp;digest::SHA256, &amp;iround).as_ref()).to_vec();\n    oround.append(&amp;mut iround); // iround is emptied here\n    oround = (digest::digest(&amp;digest::SHA256, &amp;oround).as_ref()).to_vec();\n    let hashed_mac = oround.to_vec();\n\n    return hashed_mac;\n}\n\n#[test]\nfn test_hmac_digest() {\n    let k = vec![0x61; 64];\n    let m = vec![0x62; 64];\n    let actual = hmac(k, m);\n    // Expected value taken from: https://www.freeformatter.com/hmac-generator.html#ad-output\n    let expected = test::from_hex(\"f6cbb37b326d36f2f27d294ac3bb46a6aac29c1c9936b985576041bfb338ae70\").unwrap();\n    assert_eq!(actual, expected);\n}\n</code></pre>\n\n<p>These are the digests:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Actual = [139, 141, 144, 52, 11, 3, 48, 112, 117, 7, 56, 151, 163, 65, 152, 195, 163, 164, 26, 250, 178, 100, 187, 230, 89, 61, 191, 164, 146, 228, 180, 62]\n\nExpected = [246, 203, 179, 123, 50, 109, 54, 242, 242, 125, 41, 74, 195, 187, 70, 166, 170, 194, 156, 28, 153, 54, 185, 133, 87, 96, 65, 191, 179, 56, 174, 112]\n</code></pre>\n"}, {"tags": ["file", "rust", "immutability", "writer", "mutability"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517862780, "post_id": 48630724, "comment_id": 84259055, "body": "Let&#39;s pretend that you do return a <code>LineWriter&lt;File&gt;</code>... what should the value of <code>self.final_writer</code> be when you go to access it again?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517886911, "post_id": 48630724, "comment_id": 84266619, "body": "<a href=\"https://play.rust-lang.org/?gist=0b650288d7d243685f22624ad9728e76&amp;version=stable\" rel=\"nofollow noreferrer\">The duplicates applied to your problem</a>."}, {"owner": {"reputation": 37, "user_id": 5879395, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826ace721b3ca43bc287e569d331d36a?s=128&d=identicon&r=PG&f=1", "display_name": "k1llingm3smalls", "link": "https://stackoverflow.com/users/5879395/k1llingm3smalls"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517888579, "post_id": 48630724, "comment_id": 84266998, "body": "@Shepmaster Thanks so much!!! Works like magic!"}], "owner": {"reputation": 37, "user_id": 5879395, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826ace721b3ca43bc287e569d331d36a?s=128&d=identicon&r=PG&f=1", "display_name": "k1llingm3smalls", "link": "https://stackoverflow.com/users/5879395/k1llingm3smalls"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "closed_date": 1517886722, "answer_count": 0, "score": 0, "last_activity_date": 1517889172, "creation_date": 1517861590, "last_edit_date": 1517889172, "question_id": 48630724, "link": "https://stackoverflow.com/questions/48630724/mutability-issues-with-keeping-a-linewriter-immutable", "closed_reason": "Duplicate", "title": "Mutability issues with keeping a LineWriter immutable", "body": "<p>I am trying to pass a new <code>LineWriter</code> into a statement from a struct to replace the current writer. In my main code chunk, I have this statement:</p>\n\n<pre><code>if let Some(ref mut tmp_writer) = self.the_writer {\n    tmp_writer.write_all(/*...*/).unwrap();\n}\n</code></pre>\n\n<p>I want to create a separate writer in a struct that can be returned to be used instead of the above <code>tmp_writer</code>. When calling it in a struct within my code I state:</p>\n\n<pre><code>use std::io::LineWriter;\nuse std::fs::File;\n\npub struct Test {\n    final_writer: Option&lt;LineWriter&lt;File&gt;&gt;,\n}\n\nimpl Test {\n    pub fn new() -&gt; Self {\n        Test { final_writer: None }\n    }\n\n    pub fn return_writer(&amp;mut self) -&gt; LineWriter&lt;File&gt; {\n        let fin_writer = self.final_writer.unwrap();\n        return fin_writer;\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>When compiling, I get an error stating</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of borrowed content\n  --&gt; src/main.rs:14:26\n   |\n14 |         let fin_writer = self.final_writer.unwrap();\n   |                          ^^^^ cannot move out of borrowed content\n</code></pre>\n\n<p>How should I refactor my code so I can return a <code>LineWriter&lt;File&gt;</code> and not a <code>&amp;LineWriter&lt;File&gt;</code>? If I do return it as a reference, how can I de-reference the writer without having another borrowed content issue?</p>\n\n<p>Correct answer is: </p>\n\n<pre><code>pub fn return_writer(&amp;mut self) -&gt; LineWriter&lt;File&gt; {\n    return self.final_writer.take().unwrap();\n}\n</code></pre>\n"}, {"tags": ["memory", "memory-management", "scope", "reference", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517858871, "post_id": 48629840, "comment_id": 84256978, "body": "Additionally, you will get <i>far</i> better answers if you provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. For example, instead of using prose to tell us what <code>K</code> and <code>points</code> are, show the code for them. You can even write a function that accepts <code>points</code> so you don&#39;t have to actually define it."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1517858938, "post_id": 48629840, "comment_id": 84257007, "body": "Consider sticking to one question per post, as they do not seem to be sufficiently related. I would also advise you to read the respective documentation for <a href=\"https://docs.rs/rand/0.4.2/rand/fn.thread_rng.html\" rel=\"nofollow noreferrer\"><code>rand::thread_rng</code></a>, which should just about answer the first question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517860506, "post_id": 48629840, "comment_id": 84257897, "body": "No, the value of <code>rand::thread_rng()</code> is not moved into the function, although the mutable reference to the value is. The RNG value itself is destroyed at the end of the statement."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517860850, "post_id": 48629840, "comment_id": 84258078, "body": "@Shepmaster The output of <code>thread_rng()</code> is, in turn, a reference-counted pointer to a thread-local value. The inner RNG value is not destroyed, but the Rc is. :)"}], "owner": {"reputation": 1192, "user_id": 7023187, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/321015561587503/picture?type=large", "display_name": "Rares Dima", "link": "https://stackoverflow.com/users/7023187/rares-dima"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 106, "favorite_count": 0, "closed_date": 1517860338, "answer_count": 0, "score": 0, "last_activity_date": 1517860709, "creation_date": 1517858027, "last_edit_date": 1517860459, "question_id": 48629840, "link": "https://stackoverflow.com/questions/48629840/what-is-the-lifetime-of-mut-randthread-rng-passed-into-a-random-sample-fu", "closed_reason": "Duplicate", "title": "What is the lifetime of `&amp;mut rand::thread_rng()` passed into a random sample function?", "body": "<p><code>K</code> is an <code>i64</code> and <code>points</code> is a <code>Vec&lt;Vec&lt;i64&gt;&gt;</code> that is used to represent points in an n-dim space.</p>\n\n<pre><code>let mut centroids: Vec&lt;Vec&lt;i64&gt;&gt; = \n    rand::seq::sample_iter(&amp;mut rand::thread_rng(), \n                           points.iter(), \n                           K as usize).unwrap();\n</code></pre>\n\n<p>Is <code>rand::thread_rng()</code> moved into the function scope and thus gotten rid of at the end of the function? (making the whole thing not leak memory)</p>\n\n<p>If not, is there a way to do so without declaring it separately? What led me to this question is the way the <code>drop</code> function works since it pretty much employs the same idea.</p>\n"}, {"tags": ["rust", "immutability", "dereference", "raw-pointer"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517797942, "post_id": 48614854, "comment_id": 84227253, "body": "Have you read the documentation for <a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html\" rel=\"nofollow noreferrer\"><code>Arc</code></a> or the <a href=\"https://doc.rust-lang.org/std/rc\" rel=\"nofollow noreferrer\"><code>rc</code> module</a>? Have you tried a <code>Mutex</code>?"}, {"owner": {"reputation": 788, "user_id": 1391782, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cb4614f0b19bb2ec2a35fd3c065ba8c5?s=128&d=identicon&r=PG", "display_name": "Abdillah", "link": "https://stackoverflow.com/users/1391782/abdillah"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517798433, "post_id": 48614854, "comment_id": 84227340, "body": "Eh? This &quot;...you cannot generally obtain a mutable reference to something inside an Rc&quot; part is it? Well, I&#39;m not register that one! I&#39;ll try <code>Mutex</code> and answer myself then. Thanks"}], "answers": [{"tags": [], "owner": {"reputation": 788, "user_id": 1391782, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cb4614f0b19bb2ec2a35fd3c065ba8c5?s=128&d=identicon&r=PG", "display_name": "Abdillah", "link": "https://stackoverflow.com/users/1391782/abdillah"}, "is_accepted": true, "score": 9, "last_activity_date": 1517802092, "last_edit_date": 1517802092, "creation_date": 1517799294, "answer_id": 48615261, "question_id": 48614854, "link": "https://stackoverflow.com/questions/48614854/how-to-make-a-struct-field-containing-an-arc-writable/48615261#48615261", "title": "How to make a struct field containing an Arc writable?", "body": "<p>As <a href=\"https://stackoverflow.com/questions/48614854/how-to-make-a-struct-field-acquired-by-dereferencing-a-raw-pointer-writable#comment84227253_48614854\">@Shepmaster pointed out</a>, <code>Arc</code> is immutable by design:</p>\n\n<blockquote>\n  <p>Shared references in Rust disallow mutation by default, and <code>Arc</code> is no exception: you cannot generally obtain a mutable reference to something inside an <code>Arc</code>. If you need to mutate through an <code>Arc</code>, use <code>Mutex</code>, <code>RwLock</code>, or one of the <code>Atomic</code> types.</p>\n</blockquote>\n\n<p>I added a <code>Mutex</code> to fix the problem:</p>\n\n<pre><code>pub struct BufferData {\n    /// Memory map for pixel data\n    pub map: Arc&lt;Mutex&lt;Box&lt;memmap::MmapMut&gt;&gt;&gt;,\n    pub otherdata: i32,\n}\n</code></pre>\n\n<p>To access the field, I need to lock it first. I added an additional block to automatically unlock the <code>Mutex</code> when the block is done:</p>\n\n<pre><code>{\n    let mut map = bdata.map.lock().unwrap();\n    map[0] = 9;\n}\n</code></pre>\n"}], "owner": {"reputation": 788, "user_id": 1391782, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cb4614f0b19bb2ec2a35fd3c065ba8c5?s=128&d=identicon&r=PG", "display_name": "Abdillah", "link": "https://stackoverflow.com/users/1391782/abdillah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4534, "favorite_count": 2, "closed_date": 1517802973, "accepted_answer_id": 48615261, "answer_count": 1, "score": 4, "last_activity_date": 1517982299, "creation_date": 1517795136, "last_edit_date": 1517982299, "question_id": 48614854, "link": "https://stackoverflow.com/questions/48614854/how-to-make-a-struct-field-containing-an-arc-writable", "closed_reason": "Duplicate", "title": "How to make a struct field containing an Arc writable?", "body": "<p>I have a struct that somehow must be retrieved in the form of raw pointer.</p>\n\n<pre><code>pub struct BufferData {\n    /// Memory map for pixel data\n    pub map: Arc&lt;Box&lt;memmap::MmapMut&gt;&gt;,\n    pub otherdata: i32,\n}\n</code></pre>\n\n<p>I need to write into its <code>map</code> field, so I dereference the raw pointer into struct, then try to write into its data field. But, I got the following error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0596]: cannot borrow immutable borrowed content `*map` as mutable\n  --&gt; examples/buffer.rs:34:5\n   |\n34 |     map[0] = 9;\n   |     ^^^ cannot borrow as mutable\n</code></pre>\n\n<p>How do I make the <code>map</code> field mutable and writable?</p>\n\n<p>The error is reproducible using the following code:</p>\n\n<pre><code>extern crate memmap;\n\nuse std::fs::File;\nuse std::sync::Arc;\nuse std::boxed::Box;\nuse std::ops::Deref;\n\npub struct BufferData {\n    /// Memory map for pixel data\n    pub map: Arc&lt;Box&lt;memmap::MmapMut&gt;&gt;,\n    pub otherdata: i32,\n}\n\nfn main() -&gt; () {\n    // Somewhere on other module\n    let mut mmap = Arc::new(Box::new(unsafe {\n        memmap::MmapMut::map_mut(&amp;File::open(\"./shm\").expect(\"file\")).expect(\"MmapMut\")\n    }));\n    let mut bfr = BufferData {\n        map: mmap,\n        otherdata: 0,\n    };\n    let ptr: *const _ = &amp;bfr;\n\n    // Here, I must receive and process a pointer\n    let mut bdata: &amp;BufferData = unsafe { &amp;*(ptr as *const BufferData) };\n    let mut map = bdata.map.deref().deref();\n\n    // Problem lies here: need to write into it, so need to be mutable\n    map[0] = 9;\n}\n</code></pre>\n\n<p>Crate: <code>memmap = \"0.6.2\"</code></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517782264, "post_id": 48613484, "comment_id": 84223767, "body": "The question isn&#39;t bad, but I wouldn&#39;t recommend implementing <code>Step</code> at this point in time. It&#39;s probably simpler to implement <code>Date::range_to(Date)</code> which returns a new struct which implements <code>Iterator</code>."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 0, "creation_date": 1517823361, "post_id": 48613484, "comment_id": 84235431, "body": "Just a generic hint: it&#39;s usually best to make sure values are always &quot;valid&quot;.  This means you should make fields private if they could contain invalid values, and you should provide a constructor that can fail: <code>pub fn new(...) -&gt; Option&lt;Date&gt;</code>. <code>is_valid_date</code> should be private and only be called when you create new values internally to make sure you only return valid values."}], "answers": [{"comments": [{"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 1, "creation_date": 1517823588, "post_id": 48613762, "comment_id": 84235566, "body": "Maybe elaborate why those are needed: <code>RangeInclusive</code> returns an item as long as <code>start &lt;= end</code>, and advances <code>start</code> after each run.  But if <code>end</code> is the maximum value that can be represented, you cannot reach <code>start == end + 1</code> - so instead, if <code>start == end</code> it replaces <code>start</code> and <code>end</code> with some abstract values named <code>one</code> and <code>zero</code> which need to fulfill <code>zero &lt; one</code> so the loop stops. Apart from that it should not matter which values you choose to return."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 2, "last_activity_date": 1517784279, "creation_date": 1517784279, "answer_id": 48613762, "question_id": 48613484, "link": "https://stackoverflow.com/questions/48613484/how-do-i-correctly-implement-stditerstep-in-rust-1-25-nightly/48613762#48613762", "title": "How do I correctly implement std::iter::Step in Rust 1.25 nightly?", "body": "<p>I just looked at Rust's code where those methods are used. <a href=\"https://github.com/rust-lang/rust/blob/0c6091fbd0eee290c651f73be899f221eeab3c05/src/libcore/iter/range.rs#L342\" rel=\"nofollow noreferrer\">The only uses in whole of rustc's repository</a> are to implement <code>RangeInclusive</code> operations. An empty <code>RangeInclusive</code> is represented as a range from <code>1</code> to <code>0</code>, so the <code>next</code>, <code>next_back</code> and <code>nth</code> methods need to be able to get those somehow, and that's what <code>replace_one</code> and <code>replace_zero</code> are for.</p>\n\n<p>I would suggest opening an issue on rustc's GitHub to make the documentation better, and possibly change the name of these methods.</p>\n"}], "owner": {"reputation": 5865, "user_id": 4415493, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/CidOV.jpg?s=128&g=1", "display_name": "JamesFaix", "link": "https://stackoverflow.com/users/4415493/jamesfaix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 467, "favorite_count": 1, "answer_count": 1, "score": 6, "last_activity_date": 1517792740, "creation_date": 1517782114, "last_edit_date": 1517792740, "question_id": 48613484, "link": "https://stackoverflow.com/questions/48613484/how-do-i-correctly-implement-stditerstep-in-rust-1-25-nightly", "title": "How do I correctly implement std::iter::Step in Rust 1.25 nightly?", "body": "<p>I am trying to implement a struct to represent a date, which can be used with range syntax (<code>for d in start..end { }</code>).  I know there are already crates out there that handle dates, but I am doing this as an exercise.</p>\n\n<p>Here is the struct:</p>\n\n<pre><code>type DayOfMonth = u8;\ntype Month = u8;\ntype Year = u16;\n\n#[derive(PartialEq, Eq, Clone)]\npub struct Date {\n    pub year: Year,\n    pub month: Month,\n    pub day: DayOfMonth\n}\n</code></pre>\n\n<p>Here is how I would like to use it:</p>\n\n<pre><code>fn print_dates() {\n    let start = Date { year: 1999, month: 1, day: 1 };\n    let end = Date { year: 1999, month: 12, day: 31 };\n\n    for d in start..end {\n        println!(\"{}-{}-{}\", d.year, d.month, d.day);\n    }\n} \n</code></pre>\n\n<p>I originally tried implementing the <code>Iterator</code> trait, but then when I tried to use range syntax, I got a compiler error saying I needed to implement <code>Step</code> instead.</p>\n\n<p>The documentation shows this signature for the <code>Step</code> trait.</p>\n\n<pre><code>pub trait Step: PartialOrd&lt;Self&gt; + Clone {\n    fn steps_between(start: &amp;Self, end: &amp;Self) -&gt; Option&lt;usize&gt;;\n    fn replace_one(&amp;mut self) -&gt; Self;\n    fn replace_zero(&amp;mut self) -&gt; Self;\n    fn add_one(&amp;self) -&gt; Self;\n    fn sub_one(&amp;self) -&gt; Self;\n    fn add_usize(&amp;self, n: usize) -&gt; Option&lt;Self&gt;;\n}\n</code></pre>\n\n<p>I've already implemented <code>Ord</code> and <code>PartialOrd</code>:</p>\n\n<pre><code>impl Ord for Date {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n         match self.year.cmp(&amp;other.year) {\n            Ordering::Equal =&gt;\n                match self.month.cmp(&amp;other.month) {\n                    Ordering::Equal =&gt;\n                        self.day.cmp(&amp;other.day),\n                    ord =&gt; ord\n                },\n            ord =&gt; ord\n        }\n    }\n}\n\nimpl PartialOrd for Date {\n    fn partial_cmp(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt; {\n        Some(self.cmp(other))\n    }\n}\n</code></pre>\n\n<p>I am implementing <code>Clone</code> automatically with <code>#[derive(Clone)]</code>.</p>\n\n<p>I started implementing <code>Step</code>, but there are some methods that I cannot figure out what to do with.  Here is what I have so far: </p>\n\n<pre><code>impl Step for Date {\n    fn steps_between(start: &amp;self, end: &amp;self) -&gt; Option&lt;usize&gt; {\n        //is_valid_date checks that the month is not &gt; 12 and other rules like that\n        if is_valid_date(start) &amp;&amp; is_valid_date(end) {\n            //get_epoch_day_number gets the number of days since 1900-01-01\n            let diff = get_epoch_day_number(end) - get_epoch_day_number(start);\n            Some(diff)\n        }\n        else { None }\n    }\n\n    fn add_one(&amp;self) -&gt; Self {\n        //Try the next day\n        let mut next = Date {\n            year: self.year,\n            month: self.month,\n            day: self.day + 1\n        };\n        //If not valid, try the 1st of the next month\n        if !is_valid_date(&amp;next) {\n            next = Date {\n                year: self.year,\n                month: self.month + 1,\n                day: 1\n            };\n        }\n        //If not valid, try the 1st of the next year\n        if !is_valid_date(&amp;next) { \n            next = Date {\n                year: self.year + 1,\n                month: 1,\n                day: 1\n            };\n        }\n        next\n    }\n\n    fn sub_one(&amp;self) -&gt; Self {\n        //Try the prev day\n        let mut prev = Date {\n            year: self.year,\n            month: self.month,\n            day: self.day - 1\n        };\n        //If not valid, try the last of the prev month\n        if !is_valid_date(&amp;prev) {\n            let m = self.month - 1;\n            prev = Date {\n                year: self.year,\n                month: m,\n                day: get_month_length(self.year, m)\n            };\n        }\n        //If not valid, try the last of the prev year\n        if !is_valid_date(&amp;prev) {             \n            prev = Date {\n                year: self.year - 1,\n                month: 12,\n                day: 31\n            };\n        }\n        prev\n    }\n\n    fn add_usize(&amp;self, n: usize) -&gt; Self {\n        //This is really inefficient, but that's not important\n        let mut result = self;\n        for i in 1..n+1 {\n            result = result.add_one();\n        }\n        result\n    }\n\n    fn replace_one(&amp;mut self) -&gt; Self {\n        // ?\n    }\n\n    fn replace_zero(&amp;mut self) -&gt; Self {\n        // ?\n    }\n}\n</code></pre>\n\n<p>I am really stumped on what <code>replace_one</code> and <code>replace_zero</code> are supposed to do.  The documentation says:</p>\n\n<p><em>Replaces this step with <code>1</code>, returning itself.</em> and <em>Replaces this step with <code>0</code>, returning itself.</em></p>\n\n<p>Does my struct need to have <code>zero</code> and <code>one</code> identity values just to be used in a range?  Shouldn't <code>add_one</code> be enough?</p>\n\n<p>The wording used by the documentation is also a little unclear.  If we replace <code>x</code> with <code>1</code> and return \"itself\", is \"it\" <code>x</code> or <code>1</code>?</p>\n"}, {"tags": ["rust", "future", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517781674, "post_id": 48613350, "comment_id": 84223581, "body": "<i>implicitly <code>&#39;static</code></i> \u2014 I see you&#39;ve used the syntax <code>Box&lt;Future&lt;Item = I, Error = Error&gt; + &#39;a&gt;</code> in one case; why haven&#39;t you used that everywhere that needs it?"}, {"owner": {"reputation": 1156, "user_id": 6394734, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/793813350717904/picture?type=large", "display_name": "Seun LanLege", "link": "https://stackoverflow.com/users/6394734/seun-lanlege"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517781902, "post_id": 48613350, "comment_id": 84223651, "body": "@Shepmaster I would eventually need a <code>&#39;static</code> <code>Box&lt;&lt;Future&lt;Item = I, Error = Error&gt;&gt;</code> because <code>hyper::server::Service</code> requires it. see <a href=\"https://docs.rs/tokio-service/0.1.0/tokio_service/trait.Service.html\" rel=\"nofollow noreferrer\">docs.rs/tokio-service/0.1.0/tokio_service/trait.Service.html</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517782160, "post_id": 48613350, "comment_id": 84223737, "body": "I&#39;m unclear what your end goal is with the question, then. Presumably you have already become experienced with basic Rust and lifetimes before attempting even harder topics like multithreading / asynchronous IO. If you contain a reference to anything, you cannot meet the <code>&#39;static</code> bounds. This has nothing to do with futures."}, {"owner": {"reputation": 1156, "user_id": 6394734, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/793813350717904/picture?type=large", "display_name": "Seun LanLege", "link": "https://stackoverflow.com/users/6394734/seun-lanlege"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517782474, "post_id": 48613350, "comment_id": 84223860, "body": "check the edit."}, {"owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "edited": false, "score": 4, "creation_date": 1517837624, "post_id": 48613350, "comment_id": 84244074, "body": "There are many ways to get around lifetime problems, but that isn&#39;t really related to <code>Future</code>s and combinators.  In short: get rid of the references.  Move your values, clone them, clone <code>Rc</code>/<code>Arc</code> pointers to them, ... - or keep track of the involved lifetimes through everything (<code>Box&lt;T + &#39;a&gt;</code>...).  Usually not worth the effort, and with <code>Future</code>s not possible (because you can&#39;t spawn non-<code>&#39;static</code> futures on most event loops)."}], "answers": [{"comments": [{"owner": {"reputation": 1156, "user_id": 6394734, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/793813350717904/picture?type=large", "display_name": "Seun LanLege", "link": "https://stackoverflow.com/users/6394734/seun-lanlege"}, "edited": false, "score": 0, "creation_date": 1517808554, "post_id": 48614688, "comment_id": 84229506, "body": "Thank you for this example, I&#39;ve updated my question with an example that properly reflects my problems."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1562778906, "last_edit_date": 1562778906, "creation_date": 1517793535, "answer_id": 48614688, "question_id": 48613350, "link": "https://stackoverflow.com/questions/48613350/how-to-return-a-future-combinator-with-self/48614688#48614688", "title": "How to return a future combinator with `&amp;self`", "body": "<blockquote>\n  <p>How to return a future combinator with <code>&amp;self</code></p>\n</blockquote>\n\n<p>You return a future that refers to <code>self</code> like this:</p>\n\n<pre><code>use futures::future::{self, FutureResult}; // 0.1.28\n\nstruct Example {\n    age: i32,\n}\n\nimpl Example {\n    fn make_a_future(&amp;self) -&gt; FutureResult&lt;&amp;Example, ()&gt; {\n        future::ok(self)\n    }\n}\n</code></pre>\n\n<p>As discussed in the <a href=\"https://tokio.rs/docs/futures/combinators/#returning-futures/\" rel=\"nofollow noreferrer\">Tokio documentation on returning futures</a>, the easiest stable solution to returning a complicated future is a <em>impl Trait</em>. Note that we assign an explicit lifetime to <code>self</code> and use that in the returned value (via <code>+ 'a</code>):</p>\n\n<pre><code>use futures::{future, Future}; // 0.1.28\n\nstruct Example {\n    age: i32,\n}\n\nimpl Example {\n    fn make_a_future&lt;'a&gt;(&amp;'a self) -&gt; impl Future&lt;Item = i32, Error = ()&gt; + 'a {\n        future::ok(self).map(|ex| ex.age + 1)\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Your <strong>real</strong> question is \"how can I lie to the compiler and attempt to introduce memory unsafety into my program?\"</p>\n\n<p><code>Box&lt;SomeTrait + 'static&gt;</code> (or <code>Box&lt;SomeTrait&gt;</code> by itself) means that the trait object <strong>must not</strong> contain any references that do not last for the entire program. By definition, your <code>Example</code> struct has a shorter lifetime than that.</p>\n\n<p><strong>This has nothing to do with futures</strong>. This is a fundamental Rust concept. </p>\n\n<p>There are many questions that ask the same thing in regards to threads, which have similar restrictions. A small sampling:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34439977/155423\">Lifetime of variables passed to a new thread</a></li>\n<li><a href=\"https://stackoverflow.com/q/30562443/155423\">How do I use static lifetimes with threads?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40053550/155423\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a></li>\n<li><a href=\"https://stackoverflow.com/q/28654978/155423\">Lifetime troubles sharing references between threads</a></li>\n</ul>\n\n<p>Like in those cases, you are attempting to share a reference to a variable with something that may exist <strong>after</strong> the variable is destroyed. Languages such as C or C++ would <em>let you do this</em>, only to have your program crash at a seemingly random point in time in the future when that variable is accessed after being freed. The crash is the <em>good</em> case, by the way; information leaks or code execution is also possible.</p>\n\n<p>Like the case for threads, you have to ensure that this doesn't happen. The easiest way is to move the variable into the future, not sharing it at all. Another option is to use something like an <code>Arc</code> around your variable, clone the <code>Arc</code> and hand the clone to the future.</p>\n"}], "owner": {"reputation": 1156, "user_id": 6394734, "user_type": "registered", "accept_rate": 64, "profile_image": "https://graph.facebook.com/793813350717904/picture?type=large", "display_name": "Seun LanLege", "link": "https://stackoverflow.com/users/6394734/seun-lanlege"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1396, "favorite_count": 0, "accepted_answer_id": 48614688, "answer_count": 1, "score": 4, "last_activity_date": 1580660888, "creation_date": 1517781048, "last_edit_date": 1580660888, "question_id": 48613350, "link": "https://stackoverflow.com/questions/48613350/how-to-return-a-future-combinator-with-self", "title": "How to return a future combinator with `&amp;self`", "body": "<p>I have this piece of code using futures v0.1:</p>\n\n<pre><code>impl ArcService for (Box&lt;MiddleWare&lt;Request&gt;&gt;, Box&lt;ArcService&gt;) {\n    fn call(&amp;self, req: Request, res: Response) -&gt; Box&lt;Future&lt;Item = Response, Error = Error&gt;&gt; {\n        box self.0.call(req).and_then(move |req| self.1.call(req, res))\n    }\n}\n\npub trait ArcService: Send + Sync {\n    fn call(&amp;self, req: Request, res: Response) -&gt; Box&lt;Future&lt;Item = Response, Error = Error&gt;&gt;;\n}\n\npub trait MiddleWare&lt;T&gt;: Sync + Send {\n    fn call&lt;'a&gt;(&amp;'a self, param: T) -&gt; Box&lt;Future&lt;Item = T, Error = Error&gt; + 'a&gt;;\n}\n\ntype MiddleWareFuture&lt;'a, I&gt; = Box&lt;Future&lt;Item = I, Error = Error&gt; + 'a&gt;;\n\nimpl MiddleWare&lt;Request&gt; for Vec&lt;Box&lt;MiddleWare&lt;Request&gt;&gt;&gt; {\n    fn call(&amp;self, request: Request) -&gt; MiddleWareFuture&lt;Request&gt; {\n        self.iter()\n            .fold(box Ok(request).into_future(), |request, middleware| {\n                box request.and_then(move |req| middleware.call(req))\n            })\n    }\n}\n\npub struct ArcRouter {\n    routes: HashMap&lt;Method, Box&lt;ArcService&gt;&gt;,\n}\n\n// Service implementation\nimpl hyper::Server::Service for ArcRouter {\n    type Response = Response;\n    type Request = Request;\n    type Error = hyper::Error;\n    type Future = Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt;;\n\n    fn call(&amp;self, req: Request) -&gt; Box&lt;Future&lt;Item = Self::Response, Error = Self::Error&gt;&gt; {\n        if let Some(routeMatch) = self.matchRoute(req.path(), req.method()) {\n            let mut request: ArcRequest = req.into();\n            request.paramsMap.insert(routeMatch.params);\n            let response = routeMatch.handler //handler is ArcService\n                    .call(request, ArcResponse::new())\n                    .map(|res| res.into());\n            return box response;\n        }\n\n        // TODO: this should be handled by a user defined 404 handler\n        return box Ok(Response::new().with_status(StatusCode::NotFound)).into_future();\n    }\n}\n</code></pre>\n\n<p>Note the lifetime parameter on <code>Middleware</code> \u2014 it is used to avoid lifetime issues.</p>\n\n<p>This does not compile because <code>Box&lt;Future&lt;Item = Response, Error = Error&gt;&gt;</code> is implicitly <code>'static</code> and therefore causes lifetime issues. <code>hyper::Server::Service</code> requires a <code>'static Future</code></p>\n\n<p>Here is an example that aptly describes my problem:</p>\n\n<pre><code>extern crate futures; // v0.1 (old)\n\nuse futures::{future, Future};\n\nstruct Example {\n    age: i32,\n}\n\n// trait is defined in an external crate. You can't change it's definition\ntrait MakeFuture {\n    fn make_a_future(&amp;self) -&gt; Box&lt;Future&lt;Item = i32, Error = ()&gt;&gt;;\n}\n\nimpl MakeFuture for Example {\n    fn make_a_future(&amp;self) -&gt; Box&lt;Future&lt;Item = i32, Error = ()&gt;&gt; {\n        let f = future::ok(self).map(|ex| ex.age + 1);\n        Box::new(f)\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0e555b8928130f1b93766b0c10813b22&amp;version=stable\" rel=\"nofollow noreferrer\">playground link</a></p>\n\n<p>which gives the lifetime error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:16:28\n   |\n16 |         let f = future::ok(self).map(|ex| ex.age + 1);\n   |                            ^^^^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 15:5...\n  --&gt; src/main.rs:15:5\n   |\n15 | /     fn make_a_future(&amp;self) -&gt; Box&lt;Future&lt;Item = i32, Error = ()&gt;&gt; {\n16 | |         let f = future::ok(self).map(|ex| ex.age + 1);\n17 | |         Box::new(f)\n18 | |     }\n   | |_____^\nnote: ...so that expression is assignable (expected &amp;Example, found &amp;Example)\n  --&gt; src/main.rs:16:28\n   |\n16 |         let f = future::ok(self).map(|ex| ex.age + 1);\n   |                            ^^^^\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that expression is assignable (expected std::boxed::Box&lt;futures::Future&lt;Item=i32, Error=()&gt; + 'static&gt;, found std::boxed::Box&lt;futures::Future&lt;Item=i32, Error=()&gt;&gt;)\n  --&gt; src/main.rs:17:9\n   |\n17 |         Box::new(f)\n   |         ^^^^^^^^^^^\n</code></pre>\n\n<p>Is there a way to get around this? I'm building with <code>hyper::Service</code> and using Rust v1.25.0 (nightly)</p>\n"}, {"tags": ["macros", "rust", "preprocessor"], "answers": [{"comments": [{"owner": {"reputation": 1192, "user_id": 7023187, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/321015561587503/picture?type=large", "display_name": "Rares Dima", "link": "https://stackoverflow.com/users/7023187/rares-dima"}, "edited": false, "score": 0, "creation_date": 1517780915, "post_id": 48613302, "comment_id": 84223344, "body": "I don&#39;t NEED it per se, it&#39;s just that brackets are horrible to my eyes coming from quite some time working in languages that renounced for the most part such concepts like python, haskell, f#, matlab, etc. and was looking for a way to make the syntax prettier."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1192, "user_id": 7023187, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/321015561587503/picture?type=large", "display_name": "Rares Dima", "link": "https://stackoverflow.com/users/7023187/rares-dima"}, "edited": false, "score": 15, "creation_date": 1517781196, "post_id": 48613302, "comment_id": 84223448, "body": "@RaresDima speaking plainly, I think that&#39;s just something you need to get over to be a professional programmer. Different languages have different syntaxes, idioms, naming conventions, indenting styles, etc. <i>When in Rome, do as the Romans do</i>. If you replace curlies with keywords or if you make it whitespace-sensitive, you <b>aren&#39;t writing Rust anymore</b>. You then have to translate every example you ever see to your dialect, translate back when asking for help, you get no help from your editors or tooling. At that point, you might as well just write your own language."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 1192, "user_id": 7023187, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/321015561587503/picture?type=large", "display_name": "Rares Dima", "link": "https://stackoverflow.com/users/7023187/rares-dima"}, "edited": false, "score": 0, "creation_date": 1517822783, "post_id": 48613302, "comment_id": 84235066, "body": "@RaresDima Furthermore, doing so with simple text substitution is not a good way to go."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1517780651, "creation_date": 1517780651, "answer_id": 48613302, "question_id": 48613240, "link": "https://stackoverflow.com/questions/48613240/is-there-a-way-for-rust-macros-to-act-as-text-substitutions-like-in-c/48613302#48613302", "title": "Is there a way for Rust macros to act as text substitutions like in C?", "body": "<p>No (thankfully). Rust macros must always expand to a complete AST node.</p>\n\n<p>If you <em>need</em> textual substitution, use a tool suited for that job such as <code>sed</code>, <code>awk</code>, <code>m4</code>, the C preprocessor, etc. That can likely be driven by a build script.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517853774, "post_id": 48627827, "comment_id": 84254263, "body": "This doesn&#39;t answer the question: &quot;Is there a way for Rust macros to act as text substitutions like in C?&quot; It also doesn&#39;t answer the implied question of &quot;can I use do/end blocks instead of curly braces?&quot; as slag is whitespace sensitive, instead. This would be better off as a comment."}, {"owner": {"reputation": 341, "user_id": 1343806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84895911b750d3520b539aa44f5ca855?s=128&d=identicon&r=PG", "display_name": "adw", "link": "https://stackoverflow.com/users/1343806/adw"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517855713, "post_id": 48627827, "comment_id": 84255326, "body": "@Shepmaster Yes, fair point. I suppose I was posting to answer the follow-up comment rather than the original question."}], "tags": [], "owner": {"reputation": 341, "user_id": 1343806, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84895911b750d3520b539aa44f5ca855?s=128&d=identicon&r=PG", "display_name": "adw", "link": "https://stackoverflow.com/users/1343806/adw"}, "is_accepted": false, "score": 4, "last_activity_date": 1517850469, "creation_date": 1517850469, "answer_id": 48627827, "question_id": 48613240, "link": "https://stackoverflow.com/questions/48613240/is-there-a-way-for-rust-macros-to-act-as-text-substitutions-like-in-c/48627827#48627827", "title": "Is there a way for Rust macros to act as text substitutions like in C?", "body": "<p>There is a toy project that does this, in fact: <a href=\"https://github.com/mystor/slag\" rel=\"nofollow noreferrer\">slag</a>. I have never tried it, though.</p>\n\n<p>It comes with this helpful advice:</p>\n\n<blockquote>\n  <h3>Should I use this?</h3>\n  \n  <p>No. Use the default rust syntax.</p>\n</blockquote>\n"}], "owner": {"reputation": 1192, "user_id": 7023187, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/321015561587503/picture?type=large", "display_name": "Rares Dima", "link": "https://stackoverflow.com/users/7023187/rares-dima"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1399, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1517850469, "creation_date": 1517780177, "last_edit_date": 1517780419, "question_id": 48613240, "link": "https://stackoverflow.com/questions/48613240/is-there-a-way-for-rust-macros-to-act-as-text-substitutions-like-in-c", "title": "Is there a way for Rust macros to act as text substitutions like in C?", "body": "<p>In C, if you wanted to, you could:</p>\n\n<pre><code>#define    do     {\n#define    end    }\n\n// ...\n\nif (foo == bar) do\n    foo += 5;\n    bar /= foo;\nend\n</code></pre>\n\n<p>Is there a way to do something like this in Rust?</p>\n"}, {"tags": ["unit-testing", "testing", "compiler-construction", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1517772185, "post_id": 48612083, "comment_id": 84220626, "body": "Perhaps you could look at how existing compilers do it, such as the tests for the Rust compiler or those for LLVM. I&#39;d also recommend reading <a href=\"http://www.growing-object-oriented-software.com/\" rel=\"nofollow noreferrer\"><i>Growing Object-Oriented Software Guided by Tests</i></a> which has a chapter about ways to create factories for easily setting up test data."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1517772354, "post_id": 48612083, "comment_id": 84220694, "body": "This question may also be better received on <a href=\"https://softwareengineering.stackexchange.com/\">Software Engineering</a>."}], "answers": [{"tags": [], "owner": {"reputation": 1180, "user_id": 4603507, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b98e667a16bc113e946a343dfa84de4c?s=128&d=identicon&r=PG&f=1", "display_name": "Olsonist", "link": "https://stackoverflow.com/users/4603507/olsonist"}, "is_accepted": false, "score": 0, "last_activity_date": 1603678733, "last_edit_date": 1603678733, "creation_date": 1603678344, "answer_id": 64530682, "question_id": 48612083, "link": "https://stackoverflow.com/questions/48612083/writing-maintainable-tests-for-compiler-phases/64530682#64530682", "title": "Writing maintainable tests for compiler phases", "body": "<p>A good example of a testable compiler is LLVM. It is organized largely as a collection of passes. llc can emit MIR (one of the intermediate languages) from one of the machine passes with <em>-stop-after</em>. It's possible to clean up the MIR with <em>-simplify-mir</em> to generate human-editable output. It's also possible to run a pass starting from this captured intermediate form, making debugging a test case easier. The more pass oriented GlobalISel instruction selection framework was rearchitected from the monolithic DAGISel with this approach to testability in mind.</p>\n"}], "owner": {"reputation": 607, "user_id": 1457538, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/e900aa0e98f427dc5839d08e490a9c2e?s=128&d=identicon&r=PG", "display_name": "Mistodon", "link": "https://stackoverflow.com/users/1457538/mistodon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 131, "favorite_count": 2, "answer_count": 1, "score": 5, "last_activity_date": 1603678733, "creation_date": 1517772055, "last_edit_date": 1517772134, "question_id": 48612083, "link": "https://stackoverflow.com/questions/48612083/writing-maintainable-tests-for-compiler-phases", "title": "Writing maintainable tests for compiler phases", "body": "<p>This question may end up a little vague, so apologies in advance. In short though: how do you write tests for compiler phases that don't break easily.</p>\n\n<p>The compiler I'm working on consists of four phases with (mostly) well defined inputs and outputs, so:</p>\n\n<p><strong>source code</strong> -> <em>lex()</em> -> <strong>tokens</strong> -> <em>parse()</em> -> <strong>AST</strong> -> <em>intermediate()</em> -> <strong>IR</strong> -> <em>generation()</em> -> <strong>output</strong></p>\n\n<p>The existing tests for each phase simply compare outputs with expected results, e.g:</p>\n\n<pre><code>assert_eq!(\n    lex(\"section { things }\"),\n    vec![Section, LeftBrace, Ident(\"things\"), RightBrace]\n);\n</code></pre>\n\n<p>The project is written in Rust, but the question is more general than that.</p>\n\n<p>However, this gets far, far more verbose in later stages as the inputs and outputs are more complex:</p>\n\n<pre><code>assert_eq!(\n    intermediate(Ast { root: SectionNode { attr: vec![AttributeNode { ... }] } }),\n    SectionModel { things: vec![etc...] }\n);\n</code></pre>\n\n<p>This means two things:</p>\n\n<ol>\n<li>Adding a new test requires a lot of typing/copy-pasting.</li>\n<li>Changes to almost any structure requires updating every test.</li>\n</ol>\n\n<p>I'm currently side-stepping this in places by using source code as the input of the test, and lexing it and parsing it in the test, but this means that any error in the lexer would cause literally every test to fail which is... not ideal.</p>\n\n<p>I feel like there must be a better way to test what is essentially a function with complex input/output structs, but I'm not exactly sure what it is.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517769810, "post_id": 48611617, "comment_id": 84219832, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We cannot compile your code to see the underlying error. Also, please take the time to look at the styling of your post \u2014 your error messages are completely unreadable when formatted as a quote."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517770238, "post_id": 48611617, "comment_id": 84219962, "body": "Additionally, you are getting a reference to the insides of your <code>HashMap</code> (<code>address_info</code>) and storing that in a <code>Vec</code> (<code>address_info_vec</code>). This means that when you call <code>address_mapping.remove</code>, you may potentially invalidate all of the references into the <code>HashMap</code>; using them would incur memory unsafety. This is <b>exactly</b> the kind of bug that Rust prevents."}], "owner": {"reputation": 3859, "user_id": 1191072, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/768517ebc5e0277492cf54a891d5aafe?s=128&d=identicon&r=PG", "display_name": "Alessandro", "link": "https://stackoverflow.com/users/1191072/alessandro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 295, "favorite_count": 0, "closed_date": 1517769726, "answer_count": 0, "score": 0, "last_activity_date": 1517769848, "creation_date": 1517769088, "question_id": 48611617, "link": "https://stackoverflow.com/questions/48611617/modifying-hashmap-in-rust-mutable-borrow-occurs-here", "closed_reason": "Duplicate", "title": "Modifying HashMap in Rust (mutable borrow occurs here)", "body": "<p>I have a variable called <strong>address_mapping</strong> that is part of a public struct. I've put all of the code in the same function, and I'm running into some issues with referencing.</p>\n\n<pre><code>match self.address_mapping.get(&amp;tx_outpoint) {\n    Some(address_info) =&gt; {                          \n        balances.push(address_info.clone().current_balance as f64);\n        address_info_vec.push(address_info);\n        tx_outpoint_vec.push(tx_outpoint);\n    }\n};\n...\nself.address_mapping.remove(&amp;tx_outpoint);\n</code></pre>\n\n<blockquote>\n  <p>match self.address_mapping.get(&amp;tx_outpoint) {\n      |                               -------------------- immutable borrow occurs here</p>\n  \n  <p>self.address_mapping.remove(&amp;tx_outpoint);\n      |                 ^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here</p>\n</blockquote>\n\n<p>It happens again in another section of the code, even if I use {} to set the scope. I also tried using the drop method on _borrow. Also, I think it's a bad idea to use the clone method because this data structure can get quite big.</p>\n\n<pre><code>{\n     let _borrow = &amp;mut self.address_mapping;\n     for (tx_outpoint, address_info) in _borrow {\n         txoutpoint_to_delete.push(tx_outpoint);\n     }\n}\n...\nfor tx_outpoint in &amp;txoutpoint_to_delete { self.address_mapping.remove(tx_outpoint); }\n</code></pre>\n"}, {"tags": ["reference", "rust", "mutable", "borrowing"], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1589914695, "post_id": 48611385, "comment_id": 109481133, "body": "The final, most concise version of <code>get_last</code> works now with <code>-Z polonius</code> (on 1.44 nightly)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1589911342, "last_edit_date": 1589911342, "creation_date": 1517767602, "answer_id": 48611385, "question_id": 48610593, "link": "https://stackoverflow.com/questions/48610593/iterating-through-a-recursive-structure-using-mutable-references-and-returning-t/48611385#48611385", "title": "Iterating through a recursive structure using mutable references and returning the last valid reference", "body": "<p>This is indeed different from <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>. If we look at the answer there, modified a bit, we can see that it matches on a value and is able to return the value that was matched on in the terminal case. That is, the return value is an <code>Option</code>:</p>\n\n<pre><code>fn back(&amp;mut self) -&gt; &amp;mut Option&lt;Box&lt;Node&gt;&gt; {\n    let mut anchor = &amp;mut self.root;\n\n    loop {\n        match {anchor} {\n            &amp;mut Some(ref mut node) =&gt; anchor = &amp;mut node.next,\n            other =&gt; return other, // transferred ownership to here\n        }\n    }\n}\n</code></pre>\n\n<p>Your case is complicated by two aspects:</p>\n\n<ol>\n<li>The lack of <a href=\"https://stackoverflow.com/q/50251487/155423\">non-lexical lifetimes</a>.</li>\n<li><p>The fact that you want to take a mutable reference and \"give it up\" in one case (there are children) and not in the other (no children). This is conceptually the same as this:</p>\n\n<pre><code>fn maybe_identity&lt;T&gt;(_: T) -&gt; Option&lt;T&gt; { None }\n\nfn main() {\n    let name = String::from(\"vivian\");\n\n    match maybe_identity(name) {\n        Some(x) =&gt; println!(\"{}\", x),\n        None =&gt; println!(\"{}\", name),\n    }\n}\n</code></pre>\n\n<p>The compiler cannot tell that the <code>None</code> case could (<em>very</em> theoretically) continue to use <code>name</code>.</p></li>\n</ol>\n\n<p>The straight-forward solution is to encode this \"get it back\" action explicitly. We create an enum that returns the <code>&amp;mut self</code> in the case of no children, a helper method that returns that enum, and rewrite the primary method to use the helper:</p>\n\n<pre><code>enum LastOrNot&lt;'a&gt; {\n    Last(&amp;'a mut Node),\n    NotLast(&amp;'a mut Node),\n}\n\nimpl Node {\n    fn get_last_or_self(&amp;mut self) -&gt; LastOrNot&lt;'_&gt; {\n        match self.children.is_empty() {\n            false =&gt; LastOrNot::Last(self.children.last_mut().unwrap()),\n            true =&gt; LastOrNot::NotLast(self),\n        }\n    }\n\n    fn get_last(mut current: &amp;mut Node) -&gt; &amp;mut Node {\n        loop {\n            match { current }.get_last_or_self() {\n                LastOrNot::Last(child) =&gt; current = child,\n                LastOrNot::NotLast(end) =&gt; return end,\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Note that we are using all of the techniques exposed in both <a href=\"https://stackoverflow.com/q/38023871/155423\">Returning a reference from a HashMap or Vec causes a borrow to last beyond the scope it&#39;s in?</a> and <a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>.</p>\n\n<hr>\n\n<p>With an in-progress <a href=\"https://github.com/rust-lang/polonius\" rel=\"nofollow noreferrer\">reimplementation of NLL</a>, we can simplify <code>get_last_or_self</code> a bit to avoid the boolean:</p>\n\n<pre><code>fn get_last_or_self(&amp;mut self) -&gt; LastOrNot&lt;'_&gt; {\n    match self.children.last_mut() {\n        Some(l) =&gt; LastOrNot::Last(l),\n        None =&gt; LastOrNot::NotLast(self),\n    }\n}\n</code></pre>\n\n<p>The final version of Polonius should allow reducing the entire problem to a <em>very</em> simple form:</p>\n\n<pre><code>fn get_last(mut current: &amp;mut Node) -&gt; &amp;mut Node {\n    while let Some(child) = current.get_last() {\n        current = child;\n    }\n\n    current\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/38023871/155423\">Returning a reference from a HashMap or Vec causes a borrow to last beyond the scope it&#39;s in?</a></li>\n<li><a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a></li>\n</ul>\n"}], "owner": {"reputation": 73, "user_id": 7351357, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/351d1c71d277cecd37b0cb1138a9a14d?s=128&d=identicon&r=PG&f=1", "display_name": "Aeledfyr", "link": "https://stackoverflow.com/users/7351357/aeledfyr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 496, "favorite_count": 1, "accepted_answer_id": 48611385, "answer_count": 1, "score": 5, "last_activity_date": 1589911342, "creation_date": 1517763040, "last_edit_date": 1517768627, "question_id": 48610593, "link": "https://stackoverflow.com/questions/48610593/iterating-through-a-recursive-structure-using-mutable-references-and-returning-t", "title": "Iterating through a recursive structure using mutable references and returning the last valid reference", "body": "<p>I'm trying to recurse down a structure of nodes, modifying them, and then returning the last <code>Node</code> that I get to. I solved the problems with mutable references in the loop using an <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md#problem-case-4-mutating-mut-references\" rel=\"noreferrer\">example in the non-lexical lifetimes RFC</a>. If I try to return the mutable reference to the last <code>Node</code>, I get a <code>use of moved value</code> error:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Node {\n    children: Vec&lt;Node&gt;,\n}\n\nimpl Node {\n    fn new(children: Vec&lt;Self&gt;) -&gt; Self {\n        Self { children }\n    }\n    fn get_last(&amp;mut self) -&gt; Option&lt;&amp;mut Node&gt; {\n        self.children.last_mut()\n    }\n}\n\nfn main() {\n    let mut root = Node::new(vec![Node::new(vec![])]);\n\n    let current = &amp;mut root;\n\n    println!(\"Final: {:?}\", get_last(current));\n}\n\n\nfn get_last(mut current: &amp;mut Node) -&gt; &amp;mut Node {\n    loop {\n        let temp = current;\n        println!(\"{:?}\", temp);\n\n        match temp.get_last() {\n            Some(child) =&gt; { current = child },\n            None =&gt; break,\n        }\n    }\n\n    current\n}\n</code></pre>\n\n<p>Gives this error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0382]: use of moved value: `*current`\n  --&gt; test.rs:51:5\n   |\n40 |         let temp = current;\n   |             ---- value moved here\n...\n51 |     current\n   |     ^^^^^^^ value used here after move\n   |\n   = note: move occurs because `current` has type `&amp;mut Node`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>If I return the temporary value instead of breaking, I get the error <code>cannot borrow as mutable more than once</code>. </p>\n\n<pre><code>fn get_last(mut current: &amp;mut Node) -&gt; &amp;mut Node {\n    loop {\n        let temp = current;\n        println!(\"{:?}\", temp);\n\n        match temp.get_last() {\n            Some(child) =&gt; { current = child },\n            None =&gt; return temp,\n        }\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*temp` as mutable more than once at a time\n  --&gt; test.rs:47:28\n   |\n43 |         match temp.get_last() {\n   |               ---- first mutable borrow occurs here\n...\n47 |             None =&gt; return temp,\n   |                            ^^^^ second mutable borrow occurs here\n48 |         }\n49 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>How can I iterate through the structure with mutable references and return the last <code>Node</code>? I've searched, but I haven't found any solutions for this specific problem.</p>\n\n<p>I can't use <a href=\"https://stackoverflow.com/questions/37986640/obtaining-a-mutable-reference-by-iterating-a-recursive-structure\">Obtaining a mutable reference by iterating a recursive structure</a> because it gives me a borrowing more than once error:</p>\n\n<pre><code>fn get_last(mut current: &amp;mut Node) -&gt; &amp;mut Node {\n    loop {\n        let temp = current;\n        println!(\"{:?}\", temp);\n\n        match temp.get_last() {\n            Some(child) =&gt; current = child,\n            None =&gt; current = temp,\n        }\n    }\n    current\n}\n</code></pre>\n"}, {"tags": ["hashmap", "rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517713052, "post_id": 48604183, "comment_id": 84205119, "body": "You can&#39;t. <a href=\"https://play.rust-lang.org/?gist=b4060563828111c1561b13aee68d597f&amp;version=nightly\" rel=\"nofollow noreferrer\">At least not until non-lexical lifetimes are stabilized</a>."}, {"owner": {"reputation": 29, "user_id": 2647168, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d480bf91050295d59f4f0dc768f721c1?s=128&d=identicon&r=PG", "display_name": "Douglas Santos", "link": "https://stackoverflow.com/users/2647168/douglas-santos"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517717849, "post_id": 48604183, "comment_id": 84205889, "body": "@Shepmaster, I don&#39;t see my question as a duplicate of the one you pointed out, but I understand the cause for both is the same, so thanks for pointing it out. May I ask you why you changed the commas in the code?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517718061, "post_id": 48604183, "comment_id": 84205925, "body": "I reformat all code in questions and answers using rustfmt so that people looking for answers don&#39;t have to adapt to every posters specific formatting. Rustfmt removes commas around march arms with braces and adds them to trailing arms."}], "owner": {"reputation": 29, "user_id": 2647168, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d480bf91050295d59f4f0dc768f721c1?s=128&d=identicon&r=PG", "display_name": "Douglas Santos", "link": "https://stackoverflow.com/users/2647168/douglas-santos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1517713079, "answer_count": 0, "score": 0, "last_activity_date": 1517713181, "creation_date": 1517712397, "last_edit_date": 1517713181, "question_id": 48604183, "link": "https://stackoverflow.com/questions/48604183/removing-a-hashmap-entry-inside-a-match-arm-that-borrowed-a-value-from-the-map", "closed_reason": "Duplicate", "title": "Removing a HashMap entry inside a match arm that borrowed a value from the map", "body": "<p>I have a <code>HashMap&lt;String, Vec&lt;String&gt;&gt;</code>. After removing an element from a vector, I want to remove this vector's entry if it is empty. I've tried to do this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map: HashMap&lt;String, Vec&lt;String&gt;&gt; = HashMap::new();\n\n    map.insert(String::from(\"key\"), vec![String::from(\"value\")]);\n\n    let a_key = String::from(\"key\");\n    let del_from_vec = String::from(\"value\");\n\n    match map.get_mut(&amp;a_key) {\n        Some(vect) =&gt; match vect.binary_search(&amp;del_from_vec.to_string()) {\n            Ok(index) =&gt; {\n                vect.remove(index);\n                println!(\"value removed from vector.\");\n                if vect.len() == 0 {\n                    map.remove(&amp;a_key);\n                    println!(\"entry removed from map.\");\n                }\n            }\n            Err(_) =&gt; println!(\"not found in vec.\"),\n        },\n        None =&gt; println!(\"no such key in map.\"),\n    }\n}\n</code></pre>\n\n<p>The compiler complains about this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `map` as mutable more than once at a time\n  --&gt; src/main.rs:17:21\n   |\n11 |     match map.get_mut(&amp;a_key) {\n   |           --- first mutable borrow occurs here\n...\n17 |                     map.remove(&amp;a_key);\n   |                     ^^^ second mutable borrow occurs here\n...\n24 |     }\n   |     - first borrow ends here\n</code></pre>\n\n<p>I fully understand the error. I can overcome it by doing this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let mut map: HashMap&lt;String, Vec&lt;String&gt;&gt; = HashMap::new();\n\n    map.insert(String::from(\"key\"), vec![String::from(\"value\")]);\n\n    let a_key = String::from(\"key\");\n    let del_from_vec = String::from(\"value\");\n\n    if map.contains_key(&amp;a_key) {\n        match map[&amp;a_key].binary_search(&amp;del_from_vec.to_string()) {\n            Ok(index) =&gt; {\n                map.get_mut(&amp;a_key).unwrap().remove(index);\n                println!(\"value removed from vector.\");\n                if map[&amp;a_key].len() == 0 {\n                    map.remove(&amp;a_key);\n                    println!(\"entry removed from map.\");\n                }\n            }\n            Err(_) =&gt; println!(\"not found in vec.\"),\n        }\n    }\n}\n</code></pre>\n\n<p>I find this code kind of ugly because it uses <code>contains_key()</code> and <code>unwrap()</code>. How else could I write this?</p>\n"}, {"tags": ["rust", "command", "pipe", "runtime-error"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517677658, "post_id": 48599578, "comment_id": 84196233, "body": "You wait for neither <code>ps_child</code> nor the result of <code>nohup</code>."}, {"owner": {"reputation": 23, "user_id": 9295715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e6836be73e8fc82b3a92ed8d7e33f00?s=128&d=identicon&r=PG&f=1", "display_name": "rusty doe", "link": "https://stackoverflow.com/users/9295715/rusty-doe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517686846, "post_id": 48599578, "comment_id": 84199123, "body": "I added <code>ps_child.wait().expect(&quot;failed to wait on ps&quot;);</code> right before <code>grep_proc_child</code> but then the program freezes. Why does it freeze?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517687594, "post_id": 48599578, "comment_id": 84199340, "body": "Presumably because you&#39;ve caused a deadlock. Your program is waiting for the child process to finish but your child process cannot finish until it is done writing output, but you haven&#39;t started the next process to consume the output. Try waiting for each stage of the pipeline in reverse order from how you started them."}, {"owner": {"reputation": 23, "user_id": 9295715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e6836be73e8fc82b3a92ed8d7e33f00?s=128&d=identicon&r=PG&f=1", "display_name": "rusty doe", "link": "https://stackoverflow.com/users/9295715/rusty-doe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517687695, "post_id": 48599578, "comment_id": 84199372, "body": "I&#39;ll try that. BTW, why marked this question as duplicate? This one brings a different concern out of same activity."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517689458, "post_id": 48599578, "comment_id": 84199895, "body": "Because the problem is exactly the same, and is solved by the answer you already received. You have to wait for the process to exit or else you have leaked file handles. We don&#39;t need separate questions for every unique time that someone forgets to call <code>wait</code>."}, {"owner": {"reputation": 23, "user_id": 9295715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e6836be73e8fc82b3a92ed8d7e33f00?s=128&d=identicon&r=PG&f=1", "display_name": "rusty doe", "link": "https://stackoverflow.com/users/9295715/rusty-doe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517690753, "post_id": 48599578, "comment_id": 84200278, "body": "I put a <code>wait</code> after where the second command in pipe consumes the output of first. That seems to work and solve the dead-lock problem. However, if I put the <code>wait</code> on the resurrected process <code>new_proc_child.wait().expect(&quot;couldn&#39;t wait for new_proc_child&quot;);</code> (after the very last line) this watchdog program freezes right after the starting the child process. Do I even need to wait for this child process? If it gets killed, will this watchdog program leak file handles and crash again? How to safely start a new process and not crash this program?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517691224, "post_id": 48599578, "comment_id": 84200426, "body": "<i>How to safely start a new process and not crash this program?</i> \u2014 that seems like a reasonable new top-level question to ask. Please make sure to create a small <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> that focuses on that specific aspect of the problem (it doesn&#39;t need any piping / grepping, for example)."}, {"owner": {"reputation": 23, "user_id": 9295715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e6836be73e8fc82b3a92ed8d7e33f00?s=128&d=identicon&r=PG&f=1", "display_name": "rusty doe", "link": "https://stackoverflow.com/users/9295715/rusty-doe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517692636, "post_id": 48599578, "comment_id": 84200828, "body": "Ok, here it is <a href=\"https://stackoverflow.com/questions/48602145/how-to-write-a-simple-and-reliable-watchdog-program-in-rust\" title=\"how to write a simple and reliable watchdog program in rust\">stackoverflow.com/questions/48602145/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517693440, "post_id": 48599578, "comment_id": 84201028, "body": "I&#39;m afraid that the question, as you&#39;ve asked it, will be overly broad, and thus not a good fit for Stack Overflow. My gut tells me that if the child process actually does die, then it will no longer be counted against your ulimit quota (I don&#39;t think file descriptors come into play) so you&#39;d be OK. Instead, I might be worried that the child process won&#39;t continue running if the watchdog is killed."}, {"owner": {"reputation": 23, "user_id": 9295715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e6836be73e8fc82b3a92ed8d7e33f00?s=128&d=identicon&r=PG&f=1", "display_name": "rusty doe", "link": "https://stackoverflow.com/users/9295715/rusty-doe"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517717530, "post_id": 48599578, "comment_id": 84205830, "body": "Yes I came to the same understanding on both parts. I&#39;m fine with child process getting killed when watchdog does because watchdog is supposed to be running all the time. Thanks for your help."}], "owner": {"reputation": 23, "user_id": 9295715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e6836be73e8fc82b3a92ed8d7e33f00?s=128&d=identicon&r=PG&f=1", "display_name": "rusty doe", "link": "https://stackoverflow.com/users/9295715/rusty-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 31, "favorite_count": 0, "closed_date": 1517677413, "answer_count": 0, "score": 0, "last_activity_date": 1517677770, "creation_date": 1517675905, "last_edit_date": 1517677770, "question_id": 48599578, "link": "https://stackoverflow.com/questions/48599578/program-with-many-piped-subprocesses-started-in-a-loop-crashes-after-some-time", "closed_reason": "Duplicate", "title": "Program with many piped subprocesses started in a loop crashes after some time", "body": "<p>This program is supposed to keep looking for a number of processes via the system process table (using piped commands <code>ps aux | grep &lt;proc_name&gt; | grep -v grep | grep -v &lt;program_name&gt;</code> and start the process if it's not there or killed. </p>\n\n<p>After running for some time, the program crashes with error \"Resource Temporarily Unavailable\".</p>\n\n<p>I think it's because of a file handle leak somewhere but exactly where, I'm not sure.</p>\n\n<pre><code>use std::process::{Command, Stdio};\nuse std::env;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let names: Vec&lt;String&gt; = env::args().skip(1).collect();\n\n    loop {\n        for proc_name in &amp;names {\n            resurrect(proc_name.as_str());\n        }\n        thread::sleep(Duration::from_secs(2));\n    }\n}\n\nfn resurrect(proc_name: &amp;str) {\n    let mut ps_child = Command::new(\"ps\")\n        .arg(\"aux\")\n        .stdout(Stdio::piped())\n        .spawn()\n        .expect(\"failed to spawn ps\");\n\n    let ps_stdout = ps_child\n        .stdout\n        .take()\n        .expect(\"failed to take out ps stdout\");\n\n    let mut grep_proc_child = Command::new(\"grep\")\n        .arg(proc_name)\n        .stdin(Stdio::from(ps_stdout))\n        .stdout(Stdio::piped())\n        .spawn()\n        .expect(format!(\"failed to spawn grep {}\", proc_name).as_str());\n\n    let grep_proc_stdout = grep_proc_child\n        .stdout\n        .take()\n        .expect(format!(\"failed to take out grep {}\", proc_name).as_str());\n\n    grep_proc_child\n        .wait()\n        .expect(\"failed to wait on grep_proc_child\");\n\n    let mut grep_grep_child = Command::new(\"grep\")\n        .arg(\"-v\")\n        .arg(\"grep\")\n        .stdin(Stdio::from(grep_proc_stdout))\n        .stdout(Stdio::piped())\n        .spawn()\n        .expect(\"failed to spawn grep -v grep\");\n    let grep_grep_stdout = grep_grep_child\n        .stdout\n        .take()\n        .expect(\"failed to take out grep_grep_child stdout\");\n    grep_grep_child\n        .wait()\n        .expect(\"failed to wait on grep_grep_child\");\n\n    let grep_self_child = Command::new(\"grep\")\n        .arg(\"-v\")\n        .arg(\"process_checker\")\n        .stdin(Stdio::from(grep_grep_stdout))\n        .stdout(Stdio::piped())\n        .spawn()\n        .expect(\"failed to spawn grep_self\");\n\n    let grep_self_out = grep_self_child\n        .wait_with_output()\n        .expect(\"failed to wait on grep_self\");\n\n    let proc_str = String::from_utf8(grep_self_out.stdout).expect(\"failed to convert to str\");\n    let proc_id = proc_str\n        .split_whitespace()\n        .filter(|st| !st.trim().is_empty())\n        .nth(1);\n\n    if let Some(running_proc_id) = proc_id {\n        println!(\"{}: {}\", proc_name, running_proc_id);\n    } else {\n        let proc_name_full = format!(\"/path/to/my/binaries/{}.jar\", proc_name);\n        Command::new(\"nohup\")\n            .arg(\"java\")\n            .arg(\"-jar\")\n            .arg(proc_name_full)\n            .spawn()\n            .expect(format!(\"couldn't resurrect: {}\", proc_name).as_str());\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1558706460, "post_id": 48599405, "comment_id": 99200856, "body": "You can <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=561c4dca058db42dc4ae32bc58cb8159\" rel=\"nofollow noreferrer\">make this work with <code>#![feature(unsized_locals)]</code></a>."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 4, "last_activity_date": 1561985651, "last_edit_date": 1561985651, "creation_date": 1517674659, "answer_id": 48599405, "question_id": 48598903, "link": "https://stackoverflow.com/questions/48598903/method-call-resolution-for-boxed-type/48599405#48599405", "title": "Method call resolution for `Box`ed type", "body": "<blockquote>\n  <p><em>Author's note:</em> Since Rust 1.35, an adapter trait like <code>FnBox</code> is not required to call boxed <code>FnOnce</code> closures; read to the end to see why.</p>\n</blockquote>\n\n<p><code>FnBox</code> <em>isn't</em> implemented for <code>FnOnce()</code>.</p>\n\n<p><code>FnOnce()</code> has two meanings: as a trait, and as a type. In <code>Box&lt;FnOnce()&gt;</code>, it's a (dynamic, unsized) type. <a href=\"https://stackoverflow.com/q/50650070/3650362\">Since Rust 1.27, the type can be written more explicitly as <code>dyn FnOnce()</code>.</a> For the rest of this answer I will use <code>dyn</code> in order to make clear when I'm talking about the trait and when about the dynamic type.</p>\n\n<p>The <code>impl</code> you wrote doesn't implement <code>FnBox</code> for the type <code>dyn FnOnce()</code>, because <a href=\"https://stackoverflow.com/questions/40846232/rust-compiler-does-not-see-structure-as-sized/40847616#40847616\">generic parameters have an implicit <code>Sized</code> bound</a>. If we follow the advice of that question's answer and add <code>+ ?Sized</code> to <code>F</code>, the compiler does give a slightly more helpful error message:</p>\n\n<pre><code>impl&lt;F: FnOnce() + ?Sized&gt; FnBox for F {\n    fn call_box(self: Box&lt;F&gt;) {\n        (*self)()\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0161]: cannot move a value of type F: the size of F cannot be statically determined\n --&gt; src/main.rs:7:9\n  |\n7 |         (*self)()\n  |         ^^^^^^^\n</code></pre>\n\n<p>Which does explicitly call out the place where <code>Sized</code>ness is required.</p>\n\n<p>In versions of Rust before 1.35, there was no way to fix this error; trait objects of <code>FnOnce()</code> were just useless. However, today <code>Box&lt;dyn FnOnce()&gt;</code> implements <code>FnOnce()</code>, so you can call it like a normal closure, without using <code>*</code>:</p>\n\n<pre><code>impl&lt;F: FnOnce() + ?Sized&gt; FnBox for F {\n    fn call_box(self: Box&lt;F&gt;) {\n        self()\n    }\n}\n</code></pre>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/48017290/what-does-boxfn-send-static-mean-in-rust\">What does \"Box&lt;Fn() + Send + 'static&gt;\" mean in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/41604107/rust-trait-object-conversion\">Rust Trait object conversion</a> (why you can't go from one trait object type to another)</li>\n</ul>\n"}], "owner": {"reputation": 15204, "user_id": 453271, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/G7rcK.png?s=128&g=1", "display_name": "Andriy Tylychko", "link": "https://stackoverflow.com/users/453271/andriy-tylychko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 713, "favorite_count": 0, "accepted_answer_id": 48599405, "answer_count": 1, "score": 1, "last_activity_date": 1561985651, "creation_date": 1517671249, "last_edit_date": 1517672507, "question_id": 48598903, "link": "https://stackoverflow.com/questions/48598903/method-call-resolution-for-boxed-type", "title": "Method call resolution for `Box`ed type", "body": "<p><a href=\"https://play.rust-lang.org/?gist=be2fd4d44475b76cebe2a776b8ac12bd&amp;version=stable\" rel=\"nofollow noreferrer\">Rust playground</a>:</p>\n\n<pre><code>trait FnBox {\n    fn call_box(self: Box&lt;Self&gt;);\n}\n\nimpl&lt;F: FnOnce()&gt; FnBox for F {\n    fn call_box(self: Box&lt;F&gt;) {\n        (*self)()\n    }\n}\n\nfn main() {\n    let job: Box&lt;FnOnce()&gt; = Box::new(|| {});\n    // versions that compile\n    // let job = Box::new(|| {});\n    // let job: Box&lt;FnBox&gt; = Box::new(|| {});\n    job.call_box();\n}\n</code></pre>\n\n<p><code>job.call_box();</code> doesn't compile:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `call_box` found for type `std::boxed::Box&lt;std::ops::FnOnce()&gt;` in the current scope\n  --&gt; src/main.rs:16:9\n   |\n16 |     job.call_box();\n   |         ^^^^^^^^\n   |\n   = note: job is a function, perhaps you wish to call it\n   = note: the method `call_box` exists but the following trait bounds were not satisfied:\n           `std::ops::FnOnce() : FnBox`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `call_box`, perhaps you need to implement it:\n           candidate #1: `FnBox`\n</code></pre>\n</blockquote>\n\n<p>Why doesn't the compiler see the conversion to <code>FnBox</code> here? </p>\n\n<p>I suppose when I use <code>let job = Box::new(|| {});</code> that results in a <code>Box&lt;closure&gt;</code> type. The compiler manages to resolve <code>job.call_box()</code>, which is <code>Box&lt;closure&gt;</code> -> <code>Box&lt;FnOnce()&gt;</code> -> <code>Box&lt;FnBox&gt;</code> (because <code>FnBox</code> is implemented for <code>FnOnce()</code>, not for <code>closure</code>). Why doesn't just <code>Box&lt;FnOnce()&gt;</code> -> <code>Box&lt;FnBox&gt;</code> work?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 0, "creation_date": 1517667568, "post_id": 48596785, "comment_id": 84193133, "body": "Your <code>impl</code> is defined inside the <code>new</code> function, and is a function-level item which cannot be accessed outside the function. Defining the <code>impl</code> as a module-level item will ensure that you can access the methods defined in other places."}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 5308, "user_id": 4038191, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/10ec10e81b5315fe2147c38bf3e15e9e?s=128&d=identicon&r=PG", "display_name": "EvilTak", "link": "https://stackoverflow.com/users/4038191/eviltak"}, "edited": false, "score": 1, "creation_date": 1517669003, "post_id": 48596785, "comment_id": 84193569, "body": "Adding up to what @EvilTak said, the function <code>new</code> is not returning anything, and would more idiomatically written as a method. Moreover, the naming conventions are to use CameCase for data types (<code>Point</code>) and snake_case for functions and methods (<code>add_vector</code>)."}, {"owner": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 1, "creation_date": 1517672721, "post_id": 48596785, "comment_id": 84194716, "body": "I&#39;m rather surprised that <code>impl Point</code> even compiles inside a function. You can even implement a trait inside a function. oO"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 99643, "user_id": 445517, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/57e2ba76e6290c4e9e19821a068bc8c1?s=128&d=identicon&r=PG", "display_name": "CodesInChaos", "link": "https://stackoverflow.com/users/445517/codesinchaos"}, "edited": false, "score": 0, "creation_date": 1517678371, "post_id": 48596785, "comment_id": 84196449, "body": "@CodesInChaos All top-level <i>item</i>s (functions, structs, enums, traits, implementations, const, static, etc.) are also possible inside of a function. You can even do N-level nested functions. EvilTak <a href=\"https://play.rust-lang.org/?gist=3b523dac93489c9723771c36fec679df&amp;version=stable\" rel=\"nofollow noreferrer\">doesn&#39;t seem to be correct about the visibility, however</a>."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1517685576, "last_edit_date": 1517685576, "creation_date": 1517670813, "answer_id": 48598831, "question_id": 48596785, "link": "https://stackoverflow.com/questions/48596785/no-method-named-subtractpointfrompoint-found-for-type-in-the-current-scop/48598831#48598831", "title": "No method named `subtractPointFromPoint` found for type `()` in the current scope", "body": "<p>Don't expect that you can just arbitrarily type code into your editor and it will work. Programming languages have rules around syntax and structure that you have to follow. Additionally, the Rust community has put <em>a lot of effort</em> into creating good guides.</p>\n\n<p>For example, if you read <a href=\"https://doc.rust-lang.org/book/second-edition/\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>, specifically the chapters on <a href=\"https://doc.rust-lang.org/book/second-edition/ch05-01-defining-structs.html\" rel=\"noreferrer\">defining and instantiating structs</a> and <a href=\"https://doc.rust-lang.org/book/second-edition/ch05-03-method-syntax.html\" rel=\"noreferrer\">method syntax</a>, you will learn that functions that return a value have to declare the return type in the function signature:</p>\n\n<pre><code>pub fn new(x: i32, y: i32, z: i32) -&gt; point { /* ... */ }\n</code></pre>\n\n<p>You also have to </p>\n\n<ul>\n<li>Actually create your struct (<code>let mut point = point { x, y, z }</code>)</li>\n<li>Actually return your struct from the function</li>\n</ul>\n\n<p>This can be simplified to just:</p>\n\n<pre><code>pub fn new(x: i32, y: i32, z: i32) -&gt; point {\n    point { x, y, z }\n}\n</code></pre>\n\n<p>If you <em>don't</em> declare a return type, that's the same as saying that a function returns the empty tuple, also called the <em>unit type</em>:</p>\n\n<pre><code>pub fn new(x: i32, y: i32, z: i32) -&gt; () { /* ... */ }\n// Idiomatically written as\npub fn new(x: i32, y: i32, z: i32) { /* ... */ }\n</code></pre>\n\n<p>That's where the <code>found for type `()`</code> part of the error message is coming from. The unit type is also the value of a Rust statement \u2014 an expression terminated with a <code>;</code>. That's why your function body compiled \u2014 it ended with a <code>;</code>.</p>\n\n<hr>\n\n<p>All sorts of other issues are present:</p>\n\n<ul>\n<li>Use <code>PascalCase</code> for types like <code>Point</code>.</li>\n<li>Use <code>snake_case</code> for variables and methods.</li>\n<li>Move the constructor function to be an <em>associated function</em> of <code>Point</code>.</li>\n<li>Instead of duplicating the name <code>Point</code>, the constructor can return <code>Self</code>.</li>\n<li>Use <code>&amp;self</code> instead of <code>self: &amp;Point</code></li>\n<li>None of your methods <em>do</em> anything. They take a value, perform some operations, then  throw away the result. You probably want to take a <code>&amp;mut self</code>.</li>\n<li>Your methods don't accept a <code>Point</code> but instead a tuple of numbers.</li>\n<li>You are trying to change your <code>point1</code> variable but it's not marked as mutable</li>\n<li>You need to implement <code>Debug</code> to be able to print out a <code>Point</code>.</li>\n</ul>\n\n<pre class=\"lang-none prettyprint-override\"><code>#[derive(Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n    z: i32,\n}\n\nimpl Point {\n    pub fn new(x: i32, y: i32, z: i32) -&gt; Self {\n        Point { x, y, z }\n    }\n\n    fn add_vector_to_point(&amp;mut self, (x, y, z): (i32, i32, i32)) {\n        self.x += x;\n        self.y += y;\n        self.z += z;\n    }\n\n    fn subtract_vector_from_point(&amp;mut self, (x, y, z): (i32, i32, i32)) {\n        self.x -= x;\n        self.y -= y;\n        self.z -= z;\n    }\n\n    fn subtract_point_from_point(&amp;mut self, Point { x, y, z }: Point) {\n        self.x -= x;\n        self.y -= y;\n        self.z -= z;\n    }\n}\n\nfn main() {\n    let mut point1 = Point::new(1, 2, 3);\n    let point2 = Point::new(3, 2, 1);\n    point1.subtract_point_from_point(point2);\n    println!(\"{:?}\", point1);\n}\n</code></pre>\n\n<p>Consider implementing <a href=\"https://doc.rust-lang.org/std/ops/trait.AddAssign.html\" rel=\"noreferrer\"><code>AddAssign</code></a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.SubAssign.html\" rel=\"noreferrer\"><code>SubAssign</code></a> instead of these custom methods.</p>\n\n<p>You could also implement <a href=\"https://doc.rust-lang.org/std/ops/trait.Add.html\" rel=\"noreferrer\"><code>Add</code></a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.Sub.html\" rel=\"noreferrer\"><code>Sub</code></a>:</p>\n\n<pre><code>impl std::ops::Sub for Point {\n    type Output = Point;\n    fn sub(self, other: Point) -&gt; Point {\n        Point::new(self.x - other.x, self.y - other.y, self.z - other.z)\n    }\n}\n\nfn main() {\n    let point1 = Point::new(1, 2, 3);\n    let point2 = Point::new(3, 2, 1);\n    let point3 = point1 - point2;\n    println!(\"{:?}\", point3);\n}\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 7365575, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/82d7e68c77938ac234ed9efb2f774037?s=128&d=identicon&r=PG&f=1", "display_name": "leon.stef", "link": "https://stackoverflow.com/users/7365575/leon-stef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1681, "favorite_count": 1, "accepted_answer_id": 48598831, "answer_count": 1, "score": -3, "last_activity_date": 1517685576, "creation_date": 1517656845, "last_edit_date": 1517670384, "question_id": 48596785, "link": "https://stackoverflow.com/questions/48596785/no-method-named-subtractpointfrompoint-found-for-type-in-the-current-scop", "title": "No method named `subtractPointFromPoint` found for type `()` in the current scope", "body": "<p>I have started creating a gaming graphics engine using <a href=\"https://gamedevelopment.tutsplus.com/tutorials/lets-build-a-3d-graphics-engine-points-vectors-and-basic-concepts--gamedev-8143\" rel=\"nofollow noreferrer\">this article</a>. I chose Rust because I have heard about it and it sounds perfect for creating games. The only problem is I have no experience whatsoever. I have used Python, JavaScript, Java and HTML before.</p>\n\n<p>This is the code I have written so far:</p>\n\n<p><strong>point.rs</strong></p>\n\n<pre><code>// Point class\n\n// Operators\nstruct point {\n    x: i32,\n    y: i32,\n    z: i32,\n}\n\n// Variables\npub fn new(x: i32, y: i32, z: i32) {\n    let mut point = (x, y, z);\n    //return point;\n\n    impl point {\n        fn addVectorToPoint(self: &amp;point, (x, y, z): (i32, i32, i32)) {\n            let mut x = x + &amp;self.x;\n            let mut y = y + &amp;self.y;\n            let mut z = z + &amp;self.z;\n            let mut point = (x, y, z);\n        }\n\n        fn subtractVectorFromPoint(self: &amp;point, (x, y, z): (i32, i32, i32)) {\n            let mut x = &amp;self.x - x;\n            let mut y = &amp;self.y - y;\n            let mut z = &amp;self.z - z;\n            let mut point = (x, y, z);\n        }\n\n        fn subtractPointFromPoint(self: &amp;point, (x, y, z): (i32, i32, i32)) {\n            let mut x = &amp;self.x - x;\n            let mut y = &amp;self.y - y;\n            let mut z = &amp;self.z - z;\n            let mut vector = (x, y, z);\n        }\n    }\n}\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>mod point;\n\nfn main() {\n    let point1 = point::new(1, 2, 3);\n    let point2 = point::new(3, 2, 1);\n    let newPoint = point1.subtractPointFromPoint(point2);\n    println!(\"{:?}\", newPoint);\n}\n</code></pre>\n\n<p>When I run it, I get this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `subtractPointFromPoint` found for type `()` in the current scope\n --&gt; src/main.rs:6:27\n  |\n6 |     let newPoint = point1.subtractPointFromPoint(point2);\n  |                           ^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What I am doing wrong?</p>\n"}, {"tags": ["stream", "rust", "lifetime", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "edited": false, "score": 0, "creation_date": 1517681531, "post_id": 48599784, "comment_id": 84197536, "body": "Thanks! I&#39;ll dig deeper into the answer tomorrow. One note I wanted to make is that the caller (in this case the <code>main</code> function) should not be aware of the storage mechanism. Therefore, creation and dropping of connection should be driven lazily by the closure(s) within <code>create_task</code>. Ideally, the connection was opened when first value from the stream arrived."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1517677260, "creation_date": 1517677260, "answer_id": 48599784, "question_id": 48596087, "link": "https://stackoverflow.com/questions/48596087/expressing-lifetimes-of-a-variable-pair-within-multiple-closures/48599784#48599784", "title": "Expressing lifetimes of a variable pair within multiple closures", "body": "<p>I believe your first problem is that you haven't fully grasped how lazy futures are. You are creating a <code>Connection</code> inside of <code>create_task</code>, taking a reference to it, putting that reference into a stream/future, then attempting to return that future. <em>None of the closures have even executed at this point</em>.</p>\n\n<p>You <a href=\"https://stackoverflow.com/q/32682876/155423\">cannot return a reference to a value created in a function</a>. Don't try to <a href=\"https://stackoverflow.com/q/32300132/155423\">store the transaction and the connection in the same struct, either</a>.</p>\n\n<p>Instead, accept a reference to a <code>Connection</code> and return a <code>Future</code> containing that lifetime.</p>\n\n<p>The next problem is that the compiler doesn't know how the closures will be called or in what order. Instead of trying to close over the transaction, let it \"flow\" from one to the other, letting the ownership system ensure that it's always in the right place.</p>\n\n<pre><code>#![feature(conservative_impl_trait)]\n\nextern crate futures;\nextern crate rusqlite;\n\nuse futures::prelude::*;\nuse futures::{future, stream};\nuse rusqlite::Connection;\n\nfn main() {\n    let mut conn = Connection::open(\"temp.db\").unwrap();\n    conn.execute(\"CREATE TABLE IF NOT EXISTS temp (val INTEGER)\", &amp;[]).unwrap();\n\n    let task = create_task(&amp;mut conn);\n    task.wait().unwrap();\n}\n\nfn create_task&lt;'a&gt;(conn: &amp;'a mut rusqlite::Connection) -&gt; impl Future&lt;Item = (), Error = ()&gt; + 'a {\n    let tx = conn.transaction().unwrap();\n    stream::iter_ok::&lt;_, ()&gt;(vec![1, 2, 3])\n        .fold(tx, |tx, val| {\n            tx.execute(\"INSERT INTO temp (val) VALUES (?1)\", &amp;[&amp;val]).unwrap();\n            future::ok(tx)\n        })\n        .map(move |tx| {\n            tx.commit().unwrap();\n        })\n}\n</code></pre>\n\n<p>A giant word of warning: If <code>execute</code> isn't asynchronous, you <em>really</em> shouldn't be using it inside of a future like that. Any blocking operation will cause all of your futures to stall out. You probably should be running the synchronous workload on a separate thread / threadpool.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32209391/155423\">How to store a SqliteConnection and SqliteStatement objects in the same struct in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32300132/155423\">Why can&#39;t I store a value and a reference to that value in the same struct?</a></li>\n</ul>\n"}], "owner": {"reputation": 3271, "user_id": 1466456, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/BCGab.jpg?s=128&g=1", "display_name": "Jaanus Varus", "link": "https://stackoverflow.com/users/1466456/jaanus-varus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 48599784, "answer_count": 1, "score": 1, "last_activity_date": 1517677260, "creation_date": 1517651988, "last_edit_date": 1517674437, "question_id": 48596087, "link": "https://stackoverflow.com/questions/48596087/expressing-lifetimes-of-a-variable-pair-within-multiple-closures", "title": "Expressing lifetimes of a variable pair within multiple closures", "body": "<p>I'm struggling to express my code in a way to please the borrow-checker.</p>\n\n<p>I have a function <code>create_task</code> which creates a future of some database operations. There's a stream of values where each element needs to be inserted to a database within a transaction. The problem is sharing the transaction between multiple closures as it has also mutably borrowed the connection object.</p>\n\n<pre><code>#![feature(conservative_impl_trait)]\n\nextern crate futures;\nextern crate rusqlite;\n\nuse futures::prelude::*;\nuse futures::{future, stream};\nuse rusqlite::Connection;\n\nfn main() {\n    let task = create_task();\n    task.wait().unwrap();\n}\n\nfn create_task() -&gt; impl Future&lt;Item = (), Error = ()&gt; {\n    let mut conn = Connection::open(\"temp.db\").unwrap();\n    conn.execute(\"CREATE TABLE IF NOT EXISTS temp (val INTEGER)\", &amp;[]).unwrap();\n\n    // tx takes a mut ref to conn!\n    let tx = conn.transaction().unwrap();\n\n    stream::iter_ok::&lt;_, ()&gt;(vec![1, 2, 3])\n        .for_each(|val| {\n            // tx borrowed here!\n            tx.execute(\"INSERT INTO temp (val) VALUES (?1)\", &amp;[&amp;val]).unwrap();\n            future::ok(())\n        })\n        .map(|_| {\n            // tx moved/consumed here!\n            tx.commit().unwrap();\n        })\n}\n</code></pre>\n\n<p>There are multiple issues with the code:</p>\n\n<ul>\n<li><code>conn</code> does not live long enough. It needs to be also moved to the closures. Perhaps as an <code>Rc&lt;Connection&gt;</code> because of two closures?</li>\n<li><code>conn</code> can't be simply shared as an <code>Rc</code> because of mutability requirements. Perhaps <code>Rc&lt;RefCell&lt;Connection&gt;&gt;</code> is a more suitable type?</li>\n<li>the borrow-checker does not know that the borrow to <code>tx</code> ends after the first <code>for_each</code> closure, therefore it cannot be moved to the second <code>map</code> closure. Once again, moving it as <code>Rc&lt;Transaction&gt;</code> to both closures might be reasonable?</li>\n</ul>\n\n<p>I've been fiddling around with those ideas and know that the desired lifetimes are possible and make sense, but have not been able to express my code to the compiler in a correct way.</p>\n"}, {"tags": ["json", "serialization", "rust", "serde", "serde-json"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517670009, "post_id": 48595735, "comment_id": 84193865, "body": "<i><code>let json: Vec&lt;String&gt; = serde_json::from_str</code></i> \u2014 Why are you deserializing that JSON object as a vector? Why are you never using <code>obj</code> (which should be <code>Obj</code>)?"}, {"owner": {"reputation": 111, "user_id": 9281251, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7958d11e4ddf4152d262cd013048b880?s=128&d=identicon&r=PG&f=1", "display_name": "zep", "link": "https://stackoverflow.com/users/9281251/zep"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517676958, "post_id": 48595735, "comment_id": 84196004, "body": "Thats a typo i was trying out something i saw online, I was using struct obj and getting this error. Edited the code above."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517677901, "post_id": 48595735, "comment_id": 84196302, "body": "Ok, then the question becomes: <i>Why are you deserializing that JSON array of objects as an array of strings</i>?"}, {"owner": {"reputation": 111, "user_id": 9281251, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7958d11e4ddf4152d262cd013048b880?s=128&d=identicon&r=PG&f=1", "display_name": "zep", "link": "https://stackoverflow.com/users/9281251/zep"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517716027, "post_id": 48595735, "comment_id": 84205589, "body": "I guess thats my confusion is what is the correct data structure for deserializing should it be <code>items: Vec&lt;Vec&lt;String&gt;&gt;</code> ?"}], "answers": [{"tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 15, "last_activity_date": 1519546410, "creation_date": 1519546410, "answer_id": 48971582, "question_id": 48595735, "link": "https://stackoverflow.com/questions/48595735/invalid-type-map-expected-a-sequence-when-deserializing-a-nested-json-struct/48971582#48971582", "title": "&quot;invalid type: map, expected a sequence&quot; when deserializing a nested JSON structure with Serde", "body": "<p>Have a look at this part of your JSON input data:</p>\n\n<pre><code>{\n  ...\n  \"items\": [\n    {\n      ...\n      \"title\": \"Stop setting $CARGO_HOME to its default value\",\n      ...\n    }\n  ]\n}\n</code></pre>\n\n<ul>\n<li>The top-level data structure is a JSON map, so in Rust this will be represented as a struct. I will use your name <code>Obj</code>.</li>\n<li>The top-level JSON map has a key called <code>\"items\"</code> so in Rust this will be a field <code>items</code> inside the <code>Obj</code> struct.</li>\n<li>The value of <code>\"items\"</code> in the map is a JSON array, so in Rust let's use a Vec.</li>\n<li>Each element in the JSON array is a JSON map so in Rust we need a struct for those. We can call it <code>Issue</code>.</li>\n<li>Each issue has a JSON key called <code>\"title\"</code> so this will be a field <code>title</code> inside the <code>Issue</code> struct.</li>\n<li>The value of <code>\"title\"</code> is a JSON string so we can use Rust's <code>String</code> type for the field.</li>\n</ul>\n\n<hr>\n\n<pre><code>#[derive(Deserialize, Debug)]\nstruct Obj {\n    items: Vec&lt;Issue&gt;,\n}\n\n#[derive(Deserialize, Debug)]\nstruct Issue {\n    title: String,\n}\n\nfn main() {\n    let j = /* get the JSON data */;\n\n    let issues = serde_json::from_str::&lt;Obj&gt;(j).unwrap();\n    for i in issues.items {\n        println!(\"{:#?}\", i);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 111, "user_id": 9281251, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7958d11e4ddf4152d262cd013048b880?s=128&d=identicon&r=PG&f=1", "display_name": "zep", "link": "https://stackoverflow.com/users/9281251/zep"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9825, "favorite_count": 1, "answer_count": 1, "score": 7, "last_activity_date": 1519546410, "creation_date": 1517648931, "last_edit_date": 1517676984, "question_id": 48595735, "link": "https://stackoverflow.com/questions/48595735/invalid-type-map-expected-a-sequence-when-deserializing-a-nested-json-struct", "title": "&quot;invalid type: map, expected a sequence&quot; when deserializing a nested JSON structure with Serde", "body": "<p>I am trying to poll the GitHub API for issues and print them out. To do so, I need to deserialize a nested JSON structure that I receive from a cURL GET request.</p>\n\n<p>I am trying to get the <code>url</code> for all the objects in the <code>items</code> array:</p>\n\n<pre><code>{\n \"total_count\": 4905,\n \"incomplete_results\": false,\n \"items\": [\n    {\n     \"url\": \"https://api.github.com/repos/servo/saltfs/issues/789\",\n     \"repository_url\": \"https://api.github.com/repos/servo/saltfs\",\n     \"labels_url\": \n   \"https://api.github.com/repos/servo/saltfs/issues/789/labels{/name}\",\n  \"comments_url\": \"https://api.github.com/repos/servo/saltfs/issues/789/comments\",\n  \"events_url\": \"https://api.github.com/repos/servo/saltfs/issues/789/events\",\n  \"html_url\": \"https://github.com/servo/saltfs/issues/789\",\n  \"id\": 293260512,\n  \"number\": 789,\n  \"title\": \"Stop setting $CARGO_HOME to its default value\",\n  \"user\": {\n    \"login\": \"SimonSapin\",\n    \"id\": 291359,\n    \"avatar_url\": \"https://avatars0.githubusercontent.com/u/291359?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/SimonSapin\",\n    \"html_url\": \"https://github.com/SimonSapin\",\n    \"followers_url\": \"https://api.github.com/users/SimonSapin/followers\",\n    \"following_url\": \"https://api.github.com/users/SimonSapin/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/SimonSapin/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/SimonSapin/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/SimonSapin/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/SimonSapin/orgs\",\n    \"repos_url\": \"https://api.github.com/users/SimonSapin/repos\",\n    \"events_url\": \"https://api.github.com/users/SimonSapin/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/SimonSapin/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"labels\": [\n    {\n      \"id\": 341722396,\n      \"url\": \"https://api.github.com/repos/servo/saltfs/labels/E-easy\",\n      \"name\": \"E-easy\",\n      \"color\": \"02e10c\",\n      \"default\": false\n    }\n  ],\n  \"state\": \"open\",\n  \"locked\": false,\n  \"assignee\": null,\n  \"assignees\": [\n\n  ],\n  \"milestone\": null,\n  \"comments\": 0,\n  \"created_at\": \"2018-01-31T18:16:09Z\",\n  \"updated_at\": \"2018-01-31T18:16:49Z\",\n  \"closed_at\": null,\n  \"author_association\": \"MEMBER\",\n  \"body\": \"In `buildbot/master/files/config/environments.py` we set `CARGO_HOME` to Cargo\u2019s default value. Now that `mach` does not set it (since https://github.com/servo/servo/pull/19395), this has no effect. We can remove these lines.\",\n  \"score\": 1.0\n},\n{\n  \"url\": \"https://api.github.com/repos/servo/servo/issues/19916\",\n  \"repository_url\": \"https://api.github.com/repos/servo/servo\",\n  \"labels_url\": \"https://api.github.com/repos/servo/servo/issues/19916/labels{/name}\",\n  \"comments_url\": \"https://api.github.com/repos/servo/servo/issues/19916/comments\",\n  \"events_url\": \"https://api.github.com/repos/servo/servo/issues/19916/events\",\n  \"html_url\": \"https://github.com/servo/servo/issues/19916\",\n  \"id\": 293237180,\n  \"number\": 19916,\n  \"title\": \"Use a macro to create null-terminated C strings\",\n  \"user\": {\n    \"login\": \"jdm\",\n    \"id\": 27658,\n    \"avatar_url\": \"https://avatars1.githubusercontent.com/u/27658?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/jdm\",\n    \"html_url\": \"https://github.com/jdm\",\n    \"followers_url\": \"https://api.github.com/users/jdm/followers\",\n    \"following_url\": \"https://api.github.com/users/jdm/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/jdm/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/jdm/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/jdm/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/jdm/orgs\",\n    \"repos_url\": \"https://api.github.com/users/jdm/repos\",\n    \"events_url\": \"https://api.github.com/users/jdm/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/jdm/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n  },\n  \"labels\": [\n    {\n      \"id\": 89384911,\n      \"url\": \"https://api.github.com/repos/servo/servo/labels/C-assigned\",\n      \"name\": \"C-assigned\",\n      \"color\": \"02d7e1\",\n      \"default\": false\n    },\n    {\n      \"id\": 15997664,\n      \"url\": \"https://api.github.com/repos/servo/servo/labels/E-easy\",\n      \"name\": \"E-easy\",\n      \"color\": \"02e10c\",\n      \"default\": false\n    },\n    {\n      \"id\": 135307111,\n      \"url\": \"https://api.github.com/repos/servo/servo/labels/I-cleanup\",\n      \"name\": \"I-cleanup\",\n      \"color\": \"e11d21\",\n      \"default\": false\n    }\n  ],\n  \"state\": \"open\",\n  \"locked\": false,\n  \"assignee\": null,\n  \"assignees\": [\n\n  ],\n  \"milestone\": null,\n  \"comments\": 3,\n  \"created_at\": \"2018-01-31T17:04:06Z\",\n  \"updated_at\": \"2018-01-31T22:03:56Z\",\n  \"closed_at\": null,\n  \"author_association\": \"MEMBER\",\n  \"body\": \"When we write them by hand (eg. `b\\\"some string\\\\0\\\"`), we invariably get them wrong in ways that are tricky to notice (https://github.com/servo/servo/pull/19915). We should use a macro like this instead:\\r\\n```rust\\r\\nmacro_rules! c_str {\\r\\n    ($str:expr) =&gt; {\\r\\n        concat!($str, \\\"\\\\0\\\").as_bytes()\\r\\n    }\\r\\n}\\r\\n```\\r\\nThis would allow us to write code like `(c_str!(\\\"PEParseDeclarationDeclExpected\\\"), Action::Skip)` instead of https://github.com/emilio/servo/blob/d82c54bd3033cc3277ebeb4854739bebe4e20f2f/ports/geckolib/error_reporter.rs#L237. We should be able to clean up all of the uses in that file.\\r\\n\\r\\nNo need to run any automated tests; if it builds with `./mach build-geckolib`, then it's good enough for a pull request.\",\n  \"score\": 1.0\n}\n]}\n</code></pre>\n\n<p>My <code>request</code> function makes a cURL request and receives the above JSON. I then use serde_json to deserialize the JSON</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>extern crate serde;\n#[macro_use]\nextern crate serde_derive;\nextern crate serde_json;\n\nmod engine;\nmod server;\nuse engine::request;\nuse std::string::String;\nuse self::serde_json::{Error, Value};\n\n#[derive(Serialize, Deserialize)]\nstruct obj {\n    items: Vec&lt;String&gt;,\n}\n\nfn main() {\n    let output_jn: String = request(\n        \"https://api.github.com/search/issues?q=is:issue+label:e-easy\",\n    ).to_string(); //gets json structure as string\n    let json: obj = serde_json::from_str(&amp;output_jn).unwrap();\n\n    for elem in json.iter() {\n        println!(\"{:?}\", elem);\n    }\n}\n</code></pre>\n\n<p>I get the following error message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: \nErrorImpl { code: Message(\"invalid type: map, expected a sequence\"), \nline: 1, column: 0 }', libcore/result.rs:945:5\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n</code></pre>\n\n<p>I'm certain I'm making a stupid mistake in deserializing my JSON structure, I've tried a number of permutations and combinations but I couldn't get anything to work.</p>\n"}, {"tags": ["asynchronous", "rust", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 511, "user_id": 1927976, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/59a9cb96b87e3e41394f4104f509c163?s=128&d=identicon&r=PG", "display_name": "Josh Leeb-du Toit", "link": "https://stackoverflow.com/users/1927976/josh-leeb-du-toit"}, "is_accepted": false, "score": 0, "last_activity_date": 1517727775, "creation_date": 1517727775, "answer_id": 48605632, "question_id": 48593977, "link": "https://stackoverflow.com/questions/48593977/how-would-i-make-a-tcpclient-request-per-item-in-a-futures-stream/48605632#48605632", "title": "How would I make a TcpClient request per item in a futures Stream?", "body": "<p>The solution I have come up with (so far) has been to use the <a href=\"https://docs.rs/futures/*/futures/future/struct.LoopFn.html\" rel=\"nofollow noreferrer\"><code>LoopFn</code></a> in the Future-Rs crate. It's not ideal as a new connection still has to be made but it is at least a step in the right direction.</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>use futures::{future, Future};\nuse std::{env, io};\nuse std::net::SocketAddr;\nuse tokio_core::reactor::{Core, Handle};\nuse tokio_prime::protocol::PrimeClientProto;\nuse tokio_prime::request::PrimeRequest;\nuse tokio_proto::TcpClient;\nuse tokio_service::Service;\n\nmod cli;\n\nfn handler&lt;'a&gt;(\n    handle: &amp;'a Handle, addr: &amp;'a SocketAddr\n) -&gt; impl Future&lt;Item = (), Error = ()&gt; + 'a {\n    cli::prompt(io::stdin(), io::stdout())\n        .and_then(move |number| {\n            TcpClient::new(PrimeClientProto)\n                .connect(addr, handle)\n                .and_then(move |client| Ok((client, number)))\n        })\n        .and_then(|(client, number)| {\n            client\n                .call(PrimeRequest { number: Ok(number) })\n                .and_then(|response| {\n                    println!(\"{:?}\", response);\n                    Ok(())\n                })\n        })\n        .or_else(|err| {\n            println!(\"! {}\", err);\n            Ok(())\n        })\n}\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let addr_string = env::args().nth(1).unwrap_or(\"127.0.0.1:8080\".to_string());\n    let remote_addr = addr_string.parse::&lt;SocketAddr&gt;().unwrap();\n\n    println!(\"Connecting on {}\", remote_addr);\n\n    let client = future::loop_fn((), |_| {\n        handler(&amp;handle, &amp;remote_addr)\n            .map(|_| -&gt; future::Loop&lt;(), ()&gt; { future::Loop::Continue(()) })\n    });\n\n    core.run(client).ok();\n}\n</code></pre>\n\n<p><strong>cli.rs</strong></p>\n\n<pre><code>use futures::prelude::*;\nuse std::io;\nuse std::io::{Stdin, Stdout};\nuse std::io::prelude::*;\n\n#[async]\npub fn prompt(stdin: Stdin, stdout: Stdout) -&gt; io::Result&lt;u64&gt; {\n    let mut stdout_handle = stdout.lock();\n    stdout_handle.write(b\"&gt; \")?;\n    stdout_handle.flush()?;\n\n    let mut buf = String::new();\n    let mut stdin_handle = stdin.lock();\n    stdin_handle.read_line(&amp;mut buf)?;\n\n    parse_input(buf.trim().to_string())\n}\n\nfn parse_input(s: String) -&gt; io::Result&lt;u64&gt; {\n    s.parse::&lt;u64&gt;()\n        .map_err(|_| io::Error::new(io::ErrorKind::Other, \"invalid u64\"))\n}\n</code></pre>\n"}], "owner": {"reputation": 511, "user_id": 1927976, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/59a9cb96b87e3e41394f4104f509c163?s=128&d=identicon&r=PG", "display_name": "Josh Leeb-du Toit", "link": "https://stackoverflow.com/users/1927976/josh-leeb-du-toit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 163, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1517727775, "creation_date": 1517632678, "last_edit_date": 1517678750, "question_id": 48593977, "link": "https://stackoverflow.com/questions/48593977/how-would-i-make-a-tcpclient-request-per-item-in-a-futures-stream", "title": "How would I make a TcpClient request per item in a futures Stream?", "body": "<p>I have a concept project where the client sends a server a number (<code>PrimeClientRequest</code>), the server computes if the value is prime or not, and returns a response (<code>PrimeClientResponse</code>). I want the client to be a simple CLI which prompts the user for a number, sends the request to the server, and displays the response. Ideally I want to do this using <code>TcpClient</code> from Tokio and Streams from Futures-Rs. </p>\n\n<p>I've written a Tokio server using services and I want to reuse the same <code>codec</code> and <code>proto</code> for the client.</p>\n\n<p>Part of the client is a function called <code>read_prompt</code> which returns a <code>Stream</code>. Essentially it is an infinite loop at which each iteration reads in some input from <code>stdin</code>. </p>\n\n<p>Here's the relevant code:</p>\n\n<p><strong>main.rs</strong></p>\n\n<pre><code>use futures::{Future, Stream};\nuse std::env;\nuse std::net::SocketAddr;\nuse tokio_core::reactor::Core;\nuse tokio_prime::protocol::PrimeClientProto;\nuse tokio_prime::request::PrimeRequest;\nuse tokio_proto::TcpClient;\nuse tokio_service::Service;\n\nmod cli;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let handle = core.handle();\n\n    let addr_string = env::args().nth(1).unwrap_or(\"127.0.0.1:8080\".to_string());\n    let remote_addr = addr_string.parse::&lt;SocketAddr&gt;().unwrap();\n\n    println!(\"Connecting on {}\", remote_addr);\n    let tcp_client = TcpClient::new(PrimeClientProto).connect(&amp;remote_addr, &amp;handle);\n\n    core.run(tcp_client.and_then(|client| {\n        client\n            .call(PrimeRequest { number: Ok(0) })\n            .and_then(|response| {\n                println!(\"RESP = {:?}\", response);\n                Ok(())\n            })\n    })).unwrap();\n}\n</code></pre>\n\n<p><strong>cli.rs</strong></p>\n\n<pre><code>use futures::{Future, Sink, Stream};\nuse futures::sync::mpsc;\nuse std::{io, thread};\nuse std::io::{Stdin, Stdout};\nuse std::io::prelude::*;\n\npub fn read_prompt() -&gt; impl Stream&lt;Item = u64, Error = ()&gt; {\n    let (tx, rx) = mpsc::channel(1);\n\n    thread::spawn(move || loop {\n        let thread_tx = tx.clone();\n\n        let input = prompt(io::stdout(), io::stdin()).unwrap();\n        let parsed_input = input\n            .parse::&lt;u64&gt;()\n            .map_err(|_| io::Error::new(io::ErrorKind::Other, \"invalid u64\"));\n\n        thread_tx.send(parsed_input.unwrap()).wait().unwrap();\n    });\n\n    rx\n}\n\nfn prompt(stdout: Stdout, stdin: Stdin) -&gt; io::Result&lt;String&gt; {\n    let mut stdout_handle = stdout.lock();\n    stdout_handle.write(b\"&gt; \")?;\n    stdout_handle.flush()?;\n\n    let mut buf = String::new();\n    let mut stdin_handle = stdin.lock();\n    stdin_handle.read_line(&amp;mut buf)?;\n\n    Ok(buf.trim().to_string())\n}\n</code></pre>\n\n<p>With the code above, the client sends a single request to the server before the client terminates. I want to be able to use the stream generated from <code>read_prompt</code> to provide input to the <code>TcpClient</code> and make a request per item in the stream. How would I go about doing this?</p>\n\n<p>The full code can be found at <a href=\"https://github.com/joshleeb/tokio-prime\" rel=\"nofollow noreferrer\">joshleeb/tokio-prime</a>.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 696, "user_id": 2509572, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/1cd622d403da42df85c9bc318708b00d?s=128&d=identicon&r=PG", "display_name": "firechant", "link": "https://stackoverflow.com/users/2509572/firechant"}, "edited": false, "score": 2, "creation_date": 1519398205, "post_id": 48594752, "comment_id": 84907909, "body": "In case anyone ran into the same thing I did, the order of arguments matters.  That is, <code>cargo test +nightly</code> does not work."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "is_accepted": true, "score": 65, "last_activity_date": 1517640487, "creation_date": 1517640487, "answer_id": 48594752, "question_id": 48593858, "link": "https://stackoverflow.com/questions/48593858/how-to-execute-cargo-test-using-the-nightly-channel/48594752#48594752", "title": "How to execute cargo test using the nightly channel?", "body": "<p>The command line solution may help you to configure your IDE: </p>\n\n<pre><code>cargo +nightly test\n</code></pre>\n\n<p>Provided, of course, that you have the nightly channel installed. If not, perhaps install it with <code>rustup install nightly</code> (no need to switch to it, but check you're still on stable: <code>rustup show</code>).</p>\n"}, {"comments": [{"owner": {"reputation": 5450, "user_id": 942317, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/SY5ID.jpg?s=128&g=1", "display_name": "STEEL", "link": "https://stackoverflow.com/users/942317/steel"}, "edited": false, "score": 2, "creation_date": 1591086981, "post_id": 48599055, "comment_id": 109915196, "body": "an e.g. <code>rustup run nightly cargo build --target wasm32-unknown-unknown</code>"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 33, "last_activity_date": 1602878442, "last_edit_date": 1602878442, "creation_date": 1517672367, "answer_id": 48599055, "question_id": 48593858, "link": "https://stackoverflow.com/questions/48593858/how-to-execute-cargo-test-using-the-nightly-channel/48599055#48599055", "title": "How to execute cargo test using the nightly channel?", "body": "<p>The <code>+&lt;toolchain&gt;</code> functionality comes from <a href=\"https://www.rustup.rs/\" rel=\"nofollow noreferrer\">rustup</a>, the Rust toolchain manager. It works for both <code>cargo +&lt;toolchain&gt;</code> as well as <code>rustc +&lt;toolchain&gt;</code>.</p>\n<p>In addition, you can use</p>\n<ul>\n<li><code>rustup run &lt;toolchain&gt; &lt;any arbitrary command goes here&gt;</code></li>\n<li>Since your project requires nightly features, you can change into the directory and run <code>rustup override set &lt;toolchain&gt;</code> to always use the nightly toolchain in that directory.</li>\n<li>Create a file called <code>rust-toolchain</code> in your directory containing the name of the toolchain required (e.g. nightly). This has the safe effect as an override, but can be committed to source control.</li>\n</ul>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/22758779/155423\">Is it possible to have multiple coexisting Rust installations?</a></li>\n</ul>\n"}], "owner": {"reputation": 1003, "user_id": 4957011, "user_type": "registered", "accept_rate": 82, "profile_image": "https://lh3.googleusercontent.com/-qCvohWQdhyo/AAAAAAAAAAI/AAAAAAAAAyc/5cVJx4KgEFE/photo.jpg?sz=128", "display_name": "Phoenix", "link": "https://stackoverflow.com/users/4957011/phoenix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 22982, "favorite_count": 4, "accepted_answer_id": 48594752, "answer_count": 2, "score": 35, "last_activity_date": 1602878442, "creation_date": 1517631189, "last_edit_date": 1517672017, "question_id": 48593858, "link": "https://stackoverflow.com/questions/48593858/how-to-execute-cargo-test-using-the-nightly-channel", "title": "How to execute cargo test using the nightly channel?", "body": "<p>I'm trying to run my tests with nightly Rust using Windows Powershell. I run <code>cargo test</code> in the directory, and I get</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Compiling rustcraft v0.1.0 (file:///C:/Users/Phoenix/Desktop/Rust/rustcraft)\nerror[E0554]: #![feature] may not be used on the stable release channel\n --&gt; C:\\Users\\Phoenix\\Desktop\\Rust\\rustcraft\\src\\main.rs:1:1\n  |\n1 | #![feature(integer_atomics)]\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0554]: #![feature] may not be used on the stable release channel\n --&gt; C:\\Users\\Phoenix\\Desktop\\Rust\\rustcraft\\src\\main.rs:2:1\n  |\n2 | #![feature(collections)]\n  | ^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Obviously, I have to tell Cargo to compile it on the nightly channel, but how? I can't find any reference to specifying a channel in the help section, or any website I've found.</p>\n"}, {"tags": ["regex", "input", "rust", "full-text-search"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user557597"}, "edited": false, "score": 0, "creation_date": 1517594985, "post_id": 48588440, "comment_id": 84174183, "body": "Some examples would be helpful. Are you talking about recursion, some sort of balance ? Like &lt;prefix..&lt;prefix.. end&gt; .. end&gt; ?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user557597"}, "edited": false, "score": 0, "creation_date": 1517595103, "post_id": 48588440, "comment_id": 84174231, "body": "<code>otherwise I have to read the entire file into the buffer in order to prove that there is not a match to the regex</code> Well, even if you read in discrete blocks, you&#39;d still have to eventually read the entire file to find that you have no match."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 4, "creation_date": 1517595273, "post_id": 48588440, "comment_id": 84174304, "body": "It&#39;s hard to tell without examples, but this sounds like a use case for searching on text streams: <a href=\"https://github.com/rust-lang/regex/issues/425\" rel=\"nofollow noreferrer\">github.com/rust-lang/regex/issues/425</a> --- it&#39;s something we want, but it will be quite some time before it&#39;s in the <code>regex</code> crate proper."}, {"owner": {"reputation": 307, "user_id": 1860372, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/873b485accaca1835e24353a2aeff5e7?s=128&d=identicon&r=PG", "display_name": "hxtk", "link": "https://stackoverflow.com/users/1860372/hxtk"}, "edited": false, "score": 0, "creation_date": 1517595769, "post_id": 48588440, "comment_id": 84174541, "body": "I&#39;ve added the failing test cases to my post. With some thinking I can probably figure out the first two on my own, but I&#39;m utterly lost on the third one."}, {"owner": {"reputation": 307, "user_id": 1860372, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/873b485accaca1835e24353a2aeff5e7?s=128&d=identicon&r=PG", "display_name": "hxtk", "link": "https://stackoverflow.com/users/1860372/hxtk"}, "edited": false, "score": 0, "creation_date": 1517596217, "post_id": 48588440, "comment_id": 84174733, "body": "@sin that only applies to the terminating delimiter, and in that case I&#39;m okay with it because then the entire file is the correct return value. With the starting delimiter, if the entire buffer is not a prefix to a word in the delimiting language then I have shown that the prefixing delimiter(s) terminate within the buffer."}, {"owner": {"reputation": 46944, "user_id": 3764814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d02a4923abd2ca6d7593f031e4222c2?s=128&d=identicon&r=PG", "display_name": "Lucas Trzesniewski", "link": "https://stackoverflow.com/users/3764814/lucas-trzesniewski"}, "edited": false, "score": 1, "creation_date": 1517706700, "post_id": 48588440, "comment_id": 84204122, "body": "I&#39;m not quite sure I understand your question. You seem to be aware of what partial matching is, and that some regex engines support this feature (PCRE, Boost, Java). Are you looking for a solution using the Rust regex library, or are you building your own regex engine? If that helps, I wrote a <a href=\"https://stackoverflow.com/a/41580048/3764814\">messy hack for JavaScript</a> which converts a regex pattern into a partially-matching one, but it only works because JS has a stupidly simple regex engine, and fails to split backreferences. To get the real deal, you need an option in your regex engine."}, {"owner": {"reputation": 307, "user_id": 1860372, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/873b485accaca1835e24353a2aeff5e7?s=128&d=identicon&r=PG", "display_name": "hxtk", "link": "https://stackoverflow.com/users/1860372/hxtk"}, "reply_to_user": {"reputation": 46944, "user_id": 3764814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d02a4923abd2ca6d7593f031e4222c2?s=128&d=identicon&r=PG", "display_name": "Lucas Trzesniewski", "link": "https://stackoverflow.com/users/3764814/lucas-trzesniewski"}, "edited": false, "score": 0, "creation_date": 1517713916, "post_id": 48588440, "comment_id": 84205241, "body": "@Lucas, I&#39;m not terribly concerned with how the solution is acheived. Simpler is better, but I&#39;d like to avoid introducing poorly-maintained dependencies and staying in pure rust is a requirement.  I was hoping to avoid writing my own regex engine because I suspect that will more than double the size of my codebase, but if someone makes a convincing argument that it&#39;s the easiest way then I will. I think you may have enabled me to avoid that with your JS hack, though. Thanks!"}, {"owner": {"reputation": 46944, "user_id": 3764814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8d02a4923abd2ca6d7593f031e4222c2?s=128&d=identicon&r=PG", "display_name": "Lucas Trzesniewski", "link": "https://stackoverflow.com/users/3764814/lucas-trzesniewski"}, "edited": false, "score": 1, "creation_date": 1517744394, "post_id": 48588440, "comment_id": 84211550, "body": "I don&#39;t know Rust so I won&#39;t be able to help much, but the simplest solution (if Rust doesn&#39;t support it out of the box) would be to use PCRE, which supports partial matching (I don&#39;t know if using external libraries still qualifies as &quot;pure Rust&quot; for you). This will obviously require you to switch the regex engine to PCRE, but fortunately it&#39;s among the best."}], "owner": {"reputation": 307, "user_id": 1860372, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/873b485accaca1835e24353a2aeff5e7?s=128&d=identicon&r=PG", "display_name": "hxtk", "link": "https://stackoverflow.com/users/1860372/hxtk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 393, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1517601583, "creation_date": 1517594500, "last_edit_date": 1517601583, "question_id": 48588440, "link": "https://stackoverflow.com/questions/48588440/partial-match-of-regex", "title": "Partial match of regex", "body": "<p>I'm working on a <code>java.util.Scanner</code>-like input reader for Rust, both as a learning project and because I haven't seen a powerful text input handler for Rust that I'm happy with.</p>\n\n<p>The problem with regular language delimiters, outlined <a href=\"https://github.com/hxtk/Rust-Scanner/issues/2\" rel=\"nofollow noreferrer\">in issue #2 on my repository</a>, is that they may be arbitrarily long, and so I'm not sure how to handle the case where the input buffer on <code>BufRead</code> does not fully contain either the start or the end delimiter.</p>\n\n<p>In <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7-b147/java/util/Scanner.java#Scanner.getCompleteTokenInBuffer%28java.util.regex.Pattern%29\" rel=\"nofollow noreferrer\">the OpenJDK 1.7 implementation</a>, they take advantage of the fact that the regex engine supports partial matching, i.e., they are able to ask, \"Is the input string a prefix to a member of the RegEx's language?\". If this is the case, they wait for more input.</p>\n\n<p>It seems to me that I cannot solve this problem without prefix matching, because otherwise I have to read the entire file into the buffer in order to prove that there is not a match to the regex. Specifically, this problem is when searching for the last prefixed delimiter: it has no memory impact whatsoever when searching for the terminating delimiter.</p>\n\n<p>Note that because I am accepting arbitrary regexes from the API's users, I am not aware of a way to construct a regex that matches prefixes to words in the given regex's language. If someone knows how to do this algorithmically, I would accept that as the solution.</p>\n\n<p>If there is a solution without partial matching of regexes, it is welcome as well.</p>\n\n<p>For example:</p>\n\n<p>Edit: My latest commit passes the first of these tests, but still requires partial matching to tackle the other two under my current line of thought.</p>\n\n<pre><code>/// This test will fail if we cannot read past the length of the buffer.\n/// The buffer size is four characters, so it will read \"hell\". If we do\n/// not continue past the buffer, then it is interpreted as if we have\n/// reached EOF. This affects searching for the terminating delimiter.\n#[test]\nfn buffer_ends_before_delim() {\n    let string: &amp;[u8] = b\"hello world\";\n    let mut br = BufReader::with_capacity(4, string);\n    let mut test = Scanner::new(&amp;mut br);\n\n    assert_eq!(test.next(), Some(String::from(\"hello\")));\n}\n\n/// This test will fail if we do not solve the above problem in a way that\n/// preserves the tail of the original buffer, because in this test case the\n/// terminating delimiter begins within the first buffer size and\n/// ends within the second.\n#[test]\nfn buffer_ends_within_delim() {\n    let string: &amp;[u8] = b\"foo  bar\";\n    let mut br = BufReader::with_capacity(4, string);\n    let mut test = Scanner::new(&amp;mut br);\n    test.set_delim_str(\"  \");\n\n    assert_eq!(test.next(), Some(String::from(\"foo\")));\n}\n\n/// This test will fail if we cannot detect partial matches of the delimiter\n/// when skipping over prefixed delimiters. Because the buffer size is 4, it\n/// will read \"aaaa\", which is not in the language of /a+b/, however the\n/// automaton is not in a dead state either: reading a \"b\" would put us in\n/// an accepting state, thus we must read more input to know if the regex is\n/// satisfied. Reading an additional character will result in \"aaaab\", which\n/// is a valid delimiter in this language and should therefore be skipped.\n#[test]\nfn buffer_ends_within_start_delim() {\n    let string: &amp;[u8] = b\"aaaabfoo\";\n    let mut br = BufReader::with_capacity(4, string);\n    let mut test = Scanner::new(&amp;mut br);\n    test.set_delim(Regex::new(r\"a+b\").unwrap());\n\n    assert_eq!(test.next(), Some(String::from(\"foo\")));\n}\n</code></pre>\n"}, {"tags": ["windows", "unicode", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1517589190, "post_id": 48586816, "comment_id": 84171059, "body": "TLDR: <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf16\" rel=\"nofollow noreferrer\"><code>String::from_utf16</code></a>"}, {"owner": {"reputation": 107, "user_id": 5841863, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58b6c8f27176a5bacd36542808e55b0?s=128&d=identicon&r=PG&f=1", "display_name": "watts", "link": "https://stackoverflow.com/users/5841863/watts"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1517589255, "post_id": 48586816, "comment_id": 84171090, "body": "This answer pointed me to a Rust doc I had already considered : <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf16\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/string/&hellip;</a>. But then how do I convert this raw pointer to a &amp;[u16] ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1517590848, "post_id": 48586816, "comment_id": 84172072, "body": "<i>I believe that in this context wchar_t is a 16-bit Unicode character</i> \u2014 please don&#39;t guess, as your guess is wrong on various platforms. Instead, use <a href=\"https://docs.rs/libc/0.2.36/libc/type.wchar_t.html\" rel=\"nofollow noreferrer\"><code>libc::wchar_t</code></a> which is correctly defined for the appropriate target platform."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517596767, "post_id": 48586816, "comment_id": 84175007, "body": "@Shepmaster Actually, the OP <b>is</b> right. <code>wchar_t</code> is 16-bit on Windows: <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa367308(v=vs.85).aspx\" rel=\"nofollow noreferrer\">msdn.microsoft.com/en-us/library/windows/desktop/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1517598916, "post_id": 48586816, "comment_id": 84175954, "body": "@Boiethios I never said OP was <i>wrong</i>, just that hardcoding <code>wchar_t</code> as a <code>u16</code> on all platforms is a bad choice. C is rather slippery with its type definitions (e.g. &quot;how big is an <code>int</code>&quot;). One reason to use Rust in the first place is to avoid these types of issues. Using <code>libc::wchar_t</code> will prevent the code from compiling on a different platform, instead of compiling but ending up with mismatched pointers which will cause undefined behavior."}], "answers": [{"comments": [{"owner": {"reputation": 107, "user_id": 5841863, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58b6c8f27176a5bacd36542808e55b0?s=128&d=identicon&r=PG&f=1", "display_name": "watts", "link": "https://stackoverflow.com/users/5841863/watts"}, "edited": false, "score": 0, "creation_date": 1517589667, "post_id": 48587087, "comment_id": 84171365, "body": "Thanks ! I&#39;ll investigate that and come back shortly. I can&#39;t really change the arguments of the calling function. If I was in C i would use strlen to count the character until the null terminator. I guess I could call strlen from Rust somehow. I&#39;ll check is from_wide works appropriately."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 107, "user_id": 5841863, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58b6c8f27176a5bacd36542808e55b0?s=128&d=identicon&r=PG&f=1", "display_name": "watts", "link": "https://stackoverflow.com/users/5841863/watts"}, "edited": false, "score": 1, "creation_date": 1517590788, "post_id": 48587087, "comment_id": 84172031, "body": "@watts There is probably a different function you have to use, not <code>strlen</code>, since <code>wchar_t</code> is 16 bits wide and <code>strlen</code> assumes no embedded zero bytes."}, {"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 0, "creation_date": 1517591208, "post_id": 48587087, "comment_id": 84172251, "body": "<code>On Windows, strings are often arbitrary sequences of non-zero 16-bit values</code> So I guess a 0x0000 value can indeed indicate end-of-string."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517592123, "post_id": 48587087, "comment_id": 84172743, "body": "Might be worth using something that cannot be represented in ASCII as <code>arr</code>. Showing how it handles UTF-16 surrogate pairs would be good too."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1517592655, "post_id": 48587087, "comment_id": 84173018, "body": "Assuming the string is null-terminated, you still can&#39;t use <code>strlen</code>. <code>&quot;Abc\\0&quot;</code> is encoded into little-endian UTF-16 as <code>[65, 0, 98, 0, 99, 0, 0, 0]</code>. <code>strlen</code> goes byte-by-byte, so it will return 1. You need to use a function that goes two bytes at a time to get the desired value (3)."}, {"owner": {"reputation": 107, "user_id": 5841863, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58b6c8f27176a5bacd36542808e55b0?s=128&d=identicon&r=PG&f=1", "display_name": "watts", "link": "https://stackoverflow.com/users/5841863/watts"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1517912498, "post_id": 48587087, "comment_id": 84277709, "body": "@trentcl Yeah I was referring to the appropriate strlen, but thanks for noting that out"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 107, "user_id": 5841863, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58b6c8f27176a5bacd36542808e55b0?s=128&d=identicon&r=PG&f=1", "display_name": "watts", "link": "https://stackoverflow.com/users/5841863/watts"}, "edited": false, "score": 1, "creation_date": 1517920593, "post_id": 48587087, "comment_id": 84282935, "body": "@watts Pedantry is &lt;s&gt;what I do best!&lt;/s&gt; one of the things I&#39;m really good at."}], "tags": [], "owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "is_accepted": false, "score": 6, "last_activity_date": 1517590957, "last_edit_date": 1517590957, "creation_date": 1517589348, "answer_id": 48587087, "question_id": 48586816, "link": "https://stackoverflow.com/questions/48586816/converting-raw-pointer-to-16-bit-unicode-character-to-file-path-in-rust/48587087#48587087", "title": "Converting raw pointer to 16-bit Unicode character to file path in Rust", "body": "<p>You need to use <a href=\"https://doc.rust-lang.org/std/ffi/struct.OsString.html\" rel=\"nofollow noreferrer\"><code>OsString</code></a>, which represents the native string format used by the operating system. In Windows these are specifically 16-bit character strings (usually UTF-16).</p>\n\n<p>Quoting the doc:</p>\n\n<blockquote>\n  <p><code>OsString</code> and <code>OsStr</code> are useful when you need to transfer strings to and from the operating system itself, or when capturing the output of external commands. Conversions between <code>OsString</code>, <code>OsStr</code> and Rust strings work similarly to those for <code>CString</code> and <code>CStr</code>.</p>\n</blockquote>\n\n<p>You first need to convert the pointer into a slice, using unsafe code:</p>\n\n<pre><code>use std::slice;\n\n// manifest a slice out of thin air!\nlet ptr = 0x1234 as const *u16;\nlet nb_elements = 10;\nunsafe {\n    let slice = slice::from_raw_parts(ptr, nb_elements);\n}\n</code></pre>\n\n<p>This assumes you know the size of your string, meaning your function should also take the number of characters as argument.</p>\n\n<p>The <a href=\"https://doc.rust-lang.org/std/os/windows/ffi/trait.OsStringExt.html#tymethod.from_wide\" rel=\"nofollow noreferrer\"><code>from_wide</code></a> method should be the one needed to convert from a native format:</p>\n\n<pre><code>use std::ffi::OsString;\nuse std::os::windows::prelude::*;\n\n// UTF-16 encoding for \"Unicode\".\nlet arr = [0x0055, 0x006E, 0x0069, 0x0063, 0x006F, 0x0064, 0x0065];\n\nlet string = OsString::from_wide(&amp;arr[..]);\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1517592027, "post_id": 48587463, "comment_id": 84172687, "body": "Might be worth using something that cannot be represented in ASCII as <code>w</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517592205, "post_id": 48587463, "comment_id": 84172783, "body": "@Shepmaster Why?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517592277, "post_id": 48587463, "comment_id": 84172821, "body": "There&#39;s plenty of code that &quot;works&quot; until you give it something unexpected. For example, I don&#39;t know how this code handles UTF-16 surrogate pairs."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517592746, "post_id": 48587463, "comment_id": 84173075, "body": "@Shepmaster That is the <code>String::from_utf16</code>&#39;s business."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517592950, "post_id": 48587463, "comment_id": 84173185, "body": "@Shepmaster And my &quot;strlen&quot; is ok: <a href=\"https://msdn.microsoft.com/en-us/library/69ze775t.aspx#Anchor_1\" rel=\"nofollow noreferrer\">msdn.microsoft.com/en-us/library/69ze775t.aspx#Anchor_1</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517593037, "post_id": 48587463, "comment_id": 84173227, "body": "@trentcl <a href=\"https://stackoverflow.com/questions/48586816/converting-raw-pointer-to-16-bit-unicode-character-to-file-path-in-rust/48587463?noredirect=1#comment84173018_48587087\">explains the issue</a> well. (maybe that&#39;s different, actually)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1517593297, "post_id": 48587463, "comment_id": 84173352, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/164422/discussion-between-boiethios-and-shepmaster\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 5, "last_activity_date": 1517600969, "last_edit_date": 1517600969, "creation_date": 1517590711, "answer_id": 48587463, "question_id": 48586816, "link": "https://stackoverflow.com/questions/48586816/converting-raw-pointer-to-16-bit-unicode-character-to-file-path-in-rust/48587463#48587463", "title": "Converting raw pointer to 16-bit Unicode character to file path in Rust", "body": "<p>Here is some example code:</p>\n\n<pre><code>use std::ffi::OsString;\nuse std::os::windows::prelude::*;\n\nunsafe fn u16_ptr_to_string(ptr: *const u16) -&gt; OsString {\n    let len = (0..).take_while(|&amp;i| *ptr.offset(i) != 0).count();\n    let slice = std::slice::from_raw_parts(ptr, len);\n\n    OsString::from_wide(slice)\n}\n\n// main example\nfn main() {\n    let buf = vec![97_u16, 98, 99, 100, 101, 102, 0];\n    let ptr = buf.as_ptr(); // raw pointer\n\n    let string = unsafe { u16_ptr_to_string(ptr) };\n\n    println!(\"{:?}\", string);\n}\n</code></pre>\n\n<p>In <code>u16_ptr_to_string</code>, you do 3 things:</p>\n\n<ul>\n<li>get the length of the string by counting the non-zero characters using <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.offset\" rel=\"nofollow noreferrer\"><code>offset</code></a> (unsafe)</li>\n<li>create a slice using <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts.html\" rel=\"nofollow noreferrer\"><code>from_raw_parts</code></a> (unsafe)</li>\n<li>transform this <code>&amp;[u16]</code> into an <code>OsString</code> with <a href=\"https://doc.rust-lang.org/std/os/windows/ffi/trait.OsStringExt.html#tymethod.from_wide\" rel=\"nofollow noreferrer\"><code>from_wide</code></a></li>\n</ul>\n\n<p>It is better to use <a href=\"https://docs.rs/libc/0.2.36/libc/type.wchar_t.html\" rel=\"nofollow noreferrer\"><code>wchar_t</code></a> and <a href=\"https://docs.rs/libc/0.2.36/libc/fn.wcslen.html\" rel=\"nofollow noreferrer\"><code>wcslen</code></a> from the libc crate and use another crate for conversion. This is maybe a bad idea to reimplement something that is already maintained in a crate.</p>\n"}], "owner": {"reputation": 107, "user_id": 5841863, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c58b6c8f27176a5bacd36542808e55b0?s=128&d=identicon&r=PG&f=1", "display_name": "watts", "link": "https://stackoverflow.com/users/5841863/watts"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 916, "favorite_count": 0, "accepted_answer_id": 48587463, "answer_count": 2, "score": 4, "last_activity_date": 1517600969, "creation_date": 1517588481, "last_edit_date": 1517590684, "question_id": 48586816, "link": "https://stackoverflow.com/questions/48586816/converting-raw-pointer-to-16-bit-unicode-character-to-file-path-in-rust", "title": "Converting raw pointer to 16-bit Unicode character to file path in Rust", "body": "<p>I'm replacing a DLL written in C++ with one written in Rust.\nCurrently the function in the DLL is called as follows:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>BOOL calledFunction(wchar_t* pFileName)\n</code></pre>\n\n<p>I believe that in this context <code>wchar_t</code> is a 16-bit Unicode character, so I chose to expose the following function in my Rust DLL:</p>\n\n<pre><code>pub fn calledFunction(pFileName: *const u16)\n</code></pre>\n\n<p>What would be the best way to convert that raw pointer to something I could actually use to open the file from the Rust DLL?</p>\n"}, {"tags": ["database", "rust", "master-slave", "rust-rocket"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 2, "creation_date": 1517591160, "post_id": 48585818, "comment_id": 84172226, "body": "There&#39;s nothing to say you have to have a separate guard for every single  connection - instead of defining a type alias for your managed state, define it as a struct that contains all 25 of your pools. Then have your request guard return that instead."}, {"owner": {"reputation": 28990, "user_id": 1114966, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/af8712b05e5cfb862323a07c83749054?s=128&d=identicon&r=PG", "display_name": "squiguy", "link": "https://stackoverflow.com/users/1114966/squiguy"}, "edited": false, "score": 1, "creation_date": 1517599707, "post_id": 48585818, "comment_id": 84176324, "body": "Isn&#39;t this sort of abstraction usually handled at the DB level?"}, {"owner": {"reputation": 125, "user_id": 9014107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56645781f18f8b0289b6627b5ecb3dd0?s=128&d=identicon&r=PG&f=1", "display_name": "navin", "link": "https://stackoverflow.com/users/9014107/navin"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1517904527, "post_id": 48585818, "comment_id": 84272707, "body": "@JoeClay Thinking to do the same."}], "owner": {"reputation": 125, "user_id": 9014107, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56645781f18f8b0289b6627b5ecb3dd0?s=128&d=identicon&r=PG&f=1", "display_name": "navin", "link": "https://stackoverflow.com/users/9014107/navin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 93, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1517586021, "creation_date": 1517585079, "last_edit_date": 1517586021, "question_id": 48585818, "link": "https://stackoverflow.com/questions/48585818/handling-master-slave-database-configuration-in-rocket", "title": "Handling master/slave database configuration in Rocket", "body": "<p>Rocket provides a way to <a href=\"https://rocket.rs/guide/state/#databases\" rel=\"nofollow noreferrer\">inject a database pool using guards</a>, but I want to have a master/slave structure: 1 master for writing and 4 slaves for reading, with slaves selected at random.</p>\n\n<p>I guess my routes function will look like</p>\n\n<pre><code>fn register_user_handler(\n    conn: DbConnMaster,\n    conn1: DbConnSlave1,\n    conn2: DbConnSlave2,\n    // ...\n) {}\n</code></pre>\n\n<p>I have 5 such databases with a master/slave configuration, so around 25 connection pools. Specifying all those connections as guards in a handler seems verbose.</p>\n\n<p>Is there a better way to keep those connection pool and use it across my application safely?</p>\n"}, {"tags": ["testing", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 1, "creation_date": 1517582928, "post_id": 48583049, "comment_id": 84166977, "body": "Have you tried just using <code>#[cfg(feature = &quot;online_tests&quot;)]</code> on the respective tests?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1699, "user_id": 783825, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/cce2622c5ccd49a3cbf2007491ab1075?s=128&d=identicon&r=PG", "display_name": "Neikos", "link": "https://stackoverflow.com/users/783825/neikos"}, "edited": false, "score": 1, "creation_date": 1517585799, "post_id": 48583049, "comment_id": 84168909, "body": "@Neikos the downside to that is that the tests won&#39;t even be compiled. If there was some compilation error, you wouldn&#39;t see it until those features were enabled. Also, you won&#39;t see that there are ignored tests in the test output, potentially reminding you to enable them."}, {"owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "edited": false, "score": 0, "creation_date": 1517585986, "post_id": 48583049, "comment_id": 84169013, "body": "I understand that they need #[test] also and if I did that I understand that &quot;cargo test&quot; would run them no? And that&#39;s not what I want."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1571146556, "last_edit_date": 1571146556, "creation_date": 1517585594, "answer_id": 48585979, "question_id": 48583049, "link": "https://stackoverflow.com/questions/48583049/run-additional-tests-by-using-a-feature-flag-to-cargo-test/48585979#48585979", "title": "Run additional tests by using a feature flag to &quot;cargo test&quot;", "body": "<h2>Without a workspace</h2>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"feature-tests\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[features]\nnetwork = []\nfilesystem = []\n\n[dependencies]\n</code></pre>\n\n<p><strong>src/lib.rs</strong></p>\n\n<pre><code>#[test]\n#[cfg_attr(not(feature = \"network\"), ignore)]\nfn network() {\n    panic!(\"Touched the network\");\n}\n\n#[test]\n#[cfg_attr(not(feature = \"filesystem\"), ignore)]\nfn filesystem() {\n    panic!(\"Touched the filesystem\");\n}\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test\n\nrunning 2 tests\ntest filesystem ... ignored\ntest network ... ignored\n\n$ cargo test --features network\n\nrunning 2 tests\ntest filesystem ... ignored\ntest network ... FAILED\n\n$ cargo test --features filesystem\n\nrunning 2 tests\ntest network ... ignored\ntest filesystem ... FAILED\n</code></pre>\n\n<p>(some output removed to better show effects)</p>\n\n<h2>With a workspace</h2>\n\n<p><strong>Layout</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 feature-tests\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Cargo.toml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 lib.rs\n</code></pre>\n\n<p><code>feature-tests</code> contains the files from the first section above.</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"workspace\"\nversion = \"0.1.0\"\nauthors = [\"An Devloper &lt;an.devloper@example.com&gt;\"]\n\n[features]\nfilesystem = [\"feature-tests/filesystem\"]\nnetwork = [\"feature-tests/network\"]\n\n[workspace]\n\n[dependencies]\nfeature-tests = { path = \"feature-tests\" }\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test --all\n\nrunning 2 tests\ntest filesystem ... ignored\ntest network ... ignored\n\n$ cargo test --all --features=network\n\nrunning 2 tests\ntest filesystem ... ignored\ntest network ... FAILED\n</code></pre>\n\n<p>(some output removed to better show effects)</p>\n\n<h2>With a workspace with a virtual manifest</h2>\n\n<p><a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#virtual-manifest\" rel=\"noreferrer\">Virtual manifests</a> do <a href=\"https://github.com/rust-lang/cargo/issues/4942\" rel=\"noreferrer\">not support specifying features (Cargo issue #4942)</a>. You will need to run the tests from within the sub project or specify the path to the appropriate Cargo.toml</p>\n\n<p><strong>Layout</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>.\n\u251c\u2500\u2500 Cargo.toml\n\u2514\u2500\u2500 feature-tests\n    \u251c\u2500\u2500 Cargo.toml\n    \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 lib.rs\n</code></pre>\n\n<p><code>feature-tests</code> contains the files from the first section above.</p>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[workspace]\nmembers = [\"feature-tests\"]\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo test --all --manifest-path feature-tests/Cargo.toml --features=network \n\nrunning 2 tests\ntest filesystem ... ignored\ntest network ... FAILED\n\n$ cargo test --all --manifest-path feature-tests/Cargo.toml\n\nrunning 2 tests\ntest filesystem ... ignored\ntest network ... ignored\n</code></pre>\n\n<p>(some output removed to better show effects)</p>\n"}], "owner": {"reputation": 5005, "user_id": 573149, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/Wn0FW.jpg?s=128&g=1", "display_name": "Andrew Mackenzie", "link": "https://stackoverflow.com/users/573149/andrew-mackenzie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1855, "favorite_count": 1, "accepted_answer_id": 48585979, "answer_count": 1, "score": 14, "last_activity_date": 1571146556, "creation_date": 1517575613, "last_edit_date": 1517585165, "question_id": 48583049, "link": "https://stackoverflow.com/questions/48583049/run-additional-tests-by-using-a-feature-flag-to-cargo-test", "title": "Run additional tests by using a feature flag to &quot;cargo test&quot;", "body": "<p>I have some tests that I would like to ignore when using <code>cargo test</code> and only run when explicitly passed a feature flag. I know this can be done by using <code>#[ignore]</code> and <code>cargo test -- --ignored</code>, but I'd like to have multiple sets of ignored tests for other reasons.</p>\n\n<p>I have tried this:</p>\n\n<pre><code>#[test]\n#[cfg_attr(not(feature = \"online_tests\"), ignore)]\nfn get_github_sample() {}\n</code></pre>\n\n<p>This is ignored when I run <code>cargo test</code> as desired, but I can't get it to run.</p>\n\n<p>I have tried multiple ways of running Cargo but the tests continue to be ignored:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>cargo test --features \"online_tests\"\n\ncargo test --all-features\n</code></pre>\n\n<p>I then added the feature definition into my <code>Cargo.toml</code> as per <a href=\"https://doc.rust-lang.org/1.12.0/book/conditional-compilation.html\" rel=\"noreferrer\">this page</a>, but they continue to be ignored.</p>\n\n<p>I am using workspaces in Cargo. I tried adding the feature definition in both <code>Cargo.toml</code> files with no difference.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1517562842, "post_id": 48575866, "comment_id": 84154714, "body": "This seems to be a useful thing. Maybe you should propose a RFC."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1517572294, "post_id": 48575866, "comment_id": 84160498, "body": "@Boiethios: I think that the general solution here should use a cursor-API, rather than an iterator-based API."}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1517562859, "post_id": 48578317, "comment_id": 84154729, "body": "Creative solution :&#39;D"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 2, "last_activity_date": 1517558834, "creation_date": 1517558834, "answer_id": 48578317, "question_id": 48575866, "link": "https://stackoverflow.com/questions/48575866/how-to-get-the-lower-bound-and-upper-bound-of-an-element-in-a-btreeset/48578317#48578317", "title": "How to get the lower bound and upper bound of an element in a BTreeSet?", "body": "<p>Well... if you don't mind modifying the current collection and taking a performance hit... it appears that you can use <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.split_off\" rel=\"nofollow noreferrer\"><code>split_off</code></a> creatively.</p>\n\n<pre><code>let mut tree = BTreeSet::new();\ntree.insert(1);\ntree.insert(3);\ntree.insert(5);\n\nlet other = tree.split_off(&amp;2);\n\nprintln!(\"{:?}\", tree);\nprintln!(\"{:?}\", other);\n</code></pre>\n\n<p>Will print <code>{1}</code> and <code>{3, 5}</code>:</p>\n\n<ul>\n<li>the lower-bound is the first element of the second range,</li>\n<li>the upper-bound is the first element of the second range if not equal, and the second otherwise.</li>\n</ul>\n\n<p>Once you are done, you can reassemble the tree using <code>tree.append(other)</code>.</p>\n\n<hr>\n\n<p><em>And yes, it's really less than ideal...</em></p>\n"}, {"comments": [{"owner": {"reputation": 609, "user_id": 3673043, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/5b9edc66864a60b8f10d2e173e1e80fc?s=128&d=identicon&r=PG", "display_name": "suyash", "link": "https://stackoverflow.com/users/3673043/suyash"}, "edited": false, "score": 0, "creation_date": 1517637842, "post_id": 48579804, "comment_id": 84185980, "body": "For native rust it works, but my use case is wasm, and I&#39;d have liked it to be a part of core since it is relatively simple to implement if you are already implementing logarithmic search. I&#39;ll look into the RFC process."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 2, "last_activity_date": 1517564534, "creation_date": 1517564534, "answer_id": 48579804, "question_id": 48575866, "link": "https://stackoverflow.com/questions/48575866/how-to-get-the-lower-bound-and-upper-bound-of-an-element-in-a-btreeset/48579804#48579804", "title": "How to get the lower bound and upper bound of an element in a BTreeSet?", "body": "<p>If you can change your data structure, you can use <a href=\"https://crates.io/crates/intrusive-collections\" rel=\"nofollow noreferrer\">intrusive collections</a>.</p>\n\n<p>You have the desired methods:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/intrusive-collections/0.7.0/intrusive_collections/rbtree/struct.RBTree.html#method.lower_bound\" rel=\"nofollow noreferrer\"><code>RBTree::lower_bound</code></a></li>\n<li><a href=\"https://docs.rs/intrusive-collections/0.7.0/intrusive_collections/rbtree/struct.RBTree.html#method.upper_bound\" rel=\"nofollow noreferrer\"><code>RBTree::upper_bound</code></a></li>\n</ul>\n"}, {"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1526366159, "post_id": 50341316, "comment_id": 87703232, "body": "Note: searching from the start node twice is not necessarily that bad; the complexity is O(N log N) no matter where you start for arbitrary ranges."}, {"owner": {"reputation": 18645, "user_id": 50385, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/2faf0c72f6a7f65431e7df489878be24?s=128&d=identicon&r=PG", "display_name": "Joseph Garvin", "link": "https://stackoverflow.com/users/50385/joseph-garvin"}, "edited": false, "score": 0, "creation_date": 1613844041, "post_id": 50341316, "comment_id": 117204026, "body": "The documentation for this is confusing because you can&#39;t tell at a glance if the numbers are indexes or actual items in the container because all of the examples use T=i32, and the way most users are familiar with constructing Range objects is for indexes :P"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 7, "last_activity_date": 1526351383, "last_edit_date": 1526351383, "creation_date": 1526349845, "answer_id": 50341316, "question_id": 48575866, "link": "https://stackoverflow.com/questions/48575866/how-to-get-the-lower-bound-and-upper-bound-of-an-element-in-a-btreeset/50341316#50341316", "title": "How to get the lower bound and upper bound of an element in a BTreeSet?", "body": "<blockquote>\n  <p>but what if I don't know the range</p>\n</blockquote>\n\n<p>Then use an unbounded range:</p>\n\n<pre><code>use std::collections::BTreeSet;\n\nfn neighbors(tree: &amp;BTreeSet&lt;i32&gt;, val: i32) -&gt; (Option&lt;&amp;i32&gt;, Option&lt;&amp;i32&gt;) {\n    use std::ops::Bound::*;\n\n    let mut before = tree.range((Unbounded, Excluded(val)));\n    let mut after = tree.range((Excluded(val), Unbounded));\n\n    (before.next_back(), after.next())\n}\n\nfn main() {\n    let tree: BTreeSet&lt;_&gt; = [1, 3, 5].iter().cloned().collect();\n\n    let (prev, next) = neighbors(&amp;tree, 2);\n\n    println!(\"greatest less than 2: {:?}\", prev);\n    println!(\"least bigger than 2:  {:?}\", next);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>greatest less than 2: Some(1)\nleast bigger than 2:  Some(3)\n</code></pre>\n\n<p><a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.range\" rel=\"noreferrer\"><code>BTreeSet::range</code></a> returns a double-ended iterator, so you can pull from either side of it.</p>\n\n<p>Note that we are using the very explicit <a href=\"https://doc.rust-lang.org/std/ops/enum.Bound.html\" rel=\"noreferrer\"><code>Bound</code></a> operator so that we do not include the value we are looking around.</p>\n\n<hr>\n\n<p>There have been discussions about enhancing <code>BTreeMap</code> / <code>BTreeSet</code> to have a \"cursor\" API that might allow you to find an element and then \"move around\" inside the tree. This would allow you to avoid searching through the tree to find the start node twice, but it has not been implemented.</p>\n\n<p><a href=\"https://github.com/rust-lang/rust/pull/47228\" rel=\"noreferrer\">A pull request was opened to do so</a>, but it was closed because it was deemed that there should be more discussion about how such an API should look and work.</p>\n"}], "owner": {"reputation": 609, "user_id": 3673043, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/5b9edc66864a60b8f10d2e173e1e80fc?s=128&d=identicon&r=PG", "display_name": "suyash", "link": "https://stackoverflow.com/users/3673043/suyash"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1465, "favorite_count": 1, "answer_count": 3, "score": 8, "last_activity_date": 1526351383, "creation_date": 1517546929, "last_edit_date": 1526350267, "question_id": 48575866, "link": "https://stackoverflow.com/questions/48575866/how-to-get-the-lower-bound-and-upper-bound-of-an-element-in-a-btreeset", "title": "How to get the lower bound and upper bound of an element in a BTreeSet?", "body": "<p>Reading the <code>BTreeSet</code> documentation, I can't seem to figure out how to get the least value greater than, or greatest value less than an element from a <code>BTreeSet</code> in logarithmic time. </p>\n\n<p>I see there is a <a href=\"https://doc.rust-lang.org/std/collections/struct.BTreeSet.html#method.range\" rel=\"noreferrer\"><code>range</code></a> method that can give the values in an arbitrary (min, max) range, but what if I don't know the range and I just want the previous and/or the next element in logarithmic time? </p>\n\n<p>This would be similar to <code>lower_bound</code> and <code>upper_bound</code> in <code>std::set</code> in C++.</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "edited": false, "score": 0, "creation_date": 1517527110, "post_id": 48573070, "comment_id": 84143487, "body": "<code>hyper::Client</code> does not have a post method! See: <a href=\"https://docs.rs/hyper/0.11.16/hyper/client/struct.Client.html#impl-2\" rel=\"nofollow noreferrer\">docs.rs/hyper/0.11.16/hyper/client/struct.Client.html#impl-2</a>&zwnj;&#8203;. It only has <code>get()</code> and <code>request()</code>. <code>client.request(Request::new(Method::Post, uri))</code> is appropriate."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "edited": false, "score": 0, "creation_date": 1517564594, "post_id": 48573070, "comment_id": 84155808, "body": "@daboross Looks like this is an answer. You should post it as an answer, not a comment."}, {"owner": {"reputation": 608, "user_id": 1907543, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7597ff99ee5f0704208709c3d17d9f33?s=128&d=identicon&r=PG", "display_name": "daboross", "link": "https://stackoverflow.com/users/1907543/daboross"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1518076440, "post_id": 48573070, "comment_id": 84357562, "body": "@Boiethios I would, but it&#39;s largely redundant with Shepmaster&#39;s answer now."}], "answers": [{"comments": [{"owner": {"reputation": 1732, "user_id": 728363, "user_type": "registered", "accept_rate": 31, "profile_image": "https://i.stack.imgur.com/KUTag.jpg?s=128&g=1", "display_name": "Steve3p0", "link": "https://stackoverflow.com/users/728363/steve3p0"}, "edited": false, "score": 0, "creation_date": 1534502347, "post_id": 48573324, "comment_id": 90737804, "body": "I have been unable implement POST using that Advanced Client Usage guide.  Out of nowhere it states: &quot;Remember, the work in post won\u2019t actually do anything until we give the future to the core.&quot;"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 1732, "user_id": 728363, "user_type": "registered", "accept_rate": 31, "profile_image": "https://i.stack.imgur.com/KUTag.jpg?s=128&g=1", "display_name": "Steve3p0", "link": "https://stackoverflow.com/users/728363/steve3p0"}, "edited": false, "score": 0, "creation_date": 1534509897, "post_id": 48573324, "comment_id": 90742040, "body": "@SteveB make sure you read preceding guides as well; presumably and <i>advanced</i> guide builds on simpler guides that come before it. Also note that this Q&amp;A is about Hyper 0.11 while the current version of Hyper is 0.12, which is greatly changed to accommodate futures."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1517528507, "last_edit_date": 1517528507, "creation_date": 1517527026, "answer_id": 48573324, "question_id": 48573070, "link": "https://stackoverflow.com/questions/48573070/no-method-named-post-found-for-type-hyperclient-in-hyper-0-11/48573324#48573324", "title": "No method named `post` found for type `hyper::Client` in Hyper 0.11", "body": "<p>There's no secret trickery to the error message. You are getting the error \"no method named <code>post</code> found for type <code>hyper::Client</code>\" <em>because there's no such method</em>.</p>\n\n<p>If you review the documentation for <a href=\"https://docs.rs/hyper/0.11.16/hyper/client/struct.Client.html\" rel=\"nofollow noreferrer\"><code>Client</code></a>, you can see all the methods it has. None of them are <code>post</code>.</p>\n\n<p>Instead, you need to use <code>Client::request</code> and pass in a <a href=\"https://docs.rs/hyper/0.11.16/hyper/struct.Request.html\" rel=\"nofollow noreferrer\"><code>Request</code></a> value. The constructor for <code>Request</code> accepts a <a href=\"https://docs.rs/hyper/0.11.16/hyper/enum.Method.html\" rel=\"nofollow noreferrer\"><code>Method</code></a> which denotes the HTTP method to use.</p>\n\n<pre><code>use hyper::{Client, Request, Method};\n\nfn main() {\n    // ...\n\n    let uri = \"http://httpbin.org/ip\".parse().unwrap();\n    let req = Request::new(Method::Post, uri);\n\n    let work = client.request(req).and_then(|res| {\n        // ...\n    });\n}\n</code></pre>\n\n<p>The <a href=\"https://docs.rs/hyper/0.11.16/hyper/index.html\" rel=\"nofollow noreferrer\">crate documentation</a> says:</p>\n\n<blockquote>\n  <p>If just starting out, <strong>check out the <a href=\"https://hyper.rs/guides/\" rel=\"nofollow noreferrer\">Guides</a> first</strong>.</p>\n</blockquote>\n\n<p>There is a guide for exactly your case: <a href=\"https://hyper.rs/guides/client/advanced/\" rel=\"nofollow noreferrer\">Advanced Client Usage</a>.</p>\n"}], "owner": {"reputation": 47, "user_id": 3630178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7e9f52a8a0a712df5a5587fb5a53401?s=128&d=identicon&r=PG&f=1", "display_name": "Johnny Marcove", "link": "https://stackoverflow.com/users/3630178/johnny-marcove"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 889, "favorite_count": 0, "accepted_answer_id": 48573324, "answer_count": 1, "score": 0, "last_activity_date": 1517586436, "creation_date": 1517525629, "last_edit_date": 1517586436, "question_id": 48573070, "link": "https://stackoverflow.com/questions/48573070/no-method-named-post-found-for-type-hyperclient-in-hyper-0-11", "title": "No method named `post` found for type `hyper::Client` in Hyper 0.11", "body": "<p>I want use to Hyper for crafting HTTP requests. Calling <code>Client::get</code> works fine but other methods such as <code>Client::post</code> and <code>Client::head</code> cause an compilation error.</p>\n\n<pre><code>extern crate futures;\nextern crate hyper;\nextern crate tokio_core;\n\nuse std::io::{self, Write};\nuse futures::{Future, Stream};\nuse hyper::Client;\nuse tokio_core::reactor::Core;\n\nfn main() {\n    let mut core = Core::new().unwrap();\n    let client = Client::new(&amp;core.handle());\n\n    let uri = \"http://httpbin.org/ip\".parse().unwrap();\n    let work = client.post(uri).and_then(|res| {\n        // if post changed to get it will work correctly\n        println!(\"Response: {}\", res.status());\n\n        res.body(\"x=z\")\n            .for_each(|chunk| io::stdout().write_all(&amp;chunk).map_err(From::from))\n    });\n    core.run(work).unwrap();\n}\n</code></pre>\n\n<p>error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `post` found for type `hyper::Client&lt;hyper::client::HttpConnector&gt;` in the current scope\n  --&gt; src/main.rs:15:23\n   |\n15 |     let work = client.post(uri).and_then(|res| {\n   |                       ^^^^\n\nerror[E0277]: the trait bound `[u8]: std::marker::Sized` is not satisfied\n  --&gt; src/main.rs:20:24\n   |\n20 |             .for_each(|chunk| io::stdout().write_all(&amp;chunk).map_err(From::from))\n   |                        ^^^^^ `[u8]` does not have a constant size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `[u8]`\n   = note: all local variables must have a statically known size\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 3, "creation_date": 1517510306, "post_id": 48568321, "comment_id": 84135482, "body": "If you&#39;re ok with a non-Rust answer and are in a Unix-y environment, the <code>tee</code> utility is probably what you&#39;re looking for."}, {"owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "reply_to_user": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1517514446, "post_id": 48568321, "comment_id": 84137643, "body": "Yes it would be except I have no way of accessing the console when the gui calls my program so I can&#39;t pass any commands in there:/"}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1517518329, "post_id": 48568321, "comment_id": 84139686, "body": "You could probably modify your gui to call <code>tee</code> itself but without knowing how you&#39;re invoking the program, it&#39;s hard to give you a concrete answer."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1517518404, "post_id": 48568321, "comment_id": 84139720, "body": "But you could write a tiny script that wraps your program and just clones stdin and stdout. Then have the GUI call the script instead. <a href=\"https://stackoverflow.com/questions/18812098/piping-an-interactive-session-to-a-file\">This Q&amp;A may help you write such a script.</a>"}, {"owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "edited": false, "score": 1, "creation_date": 1517518731, "post_id": 48568321, "comment_id": 84139886, "body": "Sadly I didn&#39;t write the gui so can&#39;t edit it.  The second answer sounds plausible, but i have already resolved it in the meanwhile by redefining println! and panic! to log as well as do what they normally do; catching stdin is quite easy since obviously Im reading it at some point in the program.  Thanks a lot for your help guys, I&#39;m still curious if there is a better way of doing things."}], "owner": {"reputation": 706, "user_id": 7595633, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/084d26f8f90cdf209f682e0c31d999e5?s=128&d=identicon&r=PG&f=1", "display_name": "SquattingSlavInTracksuit", "link": "https://stackoverflow.com/users/7595633/squattingslavintracksuit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1517506301, "creation_date": 1517505382, "last_edit_date": 1517506301, "question_id": 48568321, "link": "https://stackoverflow.com/questions/48568321/is-there-a-way-i-can-log-all-stdin-and-stdout-to-a-file-while-while-not-influenc", "title": "Is there a way I can log all stdin and stdout to a file while while not influencing it?", "body": "<p>I'm writing a Rust program which uses a <a href=\"http://wbec-ridderkerk.nl/html/UCIProtocol.html\" rel=\"nofollow noreferrer\">protocol</a> to communicate with a GUI via stdin and stdout. For debug purposes, I want to be able to see what the communication is, however, the GUI is a completely separate program that doesn't give me access to the console.</p>\n\n<p>The only solution I thought of would be to log everything that comes to stdin/stdout manually in the program, however that's not ideal since I might easily miss something that should be logged (esp. with prints).</p>\n"}, {"tags": ["rust", "gfx"], "answers": [{"tags": [], "owner": {"reputation": 31, "user_id": 4234500, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e0df394a907b8c4ed8f2c4b4d6ced299?s=128&d=identicon&r=PG&f=1", "display_name": "Smasher816", "link": "https://stackoverflow.com/users/4234500/smasher816"}, "is_accepted": false, "score": 1, "last_activity_date": 1528341069, "creation_date": 1528341069, "answer_id": 50732403, "question_id": 48565051, "link": "https://stackoverflow.com/questions/48565051/gfx-rs-assertion-failure-when-trying-to-draw-to-a-texture-render-target/50732403#50732403", "title": "gfx-rs assertion failure when trying to draw to a texture render target", "body": "<p>The dimension is more than just a width and height, it also includes a depth. See <a href=\"https://docs.rs/gfx/0.17.1/gfx/handle/struct.DepthStencilView.html#method.get_dimensions\" rel=\"nofollow noreferrer\">https://docs.rs/gfx/0.17.1/gfx/handle/struct.DepthStencilView.html#method.get_dimensions</a>. This must also be the same between the texture and target.</p>\n\n<p>For reference, I hit the same assert in my code when using gfx_glpyh's draw_queued function. The function has the following signature</p>\n\n<pre><code>pub fn draw_queued&lt;C, T, D&gt;(\n    &amp;mut self, \n    encoder: &amp;mut Encoder&lt;R, C&gt;, \n    target: &amp;RenderTargetView&lt;R, T&gt;, \n    depth_target: &amp;DepthStencilView&lt;R, D&gt;\n) -&gt; Result&lt;(), String&gt; \n</code></pre>\n\n<p>The issue in my case was the render target (texture) had a depth of 0, but the depth_target (from my screen) had a depth of 1. To fix the issue I added the following to my pipeline definition</p>\n\n<pre><code>depth: gfx::DepthTarget&lt;Depth&gt; = gfx::preset::depth::PASS_TEST,\n</code></pre>\n\n<p>and created the following in my initialization passed to ::Data</p>\n\n<pre><code>let _depth = renderer.factory.create_depth_stencil_view_only(w as u16, h as u16).unwrap();\n</code></pre>\n\n<p>Using this depth instead of the one from gfx_window_glutin::init fixed the crash. I hope this guides you to a similar solution.</p>\n"}], "owner": {"reputation": 761, "user_id": 353478, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9c416ca500d3cf73fa70d31318ee9aef?s=128&d=identicon&r=PG", "display_name": "larvyde", "link": "https://stackoverflow.com/users/353478/larvyde"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 258, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1528341069, "creation_date": 1517495221, "last_edit_date": 1517496359, "question_id": 48565051, "link": "https://stackoverflow.com/questions/48565051/gfx-rs-assertion-failure-when-trying-to-draw-to-a-texture-render-target", "title": "gfx-rs assertion failure when trying to draw to a texture render target", "body": "<p>I'm trying to draw to an offscreen render target</p>\n\n<pre><code>type ColorFormat = gfx::format::Rgba8;\n\ngfx_defines! {\n    pipeline terrain {\n        // snip vbuffer / uniforms\n        out: gfx::RenderTarget&lt;ColorFormat&gt; = \"f_color\",\n        selection: gfx::RenderTarget&lt;ColorFormat&gt; = \"f_selection\",\n    }\n}\n</code></pre>\n\n<p>with a texture render target set to the same size as my window</p>\n\n<pre><code>let builder = glutin::WindowBuilder::new()\n    .with_dimensions(1024, 768);\n\nlet (_, _, selection_target) = factory.create_render_target(1024, 768).unwrap();\n\nlet mut pd_terrain = terrain::Data {\n    // snip\n    out: color_view.clone(),\n    selection: selection_target.clone(),\n};\n</code></pre>\n\n<p>The code compiles fine, but at runtime I get a panic message that says something about dimensions</p>\n\n<pre><code>thread 'main' panicked at 'assertion failed: self.dimensions.map(|d| d == dim).unwrap_or(true)', /home/larvyde/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.8.2/src/pso.rs:293:8\n</code></pre>\n\n<p>The code works if I leave the selection target out of the pipeline.</p>\n\n<p>My understanding is that it's complaining that the selection render target's dimensions don't match the color buffer's, but since both are set to the window dimensions, they should have been the same. So what is wrong here? Am I missing an initialization step or is my problem something else entirely?</p>\n\n<p>EDIT: the libraries and versions I'm using are as follows</p>\n\n<pre><code>[dependencies]\ncgmath = \"0.16\"\ngfx = \"0.17\"\ngfx_window_glutin = \"0.20\"\nglutin = \"0.12\"\n</code></pre>\n\n<p>running with RUST_BACKTRACE=1 gives this:</p>\n\n<pre><code>   0: std::sys::imp::backtrace::tracing::imp::unwind_backtrace\n             at /checkout/src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49\n   1: std::sys_common::backtrace::_print\n             at /checkout/src/libstd/sys_common/backtrace.rs:69\n   2: std::panicking::default_hook::{{closure}}\n             at /checkout/src/libstd/sys_common/backtrace.rs:58\n             at /checkout/src/libstd/panicking.rs:381\n   3: std::panicking::default_hook\n             at /checkout/src/libstd/panicking.rs:397\n   4: std::panicking::rust_panic_with_hook\n             at /checkout/src/libstd/panicking.rs:577\n   5: std::panicking::begin_panic\n             at /checkout/src/libstd/panicking.rs:538\n   6: &lt;gfx_core::pso::PixelTargetSet&lt;R&gt;&gt;::set_dimensions\n             at ./&lt;panic macros&gt;:3\n   7: &lt;gfx_core::pso::PixelTargetSet&lt;R&gt;&gt;::add_color\n             at /home/larvyde/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx_core-0.8.2/src/pso.rs:274\n   8: &lt;gfx::pso::target::RenderTarget&lt;T&gt; as gfx::pso::DataBind&lt;R&gt;&gt;::bind_to\n             at /home/larvyde/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.17.1/src/pso/target.rs:130\n   9: &lt;thera::terrain::Data&lt;R&gt; as gfx::pso::PipelineData&lt;R&gt;&gt;::bake_to\n             at ./&lt;gfx_pipeline_inner macros&gt;:99\n  10: &lt;gfx::encoder::Encoder&lt;R, C&gt;&gt;::draw\n             at /home/larvyde/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-0.17.1/src/encoder.rs:537\n  11: thera::main\n             at src/main.rs:155\n  12: __rust_maybe_catch_panic\n             at /checkout/src/libpanic_unwind/lib.rs:99\n  13: std::rt::lang_start\n             at /checkout/src/libstd/panicking.rs:459\n             at /checkout/src/libstd/panic.rs:361\n             at /checkout/src/libstd/rt.rs:59\n  14: main\n  15: __libc_start_main\n  16: _start\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "serde", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 4594, "user_id": 1478356, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/996ee463b8f6b17a738f2e23f7ecfe9f?s=128&d=identicon&r=PG", "display_name": "Stefan", "link": "https://stackoverflow.com/users/1478356/stefan"}, "is_accepted": false, "score": 4, "last_activity_date": 1517494542, "last_edit_date": 1517494542, "creation_date": 1517486287, "answer_id": 48562213, "question_id": 48558605, "link": "https://stackoverflow.com/questions/48558605/deserialize-from-tokio-socket/48562213#48562213", "title": "Deserialize from tokio socket", "body": "<p><a href=\"https://docs.rs/bincode/0.9.2/bincode/fn.deserialize_from.html\" rel=\"nofollow noreferrer\"><code>deserialize_from</code></a> can't handle IO errors, especially not of the kind <a href=\"https://doc.rust-lang.org/std/io/enum.ErrorKind.html#variant.WouldBlock\" rel=\"nofollow noreferrer\"><code>WouldBlock</code></a> which is returned by async (non-blocking) <code>Read</code>ers when they are waiting for more data.  That is limited by the interface: <code>deserialize_from</code> doesn't return a <code>Future</code> or a partial state, it returns the full decoded <code>Result</code> and wouldn't know how to combine the <code>Read</code>er with an event loop to handle <code>WouldBlock</code> without busy looping.</p>\n\n<p>Theoretically, it is possible to implement an <code>async_deserialize_from</code>, but not by using the interfaces provided by <code>serde</code> unless you read the full data to decode in advance, which would defeat the purpose.</p>\n\n<p>You need to read the full data using <a href=\"https://docs.rs/tokio-io/0.1.4/tokio_io/io/fn.read_to_end.html\" rel=\"nofollow noreferrer\"><code>tokio_io::io::read_to_end</code></a> or <a href=\"https://docs.rs/tokio-io/0.1.4/tokio_io/io/fn.read_exact.html\" rel=\"nofollow noreferrer\"><code>tokio_io::io::read_exact</code></a> (what you're currently using), if you know the size of the encoded data in an \"endless\" stream (or in a stream followed by other data).</p>\n"}, {"tags": [], "owner": {"reputation": 138, "user_id": 10453819, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/50f2dec01ab3125d1d7a551fad5dff80?s=128&d=identicon&r=PG&f=1", "display_name": "effect", "link": "https://stackoverflow.com/users/10453819/effect"}, "is_accepted": false, "score": 0, "last_activity_date": 1560199513, "creation_date": 1560199513, "answer_id": 56533292, "question_id": 48558605, "link": "https://stackoverflow.com/questions/48558605/deserialize-from-tokio-socket/56533292#56533292", "title": "Deserialize from tokio socket", "body": "<p>Stefan's answer is correct, however you might be interested in looking at the tokio-serde-* family of crates which do this for you, specifically <a href=\"https://crates.io/crates/tokio-serde-bincode\" rel=\"nofollow noreferrer\">tokio-serde-bincode</a>. From the readme:</p>\n\n<blockquote>\n  <p>Utilities needed to easily implement a Tokio Bincode transport using serde for serialization and deserialization of frame values. Based on tokio-serde.</p>\n</blockquote>\n\n<p>The crate has several <a href=\"https://github.com/luben/tokio-serde-bincode/tree/master/examples\" rel=\"nofollow noreferrer\">examples</a> of how to use it.</p>\n"}], "owner": {"reputation": 2227, "user_id": 1037094, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/7949edc53b97713ab2030bffa38b3610?s=128&d=identicon&r=PG", "display_name": "Manuel Schmidt", "link": "https://stackoverflow.com/users/1037094/manuel-schmidt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1041, "favorite_count": 1, "answer_count": 2, "score": 3, "last_activity_date": 1560199513, "creation_date": 1517474923, "question_id": 48558605, "link": "https://stackoverflow.com/questions/48558605/deserialize-from-tokio-socket", "title": "Deserialize from tokio socket", "body": "<p>I am using tokio to implement a server which communicates with messages serialized with serde (bincode). Without asynchronous and futures I would do</p>\n\n<pre><code>extern crate tokio_io;\nextern crate bincode;\nextern crate serde;\nextern crate bytes;\nextern crate futures;\n#[macro_use] extern crate serde_derive;\n\nuse tokio_io::{AsyncRead, AsyncWrite};\nuse tokio_io::io::{read_exact, write_all};\nuse bincode::{serialize, deserialize, deserialize_from, Infinite, serialized_size};\nuse std::io::Read;\nuse std::io::Cursor;\nuse futures::future::Future;\n\ntype Item = String; // Dummy, this is a complex struct with derived Serizalize\ntype Error = bincode::Error;\n\n// This works\nfn decode&lt;R&gt;(reader: &amp;mut R) -&gt; Result&lt;Item, Error&gt; where R: Read {\n    let message: Item = deserialize_from(reader, Infinite)?;\n    Ok(message)\n}\n\nfn main() {\n\n    let ser = serialize(\"Test\", Infinite).unwrap();\n    let buf = Cursor::new(ser);\n\n    let mut reader = std::io::BufReader::new(buf);\n\n    println!(\"{:?}\", decode(&amp;mut reader))\n}\n</code></pre>\n\n<p>But what I need is a <code>decode</code> function which can work with an asyncronous socket as</p>\n\n<pre><code>// I need this since I get the reader from a (tokio) socket as\n// let socket = TcpListener::bind(&amp;addr, &amp;handle).unwrap();\n// let (reader, writer) = socket.split();\nfn decode_async&lt;R&gt;(reader: R) -&gt; Result&lt;Item, Error&gt; where R: AsyncRead {\n    // Does not work:   \n    let message: Item = deserialize_from(reader, Infinite)?;\n    Ok(message)\n}\n</code></pre>\n\n<p>The only idea I have is to manually write the length into the buffer during encoding and then use read_exact:</p>\n\n<pre><code>// Encode with size\nfn encode_async(item: &amp;Item) -&gt; Result&lt;Vec&lt;u8&gt;, Error&gt;{\n    let size = serialized_size(item);\n    let mut buf = serialize(&amp;size, Infinite).unwrap();\n    let ser = serialize(item, Infinite).unwrap();\n    buf.extend(ser);\n    Ok(buf)\n}\n\n// Decode with size\nfn decode_async&lt;R&gt;(reader: R) -&gt; Box&lt;Future&lt;Item = Item, Error = std::io::Error&gt;&gt;\n    where R: AsyncRead + 'static {\n\n    let read = read_exact(reader, vec![0u8; 8]).and_then(|(reader, buf)| {\n        let size = deserialize::&lt;u64&gt;(&amp;mut &amp;buf[..]).unwrap();\n        Ok((reader, size as usize))\n    }).and_then(|(reader, size)| {\n        read_exact(reader, vec![0u8; size])\n    }).and_then(|(reader, buf)| {\n        let item = deserialize(&amp;mut &amp;buf[..]).unwrap();\n        Ok(item)\n    });\n\n    Box::new(read)\n}\n\nfn main() {\n\n    let ser = encode_async(&amp;String::from(\"Test\")).unwrap();\n    let buf = Cursor::new(ser);\n\n    let mut reader = std::io::BufReader::new(buf);\n    let dec = decode_async(reader).wait();\n\n    println!(\"{:?}\", dec)\n}\n</code></pre>\n\n<p>Is there a better way to implement the decoding?</p>\n"}, {"tags": ["vim", "compiler-errors", "rust"], "comments": [{"owner": {"reputation": 1693, "user_id": 5731861, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iKaMT.png?s=128&g=1", "display_name": "Felipe Valdes", "link": "https://stackoverflow.com/users/5731861/felipe-valdes"}, "edited": false, "score": 0, "creation_date": 1561551768, "post_id": 48556938, "comment_id": 100100863, "body": "sometimes I get frustrated and lean over my VSCode friends..."}], "answers": [{"comments": [{"owner": {"reputation": 655, "user_id": 2494631, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DCC31.jpg?s=128&g=1", "display_name": "vijoc", "link": "https://stackoverflow.com/users/2494631/vijoc"}, "edited": false, "score": 5, "creation_date": 1517475430, "post_id": 48558314, "comment_id": 84113170, "body": "Please include more details in your answer than a link to a repository. In this instance, your <code>.vimrc</code> is 352 lines long, so including the relevant section in your answer would save a lot of effort for people looking for an answer."}, {"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 3, "creation_date": 1541866040, "post_id": 48558314, "comment_id": 93367261, "body": "It looks like this snippet turns on Syntastic for Rust, but I don&#39;t see how it helps with the original question of including the whole multi-line message?"}], "tags": [], "owner": {"reputation": 1119, "user_id": 193584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/58bf89ba2dfa037971b05d1afb0480a3?s=128&d=identicon&r=PG", "display_name": "xds2000", "link": "https://stackoverflow.com/users/193584/xds2000"}, "is_accepted": false, "score": 1, "last_activity_date": 1517493059, "last_edit_date": 1517493059, "creation_date": 1517473741, "answer_id": 48558314, "question_id": 48556938, "link": "https://stackoverflow.com/questions/48556938/how-can-i-show-multi-line-rust-error-messages-in-vim/48558314#48558314", "title": "How can I show multi-line Rust error messages in vim?", "body": "<p>you need correctly setting the Syntastic and rust bundle in vim.\nsee example in my vimrc(use Vundle):</p>\n\n<pre><code>\" vimrc\nPlugin 'vim-syntastic/syntastic'\nPlugin 'rust-lang/rust.vim'\nPlugin 'racer-rust/vim-racer'\nPlugin 'timonv/vim-cargo'\n\n\" Syntastic\nlet g:syntastic_error_symbol = 'EE'\nlet g:syntastic_style_error_symbol = 'E&gt;'\nlet g:syntastic_warning_symbol = 'WW'\nlet g:syntastic_style_warning_symbol = 'W&gt;'\n\nlet g:syntastic_auto_loc_list = 1\nlet g:syntastic_rust_checkers = ['cargo']\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5271, "user_id": 1658042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/879e79284efb4639584574a5fc46c9e4?s=128&d=identicon&r=PG", "display_name": "lcd047", "link": "https://stackoverflow.com/users/1658042/lcd047"}, "is_accepted": false, "score": 3, "last_activity_date": 1517504058, "last_edit_date": 1517504058, "creation_date": 1517502806, "answer_id": 48567535, "question_id": 48556938, "link": "https://stackoverflow.com/questions/48556938/how-can-i-show-multi-line-rust-error-messages-in-vim/48567535#48567535", "title": "How can I show multi-line Rust error messages in vim?", "body": "<p><code>quickfix</code> windows (actually, <code>loclist</code> windows in the case of syntastic) don't support multiline error messages.  This is a limitation of Vim.</p>\n\n<p>What you can do is convince the checker to merge multiline error messages to single lines before parsing them.  Syntastic provides hooks for doing that, but <code>cargo</code> is not a standard syntastic checker.  So perhaps <a href=\"https://github.com/rust-lang/rust.vim/issues\" rel=\"nofollow noreferrer\">contact</a> the authors of said checker and post a feature request.</p>\n"}, {"comments": [{"owner": {"reputation": 1693, "user_id": 5731861, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iKaMT.png?s=128&g=1", "display_name": "Felipe Valdes", "link": "https://stackoverflow.com/users/5731861/felipe-valdes"}, "edited": false, "score": 0, "creation_date": 1517709287, "post_id": 48574944, "comment_id": 84204541, "body": "I think syntastic opens the :copen error list automatically when I write the code, however, the error messages which have a type mismatch, usually take more than one line."}, {"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 0, "creation_date": 1541866154, "post_id": 48574944, "comment_id": 93367303, "body": "As far I can see Syntastic puts the errors in the &quot;location list&quot; (opened by <code>:lopen</code>) not the error list (opened by <code>:copen</code>), so this is irrelevant."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": -1, "last_activity_date": 1517539385, "creation_date": 1517539385, "answer_id": 48574944, "question_id": 48556938, "link": "https://stackoverflow.com/questions/48556938/how-can-i-show-multi-line-rust-error-messages-in-vim/48574944#48574944", "title": "How can I show multi-line Rust error messages in vim?", "body": "<p>Do you use <code>:copen</code>?  That's the standard way in vim to open a window with the compiler error messages.  <code>C-w C-w</code> toggles the cursor between windows.  <code>:cnext</code> (or just <code>:cn</code>) jumps to the next error message.</p>\n"}], "owner": {"reputation": 1693, "user_id": 5731861, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iKaMT.png?s=128&g=1", "display_name": "Felipe Valdes", "link": "https://stackoverflow.com/users/5731861/felipe-valdes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1047, "favorite_count": 0, "answer_count": 3, "score": 8, "last_activity_date": 1517539385, "creation_date": 1517468050, "last_edit_date": 1517494449, "question_id": 48556938, "link": "https://stackoverflow.com/questions/48556938/how-can-i-show-multi-line-rust-error-messages-in-vim", "title": "How can I show multi-line Rust error messages in vim?", "body": "<p>I use Syntastic and the error messages in vim usually only have one line, I find this information to be insufficient.</p>\n\n<p>Is there a compiler flag so the first line of the error is more meaningful, or so that I can see multiline errors in the quickfix window?\nI'm having to constantly go and <code>cargo build</code> the errors somewhere, which should be just a \"put mouse in cursor\" away, usually the error fits the space (I have a wide monitor).</p>\n\n<p>I'm using macOS.</p>\n"}]