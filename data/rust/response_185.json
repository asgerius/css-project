[{"tags": ["class", "rust"], "answers": [{"tags": [], "owner": {"reputation": 26934, "user_id": 8316315, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44d833a8a46fea39d7bfca1540ea9c07?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Weimer", "link": "https://stackoverflow.com/users/8316315/florian-weimer"}, "is_accepted": true, "score": 2, "last_activity_date": 1532559670, "last_edit_date": 1532559670, "creation_date": 1532558644, "answer_id": 51528666, "question_id": 51528599, "link": "https://stackoverflow.com/questions/51528599/can-a-class-interface-design-from-python-be-mirrored-in-rust/51528666#51528666", "title": "Can a class-interface design from Python be mirrored in Rust?", "body": "<p>In Rust, you would treat a type parameter as, well, a type parameter:</p>\n\n<pre><code>fn read_config_file&lt;P: AsRef&lt;Path&gt;, C: ConfigReader&gt;(p: P) -&gt; Result&lt;String, Error&gt; {\n    C::from_file(p)\n}\n</code></pre>\n\n<p>This limits the dynamisms of such constructs.</p>\n"}], "owner": {"reputation": 4020, "user_id": 388739, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/vqsVi.jpg?s=128&g=1", "display_name": "Mark LeMoine", "link": "https://stackoverflow.com/users/388739/mark-lemoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 1, "accepted_answer_id": 51528666, "answer_count": 1, "score": 0, "last_activity_date": 1541453332, "creation_date": 1532558144, "last_edit_date": 1541453332, "question_id": 51528599, "link": "https://stackoverflow.com/questions/51528599/can-a-class-interface-design-from-python-be-mirrored-in-rust", "title": "Can a class-interface design from Python be mirrored in Rust?", "body": "<p>A pattern I use frequently when writing Python is using class-only designs. I'll create an abstract base class, consisting of only <code>classmethod</code> and <code>staticmethod</code> methods. From this base, I can derive subclasses with specialized behavior for these methods. Since each of these subclasses have the same interface, and don't have any instance methods, I can pass around the classes themselves to client code, as opposed to instances of those classes.</p>\n\n<p>As a simple, yet real/relevant example, here's how I would tackle needing to support multiple file formats for config data:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import abc\nimport yaml\nimport json\n\nclass ConfigReader(abc.ABC):\n    @classmethod\n    def from_file_path(cls, path: str):\n        with open(path) as fo:\n            return cls.from_string(fo.read())\n\n    @classmethod\n    @abc.abstractmethod\n    def from_string(cls, s: str):\n        pass\n\nclass YamlConfigReader(ConfigReader):\n    @classmethod\n    def from_string(cls, s: str):\n        return yaml.load(s)\n\nclass JsonConfigReader(ConfigReader):\n    @classmethod\n    def from_string(cls, s: str):\n        return json.loads(s)\n</code></pre>\n\n<p>Client code can then use the classes themselves in lieu of instances of those classes to do config parsing:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import typing as tp\n\ndef read_config_file(path: str, config_reader: tp.Type[ConfigReader]):\n    return config_reader.from_file_path(path)\n\nprint(read_config_file('config.yaml', YamlConfigReader))\nprint(read_config_file('config.json', JsonConfigReader))\n</code></pre>\n\n<p>I'm trying to do something similar to the above in Rust, but I seem to be running into issues. My initial approach used traits and associated methods:</p>\n\n<pre><code>use std::path::Path;\nuse std::fs::File;\nuse std::io::Read;\nuse std::io::Error;\n\npub trait ConfigReader {\n    fn from_str&lt;S: AsRef&lt;str&gt;&gt;(s: S) -&gt; Result&lt;String, Error&gt;;\n\n    fn from_file&lt;P: AsRef&lt;Path&gt;&gt;(p: P) -&gt; Result&lt;String, Error&gt; {\n        let p = p.as_ref();\n        let mut f = File::open(p)?;\n\n        let mut buffer = String::new();\n        f.read_to_string(&amp;mut buffer)?;\n\n        Self::from_str(buffer)\n    }\n}\n\npub struct YamlConfigReader;\npub struct JsonConfigReader;\n\nimpl ConfigReader for YamlConfigReader {\n    fn from_str&lt;S: AsRef&lt;str&gt;&gt;(_s: S) -&gt; Result&lt;String, Error&gt; {\n        Ok(\"dummy\".to_string())\n    }\n}\n\nimpl ConfigReader for JsonConfigReader {\n    fn from_str&lt;S: AsRef&lt;str&gt;&gt;(_s: S) -&gt; Result&lt;String, Error&gt; {\n        Ok(\"dummy\".to_string())\n    }\n}\n\nfn read_config_file&lt;P: AsRef&lt;Path&gt;&gt;(p: P, config_reader: &amp;ConfigReader) -&gt; Result&lt;String, Error&gt; {\n    config_reader.from_file(p)\n}\n\nfn main() {}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=ed1eae1aa225c0f708bd47eba167017e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>This gives me the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0038]: the trait `ConfigReader` cannot be made into an object\n  --&gt; src/main.rs:37:1\n   |\n37 | fn read_config_file&lt;P: AsRef&lt;Path&gt;&gt;(p: P, config_reader: &amp;ConfigReader) -&gt; Result&lt;String, Error&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `ConfigReader` cannot be made into an object\n   |\n   = note: method `from_str` has no receiver\n   = note: method `from_file` has no receiver\n</code></pre>\n\n<p>Is this sort of pattern possible in Rust? If not, what are some ways I can emulate this sort of behavior of decoupled, modular, stateless interfaces?</p>\n"}, {"tags": ["c", "linker", "rust", "ffi"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1532551408, "post_id": 51524371, "comment_id": 90023298, "body": "Where did you tell cargo to link your library ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532551833, "post_id": 51524371, "comment_id": 90023479, "body": "FWIW, a <code>usize</code> and an <code>int</code> are <b>not</b> guaranteed to be the same size. You should be using <code>libc::c_int</code> in Rust to ensure you match."}, {"owner": {"reputation": 562, "user_id": 1922722, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/39fbebb5bebce94df3a38e3e44649f57?s=128&d=identicon&r=PG", "display_name": "nwn", "link": "https://stackoverflow.com/users/1922722/nwn"}, "edited": false, "score": 1, "creation_date": 1532551911, "post_id": 51524371, "comment_id": 90023515, "body": "<a href=\"https://stackoverflow.com/a/27959146/1922722\">Possibly relevant</a>"}, {"owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "edited": false, "score": 0, "creation_date": 1532594865, "post_id": 51524371, "comment_id": 90036979, "body": "Is there a difference between using <code>libc::c_int</code> and <code>std::os::raw::c_int</code>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1532611254, "last_edit_date": 1532611254, "creation_date": 1532551540, "answer_id": 51527388, "question_id": 51524371, "link": "https://stackoverflow.com/questions/51524371/how-can-i-link-libraries-to-my-c-code-and-use-that-in-a-rust-binary/51527388#51527388", "title": "How can I link libraries to my C code and use that in a Rust binary?", "body": "<p>From the <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">Cargo documentation for build scripts</a>:</p>\n\n<blockquote>\n  <p><code>rustc-link-lib=[KIND=]NAME</code> indicates that the specified value is a\n  library name and should be passed to the compiler as a <code>-l</code> flag. The\n  optional <code>KIND</code> can be one of <code>static</code>, <code>dylib</code> (the default), or <code>framework</code>,\n  see <code>rustc --help</code> for more details.</p>\n</blockquote>\n\n<p>Add this to your build script:</p>\n\n<pre><code>println!(\"cargo:rustc-link-lib=nl-genl-3\");\nprintln!(\"cargo:rustc-link-lib=nl-3\");\n</code></pre>\n\n<p>And remove the <code>link</code> attributes from your Rust code.</p>\n\n<hr>\n\n<p>The problem is that your linker flags are stating that the Rust code needs to link to the C libraries, but that's not fully true. Your <em>C code</em> needs to link to the libraries, and your Rust code needs to link to the compiled C code. If you look at the arguments, you'll see this (abridged) output</p>\n\n<ul>\n<li><code>deps/derp-5a7445c256565e2d.1vmrdj4gsxr690x4.rcgu.o</code> (your Rust code)</li>\n<li><code>-l nl-genl-3</code> (system library)</li>\n<li><code>-l nl-3</code> (system library)</li>\n<li><code>-l nl</code> (your C shim)</li>\n</ul>\n\n<p>Argument order to linkers is important. If something isn't needed when the object is processed by the linker, <em>it won't be used</em>.</p>\n\n<p>Here, the Rust code adds a dependency on code from the <code>nl</code> library, so the linker is on the lookout for those symbols. When <code>nl-3</code> and <code>nl-genl-3</code> are processed, we don't need any of the symbols from them, so they are mostly ignored. When <code>nl</code> is processed, we resolve the dependency from the Rust code, but <code>nl</code> needs the symbols from <code>nl-genl-3</code> and <code>nl-3</code>, which will not be processed again.</p>\n\n<p>It's not obvious, but the <code>compile</code> method from <code>cc</code> automatically prints out a <code>cargo:rustc-link-lib</code> line to tie its build result into your Rust code.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40833078/155423\">How do I specify the linker path in Rust?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40602708/155423\">Linking Rust application with a dynamic library not in the runtime linker search path</a></li>\n</ul>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 928, "favorite_count": 1, "accepted_answer_id": 51527388, "answer_count": 1, "score": 1, "last_activity_date": 1532611254, "creation_date": 1532538697, "last_edit_date": 1532551439, "question_id": 51524371, "link": "https://stackoverflow.com/questions/51524371/how-can-i-link-libraries-to-my-c-code-and-use-that-in-a-rust-binary", "title": "How can I link libraries to my C code and use that in a Rust binary?", "body": "<p>I am trying to include a C file in my Rust project. The C file uses system dependencies. Below is a minimal example that does not compile when I run <code>cargo build</code>.</p>\n\n<p>If I take the failing command that Cargo is running and I append <code>\"-l\" \"nl-genl-3\" \"-l\" \"nl-3\"</code> the command <em>does</em> succeed. Is it putting the the linker flags in the wrong place, because those flags definitely <em>are</em> in the command?</p>\n\n<p><strong>src/main.rs</strong></p>\n\n<pre><code>#[link(name = \"nl-genl-3\")]\n#[link(name = \"nl-3\")]\nextern \"C\" {\n    fn nl_test(help_me_pls: usize) -&gt; usize;\n}\n\nfn main() {\n    unsafe {\n        println!(\"nl.c function result: {:?}\", nl_test(6));\n    }\n}\n</code></pre>\n\n<p><strong>src/nl.c</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;linux/nl80211.h&gt;\n#include &lt;netlink/netlink.h&gt;\n#include &lt;netlink/genl/genl.h&gt;\n\nint nl_test(int help_me_pls) {\n    struct nl_sock* socket = nl_socket_alloc();\n    nl_socket_free(socket);\n    return help_me_pls;\n}\n</code></pre>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>extern crate cc;\n\nfn main() {\n    cc::Build::new()\n        .include(\"/usr/include/libnl3\")\n        .file(\"src/nl.c\")\n        .compile(\"libnl.a\");\n}\n</code></pre>\n\n<p><strong>Cargo.toml</strong></p>\n\n<pre><code>[package]\nname = \"derp\"\nversion = \"0.1.0\"\n\n[build-dependencies]\ncc = \"1.0\"\n</code></pre>\n\n<p>I get the following output when I run <code>cargo build</code></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling cc v1.0.18\n   Compiling derp v0.1.0 (file:///root/derp)\nerror: linking with `cc` failed: exit code: 1\n  |\n  = note: \"cc\" \"-Wl,--as-needed\" \"-Wl,-z,noexecstack\" \"-L\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.1vmrdj4gsxr690x4.rcgu.o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.1y16o1qfye96o7m0.rcgu.o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.3rngp6bm2u2q5z0y.rcgu.o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.4oc10dk278mpk1vy.rcgu.o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.4xq48u46a1pwiqn7.rcgu.o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.51s1w397y42gpez1.rcgu.o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.8xzrsc1ux72v29j.rcgu.o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.oa3rad818d8sgn4.rcgu.o\" \"-o\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d\" \"/root/derp/target/debug/deps/derp-5a7445c256565e2d.crate.allocator.rcgu.o\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\" \"-L\" \"/root/derp/target/debug/deps\" \"-L\" \"/root/derp/target/debug/build/derp-c3cdcf1fbd0c70b2/out\" \"-L\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib\" \"-l\" \"nl-genl-3\" \"-l\" \"nl-3\" \"-Wl,-Bstatic\" \"-Wl,--whole-archive\" \"-l\" \"nl\" \"-Wl,--no-whole-archive\" \"-Wl,--start-group\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libstd-774f1a5992f88ec5.rlib\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libpanic_unwind-a65ab1ab71045d14.rlib\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liballoc_jemalloc-5cced33d7a39db8e.rlib\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libunwind-76fba694360269fc.rlib\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liballoc_system-b3f660c2be971c37.rlib\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liblibc-64d840c62d40ace0.rlib\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liballoc-b3d8b67c899d207d.rlib\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libcore-d9124265921c5963.rlib\" \"-Wl,--end-group\" \"/root/.rustup/toolchains/stable-armv7-unknown-linux-gnueabihf/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libcompiler_builtins-1aad7d9a81def783.rlib\" \"-Wl,-Bdynamic\" \"-l\" \"dl\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"pthread\" \"-l\" \"gcc_s\" \"-l\" \"c\" \"-l\" \"m\" \"-l\" \"rt\" \"-l\" \"pthread\" \"-l\" \"util\" \"-l\" \"util\"\n  = note: /root/derp/target/debug/build/derp-c3cdcf1fbd0c70b2/out/libnl.a(nl.o): In function `nl_test':\n          /root/derp/src/nl.c:6: undefined reference to `nl_socket_alloc'\n          /root/derp/src/nl.c:7: undefined reference to `nl_socket_free'\n          collect2: error: ld returned 1 exit status\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 812, "user_id": 10082531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f875b4ac4a078a7857069b5c4e866dba?s=128&d=identicon&r=PG", "display_name": "Michael Pfaff", "link": "https://stackoverflow.com/users/10082531/michael-pfaff"}, "edited": false, "score": 0, "creation_date": 1584136047, "post_id": 51516910, "comment_id": 107354117, "body": "The question is about <b><code>#![no_std]</code></b>, hence <code>extern crate std;</code> <b>obviously</b> won&#39;t work."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "reply_to_user": {"reputation": 812, "user_id": 10082531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f875b4ac4a078a7857069b5c4e866dba?s=128&d=identicon&r=PG", "display_name": "Michael Pfaff", "link": "https://stackoverflow.com/users/10082531/michael-pfaff"}, "edited": false, "score": 1, "creation_date": 1584138972, "post_id": 51516910, "comment_id": 107354958, "body": "@Michael the Question is about using <code>vec!</code> in tests for a <code>#![no_std]</code> crate. The testing framework depends on <code>std</code>, otherwise it cannot compile."}, {"owner": {"reputation": 812, "user_id": 10082531, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f875b4ac4a078a7857069b5c4e866dba?s=128&d=identicon&r=PG", "display_name": "Michael Pfaff", "link": "https://stackoverflow.com/users/10082531/michael-pfaff"}, "edited": false, "score": 0, "creation_date": 1584218771, "post_id": 51516910, "comment_id": 107371300, "body": "My mistake. The question made it seem like the test couldn&#39;t use <code>std</code>."}], "tags": [], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "is_accepted": false, "score": 2, "last_activity_date": 1532515315, "creation_date": 1532515315, "answer_id": 51516910, "question_id": 51516773, "link": "https://stackoverflow.com/questions/51516773/how-to-use-vec-macro-in-a-no-std-library/51516910#51516910", "title": "How to use vec! macro in a #![no_std] library?", "body": "<p><a href=\"https://doc.rust-lang.org/std/macro.vec.html\" rel=\"nofollow noreferrer\"><code>vec!</code></a> is a macro so you have to add <code>#[macro_use]</code>:</p>\n\n<pre><code>#[cfg(test)]\n#[macro_use]\nextern crate std;\n</code></pre>\n\n<p>If you are on a nightly compiler, you can also use the <em>use_extern_macros</em> feature:</p>\n\n<pre><code>#![feature(use_extern_macros)]\n\n#[cfg(test)]\nextern crate std;\n\n#[cfg(test)]\nmod test {\n    use std::vec;\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "edited": false, "score": 0, "creation_date": 1532518429, "post_id": 51517018, "comment_id": 90004130, "body": "Do you have any pointer on how I do this exactly? Indeed my platform has <code>malloc()</code> and <code>free()</code> available. Is there some standard implementation of <code>GlobalAlloc</code> or a crate that implements it based on these two functions? Because else rustc complains, that it doesn&#39;t find a <code>#[alloc_error_handler]</code> function."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "edited": false, "score": 0, "creation_date": 1532518850, "post_id": 51517018, "comment_id": 90004388, "body": "I&#39;m not quite sure, but it shouldn&#39;t be that hard to do it on your own. Just call (via FFI) your malloc and free and implemented the <a href=\"https://doc.rust-lang.org/core/alloc/trait.GlobalAlloc.html\" rel=\"nofollow noreferrer\">needed Trait</a>."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "edited": false, "score": 1, "creation_date": 1532519307, "post_id": 51517018, "comment_id": 90004677, "body": "@MatthiasWimmer maybe something like <a href=\"https://play.rust-lang.org/?gist=fbe68c0a4b50c109ea637a53d136202c&amp;version=nightly&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "reply_to_user": {"reputation": 34798, "user_id": 1362755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97aa8c37ffa60c4262955aefae56e605?s=128&d=identicon&r=PG", "display_name": "the8472", "link": "https://stackoverflow.com/users/1362755/the8472"}, "edited": false, "score": 0, "creation_date": 1532583569, "post_id": 51517018, "comment_id": 90031017, "body": "@the8472 I&#39;m note sure, if you can use it as an allocator. Yes, you can use the functions on your own, but vec/string/etc need the global allocator."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 7, "last_activity_date": 1532515646, "last_edit_date": 1532515646, "creation_date": 1532515601, "answer_id": 51517018, "question_id": 51516773, "link": "https://stackoverflow.com/questions/51516773/how-to-use-vec-macro-in-a-no-std-library/51517018#51517018", "title": "How to use vec! macro in a #![no_std] library?", "body": "<p>In addition to <a href=\"https://stackoverflow.com/a/51516910/3131852\">Tims answer</a>, if you have an embedded system and you have an allocator, but not std, you can use</p>\n\n<pre><code>#[macro_use]\nextern crate alloc;\n</code></pre>\n\n<p>to be able to use <code>vec!</code></p>\n"}], "owner": {"reputation": 3207, "user_id": 4453678, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/b1f2ad378f4eccf0df09d80d2f305e96?s=128&d=identicon&r=PG", "display_name": "Matthias Wimmer", "link": "https://stackoverflow.com/users/4453678/matthias-wimmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3019, "favorite_count": 0, "accepted_answer_id": 51517018, "answer_count": 2, "score": 10, "last_activity_date": 1547305650, "creation_date": 1532514884, "last_edit_date": 1532536589, "question_id": 51516773, "link": "https://stackoverflow.com/questions/51516773/how-to-use-vec-macro-in-a-no-std-library", "title": "How to use vec! macro in a #![no_std] library?", "body": "<p>In standard Rust code, the <code>vec!</code> macro is in the prelude and there is no need to make it visible manually. I'm working on a library that doesn't use the standard library and sets <code>#![no_std]</code>, so also the prelude isn't visible.</p>\n\n<p>Inside the test code, I <em>am</em> using functionality from the standard library, therefore I have a</p>\n\n<pre><code>#[cfg(test)]\nextern crate std;\n</code></pre>\n\n<p>This works without problems to access functions and datatypes from the standard library, but now I would like to access the <code>vec!(...)</code> macro and I don't know how.</p>\n\n<p><code>use std::vec::vec!;</code> results in an error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected one of `::`, `;`, or `as` here \n</code></pre>\n\n<p>at the position of the exclamation mark.</p>\n\n<p>How can I access this macro instead?</p>\n"}, {"tags": ["multithreading", "performance", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1532512868, "post_id": 51515991, "comment_id": 90000574, "body": "Did you consider <a href=\"https://docs.rs/rayon/\" rel=\"nofollow noreferrer\">rayon</a>?"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532513145, "post_id": 51515991, "comment_id": 90000779, "body": "Yes, I looked at it quickly. However, I need detailed control over which calculations run in parallel and which don&#39;t, to be able to flow data between different calculation steps without having to use mutexes (which I don&#39;t want to use because I want 100% determinism)."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532513632, "post_id": 51515991, "comment_id": 90001079, "body": "I tried rayon now, using it as a scoped threadpool. It&#39;s slightly slower than scoped_pool."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1532517295, "post_id": 51515991, "comment_id": 90003372, "body": "Are you running your program with <code>--release</code> flags?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 3, "creation_date": 1532537123, "post_id": 51515991, "comment_id": 90016656, "body": "@hellow <code>cargo bench</code> implies release."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1532537374, "post_id": 51515991, "comment_id": 90016780, "body": "Can not reproduce. <code>PARALLELISM=1 cargo +nightly bench</code> -&gt; <code>1,419,959 ns&#47;iter (+&#47;- 188,210)</code>; <code>PARALLELISM=2 cargo +nightly bench</code> -&gt; <code>1,397,151 ns&#47;iter (+&#47;- 48,459)</code>."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532537657, "post_id": 51515991, "comment_id": 90016933, "body": "Any idea why you don&#39;t see more speedup? I&#39;d almost expected a 2x speedup for two threads. Are you on a machine with hyperthreading? I am, maybe the slowdown occurs if both threads are run on the same core?"}, {"owner": {"reputation": 126353, "user_id": 14660, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/e55e0ec3c00f834d78fbdddeaa36e308?s=128&d=identicon&r=PG", "display_name": "Schwern", "link": "https://stackoverflow.com/users/14660/schwern"}, "edited": false, "score": 0, "creation_date": 1532539909, "post_id": 51515991, "comment_id": 90018099, "body": "@avl_sweden How many cores do you have? And since I assume this is running on nightly, what happens if you update your nightly build?"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532549344, "post_id": 51515991, "comment_id": 90022364, "body": "I have 10 cores (Intel i9 7900X CPU). I&#39;m running latest nightly."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532549375, "post_id": 51515991, "comment_id": 90022374, "body": "Would the downvoter like to comment on what is wrong with my question? Maybe I can learn something?"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532555873, "post_id": 51515991, "comment_id": 90025056, "body": "I&#39;ve now tried rewriting the program in C++ (oh how I don&#39;t miss the days of C++). I get more or less linear speedup up to 4 threads (140000 ns / iter), which seems reasonable since the thing should be memory-bandwidth-limited, and I have 4 memory controllers in my CPU."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532555918, "post_id": 51515991, "comment_id": 90025071, "body": "So there&#39;s something fishy here, and I am going to find out what it is :-)"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532559376, "post_id": 51515991, "comment_id": 90025967, "body": "I meant &quot;4 channels on my memory controller&quot;, not &quot;4 memory controllers&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532615085, "post_id": 51515991, "comment_id": 90050111, "body": "<i>rewriting the program in C++</i> \u2014 post that MCVE as well, that way we can more easily compare the two and highlight differences."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532622327, "post_id": 51515991, "comment_id": 90054783, "body": "It&#39;s just that I have even more reason to be ashamed of my C++ than my Rust-code. But I will try and swallow my pride :-) . Will post code when I am back at the office."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532622391, "post_id": 51515991, "comment_id": 90054810, "body": "I got the C++ program to 100000 ns/iteration with 8 threads, using a home-rolled busy-waiting thread-pool-implementation. Code is coming."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532638961, "post_id": 51515991, "comment_id": 90062641, "body": "I&#39;ve added the C++-program now. It is quite terrible, just a proof o concept, but shows (unless I made some terrible error) that the work-load I have (albeit very artificial) can in fact be parallelized."}], "answers": [{"comments": [{"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532548844, "post_id": 51525100, "comment_id": 90022136, "body": "Yeah, I know the benchmark is meaningless. It is a reduction of an actual program. Thanks for all your work! However, I worry that, in your program the compiler has beeb able to statically eliminate much of the code. 500000 iterations in 488ns seems too good to be true."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532549030, "post_id": 51525100, "comment_id": 90022222, "body": "Unfortunately I kind of need the output vectors for different threads to be separate, in the real program the amount of output from each iteration varies."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532549133, "post_id": 51525100, "comment_id": 90022273, "body": "You seem to know your stuff. How did you determine that boundschecking was dominating? And are you saying that simple operations can&#39;t be parallelized? Why not? Memory bandwidth limitation?"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532549474, "post_id": 51525100, "comment_id": 90022417, "body": "But wait a minute, there should be very little boundschecking in the original program. All the main work is done with iterators! Is it in Vec::push?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 2, "creation_date": 1532614375, "post_id": 51525100, "comment_id": 90049553, "body": "@avl_sweden Thanks for the feedback. I have updated the benchmark with that information. If we stick to one vector per worker, the final measurements become more &quot;realistic&quot;. The main points that I wish to portray still stand: (1) use the iterator API whenever possible, since it&#39;s more idiomatic and produces better machine code; (2) and make sure that your algorithm can indeed benefit from parallelism. :)"}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532639094, "post_id": 51525100, "comment_id": 90062705, "body": "Thanks again for your help! I definitely did learn something from your rewrite of my program! As I posted above in the question, I have now written a very optimized (almost cheating) C++-version of the problem, and it exhibits good parallelism up to the machine core number. This tells me that the problem can in fact be parallelized. So the &#39;bad&#39; scaling in the rust-code can probably be worked around somehow."}, {"owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "edited": false, "score": 0, "creation_date": 1532639147, "post_id": 51525100, "comment_id": 90062725, "body": "My guess right now is that it all has to do with whether or not the first part of the workload gets to run on the same core as the second part, and if it doesn&#39;t there is cache-thrashing in the L2-cache as cores have to steal cache-lines from each other."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": false, "score": 7, "last_activity_date": 1532614226, "last_edit_date": 1532614226, "creation_date": 1532541646, "answer_id": 51525100, "question_id": 51515991, "link": "https://stackoverflow.com/questions/51515991/why-is-this-program-slower-with-more-threads/51525100#51525100", "title": "Why is this program slower with more threads?", "body": "<p>The main problem is that this benchmark is close to meaningless. Assigning and comparing numbers are not computationally intensive operations, meaning that there is hardly any value in parallelizing these operations. As well shown in those measurements, adding more threads only crippled performance.</p>\n\n<p>The greatest bottleneck, surprisingly, might be in other trivial instructions emerging from constructing the output vectors, which could be avoided with iterators. Most interactions with vectors rely on the index operator <code>[]</code> to iterate a collection, which is unconventional and unadvised. Here is an improved version of the same benchmark. The changes sum up to the following:</p>\n\n<ul>\n<li>Initializing a vector with a specific element can be done with the <code>vec</code> macro: <code>vec![0; data_size]</code>.</li>\n<li>One can also use iterators to build the N initial vectors. An empty vector created with <code>Vec::new</code> does not allocate heap memory, so this is mostly fine.</li>\n<li>When assigning jobs to each worker, the input memory chunks and output vectors can just be zipped together. Iteration will automatically occur for both chunks, with much less bounds checking required. Also because of <code>chunks</code>, the last worker will not attempt to access out of bounds if it was given a smaller slice.</li>\n<li>The work of each thread can also be made and collected into a new vector with iterators, rather than producing a loop that pushes new values to an existing mutable vector on each step. The compiler can avoid many redundant checks with this approach.</li>\n<li>Lastly, the second part of the benchmark does not need mutable access to the \"processed\" content.</li>\n</ul>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[bench]\npub fn test_bench_alt(b: &amp;mut Bencher) {\n    let parallellism = 1;\n    let data_size = 500_000;\n\n    let pool = Pool::new(parallellism);\n\n    {\n        let data = vec![0; data_size];\n\n        let mut output_data: Vec&lt;_&gt; = (0..parallellism).map(|_| Vec::new()).collect();\n\n        b.iter(move || {\n            for vec in &amp;mut output_data {\n                vec.clear();\n            }\n\n            {\n                let data_ref = &amp;data;\n                pool.scoped(|scope| {\n                    for (output_data_bucket, input_data_chunk) in (&amp;mut output_data)\n                        .into_iter()\n                        .zip(data_ref.chunks(data_size / parallellism))\n                    {\n                        scope.execute(move || {\n                            *output_data_bucket = input_data_chunk.into_iter().cloned().collect();\n                        })\n                    }\n                });\n            }\n            pool.scoped(|scope| {\n                for sub in &amp;output_data {\n                    scope.execute(move || {\n                        for sublot in sub {\n                            assert_ne!(*sublot, 42);\n                        }\n                    });\n                }\n            });\n        });\n    }\n}\n</code></pre>\n\n<p><strong>Before:</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt ... bench:   1,352,071 ns/iter (+/- 516,762)\n</code></pre>\n\n<p><strong>After:</strong></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt ... bench:     533,573 ns/iter (+/- 213,486)\n</code></pre>\n\n<p>These numbers might only be slightly better with a few more threads, althoug with a higher variance. For parallellism = 2:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt ... bench:     314,662 ns/iter (+/- 340,636)\n</code></pre>\n\n<p>If you bring a computationally intensive algorithm to the equation, then you can try again with these ideas in mind.</p>\n"}, {"tags": [], "owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "is_accepted": true, "score": 1, "last_activity_date": 1532652575, "last_edit_date": 1532652575, "creation_date": 1532641939, "answer_id": 51548017, "question_id": 51515991, "link": "https://stackoverflow.com/questions/51515991/why-is-this-program-slower-with-more-threads/51548017#51548017", "title": "Why is this program slower with more threads?", "body": "<p>After researching the issue extensively and with lots of inspiration from the excellent answer by E_net4, I found the exact cause for the bad scaling of my original program.</p>\n\n<p>We have to consider two separate issues here:</p>\n\n<ol>\n<li><p>Why is the program so slow?</p></li>\n<li><p>Why doesn't it scale to more than 1 CPU?</p></li>\n</ol>\n\n<p>The answer to question 1 has been answered in impressive detail and with good precision by E_net4. The answer to question 2 is <a href=\"https://en.wikipedia.org/wiki/False_sharing\" rel=\"nofollow noreferrer\">false sharing</a> / cache-line thrashing for the <code>output_data</code> vector.</p>\n\n<p>When modern multi-core CPUs access main memory, they store data that they access from memory in their own dedicated cache. Subsequent requests to the same memory can be served from the fast cache instead of from the relatively slow main memory. </p>\n\n<p>What happens if one core writes to memory that has been cached by another core? Whenever this happens, all cached copies in all cores must be updated or removed. This is implemented by keeping track of the state of each stored cache-line, using something like the <a href=\"https://en.wikipedia.org/wiki/MOESI_protocol\" rel=\"nofollow noreferrer\">MOESI-protocol</a>. For each cache line, the CPU keeps track of whether or not it is the sole owner.</p>\n\n<p>Each cache is typically 64 bytes. The cache-line is, in its entirety, owned by one core. Now consider the bytes holding the output_data vector in the program in the question. Each <code>Vec</code> is 8*3 bytes (on a 64 bit machine) = 24 bytes. This means that the first two output vectors are probably stored in the same cache line.</p>\n\n<p>Whenever <code>Vec::push</code> is executed, the <code>len</code> field of the <code>Vec</code> is incremented. This is a write, and thus requires that the cache-line is owned by the executing core. There will be some signaling between the cores, and the cache line will be transferred to the executing core. Consider that the other core is going to be executing <code>Vec::push</code> very soon as well. When this happens, the cache line is migrated back to the other core. The cache-line ownership is ping-ponging between the cores.</p>\n\n<p>One way to fix this problem is to introduce padding between the individual <code>Vec</code> elements in the <code>output_data</code> vector, like this:</p>\n\n<pre><code>#[bench]\npub fn test_bench_alt(b: &amp;mut Bencher) {\n    let parallellism = 4;\n    let data_size = 500_000;\n\n    let mut pool = Pool::new(parallellism);\n\n    struct Filler {\n        odata: Vec&lt;i32&gt;,\n        padding: [u8; 64],\n    }\n\n    {\n        let mut data = Vec::new();\n        for _ in 0..data_size {\n            data.push(0);\n        }\n\n        let mut output_data = Vec::&lt;Filler&gt;::new();\n        for _ in 0..parallellism {\n            let mut t = Vec::&lt;i32&gt;::with_capacity(data_size / parallellism);\n            output_data.push(Filler {\n                odata: t,\n                padding: [0; 64],\n            });\n        }\n        b.iter(move || {\n            for i in 0..parallellism {\n                output_data[i].odata.clear();\n            }\n            {\n                let mut output_data_ref = &amp;mut output_data;\n                let data_ref = &amp;data;\n                pool.scoped(move |scope| {\n                    for (idx, output_data_bucket) in output_data_ref.iter_mut().enumerate() {\n                        scope.execute(move || {\n                            for item in &amp;data_ref[(idx * (data_size / parallellism))\n                                                      ..((idx + 1) * (data_size / parallellism))]\n                            {\n                                //Yes, this is a logic bug when parallellism does not evenely divide data_size. I could use \"chunks\" to avoid this, but I wanted to keep this simple for this analysis.\n                                output_data_bucket.odata.push(*item);\n                            }\n                        });\n                    }\n                });\n            }\n            pool.scoped(|scope| {\n                for sub in &amp;output_data {\n                    scope.execute(move || {\n                        for sublot in &amp;sub.odata {\n                            assert!(*sublot != 42);\n                        }\n                    });\n                }\n            });\n        });\n    }\n}\n</code></pre>\n\n<p>Parallelism = 1:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt  ... bench:     729,826 ns/iter (+/- 16,718)\n</code></pre>\n\n<p>Parallelism = 2:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt  ... bench:     374,167 ns/iter (+/- 9,933)\n</code></pre>\n\n<p>Parallelism = 4:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt  ... bench:     206,906 ns/iter (+/- 10,559)\n</code></pre>\n\n<p>Note that E_net4's program is still much more efficient by using iterators and <code>collect</code> in a better way to avoid bounds checks, and it avoids the bad implications of false sharing by building the vector as a temporary and then assigning it only once per iteration to the <code>output_data</code> element, instead of constantly updating the <code>output_data</code> element.</p>\n"}], "owner": {"reputation": 553, "user_id": 395763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/54f5eda87ee0c28ba55a1523c1c07689?s=128&d=identicon&r=PG", "display_name": "avl_sweden", "link": "https://stackoverflow.com/users/395763/avl-sweden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 1, "accepted_answer_id": 51548017, "answer_count": 2, "score": -1, "last_activity_date": 1532652575, "creation_date": 1532512542, "last_edit_date": 1532638828, "question_id": 51515991, "link": "https://stackoverflow.com/questions/51515991/why-is-this-program-slower-with-more-threads", "title": "Why is this program slower with more threads?", "body": "<p>My program takes twice as long to execute when run with two threads, compared to when running with just one thread.</p>\n\n<p>I've created <a href=\"https://github.com/avl/scoped_pool_perf_problem\" rel=\"nofollow noreferrer\">a minimal example program with the same problem</a> using <a href=\"https://crates.io/crates/scoped-pool\" rel=\"nofollow noreferrer\"><code>scoped-pool</code></a>:</p>\n\n<pre><code>#![feature(test)]\n\nextern crate scoped_pool;\nextern crate test;\n\nuse scoped_pool::Pool;\nuse test::Bencher;\n\n/// This is a minimized program exhibiting a performance problem\n/// Why is this program twice as fast, when the number of threads is set to 1 instead of 2?\n#[bench]\npub fn test_bench_alt(b: &amp;mut Bencher) {\n    let parallellism = 1;\n    let data_size = 500_000;\n\n    let mut pool = Pool::new(parallellism);\n\n    {\n        let mut data = Vec::new();\n        for _ in 0..data_size {\n            data.push(0);\n        }\n\n        let mut output_data = Vec::&lt;Vec&lt;i32&gt;&gt;::new();\n        for _ in 0..parallellism {\n            let mut t = Vec::&lt;i32&gt;::with_capacity(data_size / parallellism);\n            output_data.push(t);\n        }\n        b.iter(move || {\n            for i in 0..parallellism {\n                output_data[i].clear();\n            }\n            {\n                let mut output_data_ref = &amp;mut output_data;\n                let data_ref = &amp;data;\n                pool.scoped(move |scope| {\n                    for (idx, output_data_bucket) in output_data_ref.iter_mut().enumerate() {\n                        scope.execute(move || {\n                            for item in &amp;data_ref[(idx * (data_size / parallellism))\n                                                      ..((idx + 1) * (data_size / parallellism))]\n                            {\n                                //Yes, this is a logic bug when parallellism does not evenely divide data_size. I could use \"chunks\" to avoid this, but I wanted to keep this simple for this analysis.\n                                output_data_bucket.push(*item);\n                            }\n                        });\n                    }\n                });\n            }\n            let mut output_data_ref = &amp;mut output_data;\n            pool.scoped(move |scope| {\n                for sub in output_data_ref.iter_mut() {\n                    scope.execute(move || {\n                        for sublot in sub {\n                            assert!(*sublot != 42);\n                        }\n                    });\n                }\n            });\n        });\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>This is a program which takes an input vector, processes part of this vector in each thread, aggregates output in one vector per thread, then processes the resulting vectors. The real program is more complex, but this minimized program still exhibits the performance issue, even though it does nothing of value.</p>\n\n<p>Running cargo bench:</p>\n\n<p>With one thread:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt ... bench:     781,105 ns/iter (+/- 1,103)\n</code></pre>\n\n<p>With two threads:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>test test_bench_alt ... bench:   1,537,465 ns/iter (+/- 154,499)\n</code></pre>\n\n<p>Why is the program slower when run with two threads? And what could be done to make it faster?</p>\n\n<p>Update:</p>\n\n<p>The following highly optimized C++-program does approximately the same job, and scales (on my machine) up to 19 threads, proving that the workload can in fact be parallellized.</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;chrono&gt;\n#include &lt;sched.h&gt;\n#include &lt;atomic&gt;\n\n\n\n#define PAR 1\n#define DATASIZE 524288\n\nstd::vector&lt;std::vector&lt;int&gt;&gt; output;\nstd::vector&lt;int&gt; input;\n\n\nint run_job1(int task) {\n\n    int l = DATASIZE/PAR;\n    int off = task*(DATASIZE/PAR);\n    auto temp = &amp;output[task][0];\n    auto ip = &amp;input[off];\n    for(int i=0;i&lt;l;++i){\n        *temp=*ip;//+off;\n        temp+=1;\n        ip+=1;\n    }\n    return 0;\n}\n\n\nint run_job2(int task) {\n    auto&amp; temp = output[task];\n    auto temp_p = &amp;output[task][0];\n    auto temp_p2 = temp_p + DATASIZE/PAR;\n    int expected = task*(DATASIZE/PAR);\n    while(temp_p!=temp_p2) {\n        if (*temp_p!=expected)\n            printf(\"Woha!\\n\");\n        temp_p+=1;\n        expected+=1;\n    }\n    return 0;\n}\n\nstd::atomic_int valsync=0;\nstd::atomic_int valdone=0;\n\nvoid* threadfunc(void* p) {\n    int i = (int)(long)p;\n    cpu_set_t set;\n    CPU_ZERO(&amp;set);\n    CPU_SET(i, &amp;set);\n        sched_setaffinity(0, sizeof(set),&amp;set);\n\n    int expect=1;\n    while(true) {\n        while(valsync.load()!=expect) {\n        }\n        expect+=1;        \n        run_job1(i);\n        valdone+=1;\n\n        while(valsync.load()!=expect) {\n        }\n        expect+=1;        \n        run_job2(i);    \n        valdone+=1;\n    }\n\n}\n\nint main() {\n\n    for(int i=0;i&lt;DATASIZE;++i) {\n        input.push_back(i);\n    }\n    for(int i=0;i&lt;PAR;++i) {\n        std::vector&lt;int&gt; t;\n        for(int j=0;j&lt;DATASIZE/PAR;++j)\n            t.push_back(0);\n        output.push_back(t);\n    }\n    for (int i = 0; i &lt; PAR ; ++i)\n    {\n        pthread_t thread_id;\n        if(pthread_create(&amp;thread_id, NULL, threadfunc, (void*)i)) {\n\n            fprintf(stderr, \"Error creating thread\\n\");\n            return 1;\n\n        }   \n    }\n    for(int run=0;run&lt;20;++run)\n    {\n        std::chrono::steady_clock::time_point t1 = std::chrono::steady_clock::now();\n        for(int j=0;j&lt;1000;++j) {\n\n            std::atomic_fetch_add(&amp;valsync,1);\n            while(true)  {\n                int expected=PAR;\n                if (std::atomic_compare_exchange_strong(&amp;valdone,&amp;expected,0))\n                    break;\n\n            }\n\n\n            std::atomic_fetch_add(&amp;valsync,1);\n            while(true)  {\n                int expected=PAR;\n                if (std::atomic_compare_exchange_strong(&amp;valdone,&amp;expected,0))\n                    break;\n            }\n        }\n        std::chrono::steady_clock::time_point t2= std::chrono::steady_clock::now(); \n        auto delta  = t2-t1;\n\n        std::cout&lt;&lt;\"Time: \"&lt;&lt;std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(delta).count()/1000&lt;&lt;\" ns per iter \\n\";\n    }\n\n    return 0;\n}\n</code></pre>\n"}, {"tags": ["file", "stream", "rust", "copy"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1532513909, "post_id": 51514138, "comment_id": 90001240, "body": "The dupe applied to this problem: you want a combination of <code>io::copy</code> and <code>take</code>, something like this: <code>io::copy(&amp;mut input.take(length), &amp;mut output)</code>"}, {"owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1532514312, "post_id": 51514138, "comment_id": 90001511, "body": "@E_net4 Indeed using <code>io::copy</code> together with <code>seek</code> and <code>take</code> on the reader was the solution!"}], "owner": {"reputation": 2387, "user_id": 511016, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/d17e1ed4019d13456dae5386555c8e50?s=128&d=identicon&r=PG", "display_name": "blerontin", "link": "https://stackoverflow.com/users/511016/blerontin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 61, "favorite_count": 0, "closed_date": 1532514195, "answer_count": 0, "score": 0, "last_activity_date": 1532513471, "creation_date": 1532506963, "last_edit_date": 1532508261, "question_id": 51514138, "link": "https://stackoverflow.com/questions/51514138/how-to-copy-a-byte-range-into-a-new-output-file-in-rust", "closed_reason": "Duplicate", "title": "How to copy a byte-range into a new output file in Rust?", "body": "<p>I have an input file opened as a <code>BufReader</code> in Rust. Now I'd like to copy a specific range of bytes into a new output file. What would be the idiomatic way to do this in Rust v1.24?</p>\n\n<pre><code>use std::io::{self, BufReader, BufWriter, SeekFrom, Seek};\nuse std::fs::File;\n\nfn copy_file_range(input_file: &amp;str, output_file: &amp;str, offset: u64, length: u64) -&gt; io::Result&lt;bool&gt; {\n    let f = File::open(input_file).expect(\"Cannot open input file\");\n    let mut reader = BufReader::new(f);\n    let f = File::create(output_file).expect(\"Cannot create output file\");\n    let mut writer = BufWriter::new(f);\n\n    reader.seek(SeekFrom::Start(offset))?;\n    // ...\n\n    Ok(true)\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker", "ownership"], "comments": [{"owner": {"reputation": 1113, "user_id": 4289914, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/4de669c2747d8e32bc663fa98f3925ae?s=128&d=identicon&r=PG&f=1", "display_name": "Blubber", "link": "https://stackoverflow.com/users/4289914/blubber"}, "edited": false, "score": 0, "creation_date": 1532497394, "post_id": 51511114, "comment_id": 89991518, "body": "For the problem I was doing, I wasn&#39;t going through the vector linearly.  Would making a custom iterator be the best way?"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532583445, "post_id": 51511114, "comment_id": 90030980, "body": "If one of the answers below fixes your issue, you should accept it (click the check mark next to the appropriate answer). That does two things. It lets everyone know your issue has been resolved to your satisfaction, and it gives the person that helps you credit for the assist. <a href=\"http://meta.stackexchange.com/a/5235\">See here</a> for a full explanation."}], "answers": [{"comments": [{"owner": {"reputation": 1113, "user_id": 4289914, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/4de669c2747d8e32bc663fa98f3925ae?s=128&d=identicon&r=PG&f=1", "display_name": "Blubber", "link": "https://stackoverflow.com/users/4289914/blubber"}, "edited": false, "score": 0, "creation_date": 1532497812, "post_id": 51511544, "comment_id": 89991673, "body": "If I try to use <code>current = vec.get_mut(2)</code> after <code>let mut current = vec.get_mut(1);</code> it still gives me the &quot;cannot borrow as mutable twice&quot;"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532528093, "post_id": 51511544, "comment_id": 90011040, "body": "The only difference between <code>vec.get_mut(n)</code> and <code>&amp;mut vec[n]</code> is that the former returns an <code>Option</code>, while the latter panics if <code>n</code> is out of bounds."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532528562, "post_id": 51511544, "comment_id": 90011374, "body": "Ups, my brain was not awake this morning. Removed the first paragraph."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": false, "score": 2, "last_activity_date": 1532528531, "last_edit_date": 1532528531, "creation_date": 1532497339, "answer_id": 51511544, "question_id": 51511114, "link": "https://stackoverflow.com/questions/51511114/borrowing-mutable-twice-while-using-the-same-variable/51511544#51511544", "title": "Borrowing mutable twice while using the same variable", "body": "<p>If you want to access more than one, you have to create a scope.</p>\n\n<pre><code>fn main() {\n    let mut vec = vec![2, 3, 5];\n    {\n        let mut current1 = vec.get_mut(1);\n        println!(\"{:?}\", current1);\n    }\n    {\n        let mut current2 = vec.get_mut(2);\n        println!(\"{:?}\", current2);\n    }\n\n    for i in 0..3 {\n        let mut current = vec.get_mut(i);\n        println!(\"{:?}\", current);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 5, "last_activity_date": 1532509945, "last_edit_date": 1532509945, "creation_date": 1532499921, "answer_id": 51512136, "question_id": 51511114, "link": "https://stackoverflow.com/questions/51511114/borrowing-mutable-twice-while-using-the-same-variable/51512136#51512136", "title": "Borrowing mutable twice while using the same variable", "body": "<p>The mutable reference exists until the variable goes out of scope, so you can have several mutable borrows in sequence by putting blocks around each one:</p>\n\n<pre><code>fn do_stuff(n: &amp;mut usize) {\n    *n += 1;\n}\n\nfn main() {\n    let mut v = vec![1, 2, 3, 4];\n    {\n        let current = &amp;mut v[1];\n        do_stuff(current);\n    }\n    {\n        let current = &amp;mut v[0];\n        do_stuff(current);\n    }\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>This is unnecessary with non-lexical lifetimes, which are currently only available on the nightly version:</p>\n\n<pre><code>#![feature(nll)]\n\nfn do_stuff(n: &amp;mut usize) {\n    *n += 1;\n}\n\nfn main() {\n    let mut v = vec![1, 2, 3, 4];\n\n    let mut current = &amp;mut v[1];\n    do_stuff(current);\n\n    current = &amp;mut v[0];\n    do_stuff(current);\n\n    println!(\"{:?}\", v);\n}\n</code></pre>\n"}], "owner": {"reputation": 1113, "user_id": 4289914, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/4de669c2747d8e32bc663fa98f3925ae?s=128&d=identicon&r=PG&f=1", "display_name": "Blubber", "link": "https://stackoverflow.com/users/4289914/blubber"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1073, "favorite_count": 1, "accepted_answer_id": 51512136, "answer_count": 2, "score": 2, "last_activity_date": 1532528531, "creation_date": 1532494894, "question_id": 51511114, "link": "https://stackoverflow.com/questions/51511114/borrowing-mutable-twice-while-using-the-same-variable", "title": "Borrowing mutable twice while using the same variable", "body": "<p>Suppose that I'm going through a vector (not necessarily linearly, so I can't just use map) and I need to change an element when it satisfies some condition. I would think to use some variable to keep track of where I am, for example, something like a <code>current</code> variable</p>\n\n<pre><code>let mut v = vec![1, 2, 3, 4];\n\nlet mut current = &amp;mut v[0];\n</code></pre>\n\n<p>and then check <code>current</code> to for some condition to see if it needs to be changed.  However, when I do</p>\n\n<pre><code>current = &amp;mut v[1];\n</code></pre>\n\n<p>It gives me the <code>cannot borrow v as mutable more than once at a time</code>.</p>\n\n<p>I feel like this should be allowed, since I've only used one variable, and I can't access the old borrow any more.  </p>\n\n<p>Is there some way I can let rust know that I'm giving the first borrow back, so I'm not borrowing twice?  Or have I been thinking about this wrong, and there is a different rust idiom I should use?  I've solved this problem by using the indeces for the vector instead of a mutable reference, but I think this problem of \"traversing using a <code>current</code> and then changing it\" goes beyond just vectors.  What if the data structure I had didn't have indeces?</p>\n"}, {"tags": ["rust", "valgrind"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 12, "last_activity_date": 1557691762, "last_edit_date": 1557691762, "creation_date": 1532482500, "answer_id": 51509672, "question_id": 51509314, "link": "https://stackoverflow.com/questions/51509314/why-does-valgrind-not-detect-a-memory-leak-in-a-rust-program-using-nightly-1-29/51509672#51509672", "title": "Why does Valgrind not detect a memory leak in a Rust program using nightly 1.29.0?", "body": "<h1>Rust 1.32</h1>\n\n<p>As of Rust 1.32, the <em>default allocator</em> for an executable is <a href=\"https://github.com/rust-lang/rust/blob/master/RELEASES.md#version-1320-2019-01-17\" rel=\"nofollow noreferrer\">now the system allocator</a>, so you don't need to set anything by default.</p>\n\n<h1>Previous versions</h1>\n\n<p>You aren't using the global allocator setting correctly. This is a <em>nightly</em> feature, which means that it's prone to change at any time. Your blog post is out of date.</p>\n\n<p>Check the <a href=\"https://doc.rust-lang.org/nightly/std/alloc/index.html\" rel=\"nofollow noreferrer\">module docs for <code>std::alloc</code></a> to see the correct usage:</p>\n\n<pre><code>#![feature(alloc_system)]\nextern crate alloc_system;\n\n#[global_allocator]\nstatic GLOBAL: alloc_system::System = alloc_system::System;\n\nuse std::mem;\n\nfn allocate() {\n    let bad_vec = vec![0u8; 1024*1024];\n    mem::forget(bad_vec);\n}\n\nfn main() {\n    allocate();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>root@3fb431791293:/tmp/vg# valgrind target/debug/vg\n==6326== Memcheck, a memory error detector\n==6326== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==6326== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==6326== Command: target/debug/vg\n==6326==\n==6326==\n==6326== HEAP SUMMARY:\n==6326==     in use at exit: 1,048,576 bytes in 1 blocks\n==6326==   total heap usage: 12 allocs, 11 frees, 1,050,753 bytes allocated\n==6326==\n==6326== LEAK SUMMARY:\n==6326==    definitely lost: 1,048,576 bytes in 1 blocks\n==6326==    indirectly lost: 0 bytes in 0 blocks\n==6326==      possibly lost: 0 bytes in 0 blocks\n==6326==    still reachable: 0 bytes in 0 blocks\n==6326==         suppressed: 0 bytes in 0 blocks\n==6326== Rerun with --leak-check=full to see details of leaked memory\n==6326==\n==6326== For counts of detected and suppressed errors, rerun with: -v\n==6326== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n</code></pre>\n"}], "owner": {"reputation": 3536, "user_id": 1371116, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61e179a755e44f07873b2ccd75771123?s=128&d=identicon&r=PG", "display_name": "Isaac", "link": "https://stackoverflow.com/users/1371116/isaac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2569, "favorite_count": 3, "accepted_answer_id": 51509672, "answer_count": 1, "score": 8, "last_activity_date": 1557691762, "creation_date": 1532478787, "last_edit_date": 1532528488, "question_id": 51509314, "link": "https://stackoverflow.com/questions/51509314/why-does-valgrind-not-detect-a-memory-leak-in-a-rust-program-using-nightly-1-29", "title": "Why does Valgrind not detect a memory leak in a Rust program using nightly 1.29.0?", "body": "<p>I'm trying to detect a memory leak in a Rust program using Valgrind following <a href=\"https://creativcoder.github.io/post/checking_memory_leaks_in_rust_ffi/\" rel=\"noreferrer\">this blog post</a>. My source code is simply:</p>\n\n<pre><code>#![feature(alloc_system)]\nextern crate alloc_system;\n\nuse std::mem;\n\nfn allocate() {\n    let bad_vec = vec![0u8; 1024*1024];\n    mem::forget(bad_vec);\n}\n\nfn main() {\n    allocate();\n}\n</code></pre>\n\n<p>I expect the call to <code>mem::forget()</code> to generate a memory leak that Valgrind would be able to pick up on. However, when I run Valgrind, it reports that no leaks are possible:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[memtest]&gt; cargo run\n   Compiling memtest v0.1.0 (file:///home/icarruthers/memtest)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.28s\n     Running `target/debug/memtest`\n[memtest]&gt; valgrind target/debug/memtest\n==18808== Memcheck, a memory error detector\n==18808== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==18808== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==18808== Command: target/debug/memtest\n==18808== \n==18808== \n==18808== HEAP SUMMARY:\n==18808==     in use at exit: 0 bytes in 0 blocks\n==18808==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==18808== \n==18808== All heap blocks were freed -- no leaks are possible\n==18808== \n==18808== For counts of detected and suppressed errors, rerun with: -v\n==18808== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n</code></pre>\n\n<p>I am upgraded to the latest nightly (1.29.0-nightly (6a1c0637c 2018-07-23)).</p>\n\n<p>What am I missing?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 1, "creation_date": 1532475741, "post_id": 51508855, "comment_id": 89986955, "body": "It is because <code>to_lowercase</code> returns a new instance of a <code>String</code>. Your lifetime requirements on the signatures then become nonsensical because the output <code>&#39;a</code> lifetime can&#39;t match the lifetime of the input <code>&#39;a</code> lifetime. I think you&#39;re trying to follow and edit one of the examples in the Rust book. If so, <a href=\"https://stackoverflow.com/a/51167728/1517578\">I have an answer here for someone having a similar issue to yours if you&#39;re interested in looking</a>."}, {"owner": {"reputation": 1708, "user_id": 5072675, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iXwaq.png?s=128&g=1", "display_name": "dheiberg", "link": "https://stackoverflow.com/users/5072675/dheiberg"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1532477456, "post_id": 51508855, "comment_id": 89987323, "body": "@SimonWhitehead Thanks for the quick explanation and the detailed post you linked! I got it working with the workaround that you suggested with the <code>Into&lt;String&gt;</code> stuff. It&#39;s quite a lot of extra work for something that feels like it should just be one minor adjustment away..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532480743, "post_id": 51508855, "comment_id": 89988015, "body": "See also <a href=\"https://stackoverflow.com/q/51332725/155423\">Implementing a search() method to handle optional case sensitivity</a>"}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1532500794, "post_id": 51508855, "comment_id": 89993067, "body": "@dheiberg That particular answer is the &quot;easy path&quot; in that it just allocates extra <code>String</code> instances in a few places (which, to be fair, is what many other languages/environments will do under the covers anyway). There is an even easier way to do that and that is to just use <code>String</code> instances everywhere. Now, because the example in the book uses references, you&#39;re inevitably going to run into lifetime issues which due to the way Rust works can be confusing and tricky. My &quot;go-to-advice&quot; for people new to Rust is to just use <code>String</code>s and optimize it later if need be."}, {"owner": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1532500845, "post_id": 51508855, "comment_id": 89993094, "body": "Alternatively, there&#39;s another option in that answer to continue using references and avoid allocations .. it just means duplicating a similar line (the one that searches)."}, {"owner": {"reputation": 1708, "user_id": 5072675, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iXwaq.png?s=128&g=1", "display_name": "dheiberg", "link": "https://stackoverflow.com/users/5072675/dheiberg"}, "reply_to_user": {"reputation": 57021, "user_id": 1517578, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/gd070.png?s=128&g=1", "display_name": "Simon Whitehead", "link": "https://stackoverflow.com/users/1517578/simon-whitehead"}, "edited": false, "score": 0, "creation_date": 1532511802, "post_id": 51508855, "comment_id": 89999831, "body": "@SimonWhitehead Yes I&#39;m still trying to learn the lifetime concept, not used to having to deal with it so explicitly. I go it working in the end with a mixture of using <code>String</code> everywhere and <code>.to_string()</code>. Thank you for your help, is there any resource in particular (other than the book) you would recommend for understanding lifetimes and how to actually make use of them?"}], "owner": {"reputation": 1708, "user_id": 5072675, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/iXwaq.png?s=128&g=1", "display_name": "dheiberg", "link": "https://stackoverflow.com/users/5072675/dheiberg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "closed_date": 1532480655, "answer_count": 0, "score": 0, "last_activity_date": 1532480710, "creation_date": 1532474334, "last_edit_date": 1532480698, "question_id": 51508855, "link": "https://stackoverflow.com/questions/51508855/understanding-lifetime-of-borrowed-variables-when-stacking-function-calls", "closed_reason": "Duplicate", "title": "Understanding lifetime of borrowed variables when stacking function calls", "body": "<p>I can't seem to find anything about lifetimes for my specific situation. The <code>search</code> function has correct lifetimes and works fine, but then the <code>search_case_insensitive</code> function tells me the lifetime is too short, but I don't understand why. </p>\n\n<pre><code>pub fn search&lt;'a&gt;(query: &amp;str, contents: &amp;'a str) -&gt; Vec&lt;(&amp;'a str, i32)&gt; {\n    //do something\n}\n\npub fn search_case_insensitive&lt;'a&gt;(query: &amp;str, contents: &amp;'a str) -&gt; Vec&lt;(&amp;'a str, i32)&gt; {\n    return search(&amp;query.to_lowercase(), &amp;contents.to_lowercase());\n}\n</code></pre>\n\n<p>I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/lib.rs:44:43\n   |\n44 |     return search(&amp;query.to_lowercase(), &amp;contents.to_lowercase());\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^ - temporary value only lives until here\n   |                                           |\n   |                                           temporary value does not live long enough\n   |\nnote: borrowed value must be valid for the lifetime 'a as defined on the function body at 43:1...\n  --&gt; src/lib.rs:43:1\n   |\n43 | pub fn search_case_insensitive&lt;'a&gt;(query: &amp;str, contents: &amp;'a str) -&gt; Vec&lt;(&amp;'a str, i32)&gt; {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = note: consider using a `let` binding to increase its lifetime\n</code></pre>\n\n<p>I have tried doing things like <code>let c = contents</code> and using this new <code>c</code> value instead but get the same issue.</p>\n"}, {"tags": ["loops", "recursion", "rust", "lifetime", "borrow-checker"], "comments": [{"owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "edited": false, "score": 0, "creation_date": 1532456493, "post_id": 51505176, "comment_id": 89979409, "body": "Sorry for awful title, but I have no clue how to describe the problem in other words. Looks like all of this conditions are required to reproduce this error."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1532457686, "post_id": 51505176, "comment_id": 89980039, "body": "Actually this is a bit weird. But it&#39;s not about recursion. If you call another function with the same type signature, you&#39;ll have the same problem."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1532457899, "post_id": 51505176, "comment_id": 89980142, "body": "As a hint, consider that it works with no lifetimes, and remember that the elided lifetimes are treated as all distinct within the function arguments. So without the lifetime annotations it&#39;s the same as <code>fn foo&lt;&#39;a, &#39;b, &#39;c&gt;(v: &amp;&#39;a mut Vec&lt;&amp;&#39;b str&gt;, buf: &amp;&#39;c mut String)</code>. The difference with your version that doesn&#39;t work is that you have re-used a lifetime for two of the arguments, tying them together. Neither of them can outlive the other."}, {"owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532458326, "post_id": 51505176, "comment_id": 89980378, "body": "@PeterHall thank you for an advise, but in real function I need them to be bound. Actually lifetime sybtyping is enough, but in this example I made them equal for simplicity."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532458533, "post_id": 51505176, "comment_id": 89980475, "body": "Then perhaps you should add a bit more information about what you are trying to accomplish. The lifetimes, as you have specified them, won&#39;t work. But some other ones might"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532458675, "post_id": 51505176, "comment_id": 89980543, "body": "At a guess, I&#39;d say that you are taking slices from <code>buf</code> and storing them in <code>v</code>. Is that the case? If so, you may not be able to keep all those references mutable."}, {"owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532459066, "post_id": 51505176, "comment_id": 89980733, "body": "Yes, you are right. I&#39;m pretty sure that my final goal isn&#39;t achievable in safe rust, but right now I want to better understand how borrowck works and I can not understand why adding lifetime bound between parameters extends lifetime of <code>buf</code> in this code."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1532459067, "post_id": 51505176, "comment_id": 89980734, "body": "But there could be workarounds, such as using an <code>Rc&lt;String&gt;</code> for the buf instead of the <code>&amp;mut String</code>. Really depends on what you are <i>really</i> trying to do here."}, {"owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "edited": false, "score": 0, "creation_date": 1532466925, "post_id": 51505176, "comment_id": 89984298, "body": "If you do need <code>buf</code> to be mutable, you&#39;ll never get this to work because mutating the string could invalidate the string slices stored in <code>v</code> if the string needs to reallocate its storage. If you don&#39;t need <code>buf</code> to be mutable, then change <code>&amp;&#39;a mut String</code> to <code>&amp;&#39;a str</code> and it&#39;ll just work."}], "answers": [{"tags": [], "owner": {"reputation": 2673, "user_id": 7274990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6819319104c8dbd5f1612d86ea8d9216?s=128&d=identicon&r=PG&f=1", "display_name": "Calculator", "link": "https://stackoverflow.com/users/7274990/calculator"}, "is_accepted": true, "score": 2, "last_activity_date": 1532512713, "last_edit_date": 1532512713, "creation_date": 1532466857, "answer_id": 51507628, "question_id": 51505176, "link": "https://stackoverflow.com/questions/51505176/borrow-checker-error-in-a-loop-inside-a-recursive-function-with-lifetime-bounds/51507628#51507628", "title": "Borrow checker error in a loop inside a recursive function with lifetime bounds", "body": "<p>The version with the explicit lifetime <code>'a</code> ties the lifetime of the <code>Vec</code> to the lifetime of <code>buf</code>. This causes trouble when the <code>Vec</code> and the <code>String</code> are reborrowed. Reborrowing occurs when the arguments are passed to <code>foo</code> in the loop:</p>\n\n<pre><code>fn foo&lt;'a&gt;(v: &amp;mut Vec&lt;&amp;'a str&gt;, buf: &amp;'a mut String) {\n    loop {\n        foo(&amp;mut *v, &amp;mut *buf);\n    }\n}\n</code></pre>\n\n<p>This is done implicitly by the compiler to prevent the arguments from being consumed when <code>foo</code> is called in the loop. If the arguments were actually moved, they could not be used anymore (e.g. for successive calls to <code>foo</code>) after the first recursive call to <code>foo</code>.</p>\n\n<p>Forcing <code>buf</code> to be moved around resolves the error:</p>\n\n<pre><code>fn foo&lt;'a&gt;(v: &amp;mut Vec&lt;&amp;'a str&gt;, buf: &amp;'a mut String) {\n    foo_recursive(v, buf);\n}\n\nfn foo_recursive&lt;'a&gt;(v: &amp;mut Vec&lt;&amp;'a str&gt;, buf: &amp;'a mut String) -&gt; &amp;'a mut String{\n    let mut buf_temp = buf;\n    loop {\n        let buf_loop = buf_temp;\n        buf_temp = foo_recursive(v, buf_loop);\n        // some break condition\n    }\n    buf_temp\n}\n</code></pre>\n\n<p>However, things will break again as soon as you try to actually use <code>buf</code>. Here is a distilled version of your example demonstrating why the compiler forbids successive mutable borrows of <code>buf</code>:</p>\n\n<pre><code>fn foo&lt;'a&gt;(v: &amp;mut Vec&lt;&amp;'a str&gt;, buf: &amp;'a mut String) {\n    bar(v, buf);\n    bar(v, buf);\n}\n\nfn bar&lt;'a&gt;(v: &amp;mut Vec&lt;&amp;'a str&gt;, buf: &amp;'a mut String) {\n    if v.is_empty() {\n        // first call: push slice referencing \"A\" into 'v'\n        v.push(&amp;buf[0..1]);\n    } else {\n        // second call: remove \"A\" while 'v' is still holding a reference to it - not allowed\n        buf.clear();\n    }\n}\n\nfn main() {\n    foo(&amp;mut vec![], &amp;mut String::from(\"A\"));\n}\n</code></pre>\n\n<p>The calls to <code>bar</code> are the equivalents to the recursive calls to <code>foo</code> in your example. Again the compiler complains that <code>*buf</code> cannot be borrowed as mutable more than once at a time. The provided implementation of <code>bar</code> shows that the lifetime specification on <code>bar</code> would allow this function to be implemented in such a way that <code>v</code> enters an invalid state. The compiler understands by looking at the signature of <code>bar</code> alone that data from <code>buf</code> could potentially flow into <code>v</code> and rejects the code as potentially unsafe regardless of the actual implementation of <code>bar</code>.</p>\n"}], "owner": {"reputation": 1453, "user_id": 2018010, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/fwCYF.gif?s=128&g=1", "display_name": "magras", "link": "https://stackoverflow.com/users/2018010/magras"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 192, "favorite_count": 0, "accepted_answer_id": 51507628, "answer_count": 1, "score": 2, "last_activity_date": 1532512713, "creation_date": 1532456210, "last_edit_date": 1532460262, "question_id": 51505176, "link": "https://stackoverflow.com/questions/51505176/borrow-checker-error-in-a-loop-inside-a-recursive-function-with-lifetime-bounds", "title": "Borrow checker error in a loop inside a recursive function with lifetime bounds", "body": "<p>Why does the borrow checker complain about this code?</p>\n\n<pre><code>fn foo&lt;'a&gt;(v: &amp;mut Vec&lt;&amp;'a str&gt;, buf: &amp;'a mut String) {\n    loop {\n        foo(v, buf);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*buf` as mutable more than once at a time\n --&gt; src/main.rs:3:16\n  |\n3 |         foo(v, buf);\n  |                ^^^ mutable borrow starts here in previous iteration of loop\n4 |     }\n5 | }\n  | - mutable borrow ends here\n</code></pre>\n\n<p>If I remove the lifetime bound, the code compiles fine.</p>\n\n<pre><code>fn foo(v: &amp;mut Vec&lt;&amp;str&gt;, buf: &amp;mut String) {\n    loop {\n        foo(v, buf);\n    }\n}\n</code></pre>\n\n<p>This isn't a duplicate of <a href=\"https://stackoverflow.com/questions/50111949/mutable-borrow-in-a-loop\">Mutable borrow in a loop</a>, because there is no return value in my case.</p>\n\n<hr>\n\n<p>I'm pretty sure that my final goal isn't achievable in safe Rust, but right now I want to better understand how the borrow checker works and I can not understand why adding a lifetime bound between parameters extends the lifetime of the borrow in this code.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1532448029, "post_id": 51502717, "comment_id": 89974581, "body": "I find the question interesting, but I think that the code can be minimized."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532449602, "post_id": 51502717, "comment_id": 89975575, "body": "@Boiethios Minimal reproduction: <a href=\"https://play.rust-lang.org/?gist=3957938b4cd94f640624bfcc8adfc2ad&amp;version=nightly&amp;mode=debug&amp;edition=2018\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> I also thought that NLL would fix this code."}, {"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1532455967, "post_id": 51502717, "comment_id": 89979166, "body": "I can&#39;t tell if it applies to your original larger code, but the issue in your playground samples is that you don&#39;t need the <code>&amp;mut</code>, since <code>data_mut</code> already returns a <code>&amp;mut Data</code>. <a href=\"https://play.rust-lang.org/?gist=b885337f7afd99e59ecb1bf62aaf2b3c&amp;version=nightly&amp;mode=debug&amp;edition=2018\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 147, "user_id": 2681234, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ef91137e3640ef4f60edda09bbb6c46e?s=128&d=identicon&r=PG&f=1", "display_name": "iwat0qs", "link": "https://stackoverflow.com/users/2681234/iwat0qs"}, "edited": false, "score": 0, "creation_date": 1532457127, "post_id": 51502717, "comment_id": 89979755, "body": "Oh my. <i>Facepalm</i>. Yes, that worked. I was getting used to prefix field references with <code>&amp;mut </code>, and prefixed the getter returns as well. Waiting to mark your answer as <b>the</b> answer"}, {"owner": {"reputation": 147, "user_id": 2681234, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ef91137e3640ef4f60edda09bbb6c46e?s=128&d=identicon&r=PG&f=1", "display_name": "iwat0qs", "link": "https://stackoverflow.com/users/2681234/iwat0qs"}, "edited": false, "score": 0, "creation_date": 1532457847, "post_id": 51502717, "comment_id": 89980121, "body": "So, as I understand now, the getter was returning a proper reference up to the caller. Prefixing the result with <code>&amp;mut</code> caused that result to become a temporary, and the code was attempting to return a reference to this temporary, which was technically correct, because of the coercion"}], "answers": [{"tags": [], "owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "is_accepted": true, "score": 2, "last_activity_date": 1532458531, "creation_date": 1532458531, "answer_id": 51505721, "question_id": 51502717, "link": "https://stackoverflow.com/questions/51502717/mutable-borrow-in-a-getter-not-living-long-enough/51505721#51505721", "title": "Mutable borrow in a getter not living long enough", "body": "<p>With</p>\n\n<pre><code>pub fn broken(&amp;mut self) -&gt; &amp;mut Data {\n    &amp;mut self.foos.first_mut().unwrap().data_mut()\n}\n</code></pre>\n\n<p>the core issue is that the return type of <code>data_mut()</code> is already a <code>&amp;mut Data</code> value, so you're essentially creating a <code>&amp;mut &amp;mut Data</code>, though that will collapse. The simplest fix in your case is to drop the <code>&amp;mut</code> entirely</p>\n\n<pre><code>pub fn broken(&amp;mut self) -&gt; &amp;mut Data {\n    self.foos.first_mut().unwrap().data_mut()\n}\n</code></pre>\n\n<p>It would seem that by adding the <code>&amp;mut</code> you're causing the borrow checker to create a temporary location and then take a reference to that location.</p>\n"}], "owner": {"reputation": 147, "user_id": 2681234, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/ef91137e3640ef4f60edda09bbb6c46e?s=128&d=identicon&r=PG&f=1", "display_name": "iwat0qs", "link": "https://stackoverflow.com/users/2681234/iwat0qs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 51505721, "answer_count": 1, "score": 3, "last_activity_date": 1532458531, "creation_date": 1532446884, "last_edit_date": 1532451845, "question_id": 51502717, "link": "https://stackoverflow.com/questions/51502717/mutable-borrow-in-a-getter-not-living-long-enough", "title": "Mutable borrow in a getter not living long enough", "body": "<pre><code>pub type Data = i32;\n\npub struct Foo {\n    data: Data,\n}\n\nimpl Foo {\n    pub fn data_mut(&amp;mut self) -&gt; &amp;mut Data {\n        &amp;mut self.data\n    }\n}\n\npub struct Context {\n    data: Data,\n    foos: Vec&lt;Foo&gt;,\n}\n\nimpl Context {\n    pub fn broken(&amp;mut self) -&gt; &amp;mut Data {\n        // What are the lifetimes here that make this version not work?\n        &amp;mut self.foos.first_mut().unwrap().data_mut()\n    }\n\n    pub fn working(&amp;mut self) -&gt; &amp;mut Data {\n        &amp;mut self.foos.first_mut().unwrap().data\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=991b2b113bfcaf7be126cc3ef7ce1ddd&amp;version=nightly&amp;mode=debug&amp;edition=2018\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: borrowed value does not live long enough\n  --&gt; src/main.rs:21:14\n   |\n21 |         &amp;mut self.foos.first_mut().unwrap().data_mut()\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ temporary value does not live long enough\n22 |     }\n   |     - temporary value only lives until here\n   |\nnote: borrowed value must be valid for the anonymous lifetime #1 defined on the method body at 19:5...\n  --&gt; src/main.rs:19:5\n   |\n19 | /     pub fn broken(&amp;mut self) -&gt; &amp;mut Data {\n20 | |         // What are the lifetimes here that make this version not work?\n21 | |         &amp;mut self.foos.first_mut().unwrap().data_mut()\n22 | |     }\n   | |_____^\n</code></pre>\n\n<p>I didn't want to have the <code>data</code> field public, so I tried to use a getter. I know getters are not working well in Rust, and properly encapsulated collection shouldn't have a mutable <code>get</code>, but this is some code I'm porting from a different language, so I'm not performing any refactoring at the moment (just porting and covering with tests). What's the lifetime issue there?  </p>\n"}, {"tags": ["csv", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1532695430, "last_edit_date": 1532695430, "creation_date": 1532445057, "answer_id": 51502087, "question_id": 51501313, "link": "https://stackoverflow.com/questions/51501313/how-do-i-update-a-field-in-a-csvbyterecord/51502087#51502087", "title": "How do I update a field in a csv::ByteRecord?", "body": "<p>You <em>don't</em>. A <code>ByteRecord</code> (and a <code>StringRecord</code> by extension) store <a href=\"https://github.com/BurntSushi/rust-csv/blob/1.0.0/src/byte_record.rs#L158-L159\" rel=\"nofollow noreferrer\">all of the field's data in a single tightly-packed <code>Vec&lt;u8&gt;</code></a>. You cannot easily access this <code>Vec</code> to modify it and the currently exposed mutation methods are too coarse to be useful in this case. You could remove fields from the end of the record or clear the entire thing, but not replace one field.</p>\n\n<p>Instead, you can create a brand new <code>ByteRecord</code> when needed and output that:</p>\n\n<pre><code>for result in rdr.byte_records() {\n    let input_record = result?;\n\n    let output_record = if &amp;input_record[0] == b\"05V\" &amp;&amp; &amp;input_record[4] == b\"4\" {\n        input_record\n            .into_iter()\n            .enumerate()\n            .map(|(i, v)| if i == 4 { b\"2\" } else { v })\n            .collect()\n    } else {\n        input_record\n    };\n    wtr.write_byte_record(&amp;output_record);\n}\n</code></pre>\n"}], "owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 1, "accepted_answer_id": 51502087, "answer_count": 1, "score": 1, "last_activity_date": 1532695430, "creation_date": 1532442891, "last_edit_date": 1532444102, "question_id": 51501313, "link": "https://stackoverflow.com/questions/51501313/how-do-i-update-a-field-in-a-csvbyterecord", "title": "How do I update a field in a csv::ByteRecord?", "body": "<p>I am trying to parse a CSV file and if a certain field matches, update a certain field with a different value, but I'm not sure on how to do this. </p>\n\n<p>My code: </p>\n\n<pre><code>extern crate csv;\n\nuse std::error::Error;\n\nfn run(file: &amp;str, output: &amp;str) -&gt; Result&lt;(), Box&lt;Error&gt;&gt; {\n    let mut rdr = csv::Reader::from_path(file)?;\n    let mut wtr = csv::Writer::from_path(output)?;\n\n    wtr.write_record(rdr.byte_headers()?);\n    for result in rdr.byte_records() {\n        let mut record = result?;\n        if &amp;record[0] == \"05V\".as_bytes() &amp;&amp; &amp;record[4] == \"4\".as_bytes() {\n            // let record[4] = \"2\"; -&gt; Not sure how to update the field\n        }\n        wtr.write_byte_record(&amp;record);\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>How can I update the field if the record matches the conditions? </p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532431851, "post_id": 51495700, "comment_id": 89962755, "body": "Do you use Serde only for pretty print?"}, {"owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532432609, "post_id": 51495700, "comment_id": 89963251, "body": "No, it&#39;s widely used. Here I just want to demo the problem I faced:)"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1532433007, "post_id": 51495700, "comment_id": 89963533, "body": "You&#39;re trying to deserialize to an array, but you&#39;re actually returning a <code>Vec</code>."}, {"owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532436332, "post_id": 51495700, "comment_id": 89965855, "body": "Could you please help to fix? @Boiethios"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532436724, "post_id": 51495700, "comment_id": 89966131, "body": "If this is actuelly the problem you are facing, this is a duplicate of <a href=\"https://stackoverflow.com/questions/25428920/how-to-get-a-slice-as-an-array-in-rust\" title=\"how to get a slice as an array in rust\">stackoverflow.com/questions/25428920/&hellip;</a>"}, {"owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532437038, "post_id": 51495700, "comment_id": 89966351, "body": "No, not this problem. I want pretty print for ([u8; 32])."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532437541, "post_id": 51495700, "comment_id": 89966789, "body": "If you want pretty print for <code>[u8; 32]</code>, use <code>println!(&quot;{:?}&quot;, my_array)</code>"}, {"owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532437816, "post_id": 51495700, "comment_id": 89967073, "body": ":)  that&#39;s not a solution. this ([u8; 32]) could be a field of many other structures, I need use <code>serde_jason</code> for all of them. And [u8; 32] should be printed as hex."}, {"owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532441461, "post_id": 51495700, "comment_id": 89969846, "body": "I work out a version which works for <code>to_hex()</code> direction, the code is <a href=\"http://play.integer32.com/?gist=05fef4638189f1bf860920bd623149da&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">here</a>.  But the reverse direction <code>from_hex()</code> still need help ~"}], "owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 844, "favorite_count": 2, "answer_count": 0, "score": 0, "last_activity_date": 1532475239, "creation_date": 1532426185, "last_edit_date": 1532475239, "question_id": 51495700, "link": "https://stackoverflow.com/questions/51495700/rust-serde-json-serializer-for-pretty-print-of-u8-32", "title": "Rust serde_json serializer for pretty print of [u8; 32]", "body": "<p>I want to get the pretty print in Rust for <code>[u8; 32]</code>, with <code>serde_json</code>, but can't make it work. I know if the following struct is a <code>(Vec&lt;u8&gt;)</code>, that works, as <a href=\"http://play.integer32.com/?gist=6c3ac478da9e3223787c82c530bda54c&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">this playground code</a>. But I have to keep the ([u8; 32]) struct because it's everywhere in an existing project. Could somebody help to make this work for array instead of Vec ?</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\nstruct OneFactor(\n    #[serde(\n        serialize_with = \"buffer_to_hex\",\n        deserialize_with = \"hex_to_buffer\"\n    )]\n    [u8; 32],\n);\n\n/// Serializes `buffer` to a lowercase hex string.\npub fn buffer_to_hex&lt;T, S&gt;(buffer: &amp;T, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\nwhere\n    T: AsRef&lt;[u8]&gt;,\n    S: Serializer,\n{\n    serializer.serialize_str(&amp;buffer.as_ref().to_hex())\n}\n\n/// Deserializes a lowercase hex string to a `Vec&lt;u8&gt;`.\npub fn hex_to_buffer&lt;'de, D&gt;(deserializer: D) -&gt; Result&lt;Vec&lt;u8&gt;, D::Error&gt;\nwhere\n    D: Deserializer&lt;'de&gt;,\n{\n    use serde::de::Error;\n    String::deserialize(deserializer)\n        .and_then(|string| Vec::from_hex(&amp;string).map_err(|err| Error::custom(err.to_string())))\n}\n\nfn print_an_factor() -&gt; Result&lt;(), Error&gt; {\n    let factor = OneFactor([\n        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n        26, 27, 28, 29, 30, 31, 32,\n    ]);\n\n    // Serialize it to a JSON string.\n    let j = serde_json::to_string_pretty(&amp;factor)?;\n\n    // Print, write to a file, or send to an HTTP server.\n    println!(\"{}\", j);\n\n    Ok(())\n}\n\nfn main() {\n    print_an_factor().unwrap();\n}\n</code></pre>\n\n<p>And I put the full code into the <a href=\"http://play.integer32.com/?gist=46d65de7241e1b100441b2ebb90b79bd&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Rust Playground</a> for your easier check.</p>\n\n<p><strong>[Update]</strong></p>\n\n<p>I work out a version which works for <code>to_hex()</code> direction, the code is <a href=\"http://play.integer32.com/?gist=05fef4638189f1bf860920bd623149da&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">here</a>. But the reverse direction <code>from_hex()</code> still need help ~</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 159, "user_id": 9993738, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-S0FY9K1Pg8E/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq22coa6Y-2JAZiVqDMVGiOv6SIH8w/mo/photo.jpg?sz=128", "display_name": "Vergil", "link": "https://stackoverflow.com/users/9993738/vergil"}, "reply_to_user": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "edited": false, "score": 0, "creation_date": 1532420196, "post_id": 51493563, "comment_id": 89955883, "body": "Maybe wrap the Dice in a Result so I can return either a valid Dice or an Err?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532426038, "post_id": 51493563, "comment_id": 89959232, "body": "Note that you do not need the retval variable. Just put the <code>if</code>/<code>else</code> stuff: <code>if my_bool { Dice {...} } else { Dice {...} }</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1532437336, "post_id": 51493563, "comment_id": 89966601, "body": "Please do not put <i>answers</i> in your <i>question</i>. You are welcome to answer your own question below and even accept that answer. This is better because it allows additional answers and those answers to be voted on by the community."}], "answers": [{"comments": [{"owner": {"reputation": 159, "user_id": 9993738, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-S0FY9K1Pg8E/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq22coa6Y-2JAZiVqDMVGiOv6SIH8w/mo/photo.jpg?sz=128", "display_name": "Vergil", "link": "https://stackoverflow.com/users/9993738/vergil"}, "edited": false, "score": 0, "creation_date": 1532420988, "post_id": 51493858, "comment_id": 89956278, "body": "The idea is the user should be able to give custom values for the faces. So I want a d4 that has &#39;[1,20, 40, 60]&#39; this should be able to support this. Your code would give &#39;[1,2,3,4]&#39;."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532423304, "post_id": 51493858, "comment_id": 89957685, "body": "I would change the error to something like <code>struct DiceError { expected: usize, actual: usize }</code>"}], "tags": [], "owner": {"reputation": 15864, "user_id": 1870153, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/juCKe.png?s=128&g=1", "display_name": "ljedrz", "link": "https://stackoverflow.com/users/1870153/ljedrz"}, "is_accepted": false, "score": 3, "last_activity_date": 1532421682, "last_edit_date": 1532421682, "creation_date": 1532420585, "answer_id": 51493858, "question_id": 51493563, "link": "https://stackoverflow.com/questions/51493563/how-to-ensure-my-function-will-receive-a-vec-of-valid-length/51493858#51493858", "title": "How to ensure my function will receive a Vec of valid length?", "body": "<p>You should use a <code>Result</code> to be able to account for possible erroneous inputs:</p>\n\n<pre><code>use std::cmp::Ordering;\n\n#[derive(Clone, Copy)]\npub enum DiceType {\n    D2,\n    D4,\n    D6,\n    D8,\n    D10,\n    D10P,\n    D12,\n    D20\n}\n\npub struct Dice {\n    dice_type: DiceType,\n    // no need for face_count, it's a method of DiceType\n    face_values: Vec&lt;u32&gt;\n}\n\n// an error for invalid face value inputs\nenum DiceError {\n    TooFewFaceValues,\n    TooManyFaceValues\n}\n\nimpl DiceType {\n    fn face_count(&amp;self) -&gt; usize {\n        match self {\n            DiceType::D2 =&gt; 2,\n            DiceType::D4 =&gt; 4,\n            _            =&gt; unimplemented!() // TODO: account for all the other variants\n        }\n    }\n}\n\nimpl Dice {\n    fn new(dice_type: DiceType, face_values: &amp;[u32]) -&gt; Result&lt;Self, DiceError&gt; {\n        match face_values.len().cmp(&amp;dice_type.face_count()) {\n            Ordering::Less    =&gt; Err(DiceError::TooFewFaceValues),\n            Ordering::Greater =&gt; Err(DiceError::TooManyFaceValues),\n            Ordering::Equal   =&gt; Ok(\n                Dice {\n                    dice_type,\n                    face_values: Vec::from(face_values)\n                }\n            )\n        }\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 4, "creation_date": 1532427011, "post_id": 51495485, "comment_id": 89959803, "body": "Note that this is a general mantra in functional programing (from which Rust borrows many things): <i>do not permit to represent invalid data</i>."}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 7, "last_activity_date": 1532437647, "last_edit_date": 1532437647, "creation_date": 1532425620, "answer_id": 51495485, "question_id": 51493563, "link": "https://stackoverflow.com/questions/51493563/how-to-ensure-my-function-will-receive-a-vec-of-valid-length/51495485#51495485", "title": "How to ensure my function will receive a Vec of valid length?", "body": "<p>You should use an enum that has variants with corresponding arrays of a fixed length:</p>\n\n<pre><code>#[derive(Clone, Copy)]\npub enum Dice {\n    D2([u32; 2]),\n    D4([u32; 4]),\n    D6([u32; 6]),\n    D8([u32; 8]),\n    D10([u32; 10]),\n    D10P([u32; 10]),\n    D12([u32; 12]),\n    D20([u32; 20]),\n}\n</code></pre>\n\n<p>Then you cannot have invalid value:</p>\n\n<pre><code>fn take_a_dice(_dice: Dice) {\n    //\n}\n\nfn main() {\n    take_a_dice(Dice::D4([1, 2, 4, 8]));\n}\n</code></pre>\n"}], "owner": {"reputation": 159, "user_id": 9993738, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-S0FY9K1Pg8E/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq22coa6Y-2JAZiVqDMVGiOv6SIH8w/mo/photo.jpg?sz=128", "display_name": "Vergil", "link": "https://stackoverflow.com/users/9993738/vergil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "accepted_answer_id": 51495485, "answer_count": 2, "score": 1, "last_activity_date": 1532437647, "creation_date": 1532419595, "last_edit_date": 1532437604, "question_id": 51493563, "link": "https://stackoverflow.com/questions/51493563/how-to-ensure-my-function-will-receive-a-vec-of-valid-length", "title": "How to ensure my function will receive a Vec of valid length?", "body": "<p>Is it possible to specify that a function's <code>Vec</code> argument has a certain length? Consider the possible values of a dice: </p>\n\n<pre><code>fn new(d_type: DiceType, face_vals: /*Vec&lt;u32&gt; with len() == 2/4/6/8/10/12/20*/) -&gt; Dice {...}\n</code></pre>\n\n<p>I am writing something that lets you create a polyhedral dice (usual RPG sizes: 2, 4, 6, etc.) with specified face values. I remember that when you call a Rust function without the <code>unsafe</code> keyword the users should be able to call it however they like without fear of failure so simply checking for validity in the function and returning some <strong>\"you messed up\"</strong> error is bad Rust.</p>\n\n<p>How can I achieve this?</p>\n\n<p>This is a part of the code I am working on:</p>\n\n<pre><code>pub enum DiceType {\n    D2,\n    D4,\n    D6,\n    D8,\n    D10,\n    D10P,\n    D12,\n    D20,\n}\n\npub struct Dice {\n    dice_type: DiceType,\n    face_count: usize,\n    face_values: Vec&lt;u32&gt;,\n}\n\nimpl Dice {\n    pub fn new(d_type: DiceType, face_vals: Vec&lt;u32&gt;) -&gt; Dice {\n        let mut retval;\n\n        //Reject if not a valid dice type 2, 4, 6, 8, 10, 12, or 20\n        //I really shouldn't be doing this should I?\n        if Dice::valid_dice(d_type, face_vals) {\n            retval = Dice {\n                dice_type: d_type,\n                face_count: face_vals.len(),\n                face_values: face_vals,\n            }\n        } else {\n            //User wont know they got an error\n            //Really shouldn't need to go here. How do I avoid needing\n            //error checking?\n            retval = Dice {\n                dice_type: None,\n                face_count: 2,\n                face_values: face_vals,\n            };\n        }\n\n        retval\n    }\n}\n</code></pre>\n\n<p><strong>Answer</strong></p>\n\n<p>The accepted answer shows a good use of results to return a value but the response got me thinking on how to make the code more flexible while still having a hard cap that could guarantee overflow safety for a single roll so I cut out a bunch of code and came up with the following which should let you generate any dice roll between 1-10,000 per roll with multipliers for extra rolls.</p>\n\n<pre><code>const MAX_FACE_VALUE: u32 = 100000;\nconst MAX_FACE_COUNT: u32 = 10000;\nconst MAX_ROLL_COUNT: u32 = 9999;\n\npub struct Dice {\n    face_count: usize,\n    face_values: Vec&lt;u32&gt;,\n}\n\nimpl Dice {\n    pub fn new(mut face_vals: Vec&lt;u32&gt;) -&gt; Self {\n        //User may not have values greater than 100,000\n        //Index access is safe since we use the for _ in _\n        for x in 0..face_vals.len() {\n            if face_vals[x] &gt; MAX_FACE_VALUE {\n                //Enforce the limit\n                face_vals[x] = MAX_FACE_VALUE;\n            }\n        }\n\n        //User may not have more than 10,000 faces\n        if face_vals.len() &gt; MAX_FACE_COUNT as usize {\n            let new_vals: Vec&lt;u32&gt; = face_vals.split_off(MAX_FACE_COUNT as usize);\n            Dice {\n                face_count: MAX_FACE_COUNT as usize,\n                face_values: new_vals,\n            }\n        } else if face_vals.len() == 0 {\n            //No 0 sided dice allowed\n            Dice {\n                face_count: 1,\n                face_values: vec![1],\n            }\n        } else {\n            //Normal range\n            Dice {\n                face_count: face_vals.len(),\n                face_values: face_vals,\n            }\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "ownership"], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 8, "last_activity_date": 1532393193, "creation_date": 1532393193, "answer_id": 51488972, "question_id": 51488888, "link": "https://stackoverflow.com/questions/51488888/since-there-can-only-be-one-owner-in-rust-does-that-mean-shallow-copies-arent/51488972#51488972", "title": "Since there can only be one owner in Rust, does that mean shallow copies aren&#39;t possible?", "body": "<p>Rust uses distinct types to represent different degrees of ownership (single ownership, shared ownership or borrowed). Making a shallow copy implies that the copy will <em>share</em> some data with the original. This means that we must use types <em>that support sharing</em>.</p>\n\n<p>One way to make a shallow copy is by copying shared references. For example, consider this program:</p>\n\n<pre><code>#[derive(Clone, Debug)]\nstruct Greetings&lt;'a&gt; {\n    hello: &amp;'a str,\n    goodbye: &amp;'a str,\n}\n\nfn main() {\n    let greetings = Greetings {\n        hello: \"Hello!\",\n        goodbye: \"Goodbye!\",\n    };\n    let new_greetings = greetings.clone();\n    println!(\"{:?}\", new_greetings);\n}\n</code></pre>\n\n<p>When we clone <code>greetings</code>, we don't actually clone the strings; we only \"clone\" the references (which are just pointers). The compiler uses the lifetime parameter on <code>Greetings</code> to ensure that instances of <code>Greetings</code> don't outlive the strings stored inside it.</p>\n\n<p>Another way to make a shallow copy is by storing an owned object in a <code>Rc</code> or <code>Arc</code> smart pointer and cloning that pointer. For example:</p>\n\n<pre><code>use std::rc::Rc;\n\n#[derive(Clone, Debug)]\nstruct Greetings {\n    hello: Rc&lt;String&gt;,\n    goodbye: Rc&lt;String&gt;,\n}\n\nfn main() {\n    let greetings = Greetings {\n        hello: Rc::new(\"Hello!\".into()),\n        goodbye: Rc::new(\"Goodbye!\".into()),\n    };\n    let new_greetings = greetings.clone();\n    println!(\"{:?}\", new_greetings);\n}\n</code></pre>\n\n<p>When we clone <code>greetings</code>, the <code>Rc</code> objects are also cloned. When an <code>Rc</code> is cloned, the reference counter is incremented, but the object managed by the <code>Rc</code> is not cloned; rather, both the original and the cloned <code>Rc</code> objects refer to the same <code>String</code> object.</p>\n"}], "owner": {"reputation": 1113, "user_id": 4289914, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/4de669c2747d8e32bc663fa98f3925ae?s=128&d=identicon&r=PG&f=1", "display_name": "Blubber", "link": "https://stackoverflow.com/users/4289914/blubber"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 0, "accepted_answer_id": 51488972, "answer_count": 1, "score": 1, "last_activity_date": 1532394041, "creation_date": 1532392288, "last_edit_date": 1532394041, "question_id": 51488888, "link": "https://stackoverflow.com/questions/51488888/since-there-can-only-be-one-owner-in-rust-does-that-mean-shallow-copies-arent", "title": "Since there can only be one owner in Rust, does that mean shallow copies aren&#39;t possible?", "body": "<p>I'm trying to understand the ownership model.  Since there can only be one owner in Rust, does that mean shallow copies aren't possible?  Is there something that is similar to a shallow copy?  I'm guessing you could do something with references, but that would force you to use a different type?</p>\n"}, {"tags": ["rust", "generator"], "answers": [{"comments": [{"owner": {"reputation": 4020, "user_id": 388739, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/vqsVi.jpg?s=128&g=1", "display_name": "Mark LeMoine", "link": "https://stackoverflow.com/users/388739/mark-lemoine"}, "edited": false, "score": 0, "creation_date": 1532554867, "post_id": 51489069, "comment_id": 90024714, "body": "Thank you! Explaining the expanded enum made it very clear what was happening. Indeed, I&#39;ve encountered the same issue when trying to make recursive structures manually, and also fixed them by introducing <code>Box</code>."}, {"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1570894462, "post_id": 51489069, "comment_id": 103064637, "body": "Just came here from a different question, and this doesn&#39;t compile anymore, with an error, probably since <a href=\"https://github.com/rust-lang/rust/pull/56074\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/56074</a>  &quot;error[E0720]: opaque type expands to a recursive type&quot;"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 4, "last_activity_date": 1570907530, "last_edit_date": 1570907530, "creation_date": 1532394184, "answer_id": 51489069, "question_id": 51488432, "link": "https://stackoverflow.com/questions/51488432/recursive-generator-in-rust-causing-recursive-type-error-workaround/51489069#51489069", "title": "Recursive generator in Rust causing &quot;recursive type&quot; error; workaround?", "body": "<p>When generators yield, they need to store the local variables that are in scope and other values that live beyond the <code>yield</code> expression. Generators are enums with one variant for the initial state, one variant for each <code>yield</code> expression and one stateless variant for the \"done\" state. The generator defined in <code>iter_over</code> has a variant (for the <code>yield i</code>) that must store another instance of the same generator type (indirectly, because it's wrapped in an <code>It</code>). Simplified, you end up with a type like this:</p>\n\n<pre><code>enum State&lt;'a&gt; {\n    Seq(std::slice::Iter&lt;'a, Value&gt;, State&lt;'a&gt;),\n    Done,\n}\n</code></pre>\n\n<p>This type isn't valid, and the compiler tells us why and how to fix it:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0072]: recursive type `State` has infinite size\n  --&gt; src/main.rs:60:1\n   |\n60 | enum State&lt;'a&gt; {\n   | ^^^^^^^^^^^^^^ recursive type has infinite size\n61 |     Seq(std::slice::Iter&lt;'a, Value&gt;, State&lt;'a&gt;),\n   |                                      --------- recursive without indirection\n   |\n   = help: insert indirection (e.g., a `Box`, `Rc`, or `&amp;`) at some point to make `State` representable\n</code></pre>\n\n<p>We can apply the advice given by the compiler to your situation: we can wrap the inner iterator in a <code>Box</code> to avoid the infinite size problem.</p>\n\n<pre><code>impl Value {\n    pub fn iter_over&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = &amp;'a String&gt; {\n        let closure = move || {\n            match *self {\n                Value::Nil =&gt; {},\n                Value::Str(ref s) =&gt; { yield s; },\n                Value::Seq(ref vs) =&gt; {\n                    for v in vs {\n                        // This Box is necessary to give the generator a finite size.\n                        for i in Box::new(v.iter_over()) {\n                            yield i;\n                        }\n                    }\n                },\n            }\n        };\n\n        gen_to_iter(closure)\n    }\n}\n</code></pre>\n\n<hr>\n\n<p><em>UPDATE:</em> A <a href=\"https://github.com/rust-lang/rust/pull/56074\" rel=\"nofollow noreferrer\">breaking change</a> causes the above solution to no longer work. It's no longer sufficient to box the iterator. It's an error for pretty much the same reason <code>type T = Box&lt;T&gt;;</code> is invalid, even though <code>struct T(Box&lt;T&gt;);</code> is valid; only named types can be recursive. To solve this, we must hide the type behind a trait object. Boxing is still necessary; the generator must own the inner iterator, so we can't use a reference here.</p>\n\n<pre><code>impl Value {\n    pub fn iter_over&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = &amp;'a String&gt; {\n        let closure = move || {\n            match *self {\n                Value::Nil =&gt; {},\n                Value::Str(ref s) =&gt; { yield s; },\n                Value::Seq(ref vs) =&gt; {\n                    for v in vs {\n                        // An `impl trait` type cannot refer to itself, even with indirection.\n                        // https://github.com/rust-lang/rust/pull/56074#issuecomment-442982242\n                        let iter = Box::new(v.iter_over()) as Box&lt;dyn Iterator&lt;Item = &amp;'a String&gt;&gt;;\n                        for i in iter {\n                            yield i;\n                        }\n                    }\n                },\n            }\n        };\n\n        gen_to_iter(closure)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 4020, "user_id": 388739, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/vqsVi.jpg?s=128&g=1", "display_name": "Mark LeMoine", "link": "https://stackoverflow.com/users/388739/mark-lemoine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 366, "favorite_count": 1, "accepted_answer_id": 51489069, "answer_count": 1, "score": 1, "last_activity_date": 1570907530, "creation_date": 1532388279, "last_edit_date": 1570906955, "question_id": 51488432, "link": "https://stackoverflow.com/questions/51488432/recursive-generator-in-rust-causing-recursive-type-error-workaround", "title": "Recursive generator in Rust causing &quot;recursive type&quot; error; workaround?", "body": "<p>I have a construct of the form:</p>\n\n<pre><code>pub enum Value {\n    Nil,\n    Str(String),\n    Seq(Vec&lt;Value&gt;),\n}\n</code></pre>\n\n<p>A <code>Value</code> is either null, a string, or a vector of other <code>Value</code>s, which can then in turn be any of the three options.</p>\n\n<p>I'd like to make a method that lazily iterates over each <code>String</code> in a <code>Value</code>, respecting nesting. My first attempt looks something like this:</p>\n\n<pre><code>#![feature(generators)]\n#![feature(generator_trait)]\n\nuse std::ops::{Generator, GeneratorState};\nuse std::pin::Pin;\n\nfn gen_to_iter&lt;G&gt;(g: G) -&gt; impl Iterator&lt;Item = G::Yield&gt;\nwhere\n    G: Generator&lt;Return = ()&gt; + Unpin,\n{\n    struct It&lt;G&gt;(G);\n\n    impl&lt;G: Generator&lt;Return = ()&gt; + Unpin&gt; Iterator for It&lt;G&gt; {\n        type Item = G::Yield;\n\n        fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n            match Pin::new(&amp;mut self.0).resume() {\n                GeneratorState::Yielded(y) =&gt; Some(y),\n                GeneratorState::Complete(()) =&gt; None,\n            }\n        }\n    }\n\n    It(g)\n}\n\npub enum Value {\n    Nil,\n    Str(String),\n    Seq(Vec&lt;Value&gt;),\n}\n\nimpl Value {\n    pub fn iter_over&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = &amp;'a String&gt; {\n        let closure = move || match *self {\n            Value::Nil =&gt; {}\n            Value::Str(ref s) =&gt; {\n                yield s;\n            }\n            Value::Seq(ref vs) =&gt; {\n                for v in vs {\n                    for i in v.iter_over() {\n                        yield i;\n                    }\n                }\n            }\n        };\n\n        gen_to_iter(closure)\n    }\n}\n\nfn main() {\n    let val = Value::Seq(vec![Value::Str(\"test\".to_string())]);\n\n    for s in val.iter_over() {\n        println!(\"{}\", s);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=ceb1be1e2c40dc34ad7b29adf8a0363c\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>When running the above code, I get a compiler error about a recursive type, since I'm calling <code>iter_over</code> inside another call to <code>iter_over</code>:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0720]: opaque type expands to a recursive type\n  --&gt; src/main.rs:34:39\n   |\n34 |     pub fn iter_over&lt;'a&gt;(&amp;'a self) -&gt; impl Iterator&lt;Item = &amp;'a String&gt; {\n   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expands to a recursive type\n   |\n   = note: expanded type is `gen_to_iter::It&lt;[generator@src/main.rs:35:23: 47:10 self:&amp;'a Value for&lt;'r, 's, 't0, 't1, 't2, 't3, 't4, 't5, 't6, 't7, 't8, 't9, 't10, 't11, 't12, 't13, 't14, 't15, 't16, 't17&gt; {&amp;'r Value, Value, &amp;'s std::string::String, &amp;'t0 std::string::String, (), &amp;'t1 std::vec::Vec&lt;Value&gt;, fn(&amp;'t2 std::vec::Vec&lt;Value&gt;) -&gt; &lt;&amp;'t2 std::vec::Vec&lt;Value&gt; as std::iter::IntoIterator&gt;::IntoIter {&lt;&amp;'t2 std::vec::Vec&lt;Value&gt; as std::iter::IntoIterator&gt;::into_iter}, &amp;'t3 std::vec::Vec&lt;Value&gt;, std::slice::Iter&lt;'t4, Value&gt;, std::slice::Iter&lt;'t5, Value&gt;, &amp;'t6 Value, &amp;'t7 Value, fn(impl std::iter::Iterator) -&gt; &lt;impl std::iter::Iterator as std::iter::IntoIterator&gt;::IntoIter {&lt;impl std::iter::Iterator as std::iter::IntoIterator&gt;::into_iter}, &amp;'t9 Value, &amp;'t10 Value, impl std::iter::Iterator, impl std::iter::Iterator, impl std::iter::Iterator, &amp;'t14 std::string::String, &amp;'t15 std::string::String, &amp;'t16 std::string::String, &amp;'t17 std::string::String, ()}]&gt;`\n</code></pre>\n\n<p>Aside from abandoning a lazy approach and just using vectors, I can't seem to figure out a workaround. What are some potential avenues I can take here?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1532376593, "post_id": 51486473, "comment_id": 89942090, "body": "This is only suitable on the nightly compiler."}, {"owner": {"reputation": 502, "user_id": 3298826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d80d437d6d9e6b9bc7835a7307792c19?s=128&d=identicon&r=PG", "display_name": "H2O", "link": "https://stackoverflow.com/users/3298826/h2o"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532376651, "post_id": 51486473, "comment_id": 89942121, "body": "Oh interesting did not even consider that this might be nightly only."}, {"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1532377367, "post_id": 51486473, "comment_id": 89942464, "body": "@H2O Thanks and sorry for my slow reply! Sadly, that doesn&#39;t help me for a strange reason: it doesn&#39;t work with <code>--crate-type=lib</code>. But my file doesn&#39;t have a <code>main</code> function, so I need <code>--crate-type=lib</code>, right? I also updated the question. (edit: nightly only answers are fine!)"}, {"owner": {"reputation": 11007, "user_id": 683710, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/NNKIH.jpg?s=128&g=1", "display_name": "Nordl&#246;w", "link": "https://stackoverflow.com/users/683710/nordl%c3%b6w"}, "edited": false, "score": 0, "creation_date": 1596375421, "post_id": 51486473, "comment_id": 111785843, "body": "Why doesn&#39;t <code>rustc -Z no-codegen rust.rs</code> still not work on Rust stable when it works on nightly?"}], "tags": [], "owner": {"reputation": 502, "user_id": 3298826, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d80d437d6d9e6b9bc7835a7307792c19?s=128&d=identicon&r=PG", "display_name": "H2O", "link": "https://stackoverflow.com/users/3298826/h2o"}, "is_accepted": false, "score": 2, "last_activity_date": 1532376346, "creation_date": 1532376346, "answer_id": 51486473, "question_id": 51485765, "link": "https://stackoverflow.com/questions/51485765/run-rustc-to-check-a-program-without-generating-any-files/51486473#51486473", "title": "Run `rustc` to check a program without generating any files", "body": "<p>You can just skip the <code>--emit</code> flag.</p>\n\n<p>The final command would then be: <code>rustc -Z no-codegen rust.rs</code></p>\n"}, {"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 2, "last_activity_date": 1546249326, "creation_date": 1546249326, "answer_id": 53985912, "question_id": 51485765, "link": "https://stackoverflow.com/questions/51485765/run-rustc-to-check-a-program-without-generating-any-files/53985912#53985912", "title": "Run `rustc` to check a program without generating any files", "body": "<p>To quote <a href=\"https://github.com/flycheck/flycheck/issues/1497#issuecomment-414275379\" rel=\"nofollow noreferrer\">my own GitHub comment</a> about this very question, there are a few options for stable Rust:</p>\n\n<ul>\n<li><code>rustc --emit=mir -o /dev/null</code> seems to work in 1.18 and newer, writing nothing. (<code>--emit=mir</code> is the only helpful <code>--emit</code> option\u2014the others try to create silly files like <code>/dev/null.foo0.rcgu.o</code>, except <code>--emit=dep-info</code>, which does no checking.)</li>\n<li><code>rustc -C extra-filename=-tmp -C linker=true</code> (i.e. use <code>/bin/true</code> as a \u201clinker\u201d) seems to work in all versions, writing some intermediate files but cleaning them up.</li>\n<li><code>rustc --out-dir=&lt;new empty temporary directory&gt;</code> is less clever and therefore perhaps less likely to break?</li>\n</ul>\n\n<p>Note that linker errors, if any, will not be found by the first two options (nor by the nightly-only <code>-Zno-codegen</code> option).</p>\n"}], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 218, "favorite_count": 0, "answer_count": 2, "score": 6, "last_activity_date": 1546249326, "creation_date": 1532373396, "last_edit_date": 1532377318, "question_id": 51485765, "link": "https://stackoverflow.com/questions/51485765/run-rustc-to-check-a-program-without-generating-any-files", "title": "Run `rustc` to check a program without generating any files", "body": "<p>As <code>cargo check</code> shows, it's often useful to check if your program is well-formed without actually generating code (an often pretty time-consuming task). I want to check a single (library) Rust file with <code>rustc</code> directly (I cannot use Cargo!).</p>\n\n<p><code>cargo check</code> apparently works by calling this:</p>\n\n<pre><code>rustc --emit=metadata -Z no-codegen\n</code></pre>\n\n<p>This only emits metadata, a <code>.rmeta</code> file. Cargo actually needs that to check crates dependent on the checked crate. In my case I really don't need the metadata file. </p>\n\n<p>I tried the following:</p>\n\n<pre><code>rustc --crate-type=lib --emit=\nrustc --crate-type=lib --emit=nothing\n</code></pre>\n\n<p>But both didn't work. I use <code>--crate-type=lib</code> because my file doesn't have a <code>main</code> function. I need a platform-independent solution (I don't just want to use it on my machine, but use it in a public script).</p>\n\n<p><strong>How do I make <code>rustc</code> not write a single file?</strong></p>\n"}, {"tags": ["rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532372164, "post_id": 51485466, "comment_id": 89940063, "body": "FWIW, in this case you could just use <a href=\"https://play.rust-lang.org/?gist=7d8030b979eaa2cdb42def7704124479&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">impl trait and <code>Either</code></a>."}, {"owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532374012, "post_id": 51485466, "comment_id": 89940899, "body": "Thanks @Shepmaster! That&#39;s exactly what I wanted. That&#39;s much better than boxing."}], "tags": [], "owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "is_accepted": false, "score": 1, "last_activity_date": 1532372043, "last_edit_date": 1532372043, "creation_date": 1532371924, "answer_id": 51485466, "question_id": 51485410, "link": "https://stackoverflow.com/questions/51485410/unable-to-tokiorun-a-boxed-future-because-the-trait-bound-send-is-not-satisfie/51485466#51485466", "title": "Unable to tokio::run a boxed Future because the trait bound Send is not satisfied", "body": "<p>I realized that I need to specify in the return type to <code>Foo</code> that the future is <code>Send</code>. This compiles:</p>\n\n<pre><code>extern crate tokio;\n\nuse std::time::{Duration, Instant};\nuse tokio::prelude::*;\nuse tokio::timer;\n\nfn main() {\n    tokio::run(foo(12));\n}\n\nfn foo(x: i32) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt; + Send&gt; { // note the + Send at the end of this line\n    if x == 0 {\n        Box::new(\n            timer::Delay::new(Instant::now() + Duration::from_secs(5))\n                .and_then(|_| Ok(()))\n                .map_err(|_| ()),\n        )\n    } else {\n        Box::new(future::result(Ok(())))\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3008, "user_id": 3204951, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/8aca84582c72a22e9cb5245571103d92?s=128&d=identicon&r=PG", "display_name": "Nate Mara", "link": "https://stackoverflow.com/users/3204951/nate-mara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1556, "favorite_count": 0, "closed_date": 1532372008, "answer_count": 1, "score": 0, "last_activity_date": 1532372249, "creation_date": 1532371681, "last_edit_date": 1532371962, "question_id": 51485410, "link": "https://stackoverflow.com/questions/51485410/unable-to-tokiorun-a-boxed-future-because-the-trait-bound-send-is-not-satisfie", "closed_reason": "Duplicate", "title": "Unable to tokio::run a boxed Future because the trait bound Send is not satisfied", "body": "<p>I have a function that should optionally run a future or do nothing, depending on parameters. I tried putting a <code>Box</code> around the two futures that will be returned, a <code>tokio::prelude::future::Done&lt;Item=(), Error=()&gt;</code> that immediately resolves to <code>Ok(())</code>, and a <code>tokio::timer::Delay</code> that I'm using <code>and_then</code> and <code>map_err</code> to turn both the <code>Item</code> and <code>Error</code> to <code>()</code>. This doesn't seem to work for me when I try to run the futures with <code>tokio::run</code>.</p>\n\n<pre><code>extern crate tokio;\n\nuse std::time::{Duration, Instant};\nuse tokio::prelude::*;\nuse tokio::timer;\n\nfn main() {\n    tokio::run(foo(12));\n}\n\nfn foo(x: i32) -&gt; Box&lt;Future&lt;Item = (), Error = ()&gt;&gt; {\n    if x == 0 {\n        Box::new(\n            timer::Delay::new(Instant::now() + Duration::from_secs(5))\n                .and_then(|_| Ok(()))\n                .map_err(|_| ()),\n        )\n    } else {\n        Box::new(future::result(Ok(())))\n    }\n}\n</code></pre>\n\n<p>This fails to compile with the following error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `tokio::prelude::Future&lt;Error=(), Item=()&gt;: std::marker::Send` is not satisfied\n --&gt; src/main.rs:8:5\n  |\n8 |     tokio::run(foo(12));\n  |     ^^^^^^^^^^ `tokio::prelude::Future&lt;Error=(), Item=()&gt;` cannot be sent between threads safely\n  |\n  = help: the trait `std::marker::Send` is not implemented for `tokio::prelude::Future&lt;Error=(), Item=()&gt;`\n  = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;tokio::prelude::Future&lt;Error=(), Item=()&gt;&gt;`\n  = note: required because it appears within the type `std::boxed::Box&lt;tokio::prelude::Future&lt;Error=(), Item=()&gt;&gt;`\n  = note: required by `tokio::run`\n</code></pre>\n\n<p>It appears that <code>Box&lt;Future...&gt;</code> does not implement <code>Send</code>, which doesn't make sense to me. Since the <code>Future</code> types that I'm returning both implement <code>Send</code>, it seems to me that the <code>Box</code> should, since <code>impl Send for Box&lt;T&gt; where T: Send</code> is an auto implement in the stdlib. What am I missing here?</p>\n"}, {"tags": ["rust", "borrow-checker", "borrowing"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1532365030, "post_id": 51483731, "comment_id": 89936556, "body": "The very similar question <a href=\"https://stackoverflow.com/questions/50891977/can-i-return-a-value-and-a-reference-to-it-from-a-function\" title=\"can i return a value and a reference to it from a function\">stackoverflow.com/questions/50891977/&hellip;</a> was marked as a duplicate of <a href=\"https://stackoverflow.com/questions/32300132/why-cant-i-store-a-value-and-a-reference-to-that-value-in-the-same-struct\" title=\"why cant i store a value and a reference to that value in the same struct\">stackoverflow.com/questions/32300132/&hellip;</a> (the answer is no, returning the value from a function doesn&#39;t grant a reference to its future location). Does this answer your question?"}, {"owner": {"reputation": 559, "user_id": 2443668, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/cb604271f259fd70183b1622682c2622?s=128&d=identicon&r=PG", "display_name": "FizzixNerd", "link": "https://stackoverflow.com/users/2443668/fizzixnerd"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532366323, "post_id": 51483731, "comment_id": 89937209, "body": "@trentcl perfect. Sorry for the duplicate."}], "owner": {"reputation": 559, "user_id": 2443668, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/cb604271f259fd70183b1622682c2622?s=128&d=identicon&r=PG", "display_name": "FizzixNerd", "link": "https://stackoverflow.com/users/2443668/fizzixnerd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 28, "favorite_count": 0, "closed_date": 1532365071, "answer_count": 0, "score": 1, "last_activity_date": 1532364568, "creation_date": 1532364568, "question_id": 51483731, "link": "https://stackoverflow.com/questions/51483731/constructing-with-borrowing-and-moving", "closed_reason": "Duplicate", "title": "Constructing with borrowing and moving", "body": "<p>The following code creates a struct holding a reference to a struct which is moved out of the function at the end. The borrow checker gets angry because, I suppose, moving something kills it's original location.  My question is: without changing the definitions of the structs, is it possible for me to construct a B and an A referencing that B inside another function, and then return them to the calling context?</p>\n\n<pre><code>#[derive(Debug)]\npub struct A&lt;'a&gt; {\n    pub b: &amp;'a B,\n}\n\nimpl&lt;'a&gt; A&lt;'a&gt; {\n    pub fn new(b: &amp;'a B) -&gt; A&lt;'a&gt; {\n        A { b }\n    }\n}\n\n#[derive(Debug)]\npub struct B {\n    pub x: i32,\n}\n\nfn nested&lt;'a&gt;() -&gt; (A&lt;'a&gt;, B) {\n    let x = 0;\n    let b = B { x };\n    let a = A::new(&amp;b);\n    (a, b)\n}\n\nfn main() {\n    let (a, b) = nested();\n    println!(\"{:?}\", a);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1532358448, "post_id": 51481860, "comment_id": 89932689, "body": "Is there a list of all compiler indications?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1532358642, "post_id": 51481860, "comment_id": 89932818, "body": "@Tim <a href=\"https://github.com/rust-lang/rust/blob/3b7720399a9006d9d7b89c251fa37ead46f9db7a/src/libsyntax/feature_gate.rs#L695-L1081\" rel=\"nofollow noreferrer\">are you looking for this</a>? The list changes over time."}, {"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 0, "creation_date": 1532358834, "post_id": 51481860, "comment_id": 89932962, "body": "It&#39;s at least a list of all currently available attributes, thank you!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1583243330, "last_edit_date": 1583243330, "creation_date": 1532357946, "answer_id": 51481860, "question_id": 51481551, "link": "https://stackoverflow.com/questions/51481551/what-does-automatically-derived-mean/51481860#51481860", "title": "What does #[automatically_derived] mean?", "body": "<p>It is an indication to the compiler that <a href=\"https://github.com/rust-lang/rust/blob/1.41.1/src/librustc_passes/liveness.rs#L360-L368\" rel=\"nofollow noreferrer\">the marked code should not be reported as unused</a>, among other things:</p>\n\n<pre><code>// Don't run unused pass for #[derive()]\nif let FnKind::Method(..) = fk {\n    let parent = ir.tcx.hir().get_parent_item(id);\n    if let Some(Node::Item(i)) = ir.tcx.hir().find(parent) {\n        if i.attrs.iter().any(|a| a.check_name(sym::automatically_derived)) {\n            return;\n        }\n    }\n}\n</code></pre>\n\n<p>It also applies to </p>\n\n<ul>\n<li><a href=\"https://github.com/rust-lang/rust/blob/1.41.1/src/librustc/middle/resolve_lifetime.rs#L1628-L1632\" rel=\"nofollow noreferrer\">ignoring single use lifetimes</a></li>\n</ul>\n"}], "owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 550, "favorite_count": 0, "accepted_answer_id": 51481860, "answer_count": 1, "score": 5, "last_activity_date": 1583243330, "creation_date": 1532357021, "last_edit_date": 1532357787, "question_id": 51481551, "link": "https://stackoverflow.com/questions/51481551/what-does-automatically-derived-mean", "title": "What does #[automatically_derived] mean?", "body": "<p>I found <code>#[automatically_derived]</code> in the <a href=\"https://github.com/serde-rs/serde/blob/4e54aaf7963c3580cc50b56842949b0ce6b3a997/serde_derive/src/ser.rs#L48\" rel=\"noreferrer\">serde-derive</a> crate when generating the implementations for the derived type:</p>\n\n<pre><code>quote! {\n    #[automatically_derived]\n    impl #impl_generics _serde::Serialize for #ident #ty_generics #where_clause {\n        fn serialize&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; _serde::export::Result&lt;__S::Ok, __S::Error&gt;\n        where\n            __S: _serde::Serializer,\n        {\n            #body\n        }\n    }\n}\n</code></pre>\n\n<p>What does this mean? When I should use this?</p>\n\n<p>I also found this in several expanded macros, but I couldn't find any description about this line.</p>\n"}, {"tags": ["data-structures", "rust", "recursive-type"], "comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 3, "creation_date": 1532348305, "post_id": 51478366, "comment_id": 89925530, "body": "I don&#39;t know enough about the compiler to explain why this is causing an infinite loop, but an aside: you should read <a href=\"http://cglab.ca/~abeinges/blah/too-many-lists/book/\" rel=\"nofollow noreferrer\"><i>&#39;Learning Rust With Entirely Too Many Linked Lists&#39;</i></a> if you haven&#39;t already! Linked lists are deceptively tricky to get right in Rust."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1532349019, "post_id": 51478366, "comment_id": 89925982, "body": "What\u2019s the meaning of the pair? <code>Box&lt;List&lt;Pair&lt;i32, T&gt;&gt;&gt;</code> seems like a weird type in <code>Cons</code>."}, {"owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1532349114, "post_id": 51478366, "comment_id": 89926052, "body": "@JoeClay thanks, I&#39;m still at the beginning stages of learning Rust, so this&#39;ll help a lot"}, {"owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1532349212, "post_id": 51478366, "comment_id": 89926128, "body": "@Ry- This is just a simplified example. I tried to port Haskell&#39;s <a href=\"https://hackage.haskell.org/package/fingertree\" rel=\"nofollow noreferrer\">FingerTrees</a> and see how far I can get."}], "answers": [{"comments": [{"owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "edited": false, "score": 0, "creation_date": 1532349847, "post_id": 51478943, "comment_id": 89926569, "body": "So basically Rust will compute a (possibly cyclic) dependency graph of types? And I suppose if the graph grows too large, the compiler will complain. Is this due to the implementation of rustc or can this behaviour change in the future?"}, {"owner": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1532350809, "post_id": 51478943, "comment_id": 89927226, "body": "<a href=\"https://play.rust-lang.org/?gist=c176d2f2ef3608a412ce48c57ed8a930&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> It gives the same error. <code>size_of&lt;T&gt; == size_of&lt;Pair&lt;T&gt;&gt;</code>"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 3566, "user_id": 5138648, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1fdbc41d6ae88135845b5d965dac0b13?s=128&d=identicon&r=PG", "display_name": "aSpex", "link": "https://stackoverflow.com/users/5138648/aspex"}, "edited": false, "score": 0, "creation_date": 1532351019, "post_id": 51478943, "comment_id": 89927366, "body": "@aSpex Yes, see the explanation at the end that I edited in after. It&#39;s not related to the size of the type in bytes, but the relative space required to describe it."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1532355972, "last_edit_date": 1532355972, "creation_date": 1532349257, "answer_id": 51478943, "question_id": 51478366, "link": "https://stackoverflow.com/questions/51478366/why-is-it-impossible-to-instantiate-a-data-structure-due-to-overflow-while-addi/51478943#51478943", "title": "Why is it impossible to instantiate a data structure due to &quot;overflow while adding drop-check rules&quot;?", "body": "<p>When the type hasn't been instantiated, the compiler is mostly worried about the <em>size</em> of the type being constant and known at compile-time so it can be placed on the stack. The Rust compiler will complain if the type is infinite, and <em>quite often</em> a <code>Box</code> will fix that by creating a level of indirection to a child node, which is also of known size because it boxes its own child too. </p>\n\n<p>This won't work for your type though.</p>\n\n<p>When you instantiate <code>List&lt;T&gt;</code>, the type of the second argument of the <code>Cons</code> variant is:</p>\n\n<pre><code>Box&lt;List&lt;Pair&lt;i32, T&gt;&gt;&gt;\n</code></pre>\n\n<p>Notice that the inner <code>List</code> has a type argument <code>Pair&lt;i32, T&gt;</code>, not <code>T</code>.</p>\n\n<p>That inner list also has a <code>Cons</code>, whose second argument has type:</p>\n\n<pre><code>Box&lt;List&lt;Pair&lt;i32, Pair&lt;i32, T&gt;&gt;&gt;&gt;\n</code></pre>\n\n<p>Which has a <code>Cons</code>, whose second argument has type:</p>\n\n<pre><code>Box&lt;List&lt;Pair&lt;i32, Pair&lt;i32, Pair&lt;i32, T&gt;&gt;&gt;&gt;&gt;\n</code></pre>\n\n<p>And so on.</p>\n\n<p>Now this doesn't exactly explain why you can't use this type. The size of the type will increase linearly with how deeply it is within the <code>List</code> structure. When the list is short (or empty) it doesn't reference any complex types.</p>\n\n<p>Based on the error text, the reason for the overflow is related to drop-checking. The compiler is checking that the type is dropped correctly, and if it comes across another type in the process it will check if <em>that</em> type is dropped correctly too. The problem is that each successive <code>Cons</code> contains a completely new type, which gets bigger the deeper you go, and the compiler has to check if each of these will be dropped correctly. The process will never end.</p>\n"}], "owner": {"reputation": 770, "user_id": 211158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/66756a9bcda9735c612103952c59fb3c?s=128&d=identicon&r=PG", "display_name": "Long", "link": "https://stackoverflow.com/users/211158/long"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "closed_date": 1532349776, "accepted_answer_id": 51478943, "answer_count": 1, "score": 7, "last_activity_date": 1551011626, "creation_date": 1532347423, "last_edit_date": 1551011626, "question_id": 51478366, "link": "https://stackoverflow.com/questions/51478366/why-is-it-impossible-to-instantiate-a-data-structure-due-to-overflow-while-addi", "closed_reason": "Duplicate", "title": "Why is it impossible to instantiate a data structure due to &quot;overflow while adding drop-check rules&quot;?", "body": "<p>Here is a data structure I can write down and which is accepted by the Rust compiler:</p>\n\n<pre><code>pub struct Pair&lt;S, T&gt;(S, T);\n\npub enum List&lt;T&gt; {\n    Nil,\n    Cons(T, Box&lt;List&lt;Pair&lt;i32, T&gt;&gt;&gt;),\n}\n</code></pre>\n\n<p>However, I cannot write</p>\n\n<pre><code>let x: List&lt;i32&gt; = List::Nil;\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=9aaed9de6daa5b81035ce1604c543eb4&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>as Rust will complain about an \"overflow while adding drop-check rules\".\nWhy shouldn't it be possible to instantiate <code>List::Nil</code>?</p>\n\n<p>It should be noted that the following works:</p>\n\n<pre><code>pub struct Pair&lt;S, T&gt;(S, T);\n\npub enum List&lt;T&gt; {\n    Nil,\n    Cons(T, Box&lt;List&lt;T&gt;&gt;),\n}\n\nfn main() {\n    let x: List&lt;i32&gt; = List::Nil;\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=386f4fbd79abce89fb6a1081e670d13b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["error-handling", "rust", "closures", "type-inference"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532343472, "post_id": 51476828, "comment_id": 89922543, "body": "Make sure, you read my updated version, to eleminate the closure completly."}], "answers": [{"tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 7, "last_activity_date": 1532350564, "last_edit_date": 1532350564, "creation_date": 1532343064, "answer_id": 51477081, "question_id": 51476828, "link": "https://stackoverflow.com/questions/51476828/how-do-i-fix-the-error-type-annotations-needed-when-creating-a-closure-that-us/51477081#51477081", "title": "How do I fix the error &quot;type annotations needed&quot; when creating a closure that uses the try operator?", "body": "<p>You have to specify the return type:</p>\n\n<pre><code>use std::fs::File;\nuse std::io;\n\nfn main() {\n    let tmp = \"tmp.zip\";\n\n    let save_to_tmp_file = || -&gt; Result&lt;(), io::Error&gt; {\n        let mut tmp_zip = File::create(tmp)?;\n        Ok(())\n    };\n\n    save_to_tmp_file();\n}\n</code></pre>\n\n<p>There is a problem with the closure. You cannot name the type of a closure; you could try to reduce it to a <code>FnOnce</code> / <code>FnMut</code>, but you still would have to give it the return type.</p>\n\n<p>To overcome your situation, you can specify a <code>Result</code> as a <a href=\"https://blog.rust-lang.org/2018/05/10/Rust-1.26.html#main-can-return-a-result\" rel=\"noreferrer\">return type for your main function</a>.</p>\n\n<pre><code>use std::io;\nuse std::fs::File;\n\nfn main() -&gt; Result&lt;(), io::Error&gt; {\n    let tmp = \"tmp.zip\";\n    let mut tmp_zip = File::create(tmp)?;\n    Ok(())\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 1, "creation_date": 1532343241, "post_id": 51477112, "comment_id": 89922409, "body": "Do <i>not</i> unwrap. Use Results if available."}], "tags": [], "owner": {"reputation": 84, "user_id": 9267451, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b4be44427ddb57e5e13e279dabe32b5?s=128&d=identicon&r=PG&f=1", "display_name": "Tyfingr", "link": "https://stackoverflow.com/users/9267451/tyfingr"}, "is_accepted": false, "score": 1, "last_activity_date": 1532350469, "last_edit_date": 1532350469, "creation_date": 1532343172, "answer_id": 51477112, "question_id": 51476828, "link": "https://stackoverflow.com/questions/51476828/how-do-i-fix-the-error-type-annotations-needed-when-creating-a-closure-that-us/51477112#51477112", "title": "How do I fix the error &quot;type annotations needed&quot; when creating a closure that uses the try operator?", "body": "<p>Rust is an expressive language so you can just return the <code>Result</code> and it works fine:</p>\n\n<pre><code>use std::fs::File;\n\nfn main() {\n    let tmp = \"tmp.zip\";\n\n    let save_to_tmp_file = || {\n        File::create(tmp)\n    };\n\n    save_to_tmp_file().expect(\"Can't create a tmp file\");\n}\n</code></pre>\n\n<p>Or just write:</p>\n\n<pre><code>fn main() {\n    let tmp = \"tmp.zip\";\n    File::create(tmp).expect(\"Can't create a tmp file\");\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 3, "last_activity_date": 1532344710, "creation_date": 1532344710, "answer_id": 51477563, "question_id": 51476828, "link": "https://stackoverflow.com/questions/51476828/how-do-i-fix-the-error-type-annotations-needed-when-creating-a-closure-that-us/51477563#51477563", "title": "How do I fix the error &quot;type annotations needed&quot; when creating a closure that uses the try operator?", "body": "<p>The compiler is unable to infer the return type of the closure. </p>\n\n<p>Returning <code>Ok(())</code> at the end lets the compiler infer what the type of a successful result is, but not what the error type would be. The return type of the <code>?</code> operator <em>does</em> include the full concrete type but it's guarantee is that this type can be converted <em>into</em> whatever the the surrounding function returns. So we need to fix that return type so all of the elided type annotations can be inferred.</p>\n\n<p><a href=\"https://stackoverflow.com/a/51477112/493729\">Tyfingr's answer</a> fixes the problem by removing the <code>?</code>, so that the return type of the closure is the same as the return type of <code>File::create(tmp)</code>.</p>\n\n<p><a href=\"https://stackoverflow.com/a/51477081/493729\">hellow's answer</a> adds an annotation on the closure so that the compiler doesn't need to infer the type.</p>\n\n<p>A third fix would be to put the type annotation on the return value:</p>\n\n<pre><code>let save_to_tmp_file = || {\n    let mut tmp_zip = File::create(tmp)?;\n    Ok(())\n};\n\nlet result: Result&lt;_, io::Error&gt; = save_to_tmp_file();\n</code></pre>\n\n<p>Which is similar to hellow's edit, to put the type in the return value of <code>main()</code>.</p>\n\n<p>In general, you should <em>use</em> a <code>Result</code>, and the compiler will warn you if you don't. When you handle the error, you are very likely to inadvertently provide the compiler with enough type information that none of these annotations are necessary. </p>\n"}], "owner": {"reputation": 1389, "user_id": 3831478, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/jhJdG.jpg?s=128&g=1", "display_name": "gary", "link": "https://stackoverflow.com/users/3831478/gary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9024, "favorite_count": 1, "accepted_answer_id": 51477081, "answer_count": 3, "score": 10, "last_activity_date": 1550682571, "creation_date": 1532342287, "last_edit_date": 1550682571, "question_id": 51476828, "link": "https://stackoverflow.com/questions/51476828/how-do-i-fix-the-error-type-annotations-needed-when-creating-a-closure-that-us", "title": "How do I fix the error &quot;type annotations needed&quot; when creating a closure that uses the try operator?", "body": "<pre><code>use std::fs::File;\n\nfn main() {\n    let tmp = \"tmp.zip\";\n\n    let save_to_tmp_file = || {\n        let mut tmp_zip = File::create(tmp)?;\n        Ok(())\n    };\n\n    save_to_tmp_file();\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=66ea13a7ad8294c69dce2861b2829bbc&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"noreferrer\">playground</a>)</p>\n\n<p>The build error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n --&gt; src/main.rs:7:27\n  |\n6 |     let save_to_tmp_file = || {\n  |         ---------------- consider giving `save_to_tmp_file` a type\n7 |         let mut tmp_zip = File::create(tmp)?;\n  |                           ^^^^^^^^^^^^^^^^^^ cannot infer type for `_`\n</code></pre>\n"}, {"tags": ["rust", "rayon"], "comments": [{"owner": {"reputation": 5700, "user_id": 3131852, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/26365707ecfa02e221f5192aaaa29a43?s=128&d=identicon&r=PG", "display_name": "Tim Diekmann", "link": "https://stackoverflow.com/users/3131852/tim-diekmann"}, "edited": false, "score": 1, "creation_date": 1532269070, "post_id": 51465467, "comment_id": 89900427, "body": "In the future, please include all relevant code in your post and don&#39;t just include a link to a code hosting site. Your post should stand alone from any other resource; consider what would happen if that site went down in the future!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1532274403, "creation_date": 1532274403, "answer_id": 51466747, "question_id": 51465467, "link": "https://stackoverflow.com/questions/51465467/is-there-a-way-to-directly-consume-a-rayon-chain-without-collecting-it-first/51466747#51466747", "title": "Is there a way to directly consume a Rayon chain without collecting it first?", "body": "<p>You are looking for <a href=\"https://docs.rs/rayon/1.0.2/rayon/iter/trait.ParallelIterator.html#method.for_each\" rel=\"noreferrer\"><code>ParallelIterator::for_each</code></a>:</p>\n\n<pre><code>extern crate rayon; // 1.0.2\n\nuse rayon::prelude::*;\n\nfn main() {\n    let numbers = [\"12.03\", \"0.3\", \"44.2\", \"45\", \"zzz\"];\n\n    let x = numbers.par_iter().flat_map(|n| n.parse::&lt;f32&gt;());\n\n    x.for_each(|n| {\n        println!(\"{:?}\", n);\n    });\n}\n</code></pre>\n\n<p>Related:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/rayon/1.0.2/rayon/iter/trait.ParallelIterator.html#method.for_each_with\" rel=\"noreferrer\"><code>ParallelIterator::for_each_with</code></a></li>\n<li><a href=\"https://docs.rs/rayon/1.0.2/rayon/iter/trait.ParallelIterator.html#method.try_for_each\" rel=\"noreferrer\"><code>ParallelIterator::try_for_each</code></a></li>\n<li><a href=\"https://docs.rs/rayon/1.0.2/rayon/iter/trait.ParallelIterator.html#method.try_for_each_with\" rel=\"noreferrer\"><code>ParallelIterator::try_for_each_with</code></a></li>\n</ul>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42721458/155423\">How to satisfy the Iterator trait bound in order to use Rayon here?</a></li>\n</ul>\n"}], "owner": {"reputation": 1583, "user_id": 964375, "user_type": "registered", "accept_rate": 39, "profile_image": "https://www.gravatar.com/avatar/38430929bc031983e074dafea21b3d88?s=128&d=identicon&r=PG", "display_name": "user964375", "link": "https://stackoverflow.com/users/964375/user964375"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 594, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1532274403, "creation_date": 1532265095, "last_edit_date": 1532274115, "question_id": 51465467, "link": "https://stackoverflow.com/questions/51465467/is-there-a-way-to-directly-consume-a-rayon-chain-without-collecting-it-first", "title": "Is there a way to directly consume a Rayon chain without collecting it first?", "body": "<p>I am using Rayon to produce reasonably large return values. This uses a lot of memory when collecting all returned values into a <code>Vec</code>. Is there a way to avoid creating a <code>Vec</code> and directly consuming as an iterable?</p>\n\n<p>Here is an example which doesn't work:</p>\n\n<pre><code>fn main() {\n    let numbers: Vec&lt;_&gt; = \"12.03 0.3 44.2 45 zzz\".split_whitespace().collect();\n\n    let x = numbers\n        .par_iter()\n        .map(|n| n.parse::&lt;f32&gt;())\n        .filter_map(|n| n.ok());\n\n    for n in x {\n        println!(\"{:?}\", n);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `rayon::iter::FilterMap&lt;rayon::iter::Map&lt;rayon::slice::Iter&lt;'_, &amp;str&gt;, [closure@src/main.rs:10:14: 10:34]&gt;, [closure@src/main.rs:11:21: 11:31]&gt;: std::iter::Iterator` is not satisfied\n   |\n13 |     for n in x {\n   |              ^ `rayon::iter::FilterMap&lt;rayon::iter::Map&lt;rayon::slice::Iter&lt;'_, &amp;str&gt;, [closure@src/main.rs:10:14: 10:34]&gt;, [closure@src/main.rs:11:21: 11:31]&gt;` is not an iterator; maybe try calling `.iter()` or a similar method\n   |\n   = help: the trait `std::iter::Iterator` is not implemented for `rayon::iter::FilterMap&lt;rayon::iter::Map&lt;rayon::slice::Iter&lt;'_, &amp;str&gt;, [closure@src/main.rs:10:14: 10:34]&gt;, [closure@src/main.rs:11:21: 11:31]&gt;`\n   = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=4e9415c711a6f55b684ad29832cba714&amp;version=stable&amp;mode=release&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust", "traits", "serde"], "answers": [{"comments": [{"owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "edited": false, "score": 0, "creation_date": 1532267126, "post_id": 51465659, "comment_id": 89899977, "body": "It&#39;s confusing to me that this is called &#39;trait bounds on a struct&#39;. It looks like the bounds are on trait MyTrait... (I actually stumbled upon that discussion but skipped it for that reason)."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "edited": false, "score": 1, "creation_date": 1532267733, "post_id": 51465659, "comment_id": 89900124, "body": "@Mark &quot;Trait bounds on a struct&quot; really means &quot;trait bounds on <i>the type parameters of</i> a struct&quot;. The constraints that you put on the <code>MyTrait</code> should still work fine in this case."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 4, "last_activity_date": 1532266737, "creation_date": 1532266737, "answer_id": 51465659, "question_id": 51464671, "link": "https://stackoverflow.com/questions/51464671/cannot-resolve-t-serdedeserializede-when-using-serialize-and-deserialize/51465659#51465659", "title": "Cannot resolve `T: serde::Deserialize&lt;&#39;de&gt;` when using Serialize and DeserializeOwned as supertraits", "body": "<p>In general, <a href=\"https://github.com/rust-lang-nursery/rust-clippy/issues/1689\" rel=\"nofollow noreferrer\">avoid putting trait bounds on a <code>struct</code></a>. Instead, put the bounds on the <code>impl</code> block for the methods that need those bounds:</p>\n\n<pre><code>#[derive(Serialize, Deserialize)]\npub struct MyStruct&lt;T&gt; {\n    value: T,\n}\n\nimpl&lt;T&gt; MyStruct&lt;T&gt; where T: MyTrait {\n    fn do_stuff(&amp;self) {\n        ...\n    }\n}\n</code></pre>\n\n<p>The difference in how the constraints are solved for a <code>struct</code> versus an <code>impl</code> block is a bit subtle, but suffice to say it's different and this change should make your code work as expected.</p>\n"}], "owner": {"reputation": 15065, "user_id": 723090, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ML1tj.png?s=128&g=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/723090/mark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 560, "favorite_count": 0, "accepted_answer_id": 51465659, "answer_count": 1, "score": 2, "last_activity_date": 1532273786, "creation_date": 1532259257, "last_edit_date": 1532273786, "question_id": 51464671, "link": "https://stackoverflow.com/questions/51464671/cannot-resolve-t-serdedeserializede-when-using-serialize-and-deserialize", "title": "Cannot resolve `T: serde::Deserialize&lt;&#39;de&gt;` when using Serialize and DeserializeOwned as supertraits", "body": "<p>I want my trait to depend on Serde's:</p>\n\n<pre><code>pub trait MyTrait: Serialize + DeserializeOwned {}\n\n#[derive(Serialize, Deserialize)]\npub struct MyStruct&lt;T: MyTrait&gt; {\n    value: T,\n}\n\nimpl MyTrait for i32 {}\nimpl MyTrait for MyStruct&lt;i32&gt; {}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=e353a4735f71227f0b449fc49681e3d2&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">full code</a>)</p>\n\n<p>But I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `T: serde::Deserialize&lt;'de&gt;`\n  --&gt; src/main.rs:11:21\n   |\n11 | #[derive(Serialize, Deserialize)]\n   |                     ^^^^^^^^^^^\n   |\n   = note: required by `serde::Deserialize`\n</code></pre>\n\n<p>I have no idea what that means in this context. I don't understand how it relates to the <a href=\"https://doc.rust-lang.org/error-index.html#E0283\" rel=\"nofollow noreferrer\">info about E0283</a>.</p>\n\n<p>(I <em>think</em> that <code>DeserializeOwned</code> is what I want based on the <a href=\"https://serde.rs/lifetimes.html#trait-bounds\" rel=\"nofollow noreferrer\">Serde lifetimes info</a>, but I can't find anything on \"extending\" traits, so I might be wrong).</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 95, "user_id": 9112890, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-fj7nqZ-TLFI/AAAAAAAAAAI/AAAAAAAACHQ/DsQ0zlISkcg/photo.jpg?sz=128", "display_name": "SRU", "link": "https://stackoverflow.com/users/9112890/sru"}, "edited": false, "score": 1, "creation_date": 1532208599, "post_id": 51460231, "comment_id": 89889782, "body": "Just saw my SmartPtr makes no sense, since the cloned SmartPtr will also have a lifetime of &#39;a. So there&#39;s no need to clone T. So there&#39;s no need to clone T at all (so no need to have the &quot;Static&quot;-enum-case at all). But still curious: How would an enum look like with 2 cases borrowing the type T - one case with lifetime &#39;static and one with &#39;a?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532209286, "post_id": 51460231, "comment_id": 89889943, "body": "The part of your question about cloning seems to have nothing to do with the question you are asking. No errors occur there. What value does it bring to your question?"}, {"owner": {"reputation": 95, "user_id": 9112890, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-fj7nqZ-TLFI/AAAAAAAAAAI/AAAAAAAACHQ/DsQ0zlISkcg/photo.jpg?sz=128", "display_name": "SRU", "link": "https://stackoverflow.com/users/9112890/sru"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532211109, "post_id": 51460231, "comment_id": 89890304, "body": "Yes, I just added the &#39;cloning&#39; to demonstrate my usecase, the actual question is about the two lifetimes &#39;a and &#39;static (but the same type T) in the enum for different cases. But as I wrote in my comment: I now see my smart ptr makes no sense at all."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532221925, "post_id": 51460231, "comment_id": 89891735, "body": "You may be confused about the difference between a <code>&amp;&#39;static</code> reference and the bound <code>T: &#39;static</code>. <a href=\"http://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no\">The compiler suggests I add a &#39;static lifetime because the parameter type may not live long enough, but I don&#39;t think that&#39;s what I want</a> may help explain why <code>T: &#39;static</code> is a meaningful thing to say for types like <code>Box&lt;T&gt;</code> and <code>Rc&lt;T&gt;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 95, "user_id": 9112890, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-fj7nqZ-TLFI/AAAAAAAAAAI/AAAAAAAACHQ/DsQ0zlISkcg/photo.jpg?sz=128", "display_name": "SRU", "link": "https://stackoverflow.com/users/9112890/sru"}, "is_accepted": false, "score": 0, "last_activity_date": 1532243893, "creation_date": 1532243893, "answer_id": 51462883, "question_id": 51460231, "link": "https://stackoverflow.com/questions/51460231/how-do-i-write-an-enum-that-has-variants-of-the-same-type-but-with-different-lif/51462883#51462883", "title": "How do I write an enum that has variants of the same type but with different lifetimes, one being &#39;static?", "body": "<p>Thanks trentcl &amp; Shepmaster. This post <a href=\"http://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no\"><a href=\"http://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no\">http://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no</a></a> helped and things are now clearer (maybe not 100% but clear enough for now).</p>\n\n<p>I made a new example to show why the <code>'static</code> lifetime makes also sense for the enum case <code>Boxed(Box&lt;T&gt;)</code>:</p>\n\n<pre><code>pub enum SmartPtr&lt;T : 'static&gt; where T : ?Sized {\n    Rc(Rc&lt;T&gt;),\n    Boxed(Box&lt;T&gt;),\n    Static(&amp;'static T),\n}\n\nstruct Bar {\n    data: Vec&lt;String&gt;,\n}\n\nstruct Foo&lt;'a&gt; {\n    data: &amp;'a Vec&lt;String&gt;,\n}\n\n#[test]\nfn smart_ptr_test_2() {\n    // Example 1: Does compile: Bar is 'static (since vector is moved)\n    {\n        let vec2 = vec![\"hello\".to_string()];\n        let bar = Box::new(Bar {\n            data: vec2\n        });\n        let box3 = SmartPtr::Boxed(bar);\n    }\n\n    // Example 2: Does not compile ('a in Foo is inferred to be 'static but in my code it's not)\n    {\n        let vec1 = vec![\"hello\".to_string()];\n        let foo = Box::new(Foo {\n            // compiler error: 'note: borrowed value must be valid for the static lifetime'\n            data: &amp;vec1\n        });\n        // when this line is here: the compiler infers lifetime 'a of Foo to be 'static\n        let box2 = SmartPtr::Boxed(foo);\n        // &lt;--- life of 'vec1' ends here; it's not 'static since 'vec1' goes out of scope here\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 95, "user_id": 9112890, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-fj7nqZ-TLFI/AAAAAAAAAAI/AAAAAAAACHQ/DsQ0zlISkcg/photo.jpg?sz=128", "display_name": "SRU", "link": "https://stackoverflow.com/users/9112890/sru"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 156, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1532243893, "creation_date": 1532208182, "last_edit_date": 1532211624, "question_id": 51460231, "link": "https://stackoverflow.com/questions/51460231/how-do-i-write-an-enum-that-has-variants-of-the-same-type-but-with-different-lif", "title": "How do I write an enum that has variants of the same type but with different lifetimes, one being &#39;static?", "body": "<p>I'm trying to implement a smart pointer that should be able to reference data of type <code>T</code> either borrowed with the lifetime <code>'a</code> or borrowed with the lifetime <code>'static</code>:</p>\n\n<pre><code>pub enum SmartPtr&lt;'a, T: 'a&gt; {\n    /// Should live as long as this struct or longer - don't know exactly how long, so we need to clone this when we clone the struct\n    Borrowed(&amp;'a T),\n    /// Lives forever: So we never need to clone this\n    /// Fails here with: 'the parameter type `T` may not live long enough'\n    Static(&amp;'static T),\n}\n</code></pre>\n\n<p>The <code>SmartPtr</code> will also contain other enum fields like <code>Rc</code> and <code>Box</code> (the example above has been simplified). <code>SmartPtr</code> will be mostly used in structs that should be cloneable ... when the input data <code>T</code> (for example a static string) is <code>'static</code> I don't want to clone the data.</p>\n\n<p>I would like to implement <code>Clone</code> for this:</p>\n\n<pre><code>impl&lt;'a, T&gt; Clone for SmartPtr&lt;'a, T&gt;\nwhere\n    T: Clone,\n{\n    fn clone(&amp;self) -&gt; Self {\n        match self {\n            SmartPtr::Borrowed(value) =&gt; {\n                // here we have to clone the value\n                SmartPtr::Borrowed(value.clone())\n            }\n            SmartPtr::Static(value) =&gt; {\n                // Important: No need to clone, since value is static and lives forever\n                SmartPtr::Static(value)\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The compiler fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0310]: the parameter type `T` may not live long enough\n --&gt; src/main.rs:7:12\n  |\n2 | pub enum SmartPtr&lt;'a, T: 'a&gt; {\n  |                       -- help: consider adding an explicit lifetime bound `T: 'static`...\n...\n7 |     Static(&amp;'static T),\n  |            ^^^^^^^^^^^\n  |\nnote: ...so that the reference type `&amp;'static T` does not outlive the data it points at\n --&gt; src/main.rs:7:12\n  |\n7 |     Static(&amp;'static T),\n  |            ^^^^^^^^^^^\n</code></pre>\n\n<p>How do I fix this?</p>\n\n<p><strong>Edited</strong></p>\n\n<p>As I wrote in the comment, my SmartPtr makes no sense. But this seems to make sense:</p>\n\n<pre><code>pub enum SmartPtr&lt;T : 'static /* WHY IS 'static REQUIRED HERE? */&gt; where T : ?Sized {\n    Rc(Rc&lt;T&gt;), // Here 'static makes no sense, it's Rc'd\n    Boxed(Box&lt;T&gt;), // Here 'static makes no sense, it's owned\n    Static(&amp;'static T) // Here we need 'static\n}\n</code></pre>\n\n<p>I don't see why the <code>'static</code> is required in <code>SmartPtr&lt;T : 'static</code>. The <code>SmartPtr&lt;T : 'static</code> defines the lifetime of T for the entire enum, right? But I only need a static lifetime in case <code>Static(&amp;'static T)</code>, not for the two cases <code>Rc(Rc&lt;T&gt;)</code> and <code>Boxed(Box&lt;T&gt;)</code> (T is owned in <code>Box&lt;T&gt;</code> - a lifetime makes no sense IMHO).</p>\n\n<p>I don't get it... but it works (but don't see why this works):</p>\n\n<pre><code>#[test]\nfn smart_ptr_test() {\n    // Static string -&gt; Ok, this of course works \"hello\" is static\n    let static_string = SmartPtr::Static(\"hello\");\n\n    // Boxed vector -&gt; But it's not 'static, why does this work?\n    let vector = vec![\"hello\"];\n    let box_vector = SmartPtr::Boxed(Box::new(vector));\n\n    // Rc'd vector -&gt; why does this work?, vector_rc is not static\n    let vector_rc = Rc::new(vec![\"hello\"]);\n    let box_vector = SmartPtr::Rc(vector_rc);\n}\n</code></pre>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 2, "creation_date": 1532200680, "post_id": 51459146, "comment_id": 89888029, "body": "I don&#39;t think it will work to use <code>Entry</code> in this way, because <code>Entry</code> is intended for modifying the map. This means that it encapsulates a mutable borrow, and you can only have one entry at a time. So you should probably define your own type for pairing keys and values (or just use pairs)."}, {"owner": {"reputation": 3785, "user_id": 2388257, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/4QzSp.jpg?s=128&g=1", "display_name": "Hi-Angel", "link": "https://stackoverflow.com/users/2388257/hi-angel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532280510, "post_id": 51459146, "comment_id": 89903688, "body": "@Shepmaster actually, I&#39;ve used more general <code>a map of</code> instead of <code>a HashMap&lt;Token, Frequency&gt;</code> on purpose. Like, I&#39;m okay with any alike type, and even rather likely would go with BTreeMap IRL <i>(well, if it worked anyway as noted starblue in comment above)</i>. Also, why you replaced <code>test.rs</code> with <code>src&#47;main.rs</code>? And why you changed title from <code>Create\u2026</code> to <code>How do I create\u2026</code> with question mark at the end? The first one is shorter, and doesn&#39;t make the question any less clear."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532280818, "post_id": 51459146, "comment_id": 89903790, "body": "<i>more general</i> \u2014 this question doesn&#39;t make sense to be general. An arbitrary map type may not have a corresponding <code>Entry</code>, or its <code>Entry</code> may not have a lifetime parameter, etc. <i>src/main.rs</i> \u2014 I copied your code into the <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Rust playground</a> to format it, ensure it compiles, and ensure the error message matches the code (<b>many</b> questions do not). The playground uses <code>main.rs</code> as its filename; there&#39;s no meaningful difference. <i>changed title</i> \u2014 Stack Overflow is a question and answer site. Questions have question marks and are complete English sentences."}, {"owner": {"reputation": 3785, "user_id": 2388257, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/4QzSp.jpg?s=128&g=1", "display_name": "Hi-Angel", "link": "https://stackoverflow.com/users/2388257/hi-angel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532281311, "post_id": 51459146, "comment_id": 89903927, "body": "@Shepmaster <i>Questions have question marks and are complete English sentences</i> \u2014 not necessarily, exactly because it&#39;s a Q&amp;A site. E.g. if you send a patch that <code>fixes #123</code>, you don&#39;t write <code>When applied, it fixes #123</code>, it&#39;s unnecessarily because it&#39;s obvious. Same here: in <code>I&#39;m asking, how to create a Vec of Entries</code> there&#39;s redundant text, it&#39;s a question by virtue of the site being Q&amp;A."}], "answers": [{"tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": true, "score": 1, "last_activity_date": 1532199819, "creation_date": 1532199819, "answer_id": 51459241, "question_id": 51459146, "link": "https://stackoverflow.com/questions/51459146/how-do-i-create-a-vec-of-entries-from-a-hashmap/51459241#51459241", "title": "How do I create a Vec of Entries from a HashMap?", "body": "<p>The lifetime is needed on <code>Entry</code>, as you can see in <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html\" rel=\"nofollow noreferrer\">the documentation</a>. Like this:</p>\n\n<pre><code>struct TokenizeState&lt;'a&gt; {\n    tokens: HashMap&lt;Token, Freq&gt;,\n    text: Vec&lt;std::collections::hash_map::Entry&lt;'a, Token, Freq&gt;&gt;,\n}\n</code></pre>\n"}], "owner": {"reputation": 3785, "user_id": 2388257, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/4QzSp.jpg?s=128&g=1", "display_name": "Hi-Angel", "link": "https://stackoverflow.com/users/2388257/hi-angel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 51459241, "answer_count": 1, "score": 0, "last_activity_date": 1532273959, "creation_date": 1532199076, "last_edit_date": 1532273959, "question_id": 51459146, "link": "https://stackoverflow.com/questions/51459146/how-do-i-create-a-vec-of-entries-from-a-hashmap", "title": "How do I create a Vec of Entries from a HashMap?", "body": "<p>Given a <code>HashMap&lt;Token, Frequency&gt;</code>, I want a <code>Vec</code> of references to these pairs. I found that the pairs are of type <code>Entry</code>, so it would look something like: </p>\n\n<pre><code>use std::collections::HashMap;\n\ntype Freq = u32;\ntype Token = String;\n\nstruct TokenizeState {\n    tokens: HashMap&lt;Token, Freq&gt;,\n    text: Vec&lt;std::collections::hash_map::Entry&lt;Token, Freq&gt;&gt;,\n}\n\nfn main() {}\n</code></pre>\n\n<p>This code has an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:8:15\n  |\n8 |     text: Vec&lt;std::collections::hash_map::Entry&lt;Token, Freq&gt;&gt;,\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter\n</code></pre>\n\n<p>Adding a lifetime specifier to the struct leads to the same error:</p>\n\n<pre><code>struct TokenizeState&lt;'a&gt; {\n    tokens: HashMap&lt;Token, Freq&gt;,\n    text: Vec&lt;&amp;'a std::collections::hash_map::Entry&lt;Token, Freq&gt;&gt;,\n}\n</code></pre>\n\n<p>My main problem is that I don't know if <code>std::collections::hash_map::Entry&lt;Token, Freq&gt;</code> is the correct type. I have experimented with a lot things, like the more obvious <code>HashMap&lt;Token, Freq&gt;::Entry</code>, and couldn't get it work.</p>\n"}, {"tags": ["multithreading", "rust", "mutex"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1532178023, "post_id": 51454670, "comment_id": 89882100, "body": "<a href=\"https://stackoverflow.com/questions/29401626/how-do-i-return-a-reference-to-something-inside-a-refcell-without-breaking-encap\" title=\"how do i return a reference to something inside a refcell without breaking encap\">stackoverflow.com/questions/29401626/&hellip;</a> is essentially similar. I&#39;m pretty sure that <code>fn channels(&amp;self) -&gt; &amp;[u8]</code> is not a safe API for what you want <code>channels</code> to do. Either the binding generator is wrong, and <code>channels</code> should have a different signature, or the binding generator is right, and there <i>is no safe way</i> to write <code>channels</code> such that it reads from the shared memory."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532178155, "post_id": 51454670, "comment_id": 89882140, "body": "Actually, there is at least one way to write <code>channels</code> that is safe: just leak the whole <code>Vec</code>. But assuming you don&#39;t want to do that, and you&#39;re not willing or able to change the API, you&#39;re in a bind."}, {"owner": {"reputation": 33, "user_id": 10114271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/772e1c4f3e7ac08bdf7ca78bf62b4a6e?s=128&d=identicon&r=PG&f=1", "display_name": "conducting_dmx", "link": "https://stackoverflow.com/users/10114271/conducting-dmx"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532262307, "post_id": 51454670, "comment_id": 89898687, "body": "Thank you for the link, I took a look, but none of the three solutions actually solve my problem, as I always have to change the function interface. Yep, leaking the whole Vec sounds not good to me as well. For now, I changed the generated sources to give me a mutable reference and I safe the values from the mutex into my RustController. I am going to contact the developer whether this is intended, or maybe he had a different solution on his mind, or maybe he just did not think of a usecase like this."}, {"owner": {"reputation": 347, "user_id": 5207376, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/929972057068521/picture?type=large", "display_name": "Xu Chen", "link": "https://stackoverflow.com/users/5207376/xu-chen"}, "edited": false, "score": 0, "creation_date": 1532415647, "post_id": 51454670, "comment_id": 89953289, "body": "I ran into a similar question (want to return a ref to the data protected by a RwLock) here: <a href=\"https://stackoverflow.com/questions/51183343/how-to-use-interior-mutability-pattern-to-obtain-a-reference-of-a-struct-and-us\" title=\"how to use interior mutability pattern to obtain a reference of a struct and us\">stackoverflow.com/questions/51183343/&hellip;</a> , while my accepted answer does not really solve my issue, but it might be useful for you."}, {"owner": {"reputation": 33, "user_id": 10114271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/772e1c4f3e7ac08bdf7ca78bf62b4a6e?s=128&d=identicon&r=PG&f=1", "display_name": "conducting_dmx", "link": "https://stackoverflow.com/users/10114271/conducting-dmx"}, "edited": false, "score": 0, "creation_date": 1533841417, "post_id": 51454670, "comment_id": 90506954, "body": "So, though the problem on the rust side remains, this specific issue concerning the binding generator is resolved. Instead of having the channels property, I use an extra function get_channels() which returns a Vec&lt;u8&gt; instead of a slice. Getting a copy of the vector inside the RwLock is not a problem. Additionally, there is a property wich can be changed to emit a signal for the QML side. The field ch_vals of the controller becomes obsolete."}], "owner": {"reputation": 33, "user_id": 10114271, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/772e1c4f3e7ac08bdf7ca78bf62b4a6e?s=128&d=identicon&r=PG&f=1", "display_name": "conducting_dmx", "link": "https://stackoverflow.com/users/10114271/conducting-dmx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 186, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1532165211, "creation_date": 1532165211, "question_id": 51454670, "link": "https://stackoverflow.com/questions/51454670/reference-to-data-inside-mutex", "title": "Reference to data inside Mutex", "body": "<p>I want to access data that is protected by a RwLock. Unfortunately, I am forced to return a reference.</p>\n\n<p>Background: I am using <a href=\"https://phabricator.kde.org/source/rust-qt-binding-generator/\" rel=\"nofollow noreferrer\">rust-qt-binding-generator</a> with QtQuick and I want to visualize data that is being received on the rust side asynchronously. The data comes as Vec, and consequently, I want to use QByteArray on the Qt side. rust-qt-binding-generator offers this data type.</p>\n\n<p>My problem is that the generated trait requires a getter function with the following signature:</p>\n\n<pre><code>fn channels(&amp;self) -&gt; &amp;[u8]\n</code></pre>\n\n<p>Code:</p>\n\n<pre><code>#![allow(unused_imports)]\n#![allow(unused_variables)]\n#![allow(dead_code)]\nuse interface::*;\nuse std::sync::{Arc, RwLock, RwLockWriteGuard};\nuse std::time::Duration;\nuse std::thread;\n\npub struct RustController {\n    emit: RustControllerEmitter,\n    ch_vals: Vec&lt;u8&gt;,\n    channels: Arc&lt;RwLock&lt;Vec&lt;u8&gt;&gt;&gt;\n}\n\nimpl RustControllerTrait for RustController {\n    fn new(emit: RustControllerEmitter) -&gt; RustController {\n        let mut ret = RustController {\n            emit: emit.clone(),\n            ch_vals: vec!(),\n            channels: Arc::new(RwLock::new(create_empty_vector())),\n        };\n\n        update_thread(emit, ret.channels.clone());\n        ret\n    }\n    fn emit(&amp;self) -&gt; &amp;RustControllerEmitter {\n        &amp;self.emit\n    }\n    fn channels(&amp;self) -&gt; &amp;[u8] {\n        // *((*self.channels).read().unwrap()).clone()\n        // does not work of course (and nothing else I tried obviously)\n        // because I can only get the value as a temporary one. writing\n        // them into self.ch_vals would solve the problem, but I am not\n        // allowed to get a &amp;mut self\n\n        //&amp;self.ch_vals     // &lt;-- this would work, but does not contain\n                            //     the values generated in the thread.\n    }\n}\n\nfn create_empty_vector() -&gt; Vec&lt;u8&gt; {\n    let mut ret: Vec&lt;u8&gt; = Vec::with_capacity(512);\n\n    for i in 0..512 {\n        ret.push((i/2) as u8);\n    }\n\n    ret\n}\n\nfn update_thread(\n    emit: RustControllerEmitter,\n    channels: Arc&lt;RwLock&lt;Vec&lt;u8&gt;&gt;&gt;,\n) {\n    thread::spawn(move || {\n        loop {\n            {\n                let mut w: RwLockWriteGuard&lt;Vec&lt;u8&gt;&gt; = (*channels).write().unwrap();\n                (*w)[0] += 1;\n                // changing values in the mutex is no problem, but no\n                // reference to the RustController here to store value\n            }\n\n            emit.channels_changed();\n            thread::sleep(Duration::from_secs(1));\n        }\n    });\n}\n</code></pre>\n\n<p>If you want to run it yourself, here is my bindings.json:</p>\n\n<pre><code>{\n    \"cppFile\": \"src/Bindings.cpp\",\n    \"rust\": {\n        \"dir\": \"rust\",\n        \"interfaceModule\": \"interface\",\n        \"implementationModule\": \"implementation\"\n    },\n    \"objects\": {\n        \"RustController\": {\n            \"type\": \"Object\",\n            \"properties\": {\n                \"channels\": {\n                    \"type\": \"QByteArray\"\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>With this setup I am able to transfer an i32 without problems, but Vec does not work because of the getter. My understanding of the problem is that I am unable to store the values generated in the extra thread in a place which can be referenced in the getter (and lives long enough, ideally as long as the RustController in use).</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 4, "last_activity_date": 1532178600, "last_edit_date": 1532178600, "creation_date": 1532175894, "answer_id": 51456043, "question_id": 51454572, "link": "https://stackoverflow.com/questions/51454572/implementing-read-trait-trait-bound-stderrorerror-static-stdmarker/51456043#51456043", "title": "Implementing Read trait : trait bound `std::error::Error + &#39;static: std::marker::Sized` is not satisfied", "body": "<p>Return </p>\n\n<pre><code>Result&lt;usize, std::io::Error&gt;\n</code></pre>\n\n<p>Instead of </p>\n\n<pre><code>Result&lt;usize, Error&gt;\n</code></pre>\n\n<p><code>std::error::Error</code>, which you\u2019re using in your signature, is a trait. You can\u2019t return a trait directly. </p>\n\n<p>You could also do</p>\n\n<pre><code>Result&lt;usize, Box&lt;dyn Error&gt;&gt;\n</code></pre>\n\n<p>A \u201ctrait object\u201d, but I don\u2019t see why you would in this case.</p>\n"}], "owner": {"reputation": 23, "user_id": 8826569, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a50930f8cff0a8fda30dad38b5d797cc?s=128&d=identicon&r=PG&f=1", "display_name": "Rohrschacht", "link": "https://stackoverflow.com/users/8826569/rohrschacht"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 725, "favorite_count": 0, "accepted_answer_id": 51456043, "answer_count": 1, "score": 1, "last_activity_date": 1532178600, "creation_date": 1532164342, "last_edit_date": 1532178498, "question_id": 51454572, "link": "https://stackoverflow.com/questions/51454572/implementing-read-trait-trait-bound-stderrorerror-static-stdmarker", "title": "Implementing Read trait : trait bound `std::error::Error + &#39;static: std::marker::Sized` is not satisfied", "body": "<p>I want to implement the <code>Read</code> trait for a struct for the purpose of using it in a <code>BufReader</code> to pass to a library. The library uses a <code>BufReader</code> as input because it should work with <code>Stdin</code> and with an in-memory object that implements <code>Read</code>. </p>\n\n<pre><code>use std::error::Error;\nuse std::io::Read;\n\npub struct Test {\n    counter: u8,\n}\n\nimpl Test {\n    pub fn new() -&gt; Test {\n        Test { counter: 0 }\n    }\n}\n\nimpl Iterator for Test {\n    type Item = String;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.counter &lt; 2 {\n            self.counter += 1;\n            return Some(\"String\".to_string());\n        }\n\n        None\n    }\n}\n\nimpl Read for Test {\n    fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;usize, Error&gt; {\n        let content = self.next();\n        match content {\n            None =&gt; Err(std::io::Error::new(\n                std::io::ErrorKind::Other,\n                \"End of Iterator\",\n            )),\n            Some(string) =&gt; {\n                let mut i = 0;\n                loop {\n                    if i &gt;= buf.len() || i &gt;= string.len() {\n                        break;\n                    }\n\n                    buf[i] = string[i];\n                    i += 1;\n                }\n\n                Ok(i)\n            }\n        }\n    }\n}\n\nfn main() {\n    let test = Test::new();\n    let reader = std::io::BufReader::new(test);\n    // let filter = lib_that_uses_bufreader::useful_function(reader);\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=d4e3fbfd9f7ce660c17eb4f0ce702b81&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>When trying to implement <code>Read</code> for the struct, I get the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `std::error::Error + 'static: std::marker::Sized` is not satisfied\n  --&gt; src/main.rs:28:5\n   |\n28 | /     fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;usize, Error&gt; {\n29 | |         let content = self.next();\n30 | |         match content {\n31 | |             None =&gt; Err(std::io::Error::new(\n...  |\n48 | |         }\n49 | |     }\n   | |_____^ `std::error::Error + 'static` does not have a constant size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `std::error::Error + 'static`\n   = note: required by `std::result::Result`\n</code></pre>\n\n<p>I built the library myself, so it could be changed but it works very well with <code>Stdin</code> and I now want to use it with a struct. The library uses <code>BufReader::lines</code>, so it could be exchanged with an iterator, but as I understood, this would break compatibility with <code>Stdin</code>, as I was only able to build a <code>BufReader</code> around <code>Stdin</code>, not an iterator.</p>\n\n<p>How do I resolve this error? What error object has a constant size known at compile-time?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 0, "creation_date": 1532172478, "post_id": 51454392, "comment_id": 89880588, "body": "<a href=\"https://play.rust-lang.org/?gist=c9834097a07ece7b0d1dff6d5bebe44e&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> this seems to work with your example. but I think you cannot call <code>.into_box()</code> on unsized types then.  edit: oh I just see your additional constraint with the <code>Box&lt;T&gt;</code> to <code>Box&lt;B&gt;</code> coercion."}, {"owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "reply_to_user": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 0, "creation_date": 1532174770, "post_id": 51454392, "comment_id": 89881161, "body": "Hmm, if the <code>Box&lt;T&gt;</code> -&gt; <code>Box&lt;B&gt;</code> conversion happens automatically, maybe I don&#39;t need that bound after all."}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 0, "creation_date": 1532191069, "post_id": 51454392, "comment_id": 89885547, "body": "you don&#39;t need to have <code>From</code> implemented if you want to convert a Boxed value to a Trait object."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532211585, "post_id": 51454392, "comment_id": 89890373, "body": "I believe your question is answered by the answers of <a href=\"https://stackoverflow.com/q/51247690/155423\">How can I define a function with a parameter that can be multiple kinds of trait objects?</a>. If you disagree, please <a href=\"https://stackoverflow.com/posts/51454392/edit\">edit</a> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "edited": false, "score": 0, "creation_date": 1532322563, "post_id": 51454392, "comment_id": 89911951, "body": "Edited, the solution does not work in the generic case."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532350241, "post_id": 51454392, "comment_id": 89926832, "body": "Yes, it <b>cannot</b> be solved in the generic case because they are overlapping. There is no solution to that, it is a hard constraint of the Rust compiler. It has nothing to do with your specific code."}, {"owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "edited": false, "score": 0, "creation_date": 1532359335, "post_id": 51454392, "comment_id": 89933273, "body": "You&#39;re right. I believe there <i>might</i> exist a solution though if the standard library implemented <code>From&lt;Box&lt;T&gt;&gt; for Box&lt;U&gt; where U: Unsize&lt;T&gt;</code>."}], "owner": {"reputation": 2866, "user_id": 1522056, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/OJh0k.jpg?s=128&g=1", "display_name": "Fabian Knorr", "link": "https://stackoverflow.com/users/1522056/fabian-knorr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 114, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1532359413, "creation_date": 1532162752, "last_edit_date": 1532359413, "question_id": 51454392, "link": "https://stackoverflow.com/questions/51454392/how-do-i-write-a-function-that-allows-me-to-convert-a-type-t-into-any-boxb-if", "title": "How do I write a function that allows me to convert a type T into any Box&lt;B&gt; if Box&lt;T&gt; can be coerced into Box&lt;B&gt;?", "body": "<p>I'm trying to write an extension trait that allows me to move any value of type <code>T</code> into any <code>Box&lt;B&gt;</code>, where <code>Box&lt;T&gt;</code> can be coerced into <code>Box&lt;B&gt;</code>. My first attempt is the following:</p>\n\n<pre><code>trait IntoBox&lt;B: ?Sized&gt; {\n    fn into_box(self) -&gt; Box&lt;B&gt;;\n}\n\nimpl&lt;T, B: ?Sized&gt; IntoBox&lt;B&gt; for T\nwhere\n    Box&lt;T&gt;: Into&lt;Box&lt;B&gt;&gt;,\n{\n    fn into_box(self) -&gt; Box&lt;B&gt; {\n        Box::new(self).into()\n    }\n}\n\nfn main() {\n    // Ok\n    let _: Box&lt;u32&gt; = 42.into_box();\n\n    // Error: the trait bound `std::boxed::Box&lt;std::fmt::Display&gt;:\n    // std::convert::From&lt;std::boxed::Box&lt;&amp;str&gt;&gt;` is not satisfied\n    let _: Box&lt;std::fmt::Display&gt; = \"Hello World\".into_box();\n}\n</code></pre>\n\n<p>This code works for regular boxes, but not trait objects. I suspect <code>Into</code> is the wrong bound here. What should I use instead?</p>\n\n<p><strong>Edit:</strong> As explained in the answer to <a href=\"https://stackoverflow.com/questions/51247690/how-can-i-define-a-function-with-a-parameter-that-can-be-multiple-kinds-of-trait\">this</a> question, this problem can be solved with respect to any number of concrete types <code>T</code> by providing a blanket impl for <code>T: Unsize&lt;U&gt;</code>. However this does not work in the generic case because the impls would be conflicting:</p>\n\n<pre><code>impl&lt;T, B&gt; IntoBox&lt;B&gt; for T\nwhere\n    Box&lt;T&gt;: Into&lt;Box&lt;B&gt;&gt;,\n{\n    fn into_box(self) -&gt; Box&lt;B&gt; {\n        Box::new(self).into()\n    }\n}\n\nimpl&lt;T, B: ?Sized&gt; IntoBox&lt;B&gt; for T\nwhere\n    B: std::marker::Unsize&lt;T&gt;\n{\n    fn into_box(self) -&gt; Box&lt;B&gt; {\n        Box::new(self)\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "match", "option"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1532126487, "post_id": 51451113, "comment_id": 89872715, "body": "And your question is?"}, {"owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1532127110, "post_id": 51451113, "comment_id": 89872847, "body": "Note, this is similar to the following post, but the critical difference is the explicit type annotation for method calls doesn&#39;t work for variables,  and I&#39;ve tried to extrapolate from other places using the <code>var: Type</code> form but that doesn&#39;t seem to work in this case.  <a href=\"https://stackoverflow.com/questions/37755975/type-annotation-in-a-pattern-match-in-rust\" title=\"type annotation in a pattern match in rust\">stackoverflow.com/questions/37755975/&hellip;</a>"}, {"owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1532127323, "post_id": 51451113, "comment_id": 89872895, "body": "the question is either: how to I explicitly type <code>index</code> in this case since normal typing syntax doesn&#39;t work (as you can see from the comments I&#39;ve tried a few approaches already), OR if explicitly typing <code>index</code> isn&#39;t the problem then what&#39;s the compiler actually complaining about?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1532134111, "post_id": 51451113, "comment_id": 89873932, "body": "Tangentially: <a href=\"https://stackoverflow.com/questions/40006219/why-is-it-discouraged-to-accept-a-reference-to-a-string-string-vec-vec-or\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec) or Box (&amp;Box) as a function argument?</a>"}, {"owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "edited": false, "score": 0, "creation_date": 1532732164, "post_id": 51451113, "comment_id": 90099670, "body": "Thanks, I didn&#39;t realize &amp;[T] would coerce an &amp;Vec, I&#39;ll look into adapting these in the future"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532738565, "post_id": 51451113, "comment_id": 90100775, "body": "Your updated title makes no sense. If you had an <code>Option&lt;usize&gt;</code>, you <b>wouldn&#39;t need to give it a type</b> \u2014 that&#39;s the entire problem!"}, {"owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "edited": false, "score": 0, "creation_date": 1532977384, "post_id": 51451113, "comment_id": 90167404, "body": "then what does this mean? <code>let mut sorting_index: Option&lt;usize&gt; = None;</code> if that doesn&#39;t mean it&#39;s an Option&lt;usize&gt; then I&#39;m really confused.  Just because it&#39;s using the None version of that enum doesn&#39;t mean it&#39;s not still Option&lt;usize&gt; type, right?"}], "answers": [{"comments": [{"owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "edited": false, "score": 0, "creation_date": 1532129265, "post_id": 51451481, "comment_id": 89873244, "body": "This seems correct so I&#39;ll go ahead and select it now.  Very concise and ty for letting me figure out the rest of the refactor"}, {"owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "edited": false, "score": 0, "creation_date": 1532129956, "post_id": 51451481, "comment_id": 89873339, "body": "Just confirming this is indeed correct.  I had to add some unwraps and *deferences but it&#39;s working now"}, {"owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "reply_to_user": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "edited": false, "score": 0, "creation_date": 1532130231, "post_id": 51451481, "comment_id": 89873376, "body": "Good! FWIW the compiler is a little unclear as to why it&#39;s not able to determine the type (e.g. with just the sorting type defined and not the sorting_index). So there&#39;s a little institutional leap from just the first line to the second. I&#39;m poking around a bit with that because the direct error doesn&#39;t seem to point to the right cause."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1532133854, "post_id": 51451481, "comment_id": 89873898, "body": "The compiler doesn&#39;t <i>guess</i> what type might work. It has to <i>deduce</i> types from explicit type annotations and usage. It can be pretty clever, but at the end of the day there has to be a function or struct or something that requires a certain type, so that it can reason from there. The only exception is that numeric types default to <code>i32</code> when possible -- but you can&#39;t index a <code>Vec</code> with an <code>i32</code>, so that fallback doesn&#39;t work for <code>sorting_index</code>."}, {"owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 1, "creation_date": 1532134664, "post_id": 51451481, "comment_id": 89873990, "body": "Oh agreed, but the error as of rustc 1.27.2 when sorting_index is left to be deduced seems ambiguous <code>cannot infer type for &#39;_&#39;</code> pointing to <code>sorting[index]</code>. It seems like the error should say <code>cannot infer type for &#39;index&#39;</code> or maybe <code>source_index</code>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1532135702, "post_id": 51451481, "comment_id": 89874107, "body": "Ah, yes, you are right. That error message could definitely use some improvement."}, {"owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "edited": false, "score": 0, "creation_date": 1532732274, "post_id": 51451481, "comment_id": 90099693, "body": "As far as error message improvement goes, i would have caught it a lot sooner if it complained about <code>sorting_index</code> rather than just <code>index</code> since that&#39;s what I had to explicitly type"}], "tags": [], "owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "is_accepted": true, "score": 2, "last_activity_date": 1532135282, "last_edit_date": 1532135282, "creation_date": 1532128880, "answer_id": 51451481, "question_id": 51451113, "link": "https://stackoverflow.com/questions/51451113/how-to-i-explicitly-assign-a-type-to-an-optionusize-that-is-used-in-a-match/51451481#51451481", "title": "How to I explicitly assign a type to an `Option&lt;usize&gt;` that is used in a `match`?", "body": "<p>The first thing to do is to type <code>sorting</code> and <code>sorting_index</code>:</p>\n\n<pre><code>let mut sorting: Vec&lt;VecDeque&lt;i32&gt;&gt; = Vec::with_capacity(unsorted_list.len());\nlet mut sorting_index: Option&lt;usize&gt; = None;\n</code></pre>\n\n<p>That will lead to a number of adjustments and decisions at various sites in the code where  <code>sorting[index]</code> is accessed. I can add more, but after that it's mostly a matter of working through the compiler errors and making decisions on how you want to handle those cases in your algorithm.</p>\n"}], "owner": {"reputation": 171, "user_id": 8286242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f93895e66f9dd59dc80608b7ec94bbd0?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Rudd", "link": "https://stackoverflow.com/users/8286242/chris-rudd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 451, "favorite_count": 0, "accepted_answer_id": 51451481, "answer_count": 1, "score": -1, "last_activity_date": 1532991028, "creation_date": 1532125542, "last_edit_date": 1532991028, "question_id": 51451113, "link": "https://stackoverflow.com/questions/51451113/how-to-i-explicitly-assign-a-type-to-an-optionusize-that-is-used-in-a-match", "title": "How to I explicitly assign a type to an `Option&lt;usize&gt;` that is used in a `match`?", "body": "<p>I'm making a (probably bad) sorting algorithm as a practice experiment.</p>\n\n<p>I'm trying to take an unsorted list of <code>i32</code> with duplicates, break it out into an array of sorted arrays (of various sizes) which I can then efficiently recombine into a single fully sorted array.  The recombination isn't implemented yet.</p>\n\n<pre><code>mod sort {\n    use std::collections::VecDeque;\n\n    pub fn sort_i32(unsorted_list: &amp;Vec&lt;i32&gt;) { // -&gt; Vec&lt;i32&gt; {\n        let mut sorting = Vec::with_capacity(unsorted_list.len());\n        let mut sorting_index = None;\n        // let mut index: usize = 0;\n        for number in unsorted_list {\n            match sorting_index { // sorting_index: Option&lt;usize&gt;\n                Some(index) =&gt; { // index: usize // index&lt;usize&gt;\n                    // let index: usize = index as usize;\n                    if number &gt;= sorting[index].front() {\n                        sorting[index].push_front(number);\n                    } else if number &lt;= sorting[index].back() {\n                        sorting[index].push_back(number);\n                    } else {\n                        let index = index + 1; //index: usize\n                        sorting_index = Some(index);\n                        sorting[index] = VecDeque::with_capacity(unsorted_list.len());\n                        sorting[index].push_front(number);\n                    }\n                }\n                None =&gt; {\n                    // have to initialize here because we need the first `number` to do so\n                    let index = 0; //index: usize\n                    sorting_index = Some(index);\n                    sorting[index] = VecDeque::with_capacity(unsorted_list.len());\n                    sorting[index].push_front(number);\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I think I need to explicitly tell the compiler that <code>index</code> will be <code>usize</code> as it's going to be an index into a vector:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n  --&gt; src/main.rs:12:34\n   |\n12 |                     if number &gt;= sorting[index].front() {\n   |                                  ^^^^^^^^^^^^^^ cannot infer type for `_`\n</code></pre>\n\n<p>Normal typing syntax doesn't seem to work; as you can see from the comments I've tried a few approaches already.</p>\n"}, {"tags": ["debugging", "rust", "assert"], "answers": [{"comments": [{"owner": {"reputation": 715, "user_id": 1000039, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3256bc83fb83cc3ce42d7ed34f1bc89?s=128&d=identicon&r=PG", "display_name": "user1000039", "link": "https://stackoverflow.com/users/1000039/user1000039"}, "edited": false, "score": 1, "creation_date": 1532118912, "post_id": 51449921, "comment_id": 89870438, "body": "Which is more common? Rust seems to dictate a lot of style decisions, I&#39;m surprised that this isn&#39;t one of them."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 715, "user_id": 1000039, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3256bc83fb83cc3ce42d7ed34f1bc89?s=128&d=identicon&r=PG", "display_name": "user1000039", "link": "https://stackoverflow.com/users/1000039/user1000039"}, "edited": false, "score": 2, "creation_date": 1532119112, "post_id": 51449921, "comment_id": 89870516, "body": "@user1000039 neither way of asserting on a side-effecting function is <b>common</b> because asserting on a side-effecting function is <i>just a bad idea</i>. There&#39;s no reason to have idioms for code that we shouldn&#39;t be writing in the first place. When it comes to asserting on a non-side-effecting function, I&#39;d expect that <code>assert!(some_boolean())</code> would be more common because it&#39;s shorter."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 3, "creation_date": 1532125484, "post_id": 51449921, "comment_id": 89872474, "body": "The Rust idiom for a possibly-failing function is to return <code>Result&lt;(), SomeError&gt;</code>, not <code>bool</code>. So if you want to panic if the function fails, you wouldn&#39;t <code>assert!</code> on it, you would <code>.unwrap()</code> the result."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1532267617, "post_id": 51449921, "comment_id": 89900093, "body": "Why not a variable with a leading underscore: <code>let _ok = ...; assert!(_ok);</code>, this should silence the warnings."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1532268876, "post_id": 51449921, "comment_id": 89900378, "body": "@MatthieuM. but in half of the compilations you <i>are</i> using the variable. Sure, there are lots of ways to silence this warning, but my point is more along the lines of &quot;think about why you have a warning in the first place&quot;."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1532118529, "creation_date": 1532118529, "answer_id": 51449921, "question_id": 51449827, "link": "https://stackoverflow.com/questions/51449827/whats-the-rust-way-of-asserting-on-the-return-value-of-a-function-that-has-side/51449921#51449921", "title": "What&#39;s the Rust way of asserting on the return value of a function that has side effects?", "body": "<blockquote>\n  <p>it looks like asserts in Rust are always present in every type of build</p>\n</blockquote>\n\n<p>Yes, <a href=\"https://doc.rust-lang.org/std/macro.assert.html\" rel=\"noreferrer\"><code>assert!</code></a> is always there, but <a href=\"https://doc.rust-lang.org/std/macro.debug_assert.html\" rel=\"noreferrer\"><code>debug_assert!</code></a> is only enabled in debug builds.</p>\n\n<hr>\n\n<blockquote>\n  <p>what's considered better</p>\n</blockquote>\n\n<p>This is opinion-based. Do whatever makes you happy. I've personally been bitten by putting side-effecting code in code that disappeared due to conditional compilation more times than I want, so I'd favor making the assertion a separate line. However, this will lead to unused variable warnings when the assert is compiled away. </p>\n\n<p>Even better, re-evaluate <em>why</em> you have side-effects in an assert; I'd wager it's almost always a bad idea.</p>\n"}], "owner": {"reputation": 715, "user_id": 1000039, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a3256bc83fb83cc3ce42d7ed34f1bc89?s=128&d=identicon&r=PG", "display_name": "user1000039", "link": "https://stackoverflow.com/users/1000039/user1000039"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 489, "favorite_count": 0, "accepted_answer_id": 51449921, "answer_count": 1, "score": 1, "last_activity_date": 1532118529, "creation_date": 1532118073, "last_edit_date": 1532118436, "question_id": 51449827, "link": "https://stackoverflow.com/questions/51449827/whats-the-rust-way-of-asserting-on-the-return-value-of-a-function-that-has-side", "title": "What&#39;s the Rust way of asserting on the return value of a function that has side effects?", "body": "<p>In C, asserts can disappear by defining <code>NDEBUG</code>, so we tend to write things like:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>const bool ok = my_function();\nassert(ok);\n</code></pre>\n\n<p>However, it looks like asserts in Rust are always present in every type of build regardless of configuration, so what's considered better:</p>\n\n<pre><code>let ok = my_function();\nassert!(ok);\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>assert!(my_function());\n</code></pre>\n"}, {"tags": ["rust", "gtk", "glade", "gtk-rs"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532119662, "post_id": 51449353, "comment_id": 89870754, "body": "Sounds like you&#39;ve forgotten to save your file, forgotten to put it in the right place, are loading from a directory you don&#39;t expect, etc."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 5858486, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eff7eed4841fd251509a4b806ddb83ef?s=128&d=identicon&r=PG&f=1", "display_name": "Edoardo La Greca", "link": "https://stackoverflow.com/users/5858486/edoardo-la-greca"}, "edited": false, "score": 0, "creation_date": 1532133301, "post_id": 51450678, "comment_id": 89873842, "body": "Thank you sooo much, I really don&#39;t know how I couldn&#39;t see it... Now it works like a charm!"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 2, "last_activity_date": 1532123056, "last_edit_date": 1532123056, "creation_date": 1532122592, "answer_id": 51450678, "question_id": 51449353, "link": "https://stackoverflow.com/questions/51449353/gtk-error-failed-to-add-ui-error-on-line-1-char-1-document-must-begin-with/51450678#51450678", "title": "Gtk-ERROR **: failed to add UI: Error on line 1 char 1: Document must begin with an element", "body": "<p>The function <code>gtk::Builder::new_from_string()</code> expects a string with the <em>full XML</em> content, not the name of a file. You are passing <code>\"mainWindow.glade\"</code>, that is not valid XML syntax, so you get an error (at line 1, because you only wrote one line).</p>\n\n<p>What you want is to call:</p>\n\n<pre><code>Builder::new_from_file(\"mainWindow.glade\")\n</code></pre>\n\n<p><strong>PS</strong>: A nice feature of the Rust compiler is that you can include files as literal strings, so you can write:</p>\n\n<pre><code>Builder::new_from_string(include_str!(\"mainWindow.glade\"))\n</code></pre>\n\n<p>and you will compile the content of the file into the program.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 10430266, "user_type": "registered", "profile_image": "https://graph.facebook.com/1734565153332060/picture?type=large", "display_name": "Afamtech Psuwisit", "link": "https://stackoverflow.com/users/10430266/afamtech-psuwisit"}, "is_accepted": false, "score": 0, "last_activity_date": 1538152230, "last_edit_date": 1538152230, "creation_date": 1538150521, "answer_id": 52559003, "question_id": 51449353, "link": "https://stackoverflow.com/questions/51449353/gtk-error-failed-to-add-ui-error-on-line-1-char-1-document-must-begin-with/52559003#52559003", "title": "Gtk-ERROR **: failed to add UI: Error on line 1 char 1: Document must begin with an element", "body": "<p>As I got a same this problem when trying edit GUI xml file on visual studio 2017 or text editors, and put GUI xml files to run it.</p>\n\n<p>Method to fix it:</p>\n\n<ol>\n<li><p>Design your GUI by glade, and save (GtkBuilder file format recommended) as you need.</p></li>\n<li><p>Replace your file name as you have saved in 1.</p>\n\n<p>2.1 c#,  new_from_file(\"your file name\")</p>\n\n<p>2.1 c++, gtk_builder_add_from_file(...., \"your file name\", ....)</p></li>\n<li><p>you are so happy !</p></li>\n</ol>\n"}], "owner": {"reputation": 33, "user_id": 5858486, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eff7eed4841fd251509a4b806ddb83ef?s=128&d=identicon&r=PG&f=1", "display_name": "Edoardo La Greca", "link": "https://stackoverflow.com/users/5858486/edoardo-la-greca"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 727, "favorite_count": 0, "accepted_answer_id": 51450678, "answer_count": 2, "score": 1, "last_activity_date": 1538152230, "creation_date": 1532115558, "last_edit_date": 1532119509, "question_id": 51449353, "link": "https://stackoverflow.com/questions/51449353/gtk-error-failed-to-add-ui-error-on-line-1-char-1-document-must-begin-with", "title": "Gtk-ERROR **: failed to add UI: Error on line 1 char 1: Document must begin with an element", "body": "<p>Why is GTK+ 3 throwing this error?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(.:11977): Gtk-ERROR **: 21:10:01.149: failed to add UI: Errore alla riga 1 carattere 1: Il documento deve iniziare con un elemento (es. &lt;book&gt;)\n</code></pre>\n\n<p>Translated from Italian to English:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>(.:11977): Gtk-ERROR **: 21:10:01.149: failed to add UI: Error on line 1 char 1: Document must begin with an element (e.g. &lt;book&gt;)\n</code></pre>\n\n<p>The error says that Rust is trying to open a file (made with Glade) which is empty or its syntax is wrong.</p>\n\n<p>My Rust file compiles without any errors:</p>\n\n<pre><code>extern crate gtk;\n\nuse gtk::traits::*;\nuse gtk::Builder;\nuse gtk::Inhibit;\n\nfn main() {\n    // Initialise gtk components\n    if gtk::init().is_err() {\n        println!(\"Unable to load GTK.\");\n        return;\n    }\n\n    // Load glade file\n    let builder = Builder::new_from_string(\"mainWindow.glade\");\n\n    // Create Window\n    let window: gtk::Window = builder.get_object(\"mainWindow\").unwrap();\n\n    // Set close event\n    window.connect_delete_event(|_, _| {\n        gtk::main_quit();\n        Inhibit(true)\n    });\n\n    // Show the window and call the main() loop of gtk\n    window.show_all();\n    gtk::main();\n}\n</code></pre>\n\n<p>(<a href=\"https://hastebin.com/afudixuzey.php\" rel=\"nofollow noreferrer\">Rust file</a>)</p>\n\n<p>The Glade file is:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!-- Generated with glade 3.22.1 --&gt;\n&lt;interface&gt;\n    &lt;requires lib=\"gtk+\" version=\"3.20\"/&gt;\n    &lt;!-- interface-css-provider-path style.css --&gt;\n    &lt;object class=\"GtkWindow\" id=\"mainWindow\"&gt;\n        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n        &lt;property name=\"window_position\"&gt;center&lt;/property&gt;\n        &lt;property name=\"default_width\"&gt;500&lt;/property&gt;\n        &lt;property name=\"default_height\"&gt;350&lt;/property&gt;\n        &lt;child type=\"titlebar\"&gt;\n            &lt;object class=\"GtkHeaderBar\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                &lt;property name=\"title\" translatable=\"yes\"&gt;rustup-gui&lt;/property&gt;\n                &lt;property name=\"subtitle\" translatable=\"yes\"&gt;A simple GUI for rustup.&lt;/property&gt;\n                &lt;property name=\"show_close_button\"&gt;True&lt;/property&gt;\n                &lt;child&gt;\n                    &lt;object class=\"GtkMenuBar\"&gt;\n                        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                        &lt;child&gt;\n                            &lt;object class=\"GtkMenuItem\"&gt;\n                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                &lt;property name=\"tooltip_text\" translatable=\"yes\"&gt;Here you can find some basic action which can be done with rustup.&lt;/property&gt;\n                                &lt;property name=\"label\" translatable=\"yes\"&gt;Rustup&lt;/property&gt;\n                                &lt;property name=\"use_underline\"&gt;True&lt;/property&gt;\n                                &lt;child type=\"submenu\"&gt;\n                                    &lt;object class=\"GtkMenu\"&gt;\n                                        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                        &lt;child&gt;\n                                            &lt;object class=\"GtkMenuItem\"&gt;\n                                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                                &lt;property name=\"tooltip_text\" translatable=\"yes\"&gt;Get all the info related to the current rustup installation.&lt;/property&gt;\n                                                &lt;property name=\"label\" translatable=\"yes\"&gt;Info&lt;/property&gt;\n                                                &lt;property name=\"use_underline\"&gt;True&lt;/property&gt;\n                                            &lt;/object&gt;\n                                        &lt;/child&gt;\n                                    &lt;/object&gt;\n                                &lt;/child&gt;\n                            &lt;/object&gt;\n                        &lt;/child&gt;\n                        &lt;child&gt;\n                            &lt;object class=\"GtkMenuItem\"&gt;\n                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                &lt;property name=\"label\" translatable=\"yes\"&gt;Set...&lt;/property&gt;\n                                &lt;property name=\"use_underline\"&gt;True&lt;/property&gt;\n                                &lt;child type=\"submenu\"&gt;\n                                    &lt;object class=\"GtkMenu\"&gt;\n                                        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                        &lt;child&gt;\n                                            &lt;object class=\"GtkMenuItem\"&gt;\n                                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                                &lt;property name=\"label\" translatable=\"yes\"&gt;Default toolchain&lt;/property&gt;\n                                                &lt;property name=\"use_underline\"&gt;True&lt;/property&gt;\n                                            &lt;/object&gt;\n                                        &lt;/child&gt;\n                                    &lt;/object&gt;\n                                &lt;/child&gt;\n                            &lt;/object&gt;\n                        &lt;/child&gt;\n                    &lt;/object&gt;\n                &lt;/child&gt;\n            &lt;/object&gt;\n        &lt;/child&gt;\n        &lt;child&gt;\n            &lt;object class=\"GtkBox\"&gt;\n                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                &lt;property name=\"orientation\"&gt;vertical&lt;/property&gt;\n                &lt;child&gt;\n                    &lt;object class=\"GtkBox\"&gt;\n                        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                        &lt;child&gt;\n                            &lt;object class=\"GtkCheckButton\"&gt;\n                                &lt;property name=\"label\" translatable=\"yes\"&gt;Vervose output (-v)&lt;/property&gt;\n                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"receives_default\"&gt;False&lt;/property&gt;\n                                &lt;property name=\"draw_indicator\"&gt;True&lt;/property&gt;\n                                &lt;signal name=\"toggled\" handler=\"tglVerbose_Toggled\" swapped=\"no\"/&gt;\n                            &lt;/object&gt;\n                            &lt;packing&gt;\n                                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"position\"&gt;0&lt;/property&gt;\n                            &lt;/packing&gt;\n                        &lt;/child&gt;\n                        &lt;child&gt;\n                            &lt;object class=\"GtkLabel\"&gt;\n                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                &lt;property name=\"margin_left\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"margin_right\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"margin_top\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"margin_bottom\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"label\" translatable=\"yes\"&gt;Custom command&lt;/property&gt;\n                            &lt;/object&gt;\n                            &lt;packing&gt;\n                                &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"position\"&gt;1&lt;/property&gt;\n                            &lt;/packing&gt;\n                        &lt;/child&gt;\n                        &lt;child&gt;\n                            &lt;object class=\"GtkEntry\"&gt;\n                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"margin_left\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"margin_right\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"margin_top\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"margin_bottom\"&gt;5&lt;/property&gt;\n                                &lt;property name=\"placeholder_text\" translatable=\"yes\"&gt;rustup ...&lt;/property&gt;\n                            &lt;/object&gt;\n                            &lt;packing&gt;\n                                &lt;property name=\"expand\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"position\"&gt;2&lt;/property&gt;\n                            &lt;/packing&gt;\n                        &lt;/child&gt;\n                    &lt;/object&gt;\n                    &lt;packing&gt;\n                        &lt;property name=\"expand\"&gt;False&lt;/property&gt;\n                        &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                        &lt;property name=\"position\"&gt;0&lt;/property&gt;\n                    &lt;/packing&gt;\n                &lt;/child&gt;\n                &lt;child&gt;\n                    &lt;object class=\"GtkFrame\"&gt;\n                        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                        &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                        &lt;property name=\"margin_left\"&gt;5&lt;/property&gt;\n                        &lt;property name=\"margin_right\"&gt;5&lt;/property&gt;\n                        &lt;property name=\"margin_top\"&gt;5&lt;/property&gt;\n                        &lt;property name=\"margin_bottom\"&gt;5&lt;/property&gt;\n                        &lt;property name=\"label_xalign\"&gt;0.5&lt;/property&gt;\n                        &lt;property name=\"shadow_type\"&gt;in&lt;/property&gt;\n                        &lt;child&gt;\n                            &lt;object class=\"GtkAlignment\"&gt;\n                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                &lt;child&gt;\n                                    &lt;object class=\"GtkTextView\" id=\"txtOutput\"&gt;\n                                        &lt;property name=\"width_request\"&gt;100&lt;/property&gt;\n                                        &lt;property name=\"height_request\"&gt;130&lt;/property&gt;\n                                        &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                        &lt;property name=\"can_focus\"&gt;True&lt;/property&gt;\n                                        &lt;property name=\"margin_left\"&gt;5&lt;/property&gt;\n                                        &lt;property name=\"margin_right\"&gt;5&lt;/property&gt;\n                                        &lt;property name=\"margin_top\"&gt;5&lt;/property&gt;\n                                        &lt;property name=\"margin_bottom\"&gt;5&lt;/property&gt;\n                                        &lt;property name=\"hexpand\"&gt;True&lt;/property&gt;\n                                        &lt;property name=\"vexpand\"&gt;True&lt;/property&gt;\n                                        &lt;property name=\"editable\"&gt;False&lt;/property&gt;\n                                        &lt;property name=\"monospace\"&gt;True&lt;/property&gt;\n                                    &lt;/object&gt;\n                                &lt;/child&gt;\n                            &lt;/object&gt;\n                        &lt;/child&gt;\n                        &lt;child type=\"label\"&gt;\n                            &lt;object class=\"GtkLabel\"&gt;\n                                &lt;property name=\"visible\"&gt;True&lt;/property&gt;\n                                &lt;property name=\"can_focus\"&gt;False&lt;/property&gt;\n                                &lt;property name=\"label\" translatable=\"yes\"&gt;Console output&lt;/property&gt;\n                            &lt;/object&gt;\n                        &lt;/child&gt;\n                    &lt;/object&gt;\n                    &lt;packing&gt;\n                        &lt;property name=\"expand\"&gt;True&lt;/property&gt;\n                        &lt;property name=\"fill\"&gt;True&lt;/property&gt;\n                        &lt;property name=\"position\"&gt;1&lt;/property&gt;\n                    &lt;/packing&gt;\n                &lt;/child&gt;\n            &lt;/object&gt;\n        &lt;/child&gt;\n    &lt;/object&gt;\n&lt;/interface&gt;\n</code></pre>\n\n<p>(<a href=\"https://hastebin.com/imavuvurah.xml\" rel=\"nofollow noreferrer\">Glade file</a>)</p>\n\n<p>I tried to search for this error, but seems like nobody except me has experienced this awkward error. Maybe it is related to my OS? I'm using Pop!_OS, a Linux distribution based on Ubuntu, made by System76.</p>\n"}, {"tags": ["scope", "rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1532109941, "last_edit_date": 1532109941, "creation_date": 1532109746, "answer_id": 51448118, "question_id": 51448037, "link": "https://stackoverflow.com/questions/51448037/no-method-named-push-str-found-for-type-str-after-trimming-a-string/51448118#51448118", "title": "No method named `push_str` found for type `&amp;str` after trimming a string", "body": "<blockquote>\n  <p>I'm assuming it's because I shadow <code>answer</code> trimming it </p>\n</blockquote>\n\n<p>Yes. <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#method.trim\" rel=\"nofollow noreferrer\"><code>String::trim</code></a> returns a <code>&amp;str</code>:</p>\n\n<pre><code>pub fn trim(&amp;self) -&gt; &amp;str\n</code></pre>\n\n<p><code>&amp;str</code> does not have the <code>push_str</code> method.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/41198951/155423\">Why does `name = *name.trim();` give me `expected struct `std::string::String`, found str`?</a></li>\n<li><a href=\"https://stackoverflow.com/q/31276059/155423\">Efficient trimming of a String</a></li>\n<li><a href=\"https://stackoverflow.com/q/38447780/155423\">How to &quot;crop&quot; characters off the beginning of a string in Rust?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 3637260, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/64d5575890f5322ce4c1d0663ca18bb4?s=128&d=identicon&r=PG&f=1", "display_name": "user3637260", "link": "https://stackoverflow.com/users/3637260/user3637260"}, "is_accepted": false, "score": 2, "last_activity_date": 1532110413, "last_edit_date": 1532110413, "creation_date": 1532110026, "answer_id": 51448191, "question_id": 51448037, "link": "https://stackoverflow.com/questions/51448037/no-method-named-push-str-found-for-type-str-after-trimming-a-string/51448191#51448191", "title": "No method named `push_str` found for type `&amp;str` after trimming a string", "body": "<p>You're right, <code>let answer = answer.trim();</code> is the problem. It sets <code>answer</code> to have type <code>&amp;str</code>, and that <code>push_str</code> is defined for a mutable <code>String</code>.</p>\n\n<p>You can fix it by changing that line to:</p>\n\n<pre><code>answer = answer.trim().to_string();\n</code></pre>\n"}], "owner": {"reputation": 19, "user_id": 10112313, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a35f10a2d32b378d0e5409bfe2a8eb4?s=128&d=identicon&r=PG&f=1", "display_name": "Ckiller", "link": "https://stackoverflow.com/users/10112313/ckiller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1977, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1532110413, "creation_date": 1532109483, "last_edit_date": 1532109787, "question_id": 51448037, "link": "https://stackoverflow.com/questions/51448037/no-method-named-push-str-found-for-type-str-after-trimming-a-string", "title": "No method named `push_str` found for type `&amp;str` after trimming a string", "body": "<p>I keep getting this error. I'm assuming it's because I shadow <code>answer</code> trimming it since when I comment that part out I don't get the error anymore. I don't understand why that is. </p>\n\n<pre><code>fn main() {\n    let mut answer = String::new();\n    let num = 40;\n\n    if num % 2 == 0 {\n        answer.push_str(\"fact2 \");\n    }\n    if num % 5 == 0 {\n        answer.push_str(\"fact5 \");\n    }\n\n    let answer = answer.trim();\n    answer.push_str(\"bob was here\");\n    println!(\"{}\", answer);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `push_str` found for type `&amp;str` in the current scope\n  --&gt; src/main.rs:13:12\n   |\n13 |     answer.push_str(\"bob was here\");\n   |            ^^^^^^^^\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": false, "score": 4, "last_activity_date": 1532979697, "last_edit_date": 1532979697, "creation_date": 1532111945, "answer_id": 51448603, "question_id": 51447656, "link": "https://stackoverflow.com/questions/51447656/is-there-any-way-to-convert-boxboxfoo-send-to-boxboxfoo/51448603#51448603", "title": "Is there any way to convert Box&lt;Box&lt;Foo + Send&gt;&gt; to Box&lt;Box&lt;Foo&gt;&gt;?", "body": "<p>Here's one way to do it: dereference <code>b</code> (\"un-boxing\" it to a <code>Box&lt;Foo + Send&gt;</code>), then wrap it up immediately in another <code>Box&lt;T&gt;</code>, allowing the compiler to infer the correct <code>T</code> (in this case <code>Box&lt;Foo&gt;</code>).</p>\n\n<pre><code>consume_func(Box::new(*b));\n</code></pre>\n\n<p>This works because <code>Box&lt;Foo + Send&gt;</code> can be automatically coerced to <code>Box&lt;Foo&gt;</code>, but <code>Box&lt;Box&lt;Foo + Send&gt;&gt;</code> cannot be coerced to <code>Box&lt;Box&lt;Foo&gt;&gt;</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1532134613, "creation_date": 1532134613, "answer_id": 51451932, "question_id": 51447656, "link": "https://stackoverflow.com/questions/51447656/is-there-any-way-to-convert-boxboxfoo-send-to-boxboxfoo/51451932#51451932", "title": "Is there any way to convert Box&lt;Box&lt;Foo + Send&gt;&gt; to Box&lt;Box&lt;Foo&gt;&gt;?", "body": "<p>Although you've stated you cannot change <code>consume_func</code>, others with similar issues can change it to accept a generic:</p>\n\n<pre><code>fn consume_func&lt;F: Foo + ?Sized&gt;(b: Box&lt;Box&lt;F&gt;&gt;) {\n    unimplemented!();\n}\n</code></pre>\n"}], "owner": {"reputation": 5913, "user_id": 1244932, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/d2c608e688b798896e8b516855fc1ab1?s=128&d=identicon&r=PG", "display_name": "user1244932", "link": "https://stackoverflow.com/users/1244932/user1244932"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 51451932, "answer_count": 2, "score": 2, "last_activity_date": 1532979697, "creation_date": 1532107739, "last_edit_date": 1532134698, "question_id": 51447656, "link": "https://stackoverflow.com/questions/51447656/is-there-any-way-to-convert-boxboxfoo-send-to-boxboxfoo", "title": "Is there any way to convert Box&lt;Box&lt;Foo + Send&gt;&gt; to Box&lt;Box&lt;Foo&gt;&gt;?", "body": "<p>Consider such code:</p>\n\n<pre><code>trait Foo {\n    fn foo(&amp;self);\n}\n\nfn consume_func(b: Box&lt;Box&lt;Foo&gt;&gt;) {\n    unimplemented!();\n}\n\nfn produce_func() -&gt; Box&lt;Box&lt;Foo + Send&gt;&gt; {\n    unimplemented!();\n}\n\nfn main() {\n    let b = produce_func();\n    consume_func(b);\n}\n</code></pre>\n\n<p>It doesn't compile:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:24:18\n   |\n24 |     consume_func(b);\n   |                  ^ expected trait `Foo`, found trait `Foo + std::marker::Send`\n   |\n   = note: expected type `std::boxed::Box&lt;std::boxed::Box&lt;Foo + 'static&gt;&gt;`\n              found type `std::boxed::Box&lt;std::boxed::Box&lt;Foo + std::marker::Send&gt;&gt;`\n</code></pre>\n\n<p>The double <code>Box</code> is <a href=\"https://stackoverflow.com/q/33929079/155423\">a way to give a C library a <code>void *</code> pointer from <code>Box&lt;Trait&gt;</code></a>. Because of fat pointers, I can not convert <code>Box&lt;Foo&gt;</code> to <code>void *</code>.</p>\n\n<p>I can not change <code>consume_func</code>, and I'd prefer to not use <code>unsafe</code> or additional allocation.</p>\n"}, {"tags": ["rust", "pattern-matching"], "answers": [{"comments": [{"owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 0, "creation_date": 1532103228, "post_id": 51446548, "comment_id": 89863365, "body": "Thanks for editing my question! I cannot change the union. Can I use <code>std::any::TypeId</code> then?"}, {"owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 0, "creation_date": 1532103556, "post_id": 51446548, "comment_id": 89863536, "body": "Sure, but assume union has a lot of fields, then your suggestion is not really feasible!"}, {"owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 0, "creation_date": 1532103726, "post_id": 51446548, "comment_id": 89863639, "body": "Maybe instead of <code>is_int</code> can store <code>type_id</code> and match against that?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 0, "creation_date": 1532103820, "post_id": 51446548, "comment_id": 89863692, "body": "<i>Why</i> would you want to use <code>TypeId</code>, which can literally be any possible type ever, instead of a small fixed set (as is shown)?"}, {"owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 0, "creation_date": 1532103890, "post_id": 51446548, "comment_id": 89863731, "body": "As I said, I don&#39;t think it&#39;s a good idea to repeat every type in the union when it has 100 different fields and types for example!"}, {"owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 0, "creation_date": 1532103993, "post_id": 51446548, "comment_id": 89863784, "body": "Although my suggestion is more hypothetical than practical I suppose!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 3, "creation_date": 1532104090, "post_id": 51446548, "comment_id": 89863833, "body": "@EhsanM.Kermani If you have a union with <b>100 possibilities</b> you have bigger problems. Regardless, I&#39;d <i>still</i> say that enforcing more things statically is better. If that&#39;s not a goal of yours, then Rust <i>may</i> not be a good fit for you or the problem you are attempting to solve."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "edited": false, "score": 3, "creation_date": 1532104135, "post_id": 51446548, "comment_id": 89863858, "body": "@EhsanM.Kermani Also, if you have a union with two possibilities of the same type, then it seems like <code>TypeId</code> will be unusable."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 7, "last_activity_date": 1532104431, "last_edit_date": 1532104431, "creation_date": 1532103094, "answer_id": 51446548, "question_id": 51446445, "link": "https://stackoverflow.com/questions/51446445/why-does-pattern-matching-on-a-union-have-an-unreachable-pattern-warning/51446548#51446548", "title": "Why does pattern matching on a union have an unreachable pattern warning?", "body": "<p>The <em>entire</em> point of a <code>union</code> is that the compiler doesn't store any information in the <code>union</code> about what type it is; it's <strong>completely up to the programmer</strong>. Because of this, there's no information for a <code>match</code> to use to decide what type the value is. </p>\n\n<p>Because of this, your code is conceptually equivalent to </p>\n\n<pre><code>struct A {\n    a1: i32,\n}\n\nlet b = A { a1: 42 };\n\nmatch b {\n    A { a1 } =&gt; println!(\"int {}\", a1),\n    A { a1 } =&gt; println!(\"float {}\", a1),\n}\n</code></pre>\n\n<p>There's no case in which the second match arm will ever be executed.</p>\n\n<p>In fact, switching back and forth between the fields is a prime usage of a <code>union</code>:</p>\n\n<pre><code>union A {\n    i: i32,\n    f: f32,\n}\n\nlet a = A { i: 42 };\nlet b = unsafe { a.f };\n\nprintln!(\"{}\", b);\n</code></pre>\n\n<hr>\n\n<p>You may wish to use an <code>enum</code> if you want the compiler to keep track of what variant you have. In some contexts, enums are called <em>tagged unions</em> because that's exactly what they are: a union with a tag alongside to identify what the union contains.</p>\n\n<p>Otherwise, you need to track what type is actually in the union in some other manner. One such way is to implement your own tag:</p>\n\n<pre><code>union A {\n    a1: i32,\n    a2: f32,\n}\n\nstruct B {\n    is_int: bool,\n    data: A,\n}\n\nlet b = B {\n    is_int: false,\n    data: A { a2: 1.0 },\n};\n\nunsafe {\n    match b {\n        B {\n            is_int: true,\n            data: A { a1 },\n        } =&gt; println!(\"int {}\", a1),\n        B {\n            is_int: false,\n            data: A { a2 },\n        } =&gt; println!(\"float {}\", a2),\n    }\n}\n</code></pre>\n\n<p>The tag can be anything you can match on:</p>\n\n<pre><code>union A {\n    a1: i32,\n    a2: f32,\n}\n\nstruct B {\n    kind: Kind,\n    data: A,\n}\n\nenum Kind {\n    Int,\n    Float,\n}\n\nlet b = B {\n    kind: Kind::Float,\n    data: A { a2: 1.0 },\n};\n\nunsafe {\n    match b {\n        B {\n            kind: Kind::Int,\n            data: A { a1 },\n        } =&gt; println!(\"int {}\", a1),\n        B {\n            kind: Kind::Float,\n            data: A { a2 },\n        } =&gt; println!(\"float {}\", a2),\n    }\n}\n</code></pre>\n\n<p>I suppose you could even use an enum <em>around</em> the union...</p>\n\n<pre><code>union A {\n    a1: i32,\n    a2: f32,\n}\n\nenum B {\n    Int(A),\n    Float(A),\n}\n\nlet b = B::Float(A { a2: 1.0 });\n\nunsafe {\n    match b {\n        B::Int(A { a1 }) =&gt; println!(\"int {}\", a1),\n        B::Float(A { a2 }) =&gt; println!(\"float {}\", a2),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 842, "user_id": 1375899, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7881c4b6271f3b501fe6930aa1798907?s=128&d=identicon&r=PG", "display_name": "Ehsan M. Kermani", "link": "https://stackoverflow.com/users/1375899/ehsan-m-kermani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 265, "favorite_count": 0, "accepted_answer_id": 51446548, "answer_count": 1, "score": 4, "last_activity_date": 1532104431, "creation_date": 1532102621, "last_edit_date": 1532102966, "question_id": 51446445, "link": "https://stackoverflow.com/questions/51446445/why-does-pattern-matching-on-a-union-have-an-unreachable-pattern-warning", "title": "Why does pattern matching on a union have an unreachable pattern warning?", "body": "<p>Given the <a href=\"https://doc.rust-lang.org/beta/reference/items/unions.html\" rel=\"nofollow noreferrer\">documentation</a>, I cannot understand why the pattern matching on a union doesn't work properly:</p>\n\n<pre><code>union A {\n    a1: i32,\n    a2: f32,\n}\n\nstruct B(A);\nlet b = B(A { a2: 1.0 });\nunsafe {\n    match b.0 {\n        A { a1 } =&gt; println!(\"int\"),\n        A { a2 } =&gt; println!(\"float\"),\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=c4b0a312f808e13c5ebc6844b4318d8b&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Outputs \"int\" with an unreachable warning</a>. </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: unreachable pattern\n  --&gt; src/main.rs:12:13\n   |\n12 |             A { a2 } =&gt; println!(\"float\"),\n   |             ^^^^^^^^\n   |\n   = note: #[warn(unreachable_patterns)] on by default\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1532108486, "last_edit_date": 1532108486, "creation_date": 1532098419, "answer_id": 51445228, "question_id": 51445191, "link": "https://stackoverflow.com/questions/51445191/get-value-out-of-optional-hashmap-only-when-present/51445228#51445228", "title": "Get value out of optional HashMap only when present", "body": "<p>Call <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\" rel=\"nofollow noreferrer\"><code>Option::as_ref</code></a>. It converts an <code>Option&lt;T&gt;</code> to <code>Option&lt;&amp;T&gt;</code>:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntype MyMap = HashMap&lt;String, String&gt;;\n\nfn get_map() -&gt; Option&lt;MyMap&gt; {\n    // In the real case, we may or may not be able to return a map\n    Some(MyMap::new())\n}\n\nfn main() {\n    let map = get_map();\n    let res = map.as_ref().and_then(|h| h.get(\"foo\"));\n    println!(\"{:?}\", res)\n}\n</code></pre>\n\n<p>What happened is that <code>and_then</code> consumes the <code>Option</code>; so you were trying to hold a reference to the consumed data.</p>\n\n<p>The same rule applies for the returned value of <code>get_map()</code>: if it is not stored in its own variable, it remains a temporary value, to which you cannot hold a reference.</p>\n"}], "owner": {"reputation": 708, "user_id": 1289053, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/25fb6e5217efe888898ea3cf80bf035c?s=128&d=identicon&r=PG", "display_name": "Boris Bera", "link": "https://stackoverflow.com/users/1289053/boris-bera"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 51445228, "answer_count": 1, "score": 1, "last_activity_date": 1532108486, "creation_date": 1532098300, "last_edit_date": 1532104579, "question_id": 51445191, "link": "https://stackoverflow.com/questions/51445191/get-value-out-of-optional-hashmap-only-when-present", "title": "Get value out of optional HashMap only when present", "body": "<p>I have a bit of code that loads a <code>HashMap</code> and then retrieves a value with the <code>map.get(...)</code> method. In my case, it's possible that I may not be able to return a <code>HashMap</code>, so in reality I'm dealing with an <code>Option&lt;HashMap&gt;</code>.</p>\n\n<p>I've managed to isolate my problem in the following snippet:</p>\n\n<pre><code>use std::collections::HashMap;\n\ntype MyMap = HashMap&lt;String, String&gt;;\n\nfn get_map() -&gt; Option&lt;MyMap&gt; {\n    // In the real case, we may or may not be able to return a map\n    Some(MyMap::new())\n}\n\nfn main() {\n    let res = get_map().and_then(|h| h.get(\"foo\"));\n    println!(\"{:?}\", res)\n}\n</code></pre>\n\n<p>I get the following compilation error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `h` does not live long enough\n  --&gt; src/main.rs:11:38\n   |\n11 |     let res = get_map().and_then(|h| h.get(\"foo\"));\n   |                                      ^          - `h` dropped here while still borrowed\n   |                                      |\n   |                                      borrowed value does not live long enough\n12 |     println!(\"{:?}\", res)\n13 | }\n   | - borrowed value needs to live until here\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?gist=4d054c165eba368d5c52246096591ab1&amp;version=stable&amp;mode=debug&amp;edition=2015\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<p>I think that I get what's going on here:</p>\n\n<ul>\n<li>The <code>HashMap</code> owns all of its key-value pairs.</li>\n<li>When I call <code>h.get(...)</code> it lends me the value. </li>\n<li>Because of that the <code>HashMap</code> needs to exist as long as the value exists.</li>\n</ul>\n\n<p>There are really two questions here:</p>\n\n<ol>\n<li>Am I understanding this correctly?</li>\n<li>How do I fix this?</li>\n</ol>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 466742, "user_id": 224671, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c90de868a7e95d75bdfd6a906dfedac7?s=128&d=identicon&r=PG", "display_name": "kennytm", "link": "https://stackoverflow.com/users/224671/kennytm"}, "is_accepted": true, "score": 4, "last_activity_date": 1532100298, "creation_date": 1532100298, "answer_id": 51445817, "question_id": 51445078, "link": "https://stackoverflow.com/questions/51445078/how-to-avoid-specifying-the-same-type-twice-in-trait-implementation/51445817#51445817", "title": "How to avoid specifying the same type twice in trait implementation?", "body": "<p>The ingredient you're looking for is <strong>Default Type Parameters</strong>, where you could make <code>T</code> default to <code>Self</code>: </p>\n\n<pre><code>trait A&lt;T = Self&gt; {\n    fn f();\n}\n\nstruct Tee;\nimpl A for Tee {   // the \"A\" is A&lt;Self&gt;, i.e. A&lt;Tee&gt;.\n    fn f() {} \n}\n</code></pre>\n\n<p>In the standard library, the <a href=\"https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\" rel=\"nofollow noreferrer\"><code>PartialEq</code></a> trait is an example using this.</p>\n"}], "owner": {"reputation": 12555, "user_id": 1750757, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Zmc7D.jpg?s=128&g=1", "display_name": "Victor Polevoy", "link": "https://stackoverflow.com/users/1750757/victor-polevoy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 1, "accepted_answer_id": 51445817, "answer_count": 1, "score": 1, "last_activity_date": 1532104493, "creation_date": 1532097871, "last_edit_date": 1532104493, "question_id": 51445078, "link": "https://stackoverflow.com/questions/51445078/how-to-avoid-specifying-the-same-type-twice-in-trait-implementation", "title": "How to avoid specifying the same type twice in trait implementation?", "body": "<p>I remember there was a way to define a trait so that you will not need to write this:</p>\n\n<pre><code>trait A&lt;T&gt; {\n    fn f();\n}\n\nimpl A&lt;T&gt; for T {\n    fn f() {}\n}\n</code></pre>\n\n<p>As far as I can remember, it was possible to shorten the <code>impl A&lt;T&gt; for T</code> line like this:</p>\n\n<pre><code>impl A for T {\n</code></pre>\n\n<p>I don't recall the exact recipe of doing this. I believe there is a term related to such a shortening.</p>\n"}, {"tags": ["sockets", "networking", "rust", "udp", "dhcp"], "comments": [{"owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1532133056, "post_id": 51443118, "comment_id": 89873814, "body": "Not intimate w/ DHCP discovery protocol, but does net::UdpSocket::bind(&quot;0.0.0.0:68&quot;) accomplish what you&#39;re looking to send?"}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "reply_to_user": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1532376066, "post_id": 51443118, "comment_id": 89941829, "body": "No. My sockets are always bound like that. If there are no configured interfaces, bind returns no errors, but send-like methods return &#39;Network unreachable&#39;. If there is a configured interface, the socket gets bound to it and the source address is the IP of the interface. If there were a way to use unbounded sockets (looks like unix stuff allows that, but I&#39;m not sure yet), it could succeed."}, {"owner": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1532390269, "post_id": 51443118, "comment_id": 89946177, "body": "how are you connecting? Perhaps a code snippet of what you&#39;re doing now would be helpful"}, {"owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "reply_to_user": {"reputation": 1736, "user_id": 130554, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1affa5f0b72a1a76c8b72bc0ccc6f552?s=128&d=identicon&r=PG", "display_name": "Digikata", "link": "https://stackoverflow.com/users/130554/digikata"}, "edited": false, "score": 0, "creation_date": 1532456576, "post_id": 51443118, "comment_id": 89979467, "body": "Posted the code above."}], "answers": [{"tags": [], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "is_accepted": true, "score": 0, "last_activity_date": 1534103855, "creation_date": 1534103855, "answer_id": 51812352, "question_id": 51443118, "link": "https://stackoverflow.com/questions/51443118/how-do-i-send-a-udp-datagram-with-source-address-0-0-0-0-in-rust/51812352#51812352", "title": "How do I send a UDP datagram with source address 0.0.0.0 in Rust?", "body": "<p>It is not possible with Rust's high level UDP abstractions.</p>\n\n<p>Low level packet builders must be used instead. For example, BPF on FreeBSD and Mac OS.</p>\n"}], "owner": {"reputation": 886, "user_id": 8170773, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/61b971ec934427a008d8b263ad4142b9?s=128&d=identicon&r=PG&f=1", "display_name": "hedgar2017", "link": "https://stackoverflow.com/users/8170773/hedgar2017"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 459, "favorite_count": 0, "accepted_answer_id": 51812352, "answer_count": 1, "score": 2, "last_activity_date": 1534167945, "creation_date": 1532091606, "last_edit_date": 1534167945, "question_id": 51443118, "link": "https://stackoverflow.com/questions/51443118/how-do-i-send-a-udp-datagram-with-source-address-0-0-0-0-in-rust", "title": "How do I send a UDP datagram with source address 0.0.0.0 in Rust?", "body": "<p>I am writing a DHCP client in Rust.</p>\n\n<p>The client must send a DHCPDISCOVER message when there are no configured interfaces. Tools like <code>dhclient</code> are able to do that by sending the message with source address <code>0.0.0.0</code>.</p>\n\n<p>Unfortunately, with high level Rust primitives I cannot tweak IP header.</p>\n\n<p>Should I completely move to a low level networking solution (libc, nix) or is there a better approach?</p>\n\n<p>The binding code:</p>\n\n<pre><code>let socket = UdpBuilder::new_v4()?;\nlet socket = socket.bind(addr)?;\nlet socket = UdpSocket::from_std(socket, &amp;Handle::default())?;\nsocket.set_broadcast(true)?;\n</code></pre>\n\n<p><code>UdpBuilder</code> is from the <code>net2</code> crate.</p>\n\n<p><code>UdpSocket</code> is from the <code>tokio</code> crate.</p>\n\n<p><code>addr</code> = <code>SocketAddr::new(IpAddr::V4(Ipv4Addr::new(0,0,0,0)), 68)</code></p>\n"}, {"tags": ["jenkins", "github", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532088521, "post_id": 51441880, "comment_id": 89854190, "body": "You can use <code>ssh-agent</code>"}, {"owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532089300, "post_id": 51441880, "comment_id": 89854668, "body": "I assume you are referring to this plugin <a href=\"https://plugins.jenkins.io/ssh-agent\" rel=\"nofollow noreferrer\">plugins.jenkins.io/ssh-agent</a> will this add the credentials to the docker slave?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532089386, "post_id": 51441880, "comment_id": 89854729, "body": "I did not think about a precise plugin, but if you can add the ssh key somehow, everything should be fine."}, {"owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532091019, "post_id": 51441880, "comment_id": 89855704, "body": "I tried with ssh-agent plugin, getting a different error now, any tips? (see the edit)"}], "answers": [{"tags": [], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "is_accepted": true, "score": 1, "last_activity_date": 1532417576, "creation_date": 1532417576, "answer_id": 51492948, "question_id": 51441880, "link": "https://stackoverflow.com/questions/51441880/how-do-i-use-jenkins-to-build-a-private-github-rust-project-with-a-private-githu/51492948#51492948", "title": "How do I use Jenkins to build a private GitHub Rust project with a private GitHub dependency?", "body": "<p>Okay, I figured it out, <code>No user exists for uid</code> error is because of a mismatch between the users in the host <code>/etc/passwd</code> and the container <code>/etc/passwd</code>. This can be fixed by mounting <code>/etc/passwd</code>.</p>\n\n<pre><code>  agent {\n    docker {\n      image 'rust:latest'\n      args '-v /etc/passwd:/etc/passwd'\n    }\n  }\n</code></pre>\n\n<p>Then    </p>\n\n<pre><code>  sshagent(credentials: ['id-of-github-credentials']) {\n    sh \"cargo build\"\n  }\n</code></pre>\n\n<p>Works just fine</p>\n"}], "owner": {"reputation": 2434, "user_id": 4591251, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/22ad6242d3ca1d772c46a5d00389d925?s=128&d=identicon&r=PG", "display_name": "Ross MacArthur", "link": "https://stackoverflow.com/users/4591251/ross-macarthur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1287, "favorite_count": 0, "accepted_answer_id": 51492948, "answer_count": 1, "score": 2, "last_activity_date": 1532417576, "creation_date": 1532087363, "last_edit_date": 1532091659, "question_id": 51441880, "link": "https://stackoverflow.com/questions/51441880/how-do-i-use-jenkins-to-build-a-private-github-rust-project-with-a-private-githu", "title": "How do I use Jenkins to build a private GitHub Rust project with a private GitHub dependency?", "body": "<p>I have a private GitHub Rust project that depends on another private GitHub Rust project and I want to build the main one with Jenkins. I have called the organization <code>Organization</code> and the dependency package <code>subcrate</code> in the below code.</p>\n\n<p>My Jenkinsfile looks something like</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>pipeline {\n  agent {\n    docker {\n      image 'rust:latest'\n    }\n  }\n\n  stages {\n\n    stage('Build') {\n      steps {\n        sh \"cargo build\"\n      }\n    }\n\n    etc...\n\n  }\n}\n</code></pre>\n\n<p>I have tried the following in <code>Cargo.toml</code> to reference the dependency, it works fine on my machine</p>\n\n<pre><code>[dependencies]\nsubcrate = { git = \"ssh://git@ssh.github.com/Organization/subcrate.git\", tag = \"0.1.0\" }\n</code></pre>\n\n<p>When Jenkins runs I get the following error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+ cargo build\n\n    Updating registry `https://github.com/rust-lang/crates.io-index`\n\n    Updating git repository `ssh://git@github.com/Organization/subcrate.git`\n\nerror: failed to load source for a dependency on `subcrate`\n\nCaused by:\n\n  Unable to update ssh://git@github.com/Organization/subcrate.git?tag=0.1.0#0623c097\n\nCaused by:\n\n  failed to clone into: /usr/local/cargo/git/db/subcrate-3e391025a927594e\n\nCaused by:\n\n  failed to authenticate when downloading repository\n\nattempted ssh-agent authentication, but none of the usernames `git` succeeded\n\nCaused by:\n\n  error authenticating: no auth sock variable; class=Ssh (23)\n\nscript returned exit code 101\n</code></pre>\n\n<p>How can I get Cargo to access this GitHub repository? Do I need to inject the GitHub credentials onto the slave? If so, how can I do this? Is it possible to use the same credentials Jenkins uses to checkout the main crate in the first place?</p>\n\n<p>I installed the <code>ssh-agent</code> plugin and updated my Jenkinsfile to look like this</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>pipeline {\n  agent {\n    docker {\n      image 'rust:latest'\n    }\n  }\n\n  stages {\n    stage('Build') {\n      steps {\n        sshagent(credentials: ['id-of-github-credentials']) {\n          sh \"ssh -vvv -T git@github.com\"\n          sh \"cargo build\"\n        }\n      }\n    }\n\n    etc...\n\n  }\n}\n</code></pre>\n\n<p>I get the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>+ ssh -vvv -T git@github.com\n\nNo user exists for uid 113\n\nscript returned exit code 255\n</code></pre>\n"}, {"tags": ["rust", "higher-rank-types"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532067662, "post_id": 51435951, "comment_id": 89842293, "body": "Try to compile it with nightly, but then you will get a different error. I don&#39;t know if it correlates with the compiler bug, but I do think, that is an error in your code?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532072390, "post_id": 51435951, "comment_id": 89844753, "body": "@hellow The error message is exactly the same in stable and nightly"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532076805, "post_id": 51435951, "comment_id": 89847324, "body": "Your original code also has a couple of bugs in it anyway. You don&#39;t actually use the lifetime <code>&#39;x</code>. Changing that line to <code>for&lt;&#39;x&gt; &lt;(&amp;&#39;a T) as IntoIterator&gt;::Item: PartialEq&lt;&amp;&#39;x U&gt;</code> <i>should</i> work, except that the compiler will reject impls of <code>Drop</code> that have stricter bounds than the struct definition. The problem with an existentially quantified lifetime is that it cannot be compared to another because they are unknown. So It think it is <i>probably</i> reasonable that the compiler would reject this."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532076896, "post_id": 51435951, "comment_id": 89847383, "body": "@PeterHall This is labeled as a bug in the linked issue..."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1532076922, "post_id": 51435951, "comment_id": 89847402, "body": "@Boiethios Yes. But I&#39;m not <i>convinced</i> that it is. Or at least, I can see why the restrictions on Drop impls would interact with HRTB like that. The restriction may just be framed the wrong way, and should be just to ensure that there are not instances of the struct for which  <code>Drop</code> is accidentally not implemented."}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532079361, "post_id": 51435951, "comment_id": 89849005, "body": "Your original code showed a different error"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532079414, "post_id": 51435951, "comment_id": 89849054, "body": "@hellow I only changed the second snippet, not the first one"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1532079447, "post_id": 51435951, "comment_id": 89849078, "body": "Then I am wrong :D indeed. Silly me, I apologize"}], "answers": [{"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1532076703, "post_id": 51438482, "comment_id": 89847271, "body": "Hum, about your last note, it was a typo, I deleted it."}], "tags": [], "owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "is_accepted": false, "score": 3, "last_activity_date": 1532077847, "last_edit_date": 1532077847, "creation_date": 1532075984, "answer_id": 51438482, "question_id": 51435951, "link": "https://stackoverflow.com/questions/51435951/how-to-work-around-a-hrtb-bug/51438482#51438482", "title": "How to work around a HRTB bug?", "body": "<p>You can simply require the trait bound <code>PartialEq&lt;B&gt;</code>. The methods <code>eq</code> and <code>ne</code> from the trait take all arguments by reference, so there is no reason why requiring <code>PartialEq</code> for a reference to a type.</p>\n\n<p>So this works:</p>\n\n<pre><code>impl&lt;'a, 'b, T: 'a, U&gt; Drop for Contain&lt;'a, 'b, T, U&gt;\nwhere\n    &amp;'a T: IntoIterator,\n    &lt;(&amp;'a T) as IntoIterator&gt;::Item: PartialEq&lt;U&gt;,  // &lt;-- change 1 \n{\n    fn drop(&amp;mut self) {\n        for left in self.theory.left.into_iter() {\n            if left == self.right {                 // &lt;-- change 2\n                return;\n            }\n        }\n        //handle case where all lefts are different of right\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1532077847, "creation_date": 1532066475, "last_edit_date": 1532076684, "question_id": 51435951, "link": "https://stackoverflow.com/questions/51435951/how-to-work-around-a-hrtb-bug", "title": "How to work around a HRTB bug?", "body": "<p>This snippet does not compile because of a <a href=\"https://github.com/rust-lang/rust/issues/27863\" rel=\"nofollow noreferrer\">compiler bug</a>:</p>\n\n<pre><code>struct Theory&lt;'a, T: 'a&gt; {\n    left: &amp;'a T,\n}\n\npub struct Contain&lt;'a, T: 'a, U&gt;\nwhere\n    &amp;'a T: IntoIterator,\n    for&lt;'x&gt; &lt;(&amp;'a T) as IntoIterator&gt;::Item: PartialEq&lt;&amp;'x U&gt;,\n{\n    theory: Theory&lt;'a, T&gt;,\n    right: U,\n}\n\nimpl&lt;'a, T: 'a, U&gt; Drop for Contain&lt;'a, T, U&gt;\nwhere\n    &amp;'a T: IntoIterator,\n    for&lt;'x&gt; &lt;(&amp;'a T) as IntoIterator&gt;::Item: PartialEq&lt;&amp;'x U&gt;,\n{\n    fn drop(&amp;mut self) {\n        //TODO\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>I need this because I must compare the iterator <code>Item</code>s with <code>U</code>; but <code>Item</code> is a reference type, because I call <code>into_iter()</code> in a borrowed collection.</p>\n\n<p>I then tried something like this to work around:</p>\n\n<pre><code>struct Theory&lt;'a, T: 'a&gt; {\n    left: &amp;'a T,\n}\n\npub struct Contain&lt;'a, 'b: 'a, T: 'a, U: 'b&gt;\nwhere\n    &amp;'a T: IntoIterator,\n    &lt;(&amp;'a T) as IntoIterator&gt;::Item: PartialEq&lt;&amp;'b U&gt;,\n{\n    theory: Theory&lt;'a, T&gt;,\n    right: U,\n    _marker: ::std::marker::PhantomData&lt;&amp;'b ()&gt;,\n}\n\nimpl&lt;'a, 'b, T: 'a, U&gt; Drop for Contain&lt;'a, 'b, T, U&gt;\nwhere\n    &amp;'a T: IntoIterator,\n    &lt;(&amp;'a T) as IntoIterator&gt;::Item: PartialEq&lt;&amp;'b U&gt;,\n{\n    fn drop(&amp;mut self) {\n        for left in self.theory.left.into_iter() {\n            if left == &amp;self.right {\n                return;\n            }\n        }\n        //handle case where all lefts are different of right\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>But I got a:</p>\n\n<pre><code>cannot infer an appropriate lifetime for borrow expression due to conflicting requirements\n  --&gt; src/main.rs:22:24\n   |\n22 |             if left == &amp;self.right {\n   |                        ^^^^^^^^^^^\n   |\n</code></pre>\n\n<p>How can I iterate over <code>left</code>, then compare each elements with <code>right</code>?</p>\n"}, {"tags": ["enums", "rust", "conditional"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 31, "last_activity_date": 1568062584, "last_edit_date": 1568062584, "creation_date": 1532024955, "answer_id": 51429606, "question_id": 51429501, "link": "https://stackoverflow.com/questions/51429501/how-do-i-conditionally-check-if-an-enum-is-one-variant-or-another/51429606#51429606", "title": "How do I conditionally check if an enum is one variant or another?", "body": "<p>First, go back and <strong>re-read the free, official Rust book</strong>: <a href=\"https://doc.rust-lang.org/book\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a>, specifically <a href=\"https://doc.rust-lang.org/book/ch06-00-enums.html\" rel=\"noreferrer\">the chapter on enums</a>.</p>\n\n<hr>\n\n<h1><code>match</code></h1>\n\n<pre><code>fn initialize(datastore: DatabaseType) {\n    match datastore {\n        DatabaseType::Memory =&gt; {\n            // ...\n        }\n        DatabaseType::RocksDB =&gt; {\n            // ...\n        }\n    }\n}\n</code></pre>\n\n<h1><code>if let</code></h1>\n\n<pre><code>fn initialize(datastore: DatabaseType) {\n    if let DatabaseType::Memory = datastore {\n        // ...\n    } else {\n        // ...\n    }\n}\n</code></pre>\n\n<h1><code>==</code></h1>\n\n<pre><code>#[derive(PartialEq)]\nenum DatabaseType {\n    Memory,\n    RocksDB,\n}\n\nfn initialize(datastore: DatabaseType) {\n    if DatabaseType::Memory == datastore {\n        // ...\n    } else {\n        // ...\n    }\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25576748/155423\">How to compare enum without pattern matching</a></li>\n<li><a href=\"https://stackoverflow.com/q/45473656/155423\">Read from an enum without pattern matching</a></li>\n<li><a href=\"https://stackoverflow.com/q/32554285/155423\">Compare enums only by variant, not value</a></li>\n</ul>\n"}], "owner": {"reputation": 183, "user_id": 6629864, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ATrOC.png?s=128&g=1", "display_name": "Moreorem", "link": "https://stackoverflow.com/users/6629864/moreorem"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9166, "favorite_count": 1, "accepted_answer_id": 51429606, "answer_count": 1, "score": 11, "last_activity_date": 1568062584, "creation_date": 1532024562, "last_edit_date": 1532024731, "question_id": 51429501, "link": "https://stackoverflow.com/questions/51429501/how-do-i-conditionally-check-if-an-enum-is-one-variant-or-another", "title": "How do I conditionally check if an enum is one variant or another?", "body": "<p>I have an enum with two variants:</p>\n\n<pre><code>enum DatabaseType {\n    Memory,\n    RocksDB,\n}\n</code></pre>\n\n<p>What do I need in order to make a conditional if inside a function that checks if an argument is <code>DatabaseType::Memory</code> or <code>DatabaseType::RocksDB</code>?</p>\n\n<pre><code>fn initialize(datastore: DatabaseType) -&gt; Result&lt;V, E&gt; {\n    if /* Memory */ {\n        //..........\n    } else if /* RocksDB */ {\n        //..........\n    }\n}\n</code></pre>\n"}, {"tags": ["types", "rust", "rust-diesel"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1531998558, "post_id": 51420453, "comment_id": 89813071, "body": "What are the types/definitions of <code>post_type</code> and <code>post_status</code>?"}, {"owner": {"reputation": 5453, "user_id": 827081, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/7893c5231bc7a9d4959d046e2604d939?s=128&d=identicon&r=PG", "display_name": "DanielM", "link": "https://stackoverflow.com/users/827081/danielm"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1531998811, "post_id": 51420453, "comment_id": 89813243, "body": "They&#39;re columns coming from diesels schema code gen: <code>use schema::wp_posts::dsl::*</code> both are a diesel <code>Varchar</code> type (afaik)"}, {"owner": {"reputation": 1540, "user_id": 2606171, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/F4ncy.png?s=128&g=1", "display_name": "belst", "link": "https://stackoverflow.com/users/2606171/belst"}, "edited": false, "score": 0, "creation_date": 1532004477, "post_id": 51420453, "comment_id": 89817019, "body": "Have you read <a href=\"http://diesel.rs/guides/composing-applications/\" rel=\"nofollow noreferrer\">diesel.rs/guides/composing-applications</a> ?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1532005296, "post_id": 51420453, "comment_id": 89817581, "body": "Please review how to create a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a> and then <a href=\"https://stackoverflow.com/posts/51420453/edit\">edit</a> your question to include it. We cannot tell what crates, types, traits, fields, etc. are present in the code. Ideally, produce something that reproduces your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MCVE tips</a> and <a href=\"https://stackoverflow.com/tags/rust-diesel/info\">Diesel-specific MCVE tips</a> as well."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1532020914, "post_id": 51420453, "comment_id": 89828289, "body": "If you are looking for a process, please review <a href=\"https://stackoverflow.com/q/47874398/155423\">How do I combine multiple functions using Diesel into one through abstraction?</a>. Does that answer your question?"}], "owner": {"reputation": 5453, "user_id": 827081, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/7893c5231bc7a9d4959d046e2604d939?s=128&d=identicon&r=PG", "display_name": "DanielM", "link": "https://stackoverflow.com/users/827081/danielm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 450, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1532020696, "creation_date": 1531996545, "last_edit_date": 1532020696, "question_id": 51420453, "link": "https://stackoverflow.com/questions/51420453/is-there-a-process-through-which-i-can-figure-out-the-correct-types-for-my-diese", "title": "Is there a process through which I can figure out the correct types for my Diesel functions?", "body": "<p>I'm using Diesel and would like to pass parts of my queries into functions and return parts of queries from functions. I'm struggling with working out my function signatures.</p>\n\n<p>I want to load a blog post by ID, but first I want to filter it:</p>\n\n<pre><code>let query = wp_posts\n    .filter(post_type.eq(\"solution_article\"))\n    .filter(post_status.eq(\"publish\"))\n    .limit(1);\n</code></pre>\n\n<p>Then I'm going to pass it over to another function to load by ID</p>\n\n<pre><code>pub fn query_by_id&lt;Q&gt;(db: &amp;PooledMySqlConnection, query: Q, id: u64) -&gt; Option&lt;Post&gt;\nwhere\n    Q: QueryDsl,\n{\n    let result = query.filter(ID.eq(id)).load::&lt;Post&gt;(db);\n    if let Ok(mut result) = result {\n        return result.pop();\n    }\n    None\n}\n</code></pre>\n\n<p>This doesn't work because I'm struggling to find the correct type for <code>Q</code>. The compiler, unusually, isn't much help (or I don't understand it):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0275]: overflow evaluating the requirement `&lt;Q as diesel::query_dsl::filter_dsl::FilterDsl&lt;_&gt;&gt;::Output`\n  --&gt; src/endpoint.rs:37:10\n   |\n37 |         .filter(ID.eq(id))\n   |          ^^^^^^\n   |\n   = help: consider adding a `#![recursion_limit=\"2048\"]` attribute to your crate\n</code></pre>\n\n<p>I've raised the recursion limit multiple times to no avail.</p>\n\n<p>Similarly, I would like to return my common filters from a function, so I need to find this type too.</p>\n\n<p>While I'm sure someone could just tell me the correct types to use, how can I step through and find this myself? I was sure <a href=\"http://docs.diesel.rs/diesel/query_dsl/trait.QueryDsl.html\" rel=\"nofollow noreferrer\"><code>QueryDsl</code></a> would be the right type from the documentation, where did I go wrong?</p>\n"}, {"tags": ["path", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531992191, "post_id": 51418859, "comment_id": 89808673, "body": "Are you aware of <a href=\"https://crates.io/crates/csv\" rel=\"nofollow noreferrer\">crates.io/crates/csv</a>?"}, {"owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1531992384, "post_id": 51418859, "comment_id": 89808805, "body": "Yeah I am using it in parsing the CSV-files, but I have not found a way to pass all csv-files in a folder to the <code>Reader</code>-struct."}], "answers": [{"comments": [{"owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "edited": false, "score": 0, "creation_date": 1531995014, "post_id": 51419126, "comment_id": 89810680, "body": "Thanks this worked like a charm. I had to adapt my CSV parsing function a bit but now it works. Thanks also for the edit on my OP, <code>Some(p) if p == &quot;csv&quot;</code> looks much cleaner."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "edited": false, "score": 1, "creation_date": 1531996146, "post_id": 51419126, "comment_id": 89811462, "body": "@rongon <a href=\"https://doc.rust-lang.org/book/second-edition/ch18-03-pattern-syntax.html#extra-conditionals-with-match-guards\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/second-edition/&hellip;</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 2, "last_activity_date": 1531993120, "last_edit_date": 1531993120, "creation_date": 1531992801, "answer_id": 51419126, "question_id": 51418859, "link": "https://stackoverflow.com/questions/51418859/how-do-i-list-a-folder-and-return-all-the-file-names-of-a-specific-file-type/51419126#51419126", "title": "How do I list a folder and return all the file names of a specific file type?", "body": "<p><code>Path</code> borrows the actual path representation. You must use <code>PathBuf</code> that is the owned equivalent:</p>\n\n<pre><code>use std::{ fs, io, path::PathBuf, ffi::OsStr };\n\nfn list_of_csv_paths(root: &amp;str) -&gt; io::Result&lt;Vec&lt;PathBuf&gt;&gt; {\n    let mut result = vec![];\n\n    for path in fs::read_dir(root)? {\n        let path = path?.path();\n        if let Some(\"csv\") = path.extension().and_then(OsStr::to_str) {\n            result.push(path.to_owned());\n        }\n    }\n    Ok(result)\n}\n\nfn main() {\n    println!(\"{:?}\", list_of_csv_paths(\"./\"));\n}\n</code></pre>\n\n<hr>\n\n<p>I advice you to use <a href=\"https://crates.io/crates/glob\" rel=\"nofollow noreferrer\"><code>glob</code></a> that does the job much more easily.</p>\n"}], "owner": {"reputation": 665, "user_id": 6503432, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/eea8838a8ce0721d044c9cb57c2fe117?s=128&d=identicon&r=PG&f=1", "display_name": "rongon", "link": "https://stackoverflow.com/users/6503432/rongon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1049, "favorite_count": 0, "closed_date": 1532005220, "accepted_answer_id": 51419126, "answer_count": 1, "score": 0, "last_activity_date": 1532005235, "creation_date": 1531992067, "last_edit_date": 1532005188, "question_id": 51418859, "link": "https://stackoverflow.com/questions/51418859/how-do-i-list-a-folder-and-return-all-the-file-names-of-a-specific-file-type", "closed_reason": "Duplicate", "title": "How do I list a folder and return all the file names of a specific file type?", "body": "<p>I have written a CSV parser that allows the user to enter a query string and a CSV file as positional arguments and parses the specified file for the query.</p>\n\n<p>I'd to automatically search the current directory for CSV files and search them for the string, but I am having problems processing these items and returning them for use in other functions. </p>\n\n<p>My current code for the folder search: </p>\n\n<pre><code>fn folder_search() {\n    let paths = fs::read_dir(\"./\").unwrap();\n\n    //let mut v = Vec::new();\n\n    for path in paths {\n        let path = path.unwrap().path();\n\n        match path.extension() {\n            Some(p) if p == \"csv\" =&gt; println!(\"{:?}\", path.file_name().unwrap()),\n            _ =&gt; (),\n        }\n    }\n}\n</code></pre>\n\n<p>For now, I'm just printing out the file extension. I'd like to return these files for further use, but I am not sure how . </p>\n\n<p>I guess I could assign these files to a vector and return the vector, but I'm not sure how to assign them to the vector. </p>\n\n<p>If I <code>push</code> the <code>path</code> inside  <code>match path.extension() {...}</code> I get an error than <code>path</code> does not live long enough, which I understand, but I don't know how the correct way of fixing this is. </p>\n"}]