[{"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560998149, "post_id": 56676927, "comment_id": 99923003, "body": "<a href=\"https://stackoverflow.com/q/43976787/155423\">Adding an append method to a singly linked list</a>; <a href=\"https://stackoverflow.com/q/30441456/155423\">How to implement an addition method of linked list?</a>; <a href=\"https://stackoverflow.com/q/21152429/155423\">Rust: How to implement linked list?</a>; <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">Learn Rust With Entirely Too Many Linked Lists</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560998614, "post_id": 56676927, "comment_id": 99923076, "body": "<a href=\"https://stackoverflow.com/q/37986640/155423\">Cannot obtain a mutable reference when iterating a recursive structure: cannot borrow as mutable more than once at a time</a>; <a href=\"https://stackoverflow.com/q/48610593/155423\">Iterating through a recursive structure using mutable references and returning the last valid reference</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560998671, "post_id": 56676927, "comment_id": 99923084, "body": "The duplicates <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b05fdabc9564d49b9fb441b67af5cb7f\" rel=\"nofollow noreferrer\">applied to your situation</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560999216, "post_id": 56676927, "comment_id": 99923195, "body": "Another of the duplicates <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cce1b50216a79c1a1575716c2cb209b4\" rel=\"nofollow noreferrer\">applied to your situation</a>. This is inline, but uses two infrequent Rust features: breaking from a loop with a value and the <code>@</code> pattern match."}], "owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 79, "favorite_count": 0, "closed_date": 1560998717, "answer_count": 0, "score": 0, "last_activity_date": 1560998744, "creation_date": 1560985157, "last_edit_date": 1560996982, "question_id": 56676927, "link": "https://stackoverflow.com/questions/56676927/why-does-the-compiler-alert-me-about-a-mutable-borrow-after-a-while-let-loop-goe", "closed_reason": "Duplicate", "title": "Why does the compiler alert me about a mutable borrow after a while let loop goes out of scope?", "body": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f5cc442de921710dc0691e8057ada275\" rel=\"nofollow noreferrer\">full code</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct List&lt;T&gt; {\n    pub head: Option&lt;Node&lt;T&gt;&gt;,\n    len: usize,\n}\n\nimpl&lt;T&gt; List&lt;T&gt; {\n    pub fn new() -&gt; Self {\n        List { head: None, len: 0 }\n    }\n\n    pub fn push_end(&amp;mut self, data: T) {\n        if self.len == 0 {\n            self.head = Some(Node { data, next: None })\n        } else {\n            let mut temp: &amp;mut Node&lt;T&gt; = self.head.as_mut().unwrap();\n\n            // while let Some(n) = &amp;mut temp.next {\n            //     temp = &amp;mut *n;\n            // }\n            while temp.next.is_some() {\n                temp = temp.next.as_mut().unwrap();\n            }\n\n            temp.next = Some(Box::new(Node { data, next: None }))\n        }\n        self.len += 1;\n    }\n}\n\npub struct Node&lt;T&gt; {\n    pub data: T,\n    pub next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n}\n\nfn main() {\n    let mut l = List::new();\n    l.push_end(\"hello\");\n    l.push_end(\"world\");\n\n    println!(\n        \"{} {}\",\n        l.head.as_ref().unwrap().data,\n        l.head.as_ref().unwrap().next.as_ref().unwrap().data\n    )\n}\n</code></pre>\n\n<p>When I switch the two loops:</p>\n\n<pre><code>while let Some(n) = &amp;mut temp.next {\n    temp = &amp;mut *n;\n}\n// while temp.next.is_some() {\n//     temp = temp.next.as_mut().unwrap();\n// }\n</code></pre>\n\n<p>I can't assign to <code>temp.next</code> because:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0506]: cannot assign to `temp.next` because it is borrowed\n  --&gt; src/main.rs:24:13\n   |\n17 |             while let Some(n) = &amp;mut temp.next {\n   |                                 -------------- borrow of `temp.next` occurs here\n...\n24 |             temp.next = Some(Box::new(Node { data, next: None }))\n   |             ^^^^^^^^^\n   |             |\n   |             assignment to borrowed `temp.next` occurs here\n   |             borrow later used here\n</code></pre>\n\n<p><code>n</code> should have gone out of scope when the while loop was over. </p>\n\n<p>I tried to add a scope explicitly: </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut temp: &amp;mut Node&lt;T&gt; = self.head.as_mut().unwrap();\n{\n    while let Some(n) = &amp;mut temp.next {\n        temp = &amp;mut *n;\n    }\n}\ntemp.next = Some(Box::new(Node{\n    data,\n    next: None,\n}))\n</code></pre>\n\n<p>But it still doesn't work...</p>\n"}, {"tags": ["rust", "webassembly", "wasm-bindgen"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560997844, "post_id": 56676637, "comment_id": 99922960, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/53364002/155423\">How do I apply a macro attribute to a function defined in a separate module?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/56676637/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 21, "user_id": 8999671, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-PVcNRitdPeA/AAAAAAAAAAI/AAAAAAAADhY/g1wzLDCCKS8/photo.jpg?sz=128", "display_name": "Benjamin Steenhoek", "link": "https://stackoverflow.com/users/8999671/benjamin-steenhoek"}, "is_accepted": false, "score": 0, "last_activity_date": 1561098114, "creation_date": 1561098114, "answer_id": 56697902, "question_id": 56676637, "link": "https://stackoverflow.com/questions/56676637/exposing-vanilla-rust-classes-with-wasm-bindgen/56697902#56697902", "title": "Exposing vanilla Rust classes with wasm_bindgen", "body": "<p><strong>Update</strong>: I found a workable solution by looking at <a href=\"https://github.com/rodrigorc/raze/blob/master/src/js.rs\" rel=\"nofollow noreferrer\">this</a> library. It's a ZX Spectrum emulator written in this fashion, with <code>wasm_bindgen</code> sequestered off in an interface. The paradigm is to interop via an unsafe pointer like so:</p>\n\n<pre><code>#[wasm_bindgen]\npub fn get_cell_value(world: *mut World) -&gt; *const CellValue // return a raw reference to the type defined in the domain\n{\n    // Return a reference to the first element in the array\n}\n</code></pre>\n\n<p>Then, on the JavaScript side, do something like this:</p>\n\n<pre><code>import { memory } from \"gol/gol_bg\"; // Actual WASM generated by wasm_bindgen\nimport { make_world, get_cell_array } from \"wasm-game-of-life\";\n\n// ...\n\nconst world = make_world(width, height);\n\nconst cellsPtr = get_cells_array(world); // Pointer to the first element of the Vec\n\nconst cells = new Uint8Array(memory.buffer, cellsPtr, width * height);\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 8999671, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-PVcNRitdPeA/AAAAAAAAAAI/AAAAAAAADhY/g1wzLDCCKS8/photo.jpg?sz=128", "display_name": "Benjamin Steenhoek", "link": "https://stackoverflow.com/users/8999671/benjamin-steenhoek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 161, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1561098114, "creation_date": 1560982907, "question_id": 56676637, "link": "https://stackoverflow.com/questions/56676637/exposing-vanilla-rust-classes-with-wasm-bindgen", "title": "Exposing vanilla Rust classes with wasm_bindgen", "body": "<p>I am learning how to target WASM with Rust through <a href=\"https://rustwasm.github.io/docs/book/introduction.html\" rel=\"nofollow noreferrer\">this tutorial</a>. I want to be able to separate my domain code from the code that exposes it to WASM. That way, I could re-use the domain code in a non-WASM application with no fuss. I can't find any examples that do this, and I don't know that it's supported.</p>\n\n<p>Right now, what I'm doing is wrapping my vanilla Rust struct with another struct that has wrappers around the domain class's public methods. I'm almost sure this is not the proper way to do it, but it works for now.</p>\n\n<p>I want to be able to bind <code>CellValue</code> to WASM.</p>\n\n<pre><code>// Inside a vanilla Rust library\n\n// We could bind CellValue with #[wasm_bindgen],\n// but I want to keep all WASM stuff out of this library\nenum CellValue {\n    Live = 0,\n    Dead = 1\n}\n\n// ...\n\nstruct World {\n    // ...\n    cells: Vec&lt;CellValue&gt; // need to bind a direct reference to the values in here\n}\n</code></pre>\n\n<p>This is how I am exposing <code>World</code> to WASM - I'm wrapping it in <code>GOL</code> and implementing methods in <code>GOL</code> so that the WASM can interact with <code>World</code>.</p>\n\n<pre><code>// Inside the wasm binding library\n\n#[wasm_bindgen]\npub struct GOL {\n    world: gol::World\n}\n\n\n#[wasm_bindgen]\nimpl GOL {\n    pub fn make_new(rows: usize, cols: usize) -&gt; Self\n    {\n        Self {\n            world: GameOfLife::make_new(rows, cols)\n        }\n    }\n\n    // and so on...\n}\n\n</code></pre>\n\n<p>For <code>CellValue</code>, I can't mimic the approach I took with <code>GOL</code> because I need to be able to reference the data inside each cell that's held by <code>World</code>.</p>\n\n<p>Like I said, the whole reason I'm jumping through these hoops is so that I can avoid peppering my domain code with <code>#[wasm_bindgen]</code>. Is it even possible to get this kind of binding?</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560991438, "post_id": 56676553, "comment_id": 99921929, "body": "The code you have provided <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a6243eec030df060b063e58e797229b7\" rel=\"nofollow noreferrer\">does not produce the error you are asking about</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560991448, "post_id": 56676553, "comment_id": 99921931, "body": "It&#39;s great that you have the solution to your question! You should post it as an answer rather than an edit to your question and then potentially accept that answer. That way, the question shows up as solved in search results, people can vote on your answer, and your solution can be more helpful to future people with the same problem."}], "answers": [{"comments": [{"owner": {"reputation": 167, "user_id": 4610716, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/318e46619794c838204b4c6acc4775dd?s=128&d=identicon&r=PG&f=1", "display_name": "lesurp", "link": "https://stackoverflow.com/users/4610716/lesurp"}, "edited": false, "score": 0, "creation_date": 1560987293, "post_id": 56676930, "comment_id": 99921183, "body": "Yeah between the <code>Index</code> instead of <code>IndexMut</code>, plus the wrong signature (I was returning <code>Self::Output</code> instead of <code>&amp;Self::Output</code>... By the way, <code>T</code> doesn&#39;t need any constraint since I&#39;m not using it (as just use it as a type tag). I&#39;m gonna edit my question with the code I&#39;ve got now. Thanks :]"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 167, "user_id": 4610716, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/318e46619794c838204b4c6acc4775dd?s=128&d=identicon&r=PG&f=1", "display_name": "lesurp", "link": "https://stackoverflow.com/users/4610716/lesurp"}, "edited": false, "score": 0, "creation_date": 1560987503, "post_id": 56676930, "comment_id": 99921244, "body": "Sure, you can provide your own hashing for <code>Id</code> which would just use <code>usize</code> -- but I could not know whether this was a simplified dummy code or the actual implementation, so I took the liberty and provide the most generic solution."}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 1, "last_activity_date": 1560986859, "last_edit_date": 1560986859, "creation_date": 1560985184, "answer_id": 56676930, "question_id": 56676553, "link": "https://stackoverflow.com/questions/56676553/how-do-i-return-the-result-of-get-mut-from-a-hashmap-or-a-hashset/56676930#56676930", "title": "How do I return the result of get_mut from a HashMap or a HashSet?", "body": "<p>If I understand correctly what you try to achieve, then I have to tell you, that it is a bit more complex than you originally thought it would be.</p>\n\n<p>First of all, you have to realise, that if you like to use a <code>HashMap</code> then the type of the key required to be <em>hashable</em> and <em>comparable</em>.  Therefore the generic type parameter <code>T</code> in <code>Id&lt;T&gt;</code> has to be bound to those traits in order to make <code>Id</code> hashable and comparable.</p>\n\n<p>The second thing you need to understand is that there are two different traits to deal with the indexing operator: <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code></a> for immutable data access, and <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html\" rel=\"nofollow noreferrer\"><code>IndexMut</code></a> for mutable one.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{\n    marker::PhantomData,\n    collections::HashMap,\n    cmp::{\n        Eq,\n        PartialEq,\n    },\n    ops::{\n        Index,\n        IndexMut,\n    },\n    hash::Hash,\n};\n\n#[derive(PartialEq, Hash)]\nstruct Id&lt;T&gt;(usize, PhantomData&lt;T&gt;)\n    where T: PartialEq + Hash;\n\nimpl&lt;T&gt; Eq for Id&lt;T&gt;\n    where T: PartialEq + Hash\n{}\n\nstruct IdCollection&lt;T&gt;(HashMap&lt;Id&lt;T&gt;, T&gt;)\n    where T: PartialEq + Hash;\n\nimpl&lt;T&gt; Index&lt;Id&lt;T&gt;&gt; for IdCollection&lt;T&gt;\n    where T: PartialEq + Hash\n{\n    type Output = T;\n\n    fn index(&amp;self, id: Id&lt;T&gt;) -&gt; &amp;Self::Output\n    {\n        self.0.get(&amp;id).unwrap()\n    }\n}\n\nimpl&lt;T&gt; IndexMut&lt;Id&lt;T&gt;&gt; for IdCollection&lt;T&gt;\n    where T: PartialEq + Hash\n{\n    fn index_mut(&amp;mut self, id: Id&lt;T&gt;) -&gt; &amp;mut Self::Output\n    {\n        self.0.get_mut(&amp;id).unwrap()\n    }\n}\n\nfn main()\n{\n    let mut i = IdCollection(HashMap::new());\n    i.0.insert(Id(12, PhantomData), 99i32);\n    println!(\"{:?}\", i[Id(12, PhantomData)]);\n    i[Id(12, PhantomData)] = 54i32;\n    println!(\"{:?}\", i[Id(12, PhantomData)]);\n}\n</code></pre>\n\n<p>It may seem a bit surprising, but <code>IndexMut</code> is not designed to insert an element into the collection but to actually modify an existing one.  That's the main reason why <code>HashMap</code> does not implement <code>IndexMut</code> -- and that's also the reason why the above example uses the <code>HashMap::insert</code> method to initially place the data.  As you can see, later on, when the value is already available we can modify it via the <code>IdCollection::index_mut</code>.</p>\n"}], "owner": {"reputation": 167, "user_id": 4610716, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/318e46619794c838204b4c6acc4775dd?s=128&d=identicon&r=PG&f=1", "display_name": "lesurp", "link": "https://stackoverflow.com/users/4610716/lesurp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 0, "accepted_answer_id": 56676930, "answer_count": 1, "score": 0, "last_activity_date": 1560991407, "creation_date": 1560982337, "last_edit_date": 1592644375, "question_id": 56676553, "link": "https://stackoverflow.com/questions/56676553/how-do-i-return-the-result-of-get-mut-from-a-hashmap-or-a-hashset", "title": "How do I return the result of get_mut from a HashMap or a HashSet?", "body": "<p>I'm trying to wrap a <code>HashMap</code>, as defined below, to return a mutable reference from a <code>HashMap</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::{collections::HashMap, marker::PhantomData};\n\nstruct Id&lt;T&gt;(usize, PhantomData&lt;T&gt;);\npub struct IdCollection&lt;T&gt;(HashMap&lt;Id&lt;T&gt;, T&gt;);\n\nimpl&lt;'a, T&gt; std::ops::Index&lt;Id&lt;T&gt;&gt; for &amp;'a mut IdCollection&lt;T&gt; {\n    type Output = &amp;'a mut T;\n    fn index(&amp;mut self, id: &amp;'a Id&lt;T&gt;) -&gt; Self::Output {\n        self.0.get_mut(id).unwrap()\n    }\n}\n</code></pre>\n<p>And the resulting error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 54:5...\n  --&gt; src/id_container.rs:54:5\n   |\n54 | /     fn index(&amp;mut self, id: &amp;'a Id&lt;T&gt;) -&gt; Self::Output {\n55 | |         self.0.get_mut(id).unwrap()\n56 | |     }\n   | |_____^\nnote: ...so that reference does not outlive borrowed content\n  --&gt; src/id_container.rs:55:9\n   |\n55 |         self.0.get_mut(id).unwrap()\n   |         ^^^^^^\nnote: but, the lifetime must be valid for the lifetime 'a as defined on the impl at 52:6...\n  --&gt; src/id_container.rs:52:6\n   |\n52 | impl&lt;'a, T&gt; std::ops::Index&lt;Id&lt;T&gt;&gt; for &amp;'a mut IdCollection&lt;T&gt; {\n   |      ^^\n   = note: ...so that the types are compatible:\n           expected std::ops::Index&lt;id_container::Id&lt;T&gt;&gt;\n              found std::ops::Index&lt;id_container::Id&lt;T&gt;&gt;\n</code></pre>\n<p>Why can't the compiler extend the lifetime of the <code>get_mut</code>? The <code>IdCollection</code> would then be borrowed mutably.</p>\n<p>Note that I tried using a <code>std::collections::HashSet&lt;IdWrapper&lt;T&gt;&gt;</code> instead of a <code>HashMap</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct IdWrapper&lt;T&gt; {\n  id: Id&lt;T&gt;,\n  t: T,\n}\n</code></pre>\n<p>Implementing the proper borrow etc. so I can use the <code>Id&lt;T&gt;</code> as a key.\nHowever, <code>HashSet</code> doesn't offer a mutable getter (which makes sense since you don't want to mutate what's used for your hash). However in my case only part of the object should be immutable. Casting a <code>const</code> type to a non-<code>const</code> is UB so this is out of the question.</p>\n<p>Can I achieve what I want? Do I have to use some wrapper such as a <code>Box</code>? Although I'd rather avoid any indirection...</p>\n<h1>EDIT</h1>\n<p>Ok I'm an idiot. First I missed the <code>IndexMut</code> instead of the <code>Index</code>, and I forgot the <code>&amp;</code> when specifying the <code>Self::Output</code> in the signature.</p>\n<p>Here's my full code below:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Id&lt;T&gt;(usize, PhantomData&lt;T&gt;);\nimpl&lt;T&gt; std::fmt::Display for Id&lt;T&gt; {\n    fn fmt(&amp;self, f: &amp;mut std::fmt::Formatter) -&gt; std::fmt::Result {\n        write!(f, &quot;{}&quot;, self.0)\n    }\n}\n\nimpl&lt;T&gt; Hash for Id&lt;T&gt; {\n    fn hash&lt;H: Hasher&gt;(&amp;self, state: &amp;mut H) {\n        self.0.hash(state);\n    }\n}\n\nimpl&lt;T&gt; PartialEq for Id&lt;T&gt; {\n    fn eq(&amp;self, o: &amp;Self) -&gt; bool {\n        self.0 == o.0\n    }\n}\nimpl&lt;T&gt; Eq for Id&lt;T&gt; {}\n\npub struct IdCollection&lt;T&gt;(HashMap&lt;Id&lt;T&gt;, T&gt;);\nimpl&lt;'a, T&gt; IntoIterator for &amp;'a IdCollection&lt;T&gt; {\n    type Item = (&amp;'a Id&lt;T&gt;, &amp;'a T);\n    type IntoIter = std::collections::hash_map::Iter&lt;'a, Id&lt;T&gt;, T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.0.iter()\n    }\n}\n\nimpl&lt;'a, T&gt; IntoIterator for &amp;'a mut IdCollection&lt;T&gt; {\n    type Item = (&amp;'a Id&lt;T&gt;, &amp;'a mut T);\n    type IntoIter = std::collections::hash_map::IterMut&lt;'a, Id&lt;T&gt;, T&gt;;\n\n    fn into_iter(self) -&gt; Self::IntoIter {\n        self.0.iter_mut()\n    }\n}\n\nimpl&lt;T&gt; std::ops::Index&lt;Id&lt;T&gt;&gt; for IdCollection&lt;T&gt; {\n    type Output = T;\n    fn index(&amp;self, id: Id&lt;T&gt;) -&gt; &amp;Self::Output {\n        self.0.get(&amp;id).unwrap()\n    }\n}\n\nimpl&lt;T&gt; std::ops::IndexMut&lt;Id&lt;T&gt;&gt; for IdCollection&lt;T&gt; {\n    fn index_mut(&amp;mut self, id: Id&lt;T&gt;) -&gt; &amp;mut Self::Output {\n        self.0.get_mut(&amp;id).unwrap()\n    }\n}\n\nimpl&lt;T&gt; std::ops::Index&lt;&amp;Id&lt;T&gt;&gt; for IdCollection&lt;T&gt; {\n    type Output = T;\n    fn index(&amp;self, id: &amp;Id&lt;T&gt;) -&gt; &amp;Self::Output {\n        self.0.get(id).unwrap()\n    }\n}\n\nimpl&lt;T&gt; std::ops::IndexMut&lt;&amp;Id&lt;T&gt;&gt; for IdCollection&lt;T&gt; {\n    fn index_mut(&amp;mut self, id: &amp;Id&lt;T&gt;) -&gt; &amp;mut Self::Output {\n        self.0.get_mut(id).unwrap()\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "generator"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1560991167, "creation_date": 1560991167, "answer_id": 56677566, "question_id": 56676309, "link": "https://stackoverflow.com/questions/56676309/how-to-clone-a-generator/56677566#56677566", "title": "How to clone a Generator?", "body": "<p>No, it is <a href=\"https://github.com/rust-lang/rust/issues/57972\" rel=\"nofollow noreferrer\">not possible to clone a generator</a>.</p>\n\n<p>The current workaround is to construct a new generator every time you need to reset it.</p>\n\n<blockquote>\n  <p>a variable of type <code>std::ops::Generator</code></p>\n</blockquote>\n\n<p>These are not variables of that type any more than <code>|| foo()</code> is a variable of type <code>Fn()</code>. <code>Generator</code> is a <em>trait</em> and <code>dyn Generator</code> is a <em>type</em>. Your <code>gen</code> variables are anonymous types that <em>implement</em> the trait <code>Generator</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50650070/155423\">What does &quot;dyn&quot; mean in a type?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29191170/155423\">Is there any way to explicitly write the type of a closure?</a></li>\n</ul>\n"}], "owner": {"reputation": 65, "user_id": 11587913, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Rbrg2Bno_2k/AAAAAAAAAAI/AAAAAAAAAAc/TLIU5Oe85hM/photo.jpg?sz=128", "display_name": "epishman", "link": "https://stackoverflow.com/users/11587913/epishman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 56677566, "answer_count": 1, "score": 2, "last_activity_date": 1560991167, "creation_date": 1560980738, "last_edit_date": 1560990908, "question_id": 56676309, "link": "https://stackoverflow.com/questions/56676309/how-to-clone-a-generator", "title": "How to clone a Generator?", "body": "<p>Is it possible to clone a variable of type <code>std::ops::Generator</code>? There is a generator, I want to create a new instance, with a clean stack, there is no <code>clone()</code> method. I tried inside <code>Box</code> and inside <code>Pin</code>, but it does not clone!</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(generators, generator_trait)]\n\nfn main() {\n    let gen = move || yield ();\n\n    let gen1 = gen.clone();\n\n    let gen = Box::new(move || yield ());\n    let gen1 = gen.clone();\n\n    let gen = Box::pin(move || yield ());\n    let gen1 = gen.clone();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `clone` found for type `[generator@src/main.rs:4:15: 4:31 _]` in the current scope\n --&gt; src/main.rs:6:20\n  |\n6 |     let gen1 = gen.clone();\n  |                    ^^^^^\n</code></pre>\n\n<p>As I understand it, closures can be cloned; what is wrong with generators?</p>\n\n<p>The only workaround I've found is to return the generator from some function (then it will be new every time), but this is syntactically inconvenient for me.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1560981770, "post_id": 56675954, "comment_id": 99919970, "body": "There seems to be quite a few problems with this code, first <code>static mut encode_hash: HashMap&lt;&amp;i32, char&gt; = HashMap::new();</code> shouldn&#39;t compile, since &quot;calls in statics are limited to constant functions, tuple structs and tuple variants&quot;, then the hashmap uses <code>&amp;i32</code> as key, but I think you want a <code>i32</code> as key instead? Not to mention that all code modifying the hashmap even if it were to compile needs to be in unsafe blocks.      Please construct a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">Minimal, Reproducible Example</a> for us to help you further"}, {"owner": {"reputation": 45, "user_id": 11036802, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MuXkAq8Sruc/AAAAAAAAAAI/AAAAAAAAAE4/JmmD9o5ImjY/photo.jpg?sz=128", "display_name": "MustachedNinja", "link": "https://stackoverflow.com/users/11036802/mustachedninja"}, "reply_to_user": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1560985787, "post_id": 56675954, "comment_id": 99920882, "body": "Oh okay, I assumed the key had to be a reference for some reason but changing it to just i32 fixed a lot of my previous issues. However now I have the issue that you described regarding the static mut HashMap. I uploaded new code which recreates this issue and modified the question"}, {"owner": {"reputation": 2058, "user_id": 3958875, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f6149ddd4636bcab17c52b751d79f7fd?s=128&d=identicon&r=PG&f=1", "display_name": "Prime_Aqasix", "link": "https://stackoverflow.com/users/3958875/prime-aqasix"}, "edited": false, "score": 0, "creation_date": 1560986685, "post_id": 56675954, "comment_id": 99921045, "body": "Have a look at this question: (<a href=\"https://stackoverflow.com/questions/27791532/how-do-i-create-a-global-mutable-singleton\" title=\"how do i create a global mutable singleton\">stackoverflow.com/questions/27791532/&hellip;</a>). TLDR is use <code>lazy_static</code> with <code>Mutex</code>, or better just pass your hashmap around."}], "owner": {"reputation": 45, "user_id": 11036802, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-MuXkAq8Sruc/AAAAAAAAAAI/AAAAAAAAAE4/JmmD9o5ImjY/photo.jpg?sz=128", "display_name": "MustachedNinja", "link": "https://stackoverflow.com/users/11036802/mustachedninja"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 631, "favorite_count": 0, "closed_date": 1560991209, "answer_count": 0, "score": 0, "last_activity_date": 1560991266, "creation_date": 1560978979, "last_edit_date": 1560991266, "question_id": 56675954, "link": "https://stackoverflow.com/questions/56675954/how-to-create-a-global-hashmap", "closed_reason": "Duplicate", "title": "How to create a global HashMap?", "body": "<p>I created a static mutable <code>HashMap</code> at the beginning of the file, hoping to use it as a global variable, however I didn't find anything on this beyond \"static variables are global variables\". There is a chance that I shouldn't be using a global <code>HashMap</code> at all to solve this problem. If so, what would you recommend?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::env;\nuse std::fs;\nuse std::collections::HashMap;\n\nstatic mut encode_hash: HashMap&lt;i32, char&gt; = HashMap::new();\n\nfn main() {\n    let mut change: Vec&lt;i32&gt; = Vec::new();\n\n    encode_hash.insert(1, 'a');\n    encode_hash.insert(2, 'b');\n    encode_hash.insert(3, 'c');\n\n    change.push(1);\n    change.push(2);\n\n    for key in change {\n        encode_hash.remove(&amp;key);\n    }\n\n}\n</code></pre>\n\n<p>When I try to build I get this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0015]: calls in statics are limited to tuple structs and tuple variants\n --&gt; src\\main.rs:5:46\n  |\n5 | static mut encode_hash: HashMap&lt;i32, char&gt; = HashMap::new();\n  |                                              ^^^^^^^^^^^^^^\n  |\n</code></pre>\n\n<hr>\n\n<p>I now realize I should just create the <code>HashMap</code> in <code>main</code> and then pass a reference to the <code>HashMap</code> into my helper functions.</p>\n"}, {"tags": ["collections", "rust", "iterator"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1560978495, "post_id": 56675497, "comment_id": 99918952, "body": "With an <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"nofollow noreferrer\"><code>ExactSizeIterator</code></a> you should be able to do it"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560977530, "post_id": 56675606, "comment_id": 99918573, "body": "<i>can call <code>for_each</code> to iterate</i> \u2014 or, more idiomatically, use it in a <code>for</code> loop."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560977565, "post_id": 56675606, "comment_id": 99918585, "body": "It&#39;s probably worth directly addressing this point from OP: <i>populates a collection backwards, such as using <code>push_front</code> in a <code>VecDeque</code></i>."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1560979915, "post_id": 56675606, "comment_id": 99919438, "body": "Right, for loops. As I said, I&#39;d like to avoid that."}, {"owner": {"reputation": 10246, "user_id": 762363, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8cec6320f5a5a8253b3dbfbb8177e001?s=128&d=identicon&r=PG", "display_name": "Tarmil", "link": "https://stackoverflow.com/users/762363/tarmil"}, "reply_to_user": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 3, "creation_date": 1561024861, "post_id": 56675606, "comment_id": 99932672, "body": "@Listerone <code>push_front</code> is a side-effect that you want to apply to each element of your iterator. There has to be a loop somewhere that calls it, whether it&#39;s <code>for_each()</code> or <code>for</code>. It&#39;s a common misconception for people learning mixed-paradigm languages like Rust or F# that loops are inherently a bad thing. If there&#39;s a function like <code>map</code> that better expresses the semantics of your program then you should use it; but if what you&#39;re doing really is &quot;perform a side-effect for each element in a collection&quot;, then there&#39;s nothing wrong with a loop."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 0, "last_activity_date": 1560991853, "last_edit_date": 1560991853, "creation_date": 1560977228, "answer_id": 56675606, "question_id": 56675497, "link": "https://stackoverflow.com/questions/56675497/is-it-possible-to-collect-an-iterator-to-populate-a-collection-backwards/56675606#56675606", "title": "Is it possible to collect an iterator to populate a collection backwards?", "body": "<blockquote>\n  <p>Is it possible to collect an iterator such that it populates a collection backwards, such as using <code>push_front</code> in a <code>VecDeque</code>?</p>\n</blockquote>\n\n<p>Yes it is. You can iterate over your iterator with <code>for_each</code> and populate your <code>VecDeque</code> like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut my_deque: VecDeque&lt;i32&gt; = VecDeque::new();\n(1..4).for_each(|x| my_deque.push_front(x));\n</code></pre>\n\n<hr>\n\n<p>You can reverse your iterator with the <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.rev\" rel=\"nofollow noreferrer\"><code>rev</code></a> method. After that, you can call <code>for_each</code> to iterate it in the reverse order or you can collect it to a <code>Vec</code> directly since it is already reversed.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let my_iterator = vec![1, 2, 3].into_iter();\n    let reversed_iterator = my_iterator.rev();\n    reversed_iterator.for_each(|x| print!(\"{}\", x));\n}\n</code></pre>\n\n<p>Or more idiomatically you can directly reverse it in your <code>for</code> loop:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for i in (1..4).rev() {\n    print!(\"{}\", i);\n}\n</code></pre>\n\n<p>Your output will be:</p>\n\n<blockquote>\n  <pre class=\"lang-none prettyprint-override\"><code>321\n</code></pre>\n</blockquote>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2a7ad6884a82c52919b25ffa3f5a9bba\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1560992512, "creation_date": 1560992512, "answer_id": 56677696, "question_id": 56675497, "link": "https://stackoverflow.com/questions/56675497/is-it-possible-to-collect-an-iterator-to-populate-a-collection-backwards/56677696#56677696", "title": "Is it possible to collect an iterator to populate a collection backwards?", "body": "<p>Yes, it's possible:</p>\n\n<pre><code>use std::collections::VecDeque;\n\nfn main() {\n    let v: VecDeque&lt;_&gt; = (0..=2).collect_rev();\n    assert_eq!(v, [2, 1, 0]);\n\n    let v: Vec&lt;_&gt; = (0..=2).collect_rev();\n    assert_eq!(v, [2, 1, 0]);\n}\n</code></pre>\n\n<p>You just need a bit of glue code:</p>\n\n<pre><code>trait CollectRev: Iterator {\n    fn collect_rev&lt;B&gt;(self) -&gt; B\n    where\n        B: FromIteratorRev&lt;Self::Item&gt;,\n        Self: Sized,\n    {\n        B::from_iter_rev(self)\n    }\n}\n\nimpl&lt;I: Iterator&gt; CollectRev for I {}\n\ntrait FromIteratorRev&lt;T&gt; {\n    fn from_iter_rev(iter: impl IntoIterator&lt;Item = T&gt;) -&gt; Self;\n}\n</code></pre>\n\n<p>And implement it efficiently for various types:</p>\n\n<pre><code>impl&lt;T&gt; FromIteratorRev&lt;T&gt; for VecDeque&lt;T&gt; {\n    fn from_iter_rev(iter: impl IntoIterator&lt;Item = T&gt;) -&gt; Self {\n        let mut v = Self::new();\n        for i in iter {\n            v.push_front(i);\n        }\n        v\n    }\n}\n\nimpl&lt;T&gt; FromIteratorRev&lt;T&gt; for Vec&lt;T&gt; {\n    fn from_iter_rev(iter: impl IntoIterator&lt;Item = T&gt;) -&gt; Self {\n        let mut v: Self = iter.into_iter().collect();\n        v.reverse();\n        v\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>I'd like to avoid writing an explicit <code>for</code> loop</p>\n</blockquote>\n\n<p>Someone has to write that code.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 309, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1560992512, "creation_date": 1560976658, "last_edit_date": 1560991821, "question_id": 56675497, "link": "https://stackoverflow.com/questions/56675497/is-it-possible-to-collect-an-iterator-to-populate-a-collection-backwards", "title": "Is it possible to collect an iterator to populate a collection backwards?", "body": "<p>Is it possible to <strong>collect</strong> an iterator such that it populates a collection backwards, such as using <code>push_front</code> in a <code>VecDeque</code>?</p>\n\n<p>It's possible to collect into a <code>Vec</code> and then reverse it, but it seems like it should be unnecessary with data structures explicitly supporting this capability. I'd like to avoid writing an explicit <code>for</code> loop if possible.</p>\n"}, {"tags": ["intellij-idea", "rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1560974128, "post_id": 56674713, "comment_id": 99917248, "body": "<a href=\"https://stackoverflow.com/questions/25978808/how-to-pass-l-linker-flag-to-rustc-for-cargo-based-project\">This</a> seems to be related to the cargo part."}], "answers": [{"tags": [], "owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "is_accepted": false, "score": 2, "last_activity_date": 1561034099, "creation_date": 1561034099, "answer_id": 56686126, "question_id": 56674713, "link": "https://stackoverflow.com/questions/56674713/how-do-you-specify-the-ld-library-path-for-a-rust-project-in-intellij-idea/56686126#56686126", "title": "How do you specify the LD_LIBRARY_PATH for a rust project in IntelliJ IDEA?", "body": "<p>Extra link arguments for rust can be specified using the <code>build.rs</code> file which usually lives next to <code>Cargo.toml</code>.  Here is an example <code>build.rs</code>:</p>\n\n<pre><code>fn main() {\n    println!(\"cargo:rustc-link-search=../expclib1\\n\\\n    cargo:rustc-link-search=/opt/oracle-jdk-bin-1.8.0.202/jre/lib/amd64/jli\\n\\\n    cargo:rustc-link-search=/opt/oracle-jdk-bin-1.8.0.202/jre/lib/amd64/server\\n\\\n    cargo:rustc-link-lib=dylib=exp1\\n\\\n    cargo:rustc-link-lib=dylib=jli\\n\\\n    cargo:rustc-link-lib=dylib=jvm\");\n}\n</code></pre>\n\n<p>That example should probably be a little smarter about finding the jni and jvm libraries, because not every system will be running java 1.8.0.202 installed in <code>/opt</code>.</p>\n\n<p>The settings cargo uses from the output are documented in the <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">Build Scripts</a> section of the rust documentation.</p>\n\n<p>That only enables the application to link.  To enable it to run you must modify IntelliJ's run configuration by setting an environment variable like so:</p>\n\n<p><a href=\"https://i.stack.imgur.com/J4KvJ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/J4KvJ.png\" alt=\"setting environment variables for a run configuration\"></a></p>\n"}], "owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 764, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1561034099, "creation_date": 1560972942, "question_id": 56674713, "link": "https://stackoverflow.com/questions/56674713/how-do-you-specify-the-ld-library-path-for-a-rust-project-in-intellij-idea", "title": "How do you specify the LD_LIBRARY_PATH for a rust project in IntelliJ IDEA?", "body": "<p>I am using IntelliJ IDEA to experiment with rust.  In order to gain an understanding of how to invoke libraries created in other languages, I have created a tiny dynamic library in C whose .so file is in <code>../expclib1/libexp1.so</code>.</p>\n\n<p>How do I inform intellij and rust that the implementation of </p>\n\n<pre><code>#[link(name=\"exp1\")]\nextern {\n    fn bacon()-&gt;i32;\n}\n</code></pre>\n\n<p>lives in <code>../expclib1/libexp1.so</code> ?  I know that in C you need to specify <code>-L../expclib1 -lexp1</code> in the link stage and then <code>export LD_LIBRARY_PATH=../expclib1</code> before trying to run it.  How do I make this work from cargo, and how do I make it work from intellij's run menu?  There are basically no options on the module inside of intellij, so I'm hoping that it can all be specified in the <code>Cargo.toml</code>.</p>\n"}, {"tags": ["rust", "division", "bigint"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 2, "creation_date": 1560973150, "post_id": 56674644, "comment_id": 99916836, "body": "notice how <code>let mut q = 0;</code> looks different"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1560973611, "post_id": 56674644, "comment_id": 99917030, "body": "Besides the <code>q</code>&#39;s type do you really want to change the value of the borrowed parameters ? Because looks like there is no implementation of <code>Div</code> and <code>Rem</code> traits for  <code>&amp;mut BigInt</code>, you may consider creating new local vars instead"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560974052, "post_id": 56674644, "comment_id": 99917218, "body": "<code>b = a; a = b % a;</code> \u2014 Since <code>a</code> and <code>b</code> are the same value, won&#39;t <code>b % a</code> always result in <code>1</code>? Seems like the algorithm is off, or am I missing something?"}, {"owner": {"reputation": 11, "user_id": 9858530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da90d99578a7abd286ce92b9aabd7730?s=128&d=identicon&r=PG&f=1", "display_name": "halbGefressen", "link": "https://stackoverflow.com/users/9858530/halbgefressen"}, "edited": false, "score": 0, "creation_date": 1560982284, "post_id": 56674644, "comment_id": 99920118, "body": "oh yeah i figured that out too. I am trying to port over an algorithm from Python and it changes multiple variables in one line and probably made a pretty big mistake while porting  Thank you guys, I really appreciate your help"}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 9858530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da90d99578a7abd286ce92b9aabd7730?s=128&d=identicon&r=PG&f=1", "display_name": "halbGefressen", "link": "https://stackoverflow.com/users/9858530/halbgefressen"}, "edited": false, "score": 0, "creation_date": 1560982145, "post_id": 56674763, "comment_id": 99920076, "body": "Thank you so much! I didn&#39;t notice at all that I didn&#39;t use Zero::zero() for declaring q. I just started learning Rust and the concepts of the language are still pretty new to me. You really helped me understand that part better."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 5, "last_activity_date": 1560973937, "last_edit_date": 1560973937, "creation_date": 1560973189, "answer_id": 56674763, "question_id": 56674644, "link": "https://stackoverflow.com/questions/56674644/why-cant-i-divide-a-bigint-with-another-bigint-and-save-it-to-a-variable-ive-i/56674763#56674763", "title": "Why can&#39;t I divide a BigInt with another BigInt and save it to a variable I&#39;ve initialized with zero?", "body": "<blockquote>\n  <p>and instead tells me that I can't divide a <code>BigInt</code> with a <code>BigInt</code></p>\n</blockquote>\n\n<p>It does not. It tells you that the <em>result</em> of dividing the two is a <code>BigInt</code> and it needs an <code>{integer}</code>. This is because your <code>q</code> variable has been declared as an integer, not a <code>BigInt</code>. Therefore, the result of the division <strong>must</strong> be some kind of built-in integer (<code>{integer}</code>), but the result of dividing a <code>BigInt</code> by a <code>BigInt</code> is another <code>BigInt</code>.</p>\n\n<p>You've used <code>Zero::zero</code> everywhere else, so it's unclear why you didn't use it here. Fortunately, you don't need to set it anything because you shouldn't initialize it until inside the loop anyway:</p>\n\n<pre><code>use num_bigint::*; // 0.2.2\nuse num_traits::*; // 0.2.8\n\nfn xgcd(b: &amp;BigInt, a: &amp;BigInt) -&gt; (BigInt, BigInt, BigInt) {\n    let mut a = a.clone();\n    let mut b = b.clone();\n    let mut x0 = BigInt::one();\n    let mut x1 = BigInt::zero();\n    let mut y0 = BigInt::zero();\n    let mut y1 = BigInt::one();\n\n    while !a.is_zero() {\n        let q = &amp;b / &amp;a;\n        b = a.clone();\n        a = &amp;b % &amp;a;\n        x0 = x1.clone();\n        x1 = &amp;x0 - &amp;q * x1;\n        y0 = y1.clone();\n        y1 = &amp;y0 - &amp;q * y1;\n    }\n\n    (b, x0, y0)\n}\n</code></pre>\n\n<p>Changes include:</p>\n\n<ul>\n<li>The operator forms are used instead of the method names (e.g. <code>/</code> vs <code>div</code>).</li>\n<li>A number of <code>.clone()</code> calls were added. I didn't ensure that these were the minimal number of clones possible, so check that.</li>\n<li>A number of <code>&amp;</code> were added to prevent clones in other places.</li>\n<li><a href=\"https://docs.rs/num-traits/0.2.8/num_traits/identities/trait.Zero.html#tymethod.is_zero\" rel=\"nofollow noreferrer\"><code>Zero::is_zero</code></a> can be faster than creating a value and comparing it.</li>\n<li>The shorter syntax of <code>BigInt::zero()</code> is used. </li>\n</ul>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28565440/155423\">How do I use integer number literals when using generic types?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27952003/155423\">Cannot create a generic function that uses a literal zero</a></li>\n<li><a href=\"https://codereview.stackexchange.com/q/186382/32521\">Rust, compute gcd: modularity, references</a></li>\n</ul>\n"}], "owner": {"reputation": 11, "user_id": 9858530, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da90d99578a7abd286ce92b9aabd7730?s=128&d=identicon&r=PG&f=1", "display_name": "halbGefressen", "link": "https://stackoverflow.com/users/9858530/halbgefressen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560973937, "creation_date": 1560972597, "last_edit_date": 1560972811, "question_id": 56674644, "link": "https://stackoverflow.com/questions/56674644/why-cant-i-divide-a-bigint-with-another-bigint-and-save-it-to-a-variable-ive-i", "title": "Why can&#39;t I divide a BigInt with another BigInt and save it to a variable I&#39;ve initialized with zero?", "body": "<p>I have the following code snippet:</p>\n\n<pre><code>use num_bigint::*; // 0.2.2\nuse num_traits::*; // 0.2.8\nuse std::ops::*;\n\nfn xgcd(b: &amp;BigInt, a: &amp;BigInt) -&gt; (BigInt, BigInt, BigInt) {\n    let mut x0: BigInt = One::one();\n    let mut x1: BigInt = Zero::zero();\n    let mut y0: BigInt = Zero::zero();\n    let mut y1: BigInt = One::one();\n    let mut q = 0;\n    while a != Zero::zero() {\n        q = b.div(a);\n        b = a;\n        a = &amp;b.rem(a);\n        x0 = x1;\n        x1 = x0 - q * x1;\n        y0 = y1;\n        y1 = y0 - q * y1;\n    }\n    return (*b, x0, y0);\n}\n</code></pre>\n\n<p>It gives the following error: </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:12:13\n   |\n12 |         q = b.div(a);\n   |             ^^^^^^^^ expected integer, found struct `num_bigint::bigint::BigInt`\n   |\n   = note: expected type `{integer}`\n              found type `num_bigint::bigint::BigInt`\n</code></pre>\n\n<p>I've looked up the documentation of <a href=\"https://docs.rs/num-bigint/0.2.2/num_bigint/struct.BigInt.html\" rel=\"nofollow noreferrer\"><code>num::BigInt</code></a> and it states that there is in fact a <code>div</code> method with a <code>BigInt</code> as a parameter, but somehow the compiler decides not to use it and instead tells me that I can't divide a <code>BigInt</code> with a <code>BigInt</code>. Is there any way to fix this?</p>\n"}, {"tags": ["rust", "gdb", "stm32f4discovery"], "comments": [{"owner": {"reputation": 109324, "user_id": 21926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6e61d47f9a6ec0a7a286835e51f3332?s=128&d=identicon&r=PG", "display_name": "Sean Bright", "link": "https://stackoverflow.com/users/21926/sean-bright"}, "edited": false, "score": 2, "creation_date": 1560968664, "post_id": 56673725, "comment_id": 99914812, "body": "Are you actually typing the <code>&lt;</code> and <code>&gt;</code>? If so, don&#39;t."}], "answers": [{"tags": [], "owner": {"reputation": 109324, "user_id": 21926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f6e61d47f9a6ec0a7a286835e51f3332?s=128&d=identicon&r=PG", "display_name": "Sean Bright", "link": "https://stackoverflow.com/users/21926/sean-bright"}, "is_accepted": false, "score": 2, "last_activity_date": 1560968732, "creation_date": 1560968732, "answer_id": 56673766, "question_id": 56673725, "link": "https://stackoverflow.com/questions/56673725/bash-gdb-no-such-file-or-directory/56673766#56673766", "title": "bash: gdb: No such file or directory", "body": "<p>From immediately below that command in the documentation you linked:</p>\n\n<blockquote>\n  <p><strong>NOTE:</strong> <code>&lt;gdb&gt;</code> represents a GDB program capable of debugging ARM\n  binaries. This could be <code>arm-none-eabi-gdb</code>, <code>gdb-multiarch</code> or <code>gdb</code>\n  depending on your system -- you may have to try all three.</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 1384, "user_id": 10240085, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HBxgL.jpg?s=128&g=1", "display_name": "Muhammad Naufil", "link": "https://stackoverflow.com/users/10240085/muhammad-naufil"}, "is_accepted": false, "score": 2, "last_activity_date": 1560968750, "creation_date": 1560968750, "answer_id": 56673768, "question_id": 56673725, "link": "https://stackoverflow.com/questions/56673725/bash-gdb-no-such-file-or-directory/56673768#56673768", "title": "bash: gdb: No such file or directory", "body": "<p>All I had to do was remove the greater and less than characters:</p>\n\n<pre><code>gdb -q target/thumbv7em-none-eabihf/debug/led-roulette\n</code></pre>\n"}], "owner": {"reputation": 1384, "user_id": 10240085, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HBxgL.jpg?s=128&g=1", "display_name": "Muhammad Naufil", "link": "https://stackoverflow.com/users/10240085/muhammad-naufil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 646, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1560968750, "creation_date": 1560968542, "question_id": 56673725, "link": "https://stackoverflow.com/questions/56673725/bash-gdb-no-such-file-or-directory", "title": "bash: gdb: No such file or directory", "body": "<p>I am following the official documentation of <a href=\"https://docs.rust-embedded.org/discovery/05-led-roulette/flash-it.html\" rel=\"nofollow noreferrer\">Discover Rust</a>. I am trying to flash the program into STM32F3. The <a href=\"https://docs.rust-embedded.org/discovery/05-led-roulette/flash-it.html\" rel=\"nofollow noreferrer\">Flash chapter</a> asks to execute this command </p>\n\n<pre><code>&lt;gdb&gt; -q target/thumbv7em-none-eabihf/debug/led-roulette\n</code></pre>\n\n<p>but it returns</p>\n\n<pre><code>bash: gdb: No such file or directory\n</code></pre>\n\n<p>As advised, my location is </p>\n\n<pre><code>naufil@Naufil:~/Desktop/discovery/src/05-led-roulette\n</code></pre>\n\n<p>and there is indeed <code>led-roulette</code> file inside <code>debug</code> folder. I have also made user if gdb is installed by executing</p>\n\n<pre><code>$ which -a gdb\n/usr/bin/gdb\n</code></pre>\n"}, {"tags": ["rust", "formatting", "fill"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 2, "last_activity_date": 1591696488, "creation_date": 1591696488, "answer_id": 62279816, "question_id": 56666258, "link": "https://stackoverflow.com/questions/56666258/is-it-possible-to-use-a-variable-as-the-fill-argument-in-the-format-macro/62279816#62279816", "title": "Is it possible to use a variable as the fill argument in the format! macro?", "body": "<p>Unfortunately there is no built-in way to do this.</p>\n\n<p>The formatting syntax evolved with features that early Rust adopters needed at the time. Its terseness means that new features are <a href=\"https://github.com/rust-lang/rust/issues/9669#issuecomment-25505018\" rel=\"nofollow noreferrer\">very difficult to add after the fact</a>.</p>\n"}], "owner": {"reputation": 59, "user_id": 9410258, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a87f05447613701a7c44f24ec65b83c?s=128&d=identicon&r=PG&f=1", "display_name": "niilz", "link": "https://stackoverflow.com/users/9410258/niilz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1591696488, "creation_date": 1560942464, "last_edit_date": 1591688569, "question_id": 56666258, "link": "https://stackoverflow.com/questions/56666258/is-it-possible-to-use-a-variable-as-the-fill-argument-in-the-format-macro", "title": "Is it possible to use a variable as the fill argument in the format! macro?", "body": "<p>I wanted to imitate Python's <code>rjust</code>, <code>ljust</code>, and <code>center</code> functions using the <code>format!</code> macro, but I was only able to work out a solution where you can pass in the string and the width. If you want to pass in the fill-argument it doesn't work.</p>\n\n<p>The documentation tells me that it is possible to provide variables to <code>format!</code> and for the width argument it works just fine. When I try to use a variable for fill, the compiler does not recognize the pattern.</p>\n\n<p>Just the width as a variable works:</p>\n\n<pre><code>fn rjust(text: &amp;str, width: usize, fill: Option&lt;char&gt;) -&gt; String {\n    format!(\"{text:&gt;width$}\", text = text, width = width)\n}\nprintln!(\"{}\", rjust(\"Hello\", 10)); // \"     Hello\"\n</code></pre>\n\n<p>Providing the fill as a variable does not work:</p>\n\n<pre><code>fn rjust(text: &amp;str, width: usize, fill: char) -&gt; String {\n    format!(\n        \"{text:fill&gt;width$}\",\n        text = text,\n        fill = fill,\n        width = width\n    )\n}\nprintln!(\"{}\", rjust(\"Hello\", 20, '*'));\n</code></pre>\n\n<p>The error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: invalid format string: expected `'}'`, found `'&gt;'`\n --&gt; src/lib.rs:4:24\n  |\n4 |             \"{text:fill&gt;width$}\",\n  |              -         ^ expected `}` in format string\n  |              |\n  |              because of this opening brace\n  |\n  = note: if you intended to print `{`, you can escape it using `{{`\n</code></pre>\n\n<p>If I provide a single character instead of the fill-variable, it works fine. Notice the <code>*</code> character:</p>\n\n<pre><code>fn rjust(text: &amp;str, width: usize, fill: char) -&gt; String {\n    format!(\"{text:*&gt;width$}\", text = text, width = width)\n}\nprintln!(\"{}\", rjust(\"Hello\", 20, '_')); // ***************Hello\n</code></pre>\n\n<p>I expected the fill-variable version to work the same as the hardcoded <code>*</code> character version.</p>\n\n<p>A workaround is to subtract the length of the text from the width and then create a <code>String</code> of that length (fill-length) made of fill-characters and  concatenate them:</p>\n\n<pre><code>fn rjust(text: &amp;str, width: usize, fill: char) -&gt; String {\n    let fill_len = width - text.len();\n    let fill_str: String = (0..fill_len).map(|_| fill).collect();\n    String::from(fill_str + text)\n}\nprintln!(\"{}\", rjust(\"Hello\", 20, '*')); // ***************Hello\n</code></pre>\n"}, {"tags": ["string", "utf-8", "rust", "slice"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1560936173, "post_id": 56664127, "comment_id": 99896855, "body": "What&#39;s the intended logic for this conversion ? What&#39;s in those <code>[u8]</code> ?"}, {"owner": {"reputation": 15778, "user_id": 3706693, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c23cb4348804fbc993d70df4cab71fc?s=128&d=identicon&r=PG", "display_name": "num8er", "link": "https://stackoverflow.com/users/3706693/num8er"}, "edited": false, "score": 0, "creation_date": 1560938691, "post_id": 56664127, "comment_id": 99898338, "body": "for such type of questions I&#39;m using Rust community IRC channel in freenode (chat.freenode.net port:6697, channel name: ##rust). They give me quick working answers"}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 11533897, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/08ec0686024b244a023d5806714e641f?s=128&d=identicon&r=PG", "display_name": "fxwiegand", "link": "https://stackoverflow.com/users/11533897/fxwiegand"}, "edited": false, "score": 0, "creation_date": 1560938623, "post_id": 56664448, "comment_id": 99898294, "body": "thank you, i discovered that my Vec&lt;&amp;[u8]&gt; looks like [[67, 84], [71, 84], [67]] or as a string: CTGTC. I want to split the vec in to 3 strings: str1 =  CT, str2 = GT and str3 = C."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1560938712, "post_id": 56664448, "comment_id": 99898349, "body": "With the error handling: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=8f91418dbcd5448038d5c91f34da5952\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "reply_to_user": {"reputation": 1, "user_id": 11533897, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/08ec0686024b244a023d5806714e641f?s=128&d=identicon&r=PG", "display_name": "fxwiegand", "link": "https://stackoverflow.com/users/11533897/fxwiegand"}, "edited": false, "score": 0, "creation_date": 1560939494, "post_id": 56664448, "comment_id": 99898782, "body": "@fxwiegand You can do it with <code>Vec&lt;&amp;str&gt;</code> : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0105b5655f23200acd7d58758728a767\" rel=\"nofollow noreferrer\">Rust Playground</a>"}], "tags": [], "owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "is_accepted": true, "score": 4, "last_activity_date": 1560937492, "last_edit_date": 1560937492, "creation_date": 1560936638, "answer_id": 56664448, "question_id": 56664127, "link": "https://stackoverflow.com/questions/56664127/proper-way-to-access-vecu8-as-strings/56664448#56664448", "title": "Proper way to access Vec&lt;&amp;[u8]&gt; as strings", "body": "<p>Because <code>r</code> is an array of <code>u8</code>, you need to convert it to a valid <code>&amp;str</code> and use <code>push_str</code> method of <code>String</code>. </p>\n\n<pre><code>use std::str;\n\nfn main() {\n    let rfrce = vec![&amp;[65,66,67], &amp;[68,69,70]];\n\n    let mut str = String::new();\n\n    for r in rfrce {\n        str.push_str(str::from_utf8(r).unwrap());\n    }\n\n    println!(\"{}\", str);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=23948daf7198f71fda0470c2dae5c28b\" rel=\"nofollow noreferrer\">Rust Playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": false, "score": 1, "last_activity_date": 1560938059, "last_edit_date": 1560938059, "creation_date": 1560937714, "answer_id": 56664789, "question_id": 56664127, "link": "https://stackoverflow.com/questions/56664127/proper-way-to-access-vecu8-as-strings/56664789#56664789", "title": "Proper way to access Vec&lt;&amp;[u8]&gt; as strings", "body": "<p>I'd go with <a href=\"https://doc.rust-lang.org/std/convert/trait.TryFrom.html\" rel=\"nofollow noreferrer\"><code>TryFrom&lt;u32&gt;</code></a>:</p>\n\n<pre><code>fn to_string(v: &amp;[&amp;[u8]]) -&gt; Result&lt;String, std::char::CharTryFromError&gt; {\n    /// Transform a &amp;[u8] to an UTF-8 codepoint\n    fn su8_to_u32(s: &amp;[u8]) -&gt; Option&lt;u32&gt; {\n        if s.len() &gt; 4 {\n            None\n        } else {\n            let shift = (0..=32).step_by(8);\n            let result = s.iter().rev().cloned().zip(shift).map(|(u, shift)| (u as u32) &lt;&lt; shift).sum();\n            Some(result)\n        }\n    }\n\n    use std::convert::TryFrom;\n\n    v.iter().map(|&amp;s| su8_to_u32(s)).try_fold(String::new(), |mut s, u| {\n        let u = u.unwrap(); //TODO error handling\n        s.push(char::try_from(u)?);\n        Ok(s)\n    })\n}\n\nfn main() {\n    let rfrce: Vec&lt;&amp;[u8]&gt; = vec![&amp;[48][..], &amp;[49][..], &amp;[50][..], &amp;[51][..]];\n    assert_eq!(to_string(&amp;rfrce), Ok(\"0123\".into()));\n\n    let rfrce: Vec&lt;&amp;[u8]&gt; = vec![&amp;[0xc3, 0xa9][..]]; // https://www.utf8icons.com/character/50089/utf-8-character\n    assert_eq!(to_string(&amp;rfrce), Ok(\"\uc3a9\".into()));\n\n}\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 11533897, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/08ec0686024b244a023d5806714e641f?s=128&d=identicon&r=PG", "display_name": "fxwiegand", "link": "https://stackoverflow.com/users/11533897/fxwiegand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 244, "favorite_count": 0, "closed_date": 1560938398, "accepted_answer_id": 56664448, "answer_count": 2, "score": -5, "last_activity_date": 1560938373, "creation_date": 1560935704, "last_edit_date": 1560938373, "question_id": 56664127, "link": "https://stackoverflow.com/questions/56664127/proper-way-to-access-vecu8-as-strings", "closed_reason": "Duplicate", "title": "Proper way to access Vec&lt;&amp;[u8]&gt; as strings", "body": "<p>I have a <code>Vec&lt;&amp;[u8]&gt;</code> that I want to convert to a <code>String</code> like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let rfrce: Vec&lt;&amp;[u8]&gt; = rec.alleles();\n\nfor r in rfrce {\n    // create new String from rfrce\n}\n</code></pre>\n\n<p>I tried this but it is not working since only converting <code>u8</code> to <code>char</code> is possible, but <code>[u8]</code> to <code>char</code> is not:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let rfrce = rec.alleles();\n\nlet mut str = String::from(\"\");\n\nfor r in rfrce {\n    str.push(*r as char);\n}\n</code></pre>\n"}, {"tags": ["vector", "indexing", "rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1560929047, "post_id": 56661368, "comment_id": 99893106, "body": "Please post a code which reproduces your error. I believe your full code should be like this : <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ae487d75067205ea6a8672dcc8eacc3a\" rel=\"nofollow noreferrer\">Playground</a>"}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 1, "last_activity_date": 1560929148, "creation_date": 1560929148, "answer_id": 56662234, "question_id": 56661368, "link": "https://stackoverflow.com/questions/56661368/sliceindex-trait-bound-unsatisfied-error-when-trying-to-index-into-a-vector-in-r/56662234#56662234", "title": "SliceIndex trait bound unsatisfied error when trying to index into a vector in Rust", "body": "<blockquote>\n  <p>Rust seems to be telling me that I can't index into a vector with <code>index</code>, which is a <code>usize</code>.</p>\n</blockquote>\n\n<p>No, the compiler is telling you that you can't index a vector with an <code>&amp;usize</code>.</p>\n\n<pre><code>the trait `std::slice::SliceIndex&lt;[&amp;SomeValue]&gt;` is not implemented for `&amp;usize`\n</code></pre>\n\n<p>Simply using <code>*index</code> instead will fix this particular problem. However, your code has other problems as well:</p>\n\n<ul>\n<li>The <code>Index</code> trait needs a type parameter, e.g. <code>&amp;str</code> in this case.</li>\n<li>The <code>index()</code> method can generally only return a reference to data stored in the data structure you are indexing. Your code creates a temporary <code>Option</code>, which is not stored in the original data, and then tries to return a reference to that. If this is what you want to do, you need to define your own method (or trait) that returns the <code>Option</code> by value instead.</li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 1, "last_activity_date": 1560932009, "last_edit_date": 1560932009, "creation_date": 1560929159, "answer_id": 56662239, "question_id": 56661368, "link": "https://stackoverflow.com/questions/56661368/sliceindex-trait-bound-unsatisfied-error-when-trying-to-index-into-a-vector-in-r/56662239#56662239", "title": "SliceIndex trait bound unsatisfied error when trying to index into a vector in Rust", "body": "<p>Maybe the compiler error is hard to understand, but at least it is accurate.  It tells you, that <code>index</code> is a reference <code>&amp;usize</code> however a <code>Vec</code> can only be indexed with the value <code>usize</code>.  So all you have to do is dereference <code>index</code>.</p>\n\n<p>Moreover, usually indexing <code>panic</code>s if the key/index could not be found.  (That's why the standard library offers the <code>Vec::get</code>, and <code>HashMap::get</code> as separate methods alongside indexing, which do not <code>panic</code> but return <code>None</code> if the given key/index not in the collection.)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a&gt; Index&lt;&amp;str&gt; for SomeCollection&lt;'a&gt; {\n    type Output = &amp;'a SomeValue;\n\n    fn index(&amp;self, value_name: &amp;str) -&gt; &amp;Self::Output {\n        match self.name_mapping.get(value_name) {\n            Some(index) =&gt; &amp;self.items[*index],\n            None =&gt; match self.index_mapping.get(value_name) {\n                Some(index) =&gt; &amp;self.items[*index],\n                None =&gt; panic!(\"Missing key: {:?}\", value_name),\n            }\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 56662239, "answer_count": 2, "score": -1, "last_activity_date": 1560932009, "creation_date": 1560925854, "question_id": 56661368, "link": "https://stackoverflow.com/questions/56661368/sliceindex-trait-bound-unsatisfied-error-when-trying-to-index-into-a-vector-in-r", "title": "SliceIndex trait bound unsatisfied error when trying to index into a vector in Rust", "body": "<p>I have a struct:</p>\n\n<pre><code>pub struct SomeCollection&lt;'a&gt; {\n    items: Vec&lt;&amp;'a SomeValue&gt;,\n    name_mapping: HashMap&lt;&amp;'a str, usize&gt;,\n    index_mapping: HashMap&lt;&amp;'a str, usize&gt;\n}\n\nimpl&lt;'a&gt; Index for SomeCollection&lt;'a&gt; {\n    type Output = Option&lt;&amp;'a SomeValue&gt;;\n\n    fn index(&amp;self, value_name: &amp;str) -&gt; &amp;Self::Output {\n        match self.name_mapping.get(value_name) {\n            Some(index) =&gt; &amp;self.items.get(index),\n            None =&gt; match self.index_mapping.get(value_name) {\n                Some(index) =&gt; &amp;self.items.get(index),\n                None =&gt; &amp;None\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>When I try compiling this code I get the following error:</p>\n\n<pre><code>error[E0277]: the trait bound `&amp;usize: std::slice::SliceIndex&lt;[&amp;SomeValue]&gt;` is not satisfied\n  --&gt; src\\some_collection.rs:49:48\n   |\n49 |                 Some(index) =&gt; &amp;self.items.get(index),\n   |                                            ^^^ slice indices are of \ntype `usize` or ranges of `usize`\n   |\n   = help: the trait `std::slice::SliceIndex&lt;[&amp;SomeValue]&gt;` is not implemented for `&amp;usize`\n</code></pre>\n\n<p>Rust seems to be telling me that I can't index into a vector with <code>index</code>, which is a <code>usize</code>. I'm not sure why I need to implement this trait as it should be implemented for the default vector already. Can anyone enlighten me as to the real reason I'm getting this error? There may be other errors in this code that haven't surfaced yet so please bear that in mind when answering.</p>\n"}, {"tags": ["json", "merge", "rust", "undefined", "serde"], "comments": [{"owner": {"reputation": 3190, "user_id": 141881, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/7DLiX.png?s=128&g=1", "display_name": "pospi", "link": "https://stackoverflow.com/users/141881/pospi"}, "edited": false, "score": 0, "creation_date": 1560998664, "post_id": 56661241, "comment_id": 99923083, "body": "This is great, thanks! Ended up using the approach given in <a href=\"https://stackoverflow.com/a/44332837/141881\">stackoverflow.com/a/44332837/141881</a> as I like the way it adds clarity over the &quot;double option&quot; pattern.  In my case, the key missing ingredients are <code>impl&lt;T&gt; From&lt;Option&lt;T&gt;&gt; for MaybeUndefined&lt;T&gt;</code> and <code>impl&lt;&#39;de, T&gt; Deserialize&lt;&#39;de&gt; for MaybeUndefined&lt;T&gt;</code>."}], "owner": {"reputation": 3190, "user_id": 141881, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/7DLiX.png?s=128&g=1", "display_name": "pospi", "link": "https://stackoverflow.com/users/141881/pospi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 256, "favorite_count": 0, "closed_date": 1560935061, "answer_count": 0, "score": 1, "last_activity_date": 1560925380, "creation_date": 1560925380, "question_id": 56661241, "link": "https://stackoverflow.com/questions/56661241/rust-enable-serde-to-distinguish-between-undefined-null", "closed_reason": "Duplicate", "title": "Rust: enable Serde to distinguish between undefined &amp; null", "body": "<p>I'm trying to implement support in a Rust API for a common JavaScript pattern, where updating an object will leave fields in the original object untouched if they are not provided in the update payload, but they will be cleared if they are provided as <code>null</code>.</p>\n\n<p>I think I'm pretty close, but the final sticking point is the custom deserialization logic to return types of my enum instead of the standard <code>Option&lt;T&gt;</code>. This appears to be more complicated than implementing deserializers for more concrete types due to the need to deal with the absence of values. The current implementation of my new type (excluding the deserialization) looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Type alias for dealing with entry fields that are not provided separately to nulls.\n/// Used for update behaviour- null erases fields, undefined leaves them untouched.\n#[derive(Serialize, Deserialize, Debug, Clone, PartialEq)]\npub enum MaybeUndefined&lt;T&gt; {\n    None,\n    Some(T),\n    Undefined,\n}\n\n// helper method for pulling values out to regular Option\n// :TODO: see if this can be done without cloning the wrapped data for complex types like `Vec`\nimpl&lt;T&gt; MaybeUndefined&lt;T&gt; where T: Clone {\n    pub fn to_option(self) -&gt; Option&lt;T&gt; {\n        match self {\n            MaybeUndefined::Some(val) =&gt; Option::Some(val.clone()),\n            _ =&gt; None,\n        }\n    }\n}\n\nimpl&lt;T&gt; Into&lt;Option&lt;T&gt;&gt; for MaybeUndefined&lt;T&gt; where T: Clone {\n    fn into(self) -&gt; Option&lt;T&gt; {\n        self.to_option()\n    }\n}\n\n// default to undefined, not null\n// used by Serde to provide default values via `#[serde(default)]`\nimpl&lt;T&gt; Default for MaybeUndefined&lt;T&gt; {\n    fn default() -&gt; MaybeUndefined&lt;T&gt; {\n        MaybeUndefined::Undefined\n    }\n}\n</code></pre>\n\n<p>From here I have tried implementing traits for <code>TryInto&lt;MaybeUndefined&lt;T&gt;&gt;</code>, but my code doesn't seem to be getting called so I don't think this is the correct approach.</p>\n\n<p>FWIW the test case I'm trying to pass looks like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Serialize, Deserialize, Debug, Default, Clone, PartialEq)]\nstruct TestEntrySimple {\n    #[serde(default)]\n    test_field: MaybeUndefined&lt;String&gt;,\n}\n\nfn test_deserialization() {\n    let expected = TestEntrySimple { test_field: MaybeUndefined::Some(\"blah\".to_string()) };\n    let input_json = \"{\\\"test_field\\\":\\\"blah\\\"}\";\n\n    assert_eq!(\n        Ok(expected),\n        TestEntrySimple::try_from(::serde_json::from_str(input_json)),\n    );\n}\n</code></pre>\n\n<p>Any ideas what the correct approach to take here is?</p>\n"}, {"tags": ["rust", "rust-actix", "actix-web"], "comments": [{"owner": {"reputation": 1720, "user_id": 1437652, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f6555466525883d7e07cdf7677fd481f?s=128&d=identicon&r=PG", "display_name": "CallMeNorm", "link": "https://stackoverflow.com/users/1437652/callmenorm"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560968903, "post_id": 56659643, "comment_id": 99914938, "body": "Cool, I&#39;ll get it down to a small playground."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560969148, "post_id": 56659643, "comment_id": 99915045, "body": "It&#39;s possible that the playground <i>doesn&#39;t</i> have the crates you need (pretty sure this is true for Actix) it which case you should do the same techniques to make a MCVE locally and then post your <code>main.rs</code> file. Thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 275, "user_id": 11694170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GHN4u.jpg?s=128&g=1", "display_name": "miquels", "link": "https://stackoverflow.com/users/11694170/miquels"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561462797, "post_id": 56750700, "comment_id": 100063929, "body": "That occured to me as well, but CallMeNorm said &quot;I&#39;ve reduced the function so that it&#39;s just returning the user that is passed to it&quot;. So I assume that in the original code there is some actual blocking code."}, {"owner": {"reputation": 1720, "user_id": 1437652, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f6555466525883d7e07cdf7677fd481f?s=128&d=identicon&r=PG", "display_name": "CallMeNorm", "link": "https://stackoverflow.com/users/1437652/callmenorm"}, "edited": false, "score": 0, "creation_date": 1561471455, "post_id": 56750700, "comment_id": 100069452, "body": "@miquels thanks for your answer. How did you get from the error to get to your answer. Part of the problem for me was that the error &#39;std::any::Any&#39; cannot be sent between threads didn&#39;t leave me much to search for."}, {"owner": {"reputation": 275, "user_id": 11694170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GHN4u.jpg?s=128&g=1", "display_name": "miquels", "link": "https://stackoverflow.com/users/11694170/miquels"}, "reply_to_user": {"reputation": 1720, "user_id": 1437652, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f6555466525883d7e07cdf7677fd481f?s=128&d=identicon&r=PG", "display_name": "CallMeNorm", "link": "https://stackoverflow.com/users/1437652/callmenorm"}, "edited": false, "score": 1, "creation_date": 1561504625, "post_id": 56750700, "comment_id": 100083303, "body": "Ah yes. The rust compiler is usually very helpful with error messages, but in some cases - especially with futures - they can be quite convoluted.  I know from previous experience that actix-web has a slightly different design than plain tokio. It load-balances requests over multiple threads, but then a request is executed on the one thread it was assigned to - and several actix types are not <code>Send</code>. They don&#39;t have to be."}], "tags": [], "owner": {"reputation": 275, "user_id": 11694170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GHN4u.jpg?s=128&g=1", "display_name": "miquels", "link": "https://stackoverflow.com/users/11694170/miquels"}, "is_accepted": true, "score": 7, "last_activity_date": 1561454452, "creation_date": 1561454452, "answer_id": 56750700, "question_id": 56659643, "link": "https://stackoverflow.com/questions/56659643/rust-actix-web-thread-unsafe-movement/56750700#56750700", "title": "Rust actix-web thread unsafe movement", "body": "<p>Well, first, <code>HttpResponse</code> does not implement <code>Send</code>. Since <code>web::block()</code> runs the closure on a threadpool, that is a problem. So you need to return a value that <em>is</em> <code>Send</code> from <code>web::block</code>, and then create a <code>HttpResponse</code> from that - using <code>and_then()</code> for example.</p>\n\n<p>Second, in your router you are using <code>web::get().to(login)</code>. If you want to call a function that returns a <code>Future</code>, that needs to be <code>web::get().to_async(login)</code>.</p>\n\n<p>Third, the closure in <code>web::block</code> needs to return <code>Result</code>. Since you never return an error value, the compiler cannot infer the error type. You need to give the compiler a hint. Usually <code>std::io::Error</code> will do,so return <code>Ok::&lt;_, std::io::Error&gt;(...value...)</code>.</p>\n\n<p>Fourth, <code>web::block</code> returns a <code>BlockingError&lt;E&gt;</code>. You can use <code>from_err()</code> to map that to something that you can return.</p>\n\n<p>So, with all that, the relevant part of your code would look like:</p>\n\n<pre><code>pub fn login(\n    login_user: web::Json&lt;LoginUser&gt;,\n) -&gt; impl Future&lt;Item = HttpResponse, Error = Error&gt; {\n    web::block(move || {\n        let login_user = login_user.into_inner();\n        let user = LoginUser {\n            username: login_user.username,\n            password: login_user.password,\n        };\n        Ok::&lt;_, std::io::Error&gt;(user)\n    })\n        .from_err()\n        .and_then(|user| HttpResponse::Ok().json(user))\n}\n\npub fn router(cfg: &amp;mut web::ServiceConfig) {\n    cfg.service(web::scope(\"/\").service(web::resource(\"\").route(web::get().to_async(login))));\n}\n</code></pre>\n"}], "owner": {"reputation": 1720, "user_id": 1437652, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/f6555466525883d7e07cdf7677fd481f?s=128&d=identicon&r=PG", "display_name": "CallMeNorm", "link": "https://stackoverflow.com/users/1437652/callmenorm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 645, "favorite_count": 0, "accepted_answer_id": 56750700, "answer_count": 1, "score": 3, "last_activity_date": 1561454452, "creation_date": 1560915041, "last_edit_date": 1561079803, "question_id": 56659643, "link": "https://stackoverflow.com/questions/56659643/rust-actix-web-thread-unsafe-movement", "title": "Rust actix-web thread unsafe movement", "body": "<p>I'm trying to write an HTTP endpoint using actix-web 1.0. I've reduced the function so that it's just returning the user that is passed to it, but the compiler still gives an error.</p>\n\n<pre><code>extern crate actix_web;\nextern crate chrono;\nextern crate futures;\nextern crate listenfd;\n#[macro_use]\nextern crate serde_derive;\nextern crate dotenv;\nuse actix_web::{error, web, App, Error, HttpResponse, HttpServer};\nuse futures::future::Future;\n\n#[derive(Debug, Deserialize, Serialize)]\npub struct LoginUser {\n    pub username: String,\n    pub password: String,\n}\n\npub fn login(\n    login_user: web::Json&lt;LoginUser&gt;,\n) -&gt; impl Future&lt;Item = HttpResponse, Error = error::BlockingError&lt;Error&gt;&gt; {\n    web::block(move || {\n        let login_user = login_user.into_inner();\n        let user = LoginUser {\n            username: login_user.username,\n            password: login_user.password,\n        };\n        Ok(HttpResponse::Ok().json(user))\n    })\n}\n\npub fn router(cfg: &amp;mut web::ServiceConfig) {\n    cfg.service(web::scope(\"/\").service(web::resource(\"\").route(web::get().to(login))));\n}\n\nfn main() -&gt; std::io::Result&lt;()&gt; {\n    HttpServer::new(move || App::new().configure(router))\n        .bind(\"127.0.0.1:3000\")?\n        .run()\n}\n</code></pre>\n\n<p>Here is my cargo.toml.</p>\n\n<pre><code>[package]\nname = \"log\"\nversion = \"0.1.0\"\nauthors = [\"me@example.com\"\nedition = \"2018\"\n\n[dependencies]\nactix-files = \"~0.1\"\nactix-web = \"~1.0\"\nchrono = { version = \"0.4.6\", features = [\"serde\"] }\nlistenfd = \"0.3\"\ndiesel = {version = \"1.4.1\", features = [\"postgres\", \"uuid\", \"r2d2\", \"chrono\"]}\ndotenv = \"0.13\"\nfailure = \"0.1\"\nfutures = \"0.1\"\nscrypt = \"0.2.0\"\nserde_derive=\"1.0\"\nserde_json=\"1.0\"\nserde=\"1.0\"\n\n</code></pre>\n\n<p>I'm getting the compilation error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|     web::block(move || {\n|     ^^^^^^^^^^ `(dyn std::any::Any + 'static)` cannot be sent between threads safely\n</code></pre>\n\n<p>I think it has something to do with the use of <code>login_user</code> in the <code>web::block</code>, but it's hard to tell from the error. What is the preferred way to use request parameters asynchronously in Rust or actix safely?</p>\n"}, {"tags": ["functional-programming", "rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560906581, "post_id": 56658729, "comment_id": 99887236, "body": "I don&#39;t don&#39;t what would be the use case in Rust, I don&#39;t think there is one. Why do you want this ?"}, {"owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560909153, "post_id": 56658729, "comment_id": 99887678, "body": "I have a collection of different sort functions with a common signature so they can be passed interchangeably to other functions. I want to be able to declare inline that each should match the same signature, so I&#39;ll be warned contextually if one of them breaks with it."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560910542, "post_id": 56658729, "comment_id": 99887921, "body": "<a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=416c5d037b604d12bcf3b9d2c32a5250\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a> ? There is other way that this one, look like you should learn to code in Rust instead of trying to use other idiom from other language. It could be more easy to help you if you provide more context"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560910651, "post_id": 56658729, "comment_id": 99887940, "body": "By the way, idiomatic Rust does not use <code>return</code> at the end of blocks."}, {"owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560911263, "post_id": 56658729, "comment_id": 99888048, "body": "@Shepmaster I personally find it more readable in multi-line functions; they wouldn&#39;t have included it if it weren&#39;t intended to be used."}, {"owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560911459, "post_id": 56658729, "comment_id": 99888082, "body": "@Stargateur one of those &quot;some other language&quot;s is Haskell, which is one of Rust&#39;s greatest influences. Certain features of it are omitted for practical reasons, but Rust generally tries to include the idioms from Haskell that are feasible to implement. It&#39;s completely possible this one wasn&#39;t feasible for some reason I&#39;m not seeing, I&#39;m just asking if that&#39;s the case. Please only comment if you have something to contribute in the form of answering the original question."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560911471, "post_id": 56658729, "comment_id": 99888085, "body": "They are intended to be used for early-exit situations, where a keyword is required. You are welcome to do whatever you want, but if you push back against every convention and idiom of a language, that may be a sign that the language is not a good fit for the problem at hand."}, {"owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560912413, "post_id": 56658729, "comment_id": 99888243, "body": "@Shepmaster It was my understanding that functional idioms are, generally speaking, considered to be welcome in Rust, so it didn&#39;t seem unreasonable to ask the original question. As for the explicit return; I was only using it in these single-line functions for clarity. In multi-line functions I do find it more readable, but I wouldn&#39;t say that qualifies as &quot;pushing back against every convention and idiom of the language&quot;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560912513, "post_id": 56658729, "comment_id": 99888264, "body": "The question itself is reasonable, no argument from me there!"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 1, "creation_date": 1560931688, "post_id": 56658729, "comment_id": 99894444, "body": "@brundolf a side note really, but, it is most certainly not the <i>greatest</i>, but one of the many which had influence on Rust, in the case of Haskell these were typeclasses, and type families: <a href=\"https://doc.rust-lang.org/reference/influences.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/reference/influences.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1560911378, "creation_date": 1560911378, "answer_id": 56659268, "question_id": 56658729, "link": "https://stackoverflow.com/questions/56658729/how-do-i-declare-a-regular-non-closure-function-that-adheres-to-a-function-typ/56659268#56659268", "title": "How do I declare a regular (non-closure) function that adheres to a function type?", "body": "<blockquote>\n  <p>Rust has a syntax for declaring function types:</p>\n\n<pre><code>type Foo = Fn(i32) -&gt; i32;\n</code></pre>\n</blockquote>\n\n<p>This is <em>not</em> such a syntax (as you might infer by the fact that it doesn't do what you want). This creates a type alias of the type <code>dyn Fn(i32) -&gt; i32</code>.</p>\n\n<p>You can achieve some of what you want by using a function pointer and creating an unused variable set to the function:</p>\n\n<pre><code>type MyType = fn(i32) -&gt; i32;\n\nfn blah(x: i32) -&gt; i32 {\n    x * 2\n}\n\nconst _IGNORE: MyType = blah;\n</code></pre>\n\n<p>However, I agree with the comments that you are going about this in a non-idiomatic Rust manner. You want to create an interface that things adhere to, and in Rust that's a <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html\" rel=\"nofollow noreferrer\"><em>trait</em></a>:</p>\n\n<pre><code>trait Sort {\n    fn foo(_: i32) -&gt; i32;\n}\n\nstruct A;\nimpl Sort for A {\n    fn foo(x: i32) -&gt; i32 {\n        x * 2\n    }\n}\n</code></pre>\n\n<p>This prevents accidentally \"crossing the streams\" by providing a <code>fn(String)</code> when you meant an <code>fn(String)</code>; the former being \"print this string\" and the latter being \"delete the file named\". Function signatures are, at best, a weak interface.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/50650070/155423\">What does &quot;dyn&quot; mean in a type?</a></li>\n<li><a href=\"https://stackoverflow.com/q/32764797/155423\">How to enforce that a type implements a trait at compile time?</a></li>\n</ul>\n"}], "owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 56659268, "answer_count": 1, "score": 1, "last_activity_date": 1560911378, "creation_date": 1560905396, "last_edit_date": 1560911076, "question_id": 56658729, "link": "https://stackoverflow.com/questions/56658729/how-do-i-declare-a-regular-non-closure-function-that-adheres-to-a-function-typ", "title": "How do I declare a regular (non-closure) function that adheres to a function type?", "body": "<p>I have a collection of different sort functions with a common signature so they can be passed interchangeably to other functions. I want to be able to declare inline that each should match the same signature, so I'll be warned contextually if one of them breaks with it. </p>\n\n<p>Rust has a syntax for declaring function types:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type Foo = Fn(i32) -&gt; i32;\n\nfn bar(func: &amp;Foo) {\n    func(12);\n}\n</code></pre>\n\n<p>What I can't figure out is how to declare a regular (non-closure) function that adheres to a function type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// this works and can be passed as a Foo, but \n// duplicates code and isn't checked against Foo\nfn blah(x: i32) -&gt; i32 {\n    return x * 2;\n}\n\n// this isn't valid syntax\nfn blah(x): Foo {\n    return x * 2;\n}\n</code></pre>\n\n<p>This is common practice in some other languages that have function types. Is there a syntax I don't know about, is this an upcoming feature, or is there some technical reason preventing it from being added to Rust?</p>\n\n<p>Note; something like this would also serve my purpose, even though it'd be more clunky:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn blah(x: i32) -&gt; i32 {\n    return x * 2;\n}: Foo\n</code></pre>\n"}, {"tags": ["memory-leaks", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560903119, "post_id": 56658485, "comment_id": 99886653, "body": "By the way, idiomatic Rust does not use explicit <code>return</code>s."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560956393, "post_id": 56658485, "comment_id": 99908832, "body": "Do you know that you can overload the and operator (<code>&amp;</code>)? <a href=\"https://doc.rust-lang.org/std/ops/trait.BitAnd.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/ops/trait.BitAnd.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1560970522, "last_edit_date": 1560970522, "creation_date": 1560910543, "answer_id": 56659185, "question_id": 56658485, "link": "https://stackoverflow.com/questions/56658485/is-there-an-idiomatic-way-of-avoiding-boxleak-with-this-code/56659185#56659185", "title": "Is there an idiomatic way of avoiding `Box::leak` with this code?", "body": "<p>Your code does not need <code>Box::leak</code> and it's unclear why you think it does. The code continues to compile and have the same output if it's removed:</p>\n\n<pre><code>impl Foo {\n    fn and(a: Option&lt;Predicate&gt;, b: Option&lt;Predicate&gt;) -&gt; Option&lt;Predicate&gt; {\n        if a.is_none() {\n            b\n        } else if b.is_none() {\n            a\n        } else {\n            let a = a.unwrap();\n            let b = b.unwrap();\n            Some(Box::new(move |form: &amp;Form| a(form) &amp;&amp; b(form)))\n        }\n    }\n}\n</code></pre>\n\n<p>The <code>unwrap</code>s are non-idiomatic; a more idiomatic solution would use <code>match</code>:</p>\n\n<pre><code>impl Foo {\n    fn and(a: Option&lt;Predicate&gt;, b: Option&lt;Predicate&gt;) -&gt; Option&lt;Predicate&gt; {\n        match (a, b) {\n            (a, None) =&gt; a,\n            (None, b) =&gt; b,\n            (Some(a), Some(b)) =&gt; Some(Box::new(move |form| a(form) &amp;&amp; b(form))),\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 358, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1560970522, "creation_date": 1560902689, "last_edit_date": 1560955610, "question_id": 56658485, "link": "https://stackoverflow.com/questions/56658485/is-there-an-idiomatic-way-of-avoiding-boxleak-with-this-code", "title": "Is there an idiomatic way of avoiding `Box::leak` with this code?", "body": "<p>As I continue to learn Rust I'm working on a project which involves extensive use of predicate functions. I've decided to implement these predicates with Rust closures, e.g.:</p>\n\n<p><code>type Predicate = Box&lt;Fn(&amp;Form) -&gt; bool&gt;</code>.</p>\n\n<p>My program uses boolean logic applied to these predicates. For instance, both <code>and</code> as well as <code>or</code> are applied over the value of these predicates. I've made this work using <code>Box::leak</code>: </p>\n\n<pre><code>struct Form {\n    name: String,\n}\n\nfn and(a: Option&lt;Predicate&gt;, b: Option&lt;Predicate&gt;) -&gt; Option&lt;Predicate&gt; {\n    if a.is_none() {\n        return b;\n    } else if b.is_none() {\n        return a;\n    } else {\n        let a = Box::leak(a.unwrap());\n        let b = Box::leak(b.unwrap());\n        return Some(Box::new(move |form: &amp;Form| a(form) &amp;&amp; b(form)));\n    }\n}\n</code></pre>\n\n<p>While this seems to work as I'd like, <code>Box::leak</code> seems non-ideal. I don't know enough about <code>std::rc::Rc</code> and <code>std::cell::RefCell</code> to know if these might help me avoid <code>Box::leak</code> here \u2014 employing them might require significant restructuring of my code, but I'd like to at least understand what the idiomatic approach here might be.</p>\n\n<p>Is there a way of avoiding the leak while still maintaining the same functionality?</p>\n\n<p>Here's <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=baac4f0ac7eebdfeef5bf1738486f550\" rel=\"nofollow noreferrer\">the complete example</a>:</p>\n\n<pre><code>struct Form {\n    name: String,\n}\n\ntype Predicate = Box&lt;Fn(&amp;Form) -&gt; bool&gt;;\n\nstruct Foo {\n    predicates: Vec&lt;Predicate&gt;,\n}\n\nimpl Foo {\n    fn and(a: Option&lt;Predicate&gt;, b: Option&lt;Predicate&gt;) -&gt; Option&lt;Predicate&gt; {\n        if a.is_none() {\n            return b;\n        } else if b.is_none() {\n            return a;\n        } else {\n            let a = Box::leak(a.unwrap());\n            let b = Box::leak(b.unwrap());\n            return Some(Box::new(move |form: &amp;Form| a(form) &amp;&amp; b(form)));\n        }\n    }\n}\n\nfn main() {\n    let pred = Foo::and(\n        Some(Box::new(move |form: &amp;Form| {\n            form.name == String::from(\"bar\")\n        })),\n        Some(Box::new(move |_: &amp;Form| true)),\n    )\n    .unwrap();\n    let foo = Foo {\n        predicates: vec![pred],\n    };\n    let pred = &amp;foo.predicates[0];\n    let form_a = &amp;Form {\n        name: String::from(\"bar\"),\n    };\n    let form_b = &amp;Form {\n        name: String::from(\"baz\"),\n    };\n    assert_eq!(pred(form_a), true);\n    assert_eq!(pred(form_b), false);\n}\n</code></pre>\n"}, {"tags": ["rust", "generator"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1560961436, "last_edit_date": 1560961436, "creation_date": 1560902192, "answer_id": 56658445, "question_id": 56657852, "link": "https://stackoverflow.com/questions/56657852/why-does-a-generator-that-was-working-in-nightly-rust-1-29-give-an-error-in-nigh/56658445#56658445", "title": "Why does a generator that was working in nightly Rust 1.29 give an error in nightly 1.34.0?", "body": "<blockquote>\n  <p>Why does generator code that was working in nightly Rust 1.29 give an error in Nightly 1.34.0?</p>\n</blockquote>\n\n<p>Because this is a <em>nightly</em>, <em>unstable</em> feature which may change at any time and it changed.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/49673121/155423\">What is the stabilization process?</a></li>\n</ul>\n\n<blockquote>\n  <p>Why does wrapping the <code>Generator</code> in <code>Pin</code> give the error in the latest version?</p>\n</blockquote>\n\n<p>As the error message states, <code>Box&lt;dyn Generator&lt;Yield = u64, Return = &amp;str&gt;&gt;</code> doesn't implement <code>Generator</code>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27567849/155423\">What makes something a &quot;trait object&quot;?</a></li>\n</ul>\n\n<blockquote>\n  <p>What's the use of using the <code>Pin</code> for the generator?</p>\n  \n  <p>Why is the <code>resume</code> method no longer unsafe?</p>\n</blockquote>\n\n<p>The <code>resume</code> method was unsafe because you could introduce memory unsafety if the generator had a self-referential variable and it was moved between two calls to <code>resume</code>. <code>Pin</code> prevents the move, thus removing the unsafety. This is a classic example of wrapping unsafe logic in an API that only exposes a safe interface.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/49913846/155423\">What are the use cases of the newly proposed Pin type?</a></li>\n<li><a href=\"https://stackoverflow.com/q/49860149/155423\">How to use the Pin struct with self-referential structures?</a></li>\n</ul>\n\n<blockquote>\n  <p>Why does the code work when we remove the type for generator variable?</p>\n</blockquote>\n\n<p>Because it's no longer a trait object (<code>Box&lt;dyn Generator&gt;</code>) but just a boxed concrete generator.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/a/30279122/155423\">Lazy sequence generation in Rust</a></li>\n</ul>\n\n<hr>\n\n<p>I'd write this as</p>\n\n<pre><code>#![feature(generators, generator_trait)]\n\nuse std::ops::{Generator, GeneratorState};\n\nfn main() {\n    let mut generator = Box::pin(move || {\n        yield 1;\n        \"foo\"\n    });\n\n    match generator.as_mut().resume() {\n        GeneratorState::Yielded(1) =&gt; println!(\"Yielded\"),\n        _ =&gt; panic!(\"unexpected return from resume\"),\n    }\n    match generator.as_mut().resume() {\n        GeneratorState::Complete(\"foo\") =&gt; println!(\"Completed\"),\n        _ =&gt; panic!(\"unexpected return from resume\"),\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 477, "user_id": 3239194, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68cb18e8d1c60c5d43b2dadc7d98b49d?s=128&d=identicon&r=PG&f=1", "display_name": "A-B", "link": "https://stackoverflow.com/users/3239194/a-b"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 56658445, "answer_count": 1, "score": 1, "last_activity_date": 1560961436, "creation_date": 1560897129, "last_edit_date": 1560901564, "question_id": 56657852, "link": "https://stackoverflow.com/questions/56657852/why-does-a-generator-that-was-working-in-nightly-rust-1-29-give-an-error-in-nigh", "title": "Why does a generator that was working in nightly Rust 1.29 give an error in nightly 1.34.0?", "body": "<p>I am using a Rust generator and it was working fine with nightly 1.29.0:</p>\n\n<pre><code>#![feature(generators, generator_trait)]\n\nuse std::ops::{Generator, GeneratorState};\n\nfn main() {\n    let mut generator: Box&lt;dyn Generator&lt;Yield = u64, Return = &amp;str&gt;&gt; = Box::new(move || {\n        yield 1;\n        return \"foo\";\n    });\n\n    unsafe {\n        match generator.resume() {\n            GeneratorState::Yielded(1) =&gt; {\n                println!(\"Yielded\");\n            }\n            _ =&gt; panic!(\"unexpected return from resume\"),\n        }\n        match generator.resume() {\n            GeneratorState::Complete(\"foo\") =&gt; {\n                println!(\"Completed\");\n            }\n            _ =&gt; panic!(\"unexpected return from resume\"),\n        }\n    }\n}\n</code></pre>\n\n<p>However, nightly version 1.34.0 requires the <code>Generator</code> to be wrapped in <code>Pin</code>, but when I wrap <code>Generator</code> into <code>Pin</code>, the code doesn't work anymore.</p>\n\n<pre><code>#![feature(generators, generator_trait)]\n\nuse std::ops::{Generator, GeneratorState};\nuse std::pin::Pin;\n\nfn main() {\n    let mut generator: Box&lt;dyn Generator&lt;Yield = u64, Return = &amp;str&gt;&gt; = Box::new(move || {\n        yield 1;\n        return \"foo\";\n    });\n\n    match Pin::new(&amp;mut generator).resume() {\n        GeneratorState::Yielded(1) =&gt; {\n            println!(\"Yielded\");\n        }\n        _ =&gt; panic!(\"unexpected return from resume\"),\n    }\n    match Pin::new(&amp;mut generator).resume() {\n        GeneratorState::Complete(\"foo\") =&gt; {\n            println!(\"Completed\");\n        }\n        _ =&gt; panic!(\"unexpected return from resume\"),\n    }\n}\n</code></pre>\n\n<p>And the code gives the following error.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `resume` found for type `std::pin::Pin&lt;&amp;mut std::boxed::Box&lt;dyn std::ops::Generator&lt;Yield = u64, Return = &amp;str&gt;&gt;&gt;` in the current scope\n  --&gt; src/main.rs:12:36\n   |\n12 |     match Pin::new(&amp;mut generator).resume() {\n   |                                    ^^^^^^\n   |\n   = note: the method `resume` exists but the following trait bounds were not satisfied:\n           `std::boxed::Box&lt;dyn std::ops::Generator&lt;Yield = u64, Return = &amp;str&gt;&gt; : std::ops::Generator`\n</code></pre>\n\n<p>When I remove the type of the generator, it works fine:</p>\n\n<pre><code>let mut generator = Box::new(move || {\n        yield 1;\n        return \"foo\"\n});\n</code></pre>\n\n<p>I have a few questions:</p>\n\n<ul>\n<li>Why does wrapping the <code>Generator</code> in <code>Pin</code> give the error in the latest version?</li>\n<li>What's the use of using the <code>Pin</code> for the generator (as it prevents the value of a pointer from being moved), I don't understand the relation between <code>Pin</code> and <code>Generator</code>?</li>\n<li>Why does the code work when we remove the type for <code>generator</code> variable?</li>\n<li>Why is the <code>resume</code> method no longer <code>unsafe</code>?</li>\n</ul>\n"}, {"tags": ["generics", "types", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560887771, "post_id": 56655953, "comment_id": 99882299, "body": "Your code cannot compile, as <code>-&gt; ApplicableFor</code> is invalid."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560888257, "post_id": 56655953, "comment_id": 99882505, "body": "Also you call <code>T::is_applicable_for(from, to)</code> but it only has one argument: <code>is_applicable_for(from: *mut u8)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1560889056, "creation_date": 1560889056, "answer_id": 56656474, "question_id": 56655953, "link": "https://stackoverflow.com/questions/56655953/it-is-possible-to-store-all-types-implementing-a-trait-in-a-list-and-iterate-ove/56656474#56656474", "title": "It is possible to store all types implementing a trait in a list and iterate over that list?", "body": "<p>No, Rust does not directly offer the kind of metaprogramming features you need. Namely, a type is not a concrete thing that exists or can be put into a collection. </p>\n\n<p>Instead, you need code generation.</p>\n\n<p>Starting from a simplified version of <code>ApplicableFor</code>, we can write a very structured version of <code>find_applicable</code>:</p>\n\n<pre><code>trait ApplicableFor {\n    fn is_applicable_for(from: u8) -&gt; bool;\n}\n\nfn find_applicable(from: u8) {\n    if &lt;A&gt;::is_applicable_for(from) {\n        println!(\"Using {}\", stringify!(A));\n        return;\n    }\n\n    if &lt;B&gt;::is_applicable_for(from) {\n        println!(\"Using {}\", stringify!(B));\n        return;\n    }\n\n    if &lt;C&gt;::is_applicable_for(from) {\n        println!(\"Using {}\", stringify!(C));\n        return;\n    }\n\n    panic!(\"Couldn't find any applicable types\");\n}\n</code></pre>\n\n<p>Once we have established the structure, then we can start abstracting it with macros:</p>\n\n<pre><code>fn find_applicable(from: u8) {\n    macro_rules! find_one {\n        ($ty:ty) =&gt; {\n            if &lt;$ty&gt;::is_applicable_for(from) {\n                println!(\"Using {}\", stringify!($ty));\n                return;\n            }\n        }\n    }\n\n    find_one!(A);\n    find_one!(B);\n    find_one!(C);\n\n    panic!(\"Couldn't find any applicable types\");\n}\n</code></pre>\n\n<p>What if we want to repeat this concept of \"do something for this list of types\"? Another macro:</p>\n\n<pre><code>macro_rules! each_type {\n    ($one_type_macro:tt) =&gt; {\n        $one_type_macro!(A);\n        $one_type_macro!(B);\n        $one_type_macro!(C);\n    };\n}\n\nfn find_applicable(from: u8) {\n    macro_rules! find_one {\n        ($ty:ty) =&gt; {\n            if &lt;$ty&gt;::is_applicable_for(from) {\n                println!(\"Using {}\", stringify!($ty));\n                return;\n            }\n        }\n    }\n\n    each_type!(find_one);\n\n    panic!(\"Couldn't find any applicable types\");\n}\n</code></pre>\n\n<p>Too much noise for the implementation of <code>each_type!</code>? Create a macro that creates another macro which will be called with another macro:</p>\n\n<pre><code>macro_rules! gen_each_type {\n    ($($ty:ty),*) =&gt; {\n        macro_rules! each_type {\n            ($one_type_macro:tt) =&gt; {\n                $($one_type_macro!($ty);)*\n            };\n        }\n    };\n}\n\ngen_each_type![A, B, C];\n</code></pre>\n"}], "owner": {"reputation": 5, "user_id": 6190169, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/16bc705007e89a5ab04d8e5a7848c847?s=128&d=identicon&r=PG&f=1", "display_name": "Yaroslaw Bolyukin", "link": "https://stackoverflow.com/users/6190169/yaroslaw-bolyukin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 56656474, "answer_count": 1, "score": 0, "last_activity_date": 1560889056, "creation_date": 1560886701, "last_edit_date": 1560887394, "question_id": 56655953, "link": "https://stackoverflow.com/questions/56655953/it-is-possible-to-store-all-types-implementing-a-trait-in-a-list-and-iterate-ove", "title": "It is possible to store all types implementing a trait in a list and iterate over that list?", "body": "<p>I have a trait implemented for many structs (<code>A</code>, <code>B</code>, <code>C</code>, etc.):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait ApplicableFor: Debug + Default {\n    unsafe fn is_applicable_for(from: *mut u8) -&gt; bool\n    where\n        Self: Sized;\n}\n</code></pre>\n\n<p>I need a method which finds which struct returns true for this method call. I have the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>unsafe fn check_applicable&lt;T: ApplicableFor&gt;(from: *mut u8) -&gt; bool {\n    T::is_applicable_for(from, to)\n}\n\nunsafe fn find_applicable(from: *mut u8) -&gt; ApplicableFor {\n    if check_applicable::&lt;A&gt;(from) {\n        A::default()\n    } else if check_applicable::&lt;B&gt;(from) {\n        B::default()\n    } else if check_applicable::&lt;C&gt;(from) {\n        C::default()\n    } else {\n        panic!(\"Couldn't find appicable\");\n    }\n}\n</code></pre>\n\n<p>In the real code, I have around 20 structs, so I want to store them somewhere and use code like this for readability:</p>\n\n<pre><code>unsafe fn find_applicable(from: *mut u8) -&gt; ApplicableFor {\n    for T in list {\n        if check_applicable::&lt;T&gt;(from) {\n            T::default()\n        }\n    }\n    panic!(\"Couldn't find appicable\");\n}\n</code></pre>\n\n<p>How can I do this or how can I rewrite this better?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560878847, "post_id": 56653725, "comment_id": 99878420, "body": "<i>the ideas of <code>replace_with</code></i> \u2014 what is this <code>replace_with</code> that you are referring to?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560878971, "post_id": 56653725, "comment_id": 99878481, "body": "<code>where     for&lt;&#39;a&gt; &amp;&#39;a mut TStruct: IntoIterator&lt;Item = &amp;&#39;a mut T&gt;,     for&lt;&#39;b&gt; &amp;&#39;b TStruct: IntoIterator&lt;Item = &amp;&#39;b T&gt;,</code> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ae7cc40e0bde3826267a6024e64e45e8\" rel=\"nofollow noreferrer\">playground</a>"}], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 41, "favorite_count": 0, "closed_date": 1560878945, "answer_count": 0, "score": 0, "last_activity_date": 1560878961, "creation_date": 1560876514, "last_edit_date": 1560878815, "question_id": 56653725, "link": "https://stackoverflow.com/questions/56653725/satisfying-lifetimes-for-function-arguments", "closed_reason": "Duplicate", "title": "Satisfying lifetimes for function arguments", "body": "<p>This code takes some of the ideas of <code>replace_with</code> and extends it to structures, allowing a function to be applied to a container in a way that cleans up after itself if there's a panic. Unlike running <code>replace_with</code> on all the elements, one doesn't need a default value for the element types, only the container type. </p>\n\n<p>I can't get the lifetimes right. If I replace <code>TStruct</code> with <code>Vec&lt;T&gt;</code> everything works fine without lifetime annotations, it's only when I try to generalise the function that I get lifetime issues. What lifetimes do I need to put in here to satisfy the borrow checker?</p>\n\n<pre><code>fn inplace_map&lt;T, TStruct: IntoIterator&lt;Item = T&gt; + Default&gt;(\n    f: impl Fn(T) -&gt; T,\n    mut x: TStruct,\n) -&gt; TStruct\nwhere\n    &amp;mut TStruct: IntoIterator&lt;Item = &amp;mut T&gt;,\n    &amp;TStruct: IntoIterator&lt;Item = &amp;T&gt;,\n{\n    let x_ptr: *mut TStruct = &amp;mut x;\n    for item_ref in &amp;mut x {\n        let ptr: *mut T = item_ref;\n        unsafe {\n            let y1: T = std::ptr::read(ptr);\n            let fix_missing_elem = RunOnDrop {\n                f: || {\n                    let y: TStruct = std::ptr::read(x_ptr);\n                    let mut i = 0;\n                    for item_ref in &amp;y {\n                        let current_item_ptr: *const T = item_ref;\n                        if current_item_ptr == ptr {\n                            break;\n                        }\n                        i += 1;\n                    }\n\n                    let mut j = 0;\n                    for elem_ref in y {\n                        if j == i {\n                            std::mem::forget(elem_ref);\n                        }\n                        j += 1;\n                    }\n                    std::ptr::write(x_ptr, &lt;TStruct as Default&gt;::default());\n                },\n            };\n            let result = f(y1);\n            std::mem::forget(fix_missing_elem);\n            std::ptr::write(ptr, result);\n        }\n    }\n    x\n}\n\nstruct RunOnDrop&lt;F: FnMut()&gt; {\n    f: F,\n}\n\nimpl&lt;'a, F: FnMut()&gt; Drop for RunOnDrop&lt;F&gt; {\n    fn drop(&amp;mut self) {\n        (self.f)()\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0637]: `&amp;` without an explicit lifetime name cannot be used here\n --&gt; src/lib.rs:6:5\n  |\n6 |     &amp;mut TStruct: IntoIterator&lt;Item = &amp;mut T&gt;,\n  |     ^ explicit lifetime name needed here\n\nerror[E0637]: `&amp;` without an explicit lifetime name cannot be used here\n --&gt; src/lib.rs:6:39\n  |\n6 |     &amp;mut TStruct: IntoIterator&lt;Item = &amp;mut T&gt;,\n  |                                       ^ explicit lifetime name needed here\n\nerror[E0637]: `&amp;` without an explicit lifetime name cannot be used here\n --&gt; src/lib.rs:7:5\n  |\n7 |     &amp;TStruct: IntoIterator&lt;Item = &amp;T&gt;,\n  |     ^ explicit lifetime name needed here\n\nerror[E0637]: `&amp;` without an explicit lifetime name cannot be used here\n --&gt; src/lib.rs:7:35\n  |\n7 |     &amp;TStruct: IntoIterator&lt;Item = &amp;T&gt;,\n  |                                   ^ explicit lifetime name needed here\n\nerror[E0310]: the parameter type `T` may not live long enough\n  --&gt; src/lib.rs:1:1\n   |\n1  |   fn inplace_map&lt;T, TStruct: IntoIterator&lt;Item = T&gt; + Default&gt;(\n   |   ^              - help: consider adding an explicit lifetime bound `T: 'static`...\n   |  _|\n   | |\n2  | |     f: impl Fn(T) -&gt; T,\n3  | |     mut x: TStruct,\n4  | | ) -&gt; TStruct\n...  |\n41 | |     x\n42 | | }\n   | |_^\n   |\nnote: ...so that the reference type `&amp;'static mut T` does not outlive the data it points at\n  --&gt; src/lib.rs:1:1\n   |\n1  | / fn inplace_map&lt;T, TStruct: IntoIterator&lt;Item = T&gt; + Default&gt;(\n2  | |     f: impl Fn(T) -&gt; T,\n3  | |     mut x: TStruct,\n4  | | ) -&gt; TStruct\n...  |\n41 | |     x\n42 | | }\n   | |_^\n\nerror[E0310]: the parameter type `TStruct` may not live long enough\n  --&gt; src/lib.rs:1:1\n   |\n1  |   fn inplace_map&lt;T, TStruct: IntoIterator&lt;Item = T&gt; + Default&gt;(\n   |   ^                 -------- help: consider adding an explicit lifetime bound `TStruct: 'static`...\n   |  _|\n   | |\n2  | |     f: impl Fn(T) -&gt; T,\n3  | |     mut x: TStruct,\n4  | | ) -&gt; TStruct\n...  |\n41 | |     x\n42 | | }\n   | |_^\n   |\nnote: ...so that the reference type `&amp;'static mut TStruct` does not outlive the data it points at\n  --&gt; src/lib.rs:1:1\n   |\n1  | / fn inplace_map&lt;T, TStruct: IntoIterator&lt;Item = T&gt; + Default&gt;(\n2  | |     f: impl Fn(T) -&gt; T,\n3  | |     mut x: TStruct,\n4  | | ) -&gt; TStruct\n...  |\n41 | |     x\n42 | | }\n   | |_^\n</code></pre>\n"}, {"tags": ["async-await", "rust", "future", "traits"], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 7448702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/054aaf4bc3ed29dc13fa6434123a3d96?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/7448702/chris"}, "edited": false, "score": 0, "creation_date": 1560916511, "post_id": 56659484, "comment_id": 99889034, "body": "Oh wow, that worked. Thank you so much! I didn&#39;t realize calling <code>.iter()</code> borrows."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1560959927, "last_edit_date": 1560959927, "creation_date": 1560913497, "answer_id": 56659484, "question_id": 56651052, "link": "https://stackoverflow.com/questions/56651052/how-can-i-join-nested-boxfutures-via-traits-and-their-associated-lifetimes/56659484#56659484", "title": "How can I join nested BoxFutures via traits and their associated lifetimes?", "body": "<p>Here is the working version:</p>\n\n<pre><code>fn adopt(\n    adopter: &amp;Self::AdoptingPerson,\n    id: &amp;'static Self::Id,\n) -&gt; BoxFuture&lt;'static, Result&lt;Self, AdoptionError&gt;&gt; {\n    Box::pin(\n        join_all(Self::adoption_policy(adopter, id)).then(move |policy_results| {\n            let has_policy_failure = policy_results.iter().any(|x| x.is_err());\n            if !has_policy_failure {\n                Self::do_adoption(id)\n            } else {\n                Box::pin(future::ready(Err(AdoptionError {})))\n            }\n        }),\n    )\n}\n</code></pre>\n\n<p>Changes:</p>\n\n<ol>\n<li><code>join_all</code> needs to take ownership of the futures, not references to them: <code>join_all(Self::adoption_policy(adopter, id))</code>.</li>\n<li><code>futures::future::FutureExt</code> must be imported to gain access to <code>FutureExt::then</code>.</li>\n<li><code>any</code> is a method on <code>Iterator</code>, not <code>Vec</code>: <code>policy_results.iter().any(/* ... */)</code></li>\n<li><code>id</code> needs to be <code>'static</code> due to your bounds: <code>id: &amp;'static Self::Id</code></li>\n<li><code>id</code> needs to be moved into the closure to prevent a borrow: <code>move |policy_results| { /* ... */ }</code>.</li>\n</ol>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/34733811/155423\">What is the difference between iter and into_iter?</a></li>\n<li><a href=\"https://stackoverflow.com/q/25273816/155423\">Why do I need to import a trait to use the methods it defines for a type?</a></li>\n</ul>\n"}], "owner": {"reputation": 75, "user_id": 7448702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/054aaf4bc3ed29dc13fa6434123a3d96?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/7448702/chris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 244, "favorite_count": 1, "accepted_answer_id": 56659484, "answer_count": 1, "score": 0, "last_activity_date": 1560959927, "creation_date": 1560866909, "last_edit_date": 1560912995, "question_id": 56651052, "link": "https://stackoverflow.com/questions/56651052/how-can-i-join-nested-boxfutures-via-traits-and-their-associated-lifetimes", "title": "How can I join nested BoxFutures via traits and their associated lifetimes?", "body": "<p>I have an <code>AdoptablePet</code> trait that allows you to asynchronously adopt a pet via <code>fn do_adoption(id: &amp;Self::Id) -&gt; BoxFuture&lt;'static, Result&lt;Self, Self::Error&gt;&gt;;</code>.</p>\n\n<p>I have a <code>Dog</code> trait that is adoptable (<code>pub trait Dog: AdoptablePet</code>) and takes an associated <code>AdoptingPerson</code> and an <code>adoption_policy</code> before allowing you to actually adopt the pet. The <code>adoption_policy</code> is just a function that returns an array of boxed futures returning <code>Result</code>s.</p>\n\n<p>When I go to create a <code>Pitbull</code>, which implements both <code>Dog</code> and an <code>AdoptablePet</code>, everything works, but as soon as I try to make a default implementation of <code>adoption_policy</code> (as it will be the same for all <code>Pitbull</code>s) I can't get the references right between all the joining of the boxed futures.</p>\n\n<p>When I try to <code>join_all</code> the <code>adoption_policy</code> <code>Vec</code>, it contains references to the boxed futures rather than the boxed futures themselves. When I try to map and dereference them, I get a borrow checker error (see <code>[EXAMPLE B]</code> in the code):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `&amp;std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;(), AdoptionError&gt;&gt; + std::marker::Send&gt;&gt;: core::future::future::Future` is not satisfied\n  --&gt; src/lib.rs:70:13\n   |\n70 |             join_all(Self::adoption_policy(adopter, id).iter()).then(|policy_results| {\n   |             ^^^^^^^^ the trait `core::future::future::Future` is not implemented for `&amp;std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;(), AdoptionError&gt;&gt; + std::marker::Send&gt;&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;std::pin::Pin&lt;P&gt; as core::future::future::Future&gt;\n   = note: required by `futures_util::future::join_all::join_all`\n\nerror[E0599]: no method named `then` found for type `futures_util::future::join_all::JoinAll&lt;&amp;std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;(), AdoptionError&gt;&gt; + std::marker::Send&gt;&gt;&gt;` in the current scope\n  --&gt; src/lib.rs:70:65\n   |\n70 |             join_all(Self::adoption_policy(adopter, id).iter()).then(|policy_results| {\n   |                                                                 ^^^^\n\nerror[E0277]: the trait bound `&amp;std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;(), AdoptionError&gt;&gt; + std::marker::Send&gt;&gt;: core::future::future::Future` is not satisfied\n  --&gt; src/lib.rs:70:13\n   |\n70 |             join_all(Self::adoption_policy(adopter, id).iter()).then(|policy_results| {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `core::future::future::Future` is not implemented for `&amp;std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;(), AdoptionError&gt;&gt; + std::marker::Send&gt;&gt;`\n   |\n   = help: the following implementations were found:\n             &lt;std::pin::Pin&lt;P&gt; as core::future::future::Future&gt;\n   = note: required by `futures_util::future::join_all::JoinAll`\n</code></pre>\n\n<p>I'm a bit lost. If I don't <code>join_all</code> in <code>adopt</code> (and merely return <code>Self::do_adoption(id)</code> everything works (see <code>[EXAMPLE A]</code> in the code). What's going on?</p>\n\n<p>The code (also <a href=\"https://github.com/LegNeato/boxed_futures_test/tree/df3c9a485e117b6535a713b2dc80b56a8ede6399\" rel=\"nofollow noreferrer\">available in a git repo</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(async_await)]\nuse futures::future::{self, join_all, BoxFuture};\n\n#[derive(Debug)]\npub struct AdoptionError;\n\npub trait AdoptablePet\nwhere\n    Self: Sized,\n{\n    /// The id of the pet to adopt.\n    type Id;\n\n    /// Adopt the pet.\n    fn do_adoption(id: &amp;Self::Id) -&gt; BoxFuture&lt;'static, Result&lt;Self, AdoptionError&gt;&gt;;\n}\n\npub trait Dog: AdoptablePet\nwhere\n    // XXX: Are these all needed?\n    Self: Sized + Send,\n    &lt;Self as AdoptablePet&gt;::Id: Sync,\n    Self: 'static,\n    Self::AdoptingPerson: Sync,\n{\n    /// The Person adopting a dog.\n    type AdoptingPerson;\n\n    /// The policy to check when a person is adopting a particular dog.\n    fn adoption_policy(\n        adopter: &amp;Self::AdoptingPerson,\n        id: &amp;Self::Id,\n    ) -&gt; Vec&lt;BoxFuture&lt;'static, Result&lt;(), AdoptionError&gt;&gt;&gt;;\n\n    /// Policy-aware adoption.\n    fn adopt(\n        adopter: &amp;Self::AdoptingPerson,\n        id: &amp;Self::Id,\n    ) -&gt; BoxFuture&lt;'static, Result&lt;Self, AdoptionError&gt;&gt; {\n        // [EXAMPLE A]\n        // Doing the following works...\n        /*\n        if true {\n            Self::do_adoption(id)\n        } else {\n            Box::pin(future::ready(Err(AdoptionError{})))\n        }\n        */\n\n        /* [EXAMPLE B]\n           But this is what I want to do. This is the error:\n\n            --&gt; src/lib.rs:71:13\n             |\n          71 | /             join_all(\n          72 | |\n          73 | |\n          74 | |                 --&gt; src/lib.rs:65:13\n          ...  |\n          86 | |                 Self::adoption_policy(adopter, id).iter(),\n          87 | |             )\n             | |_____________^ the trait `core::future::future::Future` is not implemented for `&amp;std::pin::Pin&lt;std::boxed::Box&lt;dyn core::future::future::Future&lt;Output = std::result::Result&lt;(), AdoptionError&gt;&gt; + std::marker::Send&gt;&gt;`\n             |\n             = help: the following implementations were found:\n                       &lt;std::pin::Pin&lt;P&gt; as core::future::future::Future&gt;\n             = note: required by `futures_util::future::join_all::JoinAll`\n        */\n        Box::pin(\n            // Check all the adoption rules in the policy.\n            join_all(Self::adoption_policy(adopter, id).iter()).then(|policy_results| {\n                // Depending on the result, do the (async/long-running)\n                // adoption or return an error.\n                let has_policy_failure = policy_results.any(|x| x.is_err());\n                if !has_policy_failure {\n                    Self::do_adoption(id)\n                } else {\n                    Box::pin(future::ready(Err(AdoptionError {})))\n                }\n            }),\n        )\n    }\n}\n\n/// Implementation.\n\n#[derive(Debug, Clone, PartialEq)]\npub struct DogId(pub String);\n\npub struct Pitbull {\n    pub id: DogId,\n}\n\nimpl AdoptablePet for Pitbull {\n    type Id = DogId;\n\n    fn do_adoption(id: &amp;Self::Id) -&gt; BoxFuture&lt;'static, Result&lt;Self, AdoptionError&gt;&gt; {\n        Box::pin(future::ready(Ok(Pitbull { id: id.clone() })))\n    }\n}\n\nimpl Dog for Pitbull {\n    type AdoptingPerson = Person;\n    fn adoption_policy(\n        _adopter: &amp;Self::AdoptingPerson,\n        _id: &amp;Self::Id,\n    ) -&gt; Vec&lt;BoxFuture&lt;'static, Result&lt;(), AdoptionError&gt;&gt;&gt; {\n        vec![\n            // 1. Check if they have had their shots.\n            // 2. Check if the adopter has children and if the breed is good with children.\n            // etc.\n        ]\n    }\n}\n\npub struct Person {\n    name: String,\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    #[test]\n    fn it_works() {\n        futures::executor::block_on(async {\n            let id = DogId(\"fluffy123\".to_string());\n            let adopter = Person {\n                name: \"Fred\".to_string(),\n            };\n            let _ = Pitbull::adopt(&amp;adopter, &amp;id).await.unwrap();\n        });\n    }\n}\n</code></pre>\n\n<p>I'm using futures-preview version 0.3.0-alpha.16.</p>\n"}, {"tags": ["rust", "rust-rocket"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1560957311, "creation_date": 1560957311, "answer_id": 56671019, "question_id": 56636643, "link": "https://stackoverflow.com/questions/56636643/how-to-return-a-state-value-from-a-rocket-endpoint/56671019#56671019", "title": "How to return a State value from a Rocket endpoint?", "body": "<p>Your endpoint does not own the state and thus it cannot return an owned <code>Vec&lt;Post&gt;</code>. Conceptually, this makes sense because if you <em>did</em> take ownership of it, then what value would be present the next time the endpoint is called?</p>\n\n<p>The simplest thing you can do is clone the data:</p>\n\n<pre><code>#[get(\"/\")]\npub fn index(cache: State&lt;Cache&gt;) -&gt; IndexResponder {\n    IndexResponder::Found(Json(cache.posts.clone()))\n}\n</code></pre>\n\n<p>This will require that you implement <code>Clone</code> for <code>Post</code>, or perhaps change your state to hold something like an <code>Arc</code>.</p>\n\n<p>A slightly more performant solution is to return a slice that refers to the state. This requires no cloning, but does require using the <a href=\"https://docs.rs/rocket/0.4.1/rocket/struct.State.html#method.inner\" rel=\"nofollow noreferrer\"><code>State::inner</code></a> method:</p>\n\n<pre><code>#[derive(Responder)]\npub enum IndexResponder&lt;'a&gt; {\n    #[response(status = 200)]\n    Found(Json&lt;&amp;'a [Post]&gt;),\n    #[response(status = 404)]\n    NotFound(String),\n}\n\n#[get(\"/\")]\npub fn index&lt;'a&gt;(cache: State&lt;'a, Cache&gt;) -&gt; IndexResponder&lt;'a&gt; {\n    IndexResponder::Found(Json(&amp;cache.inner().posts))\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28258548/155423\">Cannot move out of borrowed content when trying to transfer ownership</a></li>\n<li><a href=\"https://stackoverflow.com/q/40984932/155423\">What happens when an Arc is cloned?</a></li>\n</ul>\n"}], "owner": {"reputation": 1095, "user_id": 3042398, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/fda62d965b68120c936a771aeddee7f1?s=128&d=identicon&r=PG", "display_name": "Varkal", "link": "https://stackoverflow.com/users/3042398/varkal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 513, "favorite_count": 0, "accepted_answer_id": 56671019, "answer_count": 1, "score": 1, "last_activity_date": 1560957311, "creation_date": 1560794665, "last_edit_date": 1560956618, "question_id": 56636643, "link": "https://stackoverflow.com/questions/56636643/how-to-return-a-state-value-from-a-rocket-endpoint", "title": "How to return a State value from a Rocket endpoint?", "body": "<p>I'm storing data from an external service in a local cache and I want to create an endpoint to return data currently in the cache.</p>\n\n<pre><code>#![feature(proc_macro_hygiene, decl_macro)]\n\n#[macro_use]\nextern crate rocket;\n\nuse rocket::{Route, State};\nuse rocket_contrib::json::Json;\nuse serde::{Deserialize, Serialize};\n\n#[derive(Serialize, Deserialize)]\npub struct Post {\n    pub title: String,\n    pub body: String,\n}\n\nimpl Post {\n    pub fn new(title: String, body: String) -&gt; Post {\n        Post { title, body }\n    }\n}\n\npub struct Cache {\n    pub posts: Vec&lt;Post&gt;,\n}\n\nimpl Cache {\n    pub fn new() -&gt; Cache {\n        let mut posts = vec![\n            Post::new(String::from(\"Article1\"), String::from(\"Blah\")),\n            Post::new(String::from(\"Article2\"), String::from(\"Blah\")),\n            Post::new(String::from(\"Article3\"), String::from(\"Blah\")),\n            Post::new(String::from(\"Article4\"), String::from(\"Blah\")),\n            Post::new(String::from(\"Article5\"), String::from(\"Blah\")),\n        ];\n\n        Cache { posts }\n    }\n}\n\n#[derive(Responder)]\npub enum IndexResponder {\n    #[response(status = 200)]\n    Found(Json&lt;Vec&lt;Post&gt;&gt;),\n    #[response(status = 404)]\n    NotFound(String),\n}\n\n#[get(\"/\")]\npub fn index(cache: State&lt;Cache&gt;) -&gt; IndexResponder {\n    return IndexResponder::Found(Json(cache.posts));\n}\n\nfn main() {\n    rocket::ignite()\n        .mount(\"/\", routes![index])\n        .manage(Cache::new())\n        .launch();\n}\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of dereference of `rocket::State&lt;'_, Cache&gt;`\n  --&gt; src/main.rs:50:39\n   |\n50 |     return IndexResponder::Found(Json(cache.posts));\n   |                                       ^^^^^^^^^^^ move occurs because value has type `std::vec::Vec&lt;Post&gt;`, which does not implement the `Copy` trait\n</code></pre>\n\n<p>(<a href=\"https://pastebin.com/tMAm7Y22\" rel=\"nofollow noreferrer\"><code>cargo build --verbose</code> output</a>)</p>\n\n<p>My Cargo.toml file: </p>\n\n<pre><code>[package]\nname = \"debug-project\"\nversion = \"0.1.0\"\nauthors = [\"Varkal &lt;mail@example.com&gt;\"]\nedition = \"2018\"\n\n[dependencies]\nrocket = \"0.4.0\"\nrocket_contrib = \"0.4.0\"\nserde = { version = \"1.0.90\", features = [\"derive\"] }\nserde_json = \"1.0.39\"\n</code></pre>\n\n<p><a href=\"https://github.com/Varkal/debug-project\" rel=\"nofollow noreferrer\">A very simple repository to reproduce the error</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1560794013, "post_id": 56636442, "comment_id": 99844110, "body": "The problem seems to lie in the associated generic type, if i remove it (inserting <code>String</code> as return type) it starts to work. <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7618aa9f84b952480f3164a966c2f4fa\" rel=\"nofollow noreferrer\">playground</a>. But i it to be generic for my application logic."}, {"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1560802819, "post_id": 56636442, "comment_id": 99847683, "body": "Should i update the title &amp; description to better reflect the issue (not storing the fn is the problem here, but the <code>IntoState</code> trait/&quot;missing&quot; generic type) ?"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 1, "creation_date": 1560804599, "post_id": 56636442, "comment_id": 99848390, "body": "I would update it in a way that it is not about the static lifetime, but it is still reflecting the compiler&#39;s error message (because people will search for that misleading stuff)"}], "answers": [{"comments": [{"owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1560804609, "post_id": 56637140, "comment_id": 99848394, "body": "hmm, but in my case i only need <code>IntoState::State</code> to be <code>&#39;static</code>, i don&#39;t need the actual type. In my actual code im accessing state only through the &quot;IntoState&quot; trait (which obviously knows the associated type), never directly. But i guess it&#39;s still not enough info for the compiler?!"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "edited": false, "score": 0, "creation_date": 1560805562, "post_id": 56637140, "comment_id": 99848679, "body": "I updated my answer with an alternative <code>map</code> implementation which does not require you to define the associated type."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1560805610, "post_id": 56637140, "comment_id": 99848696, "body": "There is no reason why the compiler should need the exact type. All it needs to know is that <code>State</code> has static lifetime, and this is already known from the trait definition. This looks like a compiler shortcoming to me."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1560805654, "post_id": 56637140, "comment_id": 99848709, "body": "@SvenMarnach it sure does look like one!"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1560805703, "post_id": 56637140, "comment_id": 99848729, "body": "The version in the update works in this example, but sometimes you actually want to use an existential type instead. You can use a hack like <code>impl IntoState&lt;State = impl Any + &#39;static&gt;</code> or similar, but this seems wrong as well."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1560806033, "post_id": 56637140, "comment_id": 99848829, "body": "@SvenMarnach can you provide an example where only the former version is acceptable and the latter (updated) one is not?"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1560806413, "post_id": 56637140, "comment_id": 99848943, "body": "@PeterVaro If you make <code>T</code> a type parameter, it can be freely chosen by the <i>caller</i> of the <code>map()</code> function. Sometimes you want the return type to be chosen by the function itself, without explicitly naming it, which is the whole point of <code>impl Trait</code> in return type position. And example would be <code>fn map(_: i32) -&gt; impl IntoState { &quot;abc&quot; }</code>, but you don&#39;t want to guarantee the actual return type in the interface."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 3, "creation_date": 1560806521, "post_id": 56637140, "comment_id": 99848978, "body": "I believe I found the right GitHub issue for this problem: <a href=\"https://github.com/rust-lang/rust/issues/42940\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/42940</a>"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1560806897, "post_id": 56637140, "comment_id": 99849091, "body": "@SvenMarnach fair enough, that makes perfect sense.  Thanks for the GH ref!"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1560849910, "post_id": 56637140, "comment_id": 99861596, "body": "@SvenMarnach This is not a bug. Returning a <code>T: IntoState</code> (universally quantified) is completely different from returning an <code>impl IntoState</code> (existentially quantified). In the first case the caller determines <code>T</code> and therefore the associated type is known to any caller. In the second case, the caller does not know which implementation of the trait it is going to get and therefore needs to know the associated types in order to do anything with it."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1560889355, "post_id": 56637140, "comment_id": 99882949, "body": "@PeterHall I&#39;m not completely sure I understand your comment. It&#39;s completely fine to return <code>impl IntoState</code> without specifying the associated type. The caller will not be able to make any assumptions about the associated type except for the bounds of the associated type in the trait definition, but in principle it is allowed to omit the associated type. In this specific case, however, the returned type will be parametrized by the lifetime of the <code>&amp;str</code> argument to <code>map()</code>, so the associated type will also contain that lifetime in spite of being declared <code>&#39;static</code> in the trait definition."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 2, "creation_date": 1560889541, "post_id": 56637140, "comment_id": 99883016, "body": "I do consider this a shortcoming of the compiler (I won&#39;t get into a discussion whether it should be called a &quot;bug&quot;). The fact that this lifetime is captured in the <i>associated type</i> of the existential return type is rather unexpected. I can understand why it is implemented in the compiler in this way, but from the viewpoint of a software developer writing Rust code, this behaviour does not make sense."}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 5, "last_activity_date": 1582060122, "last_edit_date": 1582060122, "creation_date": 1560797061, "answer_id": 56637140, "question_id": 56636442, "link": "https://stackoverflow.com/questions/56636442/impl-trait-with-generic-associated-type-in-return-position-causes-lifetime-error/56637140#56637140", "title": "Impl trait with generic associated type in return position causes lifetime error", "body": "<p>As far as I can tell, the compiler's error message is misleading, what it actually requires is an explicitly defined associated type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn map(i: &amp;str) -&gt; impl '_ + IntoState&lt;State = String&gt; {\n    i\n}\n</code></pre>\n\n<p>The excellent answer given to the quesion: <a href=\"https://stackoverflow.com/a/52831644/2188562\">Why does the compiler not infer the concrete type of an associated type of an impl trait return value?</a> provides enough information on why this is actually needed.</p>\n\n<p>See also <a href=\"https://github.com/rust-lang/rust/issues/42940\" rel=\"nofollow noreferrer\">Rust issue #42940 - impl-trait return type is bounded by all input type parameters, even when unnecessary</a></p>\n\n<p>You can use a generic type parameter instead of returning an <code>impl</code> in which case you don't have to specify the associated type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn map&lt;T: IntoState&gt;(i: T) -&gt; T {\n    i\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1560891029, "creation_date": 1560891029, "answer_id": 56656853, "question_id": 56636442, "link": "https://stackoverflow.com/questions/56636442/impl-trait-with-generic-associated-type-in-return-position-causes-lifetime-error/56656853#56656853", "title": "Impl trait with generic associated type in return position causes lifetime error", "body": "<p>Apparently there is still some confusion about what exactly is going on here, so I'll try to destil my comments into a short answer.</p>\n\n<p>The problem here is the prototype of the function <code>map()</code>:</p>\n\n<pre><code>fn map(i: &amp;str) -&gt; impl '_ + IntoState\n</code></pre>\n\n<p>This specifies that the return type of <code>map()</code> is <em>some</em> type implementing <code>IntoState</code>, with an unspecified associated type <code>State</code>. The return type has a lifetime parameter with the lifetime of the argument <code>i</code>; let's call that lifetime <code>'a</code>, and the full return type <code>T&lt;'a&gt;</code>. The associated type <code>State</code> of this return type now is <code>&lt;T&lt;'a&gt; as IntoState&gt;::State</code>, which is parametrized by <code>'a</code>. The compiler is currently not able to eliminate this lifetime parameter from the assoicated type, in spite of the <code>'static</code> declaration in the trait definition. By explicitly specifying the associated type as <code>String</code>, the compiler will simply use the explicitly specified type <code>String</code> instead of <code>&lt;T&lt;'a&gt; as IntoState&gt;::State</code>, so the lifetime parameter is gone, and we don't get an error anymore.</p>\n\n<p>This compiler shortcoming is discussed in <a href=\"https://github.com/rust-lang/rust/issues/42940\" rel=\"nofollow noreferrer\">this Github issue</a>.</p>\n"}], "owner": {"reputation": 555, "user_id": 5572146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c799e0c44a11d16cc175a717d5dca855?s=128&d=identicon&r=PG&f=1", "display_name": "chpio", "link": "https://stackoverflow.com/users/5572146/chpio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 851, "favorite_count": 2, "accepted_answer_id": 56637140, "answer_count": 2, "score": 7, "last_activity_date": 1609931124, "creation_date": 1560793740, "last_edit_date": 1609931124, "question_id": 56636442, "link": "https://stackoverflow.com/questions/56636442/impl-trait-with-generic-associated-type-in-return-position-causes-lifetime-error", "title": "Impl trait with generic associated type in return position causes lifetime error", "body": "<p>I need to store a <code>fn(I) -&gt; O</code> (where <code>I</code> &amp; <code>O</code> can be references) in a <code>'static</code> struct. <code>O</code> needs to be a trait with an <code>'static</code> generic associated type, that associated type is also stored in the struct. Neither <code>I</code> nor <code>O</code> itself get stored inside of the struct, so their lifetime shouldn't matter. But the compiler is still complaining about <code>I</code> not living long enough.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait IntoState {\n    type State: 'static;\n\n    fn into_state(self) -&gt; Self::State;\n}\n\nimpl IntoState for &amp;str {\n    type State = String;\n\n    fn into_state(self) -&gt; Self::State {\n        self.to_string()\n    }\n}\n\nstruct Container&lt;F, S&gt; {\n    func: F,\n    state: S,\n}\n\nimpl&lt;I, O&gt; Container&lt;fn(I) -&gt; O, O::State&gt;\nwhere\n    O: IntoState,\n{\n    fn new(input: I, func: fn(I) -&gt; O) -&gt; Self {\n        // I &amp; O lives only in the next line of code. O gets converted into\n        // a `'static` (`String`), that is stored in `Container`.\n        let state = func(input).into_state();\n        Container { func, state }\n    }\n}\n\nfn map(i: &amp;str) -&gt; impl '_ + IntoState {\n    i\n}\n\nfn main() {\n    let _ = {\n        // create a temporary value\n        let s = &quot;foo&quot;.to_string();\n\n        // the temporary actually only needs to live in `new`. It is\n        // never stored in `Container`.\n        Container::new(s.as_str(), map)\n        // ERR:        ^ borrowed value does not live long enough\n    };\n    // ERR: `s` dropped here while still borrowed\n}\n</code></pre>\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=dfdcc654ba061dd660f6eb466a34b086\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": ["rust", "internationalization"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560880206, "post_id": 56636127, "comment_id": 99879008, "body": "You can use crates like <a href=\"https://crates.io/crates/syn\" rel=\"nofollow noreferrer\">syn</a> to parse Rust code."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560880376, "post_id": 56636127, "comment_id": 99879082, "body": "Your question ultimately seems misguided. How would such a tool differentiate between string literals that should be translated and those that should not? Pretending that internationalizing an application is as easy as translating text does a disservice to an entire profession (and many languages!). As an &quot;Easy&quot; example, <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Localization/Localization_and_Plurals\" rel=\"nofollow noreferrer\">languages have different concepts of pluralization</a>."}, {"owner": {"reputation": 1034, "user_id": 2089648, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8b29d87d89de9c1abac217464e57b191?s=128&d=identicon&r=PG", "display_name": "user2089648", "link": "https://stackoverflow.com/users/2089648/user2089648"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560882257, "post_id": 56636127, "comment_id": 99879892, "body": "I will look at syn, thanks for that. Regarding issues like pluralization - they are independent of my question. It soley is on how to extract translateable strings out of the source code such that none are missing. To enable differentation to string literals you can define a custom type (e.g. &quot;TranslateableString&quot;) that encapsulates a string. Usage of this type then can be found by the extractor. The actual translation still needs to be done by methods that can handle things like pluralization. Again, this is just so no strings are accidentally forgotten during translation."}], "owner": {"reputation": 1034, "user_id": 2089648, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8b29d87d89de9c1abac217464e57b191?s=128&d=identicon&r=PG", "display_name": "user2089648", "link": "https://stackoverflow.com/users/2089648/user2089648"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1560880160, "creation_date": 1560792158, "last_edit_date": 1560880160, "question_id": 56636127, "link": "https://stackoverflow.com/questions/56636127/is-there-a-way-to-programmatically-extract-all-translatable-text-from-source-cod", "title": "Is there a way to programmatically extract all translatable text from source code?", "body": "<p>I am looking for how to translate text in Rust source code. I have found the gettext-crate, but is there a way to programmatically extract all translatable texts from source code?</p>\n\n<p>I want to do something like this:</p>\n\n<pre><code>rust_i18n extract -outdir=out.json -format=json MySampleProject\n</code></pre>\n\n<p>Which would then give me a list of all translatable texts that were used in the project and store them in out.json. (Similar to <a href=\"http://nicksnyder.github.io/go-i18n/\" rel=\"nofollow noreferrer\">goi18n</a> for golang.)</p>\n\n<p>Alternatively, is there an easy way to get the AST for a project, so I could wrap all texts in a custom struct and extract usage of that struct from the source files associated with a project? Is there a better solution?</p>\n"}, {"tags": ["rust", "rust-tokio", "hyper", "actix-web"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1560786221, "post_id": 56634370, "comment_id": 99840932, "body": "Please provide a better <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>: One should preferably copy the error message from the compiler <i>verbatim</i>. Add the necessary <code>use</code> statements for the program to compile. Knowing the specific versions of all dependencies, or at least actix-web and reqwest may be relevant. Whatever is in <code>[...]</code> is either important or should be removed. The <a href=\"https://stackoverflow.com/tags/rust/info\">Rust tag page</a> provides a few more tips."}, {"owner": {"reputation": 2118, "user_id": 6360083, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b1f8b36d7776a9f46b9206cdfa036c38?s=128&d=identicon&r=PG&f=1", "display_name": "Techradar", "link": "https://stackoverflow.com/users/6360083/techradar"}, "reply_to_user": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 1, "creation_date": 1561014950, "post_id": 56634370, "comment_id": 99927566, "body": "@SirE_net4theDownvoter please check again. The example has been added now and all additional details which are relevant. Unfortunately rust playground does not seem to offer <code>cargo.toml</code> crates otherwise I would have added that as well but instead added a link to a github repo."}], "answers": [{"tags": [], "owner": {"reputation": 2118, "user_id": 6360083, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b1f8b36d7776a9f46b9206cdfa036c38?s=128&d=identicon&r=PG&f=1", "display_name": "Techradar", "link": "https://stackoverflow.com/users/6360083/techradar"}, "is_accepted": true, "score": 2, "last_activity_date": 1561017551, "creation_date": 1561017551, "answer_id": 56681536, "question_id": 56634370, "link": "https://stackoverflow.com/questions/56634370/http-request-inside-actix-web-handler-multiple-executors-at-once-entererror/56681536#56681536", "title": "HTTP request inside actix-web handler -&gt; Multiple executors at once: EnterError", "body": "<p>Got it working by using the <code>tokio</code> function <code>spawn</code> to add the future to the running executor of tokio.</p>\n\n<p>So instead of:</p>\n\n<pre><code>System::new(\"test\").block_on(lazy(|| {\n</code></pre>\n\n<p>use:</p>\n\n<pre><code>spawn(lazy(move || {\n</code></pre>\n\n<p>and of course add <code>tokio</code> as dependency in <code>cargo.toml</code> and include the crate.</p>\n"}, {"tags": [], "owner": {"reputation": 1901, "user_id": 15361, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/41ef427652d3f8ef79369842e0472df1?s=128&d=identicon&r=PG", "display_name": "fstephany", "link": "https://stackoverflow.com/users/15361/fstephany"}, "is_accepted": false, "score": 2, "last_activity_date": 1561452863, "last_edit_date": 1561452863, "creation_date": 1561403940, "answer_id": 56742689, "question_id": 56634370, "link": "https://stackoverflow.com/questions/56634370/http-request-inside-actix-web-handler-multiple-executors-at-once-entererror/56742689#56742689", "title": "HTTP request inside actix-web handler -&gt; Multiple executors at once: EnterError", "body": "<p>This is because actix-web uses Tokio since version 1.0.0. As Reqwest does it as well, you end up with two runtimes.</p>\n\n<p>One of the best way to handle this is to switch to the async version of both your handler and the reqwest request. The process can be a bit involved but is worth it in the long run. <a href=\"https://zupzup.org/asyncify-rust-webapp/\" rel=\"nofollow noreferrer\">This article</a> does a good job at explaining the transition.</p>\n"}], "owner": {"reputation": 2118, "user_id": 6360083, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b1f8b36d7776a9f46b9206cdfa036c38?s=128&d=identicon&r=PG&f=1", "display_name": "Techradar", "link": "https://stackoverflow.com/users/6360083/techradar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1895, "favorite_count": 0, "accepted_answer_id": 56681536, "answer_count": 2, "score": 5, "last_activity_date": 1567255690, "creation_date": 1560785059, "last_edit_date": 1567255690, "question_id": 56634370, "link": "https://stackoverflow.com/questions/56634370/http-request-inside-actix-web-handler-multiple-executors-at-once-entererror", "title": "HTTP request inside actix-web handler -&gt; Multiple executors at once: EnterError", "body": "<p>When creating a hyper post request inside an <code>actix-web</code> resolver, the following error is thrown - how can one send one a http request by spawning the request into the existing executor?</p>\n\n<pre><code>thread 'actix-rt:worker:1' panicked at 'Multiple executors at once: EnterError { reason: \"attempted to run an executor while another executor is already running\" }', src/libcore/result.rs:999:5\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nPanic in Arbiter thread, shutting down system.\n</code></pre>\n\n<p>main.rs</p>\n\n<pre><code>extern crate actix_web;\nextern crate serde_json;\nextern crate actix_rt;\nextern crate hyper;\n\nuse serde_json::{Value, json};\nuse hyper::{Client, Uri, Body, Request};\nuse actix_web::{middleware, web, App, HttpResponse, HttpServer};\nuse actix_rt::System;\nuse actix_web::client;\nuse futures::future::{Future, lazy};\n\nfn main() {\n    println!(\"Start server...\");\n    listen();\n}\n\npub fn listen() -&gt; std::io::Result&lt;()&gt; {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::Logger::default())\n            .data(web::JsonConfig::default().limit(4096))\n            .service(web::resource(\"/push\").route(web::post().to(index)))\n            .service(web::resource(\"/test\").route(web::post().to(test)))\n    })\n    .bind(\"127.0.0.1:8080\")?\n    .run()\n}\n\n\nfn index(item: web::Json&lt;Value&gt;) -&gt; HttpResponse {\n    println!(\"model: {:?}\", &amp;item);\n    send(json!({\n        \"hello\": \"world\"\n    }));\n\n    HttpResponse::Ok().json(item.0) // &lt;- send response\n}\n\nfn test(item: web::Json&lt;Value&gt;) -&gt; HttpResponse {\n    println!(\"recevied test call!\");\n    println!(\"{:?}\", &amp;item);\n\n    HttpResponse::Ok().json(item.0) // &lt;- send response\n}\n\n\n\npub fn send(mut data: serde_json::Value) {\n    println!(\"# Start running log post future...\");\n\n    // if the following line is removed, the call is not received by the test function above\n    System::new(\"test\").block_on(lazy(|| {\n        let req = Request::builder()\n            .method(\"POST\")\n            .uri(\"http://localhost:8080/test\")\n            .body(Body::from(data.to_string()))\n            .expect(\"request builder\");\n\n        let client = Client::new();\n        let future = client.request(req)\n        .and_then(|res| {\n            println!(\"status: {}\", res.status());\n            Ok(())\n        })\n        .map_err(|err| {\n            println!(\"error: {}\", err);\n        });\n        return future;\n    }));\n\n    println!(\"# Finish running log post future\")\n}\n</code></pre>\n\n<p>cargo.toml</p>\n\n<pre><code>[package]\nname = \"rust-tokio-event-loop-madness\"\nversion = \"0.1.0\"\nauthors = [\"\"]\nedition = \"2018\"\n\n[dependencies]\nserde_json = \"1.0.39\"\nactix-web = \"1.0.0\"\nserde_derive = \"1.0.92\"\nactix-rt = \"*\"\nhyper = \"0.12.30\"\nfutures = \"*\"\n</code></pre>\n\n<p>curl command to trigger error:</p>\n\n<pre><code>curl -X POST -H 'Content-Type: application/json' -d '{\"test\":1}' http://localhost:8080/push\n</code></pre>\n\n<p>Repo with example: <a href=\"https://github.com/fabifrank/rust-tokio-event-loop-madness\" rel=\"nofollow noreferrer\">https://github.com/fabifrank/rust-tokio-event-loop-madness</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1560783852, "post_id": 56633821, "comment_id": 99839720, "body": "It would probably be more interesting with a non Copy struct. Or with mutable access."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1560783885, "post_id": 56633821, "comment_id": 99839743, "body": "See: <a href=\"https://stackoverflow.com/questions/52203375/referencing-dereferencing-a-vector-element-in-a-for-loop/52203694#52203694\" title=\"referencing dereferencing a vector element in a for loop\">stackoverflow.com/questions/52203375/&hellip;</a>"}, {"owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1560784147, "post_id": 56633821, "comment_id": 99839905, "body": "@DenysS&#233;guret, thanks for replying. Doesn&#39;t <code>V</code> have to implement Copy? It won&#39;t compile if I take Copy out. Could you provide a short example? Thanks"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1560784191, "post_id": 56633821, "comment_id": 99839925, "body": "<i>&quot;It won&#39;t compile...&quot;</i> \u2014 I think that was Denys&#39; point. It shows the difference."}], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1560870214, "creation_date": 1560870214, "answer_id": 56652060, "question_id": 56633821, "link": "https://stackoverflow.com/questions/56633821/where-should-i-use-v-v-to-describe-a-parameter-in-function-signatures/56652060#56652060", "title": "Where should I use &amp;v: &amp;V to describe a parameter in function signatures?", "body": "<p>In general, I think you should never use the <code>&amp;f: &amp;Foo</code> form. The only reason it is accepted by the compiler is because function parameters (like <code>let</code> assignment) are actually irrefutable patterns. This can be seen in the error message if you try to put a general pattern:</p>\n\n<pre><code>fn take_option (Some (f): Option&lt;Foo&gt;) {\n    println!(\"{:?}\", f);\n}\n</code></pre>\n\n<p>does not complain about invalid syntax, but instead gives this error message:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0005]: refutable pattern in function argument: `None` not covered\n  --&gt; src/main.rs:15:21\n   |\n15 |     fn take_option (Some (f): Option&lt;Foo&gt;) {\n   |                     ^^^^^^^^ pattern `None` not covered\n</code></pre>\n\n<p>Using patterns as function arguments allows nice things like automatic tuple, array, or structure destructuring:</p>\n\n<pre><code>fn take_tuple ((x, y): (i32, i32)) {\n    println!(\"x: {}, y: {}\", x, y);\n}\n\nfn take_array ([x, y]: [i32; 2]) {\n    println!(\"x: {}, y: {}\", x, y);\n}\n\nfn take_foo (Foo { bar: bar }: Foo) {\n    println!(\"bar: {}\", bar);\n}\n\npopulation\n   .iter()\n   .enumerate()\n   .map (|(rank, person)| { ... });\n</code></pre>\n"}], "owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560870214, "creation_date": 1560783139, "last_edit_date": 1560783274, "question_id": 56633821, "link": "https://stackoverflow.com/questions/56633821/where-should-i-use-v-v-to-describe-a-parameter-in-function-signatures", "title": "Where should I use &amp;v: &amp;V to describe a parameter in function signatures?", "body": "<p>You can find the below code on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=67879a1d35d53c55000e18353d214743\" rel=\"nofollow noreferrer\">Rust playground</a>.</p>\n\n<pre><code>fn main() {\n    #[derive(Clone, Copy, Debug)]\n    struct Foo {\n        bar: u32,\n    }\n\n    fn take_ref(&amp;f: &amp;Foo) {\n        println!(\"{:?}\", f);\n    }\n\n    fn take_foo(f: Foo) {\n        println!(\"{:?}\", f);\n    }\n\n    let f = Foo {\n        bar: 1,\n    };\n\n    take_ref(&amp;f);\n    println!(\"{:?}\", f);\n\n    take_foo(f.clone());\n    println!(\"{:?}\", f);\n}\n</code></pre>\n\n<p>Are these functions, <code>take_ref</code> and <code>take_foo</code>, the same?\nWhen should I use &amp;v: &amp;V rather than v: V?</p>\n"}, {"tags": ["rust", "rust-tokio"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1560782531, "post_id": 56633288, "comment_id": 99838967, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/56555513/how-can-i-stop-reading-from-a-tokioiolines-stream\">How can I stop reading from a tokio::io::lines stream?</a>"}], "owner": {"reputation": 773, "user_id": 9408711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a288a953384d55fc2242d676c4fb7c4f?s=128&d=identicon&r=PG&f=1", "display_name": "aitvann", "link": "https://stackoverflow.com/users/9408711/aitvann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 443, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1560881187, "creation_date": 1560781338, "last_edit_date": 1560881187, "question_id": 56633288, "link": "https://stackoverflow.com/questions/56633288/how-do-i-use-tokio-to-forward-stdin-to-a-stream", "title": "How do I use Tokio to forward stdin to a stream?", "body": "<p>I'm trying to create a client that will send all data from stdin to a server. I can build the client, but I don't get a result if I enter the text, although I'm waiting for the message \"send data\" or an error.</p>\n\n<pre><code>use tokio::{\n    codec, io as aio, net as anet,\n    prelude::{future::Future, stream::Stream},\n};\n\nfn main() {\n    let address = \"127.0.0.1:4732\"\n        .parse()\n        .expect(\"could not to parse address\");\n\n    let stdin_stream = {\n        let stdin = aio::stdin();\n        let codec = codec::LinesCodec::new();\n        codec::FramedRead::new(stdin, codec)\n    };\n\n    let client = anet::TcpStream::connect(&amp;address)\n        .map_err(|err| eprintln!(\"connect error: {}\", err))\n        .map(|stream| {\n            let codec = codec::LinesCodec::new();\n            codec::FramedWrite::new(stream, codec)\n        })\n        .and_then(move |sink| {\n            stdin_stream\n                .forward(sink)\n                .map_err(|err| eprintln!(\"could not forward stdin to stream: {}\", err))\n                .map(|_| println!(\"send data\"))\n        });\n\n    tokio::run(client);\n}\n</code></pre>\n"}, {"tags": ["rust", "clap"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560776630, "post_id": 56631842, "comment_id": 99835623, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=05f9a9df8572c6456c3b00645eeae58a\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560776707, "post_id": 56631842, "comment_id": 99835671, "body": "Not related to the question, but you shouldn&#39;t do that. &quot;Correcting&quot; the case of the user&#39;s parameter, or defining a fallback when the input is invalid can be misleading."}, {"owner": {"reputation": 33, "user_id": 9770376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c40830fb2838e7ca4204349d4c2ed504?s=128&d=identicon&r=PG&f=1", "display_name": "Chenille33", "link": "https://stackoverflow.com/users/9770376/chenille33"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560777049, "post_id": 56631842, "comment_id": 99835873, "body": "@FrenchBoiethios Thank you ! It&#39;s very boring for not much but not matter..."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560777172, "post_id": 56631842, "comment_id": 99835961, "body": "I agree, this is a pain point in Rust."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1560777638, "post_id": 56631842, "comment_id": 99836251, "body": "If it&#39;s any help, it&#39;s usually better in Rust to model with proper types instead of strings. e.g. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=02e5a4f733f40f8141beb0a20582c8eb\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 33, "user_id": 9770376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c40830fb2838e7ca4204349d4c2ed504?s=128&d=identicon&r=PG&f=1", "display_name": "Chenille33", "link": "https://stackoverflow.com/users/9770376/chenille33"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1560778816, "post_id": 56631842, "comment_id": 99836950, "body": "@PeterHall Wow ! It&#39;s beautifull and in the same time horrible to think that all this code make a basic &quot;switch(res.tolowercase())&quot; oO"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1560781267, "post_id": 56631842, "comment_id": 99838225, "body": "@Chenille33 The benefits of introducing an enum are really nothing to do with the conversion to lower case. The code is better for all kinds of reasons: 1. it separates concerns - the only code that needs to deal with interpreting strings is the <code>FromStr</code> implementation. 2. The variants are type-safe - you can&#39;t make a mistake anywhere else in the code and either miss a variant or expect an impossible one."}, {"owner": {"reputation": 33, "user_id": 9770376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c40830fb2838e7ca4204349d4c2ed504?s=128&d=identicon&r=PG&f=1", "display_name": "Chenille33", "link": "https://stackoverflow.com/users/9770376/chenille33"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1560783668, "post_id": 56631842, "comment_id": 99839610, "body": "@PeterHall Thank you but I think I&#39;m too newer to understand all yours explains with their implications.... I&#39;ll implement your answer when I&#39;ll can understand it ;) (I prefer a non optimized but mastered code that the opposite ;)"}], "owner": {"reputation": 33, "user_id": 9770376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c40830fb2838e7ca4204349d4c2ed504?s=128&d=identicon&r=PG&f=1", "display_name": "Chenille33", "link": "https://stackoverflow.com/users/9770376/chenille33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 52, "favorite_count": 0, "closed_date": 1560777442, "answer_count": 0, "score": 0, "last_activity_date": 1560776306, "creation_date": 1560776306, "question_id": 56631842, "link": "https://stackoverflow.com/questions/56631842/it-is-possible-to-format-an-optionstring-to-lower-case", "closed_reason": "Duplicate", "title": "It is possible to format an Option&lt;String&gt; to lower case?", "body": "<p>I'm beginner on Rust and I want to format an Option into lower case.</p>\n\n<p>I need to do this because of I'm trying to get some string args in CLI mod via clap. I want with a simple \"match\" to get the correct value, even if user has wrote it strangely.</p>\n\n<p>This is my current piece of code :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let format : String = match matches.value_of(\"format\") {\n        Some(\"html\") =&gt; String::from(\"html\"),\n        Some(\"bbcode\") =&gt; String::from(\"bbcode\"),\n        _ =&gt; String::from(\"markdown\"),\n    };\n</code></pre>\n\n<p>I don't want to make an horrible thing like :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let format : String = match matches.value_of(\"format\") {\n        Some(\"html\") | Some(\"HTML\") | Some(\"Html\") | ...etc =&gt; String::from(\"html\"),\n        Some(\"bbcode\") | Some(\"BBCODE\") | Some(\"BBcode\") | ...etc =&gt; String::from(\"bbcode\"),\n        _ =&gt; String::from(\"markdown\"),\n    };\n</code></pre>\n\n<p>I try naivety to make something like :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let format : String = match matches.value_of(\"format\").unwrap().to_lowercase() {\n        Some(\"html\") =&gt; String::from(\"html\"), // don't work because my match is not an Option now but a String\n        \"html\" =&gt; String::from(\"html\"), // nop, this is a \"String\" not an \"str\" =_=\n        String::from(\"html\") =&gt; String::from(\"html\"), // nop I cannot \n        \"html\".to_string() =&gt; String::from(\"html\"), // nop I cannot too\n    };\n</code></pre>\n\n<p>So ok I'm newer but it's so hard to make a basic switch on string in rust ???</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1560767181, "post_id": 56628588, "comment_id": 99830634, "body": "Please provide more information. What is your project directory structure? How are you running lldb and gdb? From what directory are you running them? Consider making a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"tags": [], "owner": {"reputation": 315, "user_id": 3125562, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/100000873422271/picture?type=large", "display_name": "cageman", "link": "https://stackoverflow.com/users/3125562/cageman"}, "is_accepted": true, "score": 0, "last_activity_date": 1561803977, "creation_date": 1561803977, "answer_id": 56816774, "question_id": 56628588, "link": "https://stackoverflow.com/questions/56628588/how-to-make-cargo-enter-the-correct-path-to-source-files-of-stdlib-while-adding/56816774#56816774", "title": "How to make cargo enter the correct path to source files of stdlib while adding debuginfo to exectuable", "body": "<p>In case you are running in vscode on windows you can add the following to your launch.json:</p>\n\n<pre><code>        \"sourceFileMap\": {\n            \"/rustc/3c235d5600393dfe6c36eeed34042efad8d4f26e\": \"${env:USERPROFILE}\\\\.rustup\\\\toolchains\\\\stable-x86_64-pc-windows-msvc\\\\lib\\\\rustlib\\\\src\\\\rust\"\n        }\n</code></pre>\n\n<p>For further reference see: <a href=\"https://users.rust-lang.org/t/solved-how-to-step-into-std-source-code-when-debugging-in-vs-code/25319/6\" rel=\"nofollow noreferrer\">https://users.rust-lang.org/t/solved-how-to-step-into-std-source-code-when-debugging-in-vs-code/25319/6</a></p>\n"}], "owner": {"reputation": 403, "user_id": 662791, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f0d90bde6da52891079ea2aa8c13056?s=128&d=identicon&r=PG", "display_name": "Ankit", "link": "https://stackoverflow.com/users/662791/ankit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 464, "favorite_count": 0, "accepted_answer_id": 56816774, "answer_count": 1, "score": 1, "last_activity_date": 1561803977, "creation_date": 1560764157, "last_edit_date": 1560775320, "question_id": 56628588, "link": "https://stackoverflow.com/questions/56628588/how-to-make-cargo-enter-the-correct-path-to-source-files-of-stdlib-while-adding", "title": "How to make cargo enter the correct path to source files of stdlib while adding debuginfo to exectuable", "body": "<p>I am debugging a rust program but whenever I try to step into any standard library function, gdb (or lldb) can't find stdlib source files, giving error like this:</p>\n\n<pre><code>/rustc/3c235d5600393dfe6c36eeed34042efad8d4f26e/src/libcore/slice/mod.rs: No such file or directory.\n</code></pre>\n\n<p>Steps to reproduce:</p>\n\n<pre><code>cargo new test\n</code></pre>\n\n<p>test/src/main.rs:</p>\n\n<pre><code>fn main() {\n    let a:Vec&lt;char&gt; = Vec::new();\n}\n</code></pre>\n\n<pre><code>$ cd test\n$ cargo build\n$ rust-gdb target/debug/test\n\n...\n\n(gdb) b main.rs:1\nBreakpoint 1 at 0x4a04: file src/main.rs, line 2.\n\n(gdb) r\nStarting program: /home/xyz/code/rust/test/target/debug/test \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n\nBreakpoint 1, test::main () at src/main.rs:2\n2           let a: Vec&lt;i32&gt; = Vec::new();\n\n(gdb) s\nalloc::vec::Vec&lt;T&gt;::new ()\n    at /rustc/3c235d5600393dfe6c36eeed34042efad8d4f26e/src/liballoc/vec.rs:318\n318     /rustc/3c235d5600393dfe6c36eeed34042efad8d4f26e/src/liballoc/vec.rs: No such file or directory.\n\n</code></pre>\n"}, {"tags": ["rust", "embedded"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560774551, "post_id": 56625809, "comment_id": 99834449, "body": "String is allocated, it&#39;s not clear what you ask."}, {"owner": {"reputation": 8378, "user_id": 124538, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/82159aeb57c52bc0c7bfe6e9c832c3ea?s=128&d=identicon&r=PG", "display_name": "Wesley Wiser", "link": "https://stackoverflow.com/users/124538/wesley-wiser"}, "edited": false, "score": 0, "creation_date": 1560867625, "post_id": 56625809, "comment_id": 99872294, "body": "Depending on how hot this function is, you might see a performance improvement from returning a <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow&lt;str&gt;</code></a> instead of a <code>String</code>."}], "answers": [{"comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1560756276, "post_id": 56625923, "comment_id": 99825333, "body": "wouldn&#39;t the string content be allocated in the heap ? <code>String::from(&amp;str)</code> basically copies the str bytes into a new <code>Vec</code> and its content is heap allocated."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 2, "creation_date": 1560756534, "post_id": 56625923, "comment_id": 99825434, "body": "@SvetlinZarev This only happens when the arm is matching"}, {"owner": {"reputation": 47, "user_id": 1956180, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/026add01bf66eb9782a6302647c186ab?s=128&d=identicon&r=PG", "display_name": "smilykoch", "link": "https://stackoverflow.com/users/1956180/smilykoch"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1560762596, "post_id": 56625923, "comment_id": 99828278, "body": "@SvetlinZarev Ohh yea, sorry. If you are referring to my &quot;will only the one matching create a mutable copy on the stack&quot;, i of course meant the heap, not stack."}, {"owner": {"reputation": 47, "user_id": 1956180, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/026add01bf66eb9782a6302647c186ab?s=128&d=identicon&r=PG", "display_name": "smilykoch", "link": "https://stackoverflow.com/users/1956180/smilykoch"}, "edited": false, "score": 0, "creation_date": 1560762660, "post_id": 56625923, "comment_id": 99828309, "body": "@DenysS&#233;guret Okay, thank you for your clarification!  So in general, is my approach to this okay, or is there another way of doing this that would be smarter, faster or better optimized?  I have a very large match clause, where the snippet in OP, is just a small part of it."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 47, "user_id": 1956180, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/026add01bf66eb9782a6302647c186ab?s=128&d=identicon&r=PG", "display_name": "smilykoch", "link": "https://stackoverflow.com/users/1956180/smilykoch"}, "edited": false, "score": 0, "creation_date": 1560766304, "post_id": 56625923, "comment_id": 99830145, "body": "@smilykoch What you do seems efficient. Maintainability might be another problem though. I would probably have a more compact enum, maybe with some composite variants <code>GetField(String), SetField(String)</code> but you need to see more to determine the proper strategy."}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": false, "score": 4, "last_activity_date": 1560753839, "creation_date": 1560753839, "answer_id": 56625923, "question_id": 56625809, "link": "https://stackoverflow.com/questions/56625809/where-will-stringfrom-be-allocated-in-a-match-arm/56625923#56625923", "title": "Where will String::from(&quot;&quot;) be allocated in a match arm?", "body": "<p>Only the matching arm will be evaluated. The non matching arms have no cost apart the size of the program. </p>\n\n<p>In the general case, it's not even possible to evaluate other arms, as they depend on data read using destructuring of the pattern.</p>\n\n<p>As for your second question, the location in a program where literals are stored isn't commonly named rodata, and it's neither specified nor guaranteed (it's usually deduplicated but that's just optimization).</p>\n"}], "owner": {"reputation": 47, "user_id": 1956180, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/026add01bf66eb9782a6302647c186ab?s=128&d=identicon&r=PG", "display_name": "smilykoch", "link": "https://stackoverflow.com/users/1956180/smilykoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560753839, "creation_date": 1560753168, "question_id": 56625809, "link": "https://stackoverflow.com/questions/56625809/where-will-stringfrom-be-allocated-in-a-match-arm", "title": "Where will String::from(&quot;&quot;) be allocated in a match arm?", "body": "<p>I am still very new to rust, coming from a C embedded world. </p>\n\n<p>If i have a piece of code like this:</p>\n\n<pre><code>    match self {\n        Command::AT =&gt; String::from(\"AT\"),\n        Command::GetManufacturerId =&gt; String::from(\"AT+CGMI\"),\n        Command::GetModelId =&gt; String::from(\"AT+CGMM\"),\n        Command::GetFWVersion =&gt; String::from(\"AT+CGMR\"),\n        Command::GetSerialNum =&gt; String::from(\"AT+CGSN\"),\n        Command::GetId =&gt; String::from(\"ATI9\"),\n        Command::SetGreetingText { ref enable, ref text } =&gt; {\n          if *enable {\n            if text.len() &gt; 49 {\n              // TODO: Error!\n            }\n            write!(buffer, \"AT+CSGT={},{}\", *enable as u8, text).unwrap();\n          } else {\n            write!(buffer, \"AT+CSGT={}\", *enable as u8).unwrap();\n          }\n          buffer\n        },\n        Command::GetGreetingText =&gt; String::from(\"AT+CSGT?\"),\n        Command::Store =&gt; String::from(\"AT&amp;W0\"),\n        Command::ResetDefault =&gt; String::from(\"ATZ0\"),\n        Command::ResetFactory =&gt; String::from(\"AT+UFACTORY\"),\n        Command::SetDTR { ref value } =&gt; {\n          write!(buffer, \"AT&amp;D{}\", *value as u8).unwrap();\n          buffer\n        },\n        Command::SetDSR { ref value } =&gt; {\n          write!(buffer, \"AT&amp;S{}\", *value as u8).unwrap();\n          buffer\n        },\n        Command::SetEcho { ref enable } =&gt; {\n          write!(buffer, \"ATE{}\", *enable as u8).unwrap();\n          buffer\n        },\n        Command::GetEcho =&gt; String::from(\"ATE?\"),\n        Command::SetEscape { ref esc_char } =&gt; {\n          write!(buffer, \"ATS2={}\", esc_char).unwrap();\n          buffer\n        },\n        Command::GetEscape =&gt; String::from(\"ATS2?\"),\n        Command::SetTermination { ref line_term } =&gt; {\n          write!(buffer, \"ATS3={}\", line_term).unwrap();\n          buffer\n        }    \n    }\n</code></pre>\n\n<p>How does it work in Rust? Will all these match arms evaluate immediately, or will only the one matching create a mutable copy on the stack? And also, will all the string literals withing my <code>String::from(\"\")</code> be allocated in <code>.rodata</code>? </p>\n\n<p>Is there a better way of doing what i am trying to do here? Essentially i want to return a string literal, with replaced parameters (the write! macro bits)?</p>\n\n<p>Best regards</p>\n"}, {"tags": ["rust", "lifetime"], "owner": {"reputation": 53, "user_id": 6876242, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a91e0a42460be5103e9f9d128c91bdc?s=128&d=identicon&r=PG&f=1", "display_name": "Paulo", "link": "https://stackoverflow.com/users/6876242/paulo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "closed_date": 1560774602, "answer_count": 0, "score": 2, "last_activity_date": 1560750958, "creation_date": 1560750678, "last_edit_date": 1560750958, "question_id": 56625376, "link": "https://stackoverflow.com/questions/56625376/how-to-create-a-struct-with-a-vec-and-a-hashmap-that-refers-to-the-vec-elements", "closed_reason": "Duplicate", "title": "How to create a struct with a Vec and a HashMap that refers to the Vec elements?", "body": "<p>I am trying to create a struct which contains a <code>Vec v</code> and a <code>HashMap m</code> with  references to <code>v</code> elements as keys. Something like </p>\n\n<pre><code>use std::collections::HashMap;\n\nstruct VecMap&lt;'a&gt; {\n    v: Vec&lt;String&gt;,\n    m: HashMap&lt;&amp;'a String, u32&gt;\n}\n\nfn func() -&gt;  VecMap {\n    let keys = vec![\"a\".to_string(), \"b\".to_string()];\n    let mut vm = VecMap{v:keys, m:HashMap::new()};\n    for k in &amp;vm.v {\n        vm.m.insert(&amp;k,0);\n    }\n    vm\n}\n\nfn main() {\n    let vm = func();\n}\n</code></pre>\n\n<p>I am getting the following error</p>\n\n<pre><code>    error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:8:15\n  |\n8 | fn func() -&gt;  VecMap {\n  |               ^^^^^^ help: consider giving it a 'static lifetime: `VecMap + 'static`\n  |\n  = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n</code></pre>\n\n<p>I guess the problem is that VecMap's HashMap contains references borrowed from the Vec, but the compiler has no way of making sure that these references will remain valid during the HashMap's lifetime, since its lifetime isn't bound to that of the Vec. The VecMap is supposed to be immutable after its creation. The code compiles if the func function does not return a value, I guess because, in this case, the compiler knows tha both of them will die at the end of func.</p>\n\n<p>Is that indeed the problem? How to get round this?</p>\n"}, {"tags": ["indexing", "rust", "dependent-type"], "owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1560748185, "creation_date": 1560745668, "last_edit_date": 1560748185, "question_id": 56624713, "link": "https://stackoverflow.com/questions/56624713/using-a-phantom-scope-to-bypass-bounds-checking", "title": "Using a phantom scope to bypass bounds-checking", "body": "<p>I want to construct a indexing-type associated to a value which is a wrapper around a <code>usize</code> such that any vector created from that value I don't need to bounds-check the index. It seems like phantom lifetimes can be used to do some small amount of dependently typed programming like this. Will this work or are there things I'm not considering?</p>\n\n<p>In other words, using the module below is it impossible to write (\"safe\") code which will step out of memory?</p>\n\n<p>Also, is there a way to do this without the unit references?</p>\n\n<pre><code>pub mod things {\n    use std::iter;\n\n    #[derive(Clone, Copy)]\n    pub struct ThingIndex&lt;'scope&gt;(usize, &amp;'scope ());\n    pub struct Things {\n        nthings: usize,\n    }\n    pub struct ThingMapping&lt;'scope, V&gt;(Vec&lt;V&gt;, &amp;'scope ());\n\n    impl Things {\n        pub fn in_context&lt;F: FnOnce(&amp;Things) -&gt; V, V&gt;(nthings: usize, continuation: F) -&gt; V {\n            continuation(&amp;Things { nthings })\n        }\n        pub fn make_index&lt;'scope&gt;(&amp;'scope self, i: usize) -&gt; ThingIndex&lt;'scope&gt; {\n            if i &gt;= self.nthings {\n                panic!(\"Out-of-bounds index!\")\n            }\n            ThingIndex(i, &amp;())\n        }\n        pub fn make_mapping&lt;'scope, V: Clone&gt;(&amp;'scope self, def: V) -&gt; ThingMapping&lt;'scope, V&gt; {\n            ThingMapping(iter::repeat(def).take(self.nthings).collect(), &amp;())\n        }\n    }\n\n    impl&lt;'scope, V&gt; ThingMapping&lt;'scope, V&gt; {\n        pub fn get&lt;'a&gt;(&amp;'a self, ind: ThingIndex&lt;'scope&gt;) -&gt; &amp;'a V {\n            unsafe { &amp;self.0.get_unchecked(ind.0) }\n        }\n        // ...\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>Update:</p>\n\n<p>This doesn't seem to work. I added a test that I expected would fail to compile and it compiled without complaint. Is there a way to repair it and make it work? What if I write a macro?</p>\n\n<pre><code>#[cfg(test)]\nmod tests {\n    use crate::things::*;\n\n    #[test]\n    fn it_fails() {\n        Things::in_context(1, |r1| {\n            Things::in_context(5, |r2| {\n                let m1 = r1.make_mapping(());\n                let i2 = r2.make_index(3);\n                assert_eq!(*m1.get(i2), ());\n            });\n        })\n    }\n}\n</code></pre>\n\n<p>Note: <code>in_context</code> is loosely based on Haskell's <code>runST</code> function. In Haskell the type-signature of <code>runST</code> requires <code>RankNTypes</code>. I wonder if perhaps this is impossible because the Rust compiler does nothing conjugate to the behavior of <code>RankNTypes</code>.</p>\n"}, {"tags": ["rust", "dereference"], "answers": [{"tags": [], "owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "is_accepted": false, "score": 1, "last_activity_date": 1560737920, "creation_date": 1560737920, "answer_id": 56624031, "question_id": 56624004, "link": "https://stackoverflow.com/questions/56624004/rustlings-thread-exercise-why-do-i-not-dereference-mutexstruct/56624031#56624031", "title": "Rustlings thread exercise, why do I NOT dereference Mutex(Struct)?", "body": "<p><a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#deref-behavior\" rel=\"nofollow noreferrer\"><code>Arc&lt;T&gt;</code></a> automatically dereferences via the <a href=\"https://doc.rust-lang.org/std/ops/trait.Deref.html\" rel=\"nofollow noreferrer\"><code>Deref</code></a> trait.</p>\n\n<p>References:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/sync/struct.Arc.html#deref-behavior\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/std/sync/struct.Arc.html#deref-behavior</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 8073, "user_id": 2852624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/682806d261e4f00f77aa8633689a9558?s=128&d=identicon&r=PG&f=1", "display_name": "Matthias247", "link": "https://stackoverflow.com/users/2852624/matthias247"}, "is_accepted": false, "score": 5, "last_activity_date": 1560750322, "creation_date": 1560750322, "answer_id": 56625317, "question_id": 56624004, "link": "https://stackoverflow.com/questions/56624004/rustlings-thread-exercise-why-do-i-not-dereference-mutexstruct/56625317#56625317", "title": "Rustlings thread exercise, why do I NOT dereference Mutex(Struct)?", "body": "<p><code>status_shared</code> is of type <code>MutexGuard</code>. <code>MutexGuard</code> implements the <a href=\"https://doc.rust-lang.org/std/sync/struct.MutexGuard.html#impl-DerefMut\" rel=\"noreferrer\">DerefMut</a> and <a href=\"https://doc.rust-lang.org/std/sync/struct.MutexGuard.html#impl-Deref\" rel=\"noreferrer\">Deref</a> traits, with a deref target of <code>T</code> (the type which is stored inside the Mutex - <code>JobStatus</code> in your case.</p>\n\n<p>When you use behind a <code>.</code> behind an object the rust compiler will automatically try to deref it into something where the requested operation can be performed. Therefore the explicit dereferencing is not necessary here. This behavior is described in the Rust book in the <a href=\"https://doc.rust-lang.org/1.30.0/book/2018-edition/ch15-02-deref.html\" rel=\"noreferrer\">Deref chapter</a></p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1560759953, "creation_date": 1560759953, "answer_id": 56627471, "question_id": 56624004, "link": "https://stackoverflow.com/questions/56624004/rustlings-thread-exercise-why-do-i-not-dereference-mutexstruct/56627471#56627471", "title": "Rustlings thread exercise, why do I NOT dereference Mutex(Struct)?", "body": "<p>As @Matthias247 <a href=\"https://stackoverflow.com/a/56625317/5397009\">said</a>, dereferencing is automatic when behind a <code>.</code></p>\n\n<p>Additionally, your attempt at explicit dereference fails because of operator precedence: <code>*status_shared.jobs_completed</code> is equivalent to <code>*(status_shared.jobs_completed)</code> so it attempts to dereference an <code>u32</code> and fails, but you want <code>(*status_shared).jobs_completed</code> in order to dereference the <code>Arc&lt;JobStatus&gt;</code>.</p>\n"}], "owner": {"reputation": 21, "user_id": 11656650, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TBOtr.png?s=128&g=1", "display_name": "Chris Cioffi", "link": "https://stackoverflow.com/users/11656650/chris-cioffi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 926, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1560773152, "creation_date": 1560737597, "last_edit_date": 1560773152, "question_id": 56624004, "link": "https://stackoverflow.com/questions/56624004/rustlings-thread-exercise-why-do-i-not-dereference-mutexstruct", "title": "Rustlings thread exercise, why do I NOT dereference Mutex(Struct)?", "body": "<p>I'm learning Rust and have no experience with threads. I'm going through the Rustlings course and I've solved the <code>threads1.rs</code> exercise, but I don't understand why my <code>Mutex</code> struct doesn't need to be dereferenced.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::sync::{Arc, Mutex};\nuse std::thread;\nuse std::time::Duration;\n\nstruct JobStatus {\n    jobs_completed: u32,\n}\n\nfn main() {\n    let status = Arc::new(Mutex::new(JobStatus { jobs_completed: 0 }));\n    let status_shared = Arc::clone(&amp;status);\n    thread::spawn(move || {\n        for _ in 0..10 {\n            thread::sleep(Duration::from_millis(250));\n            let mut status_shared = status_shared.lock().unwrap();\n            status_shared.jobs_completed += 1;  // why not *status_shared?\n        }\n    });\n\n    let mut jobs_completed: u32;\n    loop {\n        jobs_completed = status.lock().unwrap().jobs_completed;\n        if jobs_completed &lt; 10 {\n            println!(\"waiting... ({} jobs done)\", jobs_completed);\n            thread::sleep(Duration::from_millis(500));\n        } else {\n            break;\n        }\n    }\n}\n</code></pre>\n\n<p>Based on <a href=\"https://doc.rust-lang.org/book/ch16-03-shared-state.html\" rel=\"nofollow noreferrer\">Chapter 16.3</a> of The Book, I would have expected to need to assign to</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>*status_shared.jobs_completed\n</code></pre>\n\n<p>in order to <em>get</em> to the <code>jobs_completed</code> field, but that generates the error:</p>\n\n<pre><code>error[E0614]: type `u32` cannot be dereferenced\n  --&gt; src/main.rs:16:13\n   |\n16 |             *status_shared.jobs_completed += 1;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Is the difference that the book gives a pointer to a simple type and the above code gives a reference to a struct?</p>\n"}, {"tags": ["loops", "rust", "iterator"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560741844, "post_id": 56620265, "comment_id": 99821232, "body": "The two answers this question have, are both trade off, you don&#39;t have a lot of memory or your file is really big, read it twice ? Or your file size is small and you have enough memory, stock the whole file."}], "answers": [{"comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1560713405, "post_id": 56621956, "comment_id": 99816842, "body": "With this implementation you are reading the whole file to the memory twice which is not memory efficient"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 1, "creation_date": 1560741669, "post_id": 56621956, "comment_id": 99821204, "body": "@Websterix memory efficient mean less memory use, this solution use less memory than your solution where you stock the whole file in memory."}], "tags": [], "owner": {"reputation": 1060, "user_id": 144824, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5aabebb65e39f16a1bd9987bc96b09a5?s=128&d=identicon&r=PG", "display_name": "antage", "link": "https://stackoverflow.com/users/144824/antage"}, "is_accepted": false, "score": 2, "last_activity_date": 1560713119, "creation_date": 1560713119, "answer_id": 56621956, "question_id": 56620265, "link": "https://stackoverflow.com/questions/56620265/how-to-access-the-bufreader-twice/56621956#56621956", "title": "How to access the BufReader twice?", "body": "<p>You can't. You need to read the file twice. First to count total lines. And second to process each line. So you need two <code>BufReader</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate regex;                                                                                                     \n\nuse std::fs::File;\nuse std::io::{BufRead, BufReader};\nuse std::path::Path;\n\nfn get_file_reader(path: &amp;Path) -&gt; impl BufRead {\n    BufReader::new(File::open(path).unwrap())\n}\n\nfn main() {\n    let sentences_path = Path::new(\"csv/testSentences.csv\");\n    let sentences = get_file_reader(&amp;sentences_path);\n\n    let total = get_file_reader(&amp;sentences_path).lines().count();\n\n    for (index, sentence) in sentences.lines().enumerate() {\n        let line = sentence.unwrap();\n        println!(\"Processed {} of {}, {}\", index, total, line);\n    }\n\n    println!(\"Total {}\", total);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 6, "last_activity_date": 1560751056, "last_edit_date": 1560751056, "creation_date": 1560715313, "answer_id": 56622221, "question_id": 56620265, "link": "https://stackoverflow.com/questions/56620265/how-to-access-the-bufreader-twice/56622221#56622221", "title": "How to access the BufReader twice?", "body": "<p>You can not access the value if the ownership is moved previously. However you can inspect over your lines with <a href=\"https://doc.rust-lang.org/std/iter/struct.Inspect.html\" rel=\"nofollow noreferrer\">inspect</a> without changing the inner lines but only updating the count.</p>\n\n<p>After you find out the <code>count</code> by iterating the Lines, you can iterate it again and do the logic as you wish.</p>\n\n<p>The main reason why you are getting this compiler error is: <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.count\" rel=\"nofollow noreferrer\">count</a> function consumes the Lines you use and you can not access your variable again since it is already consumed.</p>\n\n<p>Here is the solution:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::fs::File;\nuse std::io::{BufRead, BufReader, Write};\n\nfn main() {\n    let path = \"lines.txt\";\n\n    let mut output = File::create(path).unwrap();\n    write!(output, \"Rust\\n\ud83d\udc96\\nFun\").unwrap();\n\n    let input = File::open(path).unwrap();\n    let buffered = BufReader::new(input);\n\n    let lines: Vec&lt;_&gt; = buffered.lines().collect();\n    let total = lines.len();\n\n    for (index, sentence) in lines.into_iter().enumerate() {\n        let line = sentence.unwrap();\n        println!(\"Processed {} of {}, {}\", index, total, line);\n    }\n\n    println!(\"Total {}\", total);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0d420b0b268e1b599e5eccc0e480a068\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p><em>With this way, you do not need to read the file twice. You only iterate it twice.</em></p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560741577, "post_id": 56624269, "comment_id": 99821190, "body": "This simply doesn&#39;t work, <code>by_ref()</code> will not clone the iterator, it will just do a mutate borrow."}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": -1, "last_activity_date": 1560740788, "creation_date": 1560740788, "answer_id": 56624269, "question_id": 56620265, "link": "https://stackoverflow.com/questions/56620265/how-to-access-the-bufreader-twice/56624269#56624269", "title": "How to access the BufReader twice?", "body": "<p><code>sentences.lines()</code> is an iterator. You can borrow it instead of consuming by calling <code>.by_ref()</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut lines = sentences.lines();\nlet total = lines.by_ref().count();\nfor (index, sentence) in lines.enumerate() {\n    // ...\n}\n</code></pre>\n"}], "owner": {"reputation": 1517, "user_id": 2498992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09a877fd94ab982042673006169c23c6?s=128&d=identicon&r=PG", "display_name": "Daniel Doblado", "link": "https://stackoverflow.com/users/2498992/daniel-doblado"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 521, "favorite_count": 1, "accepted_answer_id": 56622221, "answer_count": 3, "score": 4, "last_activity_date": 1560751056, "creation_date": 1560699142, "question_id": 56620265, "link": "https://stackoverflow.com/questions/56620265/how-to-access-the-bufreader-twice", "title": "How to access the BufReader twice?", "body": "<p>Trying to access the variable <em>sentences</em> for a second time causes <code>value used here after move</code>, I want to understand how to store the total without causing this problem.</p>\n\n<p>I tried to copy the iterator but I can't find a way to make it work or how is the correct way to do it.</p>\n\n<pre><code>extern crate regex;\n\nuse std::fs::File;\nuse std::path::Path;\nuse std::io::{BufReader, BufRead};\n\nfn main() {\n    let sentences_path = Path::new(\"csv/testSentences.csv\");\n    let sentences = BufReader::new(File::open(&amp;sentences_path).unwrap());\n\n    let total = sentences.lines().count();\n\n    for (index, sentence) in sentences.lines().enumerate() {\n        let line = sentence.unwrap();\n        println!(\"Processed {} of {}, {}\", index, total, line);\n    }\n\n    println!(\"Total {}\", total);\n}\n</code></pre>\n"}, {"tags": ["rust", "ownership", "borrowing"], "comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1560698446, "post_id": 56619897, "comment_id": 99813321, "body": "Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">ReprEx</a>.  (Hint: trying running it in the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">playground</a> may help)"}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "reply_to_user": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 1, "creation_date": 1560703555, "post_id": 56619897, "comment_id": 99814515, "body": "@PeterVaro Changed"}, {"owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1560736774, "post_id": 56619897, "comment_id": 99820508, "body": "Side note, but: why do you need the <code>unsafe</code> here?"}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "reply_to_user": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "edited": false, "score": 0, "creation_date": 1560748577, "post_id": 56619897, "comment_id": 99822607, "body": "@Cerberus as_ref is an unsafe function"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1560747777, "post_id": 56622399, "comment_id": 99822389, "body": "<code>rust fn give_me_string(&amp;self) -&gt; String {     unsafe {         match self.string_ref {             Some(x) =&gt; x.as_ref(),             None =&gt; panic!(&quot;Had no `string_ref`!&quot;)         }     } } </code> x is owend by function give_me_string, returns a value referencing data owned by the current function won&#39;t work"}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1560749418, "post_id": 56622399, "comment_id": 99822834, "body": "if I cloned as your option one: <code>rust Some(x) =&gt; x.as_ref().clone(),</code>, result will somehow ignore 8 chars from original string. e.g.  original: 12345678abc,  function return: &quot;\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}abc&quot; , so weird, seems been overided with zeros   <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=55b79a5ae2e68a3c45f9a3ac8c4c81f5\" rel=\"nofollow noreferrer\">code</a>"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1560776467, "post_id": 56622399, "comment_id": 99835514, "body": "That&#39;s because you&#39;ve got a read after free error, you call <code>String::from</code> and you end up dropping it after the line using it. Remember that <code>NonNull</code> is still a pointer type, and is not an owning type."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1560776533, "post_id": 56622399, "comment_id": 99835562, "body": "I&#39;ve edited my cloning example to work better, it&#39;s now using a <code>ref</code> pattern."}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1560783710, "post_id": 56622399, "comment_id": 99839637, "body": "add ref, same result  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b0ee0ef352e62e59f7682a3c6fe27b82\" rel=\"nofollow noreferrer\">code</a>"}, {"owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1560783836, "post_id": 56622399, "comment_id": 99839713, "body": "will you please give me a working one playground link, so I can accept your answer, ref just won&#39;t work"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "edited": false, "score": 0, "creation_date": 1560795793, "post_id": 56622399, "comment_id": 99844787, "body": "Whoops, I got the wrong pattern \ud83d\ude2c sorry for the mix-up! <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=42fc8f71bf229971a2bdf92996c144bd\" rel=\"nofollow noreferrer\">Code</a>"}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 1, "last_activity_date": 1560808956, "last_edit_date": 1560808956, "creation_date": 1560717046, "answer_id": 56622399, "question_id": 56619897, "link": "https://stackoverflow.com/questions/56619897/how-to-return-when-ref-and-ownership-transfer-both-wont-work/56622399#56622399", "title": "How to return when ref and ownership transfer both won&#39;t work", "body": "<p>Stripping your example to the bare minimum:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct A {\n    string_ref: Option&lt;NonNull&lt;String&gt;&gt;,\n}\nimpl A {\n    fn give_me_string(&amp;self) -&gt; String {\n        unsafe {\n            *self.string_ref.unwrap().as_ref()\n        }\n    }\n}\n</code></pre>\n\n<p>There are a few errors here:</p>\n\n<ol>\n<li>The most obvious one is that you're trying to take ownership of <code>self.string_ref</code>, even though you've only borrowed <code>self</code>.<br>\nTo solve this you'll want to use a <code>match</code> statement, which allows you to destructure <code>self.string_ref</code> and not consume it:</li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn give_me_string(&amp;self) -&gt; String {\n    unsafe {\n        match self.string_ref {\n            Some(x) =&gt; x.as_ref(),\n            None =&gt; panic!(\"Had no `string_ref`!\")\n        }\n    }\n}\n</code></pre>\n\n<ol start=\"2\">\n<li><a href=\"https://doc.rust-lang.org/std/ptr/struct.NonNull.html#method.as_ref\" rel=\"nofollow noreferrer\"><code>as_ref</code></a> returns <code>&amp;T</code>, so you can't return an owned string, instead you need to either clone it and <em>then</em> return an owned string, or take reference to it:</li>\n</ol>\n\n<pre class=\"lang-rust prettyprint-override\"><code>//Option one: Clone contents\nmatch self.string_ref {\n    Some(ref x) =&gt; x.as_ref().clone(),\n    _ =&gt; //...\n}\n//Option two: Return reference. \nfn give_me_string(&amp;self) -&gt; &amp;str {\n    unsafe {\n        match &amp;self.string_ref {\n            Some(x) =&gt; x.as_ref() as _,\n            _ =&gt; //...\n        }\n    }\n}\n</code></pre>\n\n<p>To address another problem mentioned in the comments, you have the following statement in your <code>main</code> function:</p>\n\n<pre><code>string_ref: NonNull::new(&amp;mut String::from(\"hello world\") as *mut String)\n</code></pre>\n\n<p>This will cause <code>UB</code> due to its nature. You are forming a <code>String</code> by using <code>String::from</code>, but are not storing its value anywhere and are instead immediately casting into a pointer. This will free the <code>String</code> at the end of the line, causing <code>UB</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "is_accepted": false, "score": 0, "last_activity_date": 1560791710, "last_edit_date": 1560791710, "creation_date": 1560790887, "answer_id": 56635867, "question_id": 56619897, "link": "https://stackoverflow.com/questions/56619897/how-to-return-when-ref-and-ownership-transfer-both-wont-work/56635867#56635867", "title": "How to return when ref and ownership transfer both won&#39;t work", "body": "<p>So I basically figured out what's going on, thanks to  @Optimistic Peach</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn give_me_string(&amp;self) -&gt; &amp;String {\n        unsafe {\n            match self.string_ref {\n                Some(x) =&gt; &amp;*(x.as_ptr() as *const _), //without ref\n                Some(ref x) =&gt; x.as_ptr(), // with ref\n                None =&gt; panic!(\"hello?\")\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 0, "accepted_answer_id": 56622399, "answer_count": 2, "score": 0, "last_activity_date": 1560808956, "creation_date": 1560696431, "last_edit_date": 1560700911, "question_id": 56619897, "link": "https://stackoverflow.com/questions/56619897/how-to-return-when-ref-and-ownership-transfer-both-wont-work", "title": "How to return when ref and ownership transfer both won&#39;t work", "body": "<p>so, if I return this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>self.string_ref.unwrap().as_ref()\n</code></pre>\n\n<p>compiler will say</p>\n\n<pre><code>error[E0515]: cannot return value referencing temporary value\nreturns a value referencing data owned by the current function\n</code></pre>\n\n<p>if  I return this</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>*self.string_ref.unwrap().as_ref()\n</code></pre>\n\n<p>the compiler will say</p>\n\n<pre><code>error[E0507]: cannot move out of borrowed content\n</code></pre>\n\n<p>this is just drove me crazy</p>\n\n<p>here is the code: (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d9ca4251261a1311d8a37b79f83ee3d0\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ptr::NonNull;\n\nstruct A {\n    string_ref: Option&lt;NonNull&lt;String&gt;&gt;,\n}\n\nstruct Number {\n    num: i32\n}\n\nimpl A {\n    fn hello() {\n\n    }\n\n    fn give_me_string(&amp;self) -&gt; String {\n        unsafe {\n            *self.string_ref.unwrap().as_ref()\n        }\n    }\n}\n\nfn main() {\n    let a = A {\n        string_ref: NonNull::new(&amp;mut String::from(\"hello world\") as *mut String)\n    };\n    let t = a.give_me_string();\n    println!(\"{}\", t)\n}\n</code></pre>\n"}, {"tags": ["email", "utf-8", "rust", "mime", "quoted-printable"], "comments": [{"owner": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 0, "creation_date": 1560722883, "post_id": 56619590, "comment_id": 99818873, "body": "Did you try filling a bug report in the &quot;quoted_printable&quot; github repository? What&#39;s the expected result for your input?"}, {"owner": {"reputation": 254, "user_id": 4367350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0cc41f7f6948ba3d887ba9e2cb980b19?s=128&d=identicon&r=PG", "display_name": "Gudsaf", "link": "https://stackoverflow.com/users/4367350/gudsaf"}, "reply_to_user": {"reputation": 36166, "user_id": 393701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/250889c646cd2a916920d9252f7c6f42?s=128&d=identicon&r=PG", "display_name": "SirDarius", "link": "https://stackoverflow.com/users/393701/sirdarius"}, "edited": false, "score": 0, "creation_date": 1560959087, "post_id": 56619590, "comment_id": 99910538, "body": "@SirDarius it must look like &quot;\u0421\u0431\u0440\u043e\u0441 \u043f\u0430\u0440\u043e\u043b\u044f \u043d\u0430 \u0441\u0430\u0439\u0442&quot;, no its not problem of library, its another encoding - see answer below by Lanely"}], "answers": [{"comments": [{"owner": {"reputation": 254, "user_id": 4367350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0cc41f7f6948ba3d887ba9e2cb980b19?s=128&d=identicon&r=PG", "display_name": "Gudsaf", "link": "https://stackoverflow.com/users/4367350/gudsaf"}, "edited": false, "score": 0, "creation_date": 1560959153, "post_id": 56624151, "comment_id": 99910570, "body": "Ok, will try and write after - i saw that rfc and this crates too)"}], "tags": [], "owner": {"reputation": 1291, "user_id": 6331045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/189f94db303d16b891800f11846bd753?s=128&d=identicon&r=PG&f=1", "display_name": "Laney", "link": "https://stackoverflow.com/users/6331045/laney"}, "is_accepted": false, "score": 0, "last_activity_date": 1560739532, "creation_date": 1560739532, "answer_id": 56624151, "question_id": 56619590, "link": "https://stackoverflow.com/questions/56619590/decode-quoted-printable-email-strings-in-rust-like-utf-8q-d1-81-d0/56624151#56624151", "title": "Decode quoted-printable email strings in Rust (Like =?UTF-8?Q??=D1=81_=D0)", "body": "<p>this is rfc2047-encoded email header. I see 2 crates which (in theory) should be able to decode it: <a href=\"https://crates.io/crates/email\" rel=\"nofollow noreferrer\">email</a> and <a href=\"https://crates.io/crates/rustyknife\" rel=\"nofollow noreferrer\">rustyknife</a>. Maybe there is something else, look for \"email\" and \"mime\" on crates.io</p>\n"}], "owner": {"reputation": 254, "user_id": 4367350, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0cc41f7f6948ba3d887ba9e2cb980b19?s=128&d=identicon&r=PG", "display_name": "Gudsaf", "link": "https://stackoverflow.com/users/4367350/gudsaf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 146, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560739532, "creation_date": 1560694119, "last_edit_date": 1560695513, "question_id": 56619590, "link": "https://stackoverflow.com/questions/56619590/decode-quoted-printable-email-strings-in-rust-like-utf-8q-d1-81-d0", "title": "Decode quoted-printable email strings in Rust (Like =?UTF-8?Q??=D1=81_=D0)", "body": "<p>Is there any good crate which can decode quoted-printable strings in mail subjects, senders and etc?</p>\n\n<p>I just found mini crate named <a href=\"https://crates.io/crates/quoted_printable\" rel=\"nofollow noreferrer\">quoted_printable</a>. But this not helped a lot. For example from string like </p>\n\n<blockquote>\n  <p>=?utf-8?Q?=D0=A1=D0=B1=D1=80=D0=BE=D1=81_=D0=BF=D0=B0?= =?utf-8?Q?=D1=80=D0=BE=D0=BB=D1=8F_=D0=BD=D0=B0_=D1=81=D0=B0=D0=B9=D1=82?= =?utf-8?Q?=D0=B5?=</p>\n</blockquote>\n\n<p>i gain</p>\n\n<blockquote>\n  <p>\"=?utf-8?Q?\u0421\u0431\u0440\u043e\u0441_\u043f\u0430?= =?utf-8?Q?\u0440\u043e\u043b\u044f_\u043d\u0430_\u0441\u0430\u0439\u0442?= =?utf-8?Q?\u0435?=\"</p>\n</blockquote>\n\n<p>Is there any crate which can give me good string without <strong>=?utf-8?Q?</strong> and so on?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "edited": false, "score": 0, "creation_date": 1561098831, "post_id": 56619293, "comment_id": 99960283, "body": "This may be a bug, see cargo issue 6899: <a href=\"https://github.com/rust-lang/cargo/issues/6899\" rel=\"nofollow noreferrer\">github.com/rust-lang/cargo/issues/6899</a>"}], "owner": {"reputation": 2589, "user_id": 2597447, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/897978470ac2d52fe71d4071c53d6579?s=128&d=identicon&r=PG", "display_name": "arve0", "link": "https://stackoverflow.com/users/2597447/arve0"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 173, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1560691822, "creation_date": 1560691822, "question_id": 56619293, "link": "https://stackoverflow.com/questions/56619293/omit-hash-from-output-filename-when-building-with-cargo-rustc-o-filename-p", "title": "Omit hash from output filename when building with &quot;cargo rustc -- -o filename&quot; possible?", "body": "<p>Is there a way to control output filename with cargo? <code>cargo rustc -- -o filename</code> gives <em>filename-hash</em>:</p>\n\n<pre><code>$ mkdir output-filename\n$ cd output-filename/\n$ cargo init\n    Created binary (application) package\n$ cargo rustc -v --release -- -o filename\n  Compiling output-filename v0.1.0 (/private/tmp/output-filename)\n    Running `rustc --edition=2018 --crate-name output_filename src/main.rs --color always --crate-type bin --emit=dep-info,link -C opt-level=3 -o filename -C metadata=c961d75f8bcf3c48 -C extra-filename=-c961d75f8bcf3c48 --out-dir /private/tmp/output-filename/target/release/deps -L dependency=/private/tmp/output-filename/target/release/deps`\nwarning: due to multiple output types requested, the explicitly specified output file name will be adapted for each output type\n\nwarning: ignoring --out-dir flag due to -o flag\n\nwarning: ignoring -C extra-filename flag due to -o flag\n\n    Finished release [optimized] target(s) in 0.39s\n$ ls\nCargo.lock          filename-c961d75f8bcf3c48   src\nCargo.toml          filename-c961d75f8bcf3c48.d target\n</code></pre>\n\n<p>The output even suggest that <code>-C extra-filename=-c961d75f8bcf3c48</code> is ignored, but does not seem to be the case. I can script this, for example</p>\n\n<pre><code>mv $(ls filename* | grep -E 'filename-\\w+$') filename\n</code></pre>\n\n<p>but I rather find out how to control cargo / rustc.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1560690836, "creation_date": 1560690836, "answer_id": 56619168, "question_id": 56618813, "link": "https://stackoverflow.com/questions/56618813/how-to-read-and-unread-unicode-characters-from-stdin-in-rust/56619168#56619168", "title": "How to read and unread Unicode characters from stdin in Rust?", "body": "<p>In C, <code>getc()</code> and <code>ungetc()</code> are using a global <code>FILE *</code> named <code>stdin</code>, this allow then to buffering the input. In rust it's similar, <a href=\"https://doc.rust-lang.org/std/io/struct.Stdin.html#method.lock\" rel=\"nofollow noreferrer\"><code>stdin.lock()</code></a> will give you <a href=\"https://doc.rust-lang.org/std/io/struct.StdinLock.html\" rel=\"nofollow noreferrer\"><code>StdinLock</code></a> that implement <a href=\"https://doc.rust-lang.org/std/io/struct.StdinLock.html#impl-BufRead\" rel=\"nofollow noreferrer\"><code>Bufread</code></a>, AFAIK there is no builtin way to do what you want, people will simply use <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html#method.lines\" rel=\"nofollow noreferrer\"><code>lines()</code></a>. Also, your requirement is more hard than it's look, you ask for unicode stream, while your C function doesn't care about this.</p>\n\n<p>So here a basic solution:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io;\nuse std::io::prelude::*;\nuse std::str;\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    while let Ok(buffer) = stdin.fill_buf() {\n        let (input, to_consume) = match str::from_utf8(buffer) {\n            Ok(input) =&gt; (input, input.len()),\n            Err(e) =&gt; {\n                let to_consume = e.valid_up_to();\n                if to_consume == 0 {\n                    break;\n                }\n                let input = unsafe { str::from_utf8_unchecked(&amp;buffer[..to_consume]) };\n                (input, to_consume)\n            }\n        };\n\n        println!(\"{}\", input);\n\n        // here you could do many thing like .chars()\n\n        stdin.consume(to_consume);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 16645, "user_id": 402322, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/GWEWt.gif?s=128&g=1", "display_name": "ceving", "link": "https://stackoverflow.com/users/402322/ceving"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 240, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560690836, "creation_date": 1560687871, "question_id": 56618813, "link": "https://stackoverflow.com/questions/56618813/how-to-read-and-unread-unicode-characters-from-stdin-in-rust", "title": "How to read and unread Unicode characters from stdin in Rust?", "body": "<p>In C you use <code>getc</code> and <code>ungetc</code> to read bytes with look ahead for parsers.</p>\n\n<p>What is the idiomatic way to do this in Rust with Unicode characters?</p>\n\n<p>I tried <code>io::stdin().chars()</code> but there seems to be some kind of problem, I do not understand. The Compiler complains to use it.</p>\n"}, {"tags": ["vector", "rust", "primes"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1560652367, "post_id": 56615602, "comment_id": 99805476, "body": "Would something like <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter\" rel=\"nofollow noreferrer\"><code>filter</code></a> on an iterator work? I don&#39;t quite understand your prime number algorithm."}, {"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1560653309, "post_id": 56615602, "comment_id": 99805558, "body": "Thank you so much for the quick response! I&#39;m not sure if a filter() would work, because I want to mutate and return the prime_list outside of the while loop. If I did a filter() wouldn&#39;t I have to collect() the result and somehow reassign it to the prime_list variable? I&#39;m not sure if I could re-assign... but I can try that out real quick."}, {"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1560655028, "post_id": 56615602, "comment_id": 99805755, "body": "Alright, I updated it, but I&#39;m not sure this solution is better. I updated the post with the new working version."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1560655193, "post_id": 56615602, "comment_id": 99805772, "body": "I meant something closer to <code>prime_list[i..].iter().filter(|| {...}).collect::&lt;Vec&lt;_&gt;&gt;();</code>"}, {"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1560655524, "post_id": 56615602, "comment_id": 99805804, "body": "That works for collecting the part of the vector that I just scanned through, but I&#39;d like to collect the part that doesn&#39;t need scanning, along with this filtered part.  So in the edit I think I do something similar to your suggestion here <code>rust right.iter().filter(....) </code> , but since I want both I first split_at() and then chain() them together. For some reason, because it&#39;s a slice over references, before I perform the collect() I have to change each element to be values rather than references."}], "answers": [{"comments": [{"owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "edited": false, "score": 0, "creation_date": 1560657486, "post_id": 56615883, "comment_id": 99806035, "body": "Awesome. Thanks - it might be that my approach to use filter() or retain() to shrink my list of possible primes is what is incorrect.   I still feel like, there has to be a way in the vein of the EDIT that isn&#39;t as obfuscated. But I&#39;ll look more into that.  Thanks!"}], "tags": [], "owner": {"reputation": 190, "user_id": 3390376, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/avtj6.png?s=128&g=1", "display_name": "Hasan", "link": "https://stackoverflow.com/users/3390376/hasan"}, "is_accepted": false, "score": 0, "last_activity_date": 1560656517, "creation_date": 1560656517, "answer_id": 56615883, "question_id": 56615602, "link": "https://stackoverflow.com/questions/56615602/in-rust-is-there-a-way-to-perform-a-retain-on-only-part-of-a-container/56615883#56615883", "title": "In Rust, is there a way to perform a retain() on only part of a container?", "body": "<p>This doesn't solve exactly what you wanted, but I thought I'd give a shot at making a more \"rust-way\" of doing this as someone who has written rust for a little while.</p>\n\n<pre><code>let mut primes = Vec::new();\n\nfor e in 2..100 {\n    if primes.iter().all(|p| e % p != 0) {\n        primes.push(e);\n    }\n}\n\nprintln!(\"{:?}\", primes);\n</code></pre>\n\n<p>I store the primes in a separate vector because I want to add to it as I go along. This really feels a lot more elegant than trying to use retain to remove certain elements from a vector as you iterate over it.</p>\n\n<p>If you really wanted to get fancy, you could optimize a bit by using <code>with_capacity</code> and stopping after you got your nth prime.</p>\n\n<pre><code>fn get_nth_prime(n: usize) -&gt; u32 {\n    let mut primes = Vec::with_capacity(n);\n    let mut e = 2;\n\n    while primes.len() &lt; n {\n        if primes.iter().all(|p| e % p != 0) {\n            primes.push(e);\n        }\n\n        e += 1;\n    }\n\n    primes[n - 1]\n}\n</code></pre>\n"}], "owner": {"reputation": 103, "user_id": 9217033, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bb3890eb1f23b39e52120b8502257bf?s=128&d=identicon&r=PG&f=1", "display_name": "Zeke", "link": "https://stackoverflow.com/users/9217033/zeke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 942, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1560656517, "creation_date": 1560651812, "last_edit_date": 1560655252, "question_id": 56615602, "link": "https://stackoverflow.com/questions/56615602/in-rust-is-there-a-way-to-perform-a-retain-on-only-part-of-a-container", "title": "In Rust, is there a way to perform a retain() on only part of a container?", "body": "<p>I'm learning Rust for fun, and when writing a function to return the nth prime, I realized my solution felt inelegant and wasteful.</p>\n\n<p>I iterate through my entire list of possible primes, when I only want to iterate through the part of it that hasn't been verified. Is there a way to do this while using the retain() function?</p>\n\n<p>My main issue is that I believe the retain() function is implemented for Vec, and not for a slice. I tried looking into slice documentation for further ideas, but couldn't find any.</p>\n\n<p>Here is the code.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut prime_list: Vec&lt;u32&gt; = (2..n).collect();\nlet mut i: usize = 0;\nwhile i &lt; prime_list.len() {\n    let prime: u32 = prime_list[i];\n    prime_list.retain(\n       |x| x &lt;= &amp;prime || x % &amp;prime != 0);\n    i += 1;\n}\n</code></pre>\n\n<p>So the issue is in the function call</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>prime_list.retain(\n    |x| x &lt;= &amp;prime || x % &amp;prime != 0);\n</code></pre>\n\n<p>I don't need to go over every element in my list each time I pop into this loop since I know that I've verified the elements before 'i'.</p>\n\n<p>But the retain() function needs to go over the entire container, so I add a check into it (x &lt;= &amp;prime || ...) to ignore all the elements before the current one.</p>\n\n<p>What I'd like to do is elegantly start at element at position 'i', and go through the list removing elements.</p>\n\n<p>I know I can do this with a less elegant while or for loop, but I'm hoping there is a Rust-way to do this elegantly.</p>\n\n<p>Thanks for any help!</p>\n\n<p>EDIT: here is a possible solution with splitting and filter() that feels more obfuscated than I think it should be... if there is a better way using the filter() method and iterators I'd really appreciate a nudge in the right direction.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// inside the while loop\nlet prime: u32 = prime_list[i];\nlet (left, right) = prime_list.split_at(i);\n\nprime_list = left.iter()\n    .chain(\n         right.iter()\n         .filter(|x| *x == &amp;prime || *x % &amp;prime != 0))\n    .map(|&amp;x| x)\n    .collect();\n\ni += 1;\n</code></pre>\n"}, {"tags": ["windows", "process", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560760357, "post_id": 56615271, "comment_id": 99827181, "body": "Hum, I think that it is not related to Rust but to the way that <code>cmd</code> works in Windows"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560760465, "post_id": 56615271, "comment_id": 99827232, "body": "Related: <a href=\"https://superuser.com/questions/62525/run-a-batch-file-in-a-completely-hidden-way\" title=\"run a batch file in a completely hidden way\">superuser.com/questions/62525/&hellip;</a>"}], "owner": {"reputation": 1, "user_id": 8044975, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XidqY.png?s=128&g=1", "display_name": "braycarlson", "link": "https://stackoverflow.com/users/8044975/braycarlson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 2198, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1560646466, "creation_date": 1560646466, "question_id": 56615271, "link": "https://stackoverflow.com/questions/56615271/spawning-processes-on-windows-with-rust", "title": "Spawning processes on Windows with Rust", "body": "<p>I'm on Windows 10, and trying to spawn processes with <code>std::process::Command</code>. There are some apps that I want to open with <code>Command::new(\"cmd\")</code>, and then pass in an argument. For example, I want to pass in <code>start ms-settings:windowsupdate</code> as well as <code>start ms-settings:appsfeatures</code>, which would open \"Windows Update\" and \"Apps &amp; Features\" in \"Windows Settings\". However, as it stands, you cannot have more than one instance of \"Windows Settings\" open at a time. So, I want to open those specific processes one at a time, and when I close one process, I want the other one to spawn. The only way I've managed to do it is by doing:</p>\n\n<pre><code>let processes = [\n    \"start ms-settings:windowsupdate\",\n    \"start ms-settings:appsfeatures\"\n]\n\nfor process in &amp;processes {\n    Command::new(\"cmd\")\n    .arg(\"/K\")\n    .arg(&amp;process)\n    .creation_flags(0x00000010) // CREATE_NEW_CONSOLE\n    .status()\n    .expect(\"Process could not be spawned.\");\n}\n</code></pre>\n\n<p>which works, but it will open a command prompt when the first process spawns, and the only way to spawn the next process is to close the command prompt that the first process opens (opposed to just closing the window itself). I've tried other flags in <code>.creation_flags()</code>, but the other flags will open all processes at once, so only the last <code>start ms-settings:</code> process will be opened, since there can't be more than one instance. Is there a way to spawn these processes one at a time, without having a command prompt also spawn?</p>\n"}, {"tags": ["sockets", "rust", "udp", "netcat"], "comments": [{"owner": {"reputation": 65, "user_id": 11321136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/974eb209d0a62f29e3e9e8cd677f6800?s=128&d=identicon&r=PG&f=1", "display_name": "unegare", "link": "https://stackoverflow.com/users/11321136/unegare"}, "edited": false, "score": 0, "creation_date": 1560630820, "post_id": 56613916, "comment_id": 99802411, "body": "<code>echo -n &quot;qwerty&quot; | netcat -u 127.0.0.1 3000</code> UDP of course"}], "answers": [{"tags": [], "owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "is_accepted": false, "score": 1, "last_activity_date": 1560630891, "creation_date": 1560630891, "answer_id": 56613978, "question_id": 56613916, "link": "https://stackoverflow.com/questions/56613916/socket-server-in-rust-does-not-receive/56613978#56613978", "title": "Socket server in Rust does not receive", "body": "<p>By default netcat uses TCP. Instructing netcat to use UDP instead yields the expected result: </p>\n\n<pre><code>echo -n \"qwerty\" | netcat -u 127.0.0.1 3000\n</code></pre>\n\n<p>mcve output: </p>\n\n<pre><code>/home/svetlin/.cargo/bin/cargo run --color=always --package mcve --bin mcve\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11s\n     Running `target/debug/mcve`\n\nProcess finished with exit code 0\n</code></pre>\n"}], "owner": {"reputation": 65, "user_id": 11321136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/974eb209d0a62f29e3e9e8cd677f6800?s=128&d=identicon&r=PG&f=1", "display_name": "unegare", "link": "https://stackoverflow.com/users/11321136/unegare"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560630916, "creation_date": 1560630239, "last_edit_date": 1560630916, "question_id": 56613916, "link": "https://stackoverflow.com/questions/56613916/socket-server-in-rust-does-not-receive", "title": "Socket server in Rust does not receive", "body": "<p>server.rs:</p>\n\n<pre><code>use std::net::UdpSocket;\n\nfn main() -&gt; std::io::Result&lt;()&gt;{\n  {\n    let mut socket = UdpSocket::bind(\"127.0.0.1:3000\")?;\n    let mut buf = [0; 10];\n    let (amt, src) = socket.recv_from(&amp;mut buf)?;\n\n    let buf = &amp;mut buf[..amt];\n    buf.reverse();\n    socket.send_to(buf, &amp;src)?;\n  }\n  Ok(())\n}\n</code></pre>\n\n<p><code>strace ./server</code> output stops here:</p>\n\n<pre><code>&lt;...&gt;\nsocket(AF_INET, SOCK_DGRAM|SOCK_CLOEXEC, IPPROTO_IP) = 3\nbind(3, {sa_family=AF_INET, sin_port=htons(3000), sin_addr=inet_addr(\"127.0.0.1\")}, 16) = 0\nrecvfrom(3, \n</code></pre>\n\n<p>Attempts to call <code>echo -n \"qwerty\" | netcat 127.0.0.1 3000</code> after running the program above changes nothing.</p>\n\n<p>Why?</p>\n"}, {"tags": ["pointers", "struct", "rust", "unsafe"], "comments": [{"owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1560626771, "post_id": 56613171, "comment_id": 99801531, "body": "Why are you doing this in the first place? Using raw pointers is strongly discouraged in Rust because of things like this."}, {"owner": {"reputation": 256, "user_id": 2296145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f0f83b3cd35ac3e4b8f4ee1b89d6185c?s=128&d=identicon&r=PG", "display_name": "user2296145", "link": "https://stackoverflow.com/users/2296145/user2296145"}, "reply_to_user": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "edited": false, "score": 0, "creation_date": 1560629431, "post_id": 56613171, "comment_id": 99802119, "body": "How do you deal with external memory (for example, from a memory mapped file) if not with raw pointers?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560650408, "post_id": 56613171, "comment_id": 99805280, "body": "same that <code>static cast</code> vs <code>reinterpret cast</code>"}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1560625261, "last_edit_date": 1560625261, "creation_date": 1560624958, "answer_id": 56613305, "question_id": 56613171, "link": "https://stackoverflow.com/questions/56613171/does-casting-pointers-in-rust-have-the-same-behavior-as-reinterpret-cast-in-c/56613305#56613305", "title": "Does casting pointers in Rust have the same behavior as reinterpret_cast in C++?", "body": "<p>Normally, Rust makes no guarantees about the way that a struct is represented in memory. It can reorder fields to make them pack more tightly, and could theoretically even optimise the field order based on how your application actually accesses them.</p>\n\n<p>You can fix the order, to behave like C, by adding the <code>#[repr(C)]</code> attribute:</p>\n\n<pre><code>#[repr(C)]\n#[repr(align(4))]\nstruct MetaDataDefn { ... }\n</code></pre>\n\n<p>With that, both pointers will give the same result because this guarantees that <code>cncVersion</code> appears first.</p>\n"}], "owner": {"reputation": 256, "user_id": 2296145, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f0f83b3cd35ac3e4b8f4ee1b89d6185c?s=128&d=identicon&r=PG", "display_name": "user2296145", "link": "https://stackoverflow.com/users/2296145/user2296145"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 593, "favorite_count": 1, "accepted_answer_id": 56613305, "answer_count": 1, "score": 0, "last_activity_date": 1560625261, "creation_date": 1560623845, "question_id": 56613171, "link": "https://stackoverflow.com/questions/56613171/does-casting-pointers-in-rust-have-the-same-behavior-as-reinterpret-cast-in-c", "title": "Does casting pointers in Rust have the same behavior as reinterpret_cast in C++?", "body": "<p>I have this struct defined in my code:</p>\n\n<pre><code>#[repr(align(4))]\nstruct MetaDataDefn {\n  cncVersion: i32,\n  toDriverBufferLength: i32,\n  toClientsBufferLength: i32,\n  counterMetadataBufferLength: i32,\n  counterValuesBuferLength: i32,\n  clientLivenessTimeout: i64,\n  startTimestamp: i64,\n  pid: i64\n}\n</code></pre>\n\n<p>I have a function that takes a raw pointer to a chunk of memory, where the first bytes correspond to a struct with the same layout. \nI thought that if I cast the u8 pointer to a struct pointer, I'd get the same result as if I did a reinterpret_cast in C++. However, I think that's not the case, and I'm a bit confused about what's going on here. This is the body of the function (the pointer that the function receives is cncFilePtr):</p>\n\n<pre><code>let metadata = unsafe { cncFilePtr as *mut MetaDataDefn };\n\n// This works\nlet cncVersion = unsafe { (*(cncFilePtr as *mut i32)) };\nprintln!(\"CNC Version: {}\", cncVersion);\n\n//This prints a different number than the previous code\nprintln!(\"CNC version (other way): {}\", unsafe { (*metadata).cncVersion });\n</code></pre>\n\n<p>As you can see, casting the first 4 bytes to a i32 and then printing the result gives a different result than casting the whole thing to MetaDataDefn and accessing the first member, which is of type i32 (my understanding is that both approaches should give the same result)</p>\n\n<p>My question is: why it's not the same result? is casting pointers in Rust not the same as reinterpret_cast in C++ (I come from a C++ background)?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1560621746, "post_id": 56612823, "comment_id": 99800397, "body": "This looks like XY problem. Please explain what you try to achieve, and not how you plan to do it."}, {"owner": {"user_type": "does_not_exist", "display_name": "user4776812"}, "reply_to_user": {"reputation": 9010, "user_id": 2588800, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/847da843d41921363502159c8b7e5549?s=128&d=identicon&r=PG", "display_name": "Svetlin Zarev", "link": "https://stackoverflow.com/users/2588800/svetlin-zarev"}, "edited": false, "score": 0, "creation_date": 1560622260, "post_id": 56612823, "comment_id": 99800510, "body": "@SvetlinZarev usual getter/setter functionality for two dirrefent classes, for example, Car and Bicycle: declare getter/setter for maxSpeed parameter."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1560622678, "post_id": 56612823, "comment_id": 99800606, "body": "you may want to try <a href=\"https://crates.io/crates/getset\" rel=\"nofollow noreferrer\">getset</a> crate"}], "answers": [{"tags": [], "owner": {"reputation": 303, "user_id": 8414238, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-65YNUNKtwfU/AAAAAAAAAAI/AAAAAAAAACw/JRZyvo0sUbQ/photo.jpg?sz=128", "display_name": "Nicol&#225;s Abram", "link": "https://stackoverflow.com/users/8414238/nicol%c3%a1s-abram"}, "is_accepted": true, "score": 0, "last_activity_date": 1560623122, "last_edit_date": 1560623122, "creation_date": 1560622660, "answer_id": 56613001, "question_id": 56612823, "link": "https://stackoverflow.com/questions/56612823/how-to-implement-trait-default-implementation-with-parameter/56613001#56613001", "title": "How to implement trait default implementation with parameter", "body": "<p>There is no way to do this in Rust (Currently). However, it's very likely that an alternative, similar, solution is enough for you. If you're interested in progress in that feature, you can check out <a href=\"https://github.com/rust-lang/rfcs/pull/1546\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rfcs/pull/1546</a> and <a href=\"https://github.com/nikomatsakis/fields-in-traits-rfc\" rel=\"nofollow noreferrer\">https://github.com/nikomatsakis/fields-in-traits-rfc</a>.</p>\n\n<p>As for alternative solutions, simply leaving the implementation of the getter/setter to the struct is one option:</p>\n\n<pre><code>trait StringValue {\n    fn setValue(&amp;mut self, value: String);\n    fn getValue(&amp;self) -&gt; &amp;String;\n}\n\nstruct S {\n    value: String,\n}\nimpl StringValue for S {\n    fn setValue(&amp;mut self, value: String) {\n        self.value = value;\n    }\n\n    fn getValue(&amp;self) -&gt; &amp;String {\n        return &amp;self.value;\n    }\n}\n\nfn main() {\n    let mut s: S = S {\n        value: String::from(\"\"),\n    };\n    s.setValue(String::from(\"test\"));\n    println!(\"{}\", s.getValue());\n}\n</code></pre>\n\n<p>But that might get slightly repetitive, specially if you have many such methods. You could try putting them in a separate state struct, add a getter for that state struct and use it to get the fields in the trait's default impl for all the getters/setters, and then just leave an impl of the getter for the state struct up to the containing one to define. However, it should be noted that if you expect these getter/setters to be flexible and be \"overriden\" (Not use the default), adding the intermediate State struct will make it so a struct overriding the default impl (For, say, get_value in the example with a constant string) needs/has an unused field in the State struct.Example:</p>\n\n<pre><code>trait StringValue {\n    fn get_state(&amp;self) -&gt; &amp;State;\n    fn get_state_mut(&amp;mut self) -&gt; &amp;mut State;\n    fn set_value(&amp;mut self, value: String) {\n        self.get_state_mut().value = value\n    }\n    fn get_value(&amp;self) -&gt; &amp;str {\n        self.get_state().value.as_str()\n    }\n    fn set_value2(&amp;mut self, value: String) {\n        self.get_state_mut().value2 = value\n    }\n    fn get_value2(&amp;self) -&gt; &amp;str {\n        self.get_state().value2.as_str()\n    }\n}\n\nstruct State {\n    value: String,\n    value2: String,\n}\nstruct OtherStruct {\n    state: State,\n}\nimpl StringValue for OtherStruct {\n    fn get_state_mut(&amp;mut self) -&gt; &amp;mut State {\n        &amp;mut self.state\n    }\n\n    fn get_state(&amp;self) -&gt; &amp;State {\n        &amp;self.state\n    }\n}\n\nfn main() {\n    let mut s = OtherStruct {\n        state: State {\n            value: String::from(\"\"),\n            value2: String::from(\"\"),\n        },\n    };\n    s.set_value(String::from(\"test\"));\n    dbg!(s.get_value());\n    s.set_value2(String::from(\"test2\"));\n    dbg!(s.get_value2());\n}\n</code></pre>\n\n<p>As mentioned by \u00d6mer Erden, the <a href=\"https://crates.io/crates/getset\" rel=\"nofollow noreferrer\">https://crates.io/crates/getset</a> crate might be useful.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user4776812"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 493, "favorite_count": 0, "accepted_answer_id": 56613001, "answer_count": 1, "score": 0, "last_activity_date": 1560623122, "creation_date": 1560621221, "question_id": 56612823, "link": "https://stackoverflow.com/questions/56612823/how-to-implement-trait-default-implementation-with-parameter", "title": "How to implement trait default implementation with parameter", "body": "<p>I want to implement getter and setter into the trait. For example:</p>\n\n<pre><code>trait StringValue {\n    value: String;\n\n    fn setValue(&amp;self, value: String) {\n        self.value = value;\n    }\n\n    fn getValue(&amp;self) -&gt; String {\n        return self.value;\n    }\n}\n\nstruct S;\nimpl StringValue for S {}\n\nfn main() {\n    let s: S = S {};\n    s.setValue(String::from(\"test\"));\n    println!(\"{}\", s.getValue());\n}\n</code></pre>\n\n<p>cargo build:</p>\n\n<pre><code>error: missing `fn`, `type`, or `const` for trait-item declaration\n --&gt; src/main.rs:1:20\n  |\n1 |   trait StringValue {\n  |  ____________________^\n2 | |     value: String;\n  | |____^ missing `fn`, `type`, or `const`\n\nerror[E0609]: no field `value` on type `&amp;Self`\n --&gt; src/main.rs:5:14\n  |\n5 |         self.value = value;\n  |              ^^^^^\n\nerror[E0609]: no field `value` on type `&amp;Self`\n --&gt; src/main.rs:9:21\n  |\n9 |         return self.value;\n  |                     ^^^^^\n\nerror: aborting due to 3 previous errors\n</code></pre>\n\n<p>Questions:</p>\n\n<p>Can I use parameters into traits?</p>\n\n<p>How can I fix the code?</p>\n\n<p>If I want to use getter and setter into two different classes, how to implement it?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 0, "last_activity_date": 1560617924, "creation_date": 1560617924, "answer_id": 56612414, "question_id": 56612060, "link": "https://stackoverflow.com/questions/56612060/how-to-call-function-from-certain-trait-explicitly/56612414#56612414", "title": "How to call function from certain trait explicitly?", "body": "<p>The syntax you have used (<code>tr1::tr(v)</code>) would be correct if your method took has a <code>self</code> parameter (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=de0745db54caa5a5aeeefc24c9ae22dd\" rel=\"nofollow noreferrer\">Permalink to the playground</a>), but if it doesn't, you need to call it on the type specifying the type and trait explicitly:</p>\n\n<pre><code>&lt;V2D as tr1&gt;::tr()\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a30058bc18c323a3792ed361f0b598cd\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n"}, {"tags": [], "owner": {"reputation": 3467, "user_id": 3393308, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a3f30f7c191e8d556c70c951fe3d9af?s=128&d=identicon&r=PG", "display_name": "yorodm", "link": "https://stackoverflow.com/users/3393308/yorodm"}, "is_accepted": false, "score": 0, "last_activity_date": 1560617952, "creation_date": 1560617952, "answer_id": 56612416, "question_id": 56612060, "link": "https://stackoverflow.com/questions/56612060/how-to-call-function-from-certain-trait-explicitly/56612416#56612416", "title": "How to call function from certain trait explicitly?", "body": "<p>The simplest way would be using <a href=\"https://doc.rust-lang.org/stable/book/ch19-03-advanced-traits.html#fully-qualified-syntax-for-disambiguation-calling-methods-with-the-same-name\" rel=\"nofollow noreferrer\">fully qualified syntax</a>. In your case <code>tr</code> is an associated function so all you need is a little typecasting:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n  let v = V2D::new(1,2);\n  &lt;V2D as tr1&gt;::tr();\n  &lt;V2D as tr2&gt;::tr();\n}\n</code></pre>\n\n<p>The syntax for methods on the other hand would be something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct V2D {\n  x: i32,\n  y: i32\n}\n\nimpl V2D {\n  fn new(x: i32, y: i32) -&gt; V2D {\n    V2D{x,y}\n  }\n}\n\ntrait tr1 {\n  fn tr(&amp;self);\n}\n\ntrait tr2 {\n  fn tr(&amp;self);\n}\n\nimpl tr1 for V2D {\n  fn tr(&amp;self) {\n    println!(\"This is tr1\");\n  }\n}\nimpl tr2 for V2D {\n  fn tr(&amp;self) {\n    println!(\"This is tr2\");\n  }\n}\n\nfn main() {\n  let v = V2D::new(1,2);\n  tr1::tr(&amp;v);\n}\n</code></pre>\n"}], "owner": {"reputation": 65, "user_id": 11321136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/974eb209d0a62f29e3e9e8cd677f6800?s=128&d=identicon&r=PG&f=1", "display_name": "unegare", "link": "https://stackoverflow.com/users/11321136/unegare"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 56612414, "answer_count": 2, "score": 1, "last_activity_date": 1593111954, "creation_date": 1560615128, "last_edit_date": 1593111954, "question_id": 56612060, "link": "https://stackoverflow.com/questions/56612060/how-to-call-function-from-certain-trait-explicitly", "title": "How to call function from certain trait explicitly?", "body": "<p>I'd like to know how to call a function from a trait providing that there are several traits with the same function names.</p>\n<p>The problem is in the 33 line or\n<code>tr1::tr(v);</code></p>\n<p>How I have to express which trait I want to call?</p>\n<pre><code>struct V2D {\n  x: i32,\n  y: i32\n}\n\nimpl V2D {\n  fn new(x: i32, y: i32) -&gt; V2D {\n    V2D { x, y }\n  }\n}\n\ntrait tr1 {\n  fn tr();\n}\n\ntrait tr2 {\n  fn tr();\n}\n\nimpl tr1 for V2D {\n  fn tr() {\n    println!(&quot;This is tr1&quot;);\n  }\n}\n\nimpl tr2 for V2D {\n  fn tr() {\n    println!(&quot;This is tr2&quot;);\n  }\n}\n\nfn main() {\n  let v = V2D::new(1,2);\n  tr1::tr(v);\n}\n</code></pre>\n"}, {"tags": ["rust", "overloading"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560614541, "post_id": 56611779, "comment_id": 99798788, "body": "if your function can work without consume <code>x</code> why would you need more than one version ?!?"}, {"owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560614647, "post_id": 56611779, "comment_id": 99798814, "body": "The version which consumes <code>x</code> can do things like skip a full copy because we can just mutate <code>x</code>.  I&#39;ve simplified the functions they actually all return (the same value). They&#39;re roughly speaking like <code>Option.map</code>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1560614805, "post_id": 56611779, "comment_id": 99798859, "body": "if you need to consume the value just take by value and let the caller perform copy if needed"}, {"owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560614925, "post_id": 56611779, "comment_id": 99798887, "body": "Actually there&#39;s no copies in either case it&#39;s just one creates a new object and the other modifies in place.   But that&#39;s not always the case it depends on exact type of the second argument as it&#39;s a trait so the implementations can be different."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560687959, "post_id": 56611779, "comment_id": 99810987, "body": "I don&#39;t follow you, by using <code>impl ATrait</code>, you can&#39;t know the real type, that the point of this syntax. So you can&#39;t know what implementation is doing."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 1, "creation_date": 1560761968, "post_id": 56611779, "comment_id": 99827971, "body": "You can learn from my answer to a similar question: <a href=\"https://stackoverflow.com/questions/56555910/do-i-have-to-implement-a-trait-twice-when-implementing-it-for-both-reference-and/56609965#56609965\" title=\"do i have to implement a trait twice when implementing it for both reference and\">stackoverflow.com/questions/56555910/&hellip;</a>"}], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 49, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1560612920, "creation_date": 1560612920, "question_id": 56611779, "link": "https://stackoverflow.com/questions/56611779/overloading-reference-and-value-calls", "title": "Overloading reference and value calls", "body": "<p>I've got three functions with signatures like the following (slightly simplified below):</p>\n\n<pre><code>fn f&lt;T&gt;(f: impl Fn(&amp;T), x : &amp;impl ATrait&lt;T&gt;) {}\nfn f&lt;T&gt;(f: impl Fn(&amp;T), x : impl ATrait&lt;T&gt;) {}\nfn f&lt;T&gt;(f: impl Fn(T), x : impl ATrait&lt;T&gt;) {}\n</code></pre>\n\n<p>Naturally as they're all named <code>f</code> this won't compile but is there anyway I can give them the same name through traits+impls or other methods so I can do:</p>\n\n<pre><code>f(|&amp;e| {}, &amp;x);\nf(|&amp;e| {}, x);\nf(|e| {}, x);\n</code></pre>\n\n<p>and it selects the correct overload based on argument type?</p>\n"}, {"tags": ["types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1561034682, "post_id": 56611725, "comment_id": 99938023, "body": "Thanks, but I explicitly type 1 and 2 as <code>1usize</code>, <code>2usize</code>, so it knows exactly which implementation to use. It still doesn&#39;t work. I must explicitly type the parameters. Why is that?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1561035633, "post_id": 56611725, "comment_id": 99938602, "body": "@Listerone. Because <code>f</code> is generic, and therefore needs to work for any possible index type. Declaring the actual type to <code>usize</code> <i>inside</i> <code>f</code> effectively stops it being generic.  Declaring the type <i>outside</i> of <code>f</code> just chooses the type for that call - but <code>f</code> still needs to work for all the other types."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 5, "last_activity_date": 1560619624, "last_edit_date": 1560619624, "creation_date": 1560612421, "answer_id": 56611725, "question_id": 56611350, "link": "https://stackoverflow.com/questions/56611350/why-does-indexing-an-explicitly-typed-vector-fail-with-a-type-inference-error/56611725#56611725", "title": "Why does indexing an explicitly typed vector fail with a type inference error?", "body": "<p>The <code>[i]</code> syntax in Rust comes from implementing the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#impl-Index%3CI%3E\" rel=\"nofollow noreferrer\"><code>std::ops::Index</code> trait</a>.</p>\n\n<p>That trait looks like this:</p>\n\n<pre><code>pub trait Index&lt;Idx&gt; \nwhere\n    Idx: ?Sized, \n{\n    type Output: ?Sized;\n    fn index(&amp;self, index: Idx) -&gt; &amp;Self::Output;\n}\n</code></pre>\n\n<p>You can implement <code>Index</code> for a type multiple times, each with a different type for the <code>Idx</code> parameter. <code>Vec</code> supports as many different indexing mechanisms as possible by using a blanket implementation of <code>Index</code>:</p>\n\n<pre><code>impl&lt;T, I&gt; Index&lt;I&gt; for Vec&lt;T&gt;\nwhere\n    I: SliceIndex&lt;[T]&gt;, \n</code></pre>\n\n<p>This will work for any type that also has a <code>SliceIndex</code> implementation, which includes <code>usize</code>, as you were trying to use, but also range types, like <code>Range&lt;usize&gt;</code> (e.g. <code>0..5</code>) and <code>RangeFrom&lt;usize&gt;</code> (e.g. <code>0..</code>). Inside the closure, the compiler doesn't know <em>which</em> implementation of <code>Index</code> is going to be used, and each possibility could have a different <code>Output</code> type, which is why it can't infer a single type there.</p>\n\n<p>You can fix it by annotating the arguments of the closure:</p>\n\n<pre><code>let f = {\n    let xs: Vec&lt;(usize, usize)&gt; = Vec::new();\n    //\n    move |i: usize, j: usize| xs[j].1 - xs[i].0\n};\nlet x = f(1, 2);\n</code></pre>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "accepted_answer_id": 56611725, "answer_count": 1, "score": 4, "last_activity_date": 1560619624, "creation_date": 1560609557, "last_edit_date": 1560612196, "question_id": 56611350, "link": "https://stackoverflow.com/questions/56611350/why-does-indexing-an-explicitly-typed-vector-fail-with-a-type-inference-error", "title": "Why does indexing an explicitly typed vector fail with a type inference error?", "body": "<p>In the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=98a8464a62f5a97aa62fc4c93761b213\" rel=\"nofollow noreferrer\">code</a> below, I generate a vector and then use it as content for a closure:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let f = {\n        let xs: Vec&lt;(usize, usize)&gt; = Vec::new();\n        // populate xs\n        move |i, j| xs[j].1 - xs[i].0\n    };\n    let x = f(1usize, 2usize);\n}\n</code></pre>\n\n<p>Why this does code fail to compile with a type inference error although the vector is explicitly typed?</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n --&gt; src/main.rs:5:21\n  |\n5 |         move |i, j| xs[j].1 - xs[i].0\n  |                     ^^^^^ cannot infer type\n  |\n  = note: type must be known at this point\n</code></pre>\n"}, {"tags": ["syntax", "rust", "traits"], "comments": [{"owner": {"reputation": 5513, "user_id": 2718801, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9d4b144cdafa73e1d470362ed8d7c3a9?s=128&d=identicon&r=PG", "display_name": "jhpratt", "link": "https://stackoverflow.com/users/2718801/jhpratt"}, "edited": false, "score": 0, "creation_date": 1560607045, "post_id": 56610996, "comment_id": 99796912, "body": "What error do you get?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1560607694, "post_id": 56610996, "comment_id": 99797058, "body": "Use <code>Self</code> to refer to the type that is implementing the trait."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1560607788, "creation_date": 1560607788, "answer_id": 56611111, "question_id": 56610996, "link": "https://stackoverflow.com/questions/56610996/can-a-static-function-in-a-trait-call-another-static-function-in-same-trait/56611111#56611111", "title": "Can a static function in a trait call another static function in same trait?", "body": "<p>Inside a trait definition, you can use <code>Self</code> to refer to the type which implements the trait. For you, that would look like:</p>\n\n<pre><code>trait Test {\n    fn prt() {\n        println!(\"ok\");\n    }\n\n    fn test() {\n        Self::prt();\n    }\n}\n</code></pre>\n\n<p>There really is no such method as <code>Test::test</code> because its body is always defined by implementations of the trait. It just so happens that implementors will get that body by default if they don't provide their own.</p>\n"}], "owner": {"reputation": 55, "user_id": 9456807, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-VmfUND8ueP4/AAAAAAAAAAI/AAAAAAAAAAs/nrFN7FF0-dY/photo.jpg?sz=128", "display_name": "Riton Elion", "link": "https://stackoverflow.com/users/9456807/riton-elion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 56611111, "answer_count": 1, "score": 0, "last_activity_date": 1560607856, "creation_date": 1560606852, "last_edit_date": 1560607856, "question_id": 56610996, "link": "https://stackoverflow.com/questions/56610996/can-a-static-function-in-a-trait-call-another-static-function-in-same-trait", "title": "Can a static function in a trait call another static function in same trait?", "body": "<p>Can a static function in a trait call another static function in same trait?\nSuppose I have a trait below:</p>\n\n<pre><code>trait Test {\n    fn prt() {\n        println!(\"ok\");\n    }\n\n    fn test() {\n        Test::prt();\n    }\n}\n</code></pre>\n\n<p>That doesn't work. Code just can't compile here.</p>\n\n<p>Also, there is no type for me to use fully qualified syntax like <code>&lt;T as Test&gt;::Test</code>. Is there another way to do this?</p>\n"}, {"tags": ["rust", "rust-crates"], "comments": [{"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "edited": false, "score": 0, "creation_date": 1560585161, "post_id": 56608437, "comment_id": 99792226, "body": "Thanks @RayToal. I have just found that. Does that mean, I cannot parse a 50digit positive integer at all using Rust primitive types?"}, {"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 2, "creation_date": 1560585184, "post_id": 56608437, "comment_id": 99792228, "body": "The largest u128 is 2**128-1 = 340282366920938463463374607431768211455, so you can&#39;t get 50 digits."}, {"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "reply_to_user": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1560585276, "post_id": 56608437, "comment_id": 99792243, "body": "Any work around?"}, {"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1560585280, "post_id": 56608437, "comment_id": 99792245, "body": "Do you need the integer values, or can you leave them as strings? There exist crates such as <a href=\"https://github.com/rust-num/num-bigint\" rel=\"nofollow noreferrer\">num-bigint</a> that can help you if you need to parse them. Disclaimer: I haven&#39;t tried it."}, {"owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "reply_to_user": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1560585478, "post_id": 56608437, "comment_id": 99792271, "body": "I need integer value. Thanks, let me try <code>num-bigint</code>."}, {"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1560585658, "post_id": 56608437, "comment_id": 99792301, "body": "I also found <a href=\"https://rust-num.github.io/num/num/index.html\" rel=\"nofollow noreferrer\">this crate</a> ... There is a parse example from strings on <a href=\"https://rust-num.github.io/num/num/struct.BigInt.html\" rel=\"nofollow noreferrer\">this page</a>."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 2, "creation_date": 1560602710, "post_id": 56608437, "comment_id": 99795852, "body": "@RayToal Perhaps you would like to leave that as answer?"}, {"owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "edited": false, "score": 0, "creation_date": 1560612220, "post_id": 56608437, "comment_id": 99798220, "body": "Yes good idea, thanks, just did. (I waited until I could actually find time to write working code.)"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 1, "creation_date": 1560666122, "post_id": 56608437, "comment_id": 99807116, "body": "One decimal digit corresponds to log_2(10) ~ 3.32 bits, so 50 decimal digits require about 166 bits."}], "answers": [{"tags": [], "owner": {"reputation": 78771, "user_id": 831878, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/1d1a4823c46ad92f357b4bb7e74a64b0?s=128&d=identicon&r=PG", "display_name": "Ray Toal", "link": "https://stackoverflow.com/users/831878/ray-toal"}, "is_accepted": true, "score": 2, "last_activity_date": 1560612031, "creation_date": 1560612031, "answer_id": 56611667, "question_id": 56608437, "link": "https://stackoverflow.com/questions/56608437/parsing-a-50-digit-integer-from-a-csv-file-parseinterror-kind-overflow/56611667#56611667", "title": "Parsing a 50 digit integer from a csv file: ParseIntError { kind: Overflow }", "body": "<p>The largest <code>u128</code> is 2**128-1 = 340282366920938463463374607431768211455, which is less than 50 digits, so you will have to use <code>struct num::bigint::BigInt</code> (from the <a href=\"https://rust-num.github.io/num/num/index.html\" rel=\"nofollow noreferrer\"><code>num</code></a> crate).</p>\n\n<p>You can parse big integers via the <code>FromStr</code> trait. Here is an example of parsing two 50-digit numbers and (super bonus fun time) multiplying them:</p>\n\n<pre><code>extern crate num;\n\nuse num::BigInt;\nuse std::str::FromStr;\nuse std::ops::Mul;\n\nfn main() {\n    let x = BigInt::from_str(\"9879878782352398572398755757923351299981243778899\").unwrap();\n    let y = BigInt::from_str(\"3234235766473868388883432903721391827312463782828\").unwrap();\n    println!(\"{}\", x.mul(y));\n}\n</code></pre>\n"}], "owner": {"reputation": 1619, "user_id": 4661875, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/KeUsL.png?s=128&g=1", "display_name": "Bussller", "link": "https://stackoverflow.com/users/4661875/bussller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 56611667, "answer_count": 1, "score": 1, "last_activity_date": 1560768839, "creation_date": 1560584704, "last_edit_date": 1560768839, "question_id": 56608437, "link": "https://stackoverflow.com/questions/56608437/parsing-a-50-digit-integer-from-a-csv-file-parseinterror-kind-overflow", "title": "Parsing a 50 digit integer from a csv file: ParseIntError { kind: Overflow }", "body": "<p>What is the maximum number of digits that can be parsed as u128. I am encountering <code>Err(ParseIntError { kind: Overflow })</code> while trying to parse 50 digit positive integer. </p>\n\n<p>My error:</p>\n\n<pre><code>...\n...\nresult: id 89 \"40789923115535562561142322423255033685442488917353\"      Err(ParseIntError { kind: Overflow })\nresult: id 90 \"44889911501440648020369068063960672322193204149535\"      Err(ParseIntError { kind: Overflow })\nresult: id 91 \"41503128880339536053299340368006977710650566631954\"      Err(ParseIntError { kind: Overflow })\nresult: id 92 \"81234880673210146739058568557934581403627822703280\"      Err(ParseIntError { kind: Overflow })\nresult: id 93 \"82616570773948327592232845941706525094512325230608\"      Err(ParseIntError { kind: Overflow })\nresult: id 94 \"22918802058777319719839450180888072429661980811197\"      Err(ParseIntError { kind: Overflow })\nresult: id 95 \"77158542502016545090413245809786882778948721859617\"      Err(ParseIntError { kind: Overflow })\nresult: id 96 \"72107838435069186155435662884062257473692284509516\"      Err(ParseIntError { kind: Overflow })\nresult: id 97 \"20849603980134001723930671666823555245252804609722\"      Err(ParseIntError { kind: Overflow })\nresult: id 98 \"53503534226472524250874054075591789781264330331690\"      Err(ParseIntError { kind: Overflow })\n...\n...\n</code></pre>\n\n<p>Corresponding code for this:</p>\n\n<pre><code>fn read_num(a: &amp;mut Reader&lt;File&gt;) -&gt; Result&lt;u128, Error&gt; {\n    let mut sum: u128 = 0;\n    for(idx, res) in a.records().enumerate() {\n        let res = res.unwrap();\n        let val: StringRecord = res;\n        let ii = val.get(0).unwrap().trim().parse::&lt;u128&gt;().unwrpa();\n        println!(\"result: id {} {:?}\\t {:?}\", idx, val.get(0).unwrap(), ii);\n    }; // This is formatted\n    Ok(sum)\n}\n</code></pre>\n\n<p>I initially thought it must be due the new line character at the end of every line, but <code>trim</code> supposed to remove that and it looks to me that it is removing, because the unparsed output doesn't seem to have anything except the <code>\\t</code> formatter in the <code>println!</code></p>\n\n<p>Is the overflow due to inherent limitation or something that I am doing wrong?</p>\n"}, {"tags": ["rust", "chrono", "serde"], "comments": [{"owner": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 1, "creation_date": 1560595923, "post_id": 56608420, "comment_id": 99794318, "body": "Are you sure the error message says <code>serde::Serialize</code> and not <code>serde::Deserialize</code>? If I take out the <code>Deserialize</code> in the derive, your example works. Also, there&#39;s no <code>Deserialize</code> in the documentation you&#39;ve linked for that type. <code>rustc --version: 1.35.0</code>, <code>[dependencies] chrono = {version=&quot;0.4&quot;,features = [&quot;serde&quot;]} serde = &quot;1.0.92&quot; serde_json = &quot;1.0.39&quot; serde_derive = &quot;1.0.92&quot;</code>"}, {"owner": {"reputation": 1901, "user_id": 225630, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/edb8bd2d383e517e23e87ad10da214f3?s=128&d=identicon&r=PG", "display_name": "davyzhang", "link": "https://stackoverflow.com/users/225630/davyzhang"}, "reply_to_user": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 0, "creation_date": 1560597195, "post_id": 56608420, "comment_id": 99794594, "body": "@crazysim thanks for your reply. My bad, I didn&#39;t see that deserialize will be the blocker here. Thank you!"}, {"owner": {"reputation": 273, "user_id": 286021, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8366e7b2d753db522f8ab5c0846807a4?s=128&d=identicon&r=PG", "display_name": "nelsonjchen", "link": "https://stackoverflow.com/users/286021/nelsonjchen"}, "edited": false, "score": 0, "creation_date": 1560614183, "post_id": 56608420, "comment_id": 99798710, "body": "I don&#39;t understand how you got that error message. \ud83d\ude05, did you guess that was the error message? I&#39;m sure simply running the Rust compiler would have been faster than making an SO question."}], "answers": [{"tags": [], "owner": {"reputation": 1901, "user_id": 225630, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/edb8bd2d383e517e23e87ad10da214f3?s=128&d=identicon&r=PG", "display_name": "davyzhang", "link": "https://stackoverflow.com/users/225630/davyzhang"}, "is_accepted": false, "score": 1, "last_activity_date": 1560597429, "creation_date": 1560597429, "answer_id": 56609854, "question_id": 56608420, "link": "https://stackoverflow.com/questions/56608420/why-datetimetz-can-not-satisfy-serdeserialize/56609854#56609854", "title": "Why DateTime&lt;Tz&gt; can not satisfy serde::Serialize?", "body": "<p>Sorry guys the problems is as @crazysim said in the comment.</p>\n\n<p>DateTime didn't implement Deserialize trait. </p>\n\n<p>If I remove it, the code will work:</p>\n\n<pre><code>extern crate serde;\nextern crate serde_json;\n\n#[macro_use]\nextern crate serde_derive;\n\n\nuse chrono::{self,DateTime, TimeZone};\n\n\n\n#[derive(Serialize )]\nstruct Test&lt;Tz&gt;\nwhere Tz:TimeZone,\n{\n    t:DateTime&lt;Tz&gt;\n}\n\nfn main(){\n\n}\n</code></pre>\n"}], "owner": {"reputation": 1901, "user_id": 225630, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/edb8bd2d383e517e23e87ad10da214f3?s=128&d=identicon&r=PG", "display_name": "davyzhang", "link": "https://stackoverflow.com/users/225630/davyzhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2902, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1560597429, "creation_date": 1560584571, "question_id": 56608420, "link": "https://stackoverflow.com/questions/56608420/why-datetimetz-can-not-satisfy-serdeserialize", "title": "Why DateTime&lt;Tz&gt; can not satisfy serde::Serialize?", "body": "<pre><code>extern crate serde;\nextern crate serde_json;\n\n#[macro_use]\nextern crate serde_derive;\n\n\nuse chrono::{self, Date,DateTime, TimeZone};\nuse serde_derive::{Serialize,Deserialize}; // 1.0.91\n\n\n#[derive(Serialize,Deserialize )]\nstruct Test&lt;Tz&gt;\nwhere Tz:TimeZone,\n{\n    t:DateTime&lt;Tz&gt;\n}\n\nfn main(){\n\n}\n</code></pre>\n\n<p>The code above is not gonna compile with the error:</p>\n\n<blockquote>\n  <p>error[E0277]: the trait bound <code>chrono::datetime::DateTime&lt;Tz&gt;:\n  serde::Serialize</code> is not satisfied   --> src/main.rs:16:5</p>\n</blockquote>\n\n<p>I have </p>\n\n<pre><code>chrono = {version=\"0.4\",features = [\"serde\"]}\n</code></pre>\n\n<p>in my Cargo.toml</p>\n\n<p>I found that the implementation is here: <a href=\"https://docs.rs/chrono/0.4.6/chrono/struct.DateTime.html#impl-Serialize\" rel=\"nofollow noreferrer\">https://docs.rs/chrono/0.4.6/chrono/struct.DateTime.html#impl-Serialize</a></p>\n\n<p>full code sample here <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=57b41f6dd1c4c0a2c7f4f541234137a7\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=57b41f6dd1c4c0a2c7f4f541234137a7</a></p>\n\n<p>but I am not sure if the playground have serde feature enabled or not.</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 1, "last_activity_date": 1560772179, "last_edit_date": 1560772179, "creation_date": 1560581185, "answer_id": 56608043, "question_id": 56607844, "link": "https://stackoverflow.com/questions/56607844/using-the-nightly-version-of-a-crate/56608043#56608043", "title": "Using the nightly version of a crate?", "body": "<p>\"Nightly\" in Rust refers to the development version of the compiler and language. There is no such a thing as a \"nightly version\" of a crate.</p>\n\n<p>However, you can use the development version of a crate by using the code repository as a source, for example, in your <code>Cargo.toml</code>:</p>\n\n<pre><code>[dependencies]\nfoobar = { git = \"https://github.com/user/foobar\", branch = \"dev_branch\" }\n</code></pre>\n\n<p>See also <a href=\"https://github.com/rust-lang/cargo/issues/126#issuecomment-48101852\" rel=\"nofollow noreferrer\">the full syntax</a> and <a href=\"https://stackoverflow.com/questions/31704573/is-it-possible-to-have-cargo-fetch-dependencies-from-a-private-remote-git\">other</a> <a href=\"https://stackoverflow.com/questions/40070903/how-to-tell-cargo-to-use-a-git-repository-as-source-for-an-indirect-dependency-i\">related</a> <a href=\"https://stackoverflow.com/questions/46786956/can-i-add-a-dependent-crate-that-is-a-subdirectory-in-a-git-repository\">questions</a>.</p>\n"}], "owner": {"reputation": 564, "user_id": 612829, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/wB0H0.jpg?s=128&g=1", "display_name": "Martin Ellison", "link": "https://stackoverflow.com/users/612829/martin-ellison"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 56608043, "answer_count": 1, "score": 1, "last_activity_date": 1560772179, "creation_date": 1560579233, "last_edit_date": 1560581221, "question_id": 56607844, "link": "https://stackoverflow.com/questions/56607844/using-the-nightly-version-of-a-crate", "title": "Using the nightly version of a crate?", "body": "<p>How do I use the nightly version of a crate (from <a href=\"https://crates.io/\" rel=\"nofollow noreferrer\">crates.io</a>)? Sorry, I should know, but I cannot find this anywhere in the documentation. I assume that I put something in <code>Cargo.toml</code>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 0, "creation_date": 1560539000, "post_id": 56603848, "comment_id": 99783814, "body": "Can you make an enum that includes all of your acceptable types, and then a conversion operator on that enum which normalizes?"}, {"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "reply_to_user": {"reputation": 193600, "user_id": 87189, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98e7d6edce863e7a1bf8199b082eb25e?s=128&d=identicon&r=PG", "display_name": "tadman", "link": "https://stackoverflow.com/users/87189/tadman"}, "edited": false, "score": 0, "creation_date": 1560540182, "post_id": 56603848, "comment_id": 99784292, "body": "For simplicity, I did not show an extra parameter, the operator. The conversions are not the same for each operator. Think of arg1 as the left value, arg2 is the right value, and there is a binary operator between them. This normalization function will be attached to the operator Enum."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560540580, "post_id": 56603848, "comment_id": 99784465, "body": "<i>Conversion failures ...</i> Like what?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560540680, "post_id": 56603848, "comment_id": 99784509, "body": "This question is opinion-based and I&#39;ve voted to close it as such. Pick one and try it. If it works, great. If it doesn&#39;t or it&#39;s annoying to use, pick another. If you exhaust your list of options, ask a new question looking for alternatives."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560540685, "post_id": 56603848, "comment_id": 99784512, "body": "Because this question in its current form appears off-topic, you may wish to look at other resources. More open-ended questions and discussions are welcome on <a href=\"https://www.reddit.com/r/rust/\" rel=\"nofollow noreferrer\">the Rust subreddit</a>, <a href=\"https://users.rust-lang.org/\" rel=\"nofollow noreferrer\">the Rust users forum</a>, or <a href=\"https://www.rust-lang.org/community\" rel=\"nofollow noreferrer\">the Rust Discord server</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560540720, "post_id": 56603848, "comment_id": 99784522, "body": "My personal <b>opinion</b> is to use <code>&amp;mut</code>, but see <a href=\"https://stackoverflow.com/q/36557412/155423\">Change enum variant while moving the field to the new variant</a> for a reason you&#39;d need to take by value."}], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": false, "score": 0, "last_activity_date": 1560610816, "creation_date": 1560610816, "answer_id": 56611498, "question_id": 56603848, "link": "https://stackoverflow.com/questions/56603848/how-to-optionally-normalize-values-when-the-conversion-can-fail/56611498#56611498", "title": "How to optionally normalize values when the conversion can fail?", "body": "<p>You can think of a trait with an associated type as a compile-time function that maps between types. For example:</p>\n\n<pre><code>trait MapType {\n    type Output;\n}\n\nimpl MapType for f64 {\n    type Output i64;\n}\n\nimpl MapType for bool {\n    type Output u8;\n}\n</code></pre>\n\n<p>For each type that you might need, you can implement <code>MapType</code> to provide a mapping to a unique <code>Output</code> type.</p>\n\n<p>Your case is about pairs of types, and you can extend the idea above by adding a parameter:</p>\n\n<pre><code>trait Normalize&lt;T&gt;: Sized {\n    type Norm;\n}\n</code></pre>\n\n<p>Each implementation of <code>Normalize</code> produces a unique <code>Norm</code> type, for the combination of the two types, <code>Self</code> and <code>T</code>.</p>\n\n<p>But you will also need some constraints; after all, you will need to be able to actually convert between these types. And if a number is too big to be converted, the conversion will fail, so you will need the extra type constraints, <code>TryFrom</code> and <code>TryInto</code>, to express which things can be converted into what:</p>\n\n<pre><code>use std::convert::{TryFrom, TryInto};\n\ntrait Normalize&lt;T&gt;: Sized\nwhere\n    T: TryInto&lt;Self::Norm&gt;,\n{\n    type Norm: TryFrom&lt;Self&gt;;\n}\n</code></pre>\n\n<p>Implement it for the pairs of types you want:</p>\n\n<pre><code>impl Normalize&lt;u32&gt; for f64 {\n    type Norm = f64;\n}\n\nimpl Normalize&lt;f64&gt; for u32 {\n    type Norm = f64;\n}\n</code></pre>\n\n<p>And also for all pairs of <em>the same</em> type:</p>\n\n<pre><code>impl&lt;X&gt; Normalize&lt;X&gt; for X {\n    type Norm = X;\n}\n</code></pre>\n\n<p>You can then implement <code>normalize</code> like this:</p>\n\n<pre><code>fn normalize&lt;A, B&gt;(arg1: Option&lt;A&gt;, arg2: Option&lt;B&gt;) -&gt; (Option&lt;A::Norm&gt;, Option&lt;A::Norm&gt;) \nwhere\n    A: Normalize&lt;B&gt;,\n    A::Norm: TryFrom&lt;B&gt;,\n{\n    (\n        arg1.and_then(|a| a.try_into().ok()),\n        arg2.and_then(|b| b.try_into().ok())\n    )\n}\n\nfn main() {\n    println!(\"{:?}\", normalize(Some(1u32), Some(1u32))); // (Some(1), Some(1))\n    println!(\"{:?}\", normalize(Some(1f64), Some(1u32))); // (Some(1.0), Some(1.0))\n    println!(\"{:?}\", normalize(Some(1u32), Some(1f64))); // (Some(1.0), Some(1.0))\n    println!(\"{:?}\", normalize(Some(1f64), Some(1f64))); // (Some(1.0), Some(1.0))\n}\n</code></pre>\n\n<hr>\n\n<p>You will quickly realise that I have cheated a little here, by using <code>u32</code> instead of <code>u64</code>. That's because <a href=\"https://internals.rust-lang.org/t/tryfrom-for-f64/9793/4\" rel=\"nofollow noreferrer\">there is no <code>TryFrom&lt;u64&gt;</code> implementation for <code>f64</code></a>. If you need these pairs of types then you can still keep the same approach as I have outlined, but you would need to define your own version of the <code>TryInto</code> and <code>TryFrom</code> traits and implement those yourself for all the types pairs that you need.</p>\n"}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 186, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1593111626, "creation_date": 1560538913, "last_edit_date": 1593111626, "question_id": 56603848, "link": "https://stackoverflow.com/questions/56603848/how-to-optionally-normalize-values-when-the-conversion-can-fail", "title": "How to optionally normalize values when the conversion can fail?", "body": "<p>I wish to define a function that inspects two values and optionally changes one of them into a matching type. The motivation is to perform automatic casting for math formulas. My rules would be:</p>\n<ul>\n<li>Both are <code>i64</code>, leave alone</li>\n<li>Both are <code>f64</code>, leave alone</li>\n<li>One is <code>i64</code>, one is <code>f64</code>, change the <code>i64</code> to <code>f64</code></li>\n<li>Other rules for other types</li>\n</ul>\n<p>For example:</p>\n<pre><code>fn normalize(arg1: Option&lt;MyValue&gt;, arg2: Option&lt;MyValue&gt;) -&gt; (Option&lt;MyValue&gt;, Option&lt;MyValue&gt;) {\n    unimplemented!();\n}\n</code></pre>\n<p>My example will return a tuple with the optionally transformed values. <code>MyValue</code> does not implement <code>Copy</code>, but it does implement <code>Clone</code>. It is an enum which can hold an integer or a rational or a string, etc.</p>\n<p>The alternatives I can see are:</p>\n<ol>\n<li>Return a tuple. Transform the value that needs to change, clone the other to avoid borrow-checker. Conversion failures come back as <code>None</code>.</li>\n<li>Return a tuple. Transform the value that needs to change, return the other one unchanged, figure out how to move the value.</li>\n<li>Return <code>()</code>. Make the parameters <code>&amp;mut</code>. Change the one that needs to change, if any.</li>\n<li>Some other way that I do not know about, because I am new to Rust.</li>\n</ol>\n<p>Which approach is most idiomatic to Rust? If I do not clone, how do I notate the signature to placate the borrow-checker?</p>\n<p>My real enum is:</p>\n<pre><code>#[derive(Clone, PartialEq, Debug)]\npub enum ShyScalar {\n    Boolean(bool),\n    Integer(i64),\n    Rational(f64),\n    String(String),\n    Error(String)\n}\n</code></pre>\n"}, {"tags": ["rust", "deserialization", "json-deserialization", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1560538800, "post_id": 56603265, "comment_id": 99783739, "body": "What is the reason that you have not followed the compilers advice and help text?"}, {"owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560605583, "post_id": 56603265, "comment_id": 99796527, "body": "I <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c760a962a103731579f7b7c9130efcb2\" rel=\"nofollow noreferrer\">tried several things</a> but I ended up passing my threshold of 60 mins following the rabbit down the rabbit hole before asking for help."}], "answers": [{"tags": [], "owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "is_accepted": false, "score": 1, "last_activity_date": 1561409405, "last_edit_date": 1561409405, "creation_date": 1560818154, "answer_id": 56640373, "question_id": 56603265, "link": "https://stackoverflow.com/questions/56603265/cant-capture-dynamic-environment-in-a-fn-item-when-implementing-serdedeserial/56640373#56640373", "title": "Can&#39;t capture dynamic environment in a fn item when implementing serde::Deserialize for JSON", "body": "<p>I finally found a working solution, but I'm not sure if this is the idiomatic way of deserializing an array of polymorphic JSON objects.</p>\n\n<p><em>TL;DR</em> manually parse the JSON object in the <code>visit_map</code> for the <code>ParamVisitor</code> (i.e. not the <code>FieldVisitor</code>) so that we can check the parsed JSON for which type it is and set the respective variable based on the type.</p>\n\n<pre><code>use std::fmt;\nuse serde::{Deserialize, Deserializer}; // 1.0.91\nuse serde::de::{self, Visitor, MapAccess};\n\n#[derive(Debug, Deserialize)]\npub struct SingleUnitParam {\n    name: String,\n    units: String,\n}\n\n#[derive(Debug, Deserialize)]\npub struct UnitInfo {\n    #[serde(alias = \"Units\")]\n    units: String,\n}\n\n#[derive(Debug, Deserialize)]\npub struct MultiUnits {\n    #[serde(alias = \"Metric\")]\n    metric: UnitInfo,\n    #[serde(alias = \"Imperial\")]\n    imperial: UnitInfo,\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(untagged)]\nenum StrOrUnitsObj&lt;'a&gt; {\n    Str(&amp;'a str),\n    UnitsObj(MultiUnits)\n}\n\n#[derive(Debug, Deserialize)]\npub struct MultiUnitParam {\n    name: String,\n    units: MultiUnits,\n}\n\n#[derive(Debug)]\npub enum Param {\n    Single(SingleUnitParam),\n    Multiple(MultiUnitParam),\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Param {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        enum Field { Name, Units/*, UnitsAsObj, UnitsAsStr*/ };\n\n        impl&lt;'de&gt; Deserialize&lt;'de&gt; for Field {\n            fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Field, D::Error&gt;\n            where\n                D: Deserializer&lt;'de&gt;,\n            {\n                struct FieldVisitor;\n\n                impl&lt;'de&gt; Visitor&lt;'de&gt; for FieldVisitor {\n                    type Value = Field;\n\n                    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                        formatter.write_str(\"`Name` or `Units`\")\n                    }\n\n                    fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;Field, E&gt;\n                    where\n                        E: de::Error,\n                    {\n                        match value {\n                            \"Name\" =&gt; Ok(Field::Name),\n                            \"Units\" =&gt; Ok(Field::Units),\n                            // Can't get access to the JSON value to inspect it here.\n                            // \"Units\" =&gt; Ok({\n                            //     let val = StrOrUnitsObj::deserialize(deserializer).unwrap();\n\n                            //     match val {\n                            //         StrOrUnitsObj::Str(s) =&gt; {\n                            //             Field::UnitsAsObj\n                            //         },\n                            //         StrOrUnitsObj::UnitsObj(obj) =&gt; {\n                            //             Field::UnitsAsStr\n                            //         }\n                            //     }\n                            // }),\n                            _ =&gt; Err(de::Error::unknown_field(value, FIELDS)),\n                        }\n                    }\n                }\n\n                deserializer.deserialize_identifier(FieldVisitor)\n            }\n        }\n\n        struct ParamVisitor;\n\n        impl&lt;'de&gt; Visitor&lt;'de&gt; for ParamVisitor {\n            type Value = Param;\n\n            fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                formatter.write_str(\"enum Param\")\n            }\n\n            fn visit_map&lt;V&gt;(self, mut map: V) -&gt; Result&lt;Param, V::Error&gt;\n            where\n                V: MapAccess&lt;'de&gt;,\n            {\n                let mut name = None;\n                let mut units_as_string = None;\n                let mut units_as_object = None;\n                while let Some(key) = map.next_key()? {\n                    match key {\n                        Field::Name =&gt; {\n                            if name.is_some() {\n                                return Err(de::Error::duplicate_field(\"Name\"));\n                            }\n                            name = Some(map.next_value()?);\n                        }\n                        Field::Units =&gt; {\n                            if units_as_string.is_some() || units_as_object.is_some() {\n                                return Err(de::Error::duplicate_field(\"Units\"));\n                            }\n                            // Here is where we can get the JSON value and check its type.\n                            let v: serde_json::Value = map.next_value()?;\n                            if v.is_object() {\n                                let v: MultiUnits = serde_json::from_value(v).unwrap();\n                                units_as_object = Some(v);\n                            } else if v.is_string() {\n                                units_as_string = Some(v.as_str().unwrap().to_owned());\n                            }\n                        }\n                        // Field::UnitsAsObj =&gt; {\n                        //     if units_as_object.is_some() {\n                        //         return Err(de::Error::duplicate_field(\"Units\"));\n                        //     }\n                        //     units_as_object = Some(map.next_value()?);\n                        // }\n                        // Field::UnitsAsStr =&gt; {\n                        //     if units_as_string.is_some() {\n                        //         return Err(de::Error::duplicate_field(\"Units\"));\n                        //     }\n                        //     units_as_string = Some(map.next_value()?);\n                        // }\n                    }\n                }\n                let name = name.ok_or_else(|| de::Error::missing_field(\"Name\"))?;\n                if let Some(units_as_object) = units_as_object {\n                    Ok(Param::Multiple(MultiUnitParam {\n                        name: name,\n                        units: units_as_object\n                    }))\n                } else {\n                    let units_as_string = units_as_string.ok_or_else(|| de::Error::missing_field(\"Units\"))?;\n                    Ok(Param::Single(SingleUnitParam {\n                        name: name,\n                        units: units_as_string\n                    }))\n                }\n            }\n        }\n\n        const FIELDS: &amp;'static [&amp;'static str] = &amp;[\"Name\", \"Units\"];\n        deserializer.deserialize_struct(\"Param\", FIELDS, ParamVisitor)\n    }\n}\n\nfn main() {\n    let json_raw = r#\"[\n        { \"Name\": \"a single unit param\", \"Units\": \"m/s\" },\n        { \"Name\": \"a multi unit param\", \"Units\": { \"Metric\": { \"Units\": \"m/s\" }, \"Imperial\": { \"Units\": \"ft/s\" } } }\n    ]\"#;\n    let j: Vec&lt;Param&gt; = serde_json::from_str(&amp;json_raw).unwrap();\n    match &amp;j[0] {\n        Param::Single(p) =&gt; {\n            assert_eq!(p.name, \"a single unit param\");\n            assert_eq!(p.units, \"m/s\");\n        },\n        Param::Multiple(_p) =&gt; panic!(\"Expected SingleUnitParam, actual MultiUnitParam\")\n    }\n    match &amp;j[1] {\n        Param::Single(_p) =&gt; panic!(\"Expected MultiUnitParam, actual SingleUnitParam\"),\n        Param::Multiple(p) =&gt; {\n            assert_eq!(p.name, \"a multi unit param\");\n            assert_eq!(p.units.metric.units, \"m/s\");\n            assert_eq!(p.units.imperial.units, \"ft/s\");\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c58e1265829d6804d93d432f35c310dd\" rel=\"nofollow noreferrer\">playground</a></p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1560882177, "creation_date": 1560882177, "answer_id": 56654948, "question_id": 56603265, "link": "https://stackoverflow.com/questions/56603265/cant-capture-dynamic-environment-in-a-fn-item-when-implementing-serdedeserial/56654948#56654948", "title": "Can&#39;t capture dynamic environment in a fn item when implementing serde::Deserialize for JSON", "body": "<p>Your problem arises because you are attempting to use a variable from an outer function in an inner function:</p>\n\n<pre><code>fn outer(id: i32) {\n    fn inner() {\n        println!(\"{}\", id);\n    }\n}\n</code></pre>\n\n<p>You simply cannot do this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0434]: can't capture dynamic environment in a fn item\n --&gt; src/lib.rs:3:24\n  |\n3 |         println!(\"{}\", id);\n  |                        ^^\n  |\n  = help: use the `|| { ... }` closure form instead\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/25070261/155423\">What does the rust compiler &quot;error: can&#39;t capture dynamic environment in a fn item; use the || { ... } closure form instead&quot; mean, and how to fix it?</a></li>\n<li><a href=\"https://stackoverflow.com/q/42895596/155423\">Unable to create a local function because &quot;can&#39;t capture dynamic environment in a fn item&quot;</a></li>\n<li><a href=\"https://stackoverflow.com/q/54342492/155423\">Can&#39;t capture dynamic environment in a fn item about iron lib</a></li>\n<li><a href=\"https://stackoverflow.com/q/29617389/155423\">Can&#39;t capture dynamic environment in a fn item</a></li>\n</ul>\n\n<hr>\n\n<p>You don't need to write any custom deserialization at all; using Serde's attributes is powerful enough:</p>\n\n<pre><code>use serde::Deserialize; // 1.0.91\nuse serde_json; // 1.0.39\n\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Param&lt;'a&gt; {\n    name: &amp;'a str,\n    #[serde(borrow)]\n    units: Units&lt;'a&gt;,\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(untagged)]\nenum Units&lt;'a&gt; {\n    Str(&amp;'a str),\n    #[serde(borrow)]\n    Multi(Multi&lt;'a&gt;),\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct Multi&lt;'a&gt; {\n    #[serde(borrow)]\n    metric: SingleUnit&lt;'a&gt;,\n    #[serde(borrow)]\n    imperial: SingleUnit&lt;'a&gt;,\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(rename_all = \"PascalCase\")]\nstruct SingleUnit&lt;'a&gt; {\n    units: &amp;'a str,\n}\n\nfn main() {\n    let json_text = r#\"[\n      {\n        \"Name\": \"a single unit param\",\n        \"Units\": \"m/s\"\n      },\n      {\n        \"Name\": \"a multi unit param\",\n        \"Units\": {\n          \"Metric\": {\n            \"Units\": \"m/s\"\n          },\n          \"Imperial\": {\n            \"Units\": \"ft/s\"\n          }\n        }\n      }\n    ]\"#;\n\n    let x: Vec&lt;Param&lt;'_&gt;&gt; = serde_json::from_str(json_text).expect(\"Bad schema\");\n\n    println!(\"{:?}\", x);\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52034764/155423\">How do I serialize an enum without including the name of the enum variant?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43702185/155423\">How do I store a result using Serde Zero-copy deserialization of a Futures-enabled Hyper Chunk?</a></li>\n<li><a href=\"https://stackoverflow.com/q/56394620/155423\">Why can Serde not derive Deserialize for a struct containing only a &amp;Path?</a></li>\n</ul>\n"}], "owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "accepted_answer_id": 56654948, "answer_count": 2, "score": 2, "last_activity_date": 1561409405, "creation_date": 1560535866, "last_edit_date": 1560881482, "question_id": 56603265, "link": "https://stackoverflow.com/questions/56603265/cant-capture-dynamic-environment-in-a-fn-item-when-implementing-serdedeserial", "title": "Can&#39;t capture dynamic environment in a fn item when implementing serde::Deserialize for JSON", "body": "<p>I'm trying to manually deserialize a struct that can use the same JSON attribute as different JSON types (e.g. object or string). For example:</p>\n\n<pre><code>[\n  {\n    \"Name\": \"a single unit param\",\n    \"Units\": \"m/s\"\n  },\n  {\n    \"Name\": \"a multi unit param\",\n    \"Units\": {\n      \"Metric\": {\n        \"Units\": \"m/s\"\n      },\n      \"Imperial\": {\n        \"Units\": \"ft/s\"\n      }\n    }\n  }\n]\n</code></pre>\n\n<p>What I have so far is below. I don't have enough experience in Rust to figure out if what I'm trying to do is possible.</p>\n\n<pre><code>use serde::de::{self, MapAccess, Visitor};\nuse serde::{Deserialize, Deserializer}; // 1.0.91\nuse std::fmt;\n\n#[derive(Debug, Deserialize)]\npub struct SingleUnitParam {\n    name: String,\n    units: String,\n}\n\n#[derive(Debug, Deserialize)]\npub struct UnitInfo {\n    units: String,\n}\n\n#[derive(Debug, Deserialize)]\npub struct MultiUnits {\n    metric: UnitInfo,\n    imperial: UnitInfo,\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(untagged)]\nenum StrOrUnitsObj&lt;'a&gt; {\n    Str(&amp;'a str),\n    UnitsObj(MultiUnits),\n}\n\n#[derive(Debug, Deserialize)]\npub struct MultiUnitParam {\n    name: String,\n    units: MultiUnits,\n}\n\n#[derive(Debug)]\npub enum Param {\n    Single(SingleUnitParam),\n    Multiple(MultiUnitParam),\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Param {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        enum Field {\n            Name,\n            UnitsAsObj,\n            UnitsAsStr,\n        };\n\n        impl&lt;'de&gt; Deserialize&lt;'de&gt; for Field {\n            fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Field, D::Error&gt;\n            where\n                D: Deserializer&lt;'de&gt;,\n            {\n                struct FieldVisitor;\n\n                impl&lt;'de&gt; Visitor&lt;'de&gt; for FieldVisitor {\n                    type Value = Field;\n\n                    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                        formatter.write_str(\"`Name` or `Units`\")\n                    }\n\n                    fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;Field, E&gt;\n                    where\n                        E: de::Error,\n                    {\n                        match value {\n                            \"Name\" =&gt; Ok(Field::Name),\n                            \"Units\" =&gt; Ok({\n                                let val = StrOrUnitsObj::deserialize(deserializer).unwrap();\n\n                                match val {\n                                    StrOrUnitsObj::Str(s) =&gt; Field::UnitsAsObj,\n                                    StrOrUnitsObj::UnitsObj(obj) =&gt; Field::UnitsAsStr,\n                                }\n                            }),\n                            _ =&gt; Err(de::Error::unknown_field(value, FIELDS)),\n                        }\n                    }\n                }\n\n                deserializer.deserialize_identifier(FieldVisitor)\n            }\n        }\n\n        struct ParamVisitor;\n\n        impl&lt;'de&gt; Visitor&lt;'de&gt; for ParamVisitor {\n            type Value = Param;\n\n            fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                formatter.write_str(\"enum Param\")\n            }\n\n            fn visit_map&lt;V&gt;(self, mut map: V) -&gt; Result&lt;Param, V::Error&gt;\n            where\n                V: MapAccess&lt;'de&gt;,\n            {\n                let mut name = None;\n                let mut units_as_string = None;\n                let mut units_as_object = None;\n                while let Some(key) = map.next_key()? {\n                    match key {\n                        Field::Name =&gt; {\n                            if name.is_some() {\n                                return Err(de::Error::duplicate_field(\"Name\"));\n                            }\n                            name = Some(map.next_value()?);\n                        }\n                        Field::UnitsAsObj =&gt; {\n                            if units_as_object.is_some() {\n                                return Err(de::Error::duplicate_field(\"Units\"));\n                            }\n                            units_as_object = Some(map.next_value()?);\n                        }\n                        Field::UnitsAsStr =&gt; {\n                            if units_as_string.is_some() {\n                                return Err(de::Error::duplicate_field(\"Units\"));\n                            }\n                            units_as_string = Some(map.next_value()?);\n                        }\n                    }\n                }\n                let name = name.ok_or_else(|| de::Error::missing_field(\"Name\"))?;\n                if let Some(units_as_object) = units_as_object {\n                    Ok(Param::Multiple(MultiUnitParam {\n                        name: name,\n                        units: units_as_object,\n                    }))\n                } else {\n                    let units_as_string =\n                        units_as_string.ok_or_else(|| de::Error::missing_field(\"Units\"))?;\n                    Ok(Param::Single(SingleUnitParam {\n                        name: name,\n                        units: units_as_string,\n                    }))\n                }\n            }\n        }\n\n        const FIELDS: &amp;'static [&amp;'static str] = &amp;[\"Name\", \"Units\"];\n        deserializer.deserialize_struct(\"Param\", FIELDS, ParamVisitor)\n    }\n}\n\nfn main() {\n    let json_raw = r#\"[\n            { \"Name\": \"a single unit param\", \"Units\": \"m/s\" },\n            { \"Name\": \"a multi unit param\", \"Units\": { \"Metric\": { \"Units\": \"m/s\" }, \"Imperial\": { \"Units\": \"ft/s\" } } }\n        ]\"#;\n    let j: Vec&lt;Param&gt; = serde_json::from_str(&amp;json_raw).unwrap();\n    match &amp;j[0] {\n        Param::Single(p) =&gt; {\n            assert_eq!(p.name, \"a single unit param\");\n            assert_eq!(p.units, \"m/s\");\n        }\n        Param::Multiple(_p) =&gt; panic!(\"Expected SingleUnitParam, actual MultiUnitParam\"),\n    }\n    match &amp;j[1] {\n        Param::Single(_p) =&gt; panic!(\"Expected MultiUnitParam, actual SingleUnitParam\"),\n        Param::Multiple(p) =&gt; {\n            assert_eq!(p.name, \"a multi unit param\");\n            assert_eq!(p.units.metric.units, \"m/s\");\n            assert_eq!(p.units.imperial.units, \"ft/s\");\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=464bbe726bb193e97caa6e9cafea56bc\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0434]: can't capture dynamic environment in a fn item\n  --&gt; src/main.rs:74:70\n   |\n74 |                                 let val = StrOrUnitsObj::deserialize(deserializer).unwrap();\n   |                                                                      ^^^^^^^^^^^^\n   |\n   = help: use the `|| { ... }` closure form instead\n</code></pre>\n\n<p>Is there a better way I can return a different <code>Field</code> result for a JSON key based on the JSON value type? Am I on the right track?</p>\n\n<pre><code>fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;Field, E&gt;\nwhere\n    E: de::Error,\n{\n    match value {\n        \"Name\" =&gt; Ok(Field::Name),\n        \"Units\" =&gt; Ok({\n            let val = StrOrUnitsObj::deserialize(deserializer).unwrap();\n\n            match val {\n                StrOrUnitsObj::Str(s) =&gt; {\n                    Field::UnitsAsObj\n                },\n                StrOrUnitsObj::UnitsObj(obj) =&gt; {\n                    Field::UnitsAsStr\n                }\n            }\n        }),\n        _ =&gt; Err(de::Error::unknown_field(value, FIELDS)),\n    }\n}\n</code></pre>\n"}, {"tags": ["compiler-errors", "rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 51, "user_id": 1675735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b733b91516c6dcdfbc4e0e67cdf84bc4?s=128&d=identicon&r=PG", "display_name": "Nikita Moshensky", "link": "https://stackoverflow.com/users/1675735/nikita-moshensky"}, "edited": false, "score": 1, "creation_date": 1596529343, "post_id": 56602123, "comment_id": 111832463, "body": "Had similar issues under macos. I just had to adjust paths a bit."}], "tags": [], "owner": {"reputation": 445, "user_id": 2188655, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cCV6m.jpg?s=128&g=1", "display_name": "Vince Pike", "link": "https://stackoverflow.com/users/2188655/vince-pike"}, "is_accepted": false, "score": 8, "last_activity_date": 1560529954, "creation_date": 1560529954, "answer_id": 56602123, "question_id": 56602101, "link": "https://stackoverflow.com/questions/56602101/i-cant-get-cross-compiling-from-ubuntu-to-windows-working/56602123#56602123", "title": "I Can&#39;t Get Cross Compiling From Ubuntu To Windows Working", "body": "<h2>If you receive messages about an undefined reference to</h2>\n\n<p>__onexitbegin` or something similar, you may have an older version of crt2.o, instead of the version that ming has available to it. I did! (running on stable rust 1.35).  </p>\n\n<p>Try this in your terminal and see if it helps:</p>\n\n<pre class=\"lang-bash prettyprint-override\"><code>cd ~/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/\n\nmv crt2.o crt2.o.bak\n\ncp /usr/x86_64-w64-mingw32/lib/crt2.o ./\n</code></pre>\n\n<p>Your executable should now be built for windows.</p>\n"}], "owner": {"reputation": 445, "user_id": 2188655, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cCV6m.jpg?s=128&g=1", "display_name": "Vince Pike", "link": "https://stackoverflow.com/users/2188655/vince-pike"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 831, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1560529954, "creation_date": 1560529847, "question_id": 56602101, "link": "https://stackoverflow.com/questions/56602101/i-cant-get-cross-compiling-from-ubuntu-to-windows-working", "title": "I Can&#39;t Get Cross Compiling From Ubuntu To Windows Working", "body": "<p>I Want To Cross Compile Some Rust Code from Ubuntu to Windows, and receive an error about onexitbegin.</p>\n\n<p>Tried to follow various suggestions, but they don't have my specific error message: \n    crt2.o:crtexe.c:  (.rdata$.refptr.__onexitend[.refptr.__onexitend]+0x0): undefined reference to `__onexitend'\n          collect2: error: ld returned 1 exit status</p>\n\n<pre><code>cargo build --release --target x86_64-pc-windows-gnu\n</code></pre>\n\n<p>Expected to get something built, but it blows up.\nThe output says this: \n/usr/bin/x86_64-w64-mingw32-ld: /home/vince/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/crt2.o:crtexe.c:(.rdata$.refptr.__onexitbegin[.refptr.__onexitbegin]+0x0): undefined reference to <code>__onexitbegin'\n          /usr/bin/x86_64-w64-mingw32-ld: /home/vince/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/lib/crt2.o:crtexe.c:(.rdata$.refptr.__onexitend[.refptr.__onexitend]+0x0): undefined reference to</code>__onexitend'</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1560524330, "last_edit_date": 1560524330, "creation_date": 1560522542, "answer_id": 56600198, "question_id": 56600021, "link": "https://stackoverflow.com/questions/56600021/how-to-clone-a-boxcustomstruct-when-i-keep-getting-no-method-named-clone/56600198#56600198", "title": "How to clone a Box&lt;CustomStruct&gt; when I keep getting &quot;no method named clone&quot;?", "body": "<p>A reproduction of the error:</p>\n\n<pre><code>#[derive(Clone)]\npub struct Node&lt;T&gt; {\n    pub next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    pub value: T,\n}\n\nfn thing&lt;T&gt;(node: Node&lt;T&gt;) {\n    node.clone();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `clone` found for type `Node&lt;T&gt;` in the current scope\n --&gt; src/lib.rs:8:10\n  |\n2 | pub struct Node&lt;T&gt; {\n  | ------------------ method `clone` not found for this\n...\n8 |     node.clone();\n  |          ^^^^^\n  |\n  = note: the method `clone` exists but the following trait bounds were not satisfied:\n          `Node&lt;T&gt; : std::clone::Clone`\n  = help: items from traits can only be used if the trait is implemented and in scope\n  = note: the following trait defines an item `clone`, perhaps you need to implement it:\n          candidate #1: `std::clone::Clone`\n</code></pre>\n\n<p>You need to add a trait bound that says that <code>T</code> implements <code>Clone</code>:</p>\n\n<pre><code>fn thing&lt;T&gt;(node: Node&lt;T&gt;)\nwhere\n    T: Clone,\n{\n    node.clone();\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/39415052/155423\">Deriving a trait results in unexpected compiler error, but the manual implementation works</a></li>\n</ul>\n\n<hr>\n\n<p>Your code has numerous non-idiomatic aspects:</p>\n\n<ul>\n<li>unneeded import of <code>std::boxed::Box</code></li>\n<li>unneeded <code>unwrap</code>s</li>\n<li>unneeded dereferences.</li>\n</ul>\n\n<p>You don't even need clone here, and it's probably incorrect to use it. I'd write:</p>\n\n<pre><code>pub fn push_back(&amp;mut self, data: T)\nwhere\n    T: Clone,\n{\n    let spot = match &amp;mut self.head {\n        Some(head) =&gt; {\n            let mut node = &amp;mut head.next;\n            while let Some(n) = node {\n                node = &amp;mut n.next;\n            }\n            node\n        }\n        None =&gt; &amp;mut self.head,\n    };\n\n    *spot = Some(Box::new(Node::new(data)));\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/43976787/155423\">Adding an append method to a singly linked list</a></li>\n</ul>\n"}], "owner": {"reputation": 21, "user_id": 8282927, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-dtOZoF0qjSo/AAAAAAAAAAI/AAAAAAAAAA8/dN9VU_2lzNQ/photo.jpg?sz=128", "display_name": "Jason Liu", "link": "https://stackoverflow.com/users/8282927/jason-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 954, "favorite_count": 0, "accepted_answer_id": 56600198, "answer_count": 1, "score": 0, "last_activity_date": 1560524330, "creation_date": 1560521880, "last_edit_date": 1560523737, "question_id": 56600021, "link": "https://stackoverflow.com/questions/56600021/how-to-clone-a-boxcustomstruct-when-i-keep-getting-no-method-named-clone", "title": "How to clone a Box&lt;CustomStruct&gt; when I keep getting &quot;no method named clone&quot;?", "body": "<p>I want to clone <code>head</code> which is a <code>Box&lt;Node&lt;T&gt;&gt;</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut node = Some((*head).clone());\n</code></pre>\n\n<p>Here is the full code (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b6d1378cca1608335a84924bc6529124\" rel=\"nofollow noreferrer\">playground</a>): </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::boxed::Box;\n\npub struct List&lt;T&gt; {\n    pub head: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    pub size: u64,\n}\n\nimpl&lt;T&gt; List&lt;T&gt; {\n    pub fn new() -&gt; List&lt;T&gt; {\n        return List {\n            head: Option::None,\n            size: 0,\n        };\n    }\n\n    pub fn push_back(&amp;mut self, data: T) {\n        match &amp;self.head {\n            Some(head) =&gt; {\n                let mut node = Some((*head).clone());\n                while (*(node).unwrap()).next.is_some() {\n                    node = (*node.unwrap()).next;\n                }\n                node.unwrap().next = Some(Box::new(Node::new(data)));\n            }\n            None =&gt; {\n                self.head = Some(Box::new(Node::new(data)));\n            }\n        }\n    }\n}\n\n#[derive(Clone)]\npub struct Node&lt;T&gt; {\n    pub next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    pub value: T,\n}\n\nimpl&lt;T&gt; Node&lt;T&gt; {\n    pub fn new(v: T) -&gt; Node&lt;T&gt; {\n        Node {\n            next: Option::None,\n            value: v,\n        }\n    }\n}\n</code></pre>\n\n<p>The compiler keeps saying the method <code>clone</code> exists but the following trait bounds were not satisfied:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `clone` found for type `std::boxed::Box&lt;Node&lt;T&gt;&gt;` in the current scope\n  --&gt; src/lib.rs:19:45\n   |\n19 |                 let mut node = Some((*head).clone());\n   |                                             ^^^^^\n   |\n   = note: the method `clone` exists but the following trait bounds were not satisfied:\n           `Node&lt;T&gt; : std::clone::Clone`\n           `std::boxed::Box&lt;Node&lt;T&gt;&gt; : std::clone::Clone`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `clone`, perhaps you need to implement it:\n           candidate #1: `std::clone::Clone`\n</code></pre>\n\n<p>I tried to add <code>#[derive(Clone)]</code> but it still doesn't work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone)]\npub struct Node&lt;T&gt; {\n    pub next: Option&lt;Box&lt;Node&lt;T&gt;&gt;&gt;,\n    pub value: T\n}\n</code></pre>\n\n<p>How can I do this? </p>\n"}, {"tags": ["user-interface", "rust", "gtk"], "comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1560500891, "post_id": 56593813, "comment_id": 99765224, "body": "<i>&quot;Questions asking us to recommend or find a book, tool, software library, tutorial or other off-site resource are off-topic for Stack Overflow as they tend to attract opinionated answers and spam. Instead, describe the problem and what has been done so far to solve it.&quot;</i>"}, {"owner": {"reputation": 2154, "user_id": 3763264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f43c767b10ee2ee9aa75680bf7377779?s=128&d=identicon&r=PG&f=1", "display_name": "Finomnis", "link": "https://stackoverflow.com/users/3763264/finomnis"}, "edited": false, "score": 1, "creation_date": 1560504083, "post_id": 56593813, "comment_id": 99766751, "body": "<a href=\"https://github.com/GuillaumeGomez/process-viewer\" rel=\"nofollow noreferrer\">process-viewer</a> uses gtk-rs and draws real time graphs, maybe you can use its code as guideline"}, {"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "edited": false, "score": 0, "creation_date": 1560622009, "post_id": 56593813, "comment_id": 99800455, "body": "Process-viewer looks like a very interesting example. I&#39;ll dig into it.Thank you."}], "answers": [{"comments": [{"owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "edited": false, "score": 1, "creation_date": 1560621421, "post_id": 56594106, "comment_id": 99800324, "body": "Thank you for link. I was their, unfortunately, all examples I found was centered around GUI itself (buttons, widgets), etc. There was no examples of a canvas-style 2D drawing, I start thinking I just don&#39;t know how this &#39;thing&#39; is called at GTK (So, here is my question)."}], "tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": false, "score": 1, "last_activity_date": 1560500048, "creation_date": 1560500048, "answer_id": 56594106, "question_id": 56593813, "link": "https://stackoverflow.com/questions/56593813/canvas-for-pixel-drawing-in-gtk3-gtk-rs/56594106#56594106", "title": "canvas for pixel drawing in GTK3 (gtk-rs)", "body": "<p>For the examples you can generally check the documentation page of the crate itself. There are examples shown in crate documentation.</p>\n\n<p>You can check the documentation of the crate from <a href=\"http://gtk-rs.org/docs/gtk/index.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>You can draw your shapes on to the drawing area which is shown as example <a href=\"http://gtk-rs.org/docs/gtk/struct.DrawingArea.html\" rel=\"nofollow noreferrer\">here</a> on the documentation itself</p>\n\n<p>As far as I have seen, it is pretty much ported with same function and struct names for GTK 3.0.</p>\n\n<blockquote>\n  <p>I need keywords to Google</p>\n</blockquote>\n\n<p>You can basically google for the <strong><em>GTK</em></strong> library itself and the examples to get the insight about GTK and the easily implement with the help of documentation.</p>\n\n<p><a href=\"https://developer.gnome.org/gtk3/stable/gtk-getting-started.html\" rel=\"nofollow noreferrer\">Getting started with GTK 3.0</a></p>\n"}], "owner": {"reputation": 4710, "user_id": 2281274, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/sHobc.gif?s=128&g=1", "display_name": "George Shuklin", "link": "https://stackoverflow.com/users/2281274/george-shuklin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 365, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1560500048, "creation_date": 1560498873, "question_id": 56593813, "link": "https://stackoverflow.com/questions/56593813/canvas-for-pixel-drawing-in-gtk3-gtk-rs", "title": "canvas for pixel drawing in GTK3 (gtk-rs)", "body": "<p>I just started to use gtk3, and I overwhelmed. I want to draw a pixel rendering (a function graph, drawn in realtime) in a window. I was able to create a window, following some examples, but I can't find information on pixel drawing. I need keywords to google (is it called 'canvas'? Pixel map? Drawing area?), and some advises on how to do it right. Should I keep a separate buffer and do copy every time I need to update window? Or can I just draw into existing gtk object?</p>\n"}, {"tags": ["haskell", "rust"], "comments": [{"owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "edited": false, "score": 3, "creation_date": 1560490697, "post_id": 56591730, "comment_id": 99761000, "body": "Seems that Rust&#39;s <code>scan</code> isn&#39;t quite the equivalent to Haskell&#39;s <code>scanl</code>; they had to ammend the documentation since it <a href=\"https://github.com/rust-lang/rust/pull/49353/commits/f198b0acf512458bdbe5079d12414ff94b03f7ac\" rel=\"nofollow noreferrer\">confused people</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560500885, "post_id": 56591730, "comment_id": 99765221, "body": "&quot;The awkward scan behaviour of having to mutate the accumulator can be explained by a lack of GC. &quot; no"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1560516157, "post_id": 56591730, "comment_id": 99772770, "body": "@Stargateur No? What&#39;s the reason then? The way I see it, if Rust wanted to implement Haskell&#39;s <code>scanl</code>&#39; behavior, the closure would have to clone it&#39;s value because the value needs to go back into the accumulator as well as get returned in a list, and cloning would affect performance. So, the decision of whether to clone was pushed to the user of the API. For numbers, there&#39;s no need, just some awkwardness of <code>*acc += x; Some(*acc)</code>."}, {"owner": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1560526275, "post_id": 56591730, "comment_id": 99778358, "body": "FWIW I have often found it quite annoying that Haskell&#39;s <code>scanl</code> has that extra element on the front. In almost all situations where <code>scanl</code> is actually useful I&#39;ve found myself calling <code>drop 1</code> on the result."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1560530771, "post_id": 56591730, "comment_id": 99780481, "body": "@DanielWagner I can appreciate that perspective. I haven\u2019t had to simply because the formulas I\u2019m implementing use the initial value."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1561235510, "post_id": 56591730, "comment_id": 99999296, "body": "@DanielWagner why not use <code>scanl1</code> then."}, {"owner": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1561238275, "post_id": 56591730, "comment_id": 99999824, "body": "@WillNess Because its type is too restrictive: the accumulator and the list element type must match."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1561276066, "post_id": 56591730, "comment_id": 100004591, "body": "@DanielWagner exactly; but that is what you get when prepending the initial element to the input list, just the same. I thought that was what you meant, from the conversation&#39;s context. the OP thought so too, it seems."}, {"owner": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1561323291, "post_id": 56591730, "comment_id": 100015098, "body": "@WillNess You say &quot;that is what you get&quot;. What is &quot;that&quot;? You say &quot;the initial element&quot;. What is the initial element? I don&#39;t really understand what you&#39;re objecting to or why you think the OP misunderstood me."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 126907, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1561329081, "post_id": 56591730, "comment_id": 100016134, "body": "@DanielWagner I&#39;m not objecting to anything. It was a misunderstanding on my part. By &quot;you&quot; I meant &quot;we&quot; i.e. a generic user. the OP <a href=\"https://stackoverflow.com/questions/56591730/how-do-i-replicate-haskells-scanl-0-xs-in-rust#comment99780481_56591730\">said</a> they &quot;use the initial value&quot; (the <code>x</code> in <code>scanl g x xs</code>) (in response to your preceding comment) which I took as being contrasted with you supposedly not using it? that&#39;s how I understood their comment, and by consequence, yours. So I erroneously thought you meant <code>scanl1 g (x:xs)</code> instead, which doesn&#39;t even make much sense to me now."}], "answers": [{"comments": [{"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1560492398, "post_id": 56591982, "comment_id": 99761562, "body": "instead of <code>res[res.len() - 1]</code> one could use <code>res.last().unwrap()</code>, which makes the intention more clear imho"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1560519178, "post_id": 56591982, "comment_id": 99774458, "body": "Thanks. Using <code>fold</code> with a vector certainly works, but circumvents the whole purpose of the <code>scan</code> function."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1560549551, "post_id": 56591982, "comment_id": 99787288, "body": "@Listerone Yes this approach mimics the scan&#39;s intermediate form but not in a lazily way.It would be a better composition integrating successors to my generic approach."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": false, "score": 9, "last_activity_date": 1561233161, "last_edit_date": 1561233161, "creation_date": 1560490672, "answer_id": 56591982, "question_id": 56591730, "link": "https://stackoverflow.com/questions/56591730/how-do-i-replicate-haskells-scanl-0-xs-in-rust/56591982#56591982", "title": "How do I replicate Haskell&#39;s `scanl (+) 0 xs` in Rust?", "body": "<h2>Edit :</h2>\n\n<p>Despite the old version of this answer mimics the behavior of <code>scanl</code>'s intermediate form, the execution wasn't lazy. Updated the generic implementation from my old answer with <a href=\"https://stackoverflow.com/a/56593816/1601571\">@French Boiethios's answer</a>. </p>\n\n<p>This is the implementation :</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn scanl&lt;'u, T, F&gt;(op: F, initial: T, list: &amp;'u [T]) -&gt; impl Iterator&lt;Item = T&gt; + 'u\nwhere\n    F: Fn(&amp;T, &amp;T) -&gt; T + 'u,\n{\n    let mut iter = list.iter();\n    std::iter::successors(Some(initial), move |acc| iter.next().map(|n| op(n, acc)))\n}\n//scanl(|x, y| x + y, 0, &amp;[1, 2, 3, 4, 5]).collect::&lt;Vec&lt;_&gt;&gt;()\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=18dffab413c6adc57a307a3bd5b4ada7\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>It can be easily implemented by a <code>fold</code> </p>\n\n<p>For an <code>Add</code> operation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let result = xs.iter().fold(vec![0], |mut acc, val| {\n    acc.push(val + acc.last().unwrap());\n    acc\n});\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9913ba0a67b3ed0eb3155a555e5ab76a\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<hr>\n\n<p>Here is the generic version : </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn scanl&lt;T, F&gt;(op: F, initial: T, list: &amp;[T]) -&gt; Vec&lt;T&gt;\nwhere\n    F: Fn(&amp;T, &amp;T) -&gt; T,\n{\n    let mut acc = Vec::with_capacity(list.len());\n    acc.push(initial);\n\n    list.iter().fold(acc, |mut acc, val| {\n        acc.push(op(val, acc.last().unwrap()));\n        acc\n    })\n}\n//scanl(|x, y| x + y, 0, &amp;[1, 2, 3, 4, 5])\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=720ebfbf2174a0a49b09992bf6324db4\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560499052, "post_id": 56593816, "comment_id": 99764450, "body": "That&#39;s not as concise and pure as Haskell, tho :P"}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1560524736, "post_id": 56593816, "comment_id": 99777540, "body": "Thanks. It&#39;s not an issue of being concise. It&#39;s the semantics. I rather like this solution, actually."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1560524944, "post_id": 56593816, "comment_id": 99777661, "body": "@Listerone <code>successors</code> is maybe the best iterator-related feature in the std lib."}, {"owner": {"reputation": 325, "user_id": 10067591, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AzqYZ.png?s=128&g=1", "display_name": "ObliqueMotion", "link": "https://stackoverflow.com/users/10067591/obliquemotion"}, "edited": false, "score": 1, "creation_date": 1560533438, "post_id": 56593816, "comment_id": 99781588, "body": "There is no need to put this into a vector, and then turn it into an iterator. Just use the range syntax.  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bdea2432d1155021fff86c0ac0e7aeb9\" rel=\"nofollow noreferrer\">playground</a>"}], "tags": [], "owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "is_accepted": true, "score": 7, "last_activity_date": 1560500067, "last_edit_date": 1560500067, "creation_date": 1560498884, "answer_id": 56593816, "question_id": 56591730, "link": "https://stackoverflow.com/questions/56591730/how-do-i-replicate-haskells-scanl-0-xs-in-rust/56593816#56593816", "title": "How do I replicate Haskell&#39;s `scanl (+) 0 xs` in Rust?", "body": "<p>I would do that with <a href=\"https://doc.rust-lang.org/std/iter/fn.successors.html\" rel=\"noreferrer\"><code>successors</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut xs = vec![1, 2, 3, 4, 5].into_iter();\n    let vs = std::iter::successors(Some(0), |acc| xs.next().map(|n| n + *acc));\n\n    assert_eq!(vs.collect::&lt;Vec&lt;_&gt;&gt;(), [0, 1, 3, 6, 10, 15]);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 2, "last_activity_date": 1560519874, "last_edit_date": 1560519874, "creation_date": 1560519498, "answer_id": 56599373, "question_id": 56591730, "link": "https://stackoverflow.com/questions/56591730/how-do-i-replicate-haskells-scanl-0-xs-in-rust/56599373#56599373", "title": "How do I replicate Haskell&#39;s `scanl (+) 0 xs` in Rust?", "body": "<blockquote>\n  <p>The awkward scan behaviour of having to mutate the accumulator can be explained by a lack of GC.</p>\n</blockquote>\n\n<p>There is nothing preventing Rust from doing what you ask.</p>\n\n<p>Example of possible implementation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Mapscan&lt;I, A, F&gt; {\n    accu: Option&lt;A&gt;,\n    iter: I,\n    f: F,\n}\n\nimpl&lt;I, A, F&gt; Mapscan&lt;I, A, F&gt; {\n    pub fn new(iter: I, accu: Option&lt;A&gt;, f: F) -&gt; Self {\n        Self { iter, accu, f }\n    }\n}\n\nimpl&lt;I, A, F&gt; Iterator for Mapscan&lt;I, A, F&gt;\nwhere\n    I: Iterator,\n    F: FnMut(&amp;A, I::Item) -&gt; Option&lt;A&gt;,\n{\n    type Item = A;\n\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        self.accu.take().map(|accu| {\n            self.accu = self.iter.next().and_then(|item| (self.f)(&amp;accu, item));\n            accu\n        })\n    }\n}\n\ntrait IterPlus: Iterator {\n    fn map_scan&lt;A, F&gt;(self, accu: Option&lt;A&gt;, f: F) -&gt; Mapscan&lt;Self, A, F&gt;\n    where\n        Self: Sized,\n        F: FnMut(&amp;A, Self::Item) -&gt; Option&lt;A&gt;,\n    {\n        Mapscan::new(self, accu, f)\n    }\n}\n\nimpl&lt;T: ?Sized&gt; IterPlus for T where T: Iterator {}\n\nfn main() {\n    let xs = [1, 2, 3, 4, 5];\n\n    let vs = xs\n        .iter()\n        .map_scan(Some(0), |acc, x| Some(acc + x));\n\n    assert_eq!(vs.collect::&lt;Vec&lt;_&gt;&gt;(), [0, 1, 3, 6, 10, 15]);\n}\n</code></pre>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 442, "favorite_count": 0, "accepted_answer_id": 56593816, "answer_count": 3, "score": 7, "last_activity_date": 1561233161, "creation_date": 1560489179, "last_edit_date": 1560499209, "question_id": 56591730, "link": "https://stackoverflow.com/questions/56591730/how-do-i-replicate-haskells-scanl-0-xs-in-rust", "title": "How do I replicate Haskell&#39;s `scanl (+) 0 xs` in Rust?", "body": "<p>If I have an list of numbers <code>[1, 2, 3, 4, 5]</code> and I wanted to generate a cumulative sum list, in Haskell I would do the following:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>&gt; let xs = [1, 2, 3, 4, 5]\n\n&gt; scanl (+) 0 xs\n[0,1,3,6,10,15]\n</code></pre>\n\n<p>Trying to get this same behaviour seems unnecessarily troublesome in Rust.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let xs = [1, 2, 3, 4, 5];\n\nlet vs = vec![0]\n    .into_iter()\n    .chain(xs.iter().scan(0, |acc, x| {\n        *acc += x;\n        Some(*acc)\n    }))\n    .collect::&lt;Vec&lt;_&gt;&gt;();\n</code></pre>\n\n<p>The awkward <code>scan</code> behaviour of having to mutate the accumulator can be explained by a lack of GC. But, <code>scan</code> also does not include the initial accumulator value, necessitating the need to manually prepend a 0 at the front. This itself was troublesome, as I needed to prepend it with <code>chain</code> and <code>[0].iter()</code> didn't work, nor did <code>[0].into_iter()</code> and <code>vec![0].iter()</code>. It needed <code>vec![0].into_iter()</code>. </p>\n\n<p>I feel like I must be doing something wrong here. But, what? Is there a better way to generate a cumulative sum? Is it back to a <code>for</code> loop?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 1, "creation_date": 1560516878, "post_id": 56590848, "comment_id": 99773172, "body": "I did read the docs, but I believed it would work indeed as a single field and not a struct"}, {"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 0, "creation_date": 1560517617, "post_id": 56590848, "comment_id": 99773606, "body": "<code>Deref</code> is just perfect in my case. Thanks!"}, {"owner": {"reputation": 3869, "user_id": 559552, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fY01B.jpg?s=128&g=1", "display_name": "solartic", "link": "https://stackoverflow.com/users/559552/solartic"}, "edited": false, "score": 0, "creation_date": 1568127188, "post_id": 56590848, "comment_id": 102171622, "body": "I think it&#39;s a fair question. I think the question hints that the OP read the documentation but merely came to some wrong conclusions about the usage. Otherwise, great response."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3869, "user_id": 559552, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fY01B.jpg?s=128&g=1", "display_name": "solartic", "link": "https://stackoverflow.com/users/559552/solartic"}, "edited": false, "score": 0, "creation_date": 1568128557, "post_id": 56590848, "comment_id": 102172388, "body": "@solartic I also think it&#39;s a valid question (which is why I answered it). My opinion is that <code>repr(transparent)</code> is something that you are unlikely to stumble on; there&#39;s not going to be a bunch of documentation or blog posts talking about it to lead people down the path of thinking thy should use it. To me, this means that you have to go looking for <code>repr(...)</code> to start with, presumably by looking to solve a specific problem (not the one indicated by the OP). That&#39;s why I have such a surprise that the question was asked in the first place."}, {"owner": {"reputation": 3869, "user_id": 559552, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fY01B.jpg?s=128&g=1", "display_name": "solartic", "link": "https://stackoverflow.com/users/559552/solartic"}, "edited": false, "score": 0, "creation_date": 1568132529, "post_id": 56590848, "comment_id": 102174447, "body": "Looking at it from that perspective I can understand your surprise. Though I was thinking about it from a different perspective. I.E, the OP stumbled across repr(...) in the past (saw it in some source code), and read its documentation and moved on. Only to thinking about it again in the future while trying to solve a problem and thinking it might be a good fit but not fulling understanding its usage. In my case I can see how reading the documentation can lead someone to trying something similar to what the OP did."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1560481154, "creation_date": 1560481154, "answer_id": 56590848, "question_id": 56590513, "link": "https://stackoverflow.com/questions/56590513/reprtransparent-does-not-allow-a-struct-containing-an-array-to-be-treated-like/56590848#56590848", "title": "repr(transparent) does not allow a struct containing an array to be treated like an array", "body": "<p>That's not <em>at all</em> what <code>repr(transparent)</code> is intended for. Frankly, I'm baffled that you found such a niche feature and didn't read <a href=\"https://doc.rust-lang.org/reference/type-layout.html#the-transparent-representation\" rel=\"nofollow noreferrer\">the documentation for it</a>:</p>\n\n<blockquote>\n  <p>Structs with this representation have the same layout and ABI as the single non-zero sized field.</p>\n</blockquote>\n\n<p>This has nothing to do with how the type behaves in the type system, only with how the memory of a value of the type is structured.</p>\n\n<p>What you want to do doesn't even really belong in a strongly typed language. You can't just assign an array to another type <em>because it's another type</em>. With <code>repr(transparent)</code> it's valid to transmute the bits from one to another, but that will <em>never</em> happen automatically.</p>\n\n<p>The better alternative is to implement <code>Deref</code> and <code>From</code> for your type:</p>\n\n<pre><code>use std::ops::Deref;\n\nimpl Deref for CreditCard {\n    type Target = [u8; 16];\n\n    fn deref(&amp;self) -&gt; &amp;Self::Target {\n        &amp;self.0\n    }\n}\n\nimpl From&lt;[u8; 16]&gt; for CreditCard {\n    fn from(other: [u8; 16]) -&gt; Self {\n        CreditCard(other)\n    }\n}\n</code></pre>\n\n<p>Then take any type that can be turned into a <code>CreditCard</code>:</p>\n\n<pre><code>fn process_cc(card: impl Into&lt;CreditCard&gt;) {\n    // do whatever\n    println!(\"processed CC {}\", card.into());\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/45086595/155423\">Is it considered a bad practice to implement Deref for newtypes?</a></li>\n<li><a href=\"https://stackoverflow.com/q/29812530/155423\">When should I implement std::convert::From vs std::convert::Into?</a></li>\n</ul>\n\n<hr>\n\n<p>If you were dead-set on using <code>repr(transparent)</code>, you'd need to do something like:</p>\n\n<pre><code>fn process_cc(card: [u8; 16]) {\n    use std::mem;\n    let card: CreditCard = unsafe { mem::transmute(card) };\n    // do whatever\n    println!(\"processed CC {}\", card);\n}\n</code></pre>\n\n<p>This is generally a <strong>very bad idea</strong> and it's highly likely you should not do this.</p>\n"}], "owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 588, "favorite_count": 0, "accepted_answer_id": 56590848, "answer_count": 1, "score": 0, "last_activity_date": 1560481289, "creation_date": 1560477620, "last_edit_date": 1560481289, "question_id": 56590513, "link": "https://stackoverflow.com/questions/56590513/reprtransparent-does-not-allow-a-struct-containing-an-array-to-be-treated-like", "title": "repr(transparent) does not allow a struct containing an array to be treated like an array", "body": "<p>I need a struct to be treated like an array of 16 unsigned integers, and that passing <code>CreditCard</code> type would be transparent as I would be passing an array of 16 unsigned integers.</p>\n\n<p>How to make this code to work as it was designed to work?</p>\n\n<pre><code>use std::fmt;\n/// Credit Card type\n#[repr(transparent)]\npub struct CreditCard([u8; 16]);\n\nimpl fmt::Display for CreditCard {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(\n            f,\n            \"{}{}{}{}-{}{}{}{}-{}{}{}{}-{}{}{}{}\",\n            self[0],\n            self[1],\n            self[2],\n            self[3],\n            self[4],\n            self[5],\n            self[6],\n            self[7],\n            self[8],\n            self[9],\n            self[10],\n            self[11],\n            self[12],\n            self[13],\n            self[14],\n            self[15]\n        )\n    }\n}\nfn process_cc(card: CreditCard) {\n    // do whatever\n    println!(\"processed CC {}\", card);\n}\nfn main() {\n    let cc: CreditCard = [1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4];\n    println!(\"cc = {}\", cc);\n    let card_data: [u8; 16] = [1, 2, 3, 4, 2, 2, 2, 2, 9, 8, 7, 6, 5, 5, 5, 5];\n    process_cc(card_data);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c75e0bcf962e7f30e200e39346d9c786\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0608]: cannot index into a value of type `&amp;CreditCard`\n  --&gt; src/main.rs:11:13\n   |\n11 |             self[0],\n   |             ^^^^^^^\n\n...\n\nerror[E0308]: mismatched types\n  --&gt; src/main.rs:38:16\n   |\n38 |     process_cc(card_data);\n   |                ^^^^^^^^^ expected struct `CreditCard`, found array of 16 elements\n   |\n   = note: expected type `CreditCard`\n              found type `[u8; 16]`\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 0, "creation_date": 1560469411, "post_id": 56589771, "comment_id": 99757108, "body": "yeah, looks like <code>repr(transparent)</code> is what I need"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 0, "creation_date": 1560469810, "post_id": 56589771, "comment_id": 99757169, "body": "@Nulik ..or you could use the so called <i>newtype</i> pattern, on which you can implement any kind of trait."}, {"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 0, "creation_date": 1560474763, "post_id": 56589771, "comment_id": 99757992, "body": "hmm, <code>repr(transparrent)</code> is not working , I am getting this error: expected array of 32 elements, found struct <code>Address</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560522866, "post_id": 56589771, "comment_id": 99776370, "body": "<i>You will probably want to add a <code>#[repr(transparent)]</code> to that.</i> \u2014 this is bad advice to give. Almost no one will want to use a layout representation unless they are doing things like <code>mem::transmute</code>. For an example of the fallout of this recommendation, see <a href=\"https://stackoverflow.com/q/56590513/155423\">repr(transparent) does not allow a struct containing an array to be treated like an array</a>."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1560544104, "post_id": 56589771, "comment_id": 99785716, "body": "@hellow @shepmaster I added the recommended changes, I haven&#39;t touched c in a very long time, so I&#39;d forgotten about <code>typedef</code>s. I recommended adding a <code>#[repr(transparent)]</code> because it seemed plausible at the time of writing that there might be padding, so I meant it to save some space, but I guess the compiler usually knows best."}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 4, "last_activity_date": 1560543955, "last_edit_date": 1560543955, "creation_date": 1560469114, "answer_id": 56589771, "question_id": 56589704, "link": "https://stackoverflow.com/questions/56589704/how-to-implement-fmtdisplay-on-custom-type/56589771#56589771", "title": "How to implement fmt::Display on custom type?", "body": "<p>The problem here is that the following does not declare a new type:</p>\n\n<pre><code>pub type Address = [u8; 32];\n</code></pre>\n\n<p>But instead a type alias, which is closer to a c-style typedef. This means that your code gets turned into the following:</p>\n\n<pre><code>impl fmt::Display for [u8; 32] {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        let public_key = sr25519::Public::from_raw(self);\n        let address = public_key.to_ss58check();\n        write!(f,\"{}\",address)\n    }\n}\n</code></pre>\n\n<p>And here, <code>[u8; 32]</code> isn't a local type. \nWhat you probably want to do is use what is called the <a href=\"https://doc.rust-lang.org/rust-by-example/generics/new_types.html\" rel=\"nofollow noreferrer\">newtype</a> pattern. You will probably want to add a <code>#[repr]</code> attribute to that if your type might have some padding.</p>\n"}], "owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 0, "accepted_answer_id": 56589771, "answer_count": 1, "score": 2, "last_activity_date": 1593111419, "creation_date": 1560468514, "last_edit_date": 1593111419, "question_id": 56589704, "link": "https://stackoverflow.com/questions/56589704/how-to-implement-fmtdisplay-on-custom-type", "title": "How to implement fmt::Display on custom type?", "body": "<p>I have this custom type:</p>\n<pre><code>pub type Address = [u8; 32];\n</code></pre>\n<p>I tried implementing <code>fmt::Display</code> for this type:</p>\n<pre><code>impl fmt::Display for Address {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        let public_key = sr25519::Public::from_raw(self);\n        let address = public_key.to_ss58check();\n        write!(f,&quot;{}&quot;,address)\n    }\n}\n</code></pre>\n<p>But I get this compile error:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n   --&gt; core/linix-primitives/src/lib.rs:122:1\n    |\n122 | impl fmt::Display for Address {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n</code></pre>\n<p>I understand that to implement a trait I need to have one of two: either the definition of a <code>type</code> locally or a definition of a <code>trait</code> locally.</p>\n<p>Well, I already defined the type locally:</p>\n<pre><code>pub type Address = [u8; 32];\n</code></pre>\n<p>So why am I getting a compile error?</p>\n"}, {"tags": ["rust", "deserialization", "json-deserialization", "serde"], "comments": [{"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "edited": false, "score": 0, "creation_date": 1560461682, "post_id": 56588808, "comment_id": 99755332, "body": "If you had tried deserializing just one of the tasks, you&#39;d get an error like this: <code>invalid type: integer 1234, expected struct Raw</code>, which is probably more helpful."}, {"owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "reply_to_user": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "edited": false, "score": 0, "creation_date": 1560461813, "post_id": 56588808, "comment_id": 99755359, "body": "I get <code>&quot;data did not match any variant of untagged enum Task&quot;</code> when trying only one of the tasks."}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "edited": false, "score": 0, "creation_date": 1560461874, "post_id": 56588808, "comment_id": 99755375, "body": "Try deserializing one of the specific tasks (e.g. <code>DailyTask</code>) instead of the enum <code>Task</code>."}, {"owner": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "edited": false, "score": 0, "creation_date": 1560462067, "post_id": 56588808, "comment_id": 99755417, "body": "Also worth noting that <a href=\"https://serde.rs/enum-representations.html#untagged\" rel=\"nofollow noreferrer\">the <code>#[serde(untagged)]</code> attribute will always pick the first match</a>. Any <code>WeeklyTask</code> will also match a <code>DailyTask</code>, so you&#39;ll never deserialize as a <code>WeeklyTask</code> the way you&#39;ve written your code."}, {"owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "reply_to_user": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "edited": false, "score": 0, "creation_date": 1560462629, "post_id": 56588808, "comment_id": 99755593, "body": "Oh, thanks. Switching the <code>WeeklyTask</code> and <code>DailyTask</code> order should fix that then. But the <code>invalid type: integer &#39;1234&#39;</code> error doesn&#39;t make sense to me as it should be working the same as in <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=96b3e55d735bbba5d492f5589029bf47\" rel=\"nofollow noreferrer\">this playground</a>."}, {"owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "reply_to_user": {"reputation": 29810, "user_id": 423170, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/H9kNQ.png?s=128&g=1", "display_name": "Frxstrem", "link": "https://stackoverflow.com/users/423170/frxstrem"}, "edited": false, "score": 0, "creation_date": 1560528750, "post_id": 56588808, "comment_id": 99779627, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/37561593/how-can-i-use-serde-with-a-json-array-with-different-objects-for-successes-and-e\">How can I use Serde with a JSON array with different objects for successes and errors?</a>"}], "owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 802, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1560473950, "creation_date": 1560461361, "last_edit_date": 1560473950, "question_id": 56588808, "link": "https://stackoverflow.com/questions/56588808/serde-json-deserialize-different-objects-in-array", "title": "serde json deserialize different objects in array", "body": "<p>Building off of <a href=\"https://stackoverflow.com/questions/56582722/serde-json-deserialize-any-number\">my question</a> earlier, I now need to deserialize an array of different objects. There's an <a href=\"https://stackoverflow.com/questions/55387434/deserialize-json-array-of-different-types\">existing question</a> for exactly this situation, but it's not for serde.</p>\n\n<pre><code>use serde::{Deserialize, Deserializer};\nuse serde_json;\n\n#[derive(Debug)]\nstruct Duration {\n    secs: u64,\n    nanos: u32,\n}\n\n#[derive(Deserialize)]\nstruct Raw&lt;'a&gt; {\n    #[serde(borrow)]\n    secs: StrOrNum&lt;'a&gt;,\n}\n\n#[derive(Deserialize)]\n#[serde(untagged)]\nenum StrOrNum&lt;'a&gt; {\n    Str(&amp;'a str),\n    Num(u64),\n    Decimal(f64),\n}\n\n#[derive(Debug, Deserialize)]\nstruct DailyTask {\n    name: String,\n    duration: Duration,\n}\n\n#[derive(Debug, Deserialize)]\nstruct WeeklyTask {\n    name: String,\n    duration: Duration,\n    priority: u8,\n}\n\n#[derive(Debug, Deserialize)]\n#[serde(untagged)]\nenum Task {\n    Daily(DailyTask),\n    Weekly(WeeklyTask),\n}\n\n#[derive(Debug, Deserialize)]\nstruct Tasks {\n    tasks: Vec&lt;Box&lt;Task&gt;&gt;,\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Duration {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        let raw = Raw::deserialize(deserializer)?;\n\n        match raw.secs {\n            StrOrNum::Str(s) =&gt; {\n                if s.parse::&lt;f64&gt;().is_ok() {\n                    let mut p = s.splitn(2, \".\").fuse();\n                    let secs = p.next().map_or(0, |s| s.parse().unwrap_or(0));\n                    let frac = p.next().map_or(0, |s| s.parse().unwrap_or(0));\n                    let nanos = frac.to_string().len() as u32;\n                    let secs = secs * 10_u64.pow(nanos) + frac;\n                    Ok(Duration { secs, nanos })\n                } else {\n                    Err(serde::de::Error::custom(format!(\"Not a valid decimal: \\\"{}\\\"\", s)))\n                }\n            }\n            StrOrNum::Num(secs) =&gt; Ok(Duration { secs, nanos: 0 }),\n            StrOrNum::Decimal(secs) =&gt; {\n                Ok(Duration { secs: secs as u64, nanos: 0 })\n            },\n        }\n    }\n}\n\nfn main() {\n    let json_raw = r#\"{\n        \"tasks\": [\n            {\n                \"name\": \"go to sleep\",\n                \"duration\": 1234\n            },\n            {\n                \"name\": \"go to work\",\n                \"duration\": \"98.7\"\n            },\n            {\n                \"name\": \"do that important thing\",\n                \"duration\": 56.78,\n                \"priority\": 10\n            }\n        ]\n    }\"#;\n    let j: Tasks = serde_json::from_str(&amp;json_raw).unwrap();\n    println!(\"{:?}\", j);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a71f95b9fa6a0a593f66b84eaaf2f303\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>I'm not sure what I'm getting wrong. Is there a simple solution for this too, or do I need to implement a custom <code>Deserialize</code> for <code>enum Task</code> somehow?</p>\n"}, {"tags": ["rust", "hashmap", "updating"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560467189, "post_id": 56588085, "comment_id": 99756664, "body": "the first version is a lot better, it will not panic if the key is not present."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560489140, "post_id": 56588085, "comment_id": 99760546, "body": "@Stargateur it also never panics on second, it is effectively safe because of the previous line but more error prone ofc"}], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560467109, "post_id": 56588433, "comment_id": 99756643, "body": "hashmap should not even implement Index according to index rule to cost O(1), that for example why string doesn&#39;t implement index."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1560468100, "post_id": 56588433, "comment_id": 99756858, "body": "@Stargateur what makes you think that?  In theory accessing, inserting, and removing elements of a hash table have the average time complexity of O(1) and the worst case is O(n).  Space complexity on the other hand is O(n)."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1560468615, "post_id": 56588433, "comment_id": 99756956, "body": "<code>O(1)</code> != <code>O(1)~</code> I don&#39;t like people always think access hashmap is <code>O(1)</code>, this simplify the problem too much and cause people to forget hashmap have a cost, and miss use it. Also, use index notation for hashmap can make it panic. Not very good too. Rust std break their own rule of index is O(1) by implementing index for hashmap."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1560468730, "post_id": 56588433, "comment_id": 99756979, "body": "You are comparing apples to pears.  Hash table is indeed O(1): <a href=\"https://en.wikipedia.org/wiki/Hash_table\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Hash_table</a>"}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": false, "score": 2, "last_activity_date": 1560463340, "last_edit_date": 1560463340, "creation_date": 1560459234, "answer_id": 56588433, "question_id": 56588085, "link": "https://stackoverflow.com/questions/56588085/why-is-it-not-possible-to-update-a-value-in-a-hashmap-using-bracket-notation/56588433#56588433", "title": "Why is it not possible to update a value in a HashMap using bracket [ ] notation?", "body": "<p>In Rust the operators can be overloaded by the <a href=\"https://doc.rust-lang.org/std/ops/index.html\" rel=\"nofollow noreferrer\">standard operator traits</a>.  The <em>index</em> operator (or sometimes called as <em>subscript</em> operator) has two flavours: <a href=\"https://doc.rust-lang.org/std/ops/trait.Index.html\" rel=\"nofollow noreferrer\"><code>Index</code></a> and <a href=\"https://doc.rust-lang.org/std/ops/trait.IndexMut.html\" rel=\"nofollow noreferrer\"><code>IndexMut</code></a>.  If you are looking at the documentation of the <a href=\"https://doc.rust-lang.org/std/collections/struct.HashMap.html\" rel=\"nofollow noreferrer\"><code>HashMap</code></a> it only implements the former, thus it cannot modify the returned referenced value.</p>\n"}], "owner": {"reputation": 59, "user_id": 9410258, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a87f05447613701a7c44f24ec65b83c?s=128&d=identicon&r=PG&f=1", "display_name": "niilz", "link": "https://stackoverflow.com/users/9410258/niilz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 497, "favorite_count": 0, "closed_date": 1560480163, "answer_count": 1, "score": 2, "last_activity_date": 1560480372, "creation_date": 1560457460, "last_edit_date": 1560480372, "question_id": 56588085, "link": "https://stackoverflow.com/questions/56588085/why-is-it-not-possible-to-update-a-value-in-a-hashmap-using-bracket-notation", "closed_reason": "Duplicate", "title": "Why is it not possible to update a value in a HashMap using bracket [ ] notation?", "body": "<p>I wrote a \"count all character occurrences in a string\" function with Rust, but updating/adding to the values does not work with bracket notation.\nWhy is that?</p>\n\n<p>What works is this:</p>\n\n<pre><code>use std::collections::HashMap;\n\nfn main() {\n    let myString = \"Go ahead and count all my characters\";\n\n    let mut myMap = HashMap::new();\n\n    for ch in myString.chars() {\n        *myMap.entry(ch).or_insert(0) += 1;\n    }\n}\n</code></pre>\n\n<p>What does NOT work is:</p>\n\n<pre><code>for ch in myString.chars() {\n    myMap.entry(ch).or_insert(0);\n    *myMap[&amp;ch] += 1;\n}\n</code></pre>\n\n<p>In the latter case, the compiler complains:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0614]: type `{integer}` cannot be dereferenced\n  --&gt; src/main.rs:10:9\n   |\n10 |         *myMap[&amp;ch] += 1;\n   |         ^^^^^^^^^^^\n</code></pre>\n\n<p>This makes sense because they are copied and stored on the stack (if I understand correctly), but you also cannot add 1 to them if you do not try do dereference the value. It looks like the first version is the only option I have; is that correct? Why does it work there?</p>\n"}, {"tags": ["rust", "substrate"], "answers": [{"comments": [{"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 0, "creation_date": 1585770401, "post_id": 60956422, "comment_id": 107883562, "body": "I know all this stuff already. And if we speak about &quot;shoulds&quot;, I think Parity should provide more flexible framework because if I need the private key, then I have a good reason to need it."}], "tags": [], "owner": {"reputation": 9, "user_id": 7482953, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zuz3W.jpg?s=128&g=1", "display_name": "Nicole", "link": "https://stackoverflow.com/users/7482953/nicole"}, "is_accepted": false, "score": 0, "last_activity_date": 1585675523, "creation_date": 1585675523, "answer_id": 60956422, "question_id": 56586784, "link": "https://stackoverflow.com/questions/56586784/in-the-substrate-framework-how-do-you-get-the-private-key-secret-key-from-a-k/60956422#60956422", "title": "In the Substrate framework, how do you get the private key (secret key) from a Keypair?", "body": "<p>What do you actually need to do? You shouldn't be getting a private key in the runtime at all.  </p>\n\n<p>If you want to sign something in your runtime, there are helper functions that will sign a message, if you just pass in the public key, with its corresponding private key. </p>\n\n<p><a href=\"https://substrate.dev/rustdocs/master/sp_io/crypto/fn.sr25519_sign.html\" rel=\"nofollow noreferrer\">https://substrate.dev/rustdocs/master/sp_io/crypto/fn.sr25519_sign.html</a>\ntesting: <a href=\"https://substrate.dev/rustdocs/master/sp_core/testing/struct.KeyStore.html\" rel=\"nofollow noreferrer\">https://substrate.dev/rustdocs/master/sp_core/testing/struct.KeyStore.html</a></p>\n"}], "owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 186, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1585675523, "creation_date": 1560451325, "last_edit_date": 1560451857, "question_id": 56586784, "link": "https://stackoverflow.com/questions/56586784/in-the-substrate-framework-how-do-you-get-the-private-key-secret-key-from-a-k", "title": "In the Substrate framework, how do you get the private key (secret key) from a Keypair?", "body": "<p>I have this code:</p>\n\n<pre><code>use schnorrkel;\nuse schnorrkel::{\n    derive::{ChainCode, Derivation, CHAIN_CODE_LENGTH},\n    signing_context, Keypair, MiniSecretKey, PublicKey, SecretKey,\n};\nuse substrate_primitives::crypto::Pair as PairT;\nuse substrate_primitives::sr25519;\nuse substrate_primitives::sr25519::Pair;\n\nfn main() {\n    let keypair = sr25519::Pair::generate();\n    let private_key = keypair.somehow_get_the_private_key_func();\n}\n</code></pre>\n\n<p>I tried to use the <code>SecretKey</code> trait (imported at the beginning), but it says <code>SecretKey</code> is private, so the only way I am thinking of is to modify Substrate's sources to add a function that gives me the private key, but I don't want to do it by source code alteration.</p>\n\n<p>What would be the way to go?</p>\n"}, {"tags": ["asynchronous", "rust", "rust-tokio"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1560440974, "post_id": 56584067, "comment_id": 99746568, "body": "Yes it is because of join, just add mapping to the join combinator, like you did when adding map_err"}], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "edited": false, "score": 0, "creation_date": 1560442646, "post_id": 56584332, "comment_id": 99747400, "body": "Thanks again, Shep. I really like the old version, because it provides a more intuitive way of thinking (i.e., through lambda calculus). I think that abstracting away the lower-levels makes thinking about what&#39;s happening harder and less flexible to do and understand (for me, at least)."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1560441715, "last_edit_date": 1560441715, "creation_date": 1560441211, "answer_id": 56584332, "question_id": 56584067, "link": "https://stackoverflow.com/questions/56584067/how-to-convert-a-futures-output/56584332#56584332", "title": "How to convert a future&#39;s output?", "body": "<p>Use <a href=\"https://docs.rs/futures/0.1.23/futures/future/trait.Future.html#method.map\" rel=\"nofollow noreferrer\"><code>Future::map</code></a>. This is a parallel to <code>Option::map</code>, <code>Result::map</code>, and <code>Iterator::map</code>:</p>\n\n<pre><code>use futures::{future, Future}; // 0.1.27\n\nfn some_future() -&gt; impl Future&lt;Item = i32, Error = ()&gt; {\n    future::ok(42)\n}\n\nfn change_item() -&gt; impl Future&lt;Item = String, Error = ()&gt; {\n    some_future().map(|i| i.to_string())\n}\n</code></pre>\n\n<p>See also <a href=\"https://docs.rs/futures/0.1.23/futures/stream/trait.Stream.html#method.map\" rel=\"nofollow noreferrer\"><code>Stream::map</code></a>.</p>\n\n<hr>\n\n<p>When <code>async</code>/<code>await</code> syntax is stabilized, you <em>may</em> never need to use this combinator again as you can just use normal methods:</p>\n\n<pre><code>async fn some_future() -&gt; i32 {\n    42\n}\n\nasync fn change_output() -&gt; String {\n    some_future().await.to_string()\n}\n</code></pre>\n\n<p>Or <code>Result::map</code>:</p>\n\n<pre><code>async fn some_future() -&gt; Result&lt;i32, ()&gt; {\n    Ok(42)\n}\n\nasync fn change_output() -&gt; Result&lt;String, ()&gt; {\n    some_future().await.map(|i| i.to_string())\n}\n</code></pre>\n\n<p>But it still exists:</p>\n\n<pre><code>use futures::{Future, FutureExt}; // 0.3.0-alpha.16\n\nasync fn some_future() -&gt; i32 {\n    42\n}\n\nfn change_output() -&gt; impl Future&lt;Output = String&gt; {\n    some_future().map(|i| i.to_string())\n}\n</code></pre>\n"}], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 56584332, "answer_count": 1, "score": 0, "last_activity_date": 1560447311, "creation_date": 1560440306, "last_edit_date": 1560447311, "question_id": 56584067, "link": "https://stackoverflow.com/questions/56584067/how-to-convert-a-futures-output", "title": "How to convert a future&#39;s output?", "body": "<p>With Tokio's futures, if you want to convert an <code>Error</code> in the causal chain of combinators, you use <code>from_err::&lt;NewType&gt;()</code>. I want the same functionality, but instead for the <code>Item</code> in <code>impl Future&lt;Item = (), Error = ()&gt;</code>.</p>\n\n<p>An example of some of my code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut async_series_client = vec![];\nasync_series_client.push(Box::new(\n    SocketHandler::connect(\n        port,\n        addr,\n        handle,\n        tx_wave,\n        tx_linear,\n        KcpSessionManager::new(&amp;handle2).unwrap(),\n    )\n    .from_err::&lt;HyxeError&gt;()\n    .join(tube)\n    .map_err(|mut err| err.printf()),\n));\n</code></pre>\n\n<p>This returns <code>((),())</code> (Side question: does it return a tuple of () because of the join?). I want it to return just <code>()</code>. How can I do this?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560438832, "post_id": 56583209, "comment_id": 99745302, "body": "Hopefully this is just because of your example, but your <code>vec_strs!</code> is basically the same as <code>vec!</code> but less efficient."}, {"owner": {"reputation": 3815, "user_id": 5382150, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/GwGSL.png?s=128&g=1", "display_name": "Gilgamesz", "link": "https://stackoverflow.com/users/5382150/gilgamesz"}, "edited": false, "score": 0, "creation_date": 1560489408, "post_id": 56583209, "comment_id": 99760618, "body": "Yes, it is an example. <code>file.in</code> is not part of the file."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 0, "last_activity_date": 1560527214, "creation_date": 1560527214, "answer_id": 56601517, "question_id": 56583209, "link": "https://stackoverflow.com/questions/56583209/how-can-i-use-an-include-macro-to-load-multiple-elements-from-a-single-file/56601517#56601517", "title": "How can I use an include macro to load multiple elements from a single file?", "body": "<p>There is no one-step solution to this. The <code>include!</code> macro assumes that it will load fully-formed Rust syntax from a file and your file is not that.</p>\n\n<p>The closest thing is a <a href=\"https://doc.rust-lang.org/cargo/reference/build-scripts.html\" rel=\"nofollow noreferrer\">build script</a>. With this, you can parse any kind of input and generate any kind of output. </p>\n\n<p>Since your code is <em>almost</em> a literal array, the cheapest thing you can do is to add square brackets around it:</p>\n\n<p><strong>build.rs</strong></p>\n\n<pre><code>use std::{\n    env,\n    fs::File,\n    io::{self, Write},\n    path::PathBuf,\n};\n\nfn main() -&gt; Result&lt;(), Box&lt;std::error::Error&gt;&gt; {\n    let mut src = File::open(\"file.in\")?;\n\n    let out_dir: PathBuf = env::var_os(\"OUT_DIR\").ok_or(\"Cannot find OUT_DIR\")?.into();\n    let out_file = out_dir.join(\"file.in.rs\");\n    let mut out = File::create(out_file)?;\n\n    write!(&amp;mut out, \"[\")?;\n    io::copy(&amp;mut src, &amp;mut out)?;\n    write!(&amp;mut out, \"]\")?;\n\n    Ok(())\n}\n</code></pre>\n\n<p>You can then just import that array directly:</p>\n\n<pre><code>const STRINGS: &amp;[&amp;str] = &amp;include!(concat!(env!(\"OUT_DIR\"), \"/file.in.rs\"));\n\nfn main() {\n    for s in STRINGS {\n        println!(\"{}\", s);\n    }\n}\n</code></pre>\n\n<p>You can, of course, change the build script to suit your needs. For example, you could generate a call to your macro and then import the file containing the macro call.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32956050/155423\">How to create a static string at compile time</a></li>\n<li><a href=\"https://stackoverflow.com/q/47217283/155423\">How do I generate a text file during compile time and include its content in the output?</a></li>\n</ul>\n\n<hr>\n\n<p>As a bonus, your macro should be written to take advantage of <code>vec!</code>, which uses some compiler internals to be more efficient:</p>\n\n<pre><code>macro_rules! vec_strs {\n    ($($element:expr),*) =&gt; {\n        vec![$($element.to_string()),*]\n    };\n}\n</code></pre>\n"}], "owner": {"reputation": 45, "user_id": 11061655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca604800cac8c4f4dc986c93244ea3ea?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11061655/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560527214, "creation_date": 1560437500, "last_edit_date": 1560489958, "question_id": 56583209, "link": "https://stackoverflow.com/questions/56583209/how-can-i-use-an-include-macro-to-load-multiple-elements-from-a-single-file", "title": "How can I use an include macro to load multiple elements from a single file?", "body": "<pre><code>macro_rules! vec_strs {\n    (\n        $($element:expr),*\n    ) =&gt; {\n        {\n            let mut v = Vec::new();\n            $(\n                v.push(format!(\"{}\", $element));\n            )*\n            v\n        }\n    };\n}\n\nfn main() {\n    let v = vec_strs!(\"1\", \"2\");\n    println!(\"{}\", v);\n}\n</code></pre>\n\n<p>The problem is that my strings are placed in a file:</p>\n\n<p><strong>file.in:</strong></p>\n\n<pre><code>\"first\", \"second\", \"third\", .... \n</code></pre>\n\n<p>I cannot change the content of the file. How can I use <code>include!</code>/<code>include_str!</code> with my macro <code>vec_strs</code> to \"load\" elements to the vector from <code>file.in</code>? Thanks in advance.</p>\n"}, {"tags": ["rust", "deserialization", "json-deserialization", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560436679, "post_id": 56582722, "comment_id": 99743857, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=03e7afc175c77f7ee7f928f15fcfce0a\" rel=\"nofollow noreferrer\">The duplicate applied to your question</a>"}, {"owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560437361, "post_id": 56582722, "comment_id": 99744297, "body": "Thanks! That is extremely simple and easier to read. I&#39;ve spent hours trying to get this to work. However it doesn&#39;t handle <code>{ &quot;secs&quot;: 1234 }</code>, but I will work with it to see if I can get it to."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560438220, "post_id": 56582722, "comment_id": 99744913, "body": "Then you want <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=939c50d5e1945dae3855bdf02e1e12bd\" rel=\"nofollow noreferrer\">something like this</a> (using whatever number processing you need)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1560442015, "post_id": 56582722, "comment_id": 99747096, "body": "Your float manipulation <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=31f5c4de5fcc4c5c7c9b41fd7f4712e9\" rel=\"nofollow noreferrer\">doesn&#39;t need to convert to strings</a>"}], "owner": {"reputation": 8207, "user_id": 561624, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/994fe06ee0ece4ba833936e1e8f6dd7d?s=128&d=identicon&r=PG", "display_name": "E-rich", "link": "https://stackoverflow.com/users/561624/e-rich"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 810, "favorite_count": 0, "closed_date": 1560436253, "answer_count": 0, "score": 2, "last_activity_date": 1560441365, "creation_date": 1560435946, "last_edit_date": 1560441365, "question_id": 56582722, "link": "https://stackoverflow.com/questions/56582722/serde-json-deserialize-any-number", "closed_reason": "Duplicate", "title": "serde json deserialize any number", "body": "<p>I am trying to combine the <a href=\"https://serde.rs/string-or-struct.html\" rel=\"nofollow noreferrer\">Either string or struct</a> and the <a href=\"https://serde.rs/deserialize-struct.html\" rel=\"nofollow noreferrer\">Manually deserialize struct</a> examples by parsing something like:</p>\n\n<pre><code>{\n  \"secs\": \"12.34\"\n}\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>{\n  \"secs\": 5678\n}\n</code></pre>\n\n<p>Into the struct:</p>\n\n<pre><code>struct Duration {\n    secs: u64,\n    nanos: u32,\n}\n</code></pre>\n\n<p>Where both the <code>secs</code> and <code>nanos</code> members are set based on the <code>\"secs\"</code> value only. Below is my non-working attempt at implementing custom deserialization this way, but I'm not sure how to delegate to the <code>string_or_int</code> function for the <code>\"secs\"</code> value.</p>\n\n<pre><code>use std::fmt;\nuse std::marker::PhantomData;\nuse std::str::FromStr;\nuse std::num::ParseIntError;\nuse serde::Deserialize;\nuse serde::de::{self, Deserializer, Visitor, MapAccess};\n\n#[derive(Debug)]\nstruct Duration {\n    secs: u64,\n    nanos: u32,\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Duration {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        enum Field { Secs };\n\n        impl&lt;'de&gt; Deserialize&lt;'de&gt; for Field {\n            fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Field, D::Error&gt;\n            where\n                D: Deserializer&lt;'de&gt;,\n            {\n                struct FieldVisitor;\n\n                impl&lt;'de&gt; Visitor&lt;'de&gt; for FieldVisitor {\n                    type Value = Field;\n\n                    fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                        formatter.write_str(\"`secs`\")\n                    }\n\n                    fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;Field, E&gt;\n                    where\n                        E: de::Error,\n                    {\n                        match value {\n                            \"secs\" =&gt; Ok(Field::Secs),\n                            _ =&gt; Err(de::Error::unknown_field(value, FIELDS)),\n                        }\n                    }\n                }\n\n                deserializer.deserialize_identifier(FieldVisitor)\n            }\n        }\n\n        struct DurationVisitor;\n\n        impl&lt;'de&gt; Visitor&lt;'de&gt; for DurationVisitor {\n            type Value = Duration;\n\n            fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n                formatter.write_str(\"struct Duration\")\n            }\n\n            fn visit_map&lt;V&gt;(self, mut map: V) -&gt; Result&lt;Duration, V::Error&gt;\n            where\n                V: MapAccess&lt;'de&gt;,\n            {\n                let mut secs = None;\n                let mut nanos = None;\n                while let Some(key) = map.next_key()? {\n                    match key {\n                        Field::Secs =&gt; {\n                            // TODO somehow delegate to string_or_int and\n                            // set secs and nanos based on secs value.\n                            // if secs is int:\n                            //   secs = the int value\n                            //   nanos = 0\n                            // if secs is string:\n                            //   secs = the int value * 10^(digit count right of '.')\n                            //   nanos = digit count right of '.'\n                            // e.g. given value of 12.34\n                            //   secs = 1234\n                            //   nanos = 2\n                        }\n                    }\n                }\n                let secs = secs.ok_or_else(|| de::Error::missing_field(\"secs\"))?;\n                let nanos = nanos.ok_or_else(|| de::Error::missing_field(\"nanos\"))?;\n                Ok(Duration {\n                    secs,\n                    nanos,\n                })\n            }\n        }\n\n        const FIELDS: &amp;'static [&amp;'static str] = &amp;[\"secs\"];\n        deserializer.deserialize_struct(\"Duration\", FIELDS, DurationVisitor)\n    }\n}\n\nfn string_or_int&lt;'de, T, D&gt;(deserializer: D) -&gt; Result&lt;T, D::Error&gt;\nwhere\n    T: Deserialize&lt;'de&gt; + FromStr&lt;Err = ParseIntError&gt;,\n    D: Deserializer&lt;'de&gt;,\n{\n    struct StringOrInt&lt;T&gt;(PhantomData&lt;fn() -&gt; T&gt;);\n\n    impl&lt;'de, T&gt; Visitor&lt;'de&gt; for StringOrInt&lt;T&gt;\n    where\n        T: Deserialize&lt;'de&gt; + FromStr&lt;Err = ParseIntError&gt;,\n    {\n        type Value = T;\n\n        fn expecting(&amp;self, formatter: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n            formatter.write_str(\"string or int\")\n        }\n\n        fn visit_str&lt;E&gt;(self, value: &amp;str) -&gt; Result&lt;T, E&gt;\n        where\n            E: de::Error,\n        {\n            Ok(FromStr::from_str(value).unwrap())\n        }\n    }\n\n    deserializer.deserialize_any(StringOrInt(PhantomData))\n}\n\nfn main() {\n    let json_raw = r#\"{ \"secs\": \"1.000\" }\"#;\n    let j: Duration = serde_json::from_str(&amp;json_raw).unwrap();\n    println!(\"{:?}\", j);\n}\n</code></pre>\n\n<p>How do I go about delegating the custom deserialization of a string or int for the <code>\"secs\"</code> value and then set both the <code>secs</code> and <code>nanos</code> struct member values?</p>\n\n<hr>\n\n<p>Thanks to @Shepmaster, the simplified solution is:</p>\n\n<pre><code>use serde::{Deserialize, Deserializer};\nuse serde_json;\n\n#[derive(Debug)]\nstruct Duration {\n    secs: u64,\n    nanos: u32,\n}\n\n#[derive(Deserialize)]\nstruct Raw&lt;'a&gt; {\n    #[serde(borrow)]\n    secs: StrOrNum&lt;'a&gt;,\n}\n\n#[derive(Deserialize)]\n#[serde(untagged)]\nenum StrOrNum&lt;'a&gt; {\n    Str(&amp;'a str),\n    Num(u64),\n}\n\nimpl&lt;'de&gt; Deserialize&lt;'de&gt; for Duration {\n    fn deserialize&lt;D&gt;(deserializer: D) -&gt; Result&lt;Self, D::Error&gt;\n    where\n        D: Deserializer&lt;'de&gt;,\n    {\n        let raw = Raw::deserialize(deserializer)?;\n\n        match raw.secs {\n            StrOrNum::Str(s) =&gt; {\n                if s.parse::&lt;f64&gt;().is_ok() {\n                    let mut p = s.splitn(2, \".\").fuse();\n                    let secs = p.next().map_or(0, |s| s.parse().unwrap_or(0));\n                    let frac = p.next().map_or(0, |s| s.parse().unwrap_or(0));\n                    let nanos = frac.to_string().len() as u32;\n                    let secs = secs * 10_u64.pow(nanos) + frac;\n                    Ok(Duration { secs, nanos })\n                } else {\n                    Err(serde::de::Error::custom(format!(\"Not a valid decimal: \\\"{}\\\"\", s)))\n                }\n            }\n            StrOrNum::Num(secs) =&gt; Ok(Duration { secs, nanos: 0 }),\n        }\n    }\n}\n\nfn main() {\n    let json_raw = r#\"{ \"secs\": 1234 }\"#;\n    let j: Duration = serde_json::from_str(&amp;json_raw).unwrap();\n    println!(\"{:?}\", j);\n    let json_raw = r#\"{ \"secs\": \"12.34\" }\"#;\n    let j: Duration = serde_json::from_str(&amp;json_raw).unwrap();\n    println!(\"{:?}\", j);\n    let json_raw = r#\"{ \"secs\": \"12.3.4\" }\"#;\n    let j: Duration = serde_json::from_str(&amp;json_raw).unwrap();\n    println!(\"{:?}\", j);\n}\n</code></pre>\n"}, {"tags": ["error-handling", "rust", "traits"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 2, "creation_date": 1560427749, "post_id": 56580031, "comment_id": 99738013, "body": "<a href=\"https://docs.rs/failure/0.1.5/failure/trait.ResultExt.html#tymethod.context\" rel=\"nofollow noreferrer\"><code>context</code></a> does already what you want"}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1560433778, "post_id": 56580031, "comment_id": 99741875, "body": "Ah good point, still for the purposes of education (and suppose I think <code>context</code> is too verbose), any idea why my code fails?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560435403, "post_id": 56580031, "comment_id": 99742988, "body": "I&#39;ll take the opportunity to promote my own error crate, <a href=\"https://docs.rs/snafu/0.4.1/snafu/\" rel=\"nofollow noreferrer\">SNAFU</a>."}], "answers": [{"comments": [{"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1560439442, "post_id": 56582508, "comment_id": 99745682, "body": "Ahhhh I totally missed that it worked with <code>with_context()</code> and so on because there is <i>also</i> <a href=\"https://docs.rs/failure/0.1.5/src/failure/result_ext.rs.html#182-202\" rel=\"nofollow noreferrer\">an implementation of <code>ResultExt</code> for <code>Result&lt;T, Error&gt;</code></a>. Thanks."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 1, "creation_date": 1560439457, "post_id": 56582508, "comment_id": 99745689, "body": "Also I feel like the error message could definitely be improved!"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1560435291, "creation_date": 1560435291, "answer_id": 56582508, "question_id": 56580031, "link": "https://stackoverflow.com/questions/56580031/why-do-i-get-the-method-exists-but-the-following-trait-bounds-were-not-satisfie/56582508#56582508", "title": "Why do I get &quot;the method exists but the following trait bounds were not satisfied&quot; when extending Result for failure types?", "body": "<p>As the compiler tells you, <code>Result&lt;i32, failure::error::Error&gt;</code> doesn't implement <code>ResultContext&lt;_, _&gt;</code>. You have added a bound to your implementation:</p>\n\n<pre><code>where\n    E: Fail,\n</code></pre>\n\n<p>But <strong><code>failure::Error</code> doesn't implement <code>failure::Fail</code></strong>:</p>\n\n<pre><code>use failure; // 0.1.5\n\nfn is_fail&lt;F: failure::Fail&gt;() {}\n\npub fn main() {\n    is_fail::&lt;failure::Error&gt;();\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `failure::error::Error: std::error::Error` is not satisfied\n --&gt; src/main.rs:6:5\n  |\n6 |     is_fail::&lt;failure::Error&gt;();\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::error::Error` is not implemented for `failure::error::Error`\n  |\n  = note: required because of the requirements on the impl of `failure::Fail` for `failure::error::Error`\nnote: required by `is_fail`\n --&gt; src/main.rs:3:1\n  |\n3 | fn is_fail&lt;F: failure::Fail&gt;() {}\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>You will need to alter your bounds or your type.</p>\n"}], "owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4629, "favorite_count": 0, "accepted_answer_id": 56582508, "answer_count": 1, "score": 4, "last_activity_date": 1560435364, "creation_date": 1560427311, "last_edit_date": 1560435364, "question_id": 56580031, "link": "https://stackoverflow.com/questions/56580031/why-do-i-get-the-method-exists-but-the-following-trait-bounds-were-not-satisfie", "title": "Why do I get &quot;the method exists but the following trait bounds were not satisfied&quot; when extending Result for failure types?", "body": "<p>I'm trying to add a more concise version of the <code>failure</code> crate's <code>.with_context(|e| format!(\"foo: {}\", e))</code> to my code. Like this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b7b34d27fa949cae0e7d1991d3c784b4\" rel=\"nofollow noreferrer\">playground</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use failure::{Context, Fail, ResultExt}; // 0.1.5\n\n/// Extension methods for failure `Result`.\npub trait ResultContext&lt;T, E&gt; {\n    /// Wraps the error type in a context type generated by looking at the\n    /// error value. This is very similar to `with_context` but much more\n    /// concise.\n    fn ctx(self, s: &amp;str) -&gt; Result&lt;T, Context&lt;String&gt;&gt;;\n}\n\nimpl&lt;T, E&gt; ResultContext&lt;T, E&gt; for Result&lt;T, E&gt;\nwhere\n    E: Fail,\n{\n    fn ctx(self, s: &amp;str) -&gt; Result&lt;T, Context&lt;String&gt;&gt; {\n        self.map_err(|failure| {\n            let context = format!(\"{}: {}\", s, failure);\n            failure.context(context)\n        })\n    }\n}\n\npub fn foo() -&gt; Result&lt;i32, failure::Error&gt; {\n    Ok(5i32)\n}\n\npub fn main() -&gt; Result&lt;(), failure::Error&gt; {\n    // This works.\n    let _ = foo().with_context(|_| \"foo\".to_string())?;\n    // This doesn't.\n    foo().ctx(\"foo\")?\n}\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `ctx` found for type `std::result::Result&lt;i32, failure::error::Error&gt;` in the current scope\n  --&gt; src/main.rs:31:11\n   |\n31 |     foo().ctx(\"foo\")?\n   |           ^^^\n   |\n   = note: the method `ctx` exists but the following trait bounds were not satisfied:\n           `std::result::Result&lt;i32, failure::error::Error&gt; : ResultContext&lt;_, _&gt;`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `ctx`, perhaps you need to implement it:\n           candidate #1: `ResultContext`\n</code></pre>\n\n<p>I can't work out why. I more or less copied the existing <code>with_context</code> code.</p>\n"}, {"tags": ["sockets", "rust", "udp", "rust-tokio"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1560425858, "post_id": 56578876, "comment_id": 99736947, "body": "Why not multicast on the network level instead?"}, {"owner": {"reputation": 1113, "user_id": 1426842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GU6Z5.jpg?s=128&g=1", "display_name": "Micha\u0142 Fita", "link": "https://stackoverflow.com/users/1426842/micha%c5%82-fita"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1560426241, "post_id": 56578876, "comment_id": 99737170, "body": "@PeterHall But multicast is a completely different story, especially as listeners need to &quot;register&quot; themselves to listen to particular multicast (at least to do it correctly)."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1560426284, "post_id": 56578876, "comment_id": 99737190, "body": "@PeterHall The most important reason is that I am wondering how to execute a set of futures dynamically, but IP multicast has restrictions on both the sender and the receiver in that they have to be aware of multicast groups (edit: that is, register to receive messages sent to the group)."}, {"owner": {"reputation": 1113, "user_id": 1426842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GU6Z5.jpg?s=128&g=1", "display_name": "Micha\u0142 Fita", "link": "https://stackoverflow.com/users/1426842/micha%c5%82-fita"}, "edited": false, "score": 0, "creation_date": 1560426444, "post_id": 56578876, "comment_id": 99737275, "body": "@MatsKindahl IMVHO you should have 2 sockets, one listener on local IF, second to transmit on exposed IF, otherwise packets sent would have source address of loopback."}, {"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "reply_to_user": {"reputation": 1113, "user_id": 1426842, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GU6Z5.jpg?s=128&g=1", "display_name": "Micha\u0142 Fita", "link": "https://stackoverflow.com/users/1426842/micha%c5%82-fita"}, "edited": false, "score": 0, "creation_date": 1560428589, "post_id": 56578876, "comment_id": 99738526, "body": "@Manveru In this example, yes, but if the address of the sender is important, then registering using the wildcard address will give the actual address used for the socket, so it is not <i>necessary</i> to have two sockets."}], "answers": [{"comments": [{"owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1560430089, "post_id": 56580428, "comment_id": 99739466, "body": "It has hardly anything to do with using two sockets (the same code could use two different sockets), but it avoids having to create two sockets, which was also something I was wondering about. I was looking for the <code>start_send</code> and <code>poll_complete</code> functions. Many thanks.You might want to rewrite the answer for others and highlight this."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "edited": false, "score": 0, "creation_date": 1560433495, "post_id": 56580428, "comment_id": 99741700, "body": "@MatsKindahl actually <code>start_send</code> and <code>poll_complete</code> functions are behavior of the <code>Sink</code> structure, i will add link to provide more detail about Sink."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 2, "last_activity_date": 1571668273, "last_edit_date": 1571668273, "creation_date": 1560428636, "answer_id": 56580428, "question_id": 56578876, "link": "https://stackoverflow.com/questions/56578876/multicast-udp-packets-using-tokio-futures/56580428#56580428", "title": "Multicast UDP packets using Tokio futures", "body": "<p>Your code has a logical mistake: you are trying to bind the same address twice, as sender and receiver respectively. Instead, you can use a <strong>stream and sink</strong>. <code>UdpFramed</code> has the functionality to provide that, please see <a href=\"https://docs.rs/futures/0.1.27/futures/sink/trait.Sink.html\" rel=\"nofollow noreferrer\"><code>Sink</code></a>:</p>\n\n<blockquote>\n  <p>A <code>Sink</code> is a value into which other values can be sent, asynchronously.</p>\n</blockquote>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let listen_address = \"127.0.0.1:4711\".parse::&lt;SocketAddr&gt;().unwrap();\nlet forwarder = {\n    let (mut socket_sink, socket_stream) =\n        UdpFramed::new(UdpSocket::bind(&amp;listen_address).unwrap(), BytesCodec::new()).split();\n    let peers = vec![\n        \"192.168.1.136:4711\".parse::&lt;SocketAddr&gt;().unwrap(),\n        \"192.168.1.136:4712\".parse::&lt;SocketAddr&gt;().unwrap(),\n    ];\n\n    socket_stream.for_each(move |(bytes, _from)| {\n        for peer in peers.iter() {\n            socket_sink.start_send((bytes.clone().into(), *peer));\n            socket_sink.poll_complete();\n        }\n        Ok(())\n    })\n};\n\ntokio::run({\n    forwarder\n        .map_err(|err| println!(\"Error: {}\", err))\n        .map(|_| ())\n});\n</code></pre>\n"}], "owner": {"reputation": 1565, "user_id": 758801, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/2xIHo.png?s=128&g=1", "display_name": "Mats Kindahl", "link": "https://stackoverflow.com/users/758801/mats-kindahl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1006, "favorite_count": 0, "accepted_answer_id": 56580428, "answer_count": 1, "score": 5, "last_activity_date": 1571668273, "creation_date": 1560423172, "last_edit_date": 1560437333, "question_id": 56578876, "link": "https://stackoverflow.com/questions/56578876/multicast-udp-packets-using-tokio-futures", "title": "Multicast UDP packets using Tokio futures", "body": "<p>I'm playing around with Tokio and Rust and as an example, I am trying to write a simple UDP proxy that will just accept UDP packets on one socket and send it out to multiple other destinations. However, I stumble over the situation that I need to send the received packet to multiple addresses and am not sure how to do that in a idiomatic way.</p>\n\n<p>Code I have this far:</p>\n\n<pre><code>extern crate bytes;\nextern crate futures;\n\nuse std::net::SocketAddr;\nuse tokio::codec::BytesCodec;\nuse tokio::net::{UdpFramed, UdpSocket};\nuse tokio::prelude::*;\n\nfn main() {\n    let listen_address = \"127.0.0.1:4711\".parse::&lt;SocketAddr&gt;().unwrap();\n    let forwarder = {\n        let socket = UdpSocket::bind(&amp;listen_address).unwrap();\n        let peers = vec![\n            \"192.168.1.136:4711\".parse::&lt;SocketAddr&gt;().unwrap(),\n            \"192.168.1.136:4712\".parse::&lt;SocketAddr&gt;().unwrap(),\n        ];\n        UdpFramed::new(UdpSocket::bind(&amp;listen_address).unwrap(), BytesCodec::new()).for_each(\n            move |(bytes, _from)| {\n                // These are the problematic lines\n                for peer in peers.iter() {\n                    socket.send_dgram(&amp;bytes, &amp;peer);\n                }\n                Ok(())\n            },\n        )\n    };\n\n    tokio::run({\n        forwarder\n            .map_err(|err| println!(\"Error: {}\", err))\n            .map(|_| ())\n    });\n}\n</code></pre>\n\n<p>The problematic lines are trying to send the received packet to multiple other addresses using a newly bound socket.</p>\n\n<p>The existing examples all forward packets to single destinations, or internally use mpsc channels to communicate between internal tasks. I do not think that this is necessary and that it should be possible to do without having to spawn more than one task per listening socket.</p>\n\n<p><strong>Update:</strong> Thanks to @\u00d6mer-erden I got this code that works. </p>\n\n<pre><code>extern crate bytes;\nextern crate futures;\n\nuse std::net::SocketAddr;\nuse tokio::codec::BytesCodec;\nuse tokio::net::{UdpFramed, UdpSocket};\nuse tokio::prelude::*;\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let listen_address = \"0.0.0.0:4711\".parse::&lt;SocketAddr&gt;()?;\n    let socket = UdpSocket::bind(&amp;listen_address)?;\n    let peers: Vec&lt;SocketAddr&gt; = vec![\"192.168.1.136:8080\".parse()?, \"192.168.1.136:8081\".parse()?];\n    let (mut writer, reader) = UdpFramed::new(socket, BytesCodec::new()).split();\n    let forwarder = reader.for_each(move |(bytes, _from)| {\n        for peer in peers.iter() {\n            writer.start_send((bytes.clone().into(), peer.clone()))?;\n        }\n        writer.poll_complete()?;\n        Ok(())\n    });\n\n    tokio::run({\n        forwarder\n            .map_err(|err| println!(\"Error: {}\", err))\n            .map(|_| ())\n    });\n    Ok(())\n}\n</code></pre>\n\n<p>Note that:</p>\n\n<ul>\n<li><p>It is not necessary to call <code>poll_completion</code> for each <code>start_send</code>: it just need to be called after all <code>start_send</code> has been dispatched.</p></li>\n<li><p>For some reason, the content of the <code>peer</code> is gutted between calls (but there is no compiler error), generating an Error 22 (which is usually because a bad address is given to <code>sendto(2)</code>).</p>\n\n<p>Looking in a debugger, it is quite clear that the second time, the peer address is pointing to invalid memory. I opted to clone the <code>peer</code> instead.</p></li>\n<li><p>I removed the calls to <code>unwrap()</code> and propagate the <code>Result</code> upwards instead.</p></li>\n</ul>\n"}, {"tags": ["rust", "mutex", "smart-pointers", "interior-mutability"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1560434673, "post_id": 56574828, "comment_id": 99742527, "body": "I think scoped threads are a more obvious use of a <code>Mutex</code> (or <code>RwLock</code> or <code>Atomic</code>) without reference counting: <a href=\"https://stackoverflow.com/q/32750829/155423\">How can I pass a reference to a stack variable to a thread?</a>."}], "tags": [], "owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "is_accepted": true, "score": 14, "last_activity_date": 1560434698, "last_edit_date": 1560434698, "creation_date": 1560408625, "answer_id": 56574828, "question_id": 56574632, "link": "https://stackoverflow.com/questions/56574632/why-mutex-was-designed-to-need-an-arc-in-rust/56574828#56574828", "title": "Why Mutex was designed to need an Arc in Rust", "body": "<p>You don't need an <code>Arc</code> to use a <code>Mutex</code>. The signature of <code>lock</code> (the most used method on a <code>Mutex</code>) is <code>pub fn lock(&amp;self) -&gt; LockResult&lt;MutexGuard&lt;T&gt;&gt;</code> which means you need a reference to the <code>Mutex</code>.</p>\n\n<p>The problem arises with the borrow-checker. It is not able to prove certain guarantees when passing a reference to threads which might outlive the original <code>Mutex</code>. That's why you use <code>Arc</code> which guarantees that the value inside lives as long as the last <code>Arc</code> lives.</p>\n\n<pre><code>use lazy_static::lazy_static; // 1.3.0\nuse std::sync::Mutex;\nuse std::thread::spawn;\n\nlazy_static! {\n    static ref M: Mutex&lt;u32&gt; = Mutex::new(5);\n}\n\nfn a(m: &amp;Mutex&lt;u32&gt;) {\n    println!(\"{}\", m.lock().unwrap());\n}\n\nfn b(m: &amp;Mutex&lt;u32&gt;) {\n    println!(\"{}\", m.lock().unwrap());\n}\n\nfn main() {\n    let t1 = spawn(|| a(&amp;M));\n    let t2 = spawn(|| b(&amp;M));\n\n    t1.join().unwrap();\n    t2.join().unwrap();\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=2d0f7b2ddad249580aeb3d38fe42929b\" rel=\"noreferrer\">Playground</a>)</p>\n"}], "owner": {"reputation": 1054, "user_id": 3478959, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/b52236406c4b6e4fa0bb619db556cf14?s=128&d=identicon&r=PG&f=1", "display_name": "Lev", "link": "https://stackoverflow.com/users/3478959/lev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 875, "favorite_count": 0, "accepted_answer_id": 56574828, "answer_count": 1, "score": 4, "last_activity_date": 1582037838, "creation_date": 1560407872, "last_edit_date": 1560412780, "question_id": 56574632, "link": "https://stackoverflow.com/questions/56574632/why-mutex-was-designed-to-need-an-arc-in-rust", "title": "Why Mutex was designed to need an Arc in Rust", "body": "<p>Why was <code>Mutex&lt;T&gt;</code> designed to need an <code>Arc&lt;T&gt;</code> if the only reason to use a <code>Mutex&lt;T&gt;</code> is for concurrent code, i.e. multiple threads? Wouldn't it be better to alias a <code>Mutex&lt;T&gt;</code> to an atomic reference in the first place? I'm using <a href=\"https://doc.rust-lang.org/book/ch16-03-shared-state.html\" rel=\"nofollow noreferrer\">https://doc.rust-lang.org/book/ch16-03-shared-state.html</a> as reference.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1560403837, "post_id": 56573793, "comment_id": 99725883, "body": "Macro seems valid. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=55fc1c21b234226f348132f5d3252c2e\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1560404294, "post_id": 56573793, "comment_id": 99726006, "body": "@Websterix try actually using the macro. That&#39;s where the error happens."}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 11061655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca604800cac8c4f4dc986c93244ea3ea?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11061655/j-doe"}, "edited": false, "score": 0, "creation_date": 1560414029, "post_id": 56574007, "comment_id": 99730437, "body": "&quot;or you&#39;re going to need to restructure the output so that $m and $s get unpacked an appropriate number of times.&quot; Can you help me with that? I cannot deal with that."}, {"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "reply_to_user": {"reputation": 45, "user_id": 11061655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca604800cac8c4f4dc986c93244ea3ea?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11061655/j-doe"}, "edited": false, "score": 0, "creation_date": 1560425205, "post_id": 56574007, "comment_id": 99736573, "body": "@J.Doe You just need to put another <code>$(...)+</code> <i>inside</i> the one you have now. Inside that second unpacking, <code>$m</code> gets unpacked twice (so it&#39;s just a single expression). To use <code>$s</code>, you&#39;ll have to put yet another <code>$(...)+</code> inside the second one. You&#39;ll get something like <code>$($c =&gt; $($m =&gt; $($s =&gt; $b)+)+)+</code> (this isn&#39;t correct as written, but it&#39;s the right idea). I don&#39;t really think that&#39;s what you want to do here, but if you explain exactly what you&#39;re going for, I can help with it."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": false, "score": 0, "last_activity_date": 1560405586, "last_edit_date": 1560405586, "creation_date": 1560404516, "answer_id": 56574007, "question_id": 56573793, "link": "https://stackoverflow.com/questions/56573793/a-variable-is-still-repeating-at-this-depth-error-in-macro/56574007#56574007", "title": "A variable is still repeating at this depth error in macro", "body": "<p>In your rule for your macro,</p>\n\n<pre><code>f($x:expr, $y:expr, $z:expr);\n$($c:expr =&gt; {\n    $($m:expr =&gt; {\n       $($s:expr =&gt; $b:expr),+\n    }),+\n}),+\n</code></pre>\n\n<p><code>$x</code>, <code>$y</code> and <code>$z</code> bind a single <code>expr</code>. However, a whole list of <code>$c</code>s are bound. Moreover, associated to each <code>$c</code> is a whole list of <code>$m</code> because <code>$m</code> is still inside the <code>$(...).+</code> block associated with <code>$c</code>. For each of those <code>$m</code>s, a whole list of <code>$s</code>s is bound.</p>\n\n<p>Now in your output,</p>\n\n<pre><code>{{\n    match ($x, $y, $z) {\n        $(\n        ($c, $m, $s =&gt; $b),\n        )+\n    }\n}};\n</code></pre>\n\n<p>you only unpack one layer of lists with <code>$(...)+</code>. After one layer, <code>$m</code> is still a list of expressions (\"repeating\"), so it can't be used directly. Remember that <code>$m</code> is really a list of lists (since there's a list of <code>$m</code> for each <code>$c</code>) and <code>$s</code> is really a list of lists of lists.</p>\n\n<p>You're either going to need to restructure the rule so that there's only one <code>$m</code> and one <code>$s</code> for each <code>$c</code> (all within one <code>$(...),+</code>) or you're going to need to restructure the output so that <code>$m</code> and <code>$s</code> get unpacked an appropriate number of times.</p>\n\n<p>After trying the first approach (a single <code>$(...),+</code> in the input rule), I'd suggest making <code>$c</code>, <code>$m</code> and <code>$s</code> patterns rather than expressions (as in <code>$c: pat</code> instead of <code>$c: expr</code>). This allows them to be used in the left side of a match branch.</p>\n\n<pre><code>macro_rules! my_macro {\n    {\n        f($x:expr, $y:expr, $z:expr);\n        $($c:pat =&gt; {\n            $m:pat =&gt; {\n               $s:pat =&gt; $b:expr\n            }\n        }),+\n    } =&gt; {\n            match ($x, $y, $z) {\n                $(\n                    ($c, $m, $s) =&gt; $b,\n                )+\n            }\n          };\n}\n</code></pre>\n\n<p>The real solution depends a lot on what exactly you're trying to accomplish.</p>\n"}], "owner": {"reputation": 45, "user_id": 11061655, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ca604800cac8c4f4dc986c93244ea3ea?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11061655/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 454, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1560405726, "creation_date": 1560403259, "last_edit_date": 1560405726, "question_id": 56573793, "link": "https://stackoverflow.com/questions/56573793/a-variable-is-still-repeating-at-this-depth-error-in-macro", "title": "A variable is still repeating at this depth error in macro", "body": "<p>I wrote the simple macro:</p>\n\n<pre><code>macro_rules! my_macro {\n    {\n        f($x:expr, $y:expr, $z:expr);\n        $($c:expr =&gt; {\n            $($m:expr =&gt; {\n               $($s:expr =&gt; $b:expr),+\n            }),+\n        }),+\n    } =&gt; {{\n            match ($x, $y, $z) {\n                $(\n                ($c, $m, $s =&gt; $b),\n                )+\n            }\n          }};\n}\n\nfn main(){\n\n    let c = 0;\n    let m = 0;\n    let s = 0; \n    my_macro! {\n        f (c, m, s);\n        cc =&gt; {\n            mm =&gt; {\n                ss =&gt; b\n            }\n        }\n    }\n\n}\n</code></pre>\n\n<p>and it gets compiler errors:</p>\n\n<pre><code>error: variable 'm' is still repeating at this depth\n  --&gt; project/src/mod.rs\n   |\n39 |                 ($c, $m, $s =&gt; $b),\n   |                              ^^^^^^^\n</code></pre>\n\n<p>I do not completely understand why it did happen.\nWhy and how to repair that?</p>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 2, "creation_date": 1560387468, "post_id": 56572015, "comment_id": 99722706, "body": "I think you have to move the <code>use</code> into <code>mod tests</code>. Not sure though."}, {"owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1560388189, "post_id": 56572015, "comment_id": 99722820, "body": "@Ry- that worked"}], "owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 363, "favorite_count": 0, "closed_date": 1560392086, "answer_count": 0, "score": 0, "last_activity_date": 1560392023, "creation_date": 1560386813, "last_edit_date": 1560392023, "question_id": 56572015, "link": "https://stackoverflow.com/questions/56572015/use-of-undeclared-type-or-module-in-a-rust-test-but-i-imported-it", "closed_reason": "Duplicate", "title": "Use of undeclared type or module in a Rust test but I imported it", "body": "<p>I have a crate with a structure like so:</p>\n\n<pre><code>pub mod components {\n    pub mod ch {\n        pub struct CH {\n            // struct definition\n        }\n\n        impl CH {\n            pub fn new() -&gt; CH {\n                CH {}\n            }\n        }\n    }\n}\n\nuse components::ch::CH;\n\n#[cfg(test)]\nmod tests {\n\n    #[test]\n    fn ch_test() {\n        let test_ch = CH::new();\n    }\n}\n</code></pre>\n\n<p>When I run the tests, I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0433]: failed to resolve: use of undeclared type or module `CH`\n  --&gt; src/lib.rs:22:23\n   |\n22 |         let test_ch = CH::new();\n   |                       ^^ use of undeclared type or module `CH`\n</code></pre>\n\n<p>I also get a warning stating that my import is unused:</p>\n\n<pre><code>warning: unused import: `components::ch::CH`\n  --&gt; src/lib.rs:15:5\n   |\n15 | use components::ch::CH;\n   |     ^^^^^^^^^^^^^^^^^^\n   |\n   = note: #[warn(unused_imports)] on by default\n</code></pre>\n\n<p>This tells me that somehow my module structure isn't identifying my code correctly. I checked <a href=\"https://doc.rust-lang.org/rust-by-example/mod/split.html\" rel=\"nofollow noreferrer\">Rust by Example</a> and I can't see how my code differs. Where is my file structure not connected properly?</p>\n"}, {"tags": ["performance", "rust", "systems-programming"], "comments": [{"owner": {"reputation": 6440, "user_id": 27302, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ee0b2f006682f28d5a6ba5634ade513?s=128&d=identicon&r=PG", "display_name": "Daniel H", "link": "https://stackoverflow.com/users/27302/daniel-h"}, "edited": false, "score": 2, "creation_date": 1560387851, "post_id": 56572014, "comment_id": 99722759, "body": "A random number generator needs to store some state (e.g., the current seed). According to <a href=\"https://rust-num.github.io/num/rand/fn.thread_rng.html\" rel=\"nofollow noreferrer\">rust-num.github.io/num/rand/fn.thread_rng.html</a>, the <code>thread_rng()</code> function initializes that as necessary. In C, <code>rand()</code> provides very low-quality random numbers and should generally be avoided, and even then you still need to call <code>srand()</code> first."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1560394297, "last_edit_date": 1560394297, "creation_date": 1560393375, "answer_id": 56572644, "question_id": 56572014, "link": "https://stackoverflow.com/questions/56572014/is-there-any-overhead-in-rust-style-method-calling-approach-compared-to-the-usua/56572644#56572644", "title": "Is there any overhead in Rust-style method calling approach compared to the usual use of functions in other system programming languages such as C?", "body": "<blockquote>\n  <p>Is there any overhead in Rust-style method calling approach compared to [...] C?</p>\n</blockquote>\n\n<p>No.</p>\n\n<p>The exact same machine instructions can be generated by both two languages. The syntax to express the concepts does not require that the resulting code be inefficient (and in many cases the opposite is true).</p>\n\n<blockquote>\n  <p>Isn't it better for performance simply to use functions like in C?</p>\n</blockquote>\n\n<p>Methods <strong>are</strong> functions.</p>\n\n<p>A Rust method is conceptually the same as a C function taking a pointer:</p>\n\n<p><strong>Rust</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {\n    a: i32,\n}\n\nimpl Foo {\n    fn add(&amp;self, b: i32) -&gt; i32 {\n        self.a + b\n    }\n}\n</code></pre>\n\n<p><strong>C</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct Foo {\n    int a;\n};\n\nint Foo_add(struct Foo *self, int b) {\n    return self-&gt;a + b;\n}\n</code></pre>\n\n<p>There's no important difference between the two languages here.</p>\n\n<p>Rust has <em>free</em> functions as well as <em>associated</em> functions; if you don't need to take a reference to data, you don't need to:</p>\n\n<p><strong>Rust</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {\n    a: i32,\n}\n\n// Free function\nfn foo() -&gt; Foo { \n    Foo { a: 42 }\n}\n\nimpl Foo {\n    // Associated function\n    fn new() -&gt; Foo {\n        Foo { a: 99 }\n    }\n}\n</code></pre>\n\n<p><strong>C</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct Foo {\n    int a;\n};\n\nstruct Foo foo() {\n    struct Foo foo = { 42 };\n    return foo;\n}\n\nstruct Foo Foo_new() {\n    struct Foo foo = { 99 };\n    return foo;\n}\n</code></pre>\n\n<p>Rust also has <em>zero sized types</em> which look like they have associated data but which disappears in the compiled code:</p>\n\n<p><strong>Rust</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Zero size\nstruct Foo;\n\nimpl Foo {\n    fn add_one(&amp;self, b: i32) -&gt; i32 {\n        b + 1\n    }\n}\n</code></pre>\n\n<p><strong>C</strong></p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int Foo_add_one(int b) {\n    return b + 1;\n}\n</code></pre>\n\n<blockquote>\n  <p>creating structures and using their methods seems to be quite suboptimal</p>\n</blockquote>\n\n<p>Creating structures and having related methods is <strong>common</strong> in C code. I'd say that it's most likely the <em>predominant</em> coding style; I don't know why you'd say it's suboptimal.</p>\n\n<hr>\n\n<p>Your example case isn't useful to compare because you haven't provided <em>any</em> C code, much less something equivalent. <a href=\"https://docs.rs/rand/0.6.5/rand/rngs/struct.ThreadRng.html\" rel=\"noreferrer\"><code>ThreadRng</code></a> does <em>a lot</em> of work to provide a better experience for generating random numbers:</p>\n\n<blockquote>\n  <p><code>ThreadRng</code> uses <code>ReseedingRng</code> wrapping the same PRNG as <code>StdRng</code>, which is reseeded after generating 32 MiB of random data. A single instance is cached per thread and the returned <code>ThreadRng</code> is a reference to this instance \u2014 hence <code>ThreadRng</code> is neither <code>Send</code> nor <code>Sync</code> but is safe to use within a single thread. This RNG is seeded and reseeded via <code>EntropyRng</code> as required.</p>\n</blockquote>\n\n<p>The \"traditional\" random number generator (<a href=\"https://linux.die.net/man/3/rand\" rel=\"noreferrer\"><code>rand</code></a>) has a global state (which is generally a bad thing), but conceptually looks like:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct RngState {\n    int whatever_goes_here;\n};\n\nstatic struct RngState GLOBAL_STATE = { 0 };\n\nint rand_with_state(struct RngState *state) {\n    return state-&gt;whatever_goes_here++;\n}\n\nint rand() {\n    return rand_with_state(&amp;GLOBAL_STATE);\n}\n</code></pre>\n\n<p>Note that it <em>still uses a pointer to the data</em>.</p>\n"}], "owner": {"reputation": 59, "user_id": 8401779, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba9f6f2eb1a88a74d6b9af5f463d0c99?s=128&d=identicon&r=PG&f=1", "display_name": "Andrew Sonin", "link": "https://stackoverflow.com/users/8401779/andrew-sonin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 662, "favorite_count": 0, "accepted_answer_id": 56572644, "answer_count": 1, "score": 1, "last_activity_date": 1560394297, "creation_date": 1560386808, "last_edit_date": 1560393651, "question_id": 56572014, "link": "https://stackoverflow.com/questions/56572014/is-there-any-overhead-in-rust-style-method-calling-approach-compared-to-the-usua", "title": "Is there any overhead in Rust-style method calling approach compared to the usual use of functions in other system programming languages such as C?", "body": "<p>I am just starting to use Rust, under the impression of its ownership paradigm. Reading the <a href=\"https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html\" rel=\"nofollow noreferrer\">tutorial</a>, I found the following code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let secret_number = rand::thread_rng().gen_range(1, 101);\n</code></pre>\n\n<p>I assume that a random integer is generated after instantiating of the <code>rand::ThreadRng</code> structure by calling its method.</p>\n\n<p>Isn't it better for performance simply to use functions like in C? Since Rust positions itself as a system programming language and if I am right in my conjecture, this choice in favor of creating structures and using their methods seems to be quite suboptimal.</p>\n"}]