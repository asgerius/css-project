[{"tags": ["reference", "rust", "move-semantics", "lifetime", "lifetime-scoping"], "answers": [{"comments": [{"owner": {"reputation": 3123, "user_id": 273348, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/35ugZ.jpg?s=128&g=1", "display_name": "Peter Jankuliak", "link": "https://stackoverflow.com/users/273348/peter-jankuliak"}, "edited": false, "score": 0, "creation_date": 1428531628, "post_id": 29526220, "comment_id": 47207143, "body": "Yes, thanks for the edits. Indeed unfortunately I can&#39;t use this solution as I need to use the <code>routing</code> object in the main thread prior to sending it to the other thread. Well, there are always workarounds (like doing what needs to be done inside the other thread and then send back result through a mpsc::channel) but I&#39;m mostly interested in solving this particular problem."}, {"owner": {"reputation": 3123, "user_id": 273348, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/35ugZ.jpg?s=128&g=1", "display_name": "Peter Jankuliak", "link": "https://stackoverflow.com/users/273348/peter-jankuliak"}, "edited": false, "score": 0, "creation_date": 1428532569, "post_id": 29526220, "comment_id": 47207482, "body": "One of the ways I thought this could be solved was if I put both the facade and the node into one box, and then just move the box. But my rust-fu wasn&#39;t good enough for that :). I do understand though that how I want to achieve this may not be possible or just isn&#39;t the rust way of doing things."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 3123, "user_id": 273348, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/35ugZ.jpg?s=128&g=1", "display_name": "Peter Jankuliak", "link": "https://stackoverflow.com/users/273348/peter-jankuliak"}, "edited": false, "score": 1, "creation_date": 1428533091, "post_id": 29526220, "comment_id": 47207669, "body": "@PeterJankuliak you shouldn&#39;t need a <code>Box</code> at all, but moving one into the other was going to be a suggestion after I get off the bus. ^_^"}, {"owner": {"reputation": 3123, "user_id": 273348, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/35ugZ.jpg?s=128&g=1", "display_name": "Peter Jankuliak", "link": "https://stackoverflow.com/users/273348/peter-jankuliak"}, "edited": false, "score": 0, "creation_date": 1428572444, "post_id": 29526220, "comment_id": 47222608, "body": "I like the last option the most as it doesn&#39;t modify the structures, many thanks."}, {"owner": {"reputation": 2037, "user_id": 481812, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/9rtTd.png?s=128&g=1", "display_name": "Rbjz", "link": "https://stackoverflow.com/users/481812/rbjz"}, "edited": false, "score": 0, "creation_date": 1495741819, "post_id": 29526220, "comment_id": 75391255, "body": "Hello, <code>thread::scoped</code> being gone, the answer is somewhat misleading today. Are we left with crossbeam and scoped threadpool as recommended here <a href=\"https://stackoverflow.com/questions/32750829/passing-a-reference-to-a-stack-variable-to-a-scoped-thread\" title=\"passing a reference to a stack variable to a scoped thread\">stackoverflow.com/questions/32750829/&hellip;</a> ? Thanks"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 6, "last_activity_date": 1526477240, "last_edit_date": 1526477240, "creation_date": 1428530783, "answer_id": 29526220, "question_id": 29526058, "link": "https://stackoverflow.com/questions/29526058/passing-two-objects-where-one-holds-a-reference-to-another-into-a-thread/29526220#29526220", "title": "Passing two objects, where one holds a reference to another, into a thread", "body": "<p><a href=\"https://stackoverflow.com/q/32300132/155423\">The main problem is that once you have a reference to an item, <em>you cannot move that item</em></a>. Let's look at a simplified example of memory:</p>\n\n<pre><code>let a = Struct1; // the memory for Struct1 is on the stack at 0x1000\nlet b = &amp;a;      // the value of b is 0x1000\nlet c = a;       // This moves a to c, and it now sits on the stack at 0x2000\n</code></pre>\n\n<p>Oh no, if we try to use the reference in <code>b</code> (which still points at <code>0x1000</code>), then we will access undefined memory! This is exactly a class of bug that Rust helps prevent - hooray for Rust!</p>\n\n<p>How to fix it depends on your actual situation. In your example, I'd suggest <em>moving</em> the <code>facade</code> into the thread, <em>then</em> create the <code>RoutingNode</code> on the reference in the thread's stack:</p>\n\n<pre><code>let facade = MyFacade;\n\nlet t = thread::spawn(move || {\n    let f = facade;\n    let r = RoutingNode::new(&amp;f);\n});\n</code></pre>\n\n<p>This is the part of the answer where people usually say \"but that demo code isn't what my real code does\", so I look forward to the extra complexity!</p>\n\n<blockquote>\n  <p>unfortunately I can't use this solution as I need to use the routing object in the main thread prior to sending it to the other thread</p>\n</blockquote>\n\n<p>I see a few options here. The most straight-forward is to have the wrapping object <em>take ownership</em> of the wrapped object, and not just have a reference:</p>\n\n<pre><code>use std::thread;\n\ntrait Facade: Sync {\n    fn add(&amp;self) -&gt; u32;\n}\n\nstruct RoutingNode&lt;F&gt; {\n    facade: F,\n}\n\nimpl&lt;F&gt; RoutingNode&lt;F&gt;\nwhere\n    F: Facade,\n{\n    fn new(facade: F) -&gt; RoutingNode&lt;F&gt; {\n        RoutingNode { facade }\n    }\n}\n\nfn main() {\n    struct MyFacade;\n\n    impl Facade for MyFacade {\n        fn add(&amp;self) -&gt; u32 {\n            999u32\n        }\n    }\n\n    let facade = MyFacade;\n    let routing = RoutingNode::new(facade);\n\n    let t = thread::spawn(move || {\n        let r = routing;\n    });\n\n    t.join().expect(\"Unable to join\");\n}\n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/q/32750829/155423\">Another option is to use <em>scoped threads</em></a>. This allows you to have a thread that can have references from outside the closure, but <strong>must be joined</strong> before the borrowed variables go out of scope. Two potential providers of scoped threads:</p>\n\n<ul>\n<li><a href=\"https://crates.io/crates/crossbeam\" rel=\"nofollow noreferrer\">crossbeam</a></li>\n<li><a href=\"https://crates.io/crates/scoped_threadpool\" rel=\"nofollow noreferrer\">scoped-threadpool</a></li>\n</ul>\n\n<p>Using crossbeam:</p>\n\n<pre><code>extern crate crossbeam;\n\nlet facade = MyFacade;\nlet routing = RoutingNode::new(&amp;facade);\n\ncrossbeam::scope(|scope| {\n    scope.spawn(|| {\n        let r = routing;\n    })\n});\n</code></pre>\n\n<p>I prefer the first option if it makes semantic sense for your situation. I also like the second option, as often threads have a lifetime that doesn't need to be the entire program.</p>\n"}], "owner": {"reputation": 3123, "user_id": 273348, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/35ugZ.jpg?s=128&g=1", "display_name": "Peter Jankuliak", "link": "https://stackoverflow.com/users/273348/peter-jankuliak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 897, "favorite_count": 0, "accepted_answer_id": 29526220, "answer_count": 1, "score": 5, "last_activity_date": 1526477240, "creation_date": 1428530067, "last_edit_date": 1495742331, "question_id": 29526058, "link": "https://stackoverflow.com/questions/29526058/passing-two-objects-where-one-holds-a-reference-to-another-into-a-thread", "title": "Passing two objects, where one holds a reference to another, into a thread", "body": "<p>I have two objects where the second one requires the fist one to outlive it because it holds a reference to the first one. I need to move both of them into a thread, but the compiler is complaining that the first one doesn't live long enough. Here is the code:</p>\n\n<pre><code>use std::thread;\n\ntrait Facade: Sync {\n    fn add(&amp;self) -&gt; u32;\n}\n\nstruct RoutingNode&lt;'a&gt; {\n    facade: &amp;'a (Facade + 'a),\n}\n\nimpl&lt;'a&gt; RoutingNode&lt;'a&gt; {\n    fn new(facade: &amp;'a Facade) -&gt; RoutingNode&lt;'a&gt; {\n        RoutingNode { facade: facade }\n    }\n}\n\nfn main() {\n    struct MyFacade;\n\n    impl Facade for MyFacade {\n        fn add(&amp;self) -&gt; u32 {\n            999u32\n        }\n    }\n\n    let facade = MyFacade;\n    let routing = RoutingNode::new(&amp;facade);\n\n    let t = thread::spawn(move || {\n        let f = facade;\n        let r = routing;\n    });\n\n    t.join();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?gist=0a05fa75cb7f4650b0122dbe464a9675&amp;version=stable&amp;backtrace=0\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>And the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: `facade` does not live long enough\n  --&gt; &lt;anon&gt;:27:37\n   |\n27 |     let routing = RoutingNode::new(&amp;facade);\n   |                                     ^^^^^^ does not live long enough\n...\n35 | }\n   | - borrowed value only lives until here\n   |\n   = note: borrowed value must be valid for the static lifetime...\n</code></pre>\n\n<p>I believe I understand what the error is telling me: that once the <code>facade</code> object is moved to the thread, the reference will no longer be valid. But I was unable to find a working solution to this problem, assuming I would like to keep the structures intact.</p>\n\n<p><a href=\"http://users.rust-lang.org/t/passing-two-objects-where-one-holds-reference-to-another-into-a-thread/883/5\" rel=\"nofollow noreferrer\">I asked this question on the Rust forums as well</a></p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 1365, "user_id": 2341466, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/517837732aae0e367fe88baaf4daa26f?s=128&d=identicon&r=PG&f=1", "display_name": "andars", "link": "https://stackoverflow.com/users/2341466/andars"}, "edited": false, "score": 0, "creation_date": 1428524089, "post_id": 29523895, "comment_id": 47203399, "body": "How about <a href=\"http://is.gd/rcKOUw\" rel=\"nofollow noreferrer\">this</a>?"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 16, "last_activity_date": 1516025202, "last_edit_date": 1516025202, "creation_date": 1428529213, "answer_id": 29525856, "question_id": 29523895, "link": "https://stackoverflow.com/questions/29523895/what-type-should-i-use-for-a-2-dimensional-array/29525856#29525856", "title": "What type should I use for a 2-dimensional array?", "body": "<p><em>Arrays</em> are different types from <em>slices</em>. Notably, arrays have a fixed size, <strong>known at compile time</strong>. Slices have a fixed size, but <strong>known only at run time</strong>.</p>\n\n<p>I see two straight-forward choices here (see <a href=\"https://stackoverflow.com/a/29531983/155423\">Levans answer for another</a>). The first is to change your function to only accept references to arrays (or the whole array, if you can copy it or don't mind giving up ownership):</p>\n\n<pre><code>fn foo(a: &amp;[[f64; 4]; 3], x: &amp;[f64; 3]) {\n    for i in 0..3 {\n        for j in 0..4 {\n            println!(\"{}\", a[i][j]);\n        }\n    }\n}\n\nfn main() {\n    let a = [\n        [1.1, -0.2, 0.1, 1.6],\n        [0.1, -1.2, -0.2, 2.3],\n        [0.2, -0.1, 1.1, 1.5],\n    ];\n\n    let x = [0.0; 3];\n\n    foo(&amp;a, &amp;x);\n}\n</code></pre>\n\n<p>The other easy change is to make your declaration into references:</p>\n\n<pre><code>fn foo(a: &amp;[&amp;[f64]], x: &amp;[f64]) {\n    for i in 0..3 {\n        for j in 0..4 {\n            println!(\"{}\", a[i][j]);\n        }\n    }\n}\n\nfn main() {\n    let a = [\n        &amp;[1.1, -0.2, 0.1, 1.6][..],\n        &amp;[0.1, -1.2, -0.2, 2.3][..],\n        &amp;[0.2, -0.1, 1.1, 1.5][..],\n    ];\n\n    let x = [0.0; 3];\n\n    foo(&amp;a, &amp;x);\n}\n</code></pre>\n\n<p>Note that this second example, we can use the implicit coercion of a reference to an array to a slice, when we just pass in <code>&amp;a</code> and <code>&amp;x</code>. However, we <em>cannot</em> rely on that for the nested data in <code>a</code>. <code>a</code> has already been defined to be an array of arrays, and we can't change the element type.</p>\n\n<p>Also a <strong>word of caution</strong> - you really should use the length method of the slice in your ranges, otherwise you can easily <code>panic!</code> if you walk off the end.</p>\n\n<pre><code>fn foo(a: &amp;[&amp;[f64]], x: &amp;[f64]) {\n    for i in 0..a.len() {\n        let z = &amp;a[i];\n        for j in 0..z.len() {\n            println!(\"{}\", z[j]);\n        }\n    }\n}\n</code></pre>\n\n<p>Other stylistic changes I made to meet the Rust style:</p>\n\n<ol>\n<li>variables are <code>snake_case</code></li>\n<li>space after <code>:</code></li>\n<li>space after <code>;</code></li>\n<li>space around <code>=</code></li>\n<li>space after <code>,</code></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "is_accepted": false, "score": 7, "last_activity_date": 1516025077, "last_edit_date": 1516025077, "creation_date": 1428563286, "answer_id": 29531983, "question_id": 29523895, "link": "https://stackoverflow.com/questions/29523895/what-type-should-i-use-for-a-2-dimensional-array/29531983#29531983", "title": "What type should I use for a 2-dimensional array?", "body": "<p>As an alternative to Shepmaster's good explanation on the mechanisms, there is actually another way to have your function accept any mix of <strong>arrays</strong> and <strong>slices</strong> (and even <code>Vec</code>): it involves using generics with the <a href=\"http://doc.rust-lang.org/std/convert/trait.AsRef.html\" rel=\"nofollow noreferrer\"><code>AsRef</code></a> trait.</p>\n\n<p>the idea is to write your function like this:</p>\n\n<pre><code>use std::convert::AsRef;\n\nfn foo&lt;S, T, U&gt;(a: S, x: U)\nwhere\n    T: AsRef&lt;[f64]&gt;,\n    S: AsRef&lt;[T]&gt;,\n    U: AsRef&lt;[f64]&gt;,\n{\n    let slice_a = a.as_ref();\n    for i in 0..slice_a.len() {\n        let slice_aa = slice_a[i].as_ref();\n        for j in 0..slice_aa.len() {\n            println!(\"{}\", slice_aa[j]);\n        }\n    }\n}\n</code></pre>\n\n<p>This is quite a function, but is in fact quite simple: <code>S</code> must coerce to a <code>&amp;[T]</code> via the <code>AsRef</code> trait, and <code>T</code> must coerce to <code>&amp;[f64]</code> similarly. On the same way <code>U</code> must coerce to <code>&amp;[f64]</code>, but we do not necessarily have <code>U == T</code> !</p>\n\n<p>This way, <code>S</code> can be an array of slices, an array of array, a <code>Vec</code> of arrays or of slices, an array of Vec... Any combination is possible as long as the types implement the <code>AsRef</code> trait.</p>\n\n<p>Be careful though: the <code>AsRef</code> trait is only implemented for arrays up to the size 32.</p>\n"}], "owner": {"reputation": 51550, "user_id": 1458569, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/mPKhD.png?s=128&g=1", "display_name": "Igor Chubin", "link": "https://stackoverflow.com/users/1458569/igor-chubin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5047, "favorite_count": 0, "answer_count": 2, "score": 9, "last_activity_date": 1516025202, "creation_date": 1428521985, "last_edit_date": 1516025138, "question_id": 29523895, "link": "https://stackoverflow.com/questions/29523895/what-type-should-i-use-for-a-2-dimensional-array", "title": "What type should I use for a 2-dimensional array?", "body": "<p>What is wrong with the type of <code>a</code> here?</p>\n\n<pre><code>fn foo(a: &amp;[&amp;[f64]], x: &amp;[f64]) {\n    for i in 0..3 {\n        for j in 0..4 {\n            println!(\"{}\", a[i][j]);\n        }\n    }\n}\n\nfn main() {\n    let A: [[f64; 4]; 3] = [\n        [1.1, -0.2, 0.1, 1.6],\n        [0.1, -1.2, -0.2, 2.3],\n        [0.2, -0.1, 1.1, 1.5],\n    ];\n    let mut X: [f64; 3] = [0.0; 3];\n\n    foo(&amp;A, &amp;X);\n}\n</code></pre>\n\n<p>I get the compilation failure:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/main.rs:17:9\n   |\n17 |     foo(&amp;A, &amp;X);\n   |         ^^ expected slice, found array of 3 elements\n   |\n   = note: expected type `&amp;[&amp;[f64]]`\n              found type `&amp;[[f64; 4]; 3]`\n</code></pre>\n"}, {"tags": ["linker", "rust", "osdev", "relocation"], "comments": [{"owner": {"reputation": 115745, "user_id": 119527, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/lTjBL.png?s=128&g=1", "display_name": "Jonathon Reinhart", "link": "https://stackoverflow.com/users/119527/jonathon-reinhart"}, "edited": false, "score": 0, "creation_date": 1428488221, "post_id": 29511777, "comment_id": 47179467, "body": "I think you need to show the code corresponding to the problematic relocation, in mm.rs:25. It sounds like you need something like mcmodel=kernel in gcc."}, {"owner": {"reputation": 115745, "user_id": 119527, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/lTjBL.png?s=128&g=1", "display_name": "Jonathon Reinhart", "link": "https://stackoverflow.com/users/119527/jonathon-reinhart"}, "edited": false, "score": 0, "creation_date": 1428488345, "post_id": 29511777, "comment_id": 47179563, "body": "Just noticed that you want to avoid that option."}, {"owner": {"reputation": 2141, "user_id": 1206549, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/lYFIe.jpg?s=128&g=1", "display_name": "maxdev", "link": "https://stackoverflow.com/users/1206549/maxdev"}, "edited": false, "score": 0, "creation_date": 1435057920, "post_id": 29511777, "comment_id": 50030180, "body": "Why do you subtract the <code>KERNEL_BASE</code> when placing the <code>_kernel_end</code>? The linker adds up the addresses and you made it start the calculation at <code>KERNEL_BASE</code>, so <code>_kernel_end</code> should be enough"}, {"owner": {"reputation": 39993, "user_id": 146622, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/5240a4744cdf2fffb8bd36c0649fcab4?s=128&d=identicon&r=PG", "display_name": "Daniel A.A. Pelsmaeker", "link": "https://stackoverflow.com/users/146622/daniel-a-a-pelsmaeker"}, "reply_to_user": {"reputation": 2141, "user_id": 1206549, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/lYFIe.jpg?s=128&g=1", "display_name": "maxdev", "link": "https://stackoverflow.com/users/1206549/maxdev"}, "edited": false, "score": 0, "creation_date": 1435058052, "post_id": 29511777, "comment_id": 50030257, "body": "@maxdev The kernel is loaded into physical memory at the 1 MiB mark, and I want <code>_kernel_end</code> to be the end of the kernel in physical memory (i.e. 1 MiB + kernel size). Since I added <code>KERNEL_BASE</code> to the current address, I have to subtract it again to get the end of the physical kernel."}, {"owner": {"reputation": 2141, "user_id": 1206549, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/lYFIe.jpg?s=128&g=1", "display_name": "maxdev", "link": "https://stackoverflow.com/users/1206549/maxdev"}, "edited": false, "score": 0, "creation_date": 1435058259, "post_id": 29511777, "comment_id": 50030409, "body": "Ah, I see what you&#39;re trying to do. This approach is quite hacky and I&#39;d suggest you to write an additional loader binary that is linked to lower memory, sets up paging and then directly loads the binary to higher memory (its not much effort). (Only an opinion)"}, {"owner": {"reputation": 251717, "user_id": 895245, "user_type": "registered", "accept_rate": 49, "profile_image": "https://i.stack.imgur.com/jhDFt.png?s=128&g=1", "display_name": "Ciro Santilli\u65b0\u7586\u68c9\u82b1TRUMP BAN BAD", "link": "https://stackoverflow.com/users/895245/ciro-santilli%e6%96%b0%e7%96%86%e6%a3%89%e8%8a%b1trump-ban-bad"}, "edited": false, "score": 0, "creation_date": 1444168049, "post_id": 29511777, "comment_id": 53786148, "body": "What are the exact compilation commands and your distro? Related: <a href=\"http://stackoverflow.com/questions/9827157/what-does-keep-mean-in-a-linker-script\" title=\"what does keep mean in a linker script\">stackoverflow.com/questions/9827157/&hellip;</a>"}], "owner": {"reputation": 39993, "user_id": 146622, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/5240a4744cdf2fffb8bd36c0649fcab4?s=128&d=identicon&r=PG", "display_name": "Daniel A.A. Pelsmaeker", "link": "https://stackoverflow.com/users/146622/daniel-a-a-pelsmaeker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 772, "favorite_count": 0, "answer_count": 0, "score": 6, "last_activity_date": 1428520786, "creation_date": 1428487904, "last_edit_date": 1428520786, "question_id": 29511777, "link": "https://stackoverflow.com/questions/29511777/weird-linker-behavior-relocation-truncated-to-fit", "title": "Weird linker behavior: relocation truncated to fit", "body": "<p>I have a linker script for a kernel with two absolute symbols: <code>_kernel_start</code> and <code>_kernel_end</code>. However, I get a linker relocation error for only <code>_kernel_end</code>:</p>\n\n<pre><code>In function `kernel::mem::mm::setup_memorymap':\n/home/virtlink/kernel/src/mem/mm.rs:25:(.text._ZN3mem2mm15setup_memorymap):\n  relocation truncated to fit: R_X86_64_PC32 against symbol `_kernel_end'\n  defined in *ABS* section in ./kernel.bin\n</code></pre>\n\n<p>There have been many questions here on SO about this error, but I found none that solves my particular problem.</p>\n\n<p>Apparently, this:</p>\n\n<pre><code>_kernel_start = .;\n</code></pre>\n\n<p>...is treated as 32-bit, whereas this:</p>\n\n<pre><code>. += KERNEL_BASE;\n_kernel_end = . - KERNEL_BASE;\n</code></pre>\n\n<p>...is treated as 64-bit. If I move the <code>_kernel_end</code> symbol above the <code>. += KERNEL_BASE</code> line like this:</p>\n\n<pre><code>_kernel_end = .;\n. += KERNEL_BASE;\n</code></pre>\n\n<p>...then it works again. But I want <code>_kernel_end</code> at the end of my linker script.</p>\n\n<p>The linker script puts the boot code at the start of memory, and the rest of the code in the higher-half of the 64-bit virtual memory space. It looks like this:</p>\n\n<pre><code>OUTPUT_FORMAT(elf64-x86-64)\n\nKERNEL_BASE = 0xFFFFFFFF80000000;\n\nSECTIONS\n{\n    /* Boot code at 1 MiB */\n    . = 1M;\n    _kernel_start = .;\n    .boot :\n    {\n        KEEP( *(.multiboot) )\n        *(.boot)\n        *(.bootdata)\n    }\n\n    /* Kernel code at high virtual address. */\n    . += KERNEL_BASE;\n    .text ALIGN(4K) : AT(ADDR(.text) - KERNEL_BASE)\n    {\n        *(.text)\n        *(.gnu.linkonce.t*)\n    }\n    .data ALIGN(4K) : AT(ADDR(.data) - KERNEL_BASE)\n    {\n        *(.data)\n        *(.gnu.linkonce.d*)\n    }\n    .rodata ALIGN(4K) : AT(ADDR(.rodata) - KERNEL_BASE)\n    {\n        *(.rodata)\n        *(.gnu.linkonce.r*)\n    }\n    .bss ALIGN(4K) : AT(ADDR(.bss) - KERNEL_BASE)\n    {\n        *(COMMON)\n        *(.bss)\n        *(.bss.*)\n        *(.gnu.linkonce.b*)\n    }\n    _kernel_end = . - KERNEL_BASE;\n\n    /DISCARD/ :\n    {\n        *(.comment)\n        *(.eh_frame)\n    }\n}\n</code></pre>\n\n<p>The kernel is really small, so <code>_kernel_start = 0x00100000</code> and <code>_kernel_end = 0x00142000</code>. It shouldn't give me relocation errors.</p>\n\n<p>How can I rewrite the linker script such that <code>_kernel_end</code> give me no more relocation errors? I don't want to use <code>mcmodel=large</code> just for this one symbol.</p>\n\n<hr>\n\n<p>Here's the code in which I'm using the symbols. It's Rust.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn get_kernel_location() -&gt; (*const u8, *const u8) {\n    extern {\n        static _kernel_start: u8;\n        static _kernel_end: u8;\n    }\n\n    let kernel_start: *const u8 = &amp;_kernel_start;\n    let kernel_end: *const u8 = &amp;_kernel_end;\n\n    println!(\"{:p}\", kernel_start);\n    println!(\"{:p}\", kernel_end);\n\n    (kernel_start, kernel_end)\n}\n</code></pre>\n\n<p>Here are the entries in the relocation table of the Rust compiled object file:</p>\n\n<pre><code>  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n000000000012  058800000009 R_X86_64_GOTPCREL 0000000000000000 _kernel_end - 4\n000000000019  058900000009 R_X86_64_GOTPCREL 0000000000000000 _kernel_start - 4\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1428498464, "post_id": 29510197, "comment_id": 47186437, "body": "On top of what Vladimir says, I would encourage you to create a <i>new type</i> for your SHA1, one that indicates that all the characters are alphanumeric (more restrictive than ASCII). You may then opt to store it internally in any fashion that makes sense (perhaps a Vec&lt;u8&gt;)."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 6, "last_activity_date": 1428483477, "creation_date": 1428483477, "answer_id": 29510197, "question_id": 29506579, "link": "https://stackoverflow.com/questions/29506579/how-to-partition-a-string-at-a-fixed-index/29510197#29510197", "title": "How to partition a string at a fixed index?", "body": "<p>If you know that your string only contains ASCII characters (as in case with sha digests), you can use slices directly:</p>\n\n<pre><code>let s = \"13e3f28a65a42bf6258cbd1d883d1ce3dac8f085\";\nlet first = &amp;s[..2];  // \"13\"\nlet rest = &amp;s[2..];   // \"e3f28a65a42bf6258cbd1d883d1ce3dac8f085\"\n</code></pre>\n\n<p>It won't work correctly if your string contains non-ASCII characters because slicing uses byte offsets, and if any index used in slicing points into the middle of a code point representation, your program will panic.</p>\n"}, {"tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 2, "last_activity_date": 1428484116, "creation_date": 1428484116, "answer_id": 29510394, "question_id": 29506579, "link": "https://stackoverflow.com/questions/29506579/how-to-partition-a-string-at-a-fixed-index/29510394#29510394", "title": "How to partition a string at a fixed index?", "body": "<p>If you are expecting two <code>String</code>s instead of slices, you can use the <code>chars()</code> method and some <code>Iterator</code> methods to obtain them.</p>\n\n<pre><code>let text = \"abcdefg\".to_string();\nlet start: String = text.chars().take(2).collect();\nlet end: String = text.chars().skip(2).collect();\n</code></pre>\n\n<p>If you don't want to do heap allocations, you can use slices instead:</p>\n\n<pre><code>let start: &amp;str = text.slice_chars(0, 2);\nlet end: &amp;str = text.slice_chars(2, text.char_len());\n</code></pre>\n\n<p>Note that the slices version requires you to use unstable rust (nightly builds, not the beta)</p>\n"}, {"tags": [], "owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "is_accepted": false, "score": 1, "last_activity_date": 1428489299, "creation_date": 1428489299, "answer_id": 29512296, "question_id": 29506579, "link": "https://stackoverflow.com/questions/29506579/how-to-partition-a-string-at-a-fixed-index/29512296#29512296", "title": "How to partition a string at a fixed index?", "body": "<p>Here is a way to efficiently split a <strong>String</strong> into two <strong>String</strong>s, in case you have this owned string data case. The allocation of the input string is retained in the first piece by just using truncation.</p>\n\n<pre><code>/// Split a **String** at a particular index\n///\n/// **Panic** if **byte_index** is not a character boundary\nfn split_string(mut s: String, byte_index: usize) -&gt; (String, String)\n{\n    let tail = s[byte_index..].into();\n    s.truncate(byte_index);\n    (s, tail)\n}\n</code></pre>\n\n<p><strong>Note:</strong> The <em>.into()</em> method is from the generic conversion trait <strong>Into</strong> and in this case it converts <strong>&amp;str</strong> into <strong>String</strong>.</p>\n"}, {"tags": [], "owner": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "is_accepted": false, "score": 4, "last_activity_date": 1473664816, "creation_date": 1473664816, "answer_id": 39445174, "question_id": 29506579, "link": "https://stackoverflow.com/questions/29506579/how-to-partition-a-string-at-a-fixed-index/39445174#39445174", "title": "How to partition a string at a fixed index?", "body": "<p>There's a <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.split_at\" rel=\"nofollow\">split_at</a> method since Rust 1.4, use it like this:</p>\n\n<pre><code>let s = \"13e3f28a65a42bf6258cbd1d883d1ce3dac8f085\";\nlet (first, last) = s.split_at(2);\n\nassert_eq!(\"13\", first);\nassert_eq!(\"e3f28a65a42bf6258cbd1d883d1ce3dac8f085\", last);\n</code></pre>\n\n<p>Note that the index is a byte position and must lie on a character boundary. In this case this works because you know that your input string is ASCII.</p>\n"}], "owner": {"reputation": 143, "user_id": 2303239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/52c09af6113b063ab533fbad5663f317?s=128&d=identicon&r=PG", "display_name": "David Stalnaker", "link": "https://stackoverflow.com/users/2303239/david-stalnaker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1984, "favorite_count": 0, "accepted_answer_id": 29510197, "answer_count": 4, "score": 2, "last_activity_date": 1473664816, "creation_date": 1428470638, "last_edit_date": 1428498330, "question_id": 29506579, "link": "https://stackoverflow.com/questions/29506579/how-to-partition-a-string-at-a-fixed-index", "title": "How to partition a string at a fixed index?", "body": "<p>I have a String (in particular a SHA1 hex digest) that I would like to split into two substrings - the first two characters and the rest of of the string.  Is there a clean way to do this in Rust?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 9721, "user_id": 131057, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/4d84023d355c712ca3a393881e862679?s=128&d=identicon&r=PG", "display_name": "Luka Rahne", "link": "https://stackoverflow.com/users/131057/luka-rahne"}, "edited": false, "score": 0, "creation_date": 1428481154, "post_id": 29504873, "comment_id": 47175019, "body": "One issue is that tuple is type.  So tuple with 2 elements is distinct type from tuple of 3 elements. take(2) might not be best function here, but you would probably require special macro that returns appropriate type based on number you pass in."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1428495859, "post_id": 29504873, "comment_id": 47184567, "body": "What behavior do you want when the vector contains less than two items?"}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1428559897, "post_id": 29504873, "comment_id": 47215475, "body": "@Shepmaster that is an excellent question. In that light I can&#39;t think of a good enough reason for this functionality to be possible."}], "answers": [{"comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1428482836, "post_id": 29509257, "comment_id": 47176027, "body": "I like this, but it would be nice to have something more concise. Making a function that returns <code>(v[0].clone(), v[1].clone())</code> seems to work as well. Is there an advantage one way or the other?"}, {"owner": {"reputation": 1387, "user_id": 531435, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/045b50d0b907f095c2f856dada8d68ce?s=128&d=identicon&r=PG", "display_name": "helios35", "link": "https://stackoverflow.com/users/531435/helios35"}, "reply_to_user": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 1, "creation_date": 1428483874, "post_id": 29509257, "comment_id": 47176685, "body": "Apart from the cloning, one obvious disadvantage would be that <code>v[i]</code> might panic unless you explicitly check for the Vec&#39;s length, which would make the code less concise. Using pattern matching, the compiler checks if the match is exhaustive and requires you to handle Vec&#39;s of any arbitrary length. Of course, you shouldn&#39;t just use the unreachable! macro like above unless the Vec&#39;s length is known in advance."}, {"owner": {"reputation": 329, "user_id": 1020315, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fJhEL.jpg?s=128&g=1", "display_name": "Phil", "link": "https://stackoverflow.com/users/1020315/phil"}, "edited": false, "score": 2, "creation_date": 1476945556, "post_id": 29509257, "comment_id": 67563659, "body": "As of <code>rustc 1.12.0</code>, slice pattern syntax is still experimental. See <a href=\"https://github.com/rust-lang/rust/issues/23121\" rel=\"nofollow noreferrer\">Issue #23121</a>"}], "tags": [], "owner": {"reputation": 1387, "user_id": 531435, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/045b50d0b907f095c2f856dada8d68ce?s=128&d=identicon&r=PG", "display_name": "helios35", "link": "https://stackoverflow.com/users/531435/helios35"}, "is_accepted": true, "score": 15, "last_activity_date": 1591616957, "last_edit_date": 1591616957, "creation_date": 1428480666, "answer_id": 29509257, "question_id": 29504873, "link": "https://stackoverflow.com/questions/29504873/is-there-any-way-to-unpack-an-iterator-into-a-tuple/29509257#29509257", "title": "Is there any way to unpack an iterator into a tuple?", "body": "<p>This may not be exactly what you asked for, but I suppose you rarely want to convert an arbitrarily large vector to a tuple anyway. If you just want to extract the first few elements of a vector into a tuple, you can do so using <em>slice pattern matching</em>:</p>\n\n<pre><code>fn main() {\n    let v = vec![1, 2, 3];\n    let (a, b) = match &amp;v[..] {\n        &amp;[first, second, ..] =&gt; (first, second),\n        _ =&gt; unreachable!(),\n    };\n    assert_eq!((a, b), (1, 2));\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 597, "user_id": 909836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cf7ed7a7c66e5e50db5d4ce6550c8b6?s=128&d=identicon&r=PG", "display_name": "gcp", "link": "https://stackoverflow.com/users/909836/gcp"}, "is_accepted": false, "score": 18, "last_activity_date": 1591616991, "last_edit_date": 1591616991, "creation_date": 1485968457, "answer_id": 41985435, "question_id": 29504873, "link": "https://stackoverflow.com/questions/29504873/is-there-any-way-to-unpack-an-iterator-into-a-tuple/41985435#41985435", "title": "Is there any way to unpack an iterator into a tuple?", "body": "<p>The itertools crate has methods like <a href=\"https://docs.rs/itertools/*/itertools/trait.Itertools.html#method.tuples\" rel=\"noreferrer\"><code>tuples</code></a> and <a href=\"https://docs.rs/itertools/*/itertools/trait.Itertools.html#method.next_tuple\" rel=\"noreferrer\"><code>next_tuple</code></a> that can help with this.</p>\n\n<pre><code>use itertools::Itertools; // 0.9.0\n\nfn main() {\n    let v = vec![1, 2, 3];\n    let (a, b) = v.iter().next_tuple().unwrap();\n\n    assert_eq!(a, &amp;1);\n    assert_eq!(b, &amp;2);\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 972, "user_id": 1578458, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/2RWBA.gif?s=128&g=1", "display_name": "Jesko H&#252;ttenhain", "link": "https://stackoverflow.com/users/1578458/jesko-h%c3%bcttenhain"}, "is_accepted": false, "score": 5, "last_activity_date": 1521383721, "last_edit_date": 1521383721, "creation_date": 1494788576, "answer_id": 43967765, "question_id": 29504873, "link": "https://stackoverflow.com/questions/29504873/is-there-any-way-to-unpack-an-iterator-into-a-tuple/43967765#43967765", "title": "Is there any way to unpack an iterator into a tuple?", "body": "<p>I wrote this ugly recursive macro that converts a <code>Vec</code> to a tuple because I wanted to learn something about macros.</p>\n\n<pre><code>macro_rules! tuplet {\n    { ($y:ident $(, $x:ident)*) = $v:expr } =&gt; {\n        let ($y, $($x),*) = tuplet!($v ; 1 ; ($($x),*) ; ($v[0]) );\n    };\n    { $v:expr ; $j:expr ; ($y:ident $(, $x:ident)*) ; ($($a:expr),*) } =&gt; {\n        tuplet!( $v ; $j+1 ; ($($x),*) ; ($($a),*,$v[$j]) )\n    };\n    { $v:expr ; $j:expr ; () ; $accu:expr } =&gt; {\n        $accu\n    }\n}\n</code></pre>\n\n<p>I am new to this and probably very bad at it, so there's most likely a better way to do it. This is just a proof of concept. It allows you to write:</p>\n\n<pre><code>fn main() {\n    let v = vec![1, 2, 3];\n    tuplet!((a, b, c) = v);\n\n    assert_eq!(a, 1);\n    assert_eq!(b, 2);\n    assert_eq!(c, 3);\n}\n</code></pre>\n\n<p>Somewhere in that macro definition you find the part <code>$v[$j]</code>, which you could replace by <code>$v.nth($j)</code> if you want to use it for iterators.</p>\n"}, {"tags": [], "owner": {"reputation": 6100, "user_id": 464309, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/218a5a4c4df417cf0f2ad0d75b773d66?s=128&d=identicon&r=PG", "display_name": "AmigoNico", "link": "https://stackoverflow.com/users/464309/amigonico"}, "is_accepted": false, "score": 1, "last_activity_date": 1588446937, "last_edit_date": 1588446937, "creation_date": 1588400777, "answer_id": 61555349, "question_id": 29504873, "link": "https://stackoverflow.com/questions/29504873/is-there-any-way-to-unpack-an-iterator-into-a-tuple/61555349#61555349", "title": "Is there any way to unpack an iterator into a tuple?", "body": "<p>gcp is on the right track; his answer seems like the correct one to me.</p>\n\n<p>I'm going to give a more compelling example, though, since the OP seemed in a comment to wonder whether what he asked for is even worthwhile (\"I can't think of a good enough reason for this functionality to be possible.\").  Check out the <code>Person::from_csv</code> function below:</p>\n\n<pre><code>use itertools::Itertools;\n\n#[derive(Debug)]\nstruct Person&lt;'a&gt; {\n    first: &amp;'a str,\n    last:  &amp;'a str,\n}\n\nimpl&lt;'a&gt; Person&lt;'a&gt; {\n    // Create a Person from a str of form \"last,first\".\n    fn from_csv(s: &amp;'a str) -&gt; Option&lt;Self&gt; {\n        s.split(',').collect_tuple().map(\n            |(last, first)| Person { first, last }\n        )\n    }\n}\n\nfn main() {\n    dbg!(Person::from_csv(\"Doe\"));          // None\n    dbg!(Person::from_csv(\"Doe,John\"));     // Some(...)\n    dbg!(Person::from_csv(\"Doe,John,foo\")); // None\n}\n</code></pre>\n\n<p>It takes the Iterator produced by <code>split</code> and collects the results into a tuple so that we can match and destructure it.  If there are too many or too few commas, you won't get a matching tuple.  This code is clean because <code>collect_tuple</code> lets us use pattern matching and destructuring.</p>\n\n<p>Here it is <a href=\"https://play.rust-lang.org/?version=nightly&amp;mode=debug&amp;edition=2018&amp;gist=1638b1a9368b193f58f70e97ffcb2ca9\" rel=\"nofollow noreferrer\">in the playground</a>.</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9024, "favorite_count": 3, "accepted_answer_id": 29509257, "answer_count": 4, "score": 24, "last_activity_date": 1591616991, "creation_date": 1428460161, "last_edit_date": 1521383419, "question_id": 29504873, "link": "https://stackoverflow.com/questions/29504873/is-there-any-way-to-unpack-an-iterator-into-a-tuple", "title": "Is there any way to unpack an iterator into a tuple?", "body": "<p>Is there any way to accomplish something like the following:</p>\n\n<pre><code>let v = vec![1, 2, 3];\nlet (a, b) = v.iter().take(2);\n</code></pre>\n\n<p>Such that <code>a = 1</code> and <code>b = 2</code> at the end?</p>\n\n<p>I know I could just use a vector but I would like to have named variables.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1428458954, "post_id": 29504514, "comment_id": 47166685, "body": "FYI, there&#39;s no need to specify the type (<code>count: i32</code>) <b>and</b> use a type suffix (<code>0i32</code>). Once you pick one of those, you don&#39;t need to specify the type when adding another literal (<code>1i32</code>)."}], "answers": [{"comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1428458932, "post_id": 29504547, "comment_id": 47166678, "body": "That&#39;s exactly what I came up with after looking at it for a minute. I just wanted to make sure <code>zip</code> was the way to go."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 15, "last_activity_date": 1573829116, "last_edit_date": 1573829116, "creation_date": 1428458178, "answer_id": 29504547, "question_id": 29504514, "link": "https://stackoverflow.com/questions/29504514/whats-the-best-way-to-compare-2-vectors-or-strings-element-by-element/29504547#29504547", "title": "What&#39;s the best way to compare 2 vectors or strings element by element?", "body": "<p>To get the count of matching elements, I'd probably use <code>filter</code> and <code>count</code>.</p>\n\n<pre><code>fn main() {\n    let a = \"Hello\";\n    let b = \"World\";\n\n    let matching = a.chars().zip(b.chars()).filter(|&amp;(a, b)| a == b).count();\n    println!(\"{}\", matching);\n\n    let a = [1, 2, 3, 4, 5];\n    let b = [1, 1, 3, 3, 5];\n\n    let matching = a.iter().zip(&amp;b).filter(|&amp;(a, b)| a == b).count();\n    println!(\"{}\", matching);\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1573829059, "post_id": 58175659, "comment_id": 104025686, "body": "<a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a>. <code>zip</code> takes <code>IntoIterator</code>, so you can just do <code>.zip(b)</code>. You could micro-optimize by checking to see if the two slices are the same length before doing any iteration."}], "tags": [], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "is_accepted": false, "score": 0, "last_activity_date": 1573829048, "last_edit_date": 1573829048, "creation_date": 1569879955, "answer_id": 58175659, "question_id": 29504514, "link": "https://stackoverflow.com/questions/29504514/whats-the-best-way-to-compare-2-vectors-or-strings-element-by-element/58175659#58175659", "title": "What&#39;s the best way to compare 2 vectors or strings element by element?", "body": "<p>If you wanted to use <a href=\"https://stackoverflow.com/a/29504547/155423\">@Shepmaster's answer</a> as the basis of an assertion to be used in a unit test, try this:</p>\n\n<pre><code>fn do_vecs_match&lt;T: PartialEq&gt;(a: &amp;Vec&lt;T&gt;, b: &amp;Vec&lt;T&gt;) -&gt; bool {\n    let matching = a.iter().zip(b.iter()).filter(|&amp;(a, b)| a == b).count();\n    matching == a.len() &amp;&amp; matching == b.len()\n}\n</code></pre>\n\n<p>Of course, be careful when using this on floats! Those pesky NaNs won't compare, and you might want to use a tolerance for comparing the other values. And you might want to make it fancy by telling the index of the first nonmatching value.</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7188, "favorite_count": 1, "accepted_answer_id": 29504547, "answer_count": 2, "score": 5, "last_activity_date": 1573829116, "creation_date": 1428457906, "last_edit_date": 1428458782, "question_id": 29504514, "link": "https://stackoverflow.com/questions/29504514/whats-the-best-way-to-compare-2-vectors-or-strings-element-by-element", "title": "What&#39;s the best way to compare 2 vectors or strings element by element?", "body": "<p>What's the best way to compare 2 vectors or strings element by element in Rust, while being able to do processing on each pair of elements? For example if you wanted to keep count of the number of differing elements. This is what I'm using:    </p>\n\n<pre><code>let mut diff_count: i32 = 0i32;\nfor (x, y) in a.chars().zip(b.chars()) {\n    if x != y {\n        diff_count += 1i32;\n    }\n}\n</code></pre>\n\n<p>Is that the correct way or is there something more canonical?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 509, "user_id": 4747617, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1841eeba38ce0900b1ceadfde0076515?s=128&d=identicon&r=PG&f=1", "display_name": "Joshua Byer", "link": "https://stackoverflow.com/users/4747617/joshua-byer"}, "edited": false, "score": 0, "creation_date": 1428438662, "post_id": 29500666, "comment_id": 47159942, "body": "i think count actually counts and len fetches the length"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1428439491, "post_id": 29500971, "comment_id": 47160369, "body": "<code>.iter().len()</code> does not (immediately) call <code>Vec::len()</code>."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1428460799, "post_id": 29500971, "comment_id": 47167130, "body": "So if you call <code>.len()</code> on a lazy value will it invoke <code>.count()</code> internally? EDIT: Or would <code>.len()</code> not even exist for such a value?"}, {"owner": {"reputation": 8064, "user_id": 2007760, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/da33a5de07879db5ea0d55be9f875932?s=128&d=identicon&r=PG", "display_name": "Peter Uhnak", "link": "https://stackoverflow.com/users/2007760/peter-uhnak"}, "edited": false, "score": 1, "creation_date": 1428472539, "post_id": 29500971, "comment_id": 47170634, "body": "The <code>iter.len()</code> is provided by a trait, so on lazy value it will not exist."}, {"owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "edited": false, "score": 2, "creation_date": 1576845347, "post_id": 29500971, "comment_id": 105036724, "body": "Pleanse, correct me if I&#39;m wrong: both <code>len()</code> methods have a constant time complexity while <code>count</code> is lineal?"}, {"owner": {"reputation": 573, "user_id": 9946772, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/19b5785ce8af233b264c6f7fb66977e5?s=128&d=identicon&r=PG&f=1", "display_name": "kangalioo", "link": "https://stackoverflow.com/users/9946772/kangalioo"}, "reply_to_user": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "edited": false, "score": 2, "creation_date": 1588251100, "post_id": 29500971, "comment_id": 108830595, "body": "@Genarito Must be. The docs say &quot;This method will call next repeatedly until None is encountered&quot;, so the number of calls rise linearly with the number of elements"}, {"owner": {"reputation": 1899, "user_id": 7058363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zppXn.jpg?s=128&g=1", "display_name": "Genarito", "link": "https://stackoverflow.com/users/7058363/genarito"}, "edited": false, "score": 0, "creation_date": 1588251724, "post_id": 29500971, "comment_id": 108830970, "body": "Thank you! Also it worth to metion that <code>len</code> in structs that implements <a href=\"https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html\" rel=\"nofollow noreferrer\">ExactSizeIterator</a> is also BigO constant"}], "tags": [], "owner": {"reputation": 8064, "user_id": 2007760, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/da33a5de07879db5ea0d55be9f875932?s=128&d=identicon&r=PG", "display_name": "Peter Uhnak", "link": "https://stackoverflow.com/users/2007760/peter-uhnak"}, "is_accepted": false, "score": 22, "last_activity_date": 1428439954, "last_edit_date": 1428439954, "creation_date": 1428439419, "answer_id": 29500971, "question_id": 29500666, "link": "https://stackoverflow.com/questions/29500666/what-is-the-difference-between-len-and-count/29500971#29500971", "title": "What is the difference between len() and count()?", "body": "<p><a href=\"https://doc.rust-lang.org/collections/vec/struct.Vec.html#method.len\" rel=\"noreferrer\">vector.len()</a></p>\n\n<blockquote>\n  <p>Returns the number of elements in the vector.</p>\n</blockquote>\n\n<p><a href=\"http://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html#tymethod.len\" rel=\"noreferrer\">iter.len()</a></p>\n\n<blockquote>\n  <p>Return the exact length of the iterator.</p>\n</blockquote>\n\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.count\" rel=\"noreferrer\">iter.count()</a></p>\n\n<blockquote>\n  <p>Counts the number of elements in this iterator.</p>\n</blockquote>\n\n<p>So while they return the same value, <code>count</code> will actually count the elements. Note that <code>len</code> is available only for ExactSizeIterator; so if the value is lazy-retrieved the total length may not be available and you need to explicitly count it.</p>\n"}], "owner": {"reputation": 10672, "user_id": 321731, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/88e60659e997d36af3ff348b3251e1a6?s=128&d=identicon&r=PG", "display_name": "tshepang", "link": "https://stackoverflow.com/users/321731/tshepang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 12718, "favorite_count": 2, "answer_count": 1, "score": 19, "last_activity_date": 1428445608, "creation_date": 1428438353, "last_edit_date": 1428445608, "question_id": 29500666, "link": "https://stackoverflow.com/questions/29500666/what-is-the-difference-between-len-and-count", "title": "What is the difference between len() and count()?", "body": "<p>In code below, I get the same result whether I use <code>len</code> or <code>count</code>:</p>\n\n<pre><code>fn main() {\n    let vector = [0, 1, 2];\n    assert_eq!(vector.iter().count(), vector.iter().len());\n}\n</code></pre>\n\n<p><code>len</code> seems more generic since I can also do this:</p>\n\n<pre><code>assert_eq!(vector.len(), 3);\n</code></pre>\n\n<p>So, what's the difference between the two... why use one and not the other?</p>\n"}, {"tags": ["generics", "rust"], "answers": [{"comments": [{"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1428468450, "post_id": 29504534, "comment_id": 47169192, "body": "The call must be <code>foo(&amp;thingy)</code>, that&#39;s the point of the question. <code>thingy</code> is <i>either</i> <code>A::Bar</code> <i>or</i> <code>B::Bar</code>, <i>never both</i>."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1428471133, "post_id": 29504534, "comment_id": 47170074, "body": "But, as you said, that&#39;s impossible.  Coherence won&#39;t let you make a blanket <code>impl</code> for both simultaneously; hence the wrapper.  You need <i>some</i> kind of unifying trait, and you need a layer of type indirection to allow you to implement that unifying trait for both <code>A</code> and <code>B</code>.  If you really can&#39;t change anything about <code>foo</code>, then the answer as far as I can see is: &quot;you can&#39;t, give up&quot;."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1428473845, "post_id": 29504534, "comment_id": 47171182, "body": "Then just make <i>that</i> an answer."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": false, "score": 0, "last_activity_date": 1428458056, "creation_date": 1428458056, "answer_id": 29504534, "question_id": 29498940, "link": "https://stackoverflow.com/questions/29498940/function-to-take-argument-bound-by-any-of-several-traits/29504534#29504534", "title": "Function to take argument bound by ANY of several traits", "body": "<p>You can do it by writing a wrapper around your <code>&amp;T</code> that explicitly controls <em>which</em> <code>bar</code> you want to be called.  I'm not aware of any <em>simpler</em> method of doing this.  The below code <em>should</em> be efficient, since it uses static dispatch.</p>\n\n<pre><code>trait A {\n    fn bar(&amp;self);\n}\n\ntrait B {\n    fn bar(&amp;self);\n}\n\n// This will be our \"common ground\" trait.\ntrait Bar {\n    #[inline(always)]\n    fn bar(&amp;self);\n}\n\n// The Bar wrapper for A.\nstruct ABar&lt;'a, T: 'a + A&gt;(&amp;'a T); //'\n\nimpl&lt;'a, T: 'a + A&gt; Bar for ABar&lt;'a, T&gt; { //'\n    #[inline(always)]\n    fn bar(&amp;self) { self.0.bar(); }\n}\n\n// The Bar wrapper for A.\nstruct BBar&lt;'a, T: 'a + B&gt;(&amp;'a T); //'\n\nimpl&lt;'a, T: 'a + B&gt; Bar for BBar&lt;'a, T&gt; { //'\n    #[inline(always)]\n    fn bar(&amp;self) { self.0.bar(); }\n}\n\n// Example type that implements both A and B.\nstruct Thingy;\n\nimpl A for Thingy {\n    fn bar(&amp;self) { println!(\"A::bar()\"); }\n}\n\nimpl B for Thingy {\n    fn bar(&amp;self) { println!(\"B::bar()\"); }\n}\n\n// Note: I've removed the reference here since the implementations of Bar\n// are just wrappers around a reference.\nfn foo&lt;T: Bar&gt;(x: T) {\n    x.bar();\n}\n\nfn main() {\n    let thingy = Thingy;\n    // Note that we have to be *explicit* about the wrapper.\n    foo(ABar(&amp;thingy));\n    foo(BBar(&amp;thingy));\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1429303236, "post_id": 29708805, "comment_id": 47553501, "body": "I believe static and dynamic dispatch can do exactly the same things, currently. The problem is that there are two, <i>different</i>, traits, that define the method."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1429303307, "post_id": 29708805, "comment_id": 47553537, "body": "The call must be <code>foo(&amp;thingy)</code>, that&#39;s the point of the question. thingy is <i>either</i> <code>A::Bar</code> <i>or</i> <code>B::Bar</code>, <i>never both</i>."}, {"owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "reply_to_user": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1429304016, "post_id": 29708805, "comment_id": 47553908, "body": "b::Bar and c::Bar in my example <i>are</i> two different traits that define the same method. And an enum is expressing that it&#39;s <i>either</i> &amp;b::Bar <i>or</i> &amp;c::Bar. The signature of foo is saying just what you said: accept something that either implements b::Bar or c::Bar. Except that the dispatch of the method is done at runtime (at compile time you don&#39;t know what actual type implementing b::Bar or c::Bar you&#39;re going to use, so rustc can&#39;t monomorphize foo)"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1429304378, "post_id": 29708805, "comment_id": 47554105, "body": "Therefore the function does <i>not</i> accept either <code>A::Bar</code> or <code>B::Bar</code>, it accepts <code>Bars</code>, and therefore it does not qualify as answer."}], "tags": [], "owner": {"reputation": 22050, "user_id": 497364, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8fd4eb2ae966a16e698b3e61217a7e1?s=128&d=identicon&r=PG", "display_name": "Paolo Falabella", "link": "https://stackoverflow.com/users/497364/paolo-falabella"}, "is_accepted": false, "score": -1, "last_activity_date": 1429302697, "creation_date": 1429302697, "answer_id": 29708805, "question_id": 29498940, "link": "https://stackoverflow.com/questions/29498940/function-to-take-argument-bound-by-any-of-several-traits/29708805#29708805", "title": "Function to take argument bound by ANY of several traits", "body": "<p>I don't think you can do it with static dispatch, right now. You might be able to use trait objects, instead (depending on the object-safety of your traits).</p>\n\n<p>i.e. if you define an enum:</p>\n\n<pre><code>enum Bars&lt;'a&gt; {\n    Bbar(&amp;'a b::Bar),\n    Cbar(&amp;'a c::Bar),\n}\n</code></pre>\n\n<p>you could have your function written like this:</p>\n\n<pre><code>fn foo(bars: &amp;Bars) -&gt; u32 {\n    use Bars::*;\n    match bars {\n        &amp;Bbar(b) =&gt; b.foo(),\n        &amp;Cbar(c) =&gt; c.foo(),\n    }\n}\n</code></pre>\n\n<p><a href=\"http://is.gd/0eVvIe\" rel=\"nofollow\">playpen example</a></p>\n"}], "owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 81, "favorite_count": 1, "answer_count": 2, "score": -3, "last_activity_date": 1429302697, "creation_date": 1428432427, "last_edit_date": 1428433071, "question_id": 29498940, "link": "https://stackoverflow.com/questions/29498940/function-to-take-argument-bound-by-any-of-several-traits", "title": "Function to take argument bound by ANY of several traits", "body": "<p>I have a function (let's call it <code>foo&lt;T&gt;(x: &amp;mut T)</code>) that needs to call a particular method on it's argument (let's call it <code>x.bar()</code>). Problem is, that there are <em>two</em> different <em>traits</em> that define method <code>bar</code> with precisely the same semantics (let's call them <code>A::Bar</code> and <code>B::Bar</code>). So I want the function to accept either <code>A::Bar</code> or <code>B::Bar</code>.</p>\n\n<p>If they were structs, I could simply define a new trait for them. If only one was trait, I could define a new trait with blanket definition (<code>impl&lt;T&gt; My::Bar for T where T: A::Bar</code>) and explicit implementation for any remaining structs. But they are <em>two traits</em> and two blanket <code>impl</code>s are not allowed. Is there any other way to work around this? Perhaps by <code>match</code> with different types or something?</p>\n\n<p>Obviously they are <strong>not my traits</strong>. It is a bug in the library that defines them. I am going to report it. But I would still like a workaround for until it is fixed.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16572, "user_id": 83741, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/60adb60c59462ef0cb9db65853736cf4?s=128&d=identicon&r=PG", "display_name": "Alexander Torstling", "link": "https://stackoverflow.com/users/83741/alexander-torstling"}, "edited": false, "score": 2, "creation_date": 1428424021, "post_id": 29496191, "comment_id": 47151696, "body": "It&#39;s probably min which is trying to compare f64s with each other, but the comparing function is missing for f64. See <a href=\"http://stackoverflow.com/questions/28387711/implementing-ord-for-a-type-is-awkward\" title=\"implementing ord for a type is awkward\">stackoverflow.com/questions/28387711/&hellip;</a> for impl"}, {"owner": {"reputation": 47569, "user_id": 3255455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5993e7ece129141878cd6419d39cc26e?s=128&d=identicon&r=PG&f=1", "display_name": "gnasher729", "link": "https://stackoverflow.com/users/3255455/gnasher729"}, "edited": false, "score": 0, "creation_date": 1461319891, "post_id": 29496191, "comment_id": 61156534, "body": "This will go badly wrong if you have for example x = 1, y = 1, z = -1e100. Adding all three squares will give you catastrophic rounding errors if the smallest number is a huge negative number."}], "answers": [{"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 3, "last_activity_date": 1428423534, "creation_date": 1428423534, "answer_id": 29496318, "question_id": 29496191, "link": "https://stackoverflow.com/questions/29496191/how-can-i-implement-the-sum-of-squares-of-two-largest-numbers-out-of-three-for-f/29496318#29496318", "title": "How can I implement the sum of squares of two largest numbers out of three for floating-point numbers?", "body": "<p>Floats do not implement <code>Ord</code> because they do not have a total ordering. <code>NaN</code> is false to compare against any value, including another <code>NaN</code>.</p>\n\n<p>If you're on nightly Rust, you can use <a href=\"http://doc.rust-lang.org/nightly/std/cmp/fn.partial_min.html\" rel=\"nofollow\">partial_min</a>, which makes these kinds of cases explicit.</p>\n\n<p>You can also decide what to do in the case of things like <code>NaN</code>, and then implement a wrapper type over <code>f64</code>, and implement <code>Ord</code> for it, such that it handles that case.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1461331271, "post_id": 36791367, "comment_id": 61164366, "body": "In general, it&#39;s more obvious to use <a href=\"http://doc.rust-lang.org/std/primitive.f64.html#method.is_nan\" rel=\"nofollow noreferrer\"><code>is_nan</code></a> to tell if a value is <code>NaN</code>. However, the OP&#39;s question is largely <b>caused</b> because of <code>NaN</code>! Because <code>NaN</code> causes <code>f64</code> to not hold a <i>total order</i>, that type doesn&#39;t implement <code>Ord</code>. This answer actually shows why it is entirely correct that the original code should <b>not</b> compile. The rounding issues are just icing on the cake."}], "tags": [], "owner": {"reputation": 47569, "user_id": 3255455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5993e7ece129141878cd6419d39cc26e?s=128&d=identicon&r=PG&f=1", "display_name": "gnasher729", "link": "https://stackoverflow.com/users/3255455/gnasher729"}, "is_accepted": false, "score": 0, "last_activity_date": 1461331042, "last_edit_date": 1461331042, "creation_date": 1461321050, "answer_id": 36791367, "question_id": 29496191, "link": "https://stackoverflow.com/questions/29496191/how-can-i-implement-the-sum-of-squares-of-two-largest-numbers-out-of-three-for-f/36791367#36791367", "title": "How can I implement the sum of squares of two largest numbers out of three for floating-point numbers?", "body": "<p>If you want to avoid fatal rounding errors, you need to write your code as required: By adding the squares of two of the three numbers. Otherwise, if you have for example x = y = 1, and z = -1e100, then you get catastrophic rounding errors. The sum of the three squares gets rounded to 1e200, the same is subtracted, the result is 0 instead of 2. </p>\n\n<p>It can be worse: If z = -1e200, then z*z overflows, three squares add up to +inf, you subtract +inf and get NaN. </p>\n\n<pre><code>let x1 = if x &gt; y { x } else { y };\nlet mut x2 = if x &gt; y { y } else { x };\nif z &gt; x2 { x2 = z; }\n\nx1 * x1 + x2 * x2;\n</code></pre>\n\n<p>If you consider NaNs the situation gets slightly more complicated. Obviously if you have two or three NaNs the result will be NaN. If you have one NaN, you need to decide whether (a) you don't care, (b) the result should be NaN or (c) the result should be the sum of the squares of the two numbers that are not NaN. In case (b) or (c), the result should only depend on the three values, and not on the order in which they are used. </p>\n\n<p>The code above covers (a). If you want (b), then you need to make sure that z will be stored into x2 if it is NaN and x2 stays unchanged if it is NaN. You achieve this by changing the last line to</p>\n\n<pre><code>if z &gt; x2 || z != z { x2 = z };\n</code></pre>\n\n<p>If you want (c) it is a bit more complicated. </p>\n\n<pre><code>let x1 = if x &gt; y || y != y { x } else { y };\nlet mut x2 = if x &gt; y || y != y { y } else { x };\nif z &gt; x2 || x2 != x2 { x2 = z; }\n</code></pre>\n"}], "owner": {"reputation": 5237, "user_id": 819720, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/5bfa5cdbed8fbe25e9fb607a3b788aa4?s=128&d=identicon&r=PG", "display_name": "Marcus Vin&#237;cius Monteiro", "link": "https://stackoverflow.com/users/819720/marcus-vin%c3%adcius-monteiro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "accepted_answer_id": 29496318, "answer_count": 2, "score": 1, "last_activity_date": 1461331042, "creation_date": 1428423116, "last_edit_date": 1428961206, "question_id": 29496191, "link": "https://stackoverflow.com/questions/29496191/how-can-i-implement-the-sum-of-squares-of-two-largest-numbers-out-of-three-for-f", "title": "How can I implement the sum of squares of two largest numbers out of three for floating-point numbers?", "body": "<p>Exercise 1.3 of the book <a href=\"http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-10.html\" rel=\"nofollow\"><em>Structure and Interpretation of Computer Programs</em></a> asks the following:</p>\n\n<blockquote>\n  <p>Define a procedure that takes three numbers as arguments and returns the sum of the squares of the two larger numbers.</p>\n</blockquote>\n\n<p>I've managed to answer this question, but only for integers:</p>\n\n<pre><code>use std::cmp;\n\nfn sum_square_largest(x:isize, y:isize, z:isize) -&gt; isize {\n    x * x + y * y + z * z - min_three(x, y, z) * min_three(x, y, z)\n}\n\nfn min_three&lt;T&gt;(v1: T, v2: T, v3: T) -&gt; T where T: Ord {\n    cmp::min(v1, cmp::min(v2, v3))\n}\n</code></pre>\n\n<p>But when I change the <code>sum_square_largest</code> function to:</p>\n\n<pre><code>fn sum_square_largest(x:f64, y:f64, z:f64) -&gt; f64 {\n    x * x + y * y + z * z - min_three(x, y, z) * min_three(x, y, z)\n}\n</code></pre>\n\n<p>It gives the following <code>error: the trait 'core::cmp::Ord' is not implemented for the type 'f64' [E0277]</code>.</p>\n\n<p>What is this? And how can I define this function to work with floating-point numbers?</p>\n"}, {"tags": ["serialization", "binary", "rust"], "comments": [{"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1428414407, "post_id": 29492298, "comment_id": 47145216, "body": "It should be pretty easy to do this with either <a href=\"https://github.com/TyOverby/bincode\" rel=\"nofollow noreferrer\">github.com/TyOverby/bincode</a> or <a href=\"https://github.com/BurntSushi/rust-cbor\" rel=\"nofollow noreferrer\">github.com/BurntSushi/rust-cbor</a> --- Both work with the standard <code>io::{Read,Write}</code> traits in addition to <code>rustc-serialize</code>&#39;s <code>Encodable</code> and <code>Decodable</code> traits."}, {"owner": {"reputation": 37702, "user_id": 129805, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/F1gxS.png?s=128&g=1", "display_name": "fadedbee", "link": "https://stackoverflow.com/users/129805/fadedbee"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 0, "creation_date": 1428492092, "post_id": 29492298, "comment_id": 47182092, "body": "bincode is exactly what I was looking for.  If you make this an answer, I&#39;ll accept it."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 3, "creation_date": 1428504045, "post_id": 29492298, "comment_id": 47190769, "body": "I can&#39;t, because people who know better have apparently deemed this to be a bad question. (You asked, &quot;What is the current state... ?&quot; How this is &quot;opinion-based&quot; is far beyond my limited mental capacity to understand.)"}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 2, "creation_date": 1428512231, "post_id": 29492298, "comment_id": 47196402, "body": "@BurntSushi5: 1. Library recommendations are off-topic; 2. Picking one library among others can easily devolve into a battle of opinions. It&#39;s not that the question is &quot;bad&quot;, it&#39;s that it is judged not to be a good fit for StackOverflow."}, {"owner": {"reputation": 10100, "user_id": 619216, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c07104de771c3b6f6c30be8f592ef8f7?s=128&d=identicon&r=PG", "display_name": "BurntSushi5", "link": "https://stackoverflow.com/users/619216/burntsushi5"}, "edited": false, "score": 1, "creation_date": 1428526070, "post_id": 29492298, "comment_id": 47204437, "body": "No part of the question asks for a library recommendation."}], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1428420932, "post_id": 29492758, "comment_id": 47149771, "body": "<code>transmute</code> won&#39;t work not only with references, but with any types with indirection, like <code>String</code> or <code>Vec&lt;_&gt;</code>. In fact, it would work only with structs which consist of basic built-in types and fixed-size arrays of such types."}, {"owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1428421152, "post_id": 29492758, "comment_id": 47149936, "body": "@VladimirMatveev Would that simply be <code>Copy</code> types ?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "edited": false, "score": 2, "creation_date": 1428421292, "post_id": 29492758, "comment_id": 47150028, "body": "@Levans, no - types with references also can be <code>Copy</code>. I&#39;d say <code>Copy + &#39;static</code> is more like it, but <code>*const</code> pointers are also <code>Copy</code> AFAIK."}, {"owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "reply_to_user": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "edited": false, "score": 0, "creation_date": 1428430284, "post_id": 29492758, "comment_id": 47155237, "body": "@VladimirMatveev Oh right, indeed."}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": false, "score": 7, "last_activity_date": 1428413450, "last_edit_date": 1428413450, "creation_date": 1428413093, "answer_id": 29492758, "question_id": 29492298, "link": "https://stackoverflow.com/questions/29492298/binary-serialisation-of-rust-data-strucutures/29492758#29492758", "title": "Binary serialisation of Rust data strucutures", "body": "<p><code>#[repr(packed)]</code> only makes your data small. It does not offer any format guarantees or serialization help.</p>\n\n<p>You have a few choices here (ordered by my opinion from best to worst solution):</p>\n\n<ol>\n<li>You can use the Cap'n proto implementation for Rust\n<ul>\n<li><a href=\"https://github.com/dwrensha/capnproto-rust\" rel=\"noreferrer\">https://github.com/dwrensha/capnproto-rust</a></li>\n<li>It's not really serialization, more of a forced format for structs that are then sent over the network without any conversion</li>\n<li>fast</li>\n</ul></li>\n<li>You could write your own Serializer and Deserializer.\n<ul>\n<li>you have full control over the format</li>\n<li>runtime overhead for every single datum</li>\n<li>you need to implement lots of stuff</li>\n</ul></li>\n<li>You can <code>transmute</code> your structs to a <code>[u8]</code> and send that\n<ul>\n<li>probably the fastest solution</li>\n<li>you need to make sure that the compiler for the program on both sides is exactly the same, otherwise the formats don't match up.</li>\n<li>Someone evil may send you bad data. When you <code>transmute</code> that back, you get buffer overflows and stuff</li>\n<li>references in your data-structure will cause wild pointers and  undefined behaviour\n<ul>\n<li>Don't use references</li>\n</ul></li>\n</ul></li>\n</ol>\n"}], "owner": {"reputation": 37702, "user_id": 129805, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/F1gxS.png?s=128&g=1", "display_name": "fadedbee", "link": "https://stackoverflow.com/users/129805/fadedbee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1725, "favorite_count": 2, "closed_date": 1428424881, "answer_count": 1, "score": 5, "last_activity_date": 1428413450, "creation_date": 1428411654, "question_id": 29492298, "link": "https://stackoverflow.com/questions/29492298/binary-serialisation-of-rust-data-strucutures", "closed_reason": "Opinion-based", "title": "Binary serialisation of Rust data strucutures", "body": "<p>What is the current state of serialisation-to-binary in Rust?</p>\n\n<p>I have some large (1-10MB) data structure to be sent across a network, and don't want to encode them as JSON or hex (the two serialisers I have found).</p>\n\n<p>I have found <code>#[repr(packed)]</code>.  Is this what I should use, or is there something more portable?</p>\n"}, {"tags": ["rust", "move-semantics"], "comments": [{"owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "edited": false, "score": 8, "creation_date": 1428407071, "post_id": 29490670, "comment_id": 47140496, "body": "Mostly, where C++ would implicitly copy, Rust implicitly moves. This doesn&#39;t only apply to boxes."}, {"owner": {"reputation": 36975, "user_id": 94977, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/8341c5bff3dcbd8ed34d9d68bd4169f2?s=128&d=identicon&r=PG", "display_name": "Jason Orendorff", "link": "https://stackoverflow.com/users/94977/jason-orendorff"}, "edited": false, "score": 4, "creation_date": 1576644465, "post_id": 29490670, "comment_id": 104962501, "body": "&quot;This language doesn&#39;t have <i>any</i> of the brilliant, extremely complicated, error-prone hacks that C++ has to support moves!&quot; You&#39;re not wrong... ;-)"}], "answers": [{"comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 1005, "user_id": 3711299, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/726d2e92665d2124bda3d90757897b60?s=128&d=identicon&r=PG&f=1", "display_name": "user3335", "link": "https://stackoverflow.com/users/3711299/user3335"}, "edited": false, "score": 6, "creation_date": 1428408019, "post_id": 29490907, "comment_id": 47141103, "body": "So are you actually missing a feature from C++ or is Rust just doing it differently?"}, {"owner": {"reputation": 1005, "user_id": 3711299, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/726d2e92665d2124bda3d90757897b60?s=128&d=identicon&r=PG&f=1", "display_name": "user3335", "link": "https://stackoverflow.com/users/3711299/user3335"}, "edited": false, "score": 0, "creation_date": 1428408494, "post_id": 29490907, "comment_id": 47141416, "body": "I&#39;m not actually missing any C++ feature, but the way move semantics is implemented is too different. Though Rust&#39;s point is to avoid implicit copies, I don&#39;t get the idea of &quot;move value types on assignment&quot; when we can use references."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 1005, "user_id": 3711299, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/726d2e92665d2124bda3d90757897b60?s=128&d=identicon&r=PG&f=1", "display_name": "user3335", "link": "https://stackoverflow.com/users/3711299/user3335"}, "edited": false, "score": 9, "creation_date": 1428409029, "post_id": 29490907, "comment_id": 47141799, "body": "In rust instead of making moving explicit, creating references is explicit: <code>let x = &amp;a;</code> creates a (const) reference named <code>x</code> to <code>a</code>. Also, you should trust the compiler when it comes to optimizations in case you are afraid the implicit moves create a performance penalty. The compiler can optimize a lot due to the move semantics being built into the compiler."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 1005, "user_id": 3711299, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/726d2e92665d2124bda3d90757897b60?s=128&d=identicon&r=PG&f=1", "display_name": "user3335", "link": "https://stackoverflow.com/users/3711299/user3335"}, "edited": false, "score": 9, "creation_date": 1428409127, "post_id": 29490907, "comment_id": 47141864, "body": "also, rust still has implicit copies. you just need to implement the <code>Copy</code> trait for your type and it is copied from now on. For a POD, you can even tell the compiler to automatically generate the <code>Copy</code> trait implementation for you."}, {"owner": {"reputation": 8617, "user_id": 3477950, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/mC5xL.jpg?s=128&g=1", "display_name": "The Paramagnetic Croissant", "link": "https://stackoverflow.com/users/3477950/the-paramagnetic-croissant"}, "edited": false, "score": 0, "creation_date": 1455978707, "post_id": 29490907, "comment_id": 58738681, "body": "&quot;Rust moves everything that isn&#39;t copiable&quot; is not a sufficient explanation as to how moving can work without move constructors. How does it, for example, move a structure containing an owning pointer? The most trivial example is the standard <code>Box</code> type. Just raw-copying the bytes of the objects wouldn&#39;t work, because destructors would then double-free the managed memory. What gives?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 8617, "user_id": 3477950, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/mC5xL.jpg?s=128&g=1", "display_name": "The Paramagnetic Croissant", "link": "https://stackoverflow.com/users/3477950/the-paramagnetic-croissant"}, "edited": false, "score": 13, "creation_date": 1456131337, "post_id": 29490907, "comment_id": 58787010, "body": "@TheParamagneticCroissant: Rust does not need move constructors that &quot;delete&quot; the previous location, because once you moved out of something, a flag is set that the object should not call <code>Drop::drop</code>. In the future an improved analysis will actually make sure that we don&#39;t need such a flag anymore. I&#39;m not sure how much of that has been implemented."}, {"owner": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 5, "creation_date": 1477928120, "post_id": 29490907, "comment_id": 67945144, "body": "So once <code>Copy</code> is implemented, you cannot force-move an object/class/whatchamacallit-in-rust?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "reply_to_user": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 3, "creation_date": 1478076987, "post_id": 29490907, "comment_id": 68004007, "body": "@rubenvb: correct, but you can always wrap the object in a wrapper type which does not implement Copy."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 69264, "user_id": 256138, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/ed9e8c0ff767e38f8fade11f5af00a45?s=128&d=identicon&r=PG", "display_name": "rubenvb", "link": "https://stackoverflow.com/users/256138/rubenvb"}, "edited": false, "score": 3, "creation_date": 1549086762, "post_id": 29490907, "comment_id": 95786854, "body": "@rubenvb You wouldn&#39;t <i>want</i> a force-move; <code>Copy</code> implies that a bitwise copy is sufficient to create an independent object, and moves are also just bitwise copies."}, {"owner": {"reputation": 1668, "user_id": 2307646, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21a6192fca73a31505d1a36baabb976?s=128&d=identicon&r=PG", "display_name": "FrankHB", "link": "https://stackoverflow.com/users/2307646/frankhb"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1554747136, "post_id": 29490907, "comment_id": 97857293, "body": "@KyleStrand Not quite true. IIRC in Rust, move is roughly like copy-initialization of references in C++. In C++, however, move constructors can be customized to have side effects, e.g. making some messages printed on move. On the contrary, Rust allows to customize memory loads by <code>Copy</code> on evaluations of place expressions while C++ treats lvalue-to-rvalue conversions of glvalues mostly no-ops or just <code>volatile</code> loads. It seems that C++&#39;s abstract machine semantics get some more high-level stuff than Rust&#39;s way."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 1668, "user_id": 2307646, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21a6192fca73a31505d1a36baabb976?s=128&d=identicon&r=PG", "display_name": "FrankHB", "link": "https://stackoverflow.com/users/2307646/frankhb"}, "edited": false, "score": 0, "creation_date": 1554748501, "post_id": 29490907, "comment_id": 97857980, "body": "@FrankHB I&#39;m sorry, but I don&#39;t understand what you&#39;re saying, or how it contradicts my statement about bitwise copies. (To be perfectly clear, my comment was only about Rust&#39;s behavior.)"}, {"owner": {"reputation": 1668, "user_id": 2307646, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21a6192fca73a31505d1a36baabb976?s=128&d=identicon&r=PG", "display_name": "FrankHB", "link": "https://stackoverflow.com/users/2307646/frankhb"}, "reply_to_user": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1554749015, "post_id": 29490907, "comment_id": 97858221, "body": "@KyleStrand I mean that &quot;move&quot; is not necessarily just getting objects copied. There do have different reasons to force-move explicitly, albeit not idiomatic. As an example, in Rust you can&#39;t implement customization of side-effectful move as it in C++, where force-move counts. The remaining problem is that I don&#39;t catch the idea about the reasons to customize <code>Copy</code> in some strange contexts."}, {"owner": {"reputation": 1668, "user_id": 2307646, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21a6192fca73a31505d1a36baabb976?s=128&d=identicon&r=PG", "display_name": "FrankHB", "link": "https://stackoverflow.com/users/2307646/frankhb"}, "edited": false, "score": 0, "creation_date": 1554749544, "post_id": 29490907, "comment_id": 97858436, "body": "(About <code>Copy</code>... this should be my fault because I realize that it is not a costomization, but a special mark to the implementation.)"}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "reply_to_user": {"reputation": 1668, "user_id": 2307646, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21a6192fca73a31505d1a36baabb976?s=128&d=identicon&r=PG", "display_name": "FrankHB", "link": "https://stackoverflow.com/users/2307646/frankhb"}, "edited": false, "score": 2, "creation_date": 1554765959, "post_id": 29490907, "comment_id": 97864245, "body": "@FrankHB In C++, you&#39;re right, move constructors are almost never just bitwise-copies. But in Rust, they really are just bitwise-copies, and there really is no benefit to a move versus a <code>Copy</code>."}, {"owner": {"reputation": 14050, "user_id": 1858225, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8afcf8a38024eb5b17c0b0b58ff96d79?s=128&d=identicon&r=PG", "display_name": "Kyle Strand", "link": "https://stackoverflow.com/users/1858225/kyle-strand"}, "edited": false, "score": 0, "creation_date": 1554768492, "post_id": 29490907, "comment_id": 97864801, "body": "(Sorry, I mean that user defined move constructors are almost never just copies.)"}], "tags": [], "owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "is_accepted": true, "score": 58, "last_activity_date": 1518206187, "last_edit_date": 1518206187, "creation_date": 1428407429, "answer_id": 29490907, "question_id": 29490670, "link": "https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics/29490907#29490907", "title": "How does Rust provide move semantics?", "body": "<p>I think it's a very common issue when coming from C++. In C++ you are doing everything explicitly when it comes to copying and moving. The language was designed around copying and references. With C++11 the ability to \"move\" stuff was glued onto that system. Rust on the other hand took a fresh start.</p>\n\n<hr>\n\n<blockquote>\n  <p>Rust doesn't have constructors at all, let alone move constructors.</p>\n</blockquote>\n\n<p>You do not need move constructors. Rust moves everything that \"does not have a copy constructor\", a.k.a. \"does not implement the <code>Copy</code> trait\".</p>\n\n<pre><code>struct A;\n\nfn test() {\n    let a = A;\n    let b = a;\n    let c = a; // error, a is moved\n}\n</code></pre>\n\n<p>Rust's default constructor is (by convention) simply an associated function called <code>new</code>:</p>\n\n<pre><code>struct A(i32);\nimpl A {\n    fn new() -&gt; A {\n        A(5)\n    }\n}\n</code></pre>\n\n<p>More complex constructors should have more expressive names. This is the named constructor idiom in C++</p>\n\n<hr>\n\n<blockquote>\n  <p>No support for rvalue references.</p>\n</blockquote>\n\n<p>It has always been a requested feature, see <a href=\"https://github.com/rust-lang/rfcs/issues/998\" rel=\"noreferrer\">RFC issue 998</a>, but most likely you are asking for a different feature: moving stuff to functions:</p>\n\n<pre><code>struct A;\n\nfn move_to(a: A) {\n    // a is moved into here, you own it now.\n}\n\nfn test() {\n    let a = A;\n    move_to(a);\n    let c = a; // error, a is moved\n}\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>No way to create functions overloads with rvalue parameters.</p>\n</blockquote>\n\n<p>You can do that with traits.</p>\n\n<pre><code>trait Ref {\n    fn test(&amp;self);\n}\n\ntrait Move {\n    fn test(self);\n}\n\nstruct A;\nimpl Ref for A {\n    fn test(&amp;self) {\n        println!(\"by ref\");\n    }\n}\nimpl Move for A {\n    fn test(self) {\n        println!(\"by value\");\n    }\n}\nfn main() {\n    let a = A;\n    (&amp;a).test(); // prints \"by ref\"\n    a.test(); // prints \"by value\"\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "edited": false, "score": 0, "creation_date": 1551002992, "post_id": 48706846, "comment_id": 96473697, "body": "Would it make sense, to move memory located on the stack, too? Example: <code>rust let i: i32 = 12; let obj = MyStruct(i); </code> allocate space for two <code>i32</code> variables - means 8 bytes - on the stack. But actual only one is needed after the move in the second line."}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "edited": false, "score": 1, "creation_date": 1551076817, "post_id": 48706846, "comment_id": 96492072, "body": "@Matthias The compiler might well decide to make this optimization; but it would probably be at the LLVM level, outside of Rust&#39;s semantics."}, {"owner": {"reputation": 27478, "user_id": 183120, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fc147f814e1473bb6105db3d924fb590?s=128&d=identicon&r=PG", "display_name": "legends2k", "link": "https://stackoverflow.com/users/183120/legends2k"}, "edited": false, "score": 0, "creation_date": 1581069102, "post_id": 48706846, "comment_id": 106314422, "body": "@SebastianRedl So in Rust both <i>move</i> and <i>copy</i> is a <code>memcpy</code> with <i>move</i> disallowing original&#39;s use. Intelligent, deep copies are delegated to the type author by the <code>Clone</code> trait.  Is my understanding correct? Thanks for the answer, your&#39;s explains what happens under the covers!"}, {"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "reply_to_user": {"reputation": 27478, "user_id": 183120, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fc147f814e1473bb6105db3d924fb590?s=128&d=identicon&r=PG", "display_name": "legends2k", "link": "https://stackoverflow.com/users/183120/legends2k"}, "edited": false, "score": 0, "creation_date": 1581069346, "post_id": 48706846, "comment_id": 106314575, "body": "@legends2k Yes, deep copies must be implemented by <code>Clone</code>. Moves are memcpy."}, {"owner": {"reputation": 27478, "user_id": 183120, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fc147f814e1473bb6105db3d924fb590?s=128&d=identicon&r=PG", "display_name": "legends2k", "link": "https://stackoverflow.com/users/183120/legends2k"}, "edited": false, "score": 0, "creation_date": 1581078305, "post_id": 48706846, "comment_id": 106319226, "body": "Thank you! <a href=\"https://doc.rust-lang.org/std/marker/trait.Copy.html\" rel=\"nofollow noreferrer\"><code>Copy</code> trait</a> agrees with my summarization; just putting it here for future readers."}, {"owner": {"reputation": 722, "user_id": 10978642, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09768ee67e510b92a141e2237629d0c1?s=128&d=identicon&r=PG&f=1", "display_name": "bsound", "link": "https://stackoverflow.com/users/10978642/bsound"}, "edited": false, "score": 0, "creation_date": 1602087144, "post_id": 48706846, "comment_id": 113611130, "body": "Best answer IMO. This is very detailed than accepted one."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": false, "score": 33, "last_activity_date": 1518206299, "last_edit_date": 1518206299, "creation_date": 1518182485, "answer_id": 48706846, "question_id": 29490670, "link": "https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics/48706846#48706846", "title": "How does Rust provide move semantics?", "body": "<p>Rust's moving and copying semantics are very different from C++. I'm going to take a different approach to explain them than the existing answer.</p>\n\n<hr>\n\n<p>In C++, copying is an operation that can be arbitrarily complex, due to custom copy constructors. Rust doesn't want custom semantics of simple assignment or argument passing, and so takes a different approach.</p>\n\n<p>First, an assignment or argument passing in Rust is always just a simple memory copy.</p>\n\n<pre><code>let foo = bar; // copies the bytes of bar to the location of foo (might be elided)\n\nfunction(foo); // copies the bytes of foo to the parameter location (might be elided)\n</code></pre>\n\n<p>But what if the object controls some resources? Let's say we are dealing with a simple smart pointer, <code>Box</code>.</p>\n\n<pre><code>let b1 = Box::new(42);\nlet b2 = b1;\n</code></pre>\n\n<p>At this point, if just the bytes are copied over, wouldn't the destructor (<code>drop</code> in Rust) be called for each object, thus freeing the same pointer twice and causing undefined behavior?</p>\n\n<p>The answer is that Rust <em>moves</em> by default. This means that it copies the bytes to the new location, and the old object is then gone. It is a compile error to access <code>b1</code> after the second line above. And the destructor is not called for it. The value was moved to <code>b2</code>, and <code>b1</code> might as well not exist anymore.</p>\n\n<p>This is how move semantics work in Rust. The bytes are copied over, and the old object is gone.</p>\n\n<p>In some discussions about C++'s move semantics, Rust's way was called \"destructive move\". There have been proposals to add the \"move destructor\" or something similar to C++ so that it can have the same semantics. But move semantics as they are implemented in C++ don't do this. The old object is left behind, and its destructor is still called. Therefore, you need a move constructor to deal with the custom logic required by the move operation. Moving is just a specialized constructor/assignment operator that is expected to behave in a certain way.</p>\n\n<hr>\n\n<p>So by default, Rust's assignment moves the object, making the old location invalid. But many types (integers, floating points, shared references) have semantics where copying the bytes is a perfectly valid way of creating a real copy, with no need to ignore the old object. Such types should implement the <code>Copy</code> trait, which can be derived by the compiler automatically.</p>\n\n<pre><code>#[derive(Copy)]\nstruct JustTwoInts {\n  one: i32,\n  two: i32,\n}\n</code></pre>\n\n<p>This signals the compiler that assignment and argument passing do not invalidate the old object:</p>\n\n<pre><code>let j1 = JustTwoInts { one: 1, two: 2 };\nlet j2 = j1;\nprintln!(\"Still allowed: {}\", j1.one);\n</code></pre>\n\n<p>Note that trivial copying and the need for destruction are mutually exclusive; a type that is <code>Copy</code> <em>cannot</em> also be <code>Drop</code>.</p>\n\n<hr>\n\n<p>Now what about when you want to make a copy of something where just copying the bytes isn't enough, e.g. a vector? There is no language feature for this; technically, the type just needs a function that returns a new object that was created the right way. But by convention this is achieved by implementing the <code>Clone</code> trait and its <code>clone</code> function. In fact, the compiler supports automatic derivation of <code>Clone</code> too, where it simply clones every field.</p>\n\n<pre><code>#[Derive(Clone)]\nstruct JustTwoVecs {\n  one: Vec&lt;i32&gt;,\n  two: Vec&lt;i32&gt;,\n}\n\nlet j1 = JustTwoVecs { one: vec![1], two: vec![2, 2] };\nlet j2 = j1.clone();\n</code></pre>\n\n<p>And whenever you derive <code>Copy</code>,  you should also derive <code>Clone</code>, because containers like <code>Vec</code> use it internally when they are cloned themselves.</p>\n\n<pre><code>#[derive(Copy, Clone)]\nstruct JustTwoInts { /* as before */ }\n</code></pre>\n\n<hr>\n\n<p>Now, are there any downsides to this? Yes, in fact there is one rather big downside: because moving an object to another memory location is just done by copying bytes, and no custom logic, a type <a href=\"https://stackoverflow.com/q/32300132/155423\">cannot have references into itself</a>. In fact, Rust's lifetime system makes it impossible to construct such types safely.</p>\n\n<p>But in my opinion, the trade-off is worth it.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1570025710, "post_id": 58201149, "comment_id": 102784794, "body": "This doesn&#39;t appear to answer the question asked by the OP: <i>How does <b>Rust</b> provide move semantics?</i>. This answer instead appears to discuss how C++ does something similar."}], "tags": [], "owner": {"reputation": 1, "user_id": 12153658, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/0fb139d062952e0df15510158c262bc0?s=128&d=identicon&r=PG", "display_name": "Peter", "link": "https://stackoverflow.com/users/12153658/peter"}, "is_accepted": false, "score": -3, "last_activity_date": 1570025656, "last_edit_date": 1570025656, "creation_date": 1570017888, "answer_id": 58201149, "question_id": 29490670, "link": "https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics/58201149#58201149", "title": "How does Rust provide move semantics?", "body": "<p>In C++ the default assignment of classes and structs is shallow copy. The values are copied, but not the data referenced by pointers. So modifying one instance changes the referenced data of all copies. The values (f.e. used for administration) remain unchanged in the other instance, likely rendering an inconsistent state. A move semantic avoids this situation. Example for a C++ implementation of a memory managed container with move semantic:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>template &lt;typename T&gt;\nclass object\n{\n    T *p;\npublic:\n    object()\n    {\n        p=new T;\n    }\n    ~object()\n    {\n        if (p != (T *)0) delete p;\n    }\n    template &lt;typename V&gt; //type V is used to allow for conversions between reference and value\n    object(object&lt;V&gt; &amp;v)      //copy constructor with move semantic\n    {\n        p = v.p;      //move ownership\n        v.p = (T *)0; //make sure it does not get deleted\n    }\n    object &amp;operator=(object&lt;T&gt; &amp;v) //move assignment\n    {\n        delete p;\n        p = v.p;\n        v.p = (T *)0;\n        return *this;\n    }\n    T &amp;operator*() { return *p; } //reference to object  *d\n    T *operator-&gt;() { return p; } //pointer to object data  d-&gt;\n};\n</code></pre>\n\n<p>Such an object is automatically garbage collected and can be returned from functions to the calling program. It is extremely efficient and does the same as Rust does:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>object&lt;somestruct&gt; somefn() //function returning an object\n{\n   object&lt;somestruct&gt; a;\n   auto b=a;  //move semantic; b becomes invalid\n   return b;  //this moves the object to the caller\n}\n\nauto c=somefn();\n\n//now c owns the data; memory is freed after leaving the scope\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36975, "user_id": 94977, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/8341c5bff3dcbd8ed34d9d68bd4169f2?s=128&d=identicon&r=PG", "display_name": "Jason Orendorff", "link": "https://stackoverflow.com/users/94977/jason-orendorff"}, "is_accepted": false, "score": 8, "last_activity_date": 1576656095, "creation_date": 1576656095, "answer_id": 59387728, "question_id": 29490670, "link": "https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics/59387728#59387728", "title": "How does Rust provide move semantics?", "body": "<p>Rust supports move semantics with features like these:</p>\n\n<ul>\n<li><p><strong>All types are moveable.</strong></p></li>\n<li><p><strong>Sending a value somewhere is a move, by default, throughout the language.</strong> For non-<code>Copy</code> types, like <code>Vec</code>, the following are all moves in Rust: passing an argument by value, returning a value, assignment, pattern-matching by value.</p>\n\n<p>You don't have <code>std::move</code> in Rust because it's the default. You're really using moves all the time.</p></li>\n<li><p><strong>Rust knows that moved values must not be used.</strong> If you have a value <code>x: String</code> and do <code>channel.send(x)</code>, sending the value to another thread, the compiler knows that <code>x</code> has been moved. Trying to use it after the move is a compile-time error, \"use of moved value\". And you can't move a value if anyone has a reference to it (a dangling pointer).</p></li>\n<li><p><strong>Rust knows not to call destructors on moved values.</strong> Moving a value transfers ownership, including responsibility for cleanup. Types don't have to be able to represent a special \"value was moved\" state.</p></li>\n<li><p><strong>Moves are cheap</strong> and the performance is predictable. It's basically memcpy. Returning a huge <code>Vec</code> is always fast\u2014you're just copying three words.</p></li>\n<li><p><strong>The Rust standard library uses and supports moves everywhere.</strong> I already mentioned channels, which use move semantics to safely transfer ownership of values across threads. Other nice touches: all types support copy-free <code>std::mem::swap()</code> in Rust; the <code>Into</code> and <code>From</code> standard conversion traits are by-value; <code>Vec</code> and other collections have <code>.drain()</code> and <code>.into_iter()</code> methods so you can smash one data structure, move all the values out of it, and use those values to build a new one.</p></li>\n</ul>\n\n<p>Rust doesn't have move references, but moves are a powerful and central concept in Rust, providing a lot of the same performance benefits as in C++, and some other benefits as well.</p>\n"}], "owner": {"reputation": 1005, "user_id": 3711299, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/726d2e92665d2124bda3d90757897b60?s=128&d=identicon&r=PG&f=1", "display_name": "user3335", "link": "https://stackoverflow.com/users/3711299/user3335"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 13357, "favorite_count": 12, "accepted_answer_id": 29490907, "answer_count": 4, "score": 59, "last_activity_date": 1576656095, "creation_date": 1428406677, "last_edit_date": 1518180566, "question_id": 29490670, "link": "https://stackoverflow.com/questions/29490670/how-does-rust-provide-move-semantics", "title": "How does Rust provide move semantics?", "body": "<p>The <a href=\"http://www.rust-lang.org/\" rel=\"noreferrer\">Rust language website</a> claims move semantics as one of the features of the language. But I can't see how move semantics is implemented in Rust.</p>\n\n<p>Rust boxes are the only place where move semantics are used. </p>\n\n<pre><code>let x = Box::new(5);\nlet y: Box&lt;i32&gt; = x; // x is 'moved'\n</code></pre>\n\n<p>The above Rust code can be written in C++ as</p>\n\n<pre><code>auto x = std::make_unique&lt;int&gt;();\nauto y = std::move(x); // Note the explicit move\n</code></pre>\n\n<p>As far as I know (correct me if I'm wrong),</p>\n\n<ul>\n<li>Rust doesn't have constructors at all, let alone move constructors.</li>\n<li>No support for rvalue references.</li>\n<li>No way to create functions overloads with rvalue parameters. </li>\n</ul>\n\n<p>How does Rust provide move semantics?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1428483085, "post_id": 29490087, "comment_id": 47176185, "body": "Yes, it&#39;s just <code>const</code> defines not a variable but an inlineable constant."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 1, "last_activity_date": 1428404798, "creation_date": 1428404798, "answer_id": 29490087, "question_id": 29490026, "link": "https://stackoverflow.com/questions/29490026/incorrect-placement-of-let/29490087#29490087", "title": "Incorrect placement of let", "body": "<p>You can only use <code>let</code> in functions. Global variables can be defined with <code>static</code> keyword, and they have a lot of limitations compared to the local variables.</p>\n\n<p>Please read <a href=\"http://doc.rust-lang.org/1.0.0-beta/book/\" rel=\"nofollow\">the official book</a>, it covers questions like this.</p>\n"}], "owner": {"reputation": 21, "user_id": 4469029, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/86438048d9a4243ed1e4393a5e5e5b73?s=128&d=identicon&r=PG&f=1", "display_name": "nubb", "link": "https://stackoverflow.com/users/4469029/nubb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1608757361, "creation_date": 1428404606, "last_edit_date": 1608757361, "question_id": 29490026, "link": "https://stackoverflow.com/questions/29490026/incorrect-placement-of-let", "title": "Incorrect placement of let", "body": "<p>I'm making a file to hold a bunch of things I learn about Rust but I'm getting compile errors regarding my <code>let</code> statements:</p>\n<pre><code>#[allow(dead_code)]\n\nfn main() {}\n\nlet a = (1, &quot;hello&quot;);\nlet b: (i32, &amp;str) = (1, &quot;hello&quot;);\n\nenum Character {\n    Digit(i32),\n    Other,\n}\n\nlet ten = Character::Digit(10);\nlet four = Character::Digit(4);\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 3, "creation_date": 1428405547, "post_id": 29484987, "comment_id": 47139630, "body": "also note that you should not be using <code>random()</code> and then <code>% 20</code> to get a number between <code>0</code> and <code>20</code>, but a <code>rand::distributions::Range</code> (see example <a href=\"http://doc.rust-lang.org/rand/rand/index.html#monte-carlo-estimation-of-%CF%80\" rel=\"nofollow noreferrer\">doc.rust-lang.org/rand/rand/&hellip;</a> ). The issue with using the modulo operator is, that you don&#39;t get a truly random distribution. You are instead increasing the probability for small numbers."}], "answers": [{"tags": [], "owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "is_accepted": true, "score": 5, "last_activity_date": 1428423673, "last_edit_date": 1428423673, "creation_date": 1428394124, "answer_id": 29486808, "question_id": 29484987, "link": "https://stackoverflow.com/questions/29484987/type-inference-failure-when-taking-the-modulus-of-a-random-number/29486808#29486808", "title": "Type inference failure when taking the modulus of a random number", "body": "<p>The compiler cannot infer the type in this situation, there are too many unknowns.</p>\n\n<p>Let us call <code>R</code> the output type of <code>rand::random()</code>, and <code>I</code> the type of <code>20</code>.</p>\n\n<p>The conditions imposed by <code>test(rand::random() % 20)</code> are only:</p>\n\n<pre><code>R: Rand + Rem&lt;I, Ouput=isize&gt;\nI: integral variable (i8, u8, i16, u16, i32, u32, i64, u64, isize or usize)\n</code></pre>\n\n<p>Nothing guaranties that only a single pair <code>(T, I)</code> will meet these requirements (and it's actually quite easy to create a new type <code>T</code> fulfilling them), thus the compiler cannot choose by itself.</p>\n\n<p>Thus using <code>rand::random::&lt;isize&gt;()</code> is the correct approach here.</p>\n"}], "owner": {"reputation": 1187, "user_id": 1137004, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/b5ebaa8eb2711795cbf1c9cdda773328?s=128&d=identicon&r=PG", "display_name": "kiyomi", "link": "https://stackoverflow.com/users/1137004/kiyomi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "accepted_answer_id": 29486808, "answer_count": 1, "score": 1, "last_activity_date": 1428423673, "creation_date": 1428387326, "last_edit_date": 1428423607, "question_id": 29484987, "link": "https://stackoverflow.com/questions/29484987/type-inference-failure-when-taking-the-modulus-of-a-random-number", "title": "Type inference failure when taking the modulus of a random number", "body": "<blockquote>\n  <p>rustc 1.0.0-nightly (be9bd7c93 2015-04-05) (built 2015-04-05)</p>\n</blockquote>\n\n<pre><code>extern crate rand;\n\nfn test(a: isize) {\n    println!(\"{}\", a);\n}\n\nfn main() {\n    test(rand::random() % 20)\n}\n</code></pre>\n\n<p>this code compiled before Rust beta, but now it doesn't:</p>\n\n<pre><code>src/main.rs:8:10: 8:22 error: unable to infer enough type information about `_`; type annotations required [E0282]\nsrc/main.rs:8     test(rand::random() % 20)\n                       ^~~~~~~~~~~~\n</code></pre>\n\n<p>I must write this code to compile:</p>\n\n<pre><code>extern crate rand;\n\nfn test(a: isize) {\n    println!(\"{}\", a);\n}\n\nfn main() {\n    test(rand::random::&lt;isize&gt;() % 20)\n}\n</code></pre>\n\n<p>How can I make the compiler infer the type?</p>\n"}, {"tags": ["string", "rust"], "comments": [{"owner": {"reputation": 24273, "user_id": 525872, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/4d6f74711436cfe252bf4fc8f3cf4971?s=128&d=identicon&r=PG", "display_name": "Jo Liss", "link": "https://stackoverflow.com/users/525872/jo-liss"}, "edited": false, "score": 2, "creation_date": 1488203296, "post_id": 29483365, "comment_id": 72114342, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/15265198/how-do-i-write-a-multi-line-string-in-rust\">How do I write a multi-line string in Rust?</a>"}], "answers": [{"comments": [{"owner": {"reputation": 195, "user_id": 4598879, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0804833fc4f55c51b042eb05c6cb303a?s=128&d=identicon&r=PG&f=1", "display_name": "hakononakani", "link": "https://stackoverflow.com/users/4598879/hakononakani"}, "edited": false, "score": 7, "creation_date": 1569431258, "post_id": 29483453, "comment_id": 102598051, "body": "If only readability is the issue, I would like to add the <code>concat!()</code> macro to complete the given options (<a href=\"https://doc.rust-lang.org/std/macro.concat.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/macro.concat.html</a>)"}], "tags": [], "owner": {"reputation": 74030, "user_id": 1256624, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EdJaa.jpg?s=128&g=1", "display_name": "huon", "link": "https://stackoverflow.com/users/1256624/huon"}, "is_accepted": true, "score": 242, "last_activity_date": 1583969570, "last_edit_date": 1583969570, "creation_date": 1428378842, "answer_id": 29483453, "question_id": 29483365, "link": "https://stackoverflow.com/questions/29483365/what-is-the-syntax-for-a-multiline-string-literal/29483453#29483453", "title": "What is the syntax for a multiline string literal?", "body": "<p>All string literals can be broken across several lines; for example:</p>\n\n<pre><code>let string = \"line one\nline two\";\n</code></pre>\n\n<p>is a two line string, the same as <code>\"line one\\nline two\"</code> (of course one can use the <code>\\n</code> newline escape directly too). If you wish to just break a string across multiple lines for formatting reasons you can escape the newline and leading whitespace with a <code>\\</code>; for example:</p>\n\n<pre><code>let string = \"one line \\\n    written over \\\n    several\";\n</code></pre>\n\n<p>is the same as <code>\"one line written over several\"</code>.</p>\n\n<p>If you want linebreaks in the string you can add them before the <code>\\</code>:</p>\n\n<pre><code>let string = \"multiple\\n\\\n              lines\\n\\\n              with\\n\\\n              indentation\";\n</code></pre>\n\n<p>It's the same as <code>\"multiple\\nlines\\nwith\\nindentation\";</code></p>\n"}, {"comments": [{"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 2, "creation_date": 1467592922, "post_id": 35703815, "comment_id": 63778481, "body": "But... you only need to escape newlines if you don&#39;t want newlines in the result, and raw strings don&#39;t help with that."}, {"owner": {"reputation": 1461, "user_id": 2925175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbd8ddca3a806becf1e563c576688342?s=128&d=identicon&r=PG&f=1", "display_name": "c0g", "link": "https://stackoverflow.com/users/2925175/c0g"}, "reply_to_user": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 1, "creation_date": 1467867825, "post_id": 35703815, "comment_id": 63896723, "body": "Raw strings just prevent you from having to add a &#39;\\&#39; at the end of every line if you don&#39;t care about the newlines (such as when you are embedding code which is newline agnostic like shaders and kernels) or, as you alluded to, when the newlines are actually necessary. It just makes it easier to embed code which you might want to edit and not have to hassle with the &#39;\\&#39; at the end of each line. That&#39;s all."}, {"owner": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 1, "creation_date": 1467993338, "post_id": 35703815, "comment_id": 63961095, "body": "If you want (or don&#39;t mind) newlines in the resulting string, plain double quoted strings will do perfectly well, as shown in the other examples.  If you want to avoid newlines, raw strings are no good. They really only help if the text includes quotes, backslashes, etc - as may happen in embedded source."}, {"owner": {"reputation": 1461, "user_id": 2925175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbd8ddca3a806becf1e563c576688342?s=128&d=identicon&r=PG&f=1", "display_name": "c0g", "link": "https://stackoverflow.com/users/2925175/c0g"}, "reply_to_user": {"reputation": 8404, "user_id": 243712, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/5347c683b6963f418d1b16c65917bf3f?s=128&d=identicon&r=PG", "display_name": "poolie", "link": "https://stackoverflow.com/users/243712/poolie"}, "edited": false, "score": 2, "creation_date": 1468280456, "post_id": 35703815, "comment_id": 64051840, "body": "I see what you&#39;re getting at now and you&#39;re absolutely right."}, {"owner": {"reputation": 16558, "user_id": 1804173, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53f721a451a1c68caf8316cefcde3083?s=128&d=identicon&r=PG", "display_name": "bluenote10", "link": "https://stackoverflow.com/users/1804173/bluenote10"}, "edited": false, "score": 7, "creation_date": 1579244961, "post_id": 35703815, "comment_id": 105708794, "body": "It would help to show the output of printing these strings. From the answer itself I can&#39;t tell what will happen with newlines, and how indentation is handled."}], "tags": [], "owner": {"reputation": 1461, "user_id": 2925175, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbd8ddca3a806becf1e563c576688342?s=128&d=identicon&r=PG&f=1", "display_name": "c0g", "link": "https://stackoverflow.com/users/2925175/c0g"}, "is_accepted": false, "score": 129, "last_activity_date": 1507132992, "last_edit_date": 1507132992, "creation_date": 1456761144, "answer_id": 35703815, "question_id": 29483365, "link": "https://stackoverflow.com/questions/29483365/what-is-the-syntax-for-a-multiline-string-literal/35703815#35703815", "title": "What is the syntax for a multiline string literal?", "body": "<p>In case you want to do something a bit longer, which may or may not include quotes, backslashes, etc., use the <a href=\"https://doc.rust-lang.org/reference/tokens.html#raw-string-literals\" rel=\"noreferrer\">raw string literal notation</a>:</p>\n\n<pre><code>let shader = r#\"\n    #version 330\n\n    in vec4 v_color;\n    out vec4 color;\n\n    void main() {\n        color = v_color;\n    };\n\"#;\n</code></pre>\n\n<p>If you have sequences of double quotes and hash symbols within your string, you can denote an arbitrary number of hashes as a delimiter:</p>\n\n<pre><code>let crazy_raw_string = r###\"\n    My fingers #\"\n    can#\"#t stop \"#\"\" hitting\n    hash##\"#\n\"###;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1211, "user_id": 920545, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/2f5406e58c35a73af9dfdbd64d435f6b?s=128&d=identicon&r=PG", "display_name": "Paul Molodowitch", "link": "https://stackoverflow.com/users/920545/paul-molodowitch"}, "edited": false, "score": 3, "creation_date": 1606042779, "post_id": 36122455, "comment_id": 114833754, "body": "Ah! Thanks so much for this!  I was about to create my own question, specifically about the best way to do a multiline string literal with indentation, that also that preserved code-indentation nicely, when I stumbled across your answer here!  For reference, I created a rust playground which lists various options I came up with, and their relative shortcomings: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c9ca0febb5f154e30811806873e38716\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}], "tags": [], "owner": {"reputation": 6357, "user_id": 6086311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb99289473f6393b89474785f2d294d1?s=128&d=identicon&r=PG", "display_name": "dtolnay", "link": "https://stackoverflow.com/users/6086311/dtolnay"}, "is_accepted": false, "score": 67, "last_activity_date": 1596089879, "last_edit_date": 1596089879, "creation_date": 1458529133, "answer_id": 36122455, "question_id": 29483365, "link": "https://stackoverflow.com/questions/29483365/what-is-the-syntax-for-a-multiline-string-literal/36122455#36122455", "title": "What is the syntax for a multiline string literal?", "body": "<p><a href=\"https://stackoverflow.com/questions/29483365/what-is-the-syntax-for-a-multiline-string-literal/29483453#29483453\">Huon's answer</a> is correct but if the indentation bothers you, consider using <a href=\"https://github.com/dtolnay/indoc\" rel=\"noreferrer\">Indoc</a> which is a procedural macro for indented multi-line strings. It stands for &quot;indented document.&quot; It provides a macro called <code>indoc!()</code> that takes a multiline string literal and un-indents it so the leftmost non-space character is in the first column.</p>\n<pre><code>let s = indoc! {&quot;\n    line one\n    line two\n&quot;};\n</code></pre>\n<p>The result is <code>&quot;line one\\nline two\\n&quot;</code>.</p>\n<p>Whitespace is preserved relative to the leftmost non-space character in the document, so the following has line two indented 3 spaces relative to line one:</p>\n<pre><code>let s = indoc! {&quot;\n    line one\n       line two\n&quot;};\n</code></pre>\n<p>The result is <code>&quot;line one\\n   line two\\n&quot;</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1546887334, "post_id": 54080148, "comment_id": 94993723, "body": "Please <i>explicitly</i> state, using prose, what piece of the code is important to this behavior."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1546887469, "post_id": 54080148, "comment_id": 94993792, "body": "Right now, this appears to not add anything new to <a href=\"https://stackoverflow.com/a/29483453/155423\">the accepted answer</a>, which states: <i>one can use the <code>\\n</code> newline escape [...] you can escape the newline and leading whitespace with a <code>{backslash}</code></i>. (it&#39;s very hard to type a backslash in code in a comment, it appears.)"}, {"owner": {"reputation": 290, "user_id": 848301, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e7387a2ec3ad44a1559f3efd513b85bc?s=128&d=identicon&r=PG", "display_name": "Dato", "link": "https://stackoverflow.com/users/848301/dato"}, "edited": false, "score": 2, "creation_date": 1547073791, "post_id": 54080148, "comment_id": 95071479, "body": "This comment is suggesting a way to combine the two points in the accepted answer: how you can produce a multi-line string, written as multiples lines in code, but that at the same time is allowed to \u2014for stylistic or legibility reason\u2014 get its own indentation in code, without this indentation ending in the final string. It\u2019s not made very clear in the text, but it\u2019s a common use case and thus a valuable suggestion imho. (See the answer by dtolnay for the crate version of this.)"}, {"owner": {"reputation": 28407, "user_id": 109618, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/84a4143803eafa1966191c604864a7b5?s=128&d=identicon&r=PG", "display_name": "David J.", "link": "https://stackoverflow.com/users/109618/david-j"}, "edited": false, "score": 0, "creation_date": 1614534632, "post_id": 54080148, "comment_id": 117408818, "body": "Re: Dato&#39;s comment: &quot;See the answer by dtolnay for the crate version of this&quot;: to be clear, <a href=\"https://docs.rs/indoc\" rel=\"nofollow noreferrer\">Indoc</a> is different that the example given here, since <code>indoc!</code> preserves indentation."}], "tags": [], "owner": {"reputation": 387, "user_id": 4520611, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ebdf79beeaea52b72c2d82d336b3d841?s=128&d=identicon&r=PG&f=1", "display_name": "Igor", "link": "https://stackoverflow.com/users/4520611/igor"}, "is_accepted": false, "score": 10, "last_activity_date": 1546887310, "last_edit_date": 1546887310, "creation_date": 1546887210, "answer_id": 54080148, "question_id": 29483365, "link": "https://stackoverflow.com/questions/29483365/what-is-the-syntax-for-a-multiline-string-literal/54080148#54080148", "title": "What is the syntax for a multiline string literal?", "body": "<p>In case you want to indent multiline  text in your code:</p>\n\n<pre><code>let s = \"first line\\n\\\n    second line\\n\\\n    third line\";\n\nprintln!(\"Multiline text goes next:\\n{}\", s);\n</code></pre>\n\n<p>The result will be the following:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Multiline text goes next:\nfirst line\nsecond line\nthird line\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2728, "user_id": 2891595, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/d86e91efa2d9cd4d85a709cd24a1dcdb?s=128&d=identicon&r=PG&f=1", "display_name": "phip1611", "link": "https://stackoverflow.com/users/2891595/phip1611"}, "is_accepted": false, "score": 8, "last_activity_date": 1596832694, "creation_date": 1596832694, "answer_id": 63308841, "question_id": 29483365, "link": "https://stackoverflow.com/questions/29483365/what-is-the-syntax-for-a-multiline-string-literal/63308841#63308841", "title": "What is the syntax for a multiline string literal?", "body": "<p>If you want to have fine granular control over spaces in multiline strings with linebreaks without using an external crate you can do the follwing. Example taken from my own project.</p>\n<pre><code>impl Display for OCPRecData {\n    fn fmt(&amp;self, f: &amp;mut Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        write!(f, &quot;OCPRecData {{\\n\\\n            \\x20   msg: {:?}\\n\\\n            \\x20   device_name: {:?}\\n\\\n            \\x20   parent_device_name: {:?}\\n\\\n        }}&quot;, self.msg, self.device_name, self.parent_device_name)\n    }\n}\n</code></pre>\n<p><strong>Results in</strong></p>\n<pre><code>OCPRecData {\n    msg: Some(&quot;Hello World&quot;)\n    device_name: None\n    parent_device_name: None\n}\n</code></pre>\n<ul>\n<li><code>\\n\\</code> at each code line end creates a line break at the proper position and discards further spaces in this line of code</li>\n<li><code>\\x20</code> (hex; 32 in decimal) is an ASCII space and an indicator for the first space to be preserved in this line of the string</li>\n<li><code>\\x20\\x20\\x20\\x20</code> and <code>\\x20   </code> have the same effect</li>\n</ul>\n"}], "owner": {"reputation": 2199, "user_id": 4643182, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98d44e9e23a8818bfc464af3538f1455?s=128&d=identicon&r=PG&f=1", "display_name": "Dumbapples", "link": "https://stackoverflow.com/users/4643182/dumbapples"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72637, "favorite_count": 25, "accepted_answer_id": 29483453, "answer_count": 5, "score": 190, "last_activity_date": 1596832694, "creation_date": 1428378191, "last_edit_date": 1428423523, "question_id": 29483365, "link": "https://stackoverflow.com/questions/29483365/what-is-the-syntax-for-a-multiline-string-literal", "title": "What is the syntax for a multiline string literal?", "body": "<p>I'm having a hard time figuring out how string syntax works in Rust. Specifically, I'm trying to figure out how to make a multiple line string.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 103, "user_id": 4756559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/231ed0a22354592f36f78f23f46562b9?s=128&d=identicon&r=PG&f=1", "display_name": "terpstra", "link": "https://stackoverflow.com/users/4756559/terpstra"}, "edited": false, "score": 0, "creation_date": 1428365312, "post_id": 29481492, "comment_id": 47123814, "body": "What is the point of Copy requiring Clone if it goes behind my back with memcpy anyway? I somehow expected this to behave more like a C++ copy constructor."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 103, "user_id": 4756559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/231ed0a22354592f36f78f23f46562b9?s=128&d=identicon&r=PG&f=1", "display_name": "terpstra", "link": "https://stackoverflow.com/users/4756559/terpstra"}, "edited": false, "score": 0, "creation_date": 1428365634, "post_id": 29481492, "comment_id": 47123901, "body": "@WesleyW.Terpstra Copy requires Clone to prevent a common oversight (implementing Copy but not Clone, which breaks interoperability with APIs that use <code>Clone</code>). Rust has nothing like C++ copy constructors, which has many advantages and a couple of disadvantages."}, {"owner": {"reputation": 103, "user_id": 4756559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/231ed0a22354592f36f78f23f46562b9?s=128&d=identicon&r=PG&f=1", "display_name": "terpstra", "link": "https://stackoverflow.com/users/4756559/terpstra"}, "edited": false, "score": 0, "creation_date": 1428365802, "post_id": 29481492, "comment_id": 47123950, "body": "Thanks. I guess I just find it jarring that clone and copy can behave differently."}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 103, "user_id": 4756559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/231ed0a22354592f36f78f23f46562b9?s=128&d=identicon&r=PG&f=1", "display_name": "terpstra", "link": "https://stackoverflow.com/users/4756559/terpstra"}, "edited": false, "score": 4, "creation_date": 1428373732, "post_id": 29481492, "comment_id": 47125935, "body": "@terpstra Look at it like this: <code>Clone</code> is a general property you can give a type.  It says &quot;it&#39;s possible, with some work, to make a copy of values of this type&quot;.  If it&#39;s logically valid, you can pretty much <i>always</i> implement <code>Clone</code>.  <code>Copy</code> is more specialised; it says &quot;you can create a copy by ignoring <code>Clone::clone</code> and just <code>memcpy</code>-ing the bytes&quot;, but requires that this actually make a valid copy (which is not always true)."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 3, "last_activity_date": 1428364235, "creation_date": 1428364235, "answer_id": 29481492, "question_id": 29481468, "link": "https://stackoverflow.com/questions/29481468/clone-not-invoked-for-moved-value/29481492#29481492", "title": "Clone not invoked for Moved value?", "body": "<p><code>Clone</code> is nothing special. It's just an ordinary library trait. You could define it yourself!</p>\n\n<p>Consequently, <code>.clone()</code> is only used when you explicitly call it. Neither copying nor moving has anything to do with <code>Clone</code>. When you call <code>doit(z)</code>, <code>z</code> is copied in the <code>Copy</code> sense, which means a byte-wise copy under the hood. If you want to clone to pass it to <code>doit</code>, then write that:</p>\n\n<pre><code>doit(z.clone());\n</code></pre>\n"}], "owner": {"reputation": 103, "user_id": 4756559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/231ed0a22354592f36f78f23f46562b9?s=128&d=identicon&r=PG&f=1", "display_name": "terpstra", "link": "https://stackoverflow.com/users/4756559/terpstra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 29481492, "answer_count": 1, "score": 3, "last_activity_date": 1428364235, "creation_date": 1428364063, "question_id": 29481468, "link": "https://stackoverflow.com/questions/29481468/clone-not-invoked-for-moved-value", "title": "Clone not invoked for Moved value?", "body": "<p>I am trying to understand how Copy interacts with move semantics in Rust. I expected this program to clone the object, but it does not. I have rust 1.0.0-beta.</p>\n\n<pre><code>#[derive(Debug)]                                  \nstruct X {\n  y : i32,\n}\n\nimpl Clone for X {\n  fn clone(&amp;self) -&gt; X { \n    println!(\"clone\");\n    X { y: 4 }\n  } \n}\n\nimpl Copy for X { }  \n\nfn doit(x : X) {     \n  println!(\"doit {:?}\", x);\n}\n\nfn main() { \n  let z = X { y: 5 };    \n  println!(\"main {:?}\", z);\n  doit(z);        \n  println!(\"main {:?}\", z);\n}\n</code></pre>\n\n<p>Here's my confusion: If X were not \"Copy\", doit would take ownership of the object z and drop it at the end of scope. Then, the second println in main would complain because z was moved. Fine. However, now I've marked X as Copy and provided a clone method. I expected the clone method would be used to provide doit with its own copy of z, thus allowing me to continue using z after doit. That doesn't happen.</p>\n\n<p>Where is my understanding wrong?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 1, "creation_date": 1428419510, "post_id": 29481161, "comment_id": 47148851, "body": "See @shepmaster&#39;s answer, you can see the status as well as the reason in the documentation."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1428509058, "post_id": 29481161, "comment_id": 47194460, "body": "@SteveKlabnik: As one of the 8% of men (so about 8% of developers...) affected by color-blindness to some degree; any chance of the stability status of functions being indicated by something <i>more</i> than just color?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1428517512, "post_id": 29481161, "comment_id": 47199483, "body": "@MatthieuM.i see you&#39;ve filed a bug already, so i&#39;ll just leave it at that :)"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "edited": false, "score": 0, "creation_date": 1428517989, "post_id": 29481161, "comment_id": 47199774, "body": "@SteveKlabnik: It was me who filed it (or both?). Actually I hadn&#39;t notice that those fancy bars were different colors until Shepmaster pointed it out."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 1, "last_activity_date": 1428362154, "last_edit_date": 1428362154, "creation_date": 1428361837, "answer_id": 29481161, "question_id": 29481065, "link": "https://stackoverflow.com/questions/29481065/why-is-vecresize-an-unstable-function/29481161#29481161", "title": "Why is Vec::resize an unstable function?", "body": "<p>I think it is an issue in the documentation.</p>\n\n<p>The <code>stable</code> attribute can be applied to the crate, to the type or to individual functions, but in the documentation you cannot see the deprecation status of functions, only of types and crates.</p>\n\n<p>If you go to <a href=\"https://github.com/rust-lang/rust/blob/2f63e9c127ceff853f560a8a74f6d37c8ebad400/src/libcollections/vec.rs#L1081\" rel=\"nofollow\">the source</a>, you will see:</p>\n\n<pre><code>impl&lt;T: Clone&gt; Vec&lt;T&gt; {\n    /// ...\n    #[unstable(feature = \"collections\",\n               reason = \"matches collection reform specification; waiting for dust to settle\")]\n    pub fn resize(&amp;mut self, new_len: usize, value: T) {\n</code></pre>\n\n<p>And, as you can see in this file, there are still a lot of unstable functions in this module.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 3, "last_activity_date": 1428365210, "creation_date": 1428365210, "answer_id": 29481639, "question_id": 29481065, "link": "https://stackoverflow.com/questions/29481065/why-is-vecresize-an-unstable-function/29481639#29481639", "title": "Why is Vec::resize an unstable function?", "body": "<p>A function <em>can</em> be marked as unstable, and <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.resize\" rel=\"nofollow noreferrer\"><code>Vec::resize</code></a> is:</p>\n\n<p><img src=\"https://i.stack.imgur.com/s4a81.png\" alt=\"enter image description here\"></p>\n\n<p>The yellow bar on the left indicates stability, and hovering over it describes why it is unstable.</p>\n"}], "owner": {"reputation": 1457, "user_id": 441154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/733965b05700ff08bd71f12c9c022ef6?s=128&d=identicon&r=PG", "display_name": "Aligus", "link": "https://stackoverflow.com/users/441154/aligus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 326, "favorite_count": 0, "accepted_answer_id": 29481161, "answer_count": 2, "score": 0, "last_activity_date": 1428365210, "creation_date": 1428361212, "last_edit_date": 1428365100, "question_id": 29481065, "link": "https://stackoverflow.com/questions/29481065/why-is-vecresize-an-unstable-function", "title": "Why is Vec::resize an unstable function?", "body": "<p>As stated in the documentation <a href=\"http://doc.rust-lang.org/1.0.0-beta/std/vec/struct.Vec.html\" rel=\"nofollow\">Vec</a> has to be stable in 1.0-beta. However, if I try to call resize I see the following error message:</p>\n\n<blockquote>\n  <p>error: use of unstable library feature 'collections': matches collection reform specification; waiting for dust to settle</p>\n</blockquote>\n\n<p>It can be easily reproduced, e.g. here: <a href=\"http://is.gd/IhEfEu\" rel=\"nofollow\">http://is.gd/IhEfEu</a></p>\n\n<pre><code>fn main() {\n    let mut v = vec![1, 2, 3, 4];\n    v.resize(10, 0);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1428364961, "creation_date": 1428364961, "answer_id": 29481594, "question_id": 29480586, "link": "https://stackoverflow.com/questions/29480586/type-signature-for-generic-closure-with-trait-constraint/29481594#29481594", "title": "Type signature for generic closure with trait constraint", "body": "<p>You want to use a <code>where</code> clause on the struct (and any implementations for that struct):</p>\n\n<pre><code>trait A { fn moo(&amp;self); }\nstruct S;\n\nstruct Pattern&lt;T&gt;\n    where T: A\n{\n    view: Fn (T) -&gt; S,\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 1741, "user_id": 639465, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/00f1bf67a52fc75fb6da011edcf3f42b?s=128&d=identicon&r=PG", "display_name": "caio", "link": "https://stackoverflow.com/users/639465/caio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 359, "favorite_count": 0, "accepted_answer_id": 29481594, "answer_count": 1, "score": 0, "last_activity_date": 1428364961, "creation_date": 1428358645, "question_id": 29480586, "link": "https://stackoverflow.com/questions/29480586/type-signature-for-generic-closure-with-trait-constraint", "title": "Type signature for generic closure with trait constraint", "body": "<p>I have the following struct that works fine:</p>\n\n<pre><code>pub struct Pattern {\n    pub regex: &amp;'static str,\n    pub view: Fn (Request) -&gt; Response,\n}\n</code></pre>\n\n<p>But I'd like to change <code>view</code> to accept any type that implements <code>Renderable</code> (trait constraint). I was expecting to make it work this way:</p>\n\n<pre><code>pub struct Pattern {\n    pub regex: &amp;'static str,\n    pub view: Fn &lt;T: Renderable&gt; (Request) -&gt; T,\n}\n</code></pre>\n\n<p>But no luck. Any ideas?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1428508885, "post_id": 29478271, "comment_id": 47194346, "body": "I would point that <code>Rust</code> is a language, so here we are talking about <code>rustc</code> (the only available compiler) and more specifically about the LLVM backend behind <code>rustc</code> (as <code>rustc</code> delegates optimizations to LLVM)."}], "answers": [{"comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1428350466, "post_id": 29478547, "comment_id": 47117933, "body": "Excellent, thank you. Actually, my security knowledge is quite lacking. That&#39;s good to know. In the realtime systems I&#39;ve worked on (primarily software defined radio), we weren&#39;t concerned with security very much, but performance was critical. And yeah the fixed size was for demonstration. A more realistic scenario would involve the size coming from a config file."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1428406341, "post_id": 29478547, "comment_id": 47140073, "body": "doesn&#39;t <code>#[inline(never)]</code> break the possibility of the optimization occurring? Rust has malloc optimizations since around a month..."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1428425745, "post_id": 29478547, "comment_id": 47152722, "body": "@ker I dunno about <b>break</b>, but perhaps reduce the possibility. I&#39;ve edited the answer to mention why I think that this &quot;optimization&quot; is unlikely to exist. Can you share some links about the optimizations you are thinking about?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 1, "creation_date": 1428483211, "post_id": 29478547, "comment_id": 47176271, "body": "the relevant PR is <a href=\"https://github.com/rust-lang/rust/pull/22526\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/pull/22526</a> . The issue tracking malloc optimizations is <a href=\"https://github.com/rust-lang/rust/issues/22159\" rel=\"nofollow noreferrer\">github.com/rust-lang/rust/issues/22159</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1428499187, "post_id": 29478547, "comment_id": 47186923, "body": "@ker thanks! That looks like it only handles unused calls to malloc. In this case, the allocated space definitely wants to be used (and reused!), so I doubt those would come into play."}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1428503256, "post_id": 29478547, "comment_id": 47190203, "body": "nope, this actually also optimizes malloc -&gt; use -&gt; dealloc to a stack allocation. I thought it also does dealloc -&gt; malloc to noop optimization"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1428504025, "post_id": 29478547, "comment_id": 47190754, "body": "@ker I must be missing something; I don&#39;t see any <a href=\"http://is.gd/v1Zb0g\" rel=\"nofollow noreferrer\">removal of jemalloc calls</a>. <code>inline(never)</code> shouldn&#39;t affect optimization <i>within</i> a function, right?"}, {"owner": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1428504714, "post_id": 29478547, "comment_id": 47191287, "body": "uhm... apparently even the dead allocations don&#39;t work anymore: <a href=\"http://is.gd/LWzpqM\" rel=\"nofollow noreferrer\">is.gd/LWzpqM</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 22583, "user_id": 1103681, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/rMUo3.png?s=128&g=1", "display_name": "oli_obk", "link": "https://stackoverflow.com/users/1103681/oli-obk"}, "edited": false, "score": 0, "creation_date": 1428505038, "post_id": 29478547, "comment_id": 47191530, "body": "@ker oops! You gonna file an issue?"}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1428459716, "last_edit_date": 1428459716, "creation_date": 1428349865, "answer_id": 29478547, "question_id": 29478271, "link": "https://stackoverflow.com/questions/29478271/is-rust-able-to-optimize-local-heap-allocations/29478547#29478547", "title": "Is Rust able to optimize local heap allocations?", "body": "<p>As of right now, it is <strong>not</strong> optimized. To investigate this, it is useful to add <code>#[inline(never)]</code> to your function, then view the <a href=\"http://is.gd/EFOjMw\" rel=\"nofollow\">LLVM IR on the playpen</a>. Here's an excerpt:</p>\n\n<pre><code>; Function Attrs: noinline uwtable\ndefine internal fastcc void @_ZN17possibly_realtime20h1a3a159dd4b50685eaaE() unnamed_addr #0 {\nentry-block:\n  %0 = tail call i8* @je_mallocx(i64 400, i32 0), !noalias !0\n  %1 = icmp eq i8* %0, null\n  br i1 %1, label %then-block-255-.i.i, label %normal-return2.i\n</code></pre>\n\n<p>That is, every time that <code>possibly_realtime</code> is called, memory is allocated via <code>je_mallocx</code>.</p>\n\n<h3>Editorial</h3>\n\n<p>Reusing a buffer is a great way to leak secure information, and I'd encourage you to <strong>avoid it as much as possible</strong>. I'm sure you are already familiar with these problems, but I want to make sure that future searchers make a note.</p>\n\n<p>I also doubt that this \"optimization\" will be added to Rust, especially not without explicit opt-in by the programmer. There needs to be somewhere that the pointer to the allocated memory could be stored, but there really <em>isn't</em> anywhere. That means it would need to be a global or thread-local variable! Rust can run in environments without threads, but a global variable would still preclude recursive calls to this method. All in all, I think that passing the buffer into the method is <em>much</em> more explicit about what will happen. </p>\n\n<p>I also assume that your example uses a <code>Vec</code> with a fixed size for demo purposes, but if you truly know the size at compile time, a fixed-size array could be a better choice.</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 835, "favorite_count": 0, "accepted_answer_id": 29478547, "answer_count": 1, "score": 4, "last_activity_date": 1428504527, "creation_date": 1428348766, "question_id": 29478271, "link": "https://stackoverflow.com/questions/29478271/is-rust-able-to-optimize-local-heap-allocations", "title": "Is Rust able to optimize local heap allocations?", "body": "<p>When writing relatively realtime code, generally heap allocations in the main execution loop are avoided. So in my experience you allocate all the memory your program needs in an initialization step, and then pass the memory around as needed. A toy example in C might look something like the following:</p>\n\n<pre><code>#include &lt;stdlib.h&gt;\n\n#define LEN 100\n\nvoid not_realtime() {\n    int *v = malloc(LEN*sizeof(int));\n    for (int i=0; i&lt;LEN; i++) {\n        v[i] = 1;\n    }\n    free(v);\n}\n\nvoid realtime(int *v, int len) {\n    for (int i=0; i&lt;len; i++) {\n        v[i] = 1;\n    }\n}\n\nint main(int argc, char **argv) {\n\n    not_realtime();\n\n    int *v = malloc(LEN*sizeof(int));\n    realtime(v, LEN);\n    free(v);\n}\n</code></pre>\n\n<p>And I believe roughly the equivalent in Rust:</p>\n\n<pre><code>fn possibly_realtime() {\n    let mut v = vec![0; 100];\n    for i in 0..v.len() {\n        v[i] = 1;\n    }\n}\n\nfn realtime(v: &amp;mut Vec&lt;i32&gt;) {\n    for i in 0..v.len() {\n        v[i] = 1;\n    }\n}\n\nfn main() {\n\n    possibly_realtime();\n\n    let mut v: Vec&lt;i32&gt; = vec![0; 100];\n    realtime(&amp;mut v);\n}\n</code></pre>\n\n<p>What I'm wondering is: is Rust able to optimize <code>possibly_realtime</code> such that the local heap allocation of <code>v</code> only occurs once and is reused on subsequent calls to <code>possibly_realtime</code>? I'm guessing not but maybe there's some magic that makes it possible.</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 2923, "user_id": 783912, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/98e9b626cf9e9e74ae50c190da325a5e?s=128&d=identicon&r=PG&f=1", "display_name": "FlyingFoX", "link": "https://stackoverflow.com/users/783912/flyingfox"}, "is_accepted": false, "score": 1, "last_activity_date": 1428341233, "creation_date": 1428341233, "answer_id": 29476209, "question_id": 29475403, "link": "https://stackoverflow.com/questions/29475403/is-there-a-way-to-implement-a-trait-method-with-a-different-signature/29476209#29476209", "title": "Is there a way to implement a trait method with a different signature?", "body": "<p>I think the best way to deal with your problem is to create a new trait that defines a function like enumerate2D() that has the kind of signature you want.</p>\n"}, {"comments": [{"owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "edited": false, "score": 0, "creation_date": 1428416455, "post_id": 29476926, "comment_id": 47146585, "body": "Thanks for detailed answer. So, I think I should interpret <code>enumerate</code> just as a way to get <code>i</code> from <code>foreach</code> and nothing more. It&#39;s a pity."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 5, "last_activity_date": 1506264570, "last_edit_date": 1506264570, "creation_date": 1428343828, "answer_id": 29476926, "question_id": 29475403, "link": "https://stackoverflow.com/questions/29475403/is-there-a-way-to-implement-a-trait-method-with-a-different-signature/29476926#29476926", "title": "Is there a way to implement a trait method with a different signature?", "body": "<p>It is correct that you cannot change the signature of <a href=\"http://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.enumerate\" rel=\"nofollow noreferrer\"><code>Iterator::enumerate</code></a>; doing so wouldn't implement the trait as any other consumer would expect. However, you <em>can</em> create an <code>enumerate</code> method directly on your <code>Matrix</code> that does what you want:</p>\n\n<pre><code>struct Matrix {\n    value: u8,\n    size: usize,\n}\n\nimpl Matrix {\n    fn enumerate(&amp;self) -&gt; MatrixEnumerate {\n        MatrixEnumerate {\n            matrix: self,\n            pos: 0,\n        }\n    }\n}\n\nstruct MatrixEnumerate&lt;'a&gt; {\n    matrix: &amp;'a Matrix,\n    pos: usize,\n}\n\nimpl&lt;'a&gt; Iterator for MatrixEnumerate&lt;'a&gt; {\n    type Item = (usize, usize, &amp;'a u8);\n\n    fn next(&amp;mut self) -&gt; Option&lt;(usize, usize, &amp;'a u8)&gt; {\n        if self.pos &lt; self.matrix.size {\n            let v = Some((self.pos, self.pos, &amp;self.matrix.value));\n            self.pos += 1;\n            v\n        } else {\n            None\n        }\n    }\n}\n\nfn main() {\n    let m = Matrix {\n        value: 42,\n        size: 10,\n    };\n    for (x, y, v) in m.enumerate() {\n        println!(\"{}, {}: {}\", x, y, v);\n    }\n}\n</code></pre>\n\n<p>Here, I'm skipping the complexity of the matrix and just advancing down the diagonal. Your real implementation has to deal with row-major or column-major iteration and properly wrapping at the end of the row/column.</p>\n"}], "owner": {"reputation": 1688, "user_id": 4229810, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/c09f7aa43a0c778154ee7bb5f169802b?s=128&d=identicon&r=PG", "display_name": "Lodin", "link": "https://stackoverflow.com/users/4229810/lodin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 542, "favorite_count": 0, "accepted_answer_id": 29476926, "answer_count": 2, "score": 2, "last_activity_date": 1506264675, "creation_date": 1428338199, "last_edit_date": 1506264675, "question_id": 29475403, "link": "https://stackoverflow.com/questions/29475403/is-there-a-way-to-implement-a-trait-method-with-a-different-signature", "title": "Is there a way to implement a trait method with a different signature?", "body": "<p>I am creating simple matrix implementation in Rust. I need to iterate over the matrix, getting the coordinates in addition to the value:</p>\n\n<pre><code>for (i, j, elem) in matrix.iter().enumerate() {\n    ...\n}\n</code></pre>\n\n<p>As far as I can see, <code>Iterator::enumerate</code> is pre-defined and I cannot override it with a custom implementation which is able to return <code>(usize, usize, &amp;T)</code>. Is there a way to implement a custom <code>enumerate()</code> method?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 4518, "user_id": 122446, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b5b7efa78974560f6cb1b21cefd309e?s=128&d=identicon&r=PG", "display_name": "Peter Horne", "link": "https://stackoverflow.com/users/122446/peter-horne"}, "edited": false, "score": 1, "creation_date": 1428326879, "post_id": 29472057, "comment_id": 47105653, "body": "Thanks! Using the Display format rather than the Debug to get more detailed information hadn&#39;t occurred to me."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1428326068, "last_edit_date": 1495539871, "creation_date": 1428326068, "answer_id": 29472057, "question_id": 29471900, "link": "https://stackoverflow.com/questions/29471900/why-do-i-get-a-bad-file-descriptor-error-when-writing-to-opened-file/29472057#29472057", "title": "Why do I get a Bad File Descriptor error when writing to opened File?", "body": "<p>You didn't include any code, so I had to make wild guesses about what you are doing. Here's one piece of code that reproduces your error:</p>\n\n<pre><code>use std::fs;\nuse std::io::Write;\n\nfn main() {\n    let mut f = fs::File::open(\"/\").unwrap();\n\n    // f.write_all(b\"hello\").unwrap();\n    // Error { repr: Os(9) }\n\n    match f.write_all(b\"hello\") {\n        Ok(..) =&gt; {},\n        Err(e) =&gt; println!(\"{}\", e),\n    }\n    // Bad file descriptor (os error 9)\n}\n</code></pre>\n\n<p>If you use the <a href=\"http://doc.rust-lang.org/core/fmt/trait.Display.html\" rel=\"nofollow noreferrer\"><code>Display</code></a> (<code>{}</code>) format instead of <a href=\"http://doc.rust-lang.org/core/fmt/trait.Debug.html\" rel=\"nofollow noreferrer\"><code>Debug</code></a> (<code>{:?}</code>), you will see an error message that is nicer than just the error code. Note that <code>unwrap</code> will use the <code>Debug</code> formatter, so you have to use <code>match</code> in this case.</p>\n\n<p>You could also <a href=\"https://github.com/torvalds/linux/blob/master/include/uapi/asm-generic/errno-base.h\" rel=\"nofollow noreferrer\">look up the error code</a> in the kernel source. You don't indicate if you are running Windows (unlikely), OS X or Linux, so I guessed Linux.</p>\n\n<p>There are <a href=\"https://stackoverflow.com/search?q=errno+9\">lots of SO questions</a> that then explain what the code can mean, but I'm sure you know how to search through those, now that you have a handle on the problem.</p>\n"}], "owner": {"reputation": 4518, "user_id": 122446, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b5b7efa78974560f6cb1b21cefd309e?s=128&d=identicon&r=PG", "display_name": "Peter Horne", "link": "https://stackoverflow.com/users/122446/peter-horne"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1889, "favorite_count": 0, "accepted_answer_id": 29472057, "answer_count": 1, "score": 0, "last_activity_date": 1611424835, "creation_date": 1428325467, "last_edit_date": 1611424835, "question_id": 29471900, "link": "https://stackoverflow.com/questions/29471900/why-do-i-get-a-bad-file-descriptor-error-when-writing-to-opened-file", "title": "Why do I get a Bad File Descriptor error when writing to opened File?", "body": "<p>Calling <code>write_all</code> on a file returns an error with the description: <code>os error</code>. Debug printing the error outputs: <code>Err(Error { repr: Os(9) })</code></p>\n\n<p>What does the error mean?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1428312836, "post_id": 29468446, "comment_id": 47099274, "body": "Awesome, thank you. That&#39;s actually similar to what I started with, but I was having problems, I think because I was using <code>&amp;mut self</code> in my modifier functions, instead of consuming with <code>mut self</code>."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1428312965, "post_id": 29468446, "comment_id": 47099330, "body": "Do you know why they use <code>&amp;mut self</code> <a href=\"http://doc.rust-lang.org/1.0.0-beta/book/method-syntax.html#builder-pattern\" rel=\"nofollow noreferrer\">here</a>?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 3, "creation_date": 1428313107, "post_id": 29468446, "comment_id": 47099381, "body": "The approach with <code>&amp;mut self</code>/<code>&amp;self</code> works there because the builder there only works with <code>Copy</code> data, and the structure built by the builder does not contain references into the builder. It won&#39;t work for <code>String</code>s and other kinds of owned non-copyable data."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 11, "last_activity_date": 1428313174, "last_edit_date": 1428313174, "creation_date": 1428312004, "answer_id": 29468446, "question_id": 29468260, "link": "https://stackoverflow.com/questions/29468260/builder-pattern-borrowed-value-does-not-live-long-enough/29468446#29468446", "title": "Builder pattern - borrowed value does not live long enough", "body": "<p>The problem is that you're creating <code>Type</code> with a string slice based on a <code>String</code> from <code>TypeBuilder</code>, but <code>TypeBuilder</code> instance created with <code>new()</code> is destroyed immediately in the same <code>let</code> statement, so if this was allowed, the string slice would became dangling. And that's why it works when you store <code>TypeBuilder</code> in a variable first.</p>\n\n<p>The problem with your approach to the builder is that the builder is the owner of data for the value it builds: <code>Type</code> references the contents of <code>TypeBuilder</code>. This means that <code>Type</code> instances are always tied to <code>TypeBuilder</code> instances, and you just cannot create <code>Type</code> and drop <code>TypeBuilder</code>. However, this is really unnatural - builders are usually transient objects which are only necessary during construction.</p>\n\n<p>Consequently, in order for the builder pattern to work correctly your <code>Type</code> must become the owner of the data:</p>\n\n<pre><code>struct Type {\n    s: String,\n}\n</code></pre>\n\n<p>Then the builder should be passed by value and then consumed by <code>finalize()</code>:</p>\n\n<pre><code>impl TypeBuilder {\n    fn new() -&gt; TypeBuilder {\n        TypeBuilder { s: \"\".to_string() }\n    }\n\n    fn s(mut self, s: String) -&gt; TypeBuilder {\n        self.s = s;\n        self\n    }\n\n    fn finalize(self) -&gt; Type {\n        Type { s: self.s }\n    }\n}\n</code></pre>\n\n<p>This way your building code should work exactly as it is.</p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 683, "favorite_count": 0, "accepted_answer_id": 29468446, "answer_count": 1, "score": 2, "last_activity_date": 1428325427, "creation_date": 1428311096, "last_edit_date": 1495540403, "question_id": 29468260, "link": "https://stackoverflow.com/questions/29468260/builder-pattern-borrowed-value-does-not-live-long-enough", "title": "Builder pattern - borrowed value does not live long enough", "body": "<p>I'm trying to implement a simple builder but struggling with lifetimes. The following is giving <code>error: borrowed value does not live long enough</code>. <a href=\"https://stackoverflow.com/questions/28469667/borrowed-value-does-not-live-long-enough-when-using-the-builder-pattern\">This question</a> seems similar. If I store <code>t</code> in a mutable variable and then call <code>s</code> and finalize it works, but I want to get the one liner to work. What am I doing wrong?    </p>\n\n<pre><code>struct Type&lt;'a&gt; {\n    s: &amp;'a String,\n}\n\nstruct TypeBuilder {\n    s: String,\n}\n\nimpl TypeBuilder {\n    fn new() -&gt; TypeBuilder {\n        TypeBuilder { s: \"\".to_string() }\n    }\n\n    fn s(&amp;mut self, s: String) -&gt; &amp;mut TypeBuilder {\n        self.s = s;\n        self\n    }\n\n    fn finalize(&amp;self) -&gt; Type {\n        Type { s: &amp;self.s }\n    }\n}\n\nfn main() {\n    let t = TypeBuilder::new()\n                    .s(\"a\".to_string())\n                    .finalize();\n    println!(\"string: {}\", t.s);\n}\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "edited": false, "score": 0, "creation_date": 1428316199, "post_id": 29469316, "comment_id": 47100622, "body": "I see. So, assuming all fields are private, and the only access to the contents is made through a method like <code>pub fn get_str&lt;&#39;a&gt;(&amp;&#39;a self) -&gt; &amp;&#39;a str { &amp;self.bar }</code>, what could possibly go wrong ?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "edited": false, "score": 0, "creation_date": 1428316415, "post_id": 29469316, "comment_id": 47100728, "body": "@Levans Lots of things, I&#39;d wager. Or maybe nothing at all. As I said, I&#39;m out of my depth here: I can point out safety holes as I find them, but not finding any doesn&#39;t give me much confidence."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 2, "last_activity_date": 1428315496, "creation_date": 1428315496, "answer_id": 29469316, "question_id": 29467543, "link": "https://stackoverflow.com/questions/29467543/unsafe-references-to-attributes-of-the-same-struct/29469316#29469316", "title": "Unsafe references to attributes of the same struct", "body": "<p><code>&amp;mut</code> access is not (that) important. What's important is that the <code>String</code> is never changed (at least without the <code>&amp;'static str</code> also being changed), other data can change for all we care. Besides, if a <code>&amp;mut</code> would allow third party code to change the string, then they could also change it without a pointer, via inherited mutability:</p>\n\n<pre><code>let x = Foo::new(string);\nlet mut x = x;\nx.foo = other_string;\nprintln!(\"{}\", x.bar); // \n</code></pre>\n\n<p>So at the very least you must keep the attribute private and audit all code in the same module (not just the <code>impl Foo</code>!). There's another problem though:\nIf you <em>ever</em> hand out the <code>&amp;'static str</code>, then yes, it is unsafe:</p>\n\n<pre><code>let x = Foo::new(string);\nlet s: &amp;'static str = obtain_str(x);\ndrop(x);\nprintln!(\"{}\", s); // use after free\n</code></pre>\n\n<p>So what you can do safely with this kind of self-reference is <em>very</em> limited. The second problem could, <em>maybe</em>, be prevented with appropriate use of lifetimes, but this gets into the area where I'm not willing to accept safety without an elaborate semi-formal argument.</p>\n\n<p>For the use cases I imagine, it is probably easier to bite the bullet and stay away from <code>unsafe</code>.</p>\n"}], "owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 29469316, "answer_count": 1, "score": 1, "last_activity_date": 1428315496, "creation_date": 1428307309, "question_id": 29467543, "link": "https://stackoverflow.com/questions/29467543/unsafe-references-to-attributes-of-the-same-struct", "title": "Unsafe references to attributes of the same struct", "body": "<p>On tricky problem impossible to do without unsafe blocks, is holding in a struct references to something owned by an other attribute of this struct.</p>\n\n<p>However, with unsafe blocks it's quite easy, one can do something like:</p>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo {\n    bar: &amp;'static str,\n    foo: String\n}\n\nimpl Foo {\n    pub fn new(s: String) -&gt; Foo {\n        Foo {\n            bar: unsafe { ::std::mem::transmute(&amp;s[..]) },\n            foo: s\n        }\n    }\n}\n</code></pre>\n\n<p>Here is the question: provided no method of the struct <code>Foo</code> previously defined gives <code>&amp;mut</code> access to it (the struct will thus never be modified after creation), knowing that the data of <code>String</code> is heap-allocated, is this code actually safe (according to rust meaning of \"safe\") ? If not, what are the situations where a problem may arise ?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "is_accepted": true, "score": 7, "last_activity_date": 1428308967, "creation_date": 1428308967, "answer_id": 29467828, "question_id": 29467320, "link": "https://stackoverflow.com/questions/29467320/iterators-laziness-and-ownership/29467828#29467828", "title": "Iterators, laziness, and ownership", "body": "<p>The limiting point in your situation is the <code>.iter_named()</code> method:</p>\n\n<pre><code>fn iter_named(&amp;'t self) -&gt; SubCapturesNamed&lt;'t&gt;\n</code></pre>\n\n<p>Note the <code>&amp;'t self</code>: the lifetime of the output will be tied to the lifetime of the <code>Captures</code> instance. This is because the names are stored in the <code>Capture</code> object, so any <code>&amp;str</code> to them cannot outlive this object.</p>\n\n<p>There is only one fix for that: you must keep the <code>Capture</code> instances alive:</p>\n\n<pre><code>let captures = re.captures_iter(text).collect::&lt;Vec&lt;_&gt;&gt;();\nlet tokens: Vec&lt;(&amp;str, &amp;str)&gt; = captures.iter()\n    .flat_map(|t| t.iter_named())\n    .filter(|t| t.1.is_some())\n    .map(|t| (t.0, t.1.unwrap()))\n    .collect();\n</code></pre>\n"}], "owner": {"reputation": 4643, "user_id": 151504, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26b0b76df1e95001d976fc1009e9295b?s=128&d=identicon&r=PG&f=1", "display_name": "Michael Dowling", "link": "https://stackoverflow.com/users/151504/michael-dowling"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 249, "favorite_count": 0, "accepted_answer_id": 29467828, "answer_count": 1, "score": 5, "last_activity_date": 1428326157, "creation_date": 1428306120, "last_edit_date": 1428326157, "question_id": 29467320, "link": "https://stackoverflow.com/questions/29467320/iterators-laziness-and-ownership", "title": "Iterators, laziness, and ownership", "body": "<p>I'm getting started with Rust, and I'm playing around with the <a href=\"http://doc.rust-lang.org/regex/regex/index.html\" rel=\"nofollow\">regex</a> crate so that I can create a lexer.</p>\n\n<p>The lexer uses a big regular expression that contains a bunch of named capture groups. I'm trying to take the results of my regular expression and create a <code>Vec&lt;&amp;str, &amp;str&gt;</code> of the capture name and capture value, but I keep running into issue regarding the lifetimes of values returned from iterating when mapping and filtering over the results.</p>\n\n<p>I think this has something to do with laziness and the fact that the iterator has not been consumed when falling out of scope, but I'm not sure how to actually solve the problem.</p>\n\n<pre><code>extern crate regex;\n\nuse regex::Regex;\n\nfn main() {\n    // Define a regular expression with a bunch of named capture groups\n    let expr = \"((?P&lt;num&gt;[0-9]+)|(?P&lt;str&gt;[a-zA-Z]+))\";\n    let text = \"0ab123cd\";\n    let re = Regex::new(&amp;expr).unwrap();\n\n    let tokens: Vec&lt;(&amp;str, &amp;str)&gt; = re.captures_iter(text)\n        .flat_map(|t| t.iter_named())\n        .filter(|t| t.1.is_some())\n        .map(|t| (t.0, t.1.unwrap()))\n        .collect();\n\n    for token in tokens {\n        println!(\"{:?}\", token);\n    }\n}\n</code></pre>\n\n<p>Running the above code results in the following error:</p>\n\n<pre><code>$ cargo run\nCompiling hello_world v0.0.1 (file:///Users/dowling/projects/rust_hello_world)\n\nsrc/main.rs:14:23: 14:24 error: `t` does not live long enough\nsrc/main.rs:14         .flat_map(|t| t.iter_named())\n                                     ^\nsrc/main.rs:17:19: 22:2 note: reference must be valid for the block suffix following statement 3 at 17:18...\nsrc/main.rs:17         .collect();\nsrc/main.rs:18 \nsrc/main.rs:19     for token in tokens {\nsrc/main.rs:20         println!(\"{:?}\", token);\nsrc/main.rs:21     }\nsrc/main.rs:22 }\nsrc/main.rs:14:23: 14:37 note: ...but borrowed value is only valid for the block at 14:22\nsrc/main.rs:14         .flat_map(|t| t.iter_named())\n                                     ^~~~~~~~~~~~~~\nerror: aborting due to previous error\nCould not compile `hello_world`.\n</code></pre>\n"}, {"tags": ["generics", "rust", "where-clause"], "answers": [{"tags": [], "owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "is_accepted": false, "score": 4, "last_activity_date": 1551272858, "last_edit_date": 1551272858, "creation_date": 1428270171, "answer_id": 29462553, "question_id": 29462526, "link": "https://stackoverflow.com/questions/29462526/simplify-where-clause-with-repeated-associated-type-restrictions/29462553#29462553", "title": "Simplify where clause with repeated associated type restrictions", "body": "<p>You can add <code>T</code> as a type parameter for your function, and require <code>I</code> to implement <code>Iterator&lt;Item = T&gt;</code>, like this:</p>\n\n<pre><code>fn sum_iter&lt;I, T&gt;(s: I, init: &amp;T) -&gt; T\nwhere\n    I: Iterator&lt;Item = T&gt; + Clone,\n    T: Add&lt;T, Output = T&gt; + Copy,\n{\n    s.clone().fold(*init, |acc, item| acc + item)\n}\n</code></pre>\n"}], "owner": {"reputation": 1052, "user_id": 3210331, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/29e0fd1dca7008722b001a73cbd135b6?s=128&d=identicon&r=PG&f=1", "display_name": "Mateo", "link": "https://stackoverflow.com/users/3210331/mateo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1551272858, "creation_date": 1428269965, "last_edit_date": 1551272831, "question_id": 29462526, "link": "https://stackoverflow.com/questions/29462526/simplify-where-clause-with-repeated-associated-type-restrictions", "title": "Simplify where clause with repeated associated type restrictions", "body": "<p>I wrote the following function to sum over an iterator:</p>\n\n<pre><code>use std::ops::Add;\n\nfn sum_iter&lt;I&gt;(s: I, init: &amp;I::Item) -&gt; I::Item\nwhere\n    I: Iterator + Clone,\n    &lt;I as Iterator&gt;::Item: Add&lt;I::Item, Output = I::Item&gt; + Copy,\n{\n    s.clone().fold(*init, |acc, item| acc + item)\n}\n</code></pre>\n\n<p>This compiles fine with Rust 1.0.0, but it would be nice if one could avoid repeating <code>I::Item</code> four times and instead refer to a type <code>T</code> and say somewhere that <code>Iterator::Item = T</code> only once. What's the right way to do this?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1428264898, "creation_date": 1428264898, "answer_id": 29461743, "question_id": 29461693, "link": "https://stackoverflow.com/questions/29461693/how-can-i-get-cargo-to-recompile-changed-files-automatically/29461743#29461743", "title": "How can I get cargo to recompile changed files automatically?", "body": "<p>I believe that the distinction is that running <code>cargo run</code> twice won't build the code twice, unless the input files have changed. As far as I know, Cargo doesn't have the functionality you want built-in. You could file a feature request. In the meantime, I'd suggest you just use <a href=\"http://linux.die.net/man/1/watch\" rel=\"nofollow\"><code>watch</code></a>. You could also use something like <a href=\"https://github.com/guard/guard\" rel=\"nofollow\"><code>guard</code></a>. Using <code>watch</code> is simpler, but would just run your code every N seconds. <code>guard</code> would require more setup, but would be a bit more efficient.</p>\n"}, {"tags": [], "owner": {"reputation": 4208, "user_id": 2343847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cf8c5e3c346c7734cb1ff728264f6cfb?s=128&d=identicon&r=PG", "display_name": "aij", "link": "https://stackoverflow.com/users/2343847/aij"}, "is_accepted": false, "score": 3, "last_activity_date": 1467301234, "last_edit_date": 1467301234, "creation_date": 1435694331, "answer_id": 31147383, "question_id": 29461693, "link": "https://stackoverflow.com/questions/29461693/how-can-i-get-cargo-to-recompile-changed-files-automatically/31147383#31147383", "title": "How can I get cargo to recompile changed files automatically?", "body": "<p>There doesn't seem to be any support built in, but there is an extension (<a href=\"https://github.com/passcod/cargo-watch\" rel=\"nofollow\"><code>cargo-watch</code></a>) to detect changes using <code>inotify</code>.</p>\n\n<p>When I found it, it wouldn't work with stable (or current) Rust, but I've since patched it.\nIt could still use some work, but it certainly speeds up the compile/fix-errors cycle.</p>\n"}, {"comments": [{"owner": {"reputation": 1049, "user_id": 6580990, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/kZNPw.jpg?s=128&g=1", "display_name": "stimulate", "link": "https://stackoverflow.com/users/6580990/stimulate"}, "edited": false, "score": 0, "creation_date": 1581725992, "post_id": 38117745, "comment_id": 106544987, "body": "Thank you for watchexec! cargo-watch only works for cargo."}], "tags": [], "owner": {"reputation": 25982, "user_id": 305973, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/cd49db0b676767ea4358b1047c4cddd2?s=128&d=identicon&r=PG", "display_name": "robinst", "link": "https://stackoverflow.com/users/305973/robinst"}, "is_accepted": true, "score": 42, "last_activity_date": 1533287155, "last_edit_date": 1533287155, "creation_date": 1467275243, "answer_id": 38117745, "question_id": 29461693, "link": "https://stackoverflow.com/questions/29461693/how-can-i-get-cargo-to-recompile-changed-files-automatically/38117745#38117745", "title": "How can I get cargo to recompile changed files automatically?", "body": "<p>In case you are working on a server project (e.g. hyper, iron, etc) that keeps running and you need it to be restarted when files change, you can use <a href=\"https://github.com/passcod/cargo-watch\" rel=\"noreferrer\"><code>cargo watch</code></a>. Install:</p>\n\n<pre><code>cargo install cargo-watch\n</code></pre>\n\n<p>And then run:</p>\n\n<pre><code>cargo watch -x run\n</code></pre>\n\n<p>See the <a href=\"https://github.com/passcod/cargo-watch#readme\" rel=\"noreferrer\">cargo-watch README</a> for more examples.</p>\n\n<p>Alternatively, you can use <a href=\"https://github.com/mattgreen/watchexec/\" rel=\"noreferrer\">watchexec</a>. Install it:</p>\n\n<pre><code>cargo install watchexec\n</code></pre>\n\n<p>And then use it like this:</p>\n\n<pre><code>watchexec --restart \"cargo run\"\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1591709855, "post_id": 62281840, "comment_id": 110154351, "body": "This does not accomplish the goal of <b>automatically</b>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1591789081, "post_id": 62281840, "comment_id": 110187793, "body": "No, it does not. Saving the file does not cause Cargo to build it, which is the point of this question."}], "tags": [], "owner": {"reputation": 1, "user_id": 11875248, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Jmz28fzifvo/AAAAAAAAAAI/AAAAAAAAAQM/eucME0g_91s/photo.jpg?sz=128", "display_name": "Najeeb ullah khan", "link": "https://stackoverflow.com/users/11875248/najeeb-ullah-khan"}, "is_accepted": false, "score": -1, "last_activity_date": 1591788915, "last_edit_date": 1591788915, "creation_date": 1591703048, "answer_id": 62281840, "question_id": 29461693, "link": "https://stackoverflow.com/questions/29461693/how-can-i-get-cargo-to-recompile-changed-files-automatically/62281840#62281840", "title": "How can I get cargo to recompile changed files automatically?", "body": "<p>In you Visual Studio Code : Go to <kbd>File</kbd> and check <kbd>Auto Save</kbd> which will automatically save the changes made.</p>\n"}, {"comments": [{"owner": {"reputation": 6127, "user_id": 1783588, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/mU0bj.png?s=128&g=1", "display_name": "jasonleonhard", "link": "https://stackoverflow.com/users/1783588/jasonleonhard"}, "edited": false, "score": 0, "creation_date": 1596149098, "post_id": 63182414, "comment_id": 111727183, "body": "<code>brew install entr</code> first"}, {"owner": {"reputation": 96, "user_id": 5992036, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b96431c32a627ef34cbb6566379f8df6?s=128&d=identicon&r=PG", "display_name": "SergeiMinaev", "link": "https://stackoverflow.com/users/5992036/sergeiminaev"}, "edited": false, "score": 0, "creation_date": 1608027316, "post_id": 63182414, "comment_id": 115449943, "body": "I like the idea but it&#39;s <code>ls -R</code> not <code>ls -r</code>. Sadly it&#39;s not working on my system.  This is working example: $ find . -type f  | entr echo 123 This is not: $ find . -type f  | entr cargo run Probably it&#39;s because <code>cargo run</code> command isn&#39;t exits immideately."}, {"owner": {"reputation": 96, "user_id": 5992036, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b96431c32a627ef34cbb6566379f8df6?s=128&d=identicon&r=PG", "display_name": "SergeiMinaev", "link": "https://stackoverflow.com/users/5992036/sergeiminaev"}, "edited": false, "score": 0, "creation_date": 1608027505, "post_id": 63182414, "comment_id": 115450023, "body": "Finally I found out how to make it work:  <code>find src | entr -r cargo run</code>"}, {"owner": {"reputation": 6127, "user_id": 1783588, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/mU0bj.png?s=128&g=1", "display_name": "jasonleonhard", "link": "https://stackoverflow.com/users/1783588/jasonleonhard"}, "reply_to_user": {"reputation": 96, "user_id": 5992036, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b96431c32a627ef34cbb6566379f8df6?s=128&d=identicon&r=PG", "display_name": "SergeiMinaev", "link": "https://stackoverflow.com/users/5992036/sergeiminaev"}, "edited": false, "score": 0, "creation_date": 1608074284, "post_id": 63182414, "comment_id": 115470790, "body": "With all this said, the best option usually still is to use <code>cargo</code>"}], "tags": [], "owner": {"reputation": 6127, "user_id": 1783588, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/mU0bj.png?s=128&g=1", "display_name": "jasonleonhard", "link": "https://stackoverflow.com/users/1783588/jasonleonhard"}, "is_accepted": false, "score": 1, "last_activity_date": 1596148899, "creation_date": 1596148899, "answer_id": 63182414, "question_id": 29461693, "link": "https://stackoverflow.com/questions/29461693/how-can-i-get-cargo-to-recompile-changed-files-automatically/63182414#63182414", "title": "How can I get cargo to recompile changed files automatically?", "body": "<h3>Another option is using <code>entr</code></h3>\n<pre><code>ls -r | entr cargo run\n</code></pre>\n<p>This will recursively list all files in the current directory. Then redirect them to the <code>entr</code> command which watches for changes to those files and then finally runs <code>cargo run</code></p>\n"}], "owner": {"reputation": 4208, "user_id": 2343847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cf8c5e3c346c7734cb1ff728264f6cfb?s=128&d=identicon&r=PG", "display_name": "aij", "link": "https://stackoverflow.com/users/2343847/aij"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 7037, "favorite_count": 6, "accepted_answer_id": 38117745, "answer_count": 5, "score": 30, "last_activity_date": 1596148899, "creation_date": 1428264558, "last_edit_date": 1428264930, "question_id": 29461693, "link": "https://stackoverflow.com/questions/29461693/how-can-i-get-cargo-to-recompile-changed-files-automatically", "title": "How can I get cargo to recompile changed files automatically?", "body": "<p>I have heard cargo has the ability to automatically recompile changed source files, but I'm having a hard time figuring out how to tell it to do so.</p>\n\n<p>For now, I am manually running <code>cargo build</code> or <code>cargo run</code> every time I want to type check my code. I would prefer to instead simply save the file and see the results in the neighboring terminal window.</p>\n\n<p>In case you still have no idea what I'm talking about, I'm looking for the cargo equivalent of <code>sbt ~compile</code> or <code>sbt ~run</code>.</p>\n\n<p>It seems strangely hard to find, so I'm starting to wonder if it's really supported. It's possible someone had said cargo could detect changed files and recompile them when what he meant to say was that cargo could detect <em>unchanged</em> files and <em>avoid</em> recompiling them, like <code>make</code>.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "edited": false, "score": 0, "creation_date": 1428253865, "post_id": 29459897, "comment_id": 47083680, "body": "If I change the assignment to &quot;let q: &amp;&#39;a TempDir = &amp;Tempdir....&quot; it still gives me that error. How do I fix that?"}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "edited": false, "score": 0, "creation_date": 1428254002, "post_id": 29459897, "comment_id": 47083722, "body": "Are you sure you want to return a reference at all? Why not return <code>q</code> by value?"}, {"owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "reply_to_user": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "edited": false, "score": 0, "creation_date": 1428261192, "post_id": 29459897, "comment_id": 47086052, "body": "@hunterboerner, you cannot return a reference to a local variable at all. If you do, the variable is destroyed and you&#39;re left with a dangling reference - that&#39;s exactly what Rust aims to prevent. In C++ such code would likely give you a segfault."}, {"owner": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "edited": false, "score": 0, "creation_date": 1428265366, "post_id": 29459897, "comment_id": 47087367, "body": "@fjh the problem is that once the TempDir goes out of scope it will be deleted."}, {"owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "reply_to_user": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "edited": false, "score": 1, "creation_date": 1428267041, "post_id": 29459897, "comment_id": 47087827, "body": "@hunterboerner The directory will be deleted when the <code>TempDir</code> is dropped, which doesn&#39;t happen if you return it from the function."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "edited": false, "score": 1, "creation_date": 1428268023, "post_id": 29459897, "comment_id": 47088090, "body": "@hunterboerner It seems you&#39;ve encountered a common misconception. Borrowing something never makes it live <i>longer</i>. If the borrow lasts longer than the thing that&#39;s being borrowed, that&#39;s a compiler error, not a way to make the thing live longer. If you want it to live longer than the function, then move it out of the function (e.g., by returning it)."}], "tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": false, "score": 4, "last_activity_date": 1428253884, "last_edit_date": 1428253884, "creation_date": 1428253676, "answer_id": 29459897, "question_id": 29459851, "link": "https://stackoverflow.com/questions/29459851/reference-must-be-valid-for-the-lifetime-a-as-defined-on-the-block-at/29459897#29459897", "title": "Reference must be valid for the lifetime &#39;a as defined on the block at", "body": "<p>You're creating <code>q</code> in your function and then try to return a reference to it from your function. Since <code>q</code> ceases to exist at the end of your function, the return value would be a dangling reference, which is why the compiler won't let you do that.</p>\n\n<p>btw. you can see that something dodgy is going on from your function signature. The lifetime of the returned reference (<code>'a</code>) isn't actually tied to anything (e.g. to the lifetime of a function argument), which indicates that this is probably not going to work.</p>\n"}, {"tags": [], "owner": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "is_accepted": false, "score": 0, "last_activity_date": 1428278504, "last_edit_date": 1428278504, "creation_date": 1428270690, "answer_id": 29462632, "question_id": 29459851, "link": "https://stackoverflow.com/questions/29459851/reference-must-be-valid-for-the-lifetime-a-as-defined-on-the-block-at/29462632#29462632", "title": "Reference must be valid for the lifetime &#39;a as defined on the block at", "body": "<p>I fixed this by directly returning the TempDir.</p>\n\n<pre><code>fn fetch_git_repo(repo_info: &amp;RepoInfo) -&gt; TempDir {\n    let z = TempDir::new(\"temp_git_clone_dir\").unwrap();\n    let q = z.path().to_str().unwrap().to_string();\n\n    println!(\"{:?}\", z.path());\n    // omitted\n\n    z\n}\n</code></pre>\n"}], "owner": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1967, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1428278504, "creation_date": 1428253425, "question_id": 29459851, "link": "https://stackoverflow.com/questions/29459851/reference-must-be-valid-for-the-lifetime-a-as-defined-on-the-block-at", "title": "Reference must be valid for the lifetime &#39;a as defined on the block at", "body": "<p>I am getting a lifetime error and cannot understand what the problem is. The code that's causing the error is:</p>\n\n<pre><code>fn fetch_git_repo&lt;'a&gt;(repo_info: &amp;RepoInfo) -&gt; &amp;'a TempDir {\n    let q: TempDir = TempDir::new(\"temp_git_clone_dir\").ok().unwrap();\n    //let path: &amp;str = dir.path().to_str().unwrap();\n\n    let status = Command::new(\"git\").arg(\"clone\").arg(q.path().to_str().unwrap())\n        .arg(&amp;repo_info.repo_url).status().unwrap_or_else(|e| {\n            panic!(\"Failed to run git clone: {}\", e)\n        });\n\n    if !status.success() {\n        panic!(\"Git clone failed!\");\n    }\n\n    &amp;q\n}\n</code></pre>\n\n<p>And the error itself is:</p>\n\n<pre><code>test.rs:88:6: 88:7 error: `q` does not live long enough\ntest.rs:88     &amp;q\n                          ^\ntest.rs:75:60: 89:2 note: reference must be valid for the lifetime 'a as defined on the block at 75:59...\ntest.rs:75 fn fetch_git_repo&lt;'a&gt;(repo_info: &amp;RepoInfo) -&gt; &amp;'a TempDir {\ntest.rs:76     let q: TempDir = TempDir::new(\"temp_git_clone_dir\").ok().unwrap();\ntest.rs:77     //let path: &amp;str = dir.path().to_str().unwrap();\ntest.rs:78 \ntest.rs:79     let status = Command::new(\"git\").arg(\"clone\").arg(\"\")\ntest.rs:80         .arg(&amp;repo_info.repo_url).status().unwrap_or_else(|e| {\n                     ...\ntest.rs:76:70: 89:2 note: ...but borrowed value is only valid for the block suffix following statement 0 at 76:69\ntest.rs:76     let q: TempDir = TempDir::new(\"temp_git_clone_dir\").ok().unwrap();\ntest.rs:77     //let path: &amp;str = dir.path().to_str().unwrap();\ntest.rs:78 \ntest.rs:79     let status = Command::new(\"git\").arg(\"clone\").arg(\"\")\ntest.rs:80         .arg(&amp;repo_info.repo_url).status().unwrap_or_else(|e| {\ntest.rs:81             panic!(\"Failed to run git clone: {}\", e)\n</code></pre>\n\n<p>What's the problem with this function?</p>\n"}, {"tags": ["generics", "sum", "rust"], "answers": [{"comments": [{"owner": {"reputation": 1052, "user_id": 3210331, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/29e0fd1dca7008722b001a73cbd135b6?s=128&d=identicon&r=PG&f=1", "display_name": "Mateo", "link": "https://stackoverflow.com/users/3210331/mateo"}, "edited": false, "score": 0, "creation_date": 1428267325, "post_id": 29459944, "comment_id": 47087920, "body": "Thanks for that. That was very helpful. I extended my question to Iterators and not just vectors... Your feedback on that would be much appreciated."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 7, "last_activity_date": 1551272760, "last_edit_date": 1551272760, "creation_date": 1428253959, "answer_id": 29459944, "question_id": 29459738, "link": "https://stackoverflow.com/questions/29459738/how-to-define-sum-over-vectors-or-iterators-in-a-generic-way/29459944#29459944", "title": "How to define sum over vectors (or iterators) in a generic way?", "body": "<p>You almost got it. Associated types must be given by name/keyword, so you're looking for <code>Add&lt;T, Output = T&gt;</code>.</p>\n\n<p>With that change, you face the problem that you liberally copy numbers around, but there is no <code>Copy</code> bound. I'd suggest the following implementation:</p>\n\n<pre><code>fn sum_vec&lt;T&gt;(s: &amp;[T], init: &amp;T) -&gt; T\nwhere\n    T: Copy + Add&lt;T, Output = T&gt;,\n{\n    s.iter().fold(*init, |acc, &amp;item| acc + item)\n}\n</code></pre>\n\n<p>Changing <code>&amp;Vec&lt;T&gt;</code> to <code>&amp;[T]</code> has no effect, but it makes the function more general and loses nothing.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 1, "last_activity_date": 1551272598, "creation_date": 1551272598, "answer_id": 54906171, "question_id": 29459738, "link": "https://stackoverflow.com/questions/29459738/how-to-define-sum-over-vectors-or-iterators-in-a-generic-way/54906171#54906171", "title": "How to define sum over vectors (or iterators) in a generic way?", "body": "\n\n<p>After seeing the answer for vectors, I went on to implement essentially the same function for a general iterator of <code>T</code>: </p>\n\n<pre><code>use std::ops::Add;\n\nfn sum_iter&lt;I&gt;(s: I, init: &amp;I::Item) -&gt; I::Item\nwhere\n    I: Iterator + Clone,\n    &lt;I as Iterator&gt;::Item: Add&lt;I::Item, Output = I::Item&gt; + Copy,\n{\n    s.clone().fold(*init, |acc, item| acc + item)\n}\n</code></pre>\n\n<p>It seems a bit verbose to have to type <code>I::Item</code> or <code>&lt;I as Iterator&gt;::Item</code> in three places... I've asked about that in <a href=\"https://stackoverflow.com/questions/29462526/simplify-where-clause-with-repeated-associated-type-restrictions\">Simplify where clause with repeated associated type restrictions</a></p>\n"}], "owner": {"reputation": 1052, "user_id": 3210331, "user_type": "registered", "accept_rate": 15, "profile_image": "https://www.gravatar.com/avatar/29e0fd1dca7008722b001a73cbd135b6?s=128&d=identicon&r=PG&f=1", "display_name": "Mateo", "link": "https://stackoverflow.com/users/3210331/mateo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1283, "favorite_count": 2, "accepted_answer_id": 29459944, "answer_count": 2, "score": 5, "last_activity_date": 1551273044, "creation_date": 1428252888, "last_edit_date": 1551273044, "question_id": 29459738, "link": "https://stackoverflow.com/questions/29459738/how-to-define-sum-over-vectors-or-iterators-in-a-generic-way", "title": "How to define sum over vectors (or iterators) in a generic way?", "body": "<p>I have the following following <code>sum</code> function for vectors of <code>i32</code> that compiles and works fine:</p>\n\n<pre><code>fn sum_vec(s: &amp;Vec&lt;i64&gt;, init: &amp;i64) -&gt; i64 {\n    (*s).iter().fold(*init, |acc, &amp;item| acc + item)\n}\n</code></pre>\n\n<p>To teach myself about Rust generics, I would like to define the corresponding generic function, for any type <code>T</code> that implements addition  of the form  <code>add(T, T) -&gt; T</code>. I tried </p>\n\n<pre><code>use std::ops::Add;\n\nfn sum_gen_1&lt;T: Add&gt;(s: &amp;Vec&lt;T&gt;, init: &amp;T) -&gt; T {\n    (*s).iter().fold(*init, |acc, &amp;item| acc + item)\n}\n</code></pre>\n\n<p>But I get the following error </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/lib.rs:4:42\n  |\n4 |     (*s).iter().fold(*init, |acc, &amp;item| acc + item)\n  |                                          ^^^^^^^^^^ expected type parameter, found associated type\n  |\n  = note: expected type `T`\n             found type `&lt;T as std::ops::Add&gt;::Output`\n</code></pre>\n\n<p>It seems that one has to further constrain the implementation of the\n<code>Add</code> trait so that the type <code>Add::Output</code> equals <code>T</code>. Following some documentation found on the interwebz (probably for an old version of Rust), I tried changing the type constraint as to <code>T: Add&lt;T, T&gt;</code>, i.e. declare the generic function as:</p>\n\n<pre><code>fn sum_gen_1&lt;T: Add&lt;T, T&gt;&gt;(s: &amp;Vec&lt;T&gt;, init: &amp;T) -&gt; T\n</code></pre>\n\n<p>with the same function body as before. This time I got the error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0107]: wrong number of type arguments: expected at most 1, found 2\n --&gt; src/lib.rs:3:17\n  |\n3 | fn sum_gen_1&lt;T: Add&lt;T, T&gt;&gt;(s: &amp;Vec&lt;T&gt;, init: &amp;T) -&gt; T {\n  |                 ^^^^^^^^^ expected at most 1 type argument\n</code></pre>\n\n<p>What is the proper way to accomplish this? Should I use a different trait instead of <code>Add</code>? Maybe define my own trait and implement it for the types I want my <code>sum</code> to work for? </p>\n\n<p>I noticed that the is a trait <a href=\"https://doc.rust-lang.org/1.0.0-beta/std/iter/trait.AdditiveIterator.html\" rel=\"nofollow noreferrer\"><code>std::iter::AdditiveIterator</code></a>  which would seem to make my implementation unnecessary. However, it is marked as unstable and any attempt to use it would cause a compile error when using rustc-1.0.0-beta.</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1428266040, "creation_date": 1428266040, "answer_id": 29461927, "question_id": 29458970, "link": "https://stackoverflow.com/questions/29458970/how-do-i-prefix-command-stdout-with-stdout-and-sterr/29461927#29461927", "title": "How do I prefix Command stdout with [stdout] and [sterr]?", "body": "<p>I don't believe you can do what you truly want to do right now. Ideally, you'd be able to provide an implementor of <code>Write</code> to the <code>Process::stdout</code>  method. Unfortunately, the <a href=\"https://doc.rust-lang.org/std/process/struct.Stdio.html#method.piped\" rel=\"nofollow\">set of choices for <code>Stdio</code></a> is sparse. Perhaps you can campaign to have this be a feature request for Rust 1.1, or create a crate to start fleshing out some of the details (like cross-platform compatibility)</p>\n\n<p>If it is acceptable to remove the interleaving of stdout / stderr, then this solution could help:</p>\n\n<pre><code>use std::io::{BufRead,BufReader};\nuse std::process::{Command,Stdio};\n\nfn main() {\n    let mut child =\n        Command::new(\"/tmp/output\")\n        .stdout(Stdio::piped())\n        .stderr(Stdio::piped())\n        .spawn().unwrap();\n\n    if let Some(ref mut stdout) = child.stdout {\n        for line in BufReader::new(stdout).lines() {\n            let line = line.unwrap();\n            println!(\"[stdout] {}\", line);\n        }\n    }\n\n    if let Some(ref mut stderr) = child.stderr {\n        for line in BufReader::new(stderr).lines() {\n            let line = line.unwrap();\n            println!(\"[stderr] {}\", line);\n        }\n    }\n\n    let status = child.wait().unwrap();\n    println!(\"Finished with status {:?}\", status);\n}\n</code></pre>\n"}], "owner": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1235, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1428266040, "creation_date": 1428248202, "last_edit_date": 1428249136, "question_id": 29458970, "link": "https://stackoverflow.com/questions/29458970/how-do-i-prefix-command-stdout-with-stdout-and-sterr", "title": "How do I prefix Command stdout with [stdout] and [sterr]?", "body": "<p>Using the <a href=\"https://doc.rust-lang.org/std/process/struct.Command.html\" rel=\"nofollow\">Command struct</a>, how can I add a prefix to the stdout and stderr buffers?</p>\n\n<p>I would like the output to look something like this:</p>\n\n<pre><code>[stdout] things are good.\n[sterr] fatal: repository does not exist.\n</code></pre>\n\n<p>This would also be nice to apply to the program's main stdout so anything the program prints is prefixed like that.</p>\n\n<p>Here is the code I currently have:</p>\n\n<pre><code>let output = Command::new(\"git\").arg(\"clone\").output().unwrap_or_else(|e| {\n    panic!(\"Failed to run git clone: {}\", e)\n});\n</code></pre>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 24, "last_activity_date": 1568134660, "last_edit_date": 1568134660, "creation_date": 1428248993, "answer_id": 29459104, "question_id": 29458935, "link": "https://stackoverflow.com/questions/29458935/how-can-i-add-strings-and-print-them/29459104#29459104", "title": "How can I add strings and print them?", "body": "<p>Don't try to learn Rust without first reading the free book <a href=\"https://doc.rust-lang.org/book/\" rel=\"noreferrer\"><em>The Rust Programming Language</em></a> and writing code alongside.</p>\n\n<p>For example, you are trying to use <code>str</code>, which is an unsized type. You are also trying to pass a variable to <code>println!</code>, which requires a format string. These things are covered early in the documentation <em>because they trip so many people up</em>. Please make use of the hard work the Rust community has done to document these things!</p>\n\n<p>All that said, here's your code working:</p>\n\n<pre><code>fn say_hello(id: &amp;str, msg: &amp;str) {\n    println!(\"{}{}\", id, msg);\n}\n\nfn main() {\n    say_hello(\"[info]\", \"this is Rust!\");\n}\n</code></pre>\n\n<p>I also changed to use <code>snake_case</code> (the Rust style).</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/27734708/155423\">println! error: expected a literal / format argument must be a string literal</a></li>\n<li><a href=\"https://stackoverflow.com/q/30154541/155423\">How do I concatenate strings?</a></li>\n</ul>\n"}], "owner": {"reputation": 91, "user_id": 4751904, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d4ba354f78cd8be4bc1152a568fd1b68?s=128&d=identicon&r=PG&f=1", "display_name": "Jan", "link": "https://stackoverflow.com/users/4751904/jan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10293, "favorite_count": 2, "accepted_answer_id": 29459104, "answer_count": 1, "score": 7, "last_activity_date": 1568134660, "creation_date": 1428247995, "last_edit_date": 1495748487, "question_id": 29458935, "link": "https://stackoverflow.com/questions/29458935/how-can-i-add-strings-and-print-them", "title": "How can I add strings and print them?", "body": "<p>I am currently learning Rust (mostly from scratch) and now I want to add two strings together and print them out. But that is not as easy as in other languages. Here's what I've done so far (also tested with <code>print!</code>):</p>\n\n<pre><code>fn sayHello(id: str, msg: str) {\n    println!(id + msg);\n}\n\nfn main() {\n    sayHello(\"[info]\", \"this is rust!\");\n}\n</code></pre>\n\n<p>The error I get is a little bit weird.</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: expected a literal\n --&gt; src/main.rs:2:14\n  |\n2 |     println!(id + msg);\n  |              ^^^^^^^^\n</code></pre>\n\n<p>How can I solve this so that <strong>[info] this is rust</strong> will be printed out?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1428242136, "post_id": 29457617, "comment_id": 47080191, "body": "I filed an <a href=\"https://github.com/rust-lang/rust/issues/23685\" rel=\"nofollow noreferrer\">issue a while back</a> about the poor error message with a non-string as the first argument to <code>panic!</code>."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 0, "creation_date": 1428240206, "post_id": 29457726, "comment_id": 47079694, "body": "Yeah, the error message is awful. I only figured it out quickly because I vaguely recalled that panic messages need to be <code>Send</code> and <code>&amp;str</code> isn&#39;t <code>Send</code>. Technically it has all the information, but it&#39;s buried in scary and verbose fluff. Maybe file a issue on Github."}], "tags": [], "owner": {"reputation": 217, "user_id": 566839, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e448bf15b9e2b5b22deba95a5b5e36c2?s=128&d=identicon&r=PG", "display_name": "peanutman", "link": "https://stackoverflow.com/users/566839/peanutman"}, "is_accepted": false, "score": 2, "last_activity_date": 1428240012, "creation_date": 1428240012, "answer_id": 29457726, "question_id": 29457617, "link": "https://stackoverflow.com/questions/29457617/rust-options-implementing-a-custom-expect-method/29457726#29457726", "title": "Rust options, implementing a custom &quot;expect&quot; method", "body": "<p>Oh, I searched for hours before posting and of course I found the issue 5min after posting: </p>\n\n<p><code>panic!(err)</code> has to be <code>panic!(\"{}\", err)</code></p>\n\n<p>Maybe it's because I'm so new, but that error msg was very confusing...</p>\n"}, {"tags": [], "owner": {"reputation": 9296, "user_id": 1446742, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ff5e3600cba841c184385605d1d99d03?s=128&d=identicon&r=PG", "display_name": "fjh", "link": "https://stackoverflow.com/users/1446742/fjh"}, "is_accepted": true, "score": 3, "last_activity_date": 1428240449, "last_edit_date": 1428240449, "creation_date": 1428240145, "answer_id": 29457752, "question_id": 29457617, "link": "https://stackoverflow.com/questions/29457617/rust-options-implementing-a-custom-expect-method/29457752#29457752", "title": "Rust options, implementing a custom &quot;expect&quot; method", "body": "<p>There are several ways to fix your function: The first is to add a <code>'static</code> lifetime annotation on <code>err</code>:</p>\n\n<pre><code>fn checkOption&lt;T&gt;(obj: Option&lt;T&gt;, err: &amp;'static str) -&gt; T {\n    match obj {\n        Some(o) =&gt; return o,\n        None =&gt; panic!(err)\n    }\n}\n</code></pre>\n\n<p>However, this means you can only use values of type <code>&amp;'static str</code> (i.e. string constants, effectively) for <code>err</code>.</p>\n\n<p>The second way is to do what <code>expect</code> does and call <code>panic!(\"{}\", err)</code> instead of <code>panic!(err)</code>: </p>\n\n<pre><code>fn checkOption&lt;T&gt;(obj: Option&lt;T&gt;, err: &amp;str) -&gt; T {\n    match obj {\n        Some(o) =&gt; return o,\n        None =&gt; panic!(\"{}\", err)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2923, "user_id": 783912, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/98e9b626cf9e9e74ae50c190da325a5e?s=128&d=identicon&r=PG&f=1", "display_name": "FlyingFoX", "link": "https://stackoverflow.com/users/783912/flyingfox"}, "is_accepted": false, "score": 1, "last_activity_date": 1428240249, "creation_date": 1428240249, "answer_id": 29457761, "question_id": 29457617, "link": "https://stackoverflow.com/questions/29457617/rust-options-implementing-a-custom-expect-method/29457761#29457761", "title": "Rust options, implementing a custom &quot;expect&quot; method", "body": "<p>It seems like <code>panic!</code> needs the string supplied to it to have static lifetime.</p>\n\n<p>Changing your signature to <code>fn checkOption&lt;T&gt;(obj: Option&lt;T&gt;, err: &amp;'static str) -&gt; T</code> compiles and does what you want.</p>\n"}], "owner": {"reputation": 217, "user_id": 566839, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e448bf15b9e2b5b22deba95a5b5e36c2?s=128&d=identicon&r=PG", "display_name": "peanutman", "link": "https://stackoverflow.com/users/566839/peanutman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 327, "favorite_count": 0, "accepted_answer_id": 29457752, "answer_count": 3, "score": 3, "last_activity_date": 1428240449, "creation_date": 1428239291, "last_edit_date": 1428239617, "question_id": 29457617, "link": "https://stackoverflow.com/questions/29457617/rust-options-implementing-a-custom-expect-method", "title": "Rust options, implementing a custom &quot;expect&quot; method", "body": "<p>I'm very new to Rust, so I must warn you, I'm not 100% sure what I'm doing. In a rust-sfml example (irrelevant to question) I saw this Options pattern which is apparently a common one:</p>\n\n<pre><code>let ballSoundBuffer = match SoundBuffer::new(\"resources/ball.wav\") {\n    Some(ballSoundBuffer)   =&gt; ballSoundBuffer,\n    None                    =&gt; panic!(\"Cannot load Ball sound buffer.\")\n};\n</code></pre>\n\n<p>Later I learned about the <code>expect()</code> function so the above can be replaced with:</p>\n\n<pre><code> let ballSoundBuffer = SoundBuffer::new(\"resources/ball.wav\").expect(\"Cannot load Ball sound buffer.\")\n</code></pre>\n\n<p>For the sake of exercise I wanted to implement something like the expect method myself, as a standalone method, and came up with something like this:</p>\n\n<pre><code>fn checkOption&lt;T&gt;(obj: Option&lt;T&gt;, err: &amp;str) -&gt; T {\n    match obj {\n        Some(o) =&gt; return o,\n        None =&gt; panic!(err)\n    }\n}\n</code></pre>\n\n<p>The goal was to do something like:</p>\n\n<pre><code>let tmp = SoundBuffer::new(\"resources/ball.wav\");\nlet ballSoundBuffer = checkOption(tmp, \"Cannot load Ball sound buffer.\");\n</code></pre>\n\n<p>I'm using generics because I also want the method to work with other resources than SoundBuffer (but they also use the same Options pattern when loading them). However, this doesn't work at all:</p>\n\n<pre><code>src/main.rs:20:24: 20:27 error: cannot infer an appropriate lifetime due to conflicting requirements\nsrc/main.rs:20         None =&gt; panic!(err)\n                                  ^~~\n&lt;std macros&gt;:1:1: 12:62 note: in expansion of panic!\nsrc/main.rs:20:17: 21:6 note: expansion site\nsrc/main.rs:17:51: 22:2 note: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the block at 17:50...\nsrc/main.rs:17 fn checkOption&lt;T&gt;(obj: Option&lt;T&gt;, err: &amp;str) -&gt; T {\nsrc/main.rs:18     match obj {\nsrc/main.rs:19         Some(o) =&gt; return o,\nsrc/main.rs:20         None =&gt; panic!(err)\nsrc/main.rs:21     }\nsrc/main.rs:22 }\nsrc/main.rs:20:24: 20:27 note: ...so that expression is assignable (expected `&amp;str`, found `&amp;str`)\nsrc/main.rs:20         None =&gt; panic!(err)\n                                  ^~~\n&lt;std macros&gt;:1:1: 12:62 note: in expansion of panic!\nsrc/main.rs:20:17: 21:6 note: expansion site\nnote: but, the lifetime must be valid for the static lifetime...\n&lt;std macros&gt;:3:1: 3:28 note: ...so that the type `&amp;str` will meet its required     lifetime bounds\n&lt;std macros&gt;:3 $ crate:: rt:: begin_unwind (\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n&lt;std macros&gt;:1:1: 12:62 note: in expansion of panic!\nsrc/main.rs:20:17: 21:6 note: expansion site\nerror: aborting due to previous error\n</code></pre>\n\n<p>I have no idea what to do with this :( I was hoping someone more knowledgeable could point out my mistake.</p>\n\n<p>Thanks for your time!</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 38, "last_activity_date": 1561709997, "last_edit_date": 1561709997, "creation_date": 1428161519, "answer_id": 29448173, "question_id": 29447920, "link": "https://stackoverflow.com/questions/29447920/what-is-the-rust-type-keyword/29448173#29448173", "title": "What is the Rust type keyword?", "body": "<p>A simple <code>type Foo = Bar;</code> outside of an <code>impl</code> defines a <em>type alias</em>, and is <a href=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html#creating-type-synonyms-with-type-aliases\" rel=\"noreferrer\">documented in The Book</a>. There's a generic version <code>type Foo&lt;T&gt; = ...</code> but if you understand generics in general then this is an obvious extension.</p>\n\n<p><code>type</code> in an <code>impl</code> defines an <em>associated type</em>. They are <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#specifying-placeholder-types-in-trait-definitions-with-associated-types\" rel=\"noreferrer\">documented in The Book</a>, but I've already written a short summary, so you get that too:</p>\n\n<p>When you have a trait like <code>Add</code>, you want to abstract not only over what types of things can be added, but also over the type of their sum. Adding integers results in integers, adding floats results in floats. But you don't want the result type to be a parameter of <code>Add</code> as in <code>Add&lt;ThingToAdd, ResultType&gt;</code>, for reasons that I'll skim over here.</p>\n\n<p>Therefore, the trait comes with a type that's associated with the <code>impl</code>. Given any implementation of <code>Add</code>, e.g., <code>impl Add&lt;Foo&gt; for Bar</code>, the type of the addition result is already determined. This is declared in the trait like this:</p>\n\n<pre><code>trait Add&lt;Rhs&gt; {\n    type Result;\n    // ...\n}\n</code></pre>\n\n<p>And then all implementations define what the type of their result is:</p>\n\n<pre><code>impl Add&lt;Foo&gt; for Bar {\n    type Result = BarPlusFoo;\n    // ...\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 18897, "user_id": 8059459, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9f0fc0fd607fc44a4597cacb7f034ba6?s=128&d=identicon&r=PG&f=1", "display_name": "Willem van der Veen", "link": "https://stackoverflow.com/users/8059459/willem-van-der-veen"}, "is_accepted": false, "score": 0, "last_activity_date": 1608823321, "last_edit_date": 1608823321, "creation_date": 1608823007, "answer_id": 65440158, "question_id": 29447920, "link": "https://stackoverflow.com/questions/29447920/what-is-the-rust-type-keyword/65440158#65440158", "title": "What is the Rust type keyword?", "body": "<h2>Rust <code>type</code> keyword</h2>\n<p>The type keyword in rust has a different meaning in the 2 places it can be used:</p>\n<ol>\n<li><strong>Type alias</strong>: Just another name for the same type.</li>\n<li><strong>Associated types</strong>: this occurs within traits and trait impl blocks. Associated types are used to define a trait that uses some type(s) without needing to know exactly what those types are until the trait is implemented.</li>\n</ol>\n<p>Associated types are different from generics because (Following <a href=\"https://doc.rust-lang.org/book/ch19-03-advanced-traits.html#specifying-placeholder-types-in-trait-definitions-with-associated-types\" rel=\"nofollow noreferrer\">copied from docs</a>):</p>\n<ul>\n<li>When a trait has a generic parameter, it can be implemented for a type multiple times, changing the concrete types of the generic type parameters each time.</li>\n<li>With associated types, we don\u2019t need to annotate types because we can\u2019t implement a trait on a type multiple times</li>\n</ul>\n<h2>Example:</h2>\n<pre><code>fn main() {\n    // Type alias, Nr is an alias for u32\n    type Nr = u32;\n    let number: Nr = 34;\n\n    let test = Test { nr: 9 };\n    println!(&quot; {} &quot;, test.add_one()); // prints 10\n}\n\nstruct Test {\n    nr: i32,\n}\n\npub trait Hi {\n    // Associated type\n    type Item;\n\n    fn add_one(&amp;self) -&gt; Self::Item;\n}\n\nimpl Hi for Test {\n    // Associated type Item will be type i64\n    type Item = i64;\n\n    fn add_one(&amp;self) -&gt; Self::Item {\n        (self.nr + 1) as i64\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1154, "user_id": 1905235, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/fe9752a7c40b4b3c430fbf79ad74f5e2?s=128&d=identicon&r=PG", "display_name": "hunterboerner", "link": "https://stackoverflow.com/users/1905235/hunterboerner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9759, "favorite_count": 5, "accepted_answer_id": 29448173, "answer_count": 2, "score": 33, "last_activity_date": 1608823321, "creation_date": 1428159954, "last_edit_date": 1518206486, "question_id": 29447920, "link": "https://stackoverflow.com/questions/29447920/what-is-the-rust-type-keyword", "title": "What is the Rust type keyword?", "body": "<p>I have seen the keyword <code>type</code> used in some Rust examples, but I never have seen an explanation of it. A few examples of how I've seen it used:</p>\n\n<pre><code>impl Add&lt;Foo&gt; for Bar {\n    type Output = BarFoo;\n    // omitted\n}\n</code></pre>\n\n<p>and this, <a href=\"https://doc.rust-lang.org/reference/paths.html\" rel=\"noreferrer\">taken from the reference</a>:</p>\n\n<pre><code>type T = HashMap&lt;i32,String&gt;; // Type arguments used in a type expression\nlet  x = id::&lt;i32&gt;(10);       // Type arguments used in a call expression\n</code></pre>\n\n<p>Could somebody please explain what this keyword does? I can't find it in Rust by Example or the Rust book.</p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 6, "creation_date": 1564135099, "post_id": 29445026, "comment_id": 100939637, "body": "Please, can you mark the Nicholas Rishel&#39;s answer as accepted? That&#39;s the canonical answer now, and the oldest ones with <code>transmute</code> examples can be misleading."}], "answers": [{"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 2, "creation_date": 1428189809, "post_id": 29445654, "comment_id": 47070559, "body": "Using <code>std::slice::from_raw_parts</code> is less code and also marked stable. Still unsafe for the same reasons, though!"}, {"owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "edited": false, "score": 4, "creation_date": 1428393216, "post_id": 29445654, "comment_id": 47132480, "body": "<code>byteorder</code> solves it exactly. When I said &quot;built in&quot; I should have specified that something from crates.io would suffice."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 30, "last_activity_date": 1527431499, "last_edit_date": 1527431499, "creation_date": 1428145642, "answer_id": 29445654, "question_id": 29445026, "link": "https://stackoverflow.com/questions/29445026/converting-number-primitives-i32-f64-etc-to-byte-representations/29445654#29445654", "title": "Converting number primitives (i32, f64, etc) to byte representations", "body": "<p>Unfortunately, there is no safe built-in support for reading/writing primitives from/to a byte array in Rust at the moment. There are several community libraries for that, however, <a href=\"https://crates.io/crates/byteorder\" rel=\"noreferrer\">byteorder</a> being the most used one:</p>\n\n<pre><code>extern crate byteorder;\n\nuse byteorder::{LittleEndian, WriteBytesExt};\nuse std::mem;\n\nfn main() {\n    let i: i64 = 12345;\n    let mut bs = [0u8; mem::size_of::&lt;i64&gt;()];\n    bs.as_mut()\n        .write_i64::&lt;LittleEndian&gt;(i)\n        .expect(\"Unable to write\");\n\n    for i in &amp;bs {\n        println!(\"{:X}\", i);\n    }\n}\n</code></pre>\n\n<p>Of course, you can always cast raw pointers. For example, you can turn <code>*const i64</code> into <code>*const i8</code> and then convert it into an appropriate byte slice <code>&amp;[u8]</code>. However, this is easy to get wrong, <code>unsafe</code> and platform-dependent due to endiannness, so it should be used only as a last resort:</p>\n\n<pre><code>use std::{mem, slice};\n\nfn main() {\n    let i: i64 = 12345;\n    let ip: *const i64 = &amp;i;\n    let bp: *const u8 = ip as *const _;\n    let bs: &amp;[u8] = unsafe { slice::from_raw_parts(bp, mem::size_of::&lt;i64&gt;()) };\n\n    for i in bs {\n        println!(\"{:X}\", i);\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 5760, "user_id": 1863564, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/XU4XS.png?s=128&g=1", "display_name": "Fund Monica&#39;s Lawsuit", "link": "https://stackoverflow.com/users/1863564/fund-monicas-lawsuit"}, "edited": false, "score": 2, "creation_date": 1562442101, "post_id": 29482767, "comment_id": 100376920, "body": "Ensuring the correct size can be done by using <code>std::mem::size_of::&lt;i64&gt;()</code> instead of <code>8</code> in the array"}, {"owner": {"reputation": 9345, "user_id": 1021920, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/VukgG.jpg?s=128&g=1", "display_name": "hellow", "link": "https://stackoverflow.com/users/1021920/hellow"}, "edited": false, "score": 0, "creation_date": 1564135276, "post_id": 29482767, "comment_id": 100939741, "body": "Few things: raw_bytes should be <code>[u8; 8]</code> (or <code>mem::size_of</code> as suggested) and if the sizes do not match, <code>transmute</code> won&#39;t work: <i>&quot;cannot transmute between types of different sizes, or dependently-sized types&quot;</i> so it is &quot;kind of safe&quot;."}], "tags": [], "owner": {"reputation": 682, "user_id": 4719039, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0901a072c48b7ab95f6552fbf3b5bfb4?s=128&d=identicon&r=PG&f=1", "display_name": "F001", "link": "https://stackoverflow.com/users/4719039/f001"}, "is_accepted": false, "score": 15, "last_activity_date": 1527430998, "last_edit_date": 1527430998, "creation_date": 1428374137, "answer_id": 29482767, "question_id": 29445026, "link": "https://stackoverflow.com/questions/29445026/converting-number-primitives-i32-f64-etc-to-byte-representations/29482767#29482767", "title": "Converting number primitives (i32, f64, etc) to byte representations", "body": "<p><code>std::mem::transmute</code> can be used, although it is <code>unsafe</code>:</p>\n\n<pre><code>fn main() {\n    let var1 = 12345678_i64;\n    let raw_bytes: [i8; 8] = unsafe { std::mem::transmute(var1) };\n    for byte in &amp;raw_bytes {\n        println!(\"{}\", byte);\n    }\n}\n</code></pre>\n\n<p><strong>Note:</strong> Please be sure the size of the two variables are exactly equal.</p>\n"}, {"tags": [], "owner": {"reputation": 2104, "user_id": 5129504, "user_type": "registered", "accept_rate": 89, "profile_image": "https://graph.facebook.com/476994845791992/picture?type=large", "display_name": "Josh Weinstein", "link": "https://stackoverflow.com/users/5129504/josh-weinstein"}, "is_accepted": false, "score": 1, "last_activity_date": 1491265423, "creation_date": 1491265423, "answer_id": 43196378, "question_id": 29445026, "link": "https://stackoverflow.com/questions/29445026/converting-number-primitives-i32-f64-etc-to-byte-representations/43196378#43196378", "title": "Converting number primitives (i32, f64, etc) to byte representations", "body": "<p>If your goal is to print the bytes or have them in a <code>str</code> representation, simply use the <code>:b</code> notation in a format brace</p>\n\n<pre><code>fn main() {\n    println!(\"This is the binary of int {:b}\", 4 as i32);\n}\n</code></pre>\n\n<p>This prints</p>\n\n<p><code>This is the binary of int 100</code></p>\n"}, {"tags": [], "owner": {"reputation": 801, "user_id": 1364755, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/718e0543b3f4792aca11a852c0ac0742?s=128&d=identicon&r=PG", "display_name": "Nicholas Rishel", "link": "https://stackoverflow.com/users/1364755/nicholas-rishel"}, "is_accepted": false, "score": 67, "last_activity_date": 1554758736, "creation_date": 1554758736, "answer_id": 55581990, "question_id": 29445026, "link": "https://stackoverflow.com/questions/29445026/converting-number-primitives-i32-f64-etc-to-byte-representations/55581990#55581990", "title": "Converting number primitives (i32, f64, etc) to byte representations", "body": "<p>As of Rust 1.32 you can use <code>{to,from}_{ne,le,be}_bytes</code> for integral types.</p>\n\n<pre><code>let begin = 1234_i32;\nlet bytes = begin.to_ne_bytes();\nlet and_back = i32::from_ne_bytes(bytes);\n</code></pre>\n\n<p>For floating point you still have to rely on prior methods.</p>\n"}, {"tags": [], "owner": {"reputation": 301, "user_id": 11204008, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7B8HEw6ZQnA/AAAAAAAAAAI/AAAAAAAAAB8/OeENhKAMMrI/photo.jpg?sz=128", "display_name": "Michael Crapse", "link": "https://stackoverflow.com/users/11204008/michael-crapse"}, "is_accepted": false, "score": 30, "last_activity_date": 1577055643, "last_edit_date": 1592644375, "creation_date": 1555630387, "answer_id": 55754905, "question_id": 29445026, "link": "https://stackoverflow.com/questions/29445026/converting-number-primitives-i32-f64-etc-to-byte-representations/55754905#55754905", "title": "Converting number primitives (i32, f64, etc) to byte representations", "body": "<p>Rust 1.40 has: <a href=\"https://doc.rust-lang.org/std/index.html?search=to_ne_bytes\" rel=\"noreferrer\"><code>{to,from}_{ne,le,be}_bytes</code></a>.</p>\n<p>Converting a number to bytes and back (works for floats and integers after rust 1.40):</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let x = 65535_i32;\nlet x_bytes = x.to_be_bytes();                  // x_bytes = [0, 0, 255, 255]\nlet original_x = i32::from_be_bytes(x_bytes);   // original_x = 65535 = x\n</code></pre>\n<h1>Converting float before Rust 1.40</h1>\n<p>Rust 1.32 has: <a href=\"https://doc.rust-lang.org/std/index.html?search=to_ne_bytes\" rel=\"noreferrer\"><code>{to,from}_{ne,le,be}_bytes</code></a> (only for integers), <a href=\"https://doc.rust-lang.org/std/index.html?search=f%3A%3Ato_bits\" rel=\"noreferrer\"><code>to_bits</code></a>, and <a href=\"https://doc.rust-lang.org/std/index.html?search=f%3A%3Afrom_bits\" rel=\"noreferrer\"><code>from_bits</code></a>.</p>\n<p>Converting a float to bytes and back:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>let y = 255.255_f32;\nlet y_bytes = y.to_bits().to_be_bytes();\nlet original_y = f32::from_bits(u32::from_be_bytes(y_bytes)); // original_y = 255.255 = y\n</code></pre>\n<p>According to the Rust documentation <code>from_bits</code> can have <a href=\"https://doc.rust-lang.org/std/primitive.f32.html#method.from_bits\" rel=\"noreferrer\">portability issues</a>.</p>\n"}], "owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 24958, "favorite_count": 5, "accepted_answer_id": 29445654, "answer_count": 5, "score": 41, "last_activity_date": 1577055643, "creation_date": 1428141349, "last_edit_date": 1527676817, "question_id": 29445026, "link": "https://stackoverflow.com/questions/29445026/converting-number-primitives-i32-f64-etc-to-byte-representations", "title": "Converting number primitives (i32, f64, etc) to byte representations", "body": "<p>I am writing a library that encodes/decodes data to/from a binary format. Part of the format is numbers, which I'm using Rust's native primitive types for (like <code>i8</code>, <code>i64</code>, <code>f32</code> etc.).</p>\n\n<p>Is there an easy, built-in way to convert these data types into/from binary, i.e. convert a <code>f64</code>/<code>f32</code>/<code>i64</code>/etc. into a <code>Vec&lt;u8&gt;</code>? Likewise is there a way to convert 4 <code>u8</code>s (in a <code>Vec&lt;u8&gt;</code> say) into an <code>f32</code>?</p>\n"}, {"tags": ["rust", "dynamic-linking", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1428220649, "post_id": 29447872, "comment_id": 47075462, "body": "The interesting thing is (which I don\u2019t understand) that renaming is not enough. I have to copy it because the resulting file is really linked against <code>libfoo-&lt;random-hash&gt;.dylib</code> although I specified <code>libfoo.dylib</code>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1428223537, "post_id": 29447872, "comment_id": 47075945, "body": "@Ferio Huh, weird. <code>mv libfoo-*.dylib libfoo.dylib</code> does not work, but <code>cp</code> does? The only explanation I can muster is <code>cp</code> doing weird things with the files it copies, but that&#39;s absurd."}, {"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1428305855, "post_id": 29447872, "comment_id": 47096827, "body": "I don\u2019t know anything about the internals, but I suppose that the real name which is used for linking the <code>dylib</code> is stored in the <code>dylib</code> itself."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 0, "creation_date": 1428314067, "post_id": 29447872, "comment_id": 47099796, "body": "That I can stomach, what puzzles me is that <code>cp</code> apparently looks inside the file and changes that name."}, {"owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "edited": false, "score": 1, "creation_date": 1428338971, "post_id": 29447872, "comment_id": 47112071, "body": "Ahh I was unclear. <code>cp</code> only \u201eworks\u201c because it preserves the original file."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": false, "score": 2, "last_activity_date": 1428160397, "last_edit_date": 1428160397, "creation_date": 1428159676, "answer_id": 29447872, "question_id": 29444606, "link": "https://stackoverflow.com/questions/29444606/how-do-i-properly-link-to-a-rust-dynamic-library-from-c/29447872#29447872", "title": "How do I properly link to a Rust dynamic library from C?", "body": "<p>The hash serves a purpose: It gives a link error in case of a version mismatch (especially important with cross-crate inlining). It also allows one binaries to link to two versions of a crate (e.g., because your application uses two libraries that internally use different versions). But in the C world, nobody cares about that. If you don't care either, or care more about making it easy to link to your library, just rename the shared object to get rid of the hash. </p>\n\n<p>Note that the hash is added by Cargo. If you build by directly invoking <code>rustc</code>, no hash is added &mdash; but nobody wants that. AFAIK Cargo doesn't offer an option to omit the hash, but you might want to try asking the developers or filing an issue.</p>\n\n<p>Alternatively, you could extract the full library name (including hash) from the file name, and instruct clang to link to that. Then you get the above advantages, but it makes the build process of everyone who wants to link to your library more complicated.</p>\n"}, {"tags": [], "owner": {"reputation": 276, "user_id": 7321177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c3c200e5176ea296fb4db5de06d8564?s=128&d=identicon&r=PG", "display_name": "phg", "link": "https://stackoverflow.com/users/7321177/phg"}, "is_accepted": false, "score": 1, "last_activity_date": 1571148214, "last_edit_date": 1571148214, "creation_date": 1571133104, "answer_id": 58391883, "question_id": 29444606, "link": "https://stackoverflow.com/questions/29444606/how-do-i-properly-link-to-a-rust-dynamic-library-from-c/58391883#58391883", "title": "How do I properly link to a Rust dynamic library from C?", "body": "<p>Since Rust 1.11, Cargo supports the\n<a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/platform-and-target-support/cdylib-crates-for-c-interoperability.html\" rel=\"nofollow noreferrer\"><code>cdylib</code></a>\nartifact type for this exact purpose:</p>\n\n<pre><code>[lib]\nname            = \"foo\"\ncrate-type      = [\"rlib\", \"cdylib\"]\n</code></pre>\n\n<p>This definition yields a <code>./target/{release,debug}/libfoo.so</code> with\nall the Rust dependencies statically linked in so it can be linked into C\nprojects right away.</p>\n"}], "owner": {"reputation": 471, "user_id": 1204992, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/7ea79d59662f7180c29da5a1be5a9284?s=128&d=identicon&r=PG", "display_name": "Ferio", "link": "https://stackoverflow.com/users/1204992/ferio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1420, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1571148214, "creation_date": 1428138426, "last_edit_date": 1571148183, "question_id": 29444606, "link": "https://stackoverflow.com/questions/29444606/how-do-i-properly-link-to-a-rust-dynamic-library-from-c", "title": "How do I properly link to a Rust dynamic library from C?", "body": "<p>I have a Cargo project named <code>foo</code> that produces a <code>libfoo-&lt;random-hash&gt;.dylib</code>. How do I link against it? <code>clang</code> only finds it if I rename it to <code>libfoo.dylib</code> but <code>libfoo-&lt;random-hash&gt;.dylib</code> is needed for running the program. My workaround is to manually copy and rename the lib but this can\u2019t be the proper procedure.</p>\n\n<p>My procedure to compile and run the C program is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ cargo build\n$ cp target/debug/libfoo-*.dylib target/debug/libfoo.dylib\n$ clang -lfoo -L target/debug -o bar bar.c\n$ LD_LIBRARY_PATH=target/debug ./bar\n</code></pre>\n"}, {"tags": ["module", "macros", "rust"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 7, "last_activity_date": 1428139362, "last_edit_date": 1428139362, "creation_date": 1428138776, "answer_id": 29444652, "question_id": 29442622, "link": "https://stackoverflow.com/questions/29442622/use-macro-in-different-file/29444652#29444652", "title": "Use macro in different file", "body": "<p>In order for macros from submodules to be visible to \"sibling\" modules they have to be declared in a certain order, that is, the module with macros should be declared the first. It also should have <code>#[macro_use]</code> attribute attached. This should work:</p>\n\n<pre><code>#[macro_use] mod b;\nmod a;\n</code></pre>\n\n<p><code>#[macro_use]</code> attribute makes macros from the module visible to all code \"below\" the module declaration, that's why your original variant could not possibly work.</p>\n"}], "owner": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 602, "favorite_count": 0, "accepted_answer_id": 29444652, "answer_count": 1, "score": 2, "last_activity_date": 1428139362, "creation_date": 1428120626, "question_id": 29442622, "link": "https://stackoverflow.com/questions/29442622/use-macro-in-different-file", "title": "Use macro in different file", "body": "<p>I'm building a library and I have the following structure:</p>\n\n<p>src/lib.rs </p>\n\n<pre><code>mod a;\nmod b;\n</code></pre>\n\n<p>src/b.rs:</p>\n\n<pre><code>macro_rules! x ...\n</code></pre>\n\n<p>src/a.rs:</p>\n\n<pre><code>x!()\n</code></pre>\n\n<p>this doesn't work. I tried to fiddle with <code>#macro_export</code> and <code>#macro_use</code> but without success. What's the correct approach to re-using macros in the same library but in different module and file?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "edited": false, "score": 1, "creation_date": 1428135115, "post_id": 29442647, "comment_id": 47055829, "body": "Indeed <code>fn main() { ;;;;; }</code> does actually compile !"}, {"owner": {"reputation": 627, "user_id": 3987763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5edbe17788bc835fa4f08ac4977e67d1?s=128&d=identicon&r=PG&f=1", "display_name": "basic_bgnr", "link": "https://stackoverflow.com/users/3987763/basic-bgnr"}, "edited": false, "score": 0, "creation_date": 1428155224, "post_id": 29442647, "comment_id": 47060925, "body": "my actual problem is not with the second example but with the first example. Why is that, terminating the enum declaration in the global scope with <code>;</code> produces compiler error ?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "reply_to_user": {"reputation": 627, "user_id": 3987763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5edbe17788bc835fa4f08ac4977e67d1?s=128&d=identicon&r=PG&f=1", "display_name": "basic_bgnr", "link": "https://stackoverflow.com/users/3987763/basic-bgnr"}, "edited": false, "score": 0, "creation_date": 1428287536, "post_id": 29442647, "comment_id": 47092143, "body": "@basic_bgnr: You <i>are not</i> terminating the enum declaration with a <code>;</code>---you are writing an empty statement, and you can&#39;t have statements at module level.  Note that there are some declaration forms that <i>require</i> a semicolon (such as writing a <code>struct</code> or <code>enum</code> with no members), but this isn&#39;t one of them."}, {"owner": {"reputation": 627, "user_id": 3987763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5edbe17788bc835fa4f08ac4977e67d1?s=128&d=identicon&r=PG&f=1", "display_name": "basic_bgnr", "link": "https://stackoverflow.com/users/3987763/basic-bgnr"}, "edited": false, "score": 0, "creation_date": 1429361389, "post_id": 29442647, "comment_id": 47569568, "body": "@DK. but can&#39;t we use <code>use, static</code> etc. statement at module level. why can&#39;t we have empty statement at top level ? what is the logic behind preventing the use of empty  <code>;</code> at module level ?"}, {"owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "edited": false, "score": 0, "creation_date": 1429424470, "post_id": 29442647, "comment_id": 47586921, "body": "Because those <i>are not statements</i>.  They&#39;re <i>items</i>, and there is no &quot;empty item&quot; item.  The logic is simply that the grammar is constructed such that you cannot have a lone <code>;</code> at module level."}], "tags": [], "owner": {"reputation": 44438, "user_id": 42353, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f05e802879a805c03a55645dfcc0d4ea?s=128&d=identicon&r=PG", "display_name": "DK.", "link": "https://stackoverflow.com/users/42353/dk"}, "is_accepted": true, "score": 5, "last_activity_date": 1428120958, "creation_date": 1428120958, "answer_id": 29442647, "question_id": 29442289, "link": "https://stackoverflow.com/questions/29442289/why-does-an-enum-declared-in-the-global-scope-explicitly-require-no-terminating/29442647#29442647", "title": "Why does an enum declared in the global scope explicitly require no terminating semicolon?", "body": "<p>There is no inconsistency.  What you've written in the function is an <code>enum</code> item, <em>an empty statement</em>, and a statement containing an expression macro invocation.</p>\n"}], "owner": {"reputation": 627, "user_id": 3987763, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5edbe17788bc835fa4f08ac4977e67d1?s=128&d=identicon&r=PG&f=1", "display_name": "basic_bgnr", "link": "https://stackoverflow.com/users/3987763/basic-bgnr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "accepted_answer_id": 29442647, "answer_count": 1, "score": 2, "last_activity_date": 1428241676, "creation_date": 1428116855, "last_edit_date": 1428241676, "question_id": 29442289, "link": "https://stackoverflow.com/questions/29442289/why-does-an-enum-declared-in-the-global-scope-explicitly-require-no-terminating", "title": "Why does an enum declared in the global scope explicitly require no terminating semicolon?", "body": "<p>If we explicitly add <code>;</code> at the end of an enum declaration in the global scope, the compiler will complain.</p>\n\n<pre><code>#[derive(Debug)]\nenum Organs{\n    Head,\n    Tail,\n};\n\nfn main(){\n    println!(\"{:?}\", Organs::Head);\n}\n</code></pre>\n\n<p>The resulting error message is </p>\n\n<pre><code>enums.rs:5:2: 5:3 error: expected item, found `;`\nenums.rs:5 };\n</code></pre>\n\n<p>However, when declared within a function, the statement terminators are not mandatory, the program will compile with or without <code>;</code>.</p>\n\n<pre><code>fn main(){\n    #[derive(Debug)]\n    enum Organs{\n        Head,\n        Tail,\n    };\n    println!(\"{:?}\", Organs::Head);\n}\n</code></pre>\n\n<p>I wasted good chunk of time (just now) determining what the compiler was complaining about. It didn't occur to me that enum declaration (in the global scope) can't be terminated with <code>;</code>. Why is this inconsistency present (or am I misunderstanding anything) ? </p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 12441, "user_id": 645132, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/3ce3855f059c1eea934e5316d5c22181?s=128&d=identicon&r=PG", "display_name": "agmcleod", "link": "https://stackoverflow.com/users/645132/agmcleod"}, "edited": false, "score": 4, "creation_date": 1449425342, "post_id": 29437510, "comment_id": 55990354, "body": "Note that i needed to add Clone to the derive for it to work. <code>#[derive(Copy,Clone)]</code>"}], "tags": [], "owner": {"reputation": 32558, "user_id": 101090, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/066290971688c0a44cc4159a9f210dcf?s=128&d=identicon&r=PG", "display_name": "Jorge Israel Pe&#241;a", "link": "https://stackoverflow.com/users/101090/jorge-israel-pe%c3%b1a"}, "is_accepted": true, "score": 9, "last_activity_date": 1428241845, "last_edit_date": 1428241845, "creation_date": 1428084722, "answer_id": 29437510, "question_id": 29436900, "link": "https://stackoverflow.com/questions/29436900/how-do-i-use-an-enum-as-array-element/29437510#29437510", "title": "How do I use an enum as array element?", "body": "<p>The array initialization syntax <code>[T; N]</code> requires that <code>T</code> implements <code>Copy</code>, so that it can copy the provided value into each position in the array.</p>\n\n<p>This works:</p>\n\n<pre><code>mod board {\n    #[derive(Copy)]\n    enum Square {\n        Empty,\n        Black,\n        White\n    }\n\n    fn init () -&gt; [Square;9] {\n        [Square::Empty; 9]\n    }\n}\n\nfn main() {}\n</code></pre>\n"}], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2622, "favorite_count": 1, "accepted_answer_id": 29437510, "answer_count": 1, "score": 1, "last_activity_date": 1428241845, "creation_date": 1428081920, "last_edit_date": 1428241813, "question_id": 29436900, "link": "https://stackoverflow.com/questions/29436900/how-do-i-use-an-enum-as-array-element", "title": "How do I use an enum as array element?", "body": "<p>I was a bit surprised that this code would not compile. Being new to Rust, it is possible I did some silly error of course...</p>\n\n<pre><code>mod board {\n    enum Square {\n        Empty,\n        Black,\n        White\n    }\n\n    fn init () -&gt; [Square;9] {\n        [Square::Empty; 9]\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>main.rs:10:9: 10:27 error: the trait <code>core::marker::Copy</code> is not implemented for\n   the type <code>board::Square</code> [E0277]\n  main.rs:10         [Square::Empty; 9]</p>\n</blockquote>\n\n<p>Or is it a language non-feature that enums are not allowed as array element type?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 3, "last_activity_date": 1428080080, "creation_date": 1428080080, "answer_id": 29436414, "question_id": 29435792, "link": "https://stackoverflow.com/questions/29435792/trouble-with-fromstr-fromerr-to-parse-a-string/29436414#29436414", "title": "Trouble with FromStr &amp; FromErr to parse a string", "body": "<p>This was one of the last-minute changes before beta. <code>FromError</code> is gone, you should use the general <code>From</code> type now: <a href=\"http://doc.rust-lang.org/nightly/std/convert/trait.From.html\" rel=\"nofollow\">http://doc.rust-lang.org/nightly/std/convert/trait.From.html</a></p>\n"}], "owner": {"reputation": 48136, "user_id": 161922, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/16e12e337f6edc3750681492656097ed?s=128&d=identicon&r=PG", "display_name": "Rory", "link": "https://stackoverflow.com/users/161922/rory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 653, "favorite_count": 0, "accepted_answer_id": 29436414, "answer_count": 1, "score": 1, "last_activity_date": 1428339739, "creation_date": 1428077648, "last_edit_date": 1428339739, "question_id": 29435792, "link": "https://stackoverflow.com/questions/29435792/trouble-with-fromstr-fromerr-to-parse-a-string", "title": "Trouble with FromStr &amp; FromErr to parse a string", "body": "<p>I am trying to write a simple Rust function to parse a string and create a struct. I'm using <code>Result</code> for the result of the parsing. I want it work with many number types (integers &amp; floats). I am using the same <a href=\"https://doc.rust-lang.org/std/result/\" rel=\"nofollow\">approach as used in Rust's result documentation</a> and my error type is a simple error message (<code>&amp;str</code>)</p>\n\n<p>Here is my source code:</p>\n\n<pre><code>#![feature(plugin)]\n#![plugin(regex_macros)]\nextern crate regex;\n\nuse std::str::FromStr;\nuse regex::Regex;\n\nstruct Point&lt;T&gt; {\n    x: T,\n    y: T\n}\n\nfn parse_string&lt;T: FromStr&gt;(input: &amp;str) -&gt; Result&lt;Point&lt;T&gt;, &amp;'static str&gt; {\n    let input = input.trim();\n    if input.len() == 0 {\n        return Err(\"Empty string\");\n    }\n    let re = regex!(r\"point2d\\{ *x=(.*)+, *y=(.*)+ *\\}\");\n    let mresult = try!(re.captures(input).ok_or(\"Could not match regex\"));\n    let x_str = try!(mresult.at(1).ok_or(\"Couldn't find X\"));\n    let y_str = try!(mresult.at(2).ok_or(\"Couldn't find Y\"));\n    let x: T = try!(T::from_str(x_str));\n    let y: T = try!(T::from_str(y_str));\n    Ok(Point{ x: x, y: y });\n}\n\nfn main() {\n    let point: Point&lt;i64&gt; = parse_string(\"point2d{x=10, y=20}\").unwrap();\n}\n</code></pre>\n\n<p>And the compiler error:</p>\n\n<pre><code>   Compiling fromerrtest v0.0.1 (file:///XXXXXX)\n&lt;std macros&gt;:6:1: 6:41 error: the trait `core::error::FromError&lt;&lt;T as core::str::FromStr&gt;::Err&gt;` is not implemented for the type `&amp;str` [E0277]\n&lt;std macros&gt;:6 $ crate:: error:: FromError:: from_error ( err ) ) } } )\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n&lt;std macros&gt;:1:1: 6:57 note: in expansion of try!\nsrc/main.rs:22:16: 22:41 note: expansion site\n&lt;std macros&gt;:6:1: 6:41 error: the trait `core::error::FromError&lt;&lt;T as core::str::FromStr&gt;::Err&gt;` is not implemented for the type `&amp;str` [E0277]\n&lt;std macros&gt;:6 $ crate:: error:: FromError:: from_error ( err ) ) } } )\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n&lt;std macros&gt;:1:1: 6:57 note: in expansion of try!\nsrc/main.rs:23:16: 23:41 note: expansion site\nerror: aborting due to 2 previous errors\nCould not compile `fromerrtest`.\n</code></pre>\n\n<p>I've read <a href=\"http://lucumr.pocoo.org/2014/11/6/error-handling-in-rust/\" rel=\"nofollow\">Armin Ronacher's explaination of FromErr</a>, but I'm not sure what I have to implement to make this work.</p>\n"}, {"tags": ["alias", "rust"], "answers": [{"comments": [{"owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "edited": false, "score": 0, "creation_date": 1428075140, "post_id": 29435035, "comment_id": 47039424, "body": "Perfect answer. Thanks!"}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": true, "score": 4, "last_activity_date": 1428074663, "creation_date": 1428074663, "answer_id": 29435035, "question_id": 29434904, "link": "https://stackoverflow.com/questions/29434904/type-aliases-in-rust/29435035#29435035", "title": "Type Aliases in Rust", "body": "<p><code>Thunk::new</code> used to work because it <a href=\"https://github.com/rust-lang/rust/commit/cade32acf6f5ff209ee082d70350d9bc0362985a#diff-8a31fda633b35e5267e3d3727e8e23cc\" rel=\"nofollow\">used to be</a> a <code>struct</code> rather than a type alias. This was changed two days ago:  <a href=\"https://github.com/rust-lang/rust/pull/23939\" rel=\"nofollow\">Add (unstable) FnBox trait as a nicer replacement for <code>Thunk</code>.</a></p>\n\n<p>To fix this, replace <code>Thunk::new</code> with <code>Box::new</code>, as also done throughout the standard library in that PR. Also change <code>thunk.invoke()</code> to <code>thunk()</code>.</p>\n"}], "owner": {"reputation": 11388, "user_id": 220485, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bTrsL.jpg?s=128&g=1", "display_name": "Daniel Fath", "link": "https://stackoverflow.com/users/220485/daniel-fath"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1416, "favorite_count": 1, "accepted_answer_id": 29435035, "answer_count": 1, "score": 2, "last_activity_date": 1428242354, "creation_date": 1428074140, "last_edit_date": 1428242354, "question_id": 29434904, "link": "https://stackoverflow.com/questions/29434904/type-aliases-in-rust", "title": "Type Aliases in Rust", "body": "<p>How exactly does type aliasing work in Rust?</p>\n\n<p>I've been examining breakage in some old Rust code I didn't write and noticed that <code>Thunk::new(...)</code> causes this error:</p>\n\n<pre><code>  error: type `Box&lt;alloc::boxed::FnBox&lt;_, Output=_&gt; + Send&gt;` \n  does not  implement any method in scope named `new`\n</code></pre>\n\n<p><a href=\"http://doc.rust-lang.org/std/thunk/type.Thunk.html\" rel=\"nofollow\">Thunk</a> is defined as:</p>\n\n<pre><code>type Thunk&lt;'a, A = (), R = ()&gt; = Box&lt;FnBox&lt;A, Output=R&gt; + Send + 'a&gt;;\n</code></pre>\n\n<p>I thought <code>Alias::method</code> didn't work in previous versions of Rust? How should I change <code>Thunk::new</code> into something that works? Is it missing an import for <code>Box</code> or something?</p>\n"}, {"tags": ["rust", "green-threads"], "comments": [{"owner": {"reputation": 8091, "user_id": 1502148, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/e44d7e02bc91648f306666787a329d25?s=128&d=identicon&r=PG&f=1", "display_name": "G&#225;bor Bakos", "link": "https://stackoverflow.com/users/1502148/g%c3%a1bor-bakos"}, "edited": false, "score": 1, "creation_date": 1428048528, "post_id": 29428318, "comment_id": 47027216, "body": "In Java they were slower than the native threads. (Though as I remember Erlang&#39;s BEAM VM uses green threads. So it seems to be fast-enough for their use cases.)"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 8091, "user_id": 1502148, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/e44d7e02bc91648f306666787a329d25?s=128&d=identicon&r=PG&f=1", "display_name": "G&#225;bor Bakos", "link": "https://stackoverflow.com/users/1502148/g%c3%a1bor-bakos"}, "edited": false, "score": 1, "creation_date": 1428057530, "post_id": 29428318, "comment_id": 47030639, "body": "@G&#225;borBakos Early JVMs had 1:N green threading, i.e., there was only one OS thread which runs all N Java threads. Naturally this cannot benefit from multi-core CPUs. Both Erlang, older Rust, and also Go use N:M threading, where N OS threads cooperate to run M green threads."}], "answers": [{"comments": [{"owner": {"reputation": 8171, "user_id": 311655, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6bad9300ce17b6a89678ed9343647906?s=128&d=identicon&r=PG", "display_name": "DenisKolodin", "link": "https://stackoverflow.com/users/311655/deniskolodin"}, "edited": false, "score": 3, "creation_date": 1477985280, "post_id": 29430403, "comment_id": 67964851, "body": "Right, but we haven&#39;t greens in Rust yet, because some of Rust internals uses TLS and it&#39;s impossible to mutiplex greens on OS-threads like Go or Erlang does. We still have to work for solving it..."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": false, "score": 47, "last_activity_date": 1428056822, "last_edit_date": 1495542342, "creation_date": 1428056822, "answer_id": 29430403, "question_id": 29428318, "link": "https://stackoverflow.com/questions/29428318/why-did-rust-remove-the-green-threading-model-whats-the-disadvantage/29430403#29430403", "title": "Why did Rust remove the green-threading model; what&#39;s the disadvantage?", "body": "<p>Erlang uses green threads with preemption. This is possible only because Erlang has a VM, which also allows a lot of other things like code hotswap. But languages with VM are unsuitable for systems programming because they always have some constant overhead, both in memory and processing power. Rust is a systems programming language, and so it cannot have a significant runtime system. I'd also add that Erlang is not <em>fast</em>. It is notoriously ineffective in numerical computations, for example - see <a href=\"https://stackoverflow.com/questions/1308527/when-does-erlangs-parallelism-overcome-its-weaknesses-in-numeric-computing\">here</a>. Its concurrency model allows for high throughput for I/O operations, but this is a different thing.</p>\n\n<p>So in order to support green threads in a feasible way a language has to have some kind of runtime. The reasons of runtime removal in Rust are outlined in the corresponding <a href=\"https://github.com/rust-lang/rfcs/blob/0806be4f282144cfcd55b1d20284b43f87cbe1c6/text/0230-remove-runtime.md\" rel=\"noreferrer\">RFC</a>. In short, the runtime model used in Rust at that time was difficult to work with efficiently and hard to improve, while not having sufficient benefits due to implementation problems and general constraints due to the API, so it was scrapped. As far as I know, nothing in principle prevents someone from writing a green thread-based runtime for Rust, just no one did that yet.</p>\n"}], "owner": {"reputation": 635, "user_id": 1249815, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c6c4f81691380e1fa8530bdc61f1c804?s=128&d=identicon&r=PG", "display_name": "acmerfight", "link": "https://stackoverflow.com/users/1249815/acmerfight"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 10566, "favorite_count": 8, "answer_count": 1, "score": 23, "last_activity_date": 1542811873, "creation_date": 1428047417, "last_edit_date": 1428247499, "question_id": 29428318, "link": "https://stackoverflow.com/questions/29428318/why-did-rust-remove-the-green-threading-model-whats-the-disadvantage", "title": "Why did Rust remove the green-threading model; what&#39;s the disadvantage?", "body": "<p>Runtime freedom: Rust\u2019s runtime system and green-threading model has been entirely removed, which cut the static binary size of \u201chello world\u201d in half and has opened the door to lower-level hooks into the standard library. Implemented by Aaron Turon.</p>\n\n<p><a href=\"http://blog.rust-lang.org/2015/01/09/Rust-1.0-alpha.html\" rel=\"noreferrer\">http://blog.rust-lang.org/2015/01/09/Rust-1.0-alpha.html</a></p>\n\n<p>What's the disadvantage of the green-threading model?</p>\n\n<p>Why is Erlang so fast?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "edited": false, "score": 4, "creation_date": 1428051015, "post_id": 29428227, "comment_id": 47028089, "body": "Other questions have the same problem, and the answer is still the same: it is not possible to build a <code>String</code> in a function and return it as a <code>&amp;str</code> because of Rust memory model."}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 1, "creation_date": 1428056909, "post_id": 29428227, "comment_id": 47030353, "body": "Your reasoning for not wanting to return a <code>String</code> makes no sense to me. Just store a <code>String</code> in this &quot;static&quot; object instead of a <code>&amp;str</code>. It&#39;s easier, it&#39;s at least as ergonomic, it makes more sense ownership-wise, and it doesn&#39;t even have any performance advantage."}, {"owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "edited": false, "score": 0, "creation_date": 1428083302, "post_id": 29428227, "comment_id": 47043181, "body": "@delnan You actually answered something else I was wondering about, which was whether using <code>String</code> has any performance disadvantages. I should be able to refactor to use <code>String</code>s"}, {"owner": {"reputation": 14554, "user_id": 12887, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc24fe007c2d362897829bf8302d29eb?s=128&d=identicon&r=PG", "display_name": "Jonathan Tran", "link": "https://stackoverflow.com/users/12887/jonathan-tran"}, "edited": false, "score": 1, "creation_date": 1531588323, "post_id": 29428227, "comment_id": 89656724, "body": "Some may find this article helpful: <a href=\"https://bryce.fisher-fleig.org/blog/strategies-for-returning-references-in-rust/index.html\" rel=\"nofollow noreferrer\">Strategies for Returning References in Rust</a>."}], "answers": [{"comments": [{"owner": {"reputation": 418, "user_id": 2020475, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/17c4ba8562c5e21ec609b39e9fc7ab30?s=128&d=identicon&r=PG", "display_name": "Triss Healy", "link": "https://stackoverflow.com/users/2020475/triss-healy"}, "edited": false, "score": 6, "creation_date": 1498810330, "post_id": 29429698, "comment_id": 76663547, "body": "Technically you can return a <code>String</code> as <code>&#39;static</code> as long as you leak the <code>String</code>. (With <code>std::mem::forget</code>), But it will remain allocated forever. (Which I guess the the point in <code>&#39;static</code>)"}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 82, "last_activity_date": 1456434191, "last_edit_date": 1456434191, "creation_date": 1428053907, "answer_id": 29429698, "question_id": 29428227, "link": "https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str/29429698#29429698", "title": "Return local String as a slice (&amp;str)", "body": "<p>No, you cannot do it. There are at least two explanations why it is so.</p>\n\n<p>First, remember that references are borrowed, i.e. they point to some data but do not own it, it is owned by someone else. In this particular case the string, a slice to which you want to return, is owned by the function because it is stored in a local variable.</p>\n\n<p>When the function exits, all its local variables are destroyed; this involves calling destructors, and the destructor of <code>String</code> frees the memory used by the string. However, you want to return a borrowed reference pointing to the data allocated for that string. It means that the returned reference immediately becomes dangling - it points to invalid memory!</p>\n\n<p>Rust was created, among everything else, to prevent such problems. Therefore, in Rust it is impossible to return a reference pointing into local variables of the function, which is possible in languages like C.</p>\n\n<p>There is also another explanation, slightly more formal. Let's look at your function signature:</p>\n\n<pre><code>fn return_str&lt;'a&gt;() -&gt; &amp;'a str\n</code></pre>\n\n<p>Remember that lifetime and generic parameters are, well, <em>parameters</em>: they are set by the caller of the function. For example, some other function may call it like this:</p>\n\n<pre><code>let s: &amp;'static str = return_str();\n</code></pre>\n\n<p>This requires <code>'a</code> to be <code>'static</code>, but it is of course impossible - your function does not return a reference to a static memory, it returns a reference with a strictly lesser lifetime. Thus such function definition is unsound and is prohibited by the compiler.</p>\n\n<p>Anyway, in such situations you need to return a value of an owned type, in this particular case it will be an owned <code>String</code>:</p>\n\n<pre><code>fn return_str() -&gt; String {\n    let mut string = String::new();\n\n    for _ in 0..10 {\n        string.push_str(\"ACTG\");\n    }\n\n    string\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1531314850, "last_edit_date": 1531314850, "creation_date": 1531314498, "answer_id": 51286293, "question_id": 29428227, "link": "https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str/51286293#51286293", "title": "Return local String as a slice (&amp;str)", "body": "<p>You can choose to <strong>leak memory</strong> to convert a <code>String</code> to a <code>&amp;'static str</code>:</p>\n\n<pre><code>fn return_str() -&gt; &amp;'static str {\n    let string = \"ACTG\".repeat(10);\n\n    Box::leak(string.into_boxed_str())\n}\n</code></pre>\n\n<p>This is a <em>really bad idea</em> in many cases as the memory usage will grow forever every time this function is called.</p>\n\n<p>If you wanted to return the same string every call, see also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/32956050/155423\">How to create a static string at compile time</a></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 8, "last_activity_date": 1531516026, "creation_date": 1531516026, "answer_id": 51332822, "question_id": 29428227, "link": "https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str/51332822#51332822", "title": "Return local String as a slice (&amp;str)", "body": "<p>In certain cases, you are passed a string slice and may <em>conditionally</em> want to create a new string. In these cases, you can return a <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"noreferrer\"><code>Cow</code></a>. This allows for the reference when possible and an owned <code>String</code> otherwise:</p>\n\n<pre><code>use std::borrow::Cow;\n\nfn return_str&lt;'a&gt;(name: &amp;'a str) -&gt; Cow&lt;'a, str&gt; {\n    if name.is_empty() {\n        let name = \"ACTG\".repeat(10);\n        name.into()\n    } else {\n        name.into()\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 3898084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/454f59b0deed57600f7c3ad7edd38210?s=128&d=identicon&r=PG&f=1", "display_name": "Dr C K Wright", "link": "https://stackoverflow.com/users/3898084/dr-c-k-wright"}, "is_accepted": false, "score": -1, "last_activity_date": 1583476062, "creation_date": 1583476062, "answer_id": 60558659, "question_id": 29428227, "link": "https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str/60558659#60558659", "title": "Return local String as a slice (&amp;str)", "body": "<p>Yes you can - the method  <code>replace_range</code> provides a work around -</p>\n\n<pre><code>let a = \"0123456789\";\n//println!(\"{}\",a[3..5]);  fails - doesn't have a size known at compile-time\nlet mut b = String::from(a);\nb.replace_range(5..,\"\");\nb.replace_range(0..2,\"\");\nprintln!(\"{}\",b); //succeeds \n</code></pre>\n\n<p>It took blood sweat and tears to achieve this!</p>\n"}, {"tags": [], "owner": {"reputation": 114, "user_id": 9093699, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff41043447ed1177449f2cd3c02dd40?s=128&d=identicon&r=PG&f=1", "display_name": "Samuel Fekete", "link": "https://stackoverflow.com/users/9093699/samuel-fekete"}, "is_accepted": false, "score": 1, "last_activity_date": 1591911346, "creation_date": 1591911346, "answer_id": 62333964, "question_id": 29428227, "link": "https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str/62333964#62333964", "title": "Return local String as a slice (&amp;str)", "body": "<p>The problem is that you are trying to create a reference to a string that will disappear when the function returns.</p>\n\n<p>A simple solution in this case is to pass in the empty string to the function. This will explicitly ensure that the referred string will still exist in the scope where the function returns:</p>\n\n<pre><code>fn return_str(s: &amp;mut String) -&gt; &amp;str {\n\n    for _ in 0..10 {\n        s.push_str(\"ACTG\");\n    }\n\n    &amp;s[..]\n}\n\nfn main() {\n    let mut s = String::new();\n    let s = return_str(&amp;mut s);\n    assert_eq!(\"ACTGACTGACTGACTGACTGACTGACTGACTGACTGACTG\", s);\n}\n</code></pre>\n\n<p>Code in Rust Playground:\n<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2499ded42d3ee92d6023161fe82e9b5f\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=2499ded42d3ee92d6023161fe82e9b5f</a></p>\n"}], "owner": {"reputation": 6086, "user_id": 943814, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/e8b4b9fc52a3084be9a2de004e0bb6dc?s=128&d=identicon&r=PG", "display_name": "anderspitman", "link": "https://stackoverflow.com/users/943814/anderspitman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 15052, "favorite_count": 15, "accepted_answer_id": 29429698, "answer_count": 5, "score": 58, "last_activity_date": 1591911346, "creation_date": 1428046937, "last_edit_date": 1495540009, "question_id": 29428227, "link": "https://stackoverflow.com/questions/29428227/return-local-string-as-a-slice-str", "title": "Return local String as a slice (&amp;str)", "body": "<p>There are several questions that seem to be about the same problem I'm having. For example see <a href=\"https://stackoverflow.com/questions/24542064/why-does-the-variable-not-live-long-enough\">here</a> and <a href=\"https://stackoverflow.com/questions/26435791/as-slice-produces-not-live-enough-error\">here</a>. Basically I'm trying to build a <code>String</code> in a local function, but then return it as a <code>&amp;str</code>. Slicing isn't working because the lifetime is too short. I can't use <code>str</code> directly in the function because I need to build it dynamically. However, I'd also prefer not to return a <code>String</code> since the nature of the object this is going into is static once it's built. Is there a way to have my cake and eat it too?</p>\n\n<p>Here's a minimal non-compiling reproduction:</p>\n\n<pre><code>fn return_str&lt;'a&gt;() -&gt; &amp;'a str {\n    let mut string = \"\".to_string();\n\n    for i in 0..10 {\n        string.push_str(\"ACTG\");\n    }\n\n    &amp;string[..]\n}\n</code></pre>\n"}, {"tags": ["generics", "closures", "rust"], "comments": [{"owner": {"reputation": 647, "user_id": 4523058, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a975dc9f5de333ddaf78b50c048548ec?s=128&d=identicon&r=PG", "display_name": "urubi", "link": "https://stackoverflow.com/users/4523058/urubi"}, "edited": false, "score": 0, "creation_date": 1428128889, "post_id": 29427826, "comment_id": 47054534, "body": "A friendly note to people who might have also mistakenly wandered down this path: Make sure you <i>really</i> want to use closures this way. Often, going the normal struct+traits route will accomplish what you want to do, and wont result in uniquely-typed structures."}], "answers": [{"tags": [], "owner": {"reputation": 11676, "user_id": 2536143, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/689fac88d8019eabd3421e6c740be7ae?s=128&d=identicon&r=PG", "display_name": "Levans", "link": "https://stackoverflow.com/users/2536143/levans"}, "is_accepted": true, "score": 3, "last_activity_date": 1428051871, "creation_date": 1428051871, "answer_id": 29429215, "question_id": 29427826, "link": "https://stackoverflow.com/questions/29427826/how-can-generic-closures-be-stored-in-generic-structures/29429215#29429215", "title": "How can generic closures be stored in generic structures?", "body": "<p>You are in a typical \"higher-ranked-stuff\" situation: <code>'t</code> and <code>T</code> are only used to define the type <code>F</code>.</p>\n\n<p>First, for the lifetime, you can use the higher-ranked-lifetimes syntax of rust:</p>\n\n\n\n<pre class=\"lang-rust prettyprint-override\"><code>where F: for&lt;'t&gt; Fn(&amp;'t [T]) -&gt; Option&lt;&amp;'t [T]&gt;\n</code></pre>\n\n<p>and thus remove it from you struct type.</p>\n\n<p>It would be nice to do something similar for <code>T</code>, but higher-ranked-types are currently not supported by Rust. So you best catch is probably to follow the suggestion of the compiler, and use <a href=\"http://doc.rust-lang.org/std/marker/struct.PhantomData.html\" rel=\"nofollow\"><code>std::maker::PhantomData</code></a></p>\n\n<p>You end up with a type like:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct GenericContainer&lt;T, F&gt;\n    where F: for&lt;'t&gt; Fn(&amp;'t [T]) -&gt; Option&lt;&amp;'t [T]&gt;\n{\n    generic_closure: F,\n    _marker: ::std::marker::PhantomData&lt;T&gt;\n}\n</code></pre>\n\n<p>Note that prefixing <code>_marker</code> with <code>_</code> prevents it to be detected as unused.</p>\n\n<p>Then, you just need to update your implementation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T, F&gt; GenericContainer&lt;T, F&gt; where \n    F: for&lt;'t&gt; Fn(&amp;'t [T]) -&gt; Option&lt;&amp;'t [T]&gt; {\n\n    pub fn new(gc: F) -&gt; Self {\n        GenericContainer {\n            generic_closure: gc,\n            _marker: ::std::marker::PhantomData\n        }\n    }\n\n    pub fn execute&lt;'t&gt;(&amp;self, slice: &amp;'t [T]) -&gt; Option&lt;&amp;'t [T]&gt; {\n        let g = &amp;self.generic_closure;\n        g(slice)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 647, "user_id": 4523058, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/a975dc9f5de333ddaf78b50c048548ec?s=128&d=identicon&r=PG", "display_name": "urubi", "link": "https://stackoverflow.com/users/4523058/urubi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 29429215, "answer_count": 1, "score": 2, "last_activity_date": 1428051871, "creation_date": 1428045164, "last_edit_date": 1428046788, "question_id": 29427826, "link": "https://stackoverflow.com/questions/29427826/how-can-generic-closures-be-stored-in-generic-structures", "title": "How can generic closures be stored in generic structures?", "body": "<p>I have a generic structure I want to store a closure in. This closure's parameter and return types is directly related to the structure's final type. How can I define such a structure?</p>\n\n<p>The only way I know how is to composite types using the <code>where</code> keyword. However when attempting to compile the code, the compiler halts and  complains that <code>T</code> and <code>'t</code> are not used.</p>\n\n<p>I could get it to compile by adding useless variables that use <code>T</code> and <code>'t</code>, but I imagine that there is a better, more correct why to do this.</p>\n\n<p>The following code (<a href=\"http://is.gd/WI4SYO\" rel=\"nofollow\">playpen</a>) <strong>compiles</strong>. Remove the useless variables and it won't:</p>\n\n<pre><code>pub struct GenericContainer&lt;'t, T: 't, F&gt; where F: Fn(&amp;'t [T]) -&gt; Option&lt;&amp;'t [T]&gt; {\n    generic_closure: F,\n    unused: Option&lt;&amp;'t T&gt;\n}\n\nimpl&lt;'t, T: 't, F&gt; GenericContainer&lt;'t, T, F&gt; where \n    F: Fn(&amp;'t [T]) -&gt; Option&lt;&amp;'t [T]&gt; {\n\n    pub fn new(gc: F) -&gt; Self {\n        GenericContainer {\n            generic_closure: gc,\n            unused: None\n        }\n    }\n\n    pub fn execute(&amp;self, slice: &amp;'t [T]) -&gt; Option&lt;&amp;'t [T]&gt; {\n        let g = &amp;self.generic_closure;\n        let _ = &amp;self.unused;\n        g(slice)\n    }\n}\n\nfn main() {\n    let g = GenericContainer::new(|s| if s.len() == 0 {None} else {Some(&amp;s[..1])});\n    assert!(g.execute(b\"   \") == Some(b\" \"));\n    println!(\"ok\");\n}\n</code></pre>\n"}, {"tags": ["rust", "slice", "pointer-arithmetic"], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1428500384, "post_id": 29429796, "comment_id": 47187834, "body": "<i>if the address does not fit into <code>isize</code></i> =&gt; Do you mean, if the addresses fit in <code>usize</code> but not <code>isize</code>? In this case, you could convert to <code>usize</code> instead, though getting the difference without underflow would be slightly more complicated."}], "tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 1, "last_activity_date": 1428054380, "creation_date": 1428054380, "answer_id": 29429796, "question_id": 29427596, "link": "https://stackoverflow.com/questions/29427596/minus-operation-for-slices/29429796#29429796", "title": "Minus operation for slices", "body": "<p>One of approaches is to convert pointers to slice contents to <code>isize</code> and do arithmetics on these values:</p>\n\n<pre><code>let arr: [u8; 3] = [1, 2, 3];\nlet x1: &amp;[u8] = &amp;arr[0..];\nlet x2: &amp;[u8] = &amp;arr[1..];\nlet d: isize = x2.as_ptr() as isize - x1.as_ptr() as isize;\nprintln!(\"{}\", d);\n</code></pre>\n\n<p>But I'm not sure how this would work if the address does not fit into <code>isize</code>.</p>\n"}], "owner": {"reputation": 8267, "user_id": 315129, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/mSRT4.jpg?s=128&g=1", "display_name": "vbezhenar", "link": "https://stackoverflow.com/users/315129/vbezhenar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 392, "favorite_count": 0, "accepted_answer_id": 29429796, "answer_count": 1, "score": 0, "last_activity_date": 1428054380, "creation_date": 1428044026, "question_id": 29427596, "link": "https://stackoverflow.com/questions/29427596/minus-operation-for-slices", "title": "Minus operation for slices", "body": "<p>How do I make to work the following code:</p>\n\n<pre><code>let arr: [u8; 3] = [1, 2, 3];\nlet x1: &amp;[u8] = &amp;arr[0..];\nlet x2: &amp;[u8] = &amp;arr[1..];\nlet d: isize = x2 - x1;\n</code></pre>\n\n<p>I have two slices into one vector and I want to know the difference between their start pointers (should be 1 in that example).</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 4, "last_activity_date": 1428500288, "last_edit_date": 1428500288, "creation_date": 1428055826, "answer_id": 29430142, "question_id": 29424237, "link": "https://stackoverflow.com/questions/29424237/does-rust-optimize-passing-temporary-structures-by-value/29430142#29430142", "title": "Does Rust optimize passing temporary structures by value?", "body": "<p>Let's see. <a href=\"http://is.gd/B2wmw9\" rel=\"nofollow\">This program</a>:</p>\n\n<pre><code>struct LotsOfBytes {\n    bytes: [u8; 1024]\n}\n\n#[inline(never)]\nfn consume(mut lob: LotsOfBytes) {\n}\n\nfn main() {\n    let lob = LotsOfBytes { bytes: [0; 1024] };\n    consume(lob);\n}\n</code></pre>\n\n<p>Compiles to the following LLVM IR code:</p>\n\n<pre><code>%LotsOfBytes = type { [1024 x i8] }\n\n; Function Attrs: noinline nounwind uwtable\ndefine internal fastcc void @_ZN7consume20hf098deecafa4b74bkaaE(%LotsOfBytes* noalias nocapture dereferenceable(1024)) unnamed_addr #0 {\nentry-block:\n  %1 = getelementptr inbounds %LotsOfBytes* %0, i64 0, i32 0, i64 0\n  tail call void @llvm.lifetime.end(i64 1024, i8* %1)\n  ret void\n}\n\n; Function Attrs: nounwind uwtable\ndefine internal void @_ZN4main20hf3cbebd3154c5390qaaE() unnamed_addr #2 {\nentry-block:\n  %lob = alloca %LotsOfBytes, align 8\n  %lob1 = getelementptr inbounds %LotsOfBytes* %lob, i64 0, i32 0, i64 0\n  %arg = alloca %LotsOfBytes, align 8\n  %0 = getelementptr inbounds %LotsOfBytes* %lob, i64 0, i32 0, i64 0\n  call void @llvm.lifetime.start(i64 1024, i8* %0)\n  call void @llvm.memset.p0i8.i64(i8* %lob1, i8 0, i64 1024, i32 8, i1 false)\n  %1 = getelementptr inbounds %LotsOfBytes* %arg, i64 0, i32 0, i64 0\n  call void @llvm.lifetime.start(i64 1024, i8* %1)\n  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %0, i64 1024, i32 8, i1 false)\n  call fastcc void @_ZN7consume20hf098deecafa4b74bkaaE(%LotsOfBytes* noalias nocapture dereferenceable(1024) %arg)\n  call void @llvm.lifetime.end(i64 1024, i8* %1)\n  call void @llvm.lifetime.end(i64 1024, i8* %0)\n  ret void\n}\n</code></pre>\n\n<p>This line is interesting in particular:</p>\n\n<pre><code>call fastcc void @_ZN7consume20hf098deecafa4b74bkaaE(%LotsOfBytes* noalias nocapture dereferenceable(1024) %arg)\n</code></pre>\n\n<p>If I understand correctly, this means that <code>consume</code> is called with a pointer to <code>LotsOfBytes</code>, so yes, rustc optimizes passing big structures by value.</p>\n"}], "owner": {"reputation": 473, "user_id": 4744493, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0db906d5981fbc0eab8cd79e10ae872b?s=128&d=identicon&r=PG&f=1", "display_name": "Dmitry Uvarov", "link": "https://stackoverflow.com/users/4744493/dmitry-uvarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "accepted_answer_id": 29430142, "answer_count": 1, "score": 4, "last_activity_date": 1428500288, "creation_date": 1428018010, "question_id": 29424237, "link": "https://stackoverflow.com/questions/29424237/does-rust-optimize-passing-temporary-structures-by-value", "title": "Does Rust optimize passing temporary structures by value?", "body": "<p>Let's say I have a vector of structures in Rust. Structures are quite big. When I want to insert a new one, I write the code like this:</p>\n\n<pre><code>my_vec.push(MyStruct {field1: value1, field2: value2, ... });\n</code></pre>\n\n<p>The push definition is</p>\n\n<pre><code>fn push(&amp;mut self, value: T)\n</code></pre>\n\n<p>which means the value is passed by value. I wonder if Rust creates a temporary object first then does a copy to the push function or does it optimize the code so that no temporary objects are created and copied?</p>\n"}, {"tags": ["debugging", "rust"], "answers": [{"comments": [{"owner": {"reputation": 3783, "user_id": 268898, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/b37c3e5638c2886054fdc62a5521be33?s=128&d=identicon&r=PG", "display_name": "Jeff Walker Code Ranger", "link": "https://stackoverflow.com/users/268898/jeff-walker-code-ranger"}, "edited": false, "score": 0, "creation_date": 1456240629, "post_id": 29423664, "comment_id": 58849092, "body": "So why isn&#39;t it on for all debug builds all the time then?"}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 3783, "user_id": 268898, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/b37c3e5638c2886054fdc62a5521be33?s=128&d=identicon&r=PG", "display_name": "Jeff Walker Code Ranger", "link": "https://stackoverflow.com/users/268898/jeff-walker-code-ranger"}, "edited": false, "score": 0, "creation_date": 1456240949, "post_id": 29423664, "comment_id": 58849395, "body": "It&#39;s an environment variable. So the setting comes from outside, not inside."}, {"owner": {"reputation": 3783, "user_id": 268898, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/b37c3e5638c2886054fdc62a5521be33?s=128&d=identicon&r=PG", "display_name": "Jeff Walker Code Ranger", "link": "https://stackoverflow.com/users/268898/jeff-walker-code-ranger"}, "edited": false, "score": 5, "creation_date": 1456241073, "post_id": 29423664, "comment_id": 58849498, "body": "I get that it is an environment variable.  I was asking, why not just make the behavior of any rust exe compiled in debug mode that it always has the behavior of <code>RUST_BACKTRACE=1</code> regardless of the environment variable."}, {"owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "reply_to_user": {"reputation": 3783, "user_id": 268898, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/b37c3e5638c2886054fdc62a5521be33?s=128&d=identicon&r=PG", "display_name": "Jeff Walker Code Ranger", "link": "https://stackoverflow.com/users/268898/jeff-walker-code-ranger"}, "edited": false, "score": 0, "creation_date": 1456241105, "post_id": 29423664, "comment_id": 58849517, "body": "I don&#39;t know, it&#39;s been like this for at least 3 years."}], "tags": [], "owner": {"reputation": 11441, "user_id": 24817, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/233c279c012ebac792aaa805f966cbc7?s=128&d=identicon&r=PG", "display_name": "Steve Klabnik", "link": "https://stackoverflow.com/users/24817/steve-klabnik"}, "is_accepted": true, "score": 7, "last_activity_date": 1428014435, "creation_date": 1428014435, "answer_id": 29423664, "question_id": 29421727, "link": "https://stackoverflow.com/questions/29421727/how-much-overhead-does-rust-backtrace-1-have/29423664#29423664", "title": "How much overhead does RUST_BACKTRACE=1 have?", "body": "<p>I asked about this in <code>#rust-internals</code>, and <code>sfackler</code> said</p>\n\n<blockquote>\n  <p>I believe it has no effect except during a panic</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501433071, "post_id": 45400966, "comment_id": 77764788, "body": "Are your results measured on Rust Playground itself? (I don&#39;t see how a hello world program would take so long otherwise). If so, wouldn&#39;t times wildly fluctuate depending on how busy the server is at the moment?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 1, "creation_date": 1501433243, "post_id": 45400966, "comment_id": 77764839, "body": "@interjay check out <a href=\"https://github.com/integer32llc/rust-playground/issues/132#issuecomment-318860259\" rel=\"nofollow noreferrer\">the issue (expanding the details link)</a> to see the test methodology. Docker is involved, yes, but there&#39;s no other load on my local system."}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501434338, "post_id": 45400966, "comment_id": 77765179, "body": "I&#39;ve done some testing, and <code>RUST_BACKTRACE</code> appears to slow both rustc (even with no errors) and cargo (even when recompile is not needed). However, a hello world program should take near 0 time to run with or without this setting."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "edited": false, "score": 0, "creation_date": 1501434976, "post_id": 45400966, "comment_id": 77765393, "body": "@interjay interesting \u2014 I realized I pasted the wrong execution string for the <i>execute</i> row. The fixed version still doesn&#39;t seem like it should be triggering either of the cases you identify though. I&#39;m not sure what else it would be..."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 6, "last_activity_date": 1501434839, "last_edit_date": 1501434839, "creation_date": 1501425537, "answer_id": 45400966, "question_id": 29421727, "link": "https://stackoverflow.com/questions/29421727/how-much-overhead-does-rust-backtrace-1-have/45400966#45400966", "title": "How much overhead does RUST_BACKTRACE=1 have?", "body": "<p>This is of interest to me as the Rust Playground would <a href=\"https://github.com/integer32llc/rust-playground/issues/132\" rel=\"noreferrer\">like to have <code>RUST_BACKTRACE</code> enabled all the time</a>, but currently the speed difference is not negligible enough. As of Rust 1.19.0, there is <em>some</em> overhead even for a simple \"hello world\" program which does not panic or cause a compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>| RUST_BACKTRACE      | time (seconds) |\n|---------------------|----------------|\n| compile and execute |           2.48 |\n| execute             |           2.02 |\n| disabled            |           1.64 |\n</code></pre>\n\n<ul>\n<li><strong>compile and execute</strong> - <code>RUST_BACKTRACE=1 cargo run</code></li>\n<li><strong>execute</strong> - <code>CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER='env RUST_BACKTRACE=1' cargo run</code></li>\n<li><strong>disabled</strong> - <code>cargo run</code></li>\n</ul>\n\n<p>The overhead has not been consistent over time; In 1.14.0, simply having it enabled <a href=\"https://github.com/rust-lang/rust/issues/37477\" rel=\"noreferrer\">caused 10-20 seconds of delay on certain platforms</a>! Before then, I never <em>noticed</em> any slowness.</p>\n\n<hr>\n\n<p>Editorially, it does not appear that the performance of compiled Rust code when <code>RUST_BACKTRACE</code> is enabled is currently a prime concern of the Rust team. There are many other interesting things to evaluate, besides! For these reasons, I would be loathe to have it on all the time. Of course, if the compiler itself turned on the setting by default, then I would expect it to be much more attention-worthy!</p>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501432470, "post_id": 45402131, "comment_id": 77764612, "body": "<i>Therefore, setting it should have no effect on performance unless a thread panics</i> \u2014 Any ideas why this statement disagrees <a href=\"https://stackoverflow.com/a/45400966/155423\">with my experimental results</a>?"}, {"owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1501441426, "post_id": 45402131, "comment_id": 77767376, "body": "@Shepmaster There are too many variables in your testing: you are measuring the time for browser+webserver+cargo+compilation+running. All of this is presumably running in a sandbox which could slow things down. Did you try testing just running the executable?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1501442138, "post_id": 45402131, "comment_id": 77767615, "body": "You are correct that my testing includes the browser+webserver, but those are constants across the runs and are against my local machine with nothing else happening . Running inside the Docker container is also a constant. Note I&#39;m not trying to say that the whole process is <i>slow</i> or <i>fast</i>, just that using <code>RUST_BACKTRACE</code> is slower than not \u2014 the baseline. The program is compiled from scratch in the exact same configuration (yay Docker) and the only thing I vary is when the <code>RUST_BACKTRACE</code> variable is set \u2014 the 3 cases in my tables. The variance of the data is also very low."}], "tags": [], "owner": {"reputation": 97030, "user_id": 189205, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c60305494593d556e57a3cf8e4a8c163?s=128&d=identicon&r=PG", "display_name": "interjay", "link": "https://stackoverflow.com/users/189205/interjay"}, "is_accepted": false, "score": 9, "last_activity_date": 1503002703, "last_edit_date": 1503002703, "creation_date": 1501432305, "answer_id": 45402131, "question_id": 29421727, "link": "https://stackoverflow.com/questions/29421727/how-much-overhead-does-rust-backtrace-1-have/45402131#45402131", "title": "How much overhead does RUST_BACKTRACE=1 have?", "body": "<p>The only place in the standard library that reads the <code>RUST_BACKTRACE</code> environment variable is in the function <a href=\"https://github.com/rust-lang/rust/blob/5c71e4ef90ef79c1ac79c4132333cbc80f5b85b9/src/libstd/sys_common/backtrace.rs#L150\" rel=\"noreferrer\"><code>sys_common::backtrace::log_enabled()</code></a>. That function is only called from <a href=\"https://github.com/rust-lang/rust/blob/5c71e4ef90ef79c1ac79c4132333cbc80f5b85b9/src/libstd/panicking.rs#L337\" rel=\"noreferrer\"><code>panicking::default_hook</code></a>, which gets called after a panic occurs. Therefore, setting it should have no effect on performance unless a thread panics.</p>\n\n<p>Note that this flag also affects the compiler itself (<code>rustc</code>). The compiler sometimes issues panics to cause a \"normal\" exit, suppressing printing the backtrace but still calculating it. This can happen when it exits after a compilation error. In the past, people have reported that this caused some versions of the compiler to take a long time to exit with <code>RUST_BACKTRACE=1</code> set.</p>\n\n<p>Some crates may also handle <code>RUST_BACKTRACE</code> themselves: For example, the <code>error_chain</code> crate generates a backtrace when an error is generated and <code>RUST_BACKTRACE=1</code> is set. This can slow down projects using this crate. A notable project which uses <code>error_chain</code> is <code>cargo</code>.</p>\n"}], "owner": {"reputation": 4208, "user_id": 2343847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/cf8c5e3c346c7734cb1ff728264f6cfb?s=128&d=identicon&r=PG", "display_name": "aij", "link": "https://stackoverflow.com/users/2343847/aij"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1712, "favorite_count": 1, "accepted_answer_id": 29423664, "answer_count": 3, "score": 14, "last_activity_date": 1503002703, "creation_date": 1428005920, "question_id": 29421727, "link": "https://stackoverflow.com/questions/29421727/how-much-overhead-does-rust-backtrace-1-have", "title": "How much overhead does RUST_BACKTRACE=1 have?", "body": "<p>Is it reasonable to just set RUST_BACKTRACE=1 always?</p>\n\n<p>Does it introduce any (significant?) overhead during normal execution (such as during function calls) or is there only overhead when a panic happens?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 817, "user_id": 3848441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6199c18fbe4695e7ea294cdf4053d3f7?s=128&d=identicon&r=PG&f=1", "display_name": "PEPP", "link": "https://stackoverflow.com/users/3848441/pepp"}, "edited": false, "score": 0, "creation_date": 1428008097, "post_id": 29419367, "comment_id": 47016097, "body": "Maybe related to this? <a href=\"http://internals.rust-lang.org/t/memcpy-is-backwards/1797\" rel=\"nofollow noreferrer\">internals.rust-lang.org/t/memcpy-is-backwards/1797</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1428247817, "post_id": 29419367, "comment_id": 47081879, "body": "You really should attempt to create an <a href=\"http://stackoverflow.com/help/mcve\">MCVE</a>. Posting code that uses (but does not require) an external library, leaving out required <code>use</code> statements, these all make it harder for us to help you."}, {"owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "edited": false, "score": 0, "creation_date": 1428249231, "post_id": 29419367, "comment_id": 47082264, "body": "And this suffices a downvote?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1428264631, "post_id": 29419367, "comment_id": 47087156, "body": "@jimjampez I think so. Other people may not - they can also upvote it. The downvote link says <i>&quot;This question does not show any research effort; it is unclear or not useful&quot;</i> I feel that a MCVE contributes to &quot;research effort&quot; as it is work done by the poster to understand the problem. However, if you make it into an MCVE, I tend to remove my downvotes (just make sure to ping me to look again!) ^_^"}, {"owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "edited": false, "score": 0, "creation_date": 1428570643, "post_id": 29419367, "comment_id": 47221481, "body": "I just won&#39;t put my Rust questions on SO anymore as your draconian down-votes puts me off."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 2, "last_activity_date": 1428248559, "creation_date": 1428248559, "answer_id": 29459022, "question_id": 29419367, "link": "https://stackoverflow.com/questions/29419367/whats-wrong-with-my-stdptrcopy-nonoverlapping-call/29459022#29459022", "title": "What&#39;s wrong with my std::ptr::copy_nonoverlapping call?", "body": "<p>You are probably being bitten by the <a href=\"http://users.rust-lang.org/t/psa-late-silent-breakage-for-beta/816\" rel=\"nofollow\">last-minute change to the argument order of ptr::copy and friends</a>. Specifically, this part of your code:</p>\n\n<pre><code>let byte_ptr: *const u8 = mem::transmute(ptr); // Why is this const?\nlet encoded_ptr: *mut u8 = encoded.as_mut_ptr(); // Why is this mutable?\nptr::copy_nonoverlapping(byte_ptr, encoded_ptr, len);\n</code></pre>\n\n<p>The compiler actually gave you some indication that something was wrong, in that you \"needed\" a <em>mutable</em> pointer to the source of data. That doesn't make any sense - we are just reading from that slice. And the destination was constant, which means we <strong>can't change it</strong>.</p>\n\n<p>Here's the full code I ran that worked:</p>\n\n<pre><code>extern crate libc;\n\nuse std::{mem,ptr};\nuse std::fs::OpenOptions;\nuse std::os::unix::io::AsRawFd;\n\nfn save_vec(path: &amp;str, v: &amp;[u8]) -&gt; Result&lt;(), String&gt; {\n    let len = v.len();\n\n    let f =\n        OpenOptions::new()\n        .create(true)\n        .read(true)\n        .write(true)\n        .open(path);\n\n    let file = try!(f.map_err(|_| \"cannot create file\".to_string()));\n    file.set_len(len as u64).unwrap();\n\n    let fd = file.as_raw_fd();\n    unsafe {\n        let mmap_len = len as libc::size_t;\n        let prot = libc::PROT_READ | libc::PROT_WRITE;\n        let flags = libc::MAP_SHARED;\n        let ptr = libc::mmap(0 as *mut libc::types::common::c95::c_void, mmap_len, prot, flags, fd, 0);\n        if ptr == libc::MAP_FAILED {\n            return Err(\"mmap fail\".to_string())\n        }\n        let byte_ptr: *mut u8 = mem::transmute(ptr);\n        let encoded_ptr: *const u8 = v.as_ptr();\n        ptr::copy_nonoverlapping(encoded_ptr, byte_ptr, len);\n        libc::munmap(ptr, len as u64);\n    }\n\n    Ok(())\n}\n\nfn main() {\n    save_vec(\"dump\", b\"hello\").unwrap();\n}\n</code></pre>\n"}], "owner": {"reputation": 1406, "user_id": 1854658, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/3b07d0a414b016337c53121936ca9afb?s=128&d=identicon&r=PG", "display_name": "jimjampez", "link": "https://stackoverflow.com/users/1854658/jimjampez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 460, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1428248559, "creation_date": 1427997297, "question_id": 29419367, "link": "https://stackoverflow.com/questions/29419367/whats-wrong-with-my-stdptrcopy-nonoverlapping-call", "title": "What&#39;s wrong with my std::ptr::copy_nonoverlapping call?", "body": "<p>I've got a problem with my function <code>save_vec</code> that saves a vector down to disk using mmap. It creates the file with the right size but when I check its contents (using <code>hexdump</code>) it's just all zeros. The <code>mmap</code> is using <code>MAP_SHARED</code> and not private so assuming there's something wrong with my <code>copy_nonoverlapping</code> call.</p>\n\n<pre><code>fn save_vec&lt;T: Encodable + Debug + Copy&gt;(path: &amp;str, v: &amp;Vec&lt;T&gt;) -&gt; Option&lt;String&gt; {\n    println!(\"save_vec\");\n    let mut encoded: Vec&lt;u8&gt; = bincode::encode(v, SizeLimit::Infinite).unwrap();\n    let len = encoded.len();\n    println!(\"encoded = {:?}\", encoded);\n    println!(\"len = {:?}\", len);\n    let file = match OpenOptions::new()\n            .create(true)\n            .read(true)\n            .write(true)\n            .open(path) {\n        Ok(f) =&gt; f,\n        Err(err) =&gt; return Some(\"cannot create file\".to_string())\n    };\n    file.set_len(len as u64);\n\n    let fd = file.as_raw_fd();\n    unsafe {\n        let mmap_len = len as libc::size_t;\n        let prot = libc::PROT_READ | libc::PROT_WRITE;\n        let flags = libc::MAP_SHARED;\n        let ptr = libc::mmap(0 as *mut libc::types::common::c95::c_void, mmap_len, prot, flags, fd, 0);\n        if ptr == libc::MAP_FAILED {\n            return Some(\"mmap fail\".to_string())\n        }\n        let byte_ptr: *const u8 = mem::transmute(ptr);\n        let encoded_ptr: *mut u8 = encoded.as_mut_ptr();\n        ptr::copy_nonoverlapping(byte_ptr, encoded_ptr, len);\n        libc::munmap(ptr, len as u64);\n        println!(\"byte_ptr={:?}\", byte_ptr);\n    }\n\n    None\n}\n</code></pre>\n"}, {"tags": ["c", "rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1427998392, "post_id": 29419545, "comment_id": 47011182, "body": "I am not that big of an expert, so I probably don&#39;t understand much of what you wrote here, but I do have a comment about the end. C doesn&#39;t interact in any way with the data except creating the bridge between the Rust code (which has callbacks). I am going to test this method, but it seems like the right stuff (judging by the explanation). Thanks"}, {"owner": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1427998695, "post_id": 29419545, "comment_id": 47011325, "body": "But how do I integrate this <code>TraitObject</code> code into my trait function?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1428001401, "post_id": 29419545, "comment_id": 47012739, "body": "@User That code doesn&#39;t belong into any trait. It&#39;s a <i>free-standing</i> function that allows C code to invoke a method on a <code>&amp;MyTrait</code> without knowing how Rust implements method calls on trait objects."}, {"owner": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1428002344, "post_id": 29419545, "comment_id": 47013246, "body": "I think you misunderstood, C code doesn&#39;t need to interact with the trait, it just needs to pass the trait to a rust callback"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1428002508, "post_id": 29419545, "comment_id": 47013331, "body": "@User Please add more a more concrete description of what you&#39;re trying to do (and in which language) to the question. Pseudo code examples or such. I have a hard time visualizing exactly what problem you run into."}, {"owner": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1428002890, "post_id": 29419545, "comment_id": 47013523, "body": "Code with no trait object: <a href=\"http://is.gd/yCJ2SU\" rel=\"nofollow noreferrer\">is.gd/yCJ2SU</a> Code with: <a href=\"http://is.gd/VkMeSs\" rel=\"nofollow noreferrer\">is.gd/VkMeSs</a> Both don&#39;t compile"}, {"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "reply_to_user": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1428004019, "post_id": 29419545, "comment_id": 47014131, "body": "@User The important part is what the C code is doing with the <code>Scope</code>. And that <code>any_function(param: MyTrait)</code> doesn&#39;t work has nothing to do with C or the FFI."}, {"owner": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "edited": false, "score": 0, "creation_date": 1428004510, "post_id": 29419545, "comment_id": 47014387, "body": "seems like I asked on the IRC and I have an answer now, it just needs some testing, thanks for your answer though :)"}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "is_accepted": false, "score": 2, "last_activity_date": 1427998192, "last_edit_date": 1427998192, "creation_date": 1427997886, "answer_id": 29419545, "question_id": 29418298, "link": "https://stackoverflow.com/questions/29418298/pass-a-rust-trait-to-c/29419545#29419545", "title": "Pass a Rust trait to C", "body": "<p>Passing a trait object by value doesn't make sense, especially when interacting with C. The actual type (in the C sense) and its size is not known, and there's no vtable inside the object. You most likely want to pass a trait reference (<code>&amp;MyTrait</code>).\nHowever, traits are foreign to C and thus make a bad interface. While you could define the equivalent of <code>core::raw::TraitObject</code> in C, actually doing anything with the vtable is extremely ugly and fragile and unsafe.</p>\n\n<p>If you need polymorphism across the Rust-C barrier, explicit function pointers are a <em>much</em> better option. You can still have <code>MyTrait</code> and the <code>callC</code> method, it's just the FFI parts that look different. It may be possible to hand the C library callbacks with the objects as payload.</p>\n\n<p>Alternatively, pass around the aforementioned <code>TraitObject</code>s (fat pointers) but never inspect them from C, call methods through (non-trait) helper function in Rust:</p>\n\n<pre><code>extern fn call_method(obj: TraitObject) {\n    let obj: &amp;MyTrait = transmute(obj); // should be safe, but not tested\n    obj.meth();\n}\n</code></pre>\n\n<p>This avoids the trouble that is manually digging through a Rust vtable in C.</p>\n"}], "owner": {"reputation": 51, "user_id": 4743424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/282a209591ce3331285b0f37589dfe88?s=128&d=identicon&r=PG&f=1", "display_name": "User", "link": "https://stackoverflow.com/users/4743424/user"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1062, "favorite_count": 0, "answer_count": 1, "score": 5, "last_activity_date": 1427998192, "creation_date": 1427993528, "last_edit_date": 1427996923, "question_id": 29418298, "link": "https://stackoverflow.com/questions/29418298/pass-a-rust-trait-to-c", "title": "Pass a Rust trait to C", "body": "<p>I am building a Rust library that needs to call some C functions with Rust objects. I have a trait with a function that calls the C function, the C function is defined in Rust as follows:</p>\n\n<pre><code>extern {\n    fn process_trait(my_trait: MyTrait);\n}\n</code></pre>\n\n<p>The idea is that the user can implement the trait for his struct and then call the C functions (basically, the C then calls some other Rust back, which calls some of the Trait functions). The error here is: <code>the trait core::marker::Sized is not implemented for the type Self</code>, because I am passing <code>*self</code> to process_trait. Am I doing something wrong? I tried changing this a bit, even casting, I am getting either this error or wrong type. </p>\n\n<p>I think the problem is that it's supposed to be heap allocated, no? The only thing I am trying to avoid is the API looking ugly. The user should just be able to</p>\n\n<pre><code>struct MyUnit;\nimpl MyTrait for MyUnit...\nMyUnit.callC();\n</code></pre>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 13014, "user_id": 4140572, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/2uRSa.png?s=128&g=1", "display_name": "Angel Angel", "link": "https://stackoverflow.com/users/4140572/angel-angel"}, "edited": false, "score": 1, "creation_date": 1461078315, "post_id": 29415521, "comment_id": 61029158, "body": "Maybe this help you <a href=\"http://stackoverflow.com/questions/36413364/as-i-can-make-the-vector-is-mutable-inside-struct#36720608\" title=\"as i can make the vector is mutable inside struct%2336720608\">stackoverflow.com/questions/36413364/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 356, "user_id": 1070331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/459db9354553ed1833539aa1272f73b7?s=128&d=identicon&r=PG", "display_name": "Paulo Lieuthier", "link": "https://stackoverflow.com/users/1070331/paulo-lieuthier"}, "edited": false, "score": 0, "creation_date": 1427987768, "post_id": 29415736, "comment_id": 47005068, "body": "Great! I&#39;m still confused, though. <code>pg</code> and <code>self</code> need to be mutable, but <code>names</code> doesn&#39;t? I thought I was changing <code>names</code>, not <code>pg</code>. I will study more, if I can find good material about that. Thank you!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 356, "user_id": 1070331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/459db9354553ed1833539aa1272f73b7?s=128&d=identicon&r=PG", "display_name": "Paulo Lieuthier", "link": "https://stackoverflow.com/users/1070331/paulo-lieuthier"}, "edited": false, "score": 1, "creation_date": 1427991377, "post_id": 29415736, "comment_id": 47007397, "body": "@paulolieuthier Structs are entirely mutable or not. By having <code>pg</code> mutable, you are <i>able</i> to call the method that requires a mutable self reference. <b>Every</b> field of <code>PG</code> is mutable within that method, including <code>names</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1572286598, "last_edit_date": 1572286598, "creation_date": 1427985589, "answer_id": 29415736, "question_id": 29415521, "link": "https://stackoverflow.com/questions/29415521/how-to-use-mutable-member-vec/29415736#29415736", "title": "How to use mutable member Vec?", "body": "<p>You don't need any lifetimes or references here:</p>\n\n<pre><code>struct PG {\n    names: Vec&lt;String&gt;,\n}\n\nimpl PG {\n    fn new() -&gt; PG {\n        PG { names: Vec::new() }\n    }\n\n    fn push(&amp;mut self, s: String) {\n        self.names.push(s);\n    }\n}\n\nfn main() {\n    let mut pg = PG::new();\n    pg.push(\"John\".to_string());\n}\n</code></pre>\n\n<p>Your <code>PG</code> struct <em>owns</em> the vector - not a reference to it. This does require that you have a mutable <code>self</code> for the <code>push</code> method (because you are changing <code>PG</code>!). You also have to make the <code>pg</code> variable mutable.</p>\n"}], "owner": {"reputation": 356, "user_id": 1070331, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/459db9354553ed1833539aa1272f73b7?s=128&d=identicon&r=PG", "display_name": "Paulo Lieuthier", "link": "https://stackoverflow.com/users/1070331/paulo-lieuthier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2107, "favorite_count": 0, "accepted_answer_id": 29415736, "answer_count": 1, "score": 3, "last_activity_date": 1572286598, "creation_date": 1427985040, "last_edit_date": 1572286573, "question_id": 29415521, "link": "https://stackoverflow.com/questions/29415521/how-to-use-mutable-member-vec", "title": "How to use mutable member Vec?", "body": "<p>How to properly create a member <code>Vec</code>? What am I missing here? </p>\n\n<pre><code>struct PG {\n    names: &amp;mut Vec&lt;String&gt;,\n}\n\nimpl PG {\n    fn new() -&gt; PG {\n        PG { names: Vec::new() }\n    }\n\n    fn push(&amp;self, s: String) {\n        self.names.push(s);\n    }\n}\n\nfn main() {\n    let pg = PG::new();\n    pg.push(\"John\".to_string());\n}\n</code></pre>\n\n<p>If I compile this code, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0106]: missing lifetime specifier\n --&gt; src/main.rs:2:12\n  |\n2 |     names: &amp;mut Vec&lt;String&gt;,\n  |            ^ expected lifetime parameter\n</code></pre>\n\n<p>If I change the type of <code>names</code> to <code>&amp;'static mut Vec&lt;String&gt;</code>, I get:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n --&gt; src/main.rs:7:21\n  |\n7 |         PG { names: Vec::new() }\n  |                     ^^^^^^^^^^\n  |                     |\n  |                     expected mutable reference, found struct `std::vec::Vec`\n  |                     help: consider mutably borrowing here: `&amp;mut Vec::new()`\n  |\n  = note: expected type `&amp;'static mut std::vec::Vec&lt;std::string::String&gt;`\n             found type `std::vec::Vec&lt;_&gt;`\n</code></pre>\n\n<p>I know I can use parameterized lifetimes, but for some other reason I have to use <code>static</code>. </p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 2, "creation_date": 1427982000, "post_id": 29414171, "comment_id": 47001365, "body": "In your case, I think you could try <code>Vec&lt;Cell&lt;Body&gt;&gt;</code>, because <code>Cell</code> have &quot;inner mutability&quot;."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1427982397, "post_id": 29414171, "comment_id": 47001605, "body": "Note: I ignored the &quot;obvious&quot; answer here, create a clone of <code>bodies</code>, and modify the clone while you iterate on <code>bodies</code>. It has the obvious disadvantage of requiring twice as much memory."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1427983143, "post_id": 29414171, "comment_id": 47002080, "body": "@MatthieuM. see my answer - I think modifying the array in-place during iteration is <i>incorrect</i> for this problem."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1427984829, "post_id": 29414171, "comment_id": 47003135, "body": "@Shepmaster: Ah, I did not think about challenging the logic :)"}], "answers": [{"comments": [{"owner": {"reputation": 222, "user_id": 4437212, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/aa3211a9ea6f971f486ae13b70d4623d?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/4437212/chris"}, "edited": false, "score": 1, "creation_date": 1432549732, "post_id": 29414791, "comment_id": 48955668, "body": "Concerning the logic problem, I would agree if b.v is changed during the inner loop (b_inner). But that&#39;s not the case. v of the inner body (b_inner) is not changed during the inner loop. b.v is updated after the inner loop has finished. Then b_outer advances to the next body."}, {"owner": {"reputation": 222, "user_id": 4437212, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/aa3211a9ea6f971f486ae13b70d4623d?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/4437212/chris"}, "edited": false, "score": 1, "creation_date": 1432550041, "post_id": 29414791, "comment_id": 48955862, "body": "I came up with another solution in the meantime (though I don&#39;t know if this is more elegant): I split the structure, one that is the base for the calculation (input) and another that gathers the results (output). After the calculation finished, the input structure is updated with results from the output structure and the next turn of the calculation starts."}, {"owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "edited": false, "score": 0, "creation_date": 1512240446, "post_id": 29414791, "comment_id": 82180857, "body": "I wonder what a solution using Cell would look like. I&#39;m trying to rewrite his first code using Cells but I keep stumbling upon the original problem."}, {"owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "edited": false, "score": 0, "creation_date": 1512246798, "post_id": 29414791, "comment_id": 82182741, "body": "@Shepmaster That was fast, thanks! I figured you&#39;d have to derive <code>Copy, Clone</code> in order to use <code>get</code>.  I&#39;m writing an answer to share my findings as well, though I&#39;m only learning Rust."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": false, "score": 4, "last_activity_date": 1579715947, "last_edit_date": 1579715947, "creation_date": 1427983105, "answer_id": 29414791, "question_id": 29414171, "link": "https://stackoverflow.com/questions/29414171/whats-the-rust-way-to-modify-a-structure-within-nested-loops/29414791#29414791", "title": "What&#39;s the Rust way to modify a structure within nested loops?", "body": "<p>For what it's worth, I think the error message is telling you that your code has a logic problem. If you update the vector between iterations of the inner loop, then <em>those changes will be used for subsequent iterations</em>. Let's look at a smaller example where we compute the windowed-average of an array item and its neighbors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[2, 0, 2, 0, 2] // input\n[2/3, 4/3, 2/3, 4/3, 2/3] // expected output (out-of-bounds counts as 0)\n\n[2/3, 0,      2, 0, 2] // input after round 1\n[2/3, 8/9,    2, 0, 2] // input after round 2\n[2/3, 8/9, 26/9, 0, 2] // input after round 3\n// I got bored here\n</code></pre>\n\n<p>I'd suggest computing the output into a temporary vector and then swap them:</p>\n\n<pre><code>#[derive(Debug)]\nstruct Body {\n    x: i16,\n    y: i16,\n    v: i16,\n}\n\nfn main() {\n    let mut bodies = vec![Body { x: 10, y: 10, v: 0 }, Body { x: 20, y: 30, v: 0 }];\n\n    for _ in 0..2 {\n        let next_bodies = bodies\n            .iter()\n            .map(|b| {\n                let next_v = bodies\n                    .iter()\n                    .fold(b.v, { |a, b_inner| a + b.x * b_inner.x });\n                Body { v: next_v, ..*b }\n            })\n            .collect();\n        bodies = next_bodies;\n    }\n\n    println!(\"{:?}\", bodies);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[Body { x: 10, y: 10, v: 600 }, Body { x: 20, y: 30, v: 1200 }]\n</code></pre>\n\n<p>If you really concerned about memory performance, you could create a total of two vectors, size them appropriately, then alternate between the two. The code would be uglier though.</p>\n\n<hr>\n\n<p>As Matthieu M. said, you <em>could</em> use <a href=\"https://doc.rust-lang.org/std/cell/struct.Cell.html\" rel=\"nofollow noreferrer\"><code>Cell</code></a> or <a href=\"https://doc.rust-lang.org/std/cell/struct.RefCell.html\" rel=\"nofollow noreferrer\"><code>RefCell</code></a>, which both grant you inner mutability:</p>\n\n<pre><code>use std::cell::Cell;\n\n#[derive(Debug, Copy, Clone)]\nstruct Body {\n    x: i16,\n    y: i16,\n    v: i16,\n}\n\nfn main() {\n    let bodies = vec![\n        Cell::new(Body { x: 10, y: 10, v: 0 }),\n        Cell::new(Body { x: 20, y: 30, v: 0 }),\n    ];\n\n    for _ in 0..2 {\n        for b_outer_cell in &amp;bodies {\n            let mut b_outer = b_outer_cell.get();\n\n            let mut a = b_outer.v;\n            for b_inner in &amp;bodies {\n                let b_inner = b_inner.get();\n                a = a + b_outer.x * b_inner.x;\n            }\n            b_outer.v = a;\n            b_outer_cell.set(b_outer);\n        }\n    }\n\n    println!(\"{:?}\", bodies);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>[Cell { value: Body { x: 10, y: 10, v: 600 } }, Cell { value: Body { x: 20, y: 30, v: 1200 } }]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "edited": false, "score": 1, "creation_date": 1512327587, "post_id": 30436692, "comment_id": 82201990, "body": "Just want to point out that these changes may not reflect the original intent. Of course, the end result is the same in both cases, but the stdout is slightly different."}], "tags": [], "owner": {"reputation": 222, "user_id": 4437212, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/aa3211a9ea6f971f486ae13b70d4623d?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/4437212/chris"}, "is_accepted": false, "score": 1, "last_activity_date": 1512246320, "last_edit_date": 1512246320, "creation_date": 1432551248, "answer_id": 30436692, "question_id": 29414171, "link": "https://stackoverflow.com/questions/29414171/whats-the-rust-way-to-modify-a-structure-within-nested-loops/30436692#30436692", "title": "What&#39;s the Rust way to modify a structure within nested loops?", "body": "<p>I decided to split the structure in one that is used as a base for the calculation (input) in the inner loop (<code>b_inner</code>) and one that gathers the results (output). After the inner loop finished, the input structure is updated in the outer loop (<code>b_outer</code>) and calculation starts with the next body.</p>\n\n<p>What's now not so nice that I have to deal with two structures and you don't see their relation from the declaration.</p>\n\n<pre><code>#[derive(Debug)]\nstruct Body {\n    x: i16,\n    y: i16,\n}\n\nstruct Velocity {\n    vx: i16,\n}\n\nfn main() {\n    let mut bodies = Vec::&lt;Body&gt;::new();\n    let mut velocities = Vec::&lt;Velocity&gt;::new();\n\n    bodies.push(Body { x: 10, y: 10 });\n    bodies.push(Body { x: 20, y: 30 });\n    velocities.push(Velocity { vx: 0 });\n    velocities.push(Velocity { vx: 0 });\n\n    // keep it simple and loop only twice\n    for i in 0..2 {\n        println!(\"Turn {}\", i);\n        for (i, b_outer) in bodies.iter().enumerate() {\n            println!(\"x:{}, y:{}, v:{}\", b_outer.x, b_outer.y, velocities[i].vx);\n            let v = velocities.get_mut(i).unwrap();\n            let mut a = v.vx;\n            for b_inner in bodies.iter() {\n                // for simplicity I ignore here to continue in case b_outer == b_inner\n                // just do some calculation\n                a = a + b_outer.x * b_inner.x;\n                println!(\"    x:{}, y:{}, v:{}, a:{}\", b_inner.x, b_inner.y, v.vx, a);\n            }\n            v.vx = a;\n        }\n    }\n\n    println!(\"{:?}\", bodies);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>[Body { x: 10, y: 10 }, Body { x: 20, y: 30 }]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1512313791, "post_id": 47612625, "comment_id": 82197411, "body": "Seems reasonable to me. This has the benefit of being very explicit about exactly what is able to be changed during the iteration."}], "tags": [], "owner": {"reputation": 2463, "user_id": 1803069, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b4d27561d9a686ce55dea86df69c4d26?s=128&d=identicon&r=PG", "display_name": "Ricardo Pieper", "link": "https://stackoverflow.com/users/1803069/ricardo-pieper"}, "is_accepted": false, "score": 2, "last_activity_date": 1512313740, "last_edit_date": 1512313740, "creation_date": 1512248892, "answer_id": 47612625, "question_id": 29414171, "link": "https://stackoverflow.com/questions/29414171/whats-the-rust-way-to-modify-a-structure-within-nested-loops/47612625#47612625", "title": "What&#39;s the Rust way to modify a structure within nested loops?", "body": "<p>I know the question is like 2 years old, but I got curious about it.</p>\n\n<p>This C# program produces the original desired output:</p>\n\n<pre><code>var bodies = new[] { new Body { X = 10, Y = 10, V = 0 },\n                     new Body { X = 20, Y = 30, V = 0 } };\n\nfor (int i = 0; i &lt; 2; i++)\n{\n    Console.WriteLine(\"Turn {0}\", i);\n\n    foreach (var bOuter in bodies)\n    {\n        Console.WriteLine(\"x:{0}, y:{1}, v:{2}\", bOuter.X, bOuter.Y, bOuter.V);\n        var a = bOuter.V;\n        foreach (var bInner in bodies)\n        {\n            a = a + bOuter.X * bInner.X;\n            Console.WriteLine(\"    x:{0}, y:{1}, v:{2}, a:{3}\", bInner.X, bInner.Y, bInner.V, a);\n        }\n        bOuter.V = a;\n    }\n}\n</code></pre>\n\n<p>Since only <code>v</code> is ever changed, we <em>could</em> change the struct to something like this:</p>\n\n<pre><code>struct Body {\n    x: i16,\n    y: i16,\n    v: Cell&lt;i16&gt;,\n}\n</code></pre>\n\n<p>Now I'm able to mutate <code>v</code>, and the program becomes:</p>\n\n<pre><code>// keep it simple and loop only twice\nfor i in 0..2 {\n    println!(\"Turn {}\", i);\n    for b_outer in bodies.iter() {\n\n        let mut a = b_outer.v.get();\n\n        println!(\"x:{}, y:{}, v:{}\", b_outer.x, b_outer.y, a);\n        for b_inner in bodies.iter() {\n\n            a = a + (b_outer.x * b_inner.x);\n\n            println!(\n                \"    x:{}, y:{}, v:{}, a:{}\",\n                b_inner.x,\n                b_inner.y,\n                b_inner.v.get(),\n                a\n            );\n        }\n\n        b_outer.v.set(a);\n    }\n}\n</code></pre>\n\n<p>It produces the same output as the C# program above. The \"downside\" is that whenever you want to work with <code>v</code>, you need use <code>get()</code> or <code>into_inner()</code>. There may be other downsides I'm not aware of.</p>\n"}], "owner": {"reputation": 222, "user_id": 4437212, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/aa3211a9ea6f971f486ae13b70d4623d?s=128&d=identicon&r=PG&f=1", "display_name": "Chris", "link": "https://stackoverflow.com/users/4437212/chris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2263, "favorite_count": 2, "answer_count": 3, "score": 4, "last_activity_date": 1579715947, "creation_date": 1427981223, "last_edit_date": 1512245762, "question_id": 29414171, "link": "https://stackoverflow.com/questions/29414171/whats-the-rust-way-to-modify-a-structure-within-nested-loops", "title": "What&#39;s the Rust way to modify a structure within nested loops?", "body": "<p>Given is an array of bodies that interact in some way with each other. As a newbie I approached it as I would do it in some other language:</p>\n\n<pre><code>struct Body {\n    x: i16,\n    y: i16,\n    v: i16,\n}\n\nfn main() {\n    let mut bodies = Vec::&lt;Body&gt;::new();\n\n    bodies.push(Body { x: 10, y: 10, v: 0 });\n    bodies.push(Body { x: 20, y: 30, v: 0 });\n\n    // keep it simple and loop only twice\n    for i in 0..2 {\n        println!(\"Turn {}\", i);\n        for b_outer in bodies.iter() {\n            println!(\"x:{}, y:{}, v:{}\", b_outer.x, b_outer.y, b_outer.v);\n            let mut a = b_outer.v;\n            for b_inner in bodies.iter() {\n                // for simplicity I ignore here to continue in case b_outer == b_inner\n                // just do some calculation\n                a = a + b_outer.x * b_inner.x;\n                println!(\n                    \"    x:{}, y:{}, v:{}, a:{}\",\n                    b_inner.x,\n                    b_inner.y,\n                    b_inner.v,\n                    a\n                );\n            }\n            // updating b_outer.v fails\n            b_outer.v = a;\n        }\n    }\n}\n</code></pre>\n\n<p>Updating of <code>b_outer.v</code> after the inner loop has finished fails:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0594]: cannot assign to immutable field `b_outer.v`\n  --&gt; src/main.rs:32:13\n   |\n32 |             b_outer.v = a;\n   |             ^^^^^^^^^^^^^ cannot mutably borrow immutable field\n</code></pre>\n\n<p>Making <code>b_outer</code> mutable:</p>\n\n<pre><code>for b_outer in bodies.iter_mut() { ...\n</code></pre>\n\n<p>doesn't work either:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `bodies` as mutable because it is also borrowed as immutable\n  --&gt; src/main.rs:19:32\n   |\n16 |             for b_outer in bodies.iter() {\n   |                            ------ immutable borrow occurs here\n...\n19 |                 for b_inner in bodies.iter_mut() {\n   |                                ^^^^^^ mutable borrow occurs here\n...\n33 |             }\n   |             - immutable borrow ends here\n</code></pre>\n\n<p>Now I'm stuck. What's the Rust approach to update <code>b_outer.v</code> after the inner loop has finished?</p>\n"}, {"tags": ["rust", "traits"], "answers": [{"tags": [], "owner": {"reputation": 96489, "user_id": 788207, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/KQmlY.jpg?s=128&g=1", "display_name": "Vladimir Matveev", "link": "https://stackoverflow.com/users/788207/vladimir-matveev"}, "is_accepted": true, "score": 6, "last_activity_date": 1427969659, "creation_date": 1427969659, "answer_id": 29410390, "question_id": 29410133, "link": "https://stackoverflow.com/questions/29410133/cant-bring-trait-methods-into-scope/29410390#29410390", "title": "Can&#39;t bring trait methods into scope", "body": "<p>The answer is already in the error:</p>\n\n<blockquote>\n  <p>type std::io::cursor::Cursor&lt;&amp;[u8; 5]> does not implement any method\n  in scope named read_into_string</p>\n</blockquote>\n\n<p>The problem is, <code>Cursor&lt;&amp;[u8; 5]&gt;</code> does not implement <code>Read</code> because the wrapped type is pointer to a fixed-size array instead of a slice, and so it does not implement your trait either. I guess something along these lines should work:</p>\n\n<pre><code>#[test]\nfn test () {\n    let bytes = b\"hello\";\n    let mut input = Cursor::new(bytes as &amp;[u8]);\n    let s = input.read_into_string();\n    assert_eq!(s, \"hello\");\n}\n</code></pre>\n\n<p>This way <code>input</code> is of type <code>Cursor&lt;&amp;[u8]&gt;</code> which implements <code>Read</code> and so should implement your trait too.</p>\n"}], "owner": {"reputation": 21581, "user_id": 288703, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/1bb69b75c5e73a7c9f4ebbc4835d622f?s=128&d=identicon&r=PG", "display_name": "Christoph", "link": "https://stackoverflow.com/users/288703/christoph"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 506, "favorite_count": 0, "accepted_answer_id": 29410390, "answer_count": 1, "score": 3, "last_activity_date": 1427969659, "creation_date": 1427968865, "question_id": 29410133, "link": "https://stackoverflow.com/questions/29410133/cant-bring-trait-methods-into-scope", "title": "Can&#39;t bring trait methods into scope", "body": "<p>I have this <code>lib.rs</code> file.</p>\n\n<pre><code>use std::io::{ Result, Read };\n\npub trait ReadExt: Read {\n    /// Read all bytes until EOF in this source, returning them as a new `Vec`.\n    ///\n    /// See `read_to_end` for other semantics.\n    fn read_into_vec(&amp;mut self) -&gt; Result&lt;Vec&lt;u8&gt;&gt; {\n        let mut buf = Vec::new();\n        let res = self.read_to_end(&amp;mut buf);\n        res.map(|_| buf)\n    }\n\n    /// Read all bytes until EOF in this source, returning them as a new buffer.\n    ///\n    /// See `read_to_string` for other semantics.\n    fn read_into_string(&amp;mut self) -&gt; Result&lt;String&gt; {\n        let mut buf = String::new();\n        let res = self.read_to_string(&amp;mut buf);\n        res.map(|_| buf)\n    }\n}\n\nimpl&lt;T&gt; ReadExt for T where T: Read {}\n</code></pre>\n\n<p>And now I want to write tests for it in a separate <code>test/lib.rs</code></p>\n\n<pre><code>extern crate readext;\n\nuse std::io::{Read,Cursor};\nuse readext::ReadExt;\n\n#[test]\nfn test () {\n    let bytes = b\"hello\";\n    let mut input = Cursor::new(bytes);\n    let s = input.read_into_string();\n    assert_eq!(s, \"hello\");\n}\n</code></pre>\n\n<p>But Rust keeps telling me</p>\n\n<p>type <code>std::io::cursor::Cursor&lt;&amp;[u8; 5]&gt;</code> does not implement any method    in scope named <code>read_into_string</code></p>\n\n<p>I don't know why. Obviously I'm <code>use</code>ing it already. Confused.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 14720, "user_id": 2074608, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WzNwl.png?s=128&g=1", "display_name": "Qantas 94 Heavy", "link": "https://stackoverflow.com/users/2074608/qantas-94-heavy"}, "edited": false, "score": 6, "creation_date": 1427942042, "post_id": 29403920, "comment_id": 46983286, "body": "Are you referring to the statement <code>extern crate foo;</code>? Crates and modules are separate concepts in Rust, you might want to take a look at <a href=\"http://doc.rust-lang.org/1.0.0-alpha.2/book/crates-and-modules.html\" rel=\"nofollow noreferrer\">&quot;Basic terminology: Crates and Modules&quot;</a> which explains the difference between the two (I personally find the examples below overly verbose though)."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user395760"}, "edited": false, "score": 3, "creation_date": 1427973109, "post_id": 29404692, "comment_id": 46995953, "body": "Without <code>use</code>, we couldn&#39;t even have <code>std</code> as the facade it is. Either we&#39;d have a single monolithic standard library crate, or everyone would be dealing with the fact that <code>String</code> is actually <code>collections::string::String</code>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 104, "last_activity_date": 1572877512, "last_edit_date": 1572877512, "creation_date": 1427946703, "answer_id": 29404692, "question_id": 29403920, "link": "https://stackoverflow.com/questions/29403920/whats-the-difference-between-use-and-extern/29404692#29404692", "title": "What&#39;s the difference between use and extern?", "body": "<p><code>extern crate foo</code> indicates that you want to link against an external library and brings the top-level crate name into scope (equivalent to <code>use foo</code>). As of Rust 2018, in most cases <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"noreferrer\">you won't need to use <code>extern crate</code> anymore</a> because Cargo informs the compiler about what crates are present. (There are <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html#an-exception\" rel=\"noreferrer\">one or two exceptions</a>)</p>\n\n<p><code>use bar</code> is a shorthand for referencing fully-qualified symbols.</p>\n\n<p>Theoretically, the language doesn't <em>need</em> <code>use</code> \u2014 you could always just fully-qualify the names, but typing <code>std::collections::HashMap.new(...)</code> would get very tedious! Instead, you can just type <code>use std::collections::HashMap</code> once and then <code>HashMap</code> will refer to that.</p>\n"}, {"comments": [{"owner": {"reputation": 5962, "user_id": 3873510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/YpJMi.jpg?s=128&g=1", "display_name": "Paul Razvan Berg", "link": "https://stackoverflow.com/users/3873510/paul-razvan-berg"}, "edited": false, "score": 0, "creation_date": 1583695096, "post_id": 54378840, "comment_id": 107194870, "body": "Even if it&#39;s not necessary, isn&#39;t there a benefit in separating external crates from standard ones? Like <code>extern crate failure;</code> but <code>use std::error::Error</code>"}, {"owner": {"reputation": 776, "user_id": 3665044, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/223bb4860ddea663213c495e46a58415?s=128&d=identicon&r=PG&f=1", "display_name": "dropbear", "link": "https://stackoverflow.com/users/3665044/dropbear"}, "reply_to_user": {"reputation": 5962, "user_id": 3873510, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/YpJMi.jpg?s=128&g=1", "display_name": "Paul Razvan Berg", "link": "https://stackoverflow.com/users/3873510/paul-razvan-berg"}, "edited": false, "score": 2, "creation_date": 1583784555, "post_id": 54378840, "comment_id": 107225616, "body": "@PaulRazvanBerg You mean just to clarify which imports are from the standard library and which are external imports? Not to me at least, and I don&#39;t think that&#39;s recommended either. But I think you should structure your code the way you feel makes to most sense to you."}], "tags": [], "owner": {"reputation": 776, "user_id": 3665044, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/223bb4860ddea663213c495e46a58415?s=128&d=identicon&r=PG&f=1", "display_name": "dropbear", "link": "https://stackoverflow.com/users/3665044/dropbear"}, "is_accepted": false, "score": 61, "last_activity_date": 1561093962, "last_edit_date": 1561093962, "creation_date": 1548509478, "answer_id": 54378840, "question_id": 29403920, "link": "https://stackoverflow.com/questions/29403920/whats-the-difference-between-use-and-extern/54378840#54378840", "title": "What&#39;s the difference between use and extern?", "body": "<p>The accepted answer was correct at the time of writing. It's however no longer correct.\n<code>extern crate</code> is almost never needed since Rust 2018.</p>\n\n<p>You're now only required to add external dependencies to your Cargo.toml.</p>\n\n<p><code>use</code> works the same as before.</p>\n\n<p>Read more in the <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"noreferrer\">official documentation</a>.</p>\n\n<p>Edit: The accepted answer has now been edited to correctly reflect the changes in Rust 2018.</p>\n"}], "owner": {"reputation": 1561, "user_id": 4389183, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-P2Zfjta6JN4/AAAAAAAAAAI/AAAAAAAAADU/K4cwO3iCqNE/photo.jpg?sz=128", "display_name": "maralla", "link": "https://stackoverflow.com/users/4389183/maralla"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 17755, "favorite_count": 16, "accepted_answer_id": 29404692, "answer_count": 2, "score": 102, "last_activity_date": 1572877512, "creation_date": 1427940828, "last_edit_date": 1427946441, "question_id": 29403920, "link": "https://stackoverflow.com/questions/29403920/whats-the-difference-between-use-and-extern", "title": "What&#39;s the difference between use and extern?", "body": "<p>I'm new to Rust. I think that <code>use</code> is used to import identifiers into the current scope and <code>extern</code> is used to declare an external module. But this understanding (maybe wrong) doesn't make any sense to me. Can someone explain why Rust has these two concepts and what are the suitable cases to use them?</p>\n"}]