[{"tags": ["rust"], "comments": [{"owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "edited": false, "score": 2, "creation_date": 1561577717, "post_id": 56779847, "comment_id": 100114821, "body": "You do get a warning: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1effcd846ba29bb3bc5abe89d4204908\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> . It&#39;s easier to see once you address the warnings about naming:  <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b8f7f5a4053b159695d22f3dac179de2\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561577996, "post_id": 56779847, "comment_id": 100114956, "body": "Specifically: <i>warning[E0170]: pattern binding <code>one</code> is named the same as one of the variants of the type <code>MyEnum</code></i> .... <i>help: to match on the variant, qualify the path: <code>MyEnum::one</code></i>"}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "edited": false, "score": 0, "creation_date": 1561578514, "post_id": 56779847, "comment_id": 100115172, "body": "I know it shows a warning, my question is why it compiles?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561578795, "post_id": 56779847, "comment_id": 100115190, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/23810091/155423\">Confusing unreachable pattern error</a>; <a href=\"https://stackoverflow.com/q/28225958/155423\">Why is this match pattern unreachable when using non-literal patterns?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/56779847/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561579452, "post_id": 56779847, "comment_id": 100115266, "body": "It is indeed answered in that question @Shepmaster. Thank you"}], "owner": {"reputation": 1019, "user_id": 684562, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/4T5zR.jpg?s=128&g=1", "display_name": "Augusto", "link": "https://stackoverflow.com/users/684562/augusto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "closed_date": 1561621187, "answer_count": 0, "score": 0, "last_activity_date": 1561577876, "creation_date": 1561577457, "last_edit_date": 1561577876, "question_id": 56779847, "link": "https://stackoverflow.com/questions/56779847/why-does-the-compiler-not-complain-when-you-dont-write-the-full-path-for-enum-p", "closed_reason": "Duplicate", "title": "Why does the compiler not complain when you don&#39;t write the full path for enum pattern matching?", "body": "<p>When I define a enum like this:</p>\n\n<pre><code>enum MyEnum {\n    one,\n    two,\n    three,\n}\n</code></pre>\n\n<p>and match like this:</p>\n\n<pre><code>let n = MyEnum::two;\nmatch n {\n    one =&gt; println!(\"one\"),\n    two =&gt; println!(\"one\"),\n    three =&gt; println!(\"three\"),\n}\n</code></pre>\n\n<p>it will always print <code>one</code>. The correct way to match would be like this:</p>\n\n<pre><code>let n = MyEnum::two;\nmatch n {\n    MyEnum::one =&gt; println!(\"one\"),\n    MyEnum::two =&gt; println!(\"one\"),\n    MyEnum::three =&gt; println!(\"three\"),\n}\n</code></pre>\n\n<p>Why the compiler does not show an error if I'm clearly matching my enum incorrectly?  </p>\n"}, {"tags": ["generics", "rust", "traits"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561573890, "post_id": 56778877, "comment_id": 100113232, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/49952612/155423\">Is it possible to have a generic function on a trait?</a>; <a href=\"https://stackoverflow.com/q/42620022/155423\">Why does a generic method inside a trait require trait object to be sized?</a>; <a href=\"https://stackoverflow.com/q/29202698/155423\">How to use a trait object to refer to struct that has generic methods</a>; etc. If not, please <b><a href=\"https://stackoverflow.com/posts/56778877/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561573915, "post_id": 56778877, "comment_id": 100113243, "body": "TL;DR: no you cannot have a trait object with generic methods, <i>period</i>. Make things more concrete."}, {"owner": {"reputation": 5821, "user_id": 634135, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/e663a833765a8e904f7fe53827cc376e?s=128&d=identicon&r=PG", "display_name": "cobie", "link": "https://stackoverflow.com/users/634135/cobie"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561576424, "post_id": 56778877, "comment_id": 100114319, "body": "decided to go with a function signature such as <code>pub fn find_default_credentials( ) -&gt; Result&lt;TypeOr&lt;ServiceAccountAccess&lt;hyper::Client&gt;, GCETokenProvider&gt;, ReadCredentialError&gt; </code>"}], "owner": {"reputation": 5821, "user_id": 634135, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/e663a833765a8e904f7fe53827cc376e?s=128&d=identicon&r=PG", "display_name": "cobie", "link": "https://stackoverflow.com/users/634135/cobie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 64, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1561573767, "creation_date": 1561573085, "last_edit_date": 1561573767, "question_id": 56778877, "link": "https://stackoverflow.com/questions/56778877/how-do-i-return-a-trait-object-with-generic-methods", "title": "How do I return a trait object with generic methods?", "body": "<p>I am using <a href=\"https://crates.io/crates/yup_oauth2\" rel=\"nofollow noreferrer\">yup_oauth2</a> and attempting to create a <code>Token</code> source that implements the <code>GetToken</code> trait for use on Google Compute Engine.</p>\n\n<pre><code>pub trait GetToken {\n    fn token&lt;'b, I, T&gt;(&amp;mut self, scopes: I) -&gt; Result&lt;Token, Box&lt;Error&gt;&gt;\n    where\n        T: AsRef&lt;str&gt; + Ord + 'b,\n        I: IntoIterator&lt;Item = &amp;'b T&gt;;\n\n    fn api_key(&amp;mut self) -&gt; Option&lt;String&gt;;\n}\n</code></pre>\n\n<p>Depending on where the application is running, I want to resolve to different types that implement the above trait but the compiler is not happy because apparently traits with generics are not trait-object safe.</p>\n\n<p>What is the idiomatic way of solving such a problem?</p>\n"}, {"tags": ["rust", "iterator", "borrowing"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561570134, "post_id": 56778049, "comment_id": 100111587, "body": "Additionally, your <code>.filter().map()</code> should probably just be <code>.filter_map</code> and avoid the <code>unwrap</code>s."}, {"owner": {"reputation": 1025, "user_id": 3021309, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b70e762c0b1409c1f2ce8c994e89b783?s=128&d=identicon&r=PG&f=1", "display_name": "itmuckel", "link": "https://stackoverflow.com/users/3021309/itmuckel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561622014, "post_id": 56778049, "comment_id": 100126903, "body": "Sorry, my brain already melted, when I posted this. I provided a minimal example that doesn&#39;t compile, but I think shows, what I try to do. The other answers you linked, didn&#39;t helped me for this particular problem."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561911405, "post_id": 56778049, "comment_id": 100204986, "body": "I agree with the answer: if you want to return a new <code>Vec</code>, it doesn&#39;t need to be wrapped in any kind of <code>Ref*</code>. Why do you believe you want such a signature?"}, {"owner": {"reputation": 1025, "user_id": 3021309, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b70e762c0b1409c1f2ce8c994e89b783?s=128&d=identicon&r=PG&f=1", "display_name": "itmuckel", "link": "https://stackoverflow.com/users/3021309/itmuckel"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561925143, "post_id": 56778049, "comment_id": 100207840, "body": "@Shepmaster This is not about the <code>Vec</code>. I want to return mutable references to elements inside these vecs. And I don&#39;t see any way to do this. The answer creates a new <code>Vec</code> with new, copied elements, not references. If the caller changes a value in the returned <code>Vec</code>, this value won&#39;t change in <code>World</code>."}], "answers": [{"comments": [{"owner": {"reputation": 1025, "user_id": 3021309, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b70e762c0b1409c1f2ce8c994e89b783?s=128&d=identicon&r=PG&f=1", "display_name": "itmuckel", "link": "https://stackoverflow.com/users/3021309/itmuckel"}, "edited": false, "score": 0, "creation_date": 1561907458, "post_id": 56793034, "comment_id": 100204072, "body": "Now I got your code running and I found out, why it works: <code>Position</code> and <code>Velocity</code> in my example are <code>Copy</code>, but my actual types are not. Also I don&#39;t want to perform a copy there. I want to get real references to the values, that&#39;s why I want to return a kind of <code>RefCell</code>. The point of this function is that the caller can change values inside <code>World</code>."}, {"owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "reply_to_user": {"reputation": 1025, "user_id": 3021309, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b70e762c0b1409c1f2ce8c994e89b783?s=128&d=identicon&r=PG&f=1", "display_name": "itmuckel", "link": "https://stackoverflow.com/users/3021309/itmuckel"}, "edited": false, "score": 0, "creation_date": 1561925308, "post_id": 56793034, "comment_id": 100207877, "body": "You should decide what exactly you want to return. A vector of tuples containing references? An iterator may be even better."}, {"owner": {"reputation": 1025, "user_id": 3021309, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b70e762c0b1409c1f2ce8c994e89b783?s=128&d=identicon&r=PG&f=1", "display_name": "itmuckel", "link": "https://stackoverflow.com/users/3021309/itmuckel"}, "edited": false, "score": 0, "creation_date": 1561925947, "post_id": 56793034, "comment_id": 100208006, "body": "As long as the caller can change values in  <code>World</code> through the return value, it doesn&#39;t matter. <code>Iterator</code>, <code>Vector</code>, <code>Tuple</code>... whatever solves the problem. I tried a lot of approaches using <code>RefMut::map</code>, but none of them worked. <code>RefMut::map_split</code> has been added in 1.35 and does exactly the opposite of what I&#39;m trying to do. Something like <code>RefMut::merge</code> would be helpful here."}], "tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": false, "score": 1, "last_activity_date": 1561705300, "last_edit_date": 1561705300, "creation_date": 1561644910, "answer_id": 56793034, "question_id": 56778049, "link": "https://stackoverflow.com/questions/56778049/how-can-i-return-the-combination-of-two-borrowed-refcells/56793034#56793034", "title": "How can I return the combination of two borrowed RefCells?", "body": "<p>If you want to return a new <code>Vec</code>, then you don't need to wrap it in <code>RefMut</code> or <code>RefCell</code>:</p>\n\n<h2>Based on your code with <code>filter</code> and <code>map</code></h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn get_pos_vel(&amp;self) -&gt; Vec&lt;(Position, Velocity)&gt; {\n    let mut poses = self.positions.borrow_mut();\n    let mut vels = self.velocities.borrow_mut();\n\n    poses.iter_mut()\n        .zip(vels.iter_mut())\n        .filter(|(e1, e2)| e1.is_some() &amp;&amp; e2.is_some())\n        .map(|(e1, e2)| (e1.unwrap(), e2.unwrap()))\n        .collect()\n}\n</code></pre>\n\n<h2>Alternative with <code>filter_map</code></h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>poses.iter_mut()\n    .zip(vels.iter_mut())\n    .filter_map(|pair| match pair {\n        (Some(e1), Some(e2)) =&gt; Some((*e1, *e2)),\n        _ =&gt; None,\n    })\n    .collect()\n</code></pre>\n\n<p>You can wrap it in <code>RefCell</code> with <code>RefCell::new</code>, if you really want to, but I would leave it up to the user of the function to wrap it in whatever they need.</p>\n"}, {"tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 1, "last_activity_date": 1562025321, "last_edit_date": 1562025321, "creation_date": 1561963558, "answer_id": 56831064, "question_id": 56778049, "link": "https://stackoverflow.com/questions/56778049/how-can-i-return-the-combination-of-two-borrowed-refcells/56831064#56831064", "title": "How can I return the combination of two borrowed RefCells?", "body": "<p>You want to be able to modify the positions and velocities. If these have to be stored in two separate <code>RefCell</code>s, what about side-stepping the problem and using a callback to do the modification?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::RefCell;\n\nstruct World {\n    positions: RefCell&lt;Vec&lt;Option&lt;Position&gt;&gt;&gt;,\n    velocities: RefCell&lt;Vec&lt;Option&lt;Velocity&gt;&gt;&gt;,\n}\n\ntype Position = i32;\ntype Velocity = i32;\n\nimpl World {\n    pub fn new() -&gt; World {\n        World {\n            positions: RefCell::new(vec![Some(1), None, Some(2)]),\n            velocities: RefCell::new(vec![None, None, Some(1)]),\n        }\n    }\n\n    pub fn modify_pos_vel&lt;F: FnMut(&amp;mut Position, &amp;mut Velocity)&gt;(&amp;self, mut f: F) {\n        let mut poses = self.positions.borrow_mut();\n        let mut vels = self.velocities.borrow_mut();\n\n        poses\n            .iter_mut()\n            .zip(vels.iter_mut())\n            .filter_map(|pair| match pair {\n                (Some(e1), Some(e2)) =&gt; Some((e1, e2)),\n                _ =&gt; None,\n            })\n            .for_each(|pair| f(pair.0, pair.1))\n    }\n}\n\nfn main() {\n    let world = World::new();\n\n    world.modify_pos_vel(|position, velocity| {\n        // Some modification goes here, for example:\n        *position += *velocity;\n    });\n}\n</code></pre>\n"}], "owner": {"reputation": 1025, "user_id": 3021309, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/b70e762c0b1409c1f2ce8c994e89b783?s=128&d=identicon&r=PG&f=1", "display_name": "itmuckel", "link": "https://stackoverflow.com/users/3021309/itmuckel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "accepted_answer_id": 56831064, "answer_count": 2, "score": -1, "last_activity_date": 1562025321, "creation_date": 1561569418, "last_edit_date": 1561907506, "question_id": 56778049, "link": "https://stackoverflow.com/questions/56778049/how-can-i-return-the-combination-of-two-borrowed-refcells", "title": "How can I return the combination of two borrowed RefCells?", "body": "<p>I have a struct with two <code>Vec</code>s wrapped in <code>RefCell</code>s. I want to have a method on that struct that combines the two vectors and returns them as a new <code>RefCell</code> or <code>RefMut</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::{RefCell, RefMut};\n\nstruct World {\n    positions: RefCell&lt;Vec&lt;Option&lt;Position&gt;&gt;&gt;,\n    velocities: RefCell&lt;Vec&lt;Option&lt;Velocity&gt;&gt;&gt;,\n}\n\ntype Position = i32;\ntype Velocity = i32;\n\nimpl World {\n    pub fn new() -&gt; World {\n        World {\n            positions: RefCell::new(vec![Some(1), None, Some(2)]),\n            velocities: RefCell::new(vec![None, None, Some(1)]),\n        }\n    }\n\n    pub fn get_pos_vel(&amp;self) -&gt; RefMut&lt;Vec&lt;(Position, Velocity)&gt;&gt; {\n        let mut poses = self.positions.borrow_mut();\n        let mut vels = self.velocities.borrow_mut();\n\n        poses\n            .iter_mut()\n            .zip(vels.iter_mut())\n            .filter(|(e1, e2)| e1.is_some() &amp;&amp; e2.is_some())\n            .map(|(e1, e2)| (e1.unwrap(), e2.unwrap()))\n            .for_each(|elem| println!(\"{:?}\", elem));\n    }\n}\n\nfn main() {\n    let world = World::new();\n\n    world.get_pos_vel();\n}\n</code></pre>\n\n<p>How would I return the zipped contents of the vectors as a new <code>RefCell</code>? Is that possible?</p>\n\n<p>I know there is <code>RefMut::map()</code> and I tried to nest two calls to <code>map</code>, but didn't succeed with that.</p>\n"}, {"tags": ["struct", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561565220, "post_id": 56776793, "comment_id": 100109339, "body": "By the way, idiomatic Rust uses <code>snake_case</code> for variables, methods, macros, fields and modules; <code>UpperCamelCase</code> for types and enum variants; and <code>SCREAMING_SNAKE_CASE</code> for statics and constants. Please adhere to these idioms."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561565420, "post_id": 56776793, "comment_id": 100109444, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. We can&#39;t tell what imports are present in the code, and attempting to guess produces a compiler error, not the output you are asking about. It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/56776793/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561565502, "post_id": 56776793, "comment_id": 100109482, "body": "See also <a href=\"https://stackoverflow.com/q/27791532/155423\">How do I create a global, mutable singleton?</a>. Besides not working, your code would be horribly broken once threads come into play."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561566170, "post_id": 56776793, "comment_id": 100109809, "body": "Nope, why do you ask?"}, {"owner": {"reputation": 333, "user_id": 286285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/amYa5.png?s=128&g=1", "display_name": "Neil", "link": "https://stackoverflow.com/users/286285/neil"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561566467, "post_id": 56776793, "comment_id": 100109968, "body": "Well today I am learning about the nuances of global structs and memory references in rust, it seems you need working code and unicorns to fill up a multi-threaded app that doesn&#39;t exist."}, {"owner": {"reputation": 333, "user_id": 286285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/amYa5.png?s=128&g=1", "display_name": "Neil", "link": "https://stackoverflow.com/users/286285/neil"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561566722, "post_id": 56776793, "comment_id": 100110079, "body": "I would appreciate a more technical answer on why the const usage creates the new allocation.    What is happening at the stack  / heap level to make this so in the different scopes."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1561567018, "post_id": 56776793, "comment_id": 100110222, "body": "@Neil that nothing link to the &quot;stack&quot; or the &quot;heap&quot;, the duplicate already answer the technical part. const in Rust are not what you think use static."}, {"owner": {"reputation": 333, "user_id": 286285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/amYa5.png?s=128&g=1", "display_name": "Neil", "link": "https://stackoverflow.com/users/286285/neil"}, "edited": false, "score": 0, "creation_date": 1561567738, "post_id": 56776793, "comment_id": 100110502, "body": "Agreed,  I had static working earlier but it led wrapping usage blocks as unsafe due to the &quot;mutable static&quot; safety issue.    I&#39;ll look at passing mutable references and build it in the main."}], "owner": {"reputation": 333, "user_id": 286285, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/amYa5.png?s=128&g=1", "display_name": "Neil", "link": "https://stackoverflow.com/users/286285/neil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 224, "favorite_count": 0, "closed_date": 1561565245, "answer_count": 0, "score": 0, "last_activity_date": 1561565299, "creation_date": 1561564471, "last_edit_date": 1561564844, "question_id": 56776793, "link": "https://stackoverflow.com/questions/56776793/rust-global-const-of-struct-not-persisting-pointer-address", "closed_reason": "Duplicate", "title": "Rust global const of struct not persisting pointer address", "body": "<p>I am building a struct called DATAMAP which is designed to hold a vector of TCPStreams.  </p>\n\n<p>After I declare the struct, I proceed to instantiate a global const reference to it. </p>\n\n<p>The issue I am having is that the global const pointer address seems to be changing from one method call to the next. Note there are no assignments, just referenced usage. I am simply trying to use the struct and access my Vec called 'connections'. Below are the declarations:</p>\n\n<pre><code>//DECLARATIONS\n\nstruct datamap {\n    connections: Vec&lt;TcpStream&gt;,\n}\n\nimpl datamap {\n    fn push(&amp;mut self, conn: TcpStream) {\n        println!(\"Adding connection to vec\");\n        self.connections.push(conn);\n    }\n    fn len(self) -&gt; usize {\n        return self.connections.len();\n    }\n}\n\nimpl fmt::Pointer for datamap {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        write!(f, \"{:p}\", self as *const datamap)\n    }\n}\n\n//  CREATE A STRUCT - Note we are global scope here\nconst app: datamap = datamap {\n    connections: Vec::new(),\n};\n\n//  MAIN\nfn main() {\n    println!(\"The address of the app struct is {:p}\", app);\n    some_other_method(); // call another scope method to see issue\n}\n\nfn some_other_method() {\n    println!(\"The address of the app struct is {:p}\", app);\n}\n</code></pre>\n\n<p>The output will end up like:</p>\n\n<p><strong>The address of the app struct is 0x7ffee8613180</strong><br>\n<strong>The address of the app struct is 0x7ffee8612fb8</strong></p>\n\n<p>How is the const getting a new address?  </p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561554247, "post_id": 56773443, "comment_id": 100102468, "body": "How am I <i>so bad at searching\u203d</i> What is this, the third duplicate this week?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1561554443, "post_id": 56773443, "comment_id": 100102572, "body": "Granted, the site&#39;s search engine isn&#39;t very good. If you&#39;re searching on SO directly, I would recommend trying another search engine (Duck Duck Go or Google)."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561554515, "post_id": 56773443, "comment_id": 100102619, "body": "<i>I want to swap the first and third items of a vector</i> \u2014 <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.swap\" rel=\"nofollow noreferrer\"><code>swap</code></a>"}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561554553, "post_id": 56773443, "comment_id": 100102633, "body": "@Shepmaster This was merely a MCVE. It&#39;s the first that occurred to me\u2026 and also to the writer of the duplicate question, unsurprisingly."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561555080, "post_id": 56773443, "comment_id": 100102988, "body": "I have <code>r foo</code> as a quick search in Firefox bound to <code>https:&#47;&#47;www.google.com&#47;search?q=site:stackoverflow.com rust foo</code>. In <a href=\"https://www.google.com/search?q=site:stackoverflow.com%20rust%20How%20can%20I%20take%20two%20mutable%20borrows%20from%20different%20parts%20of%20a%20vector\" rel=\"nofollow noreferrer\">this case</a>, your question is first (exact match and all that), The next results (<a href=\"https://stackoverflow.com/q/48420218/155423\">1</a>; <a href=\"https://stackoverflow.com/q/30073684/155423\">2</a>; <a href=\"https://stackoverflow.com/q/26409316/155423\">3</a>; <a href=\"https://stackoverflow.com/q/25531963/155423\">4</a>) are all valid."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561555441, "post_id": 56773443, "comment_id": 100103254, "body": "@Shepmaster Same with DDG\u2026 Never mind; I&#39;m just bad at searching."}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 63, "favorite_count": 0, "closed_date": 1561554300, "answer_count": 0, "score": 2, "last_activity_date": 1561554065, "creation_date": 1561554065, "question_id": 56773443, "link": "https://stackoverflow.com/questions/56773443/how-can-i-take-two-mutable-borrows-from-different-parts-of-a-vector", "closed_reason": "Duplicate", "title": "How can I take two mutable borrows from different parts of a vector?", "body": "<p>Let's say I want to swap the first and third items of a vector using a bit-twiddling hack:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![0, 1, 2, 3, 4, 5, 6, 7];\n\n    {\n        let first_item = &amp;mut v[0];\n        let third_item = &amp;mut v[2];\n        *first_item ^= *third_item;\n        *third_item ^= *first_item;\n        *first_item ^= *third_item;\n    }\n\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Rust doesn't like this:</p>\n\n<blockquote>\n<pre><code>   Compiling mcve v0.0.0 (/home/wizzwizz4/rust/mcve)\nerror[E0499]: cannot borrow `v` as mutable more than once at a time\n --&gt; src/main.rs:6:31\n  |\n5 |         let first_item = &amp;mut v[0];\n  |                               - first mutable borrow occurs here\n6 |         let third_item = &amp;mut v[2];\n  |                               ^ second mutable borrow occurs here\n7 |         *first_item ^= *third_item;\n  |         -------------------------- first borrow later used here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0499`.\nerror: Could not compile `mcve`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n</blockquote>\n\n<p>That's fine, because I only really want to change <code>v[0]</code>:</p>\n\n<pre><code>fn main() {\n    let mut v = vec![0, 1, 2, 3, 4, 5, 6, 7];\n\n    {\n        let first_item = &amp;mut v[0];\n        *first_item = v[2];\n    }\n\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>I'm stuck again:</p>\n\n<blockquote>\n<pre><code>   Compiling mcve v0.0.1 (/home/wizzwizz4/rust/mcve)\nerror[E0502]: cannot borrow `v` as immutable because it is also borrowed as mutable\n --&gt; src/main.rs:6:23\n  |\n5 |         let first_item = &amp;mut v[0];\n  |                               - mutable borrow occurs here\n6 |         *first_item = v[2];\n  |         --------------^---\n  |         |             |\n  |         |             immutable borrow occurs here\n  |         mutable borrow later used here\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0502`.\nerror: Could not compile `mcve`.\n\nTo learn more, run the command again with --verbose.\n</code></pre>\n</blockquote>\n\n<p>The thing is, <em>I</em> know that both of those borrows are from different parts of the vector. Specifically, I know that the first index is <code>&lt;= 1</code>, and the second index is <code>&gt; 1</code>.</p>\n\n<p>How do I tell the Rust compiler this?</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 3374, "user_id": 1063250, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/50ce9a9e3c79bf98919e99a96de7b05c?s=128&d=identicon&r=PG", "display_name": "Abhijit-K", "link": "https://stackoverflow.com/users/1063250/abhijit-k"}, "edited": false, "score": 1, "creation_date": 1561549970, "post_id": 56771500, "comment_id": 100099778, "body": "Try <code>std::io::Error::new(ErrorKind::Other, e)</code>"}, {"owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "edited": false, "score": 0, "creation_date": 1561550634, "post_id": 56771500, "comment_id": 100100137, "body": "You can try to <a href=\"https://docs.rs/failure/0.1.5/failure/struct.Context.html\" rel=\"nofollow noreferrer\">context</a> your errors with failure crate"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561552162, "post_id": 56771500, "comment_id": 100101130, "body": "What is <code>ResultError</code>? Where does <code>PayloadError</code> come from? Where does <code>MultipartError</code> come from?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561552182, "post_id": 56771500, "comment_id": 100101138, "body": "<i>the two errors are external traits</i> \u2014 <code>io::Error</code> is not a trait."}], "answers": [{"tags": [], "owner": {"reputation": 611, "user_id": 11378334, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-AXysP46Cwk8/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re2btjvnca9ztWrTvGV5IDe69sgKg/mo/photo.jpg?sz=128", "display_name": "Samuel Dressel", "link": "https://stackoverflow.com/users/11378334/samuel-dressel"}, "is_accepted": true, "score": 0, "last_activity_date": 1561977949, "creation_date": 1561977949, "answer_id": 56834305, "question_id": 56771500, "link": "https://stackoverflow.com/questions/56771500/is-there-any-way-to-convert-stdioerror-to-failureerrorerror/56834305#56834305", "title": "Is there any way to convert std::io::Error to failure::error::Error?", "body": "<p>The solution in the comment of <a href=\"https://stackoverflow.com/users/1063250/abhijit-kadam\">@AbhijitKadam</a> worked fine for me:</p>\n\n<pre><code>file.write(\"Test\", bytes.as_ref())\n                     .map_err(|e| MultipartError::Payload(error::PayloadError::Io(std::io::Error::new(ErrorKind::Other, e))))?;\n</code></pre>\n"}], "owner": {"reputation": 611, "user_id": 11378334, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-AXysP46Cwk8/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re2btjvnca9ztWrTvGV5IDe69sgKg/mo/photo.jpg?sz=128", "display_name": "Samuel Dressel", "link": "https://stackoverflow.com/users/11378334/samuel-dressel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 244, "favorite_count": 0, "accepted_answer_id": 56834305, "answer_count": 1, "score": -2, "last_activity_date": 1561977949, "creation_date": 1561547506, "last_edit_date": 1561552086, "question_id": 56771500, "link": "https://stackoverflow.com/questions/56771500/is-there-any-way-to-convert-stdioerror-to-failureerrorerror", "title": "Is there any way to convert std::io::Error to failure::error::Error?", "body": "<p>I have this code:</p>\n\n<pre><code>let file = FileStorage {\n   // ...\n};\n\nfile.write(\"Test\", bytes.as_ref())\n    .map_err(|e| MultipartError::Payload(error::PayloadError::Io(e)))?;\n</code></pre>\n\n<p>It doesn't really matter in which context this code is written for my question so this is just for demonstration and I will not give any more details about the functionally and the context of this code. </p>\n\n<p><code>error::PayloadError::Io(e)</code> takes a <code>std::io::Error</code> struct, but the <code>ResultError</code> of my own type <code>FileStorage</code> takes an <code>failure::error::Error</code>.</p>\n\n<p>I could change the <code>ResultError</code> of my type to be a <code>std::io::Error</code>, but this is for other reasons not possible in this project.</p>\n\n<p>Since the two errors are external traits I cant implement one for each other.\nIs there an easy way to convert the errors without creating my own error-type?</p>\n"}, {"tags": ["postgresql", "rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1561546439, "post_id": 56769871, "comment_id": 100097642, "body": "This is a re-post of a now <a href=\"https://stackoverflow.com/q/56768067/1233251\">deleted question</a>. Next time, please edit the previous question instead."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1561552571, "post_id": 56769871, "comment_id": 100101397, "body": "You need bit-vec v0.4.4"}, {"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561552909, "post_id": 56769871, "comment_id": 100101636, "body": "@Shepmaster That version of bit-vec does not have &#39;serde&#39;."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561553097, "post_id": 56769871, "comment_id": 100101770, "body": "Then you need to submit a PR to postgres to widen their dependency version of bit-vec. You might also import both versions of the crate concurrently and transform from 0.4.4 to whatever modern version you need, but that&#39;s more annoying."}, {"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561553222, "post_id": 56769871, "comment_id": 100101846, "body": "@Shepmaster already submitted the PR. Can you suggest other viable options I can employ (before at last using integer). I have a flag of 7 bits (bit(n) type) in PostgreSQL which I want to map with Rust data type."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561553346, "post_id": 56769871, "comment_id": 100101925, "body": "You could try using postgres <code>v0.16.0-rc.1</code>. I&#39;d probably just write a newtype around the integer myself."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561553382, "post_id": 56769871, "comment_id": 100101949, "body": "Could you link us to the PR you&#39;ve submitted so we can follow the progress?"}, {"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561553407, "post_id": 56769871, "comment_id": 100101965, "body": "@Shepmaster <a href=\"https://users.rust-lang.org/t/trait-postgres-fromsql-is-not-implemented-for-bit-vec-bitvec/29647\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561553508, "post_id": 56769871, "comment_id": 100102021, "body": "A &quot;PR&quot; commonly refers to a <a href=\"https://help.github.com/en/articles/about-pull-requests\" rel=\"nofollow noreferrer\">pull request</a>"}, {"owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "edited": false, "score": 0, "creation_date": 1561553589, "post_id": 56769871, "comment_id": 100102068, "body": "Yes but here we just need to raise the issue. They move it to repository  as in <a href=\"https://users.rust-lang.org/t/tokio-postgres-0-3-0-as-dependency-introduces-error-failed-to-resolve-use-of-undeclared-type-or-module-connecterror/29584\" rel=\"nofollow noreferrer\">users.rust-lang.org/t/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561554213, "post_id": 56769871, "comment_id": 100102448, "body": "In the future, please <b>always</b> cross-link your posts like this. That prevents people on one service from wasting their time answering a question that has already been answered on another."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561554278, "post_id": 56769871, "comment_id": 100102484, "body": "<i>They move it to repository</i> \u2014 no such thing happened (based on that comment). That poster is suggesting that <b>you</b> open an issue on the repository, just like I&#39;m suggesting that <b>you</b> submit a PR to fix the problem. That&#39;s how open source works."}], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 88, "favorite_count": 0, "closed_date": 1561552557, "answer_count": 0, "score": 0, "last_activity_date": 1561554018, "creation_date": 1561542593, "last_edit_date": 1561554018, "question_id": 56769871, "link": "https://stackoverflow.com/questions/56769871/trait-postgrestypesfromsql-is-not-implemented-for-bit-vecbitvec", "closed_reason": "Duplicate", "title": "trait `postgres::types::FromSql` is not implemented for `bit_vec::BitVec`", "body": "<p>I have following data structure</p>\n\n<pre><code>#[derive(Serialize, Debug)]\npub struct TestEvent {\n    id: i32,\n    event_mask: bit_vec::BitVec\n}\n</code></pre>\n\n<p>While fetching value for this field from database, I am getting error as </p>\n\n<pre><code>the trait `postgres::types::FromSql` is not implemented for `bit_vec::BitVec`\n</code></pre>\n\n<p><a href=\"http://projects.jonfk.ca/postgres/types/trait.FromSql.html\" rel=\"nofollow noreferrer\">FromSql standard</a> mentions that trait needs\nto be enabled for bit-vec which I enabled through</p>\n\n<pre><code>postgres = { version = \"0.14\", features = [\"with-chrono\", \"with-bit-vec\"] }\nbit-vec = {version = \"0.6.1\", features = [\"serde\"]}\n</code></pre>\n\n<p>Still I am getting that same error.</p>\n\n<p>I've <a href=\"https://users.rust-lang.org/t/trait-postgres-fromsql-is-not-implemented-for-bit-vec-bitvec/29647\" rel=\"nofollow noreferrer\">cross-posted this to the user's forum</a></p>\n"}, {"tags": ["generics", "reference", "rust", "immutability", "mutability"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1561498692, "post_id": 56762179, "comment_id": 100081892, "body": "Note that transmuting an immutable reference to a mutable reference is <b>always</b> unsafe, <a href=\"https://doc.rust-lang.org/nomicon/transmutes.html\" rel=\"nofollow noreferrer\">don&#39;t do it ever</a>."}], "answers": [{"tags": [], "owner": {"reputation": 306, "user_id": 2117330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dff90ae6e9eb6735844f2b78dc664647?s=128&d=identicon&r=PG", "display_name": "stephaneyfx", "link": "https://stackoverflow.com/users/2117330/stephaneyfx"}, "is_accepted": false, "score": 1, "last_activity_date": 1561512669, "last_edit_date": 1561512669, "creation_date": 1561510819, "answer_id": 56763811, "question_id": 56762179, "link": "https://stackoverflow.com/questions/56762179/is-there-a-safe-way-to-reuse-the-same-code-for-immutable-and-mutable-variants-of/56763811#56763811", "title": "Is there a safe way to reuse the same code for immutable and mutable variants of a function?", "body": "<p>Based on the motivation you described at the end of your message, my understanding is that you'd like to inspect <code>Vec&lt;&amp;T&gt;</code> and <code>Vec&lt;&amp;mut T&gt;</code> with one function and without modifying the underlying <code>T</code>s. Does this do what you want? Note that I used references to slices because it's more idiomatic as parameter than references to vectors as the latter coerce to the former.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=455a1ee0a5d1c362167eed983df7cb4e\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::Deref;\n\nstruct Foo;\n\nfn do_stuff(_: &amp;Foo) {}\n\nfn process&lt;T&gt;(v: &amp;[T])\nwhere\n    T: Deref&lt;Target = Foo&gt;,\n{\n    for x in v.iter().map(|x| x.deref()) {\n        do_stuff(x);\n    }\n}\n\nfn main() {\n    process(&amp;[&amp;Foo]);\n    process(&amp;[&amp;mut Foo]);\n}\n</code></pre>\n\n<p>Using <code>Borrow</code> instead of <code>Deref</code>, you can also pass <code>&amp;[Foo]</code>.</p>\n"}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "closed_date": 1561510916, "answer_count": 1, "score": 1, "last_activity_date": 1561512669, "creation_date": 1561497746, "question_id": 56762179, "link": "https://stackoverflow.com/questions/56762179/is-there-a-safe-way-to-reuse-the-same-code-for-immutable-and-mutable-variants-of", "closed_reason": "Duplicate", "title": "Is there a safe way to reuse the same code for immutable and mutable variants of a function?", "body": "<p>I did a bit of searching, and found <a href=\"https://www.reddit.com/r/rust/comments/2a721y/a_safe_way_to_reuse_the_same_code_for_immutable/\" rel=\"nofollow noreferrer\">this Reddit post from four years ago</a>, but other than unsafe code:</p>\n\n<pre><code>fn find_mut &lt;'a&gt; (&amp;'a mut self, elem: &amp;T) -&gt; Option&lt;&amp;'a mut Node&lt;T&gt;&gt; {\n    unsafe{std::mem::transmute(self.find(elem))}\n}   \n</code></pre>\n\n<p>or a macro, I can't think of any ways to do this. </p>\n\n<p>Alternative restatements of the problem:</p>\n\n<ul>\n<li>Make a function generic over mutability.</li>\n<li>Mutability modifier polymorphism.</li>\n</ul>\n\n<p>Is there a way to do this now?</p>\n\n<hr>\n\n<p>Motivation, just in case this is another XY problem: I'd like to write a function that processes a vector of references, reading them but not modifying them, and I would like to use those functions both in cases where I will have <code>&amp;T</code>s and <code>&amp;mut T</code>s.</p>\n"}, {"tags": ["image", "multidimensional-array", "rust"], "answers": [{"comments": [{"owner": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "edited": false, "score": 0, "creation_date": 1561578882, "post_id": 56762490, "comment_id": 100115201, "body": "Is this fast? Would it be faster than manipulating with pixels using for cycle without using ndarray? Like this:  for (x, y, pixel) in imgbuf.enumerate_pixels_mut() {               let (r, g, b) = some_math(x,y) }             *pixel = image::Rgb([r as u8, g as u8, b as u8]); imgbuf.save(format!(&quot;image.png&quot; )).unwrap();"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "edited": false, "score": 1, "creation_date": 1561579700, "post_id": 56762490, "comment_id": 100115348, "body": "@user3048747 Right. Please see my edit. I have replaced the input with an owned array, so that the raw vector can be reused for the <code>RgbImage</code>. As long as the array is already in standard layout and the 3rd axis matches the expected RGB channels, this is a zero-copy operation and is just about as fast as it can be."}, {"owner": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "edited": false, "score": 0, "creation_date": 1561660564, "post_id": 56762490, "comment_id": 100148297, "body": "I&#39;ve tried but received <code>borrow of moved value: arr</code> error and some others."}, {"owner": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "edited": false, "score": 0, "creation_date": 1561661483, "post_id": 56762490, "comment_id": 100148689, "body": "The last question: I have <code>cannot use the ? operator in a function that returns ()</code>. When I remove it everything compails, but with warning that <code>this Result may be an Err variant, which should be handled</code> Why is this happening?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "edited": false, "score": 1, "creation_date": 1561663144, "post_id": 56762490, "comment_id": 100149325, "body": "Please see <a href=\"https://stackoverflow.com/q/30555477/1233251\">this question</a>. When code examples use <code>?</code>, it is implicit that they sit in a function returning a <code>Result</code>."}, {"owner": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "edited": false, "score": 0, "creation_date": 1563385072, "post_id": 56762490, "comment_id": 100685803, "body": "I&#39;ve found that this code isn&#39;t quite well. If using none square array (f.e. 300 x 200 px) it gives artifacts in image. As I&#39;v understood the problem is in converting from ndarray to raw vec and then to image. But I didn&#39;t manage to find solution for this"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "edited": false, "score": 1, "creation_date": 1563390934, "post_id": 56762490, "comment_id": 100688412, "body": "Thanks for the heads up, the answer has been updated again. It happens that image libraries usually expect rows to be contiguous in memory, but an ndarray with dimensions <code>(width, height, channels)</code> is actually column contiguous (pixel-wise). The image needs to be in standard layout with the image dimensions in the order <code>(height, width, channels)</code>."}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 4, "last_activity_date": 1582040162, "last_edit_date": 1582040162, "creation_date": 1561499369, "answer_id": 56762490, "question_id": 56762026, "link": "https://stackoverflow.com/questions/56762026/how-to-save-ndarray-in-rust-as-image/56762490#56762490", "title": "How to save ndarray in Rust as image?", "body": "<p>The easiest way is to ensure that the array follows is in standard layout (C-contiguous) with the image dimensions in the order <code>(height, width, channel)</code> order (HWC), or in an equivalent memory layout. This is necessary because <code>image</code> expects rows to be contiguous in memory.</p>\n\n<p>Then, build a <a href=\"https://docs.rs/image/0.21.2/image/type.RgbImage.html\" rel=\"nofollow noreferrer\"><code>RgbImage</code></a> using the type's <a href=\"https://docs.rs/image/0.21.2/image/struct.ImageBuffer.html#method.from_raw\" rel=\"nofollow noreferrer\"><code>from_raw</code></a> function.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use image::RgbImage;\nuse ndarray::Array3;\n\nfn array_to_image(arr: Array3&lt;u8&gt;) -&gt; RgbImage {\n    assert!(arr.is_standard_layout());\n\n    let (height, width, _) = arr.dim();\n    let raw = arr.into_raw_vec();\n\n    RgbImage::from_raw(width as u32, height as u32, raw)\n        .expect(\"container should have the right size for the image dimensions\")\n}\n</code></pre>\n\n<p>Example of use:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut array: Array3&lt;u8&gt; = Array3::zeros((200, 250, 3)); // 250x200 RGB\n\nfor ((x, y, z), v) in array.indexed_iter_mut() {\n    *v = match z {\n        0 =&gt; y as u8,\n        1 =&gt; x as u8,\n        2 =&gt; 0,\n        _ =&gt; unreachable!(),\n    };\n}\n\nlet image = array_to_image(array);\nimage.save(\"out.png\")?;\n</code></pre>\n\n<p>The output image:</p>\n\n<p><a href=\"https://i.stack.imgur.com/fxAv0.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/fxAv0.png\" alt=\"the output image: a gradient over the red and green channels\"></a></p>\n\n<hr>\n\n<p>Below are a few related helper functions, in case they are necessary.</p>\n\n<p>Ndarrays can be converted to standard layout by calling the method <a href=\"https://docs.rs/ndarray/0.13.0/ndarray/struct.ArrayBase.html#method.as_standard_layout\" rel=\"nofollow noreferrer\"><code>as_standard_layout</code></a>, available since version 0.13.0. Before this version, you would need to collect each array element into a vector and rebuild the array, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn to_standard_layout&lt;A, D&gt;(arr: Array&lt;A, D&gt;) -&gt; Array&lt;A, D&gt;\nwhere\n    A: Clone,\n    D: Dimension,\n{\n    let v: Vec&lt;_&gt; = arr.iter().cloned().collect();\n    let dim = arr.dim();\n    Array::from_shape_vec(dim, v).unwrap()\n}\n</code></pre>\n\n<p>Moreover, converting an ndarray in the layout <code>(width, height, channel)</code> to <code>(height, width, channel)</code> is also possible by swapping the first two axes and making the array C-contiguous afterwards:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn wh_to_hw(mut arr: Array3&lt;u8&gt;) -&gt; Array3&lt;u8&gt; {\n    arr.swap_axes(0, 1);\n\n    arr.as_standard_layout().to_owned()\n}\n</code></pre>\n"}], "owner": {"reputation": 149, "user_id": 3048747, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/caa53324ec87c902a9287b906dd3ca0c?s=128&d=identicon&r=PG&f=1", "display_name": "user3048747", "link": "https://stackoverflow.com/users/3048747/user3048747"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 709, "favorite_count": 0, "accepted_answer_id": 56762490, "answer_count": 1, "score": 1, "last_activity_date": 1582040162, "creation_date": 1561496911, "question_id": 56762026, "link": "https://stackoverflow.com/questions/56762026/how-to-save-ndarray-in-rust-as-image", "title": "How to save ndarray in Rust as image?", "body": "<p>I have ndarray </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut a = Array3::&lt;u8&gt;::from_elem((50, 40, 3), 3);\n</code></pre>\n\n<p>and I use image library</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code> let mut imgbuf = image::ImageBuffer::new(50, 40);\n</code></pre>\n\n<p>How could I save my ndarray as image ?\nIf there is better image library then image for this I could use it. </p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561497905, "post_id": 56761516, "comment_id": 100081647, "body": "Does <code>indexmap::IndexMap</code> implement <code>parity_codec::Encode</code>? These are unrelated crates that don&#39;t seem to know about each other."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561498005, "post_id": 56761516, "comment_id": 100081674, "body": "Using <code>cargo expand</code>, you will notice that <code>#[derive(Encode)]</code> generates <code>impl&lt;A: AnimalTrait&gt; Encode for AnimalCollection&lt;A&gt; where IndexMap&lt;String, A&gt;: Encode</code>."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561498052, "post_id": 56761516, "comment_id": 100081685, "body": "The error message is surprisingly bad though."}, {"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561498277, "post_id": 56761516, "comment_id": 100081762, "body": "@mcarton, yeah, they are unrelated crates, and you have a point here, I don&#39;t think <code>IndexMap</code> is implementing <code>Encode</code> trait, but shouldn&#39;t <code>parity_codec</code> do this kind of job?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561498597, "post_id": 56761516, "comment_id": 100081857, "body": "No, a derive macro can only implement a trait for the type it is applied to."}, {"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561499055, "post_id": 56761516, "comment_id": 100082015, "body": "@mcarton , so what could be the workaround for this situation ?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1561499175, "post_id": 56761516, "comment_id": 100082043, "body": "Implement the trait yourself rather than deriving it. You won&#39;t be able to call <code>self.animals.encode()</code> because that doesn&#39;t exist, so you&#39;ll have to decide on how you want to serialize this field yourself."}], "owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1561511559, "creation_date": 1561494248, "last_edit_date": 1561511559, "question_id": 56761516, "link": "https://stackoverflow.com/questions/56761516/unable-to-use-parity-codecs-encode-even-though-i-have-derived-it-for-a-struct", "title": "Unable to use parity_codec&#39;s Encode even though I have derived it for a struct", "body": "<p>I am trying to use <a href=\"https://docs.rs/parity-codec/4.1.0/parity_codec/trait.Encode.html\" rel=\"nofollow noreferrer\"><code>Encode::encode</code></a> on structs with a derived implementation, but I am getting this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `encode` found for type `AnimalCollection&lt;Animal&gt;` in the current scope\n  --&gt; src/main.rs:42:57\n   |\n13 | struct AnimalCollection&lt;A: AnimalTrait&gt; {\n   | --------------------------------------- method `encode` not found for this\n...\n42 |     println!(\"animal collection encoded = {:?}\",animals.encode());\n   |                                                         ^^^^^^\n   |\n   = note: the method `encode` exists but the following trait bounds were not satisfied:\n           `AnimalCollection&lt;Animal&gt; : _IMPL_DECODE_FOR_Animal::_parity_codec::Encode`\n   = help: items from traits can only be used if the trait is implemented and in scope\n   = note: the following trait defines an item `encode`, perhaps you need to implement it:\n           candidate #1: `_IMPL_DECODE_FOR_Animal::_parity_codec::Encode`\n</code></pre>\n\n<p>This is the code:</p>\n\n<pre><code>use indexmap::map::IndexMap;\nuse parity_codec;\nuse parity_codec::{Decode, Encode};\n\n#[derive(Clone, PartialEq, Eq, Encode, Decode, Debug)]\nstruct Animal {\n    name: String,\n    cell: u32,\n}\n\ntrait AnimalTrait: Encode + Decode {}\n\nimpl AnimalTrait for Animal {}\n\n#[derive(Clone, PartialEq, Eq, Encode, Decode, Debug)]\nstruct AnimalCollection&lt;A: AnimalTrait&gt; {\n    animals: IndexMap&lt;String, A&gt;,\n}\n\nimpl&lt;A: AnimalTrait&gt; AnimalCollection&lt;A&gt; {\n    fn new() -&gt; AnimalCollection&lt;A&gt; {\n        AnimalCollection {\n            animals: IndexMap::new(),\n        }\n    }\n\n    fn add(&amp;mut self, name: String, a: A) {\n        self.animals.insert(name, a);\n    }\n}\n\nfn main() {\n    let a = Animal {\n        name: String::from(\"Tiger\"),\n        cell: 10,\n    };\n    println!(\"animal struct encoded = {:?}\", a.encode());\n    let mut animals = AnimalCollection::&lt;Animal&gt;::new();\n    animals.add(\n        String::from(\"Dog\"),\n        Animal {\n            name: String::from(\"Dog\"),\n            cell: 1,\n        },\n    );\n    animals.add(\n        String::from(\"Cat\"),\n        Animal {\n            name: String::from(\"Cat\"),\n            cell: 2,\n        },\n    );\n    println!(\"animal collection encoded = {:?}\", animals.encode());\n}\n</code></pre>\n\n<p>Why isn't it working despite that I have <code>#[derive]</code>d all the traits automatically? How do I fix it?</p>\n\n<p>Since I am deriving the <code>Encode</code> and <code>Decode</code> traits, I shouldn't really implement anything on my own, or should I?</p>\n\n<p>I tested this code and it works on the <code>Animal</code> struct but doesn't work on the <code>AnimalCollection</code> struct. I also tried to implement the <code>Encode</code> trait on <code>AnimalCollection</code> but immediately got \"conflicting implementation\" error, so I am kind of stuck on how to solve this.</p>\n\n<p><code>Cargo.toml</code> is a bit tricky, you need to use <code>derive</code> feature:</p>\n\n<pre><code>[package]\nname = \"encmap\"\nversion = \"0.0.1\"\nedition = \"2018\"\n\n[dependencies]\nparity-codec = { version = \"3.3\", features = [\"derive\"] }\nindexmap = \"1.0.2\"\n</code></pre>\n"}, {"tags": ["rust", "llvm"], "comments": [{"owner": {"reputation": 6563, "user_id": 100214, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/db8155dcba940d81cd7a298b4ae99c7c?s=128&d=identicon&r=PG", "display_name": "Frank C.", "link": "https://stackoverflow.com/users/100214/frank-c"}, "edited": false, "score": 0, "creation_date": 1561537689, "post_id": 56761363, "comment_id": 100092535, "body": "Did you try adding &quot;-filetype=asm&quot; as an argument to the command?"}, {"owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "reply_to_user": {"reputation": 6563, "user_id": 100214, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/db8155dcba940d81cd7a298b4ae99c7c?s=128&d=identicon&r=PG", "display_name": "Frank C.", "link": "https://stackoverflow.com/users/100214/frank-c"}, "edited": false, "score": 0, "creation_date": 1561887208, "post_id": 56761363, "comment_id": 100200208, "body": "@FrankC.Yes, but this does not change anything."}], "owner": {"reputation": 777, "user_id": 6863221, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh4.googleusercontent.com/-f5m1FK2hI1s/AAAAAAAAAAI/AAAAAAAAABw/o6L7n6Vydlw/photo.jpg?sz=128", "display_name": "Matthias", "link": "https://stackoverflow.com/users/6863221/matthias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 65, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1561493620, "creation_date": 1561493620, "question_id": 56761363, "link": "https://stackoverflow.com/questions/56761363/running-llc-from-rust-results-in-undefined-reference-to-main-for-linking-with", "title": "Running LLC from rust results in undefined reference to `main&#39; for linking with gcc", "body": "<p>Consider the hello world in LLVM-IR</p>\n\n<pre><code>@.str = internal constant [14 x i8] c\"hello, world\\0A\\00\"\ndeclare i32 @printf(i8*, ...)\ndefine i32 @main(i32 %argc, i8** %argv) nounwind {\nentry:\n  %tmp1 = getelementptr [14 x i8], [14 x i8]* @.str, i32 0, i32 0\n  %tmp2 = call i32 (i8*, ...) @printf( i8* %tmp1 ) nounwind\n  ret i32 0\n}\n\n</code></pre>\n\n<p>When I nor launch a <code>llc</code> process from rust:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::process::Command;\nfn main() {\n    Command::new(\"/usr/lib/llvm-8/bin/llc\")\n        .env_clear()\n        .arg(\"test.bc\")\n        .arg(\"-o\")\n        .arg(\"test.s\")\n        .output()\n        .expect(\"failed to execute process\");\n}\n</code></pre>\n\n<p>I can not link the resulting <code>test.s</code> with gcc <code>gcc test.s -no-pie -o test</code>:</p>\n\n<blockquote>\n  <p>/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/../../../x86_64-linux-gnu/crt1.o: in function <code>_start':<br>\n  (.text+0x20): undefined reference to</code>main'<br>\n  collect2: error: ld returned 1 exit status</p>\n</blockquote>\n\n<p>But when I ran <code>llc</code> direct in the terminal:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>env -i /usr/lib/llvm-8/bin/llc test.bc -o test.s\n</code></pre>\n\n<p>Everything works well.</p>\n\n<p>Does someone know some details?</p>\n"}, {"tags": ["rust", "lifetime-scoping"], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561489182, "post_id": 56759831, "comment_id": 100078363, "body": "Making <code>&#39;static</code> narrows the scope of implementation, <code>impl&lt;&#39;a, T: &#39;a&gt; MyTrait&lt;&amp;&#39;a T&gt; for T {</code>  should work also."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561490775, "post_id": 56759831, "comment_id": 100079020, "body": "@&#214;merErden: That was my first idea, but it fails with the same error message. I think that my crash code above would be allowed equally with this impl."}, {"owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "edited": false, "score": 0, "creation_date": 1561512097, "post_id": 56759831, "comment_id": 100084561, "body": "I presumed I&#39;d need to change the trait as well as the impl. It seems to me that the non-compiling impl could be written as a standalone function (it seems you agree correct?) so my issue is just adjusting the trait so it covers all three usages. Perhaps I need to add a lifetime parameter to the trait?"}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 0, "last_activity_date": 1561487110, "last_edit_date": 1561487110, "creation_date": 1561486323, "answer_id": 56759831, "question_id": 56759389, "link": "https://stackoverflow.com/questions/56759389/lifetimes-in-generic-trait-implementation/56759831#56759831", "title": "Lifetimes in generic trait implementation", "body": "<p>I think that your last trait does not compile because it is inherently unsafe.</p>\n\n<p>Your impl is actually equivalent to:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;'a, T&gt; MyTrait&lt;&amp;'a T&gt; for T\n</code></pre>\n\n<p>That means, that for any type <code>T</code> and <em>any</em> lifetime <code>'a</code>, <code>T</code> implements <code>MyTrait&lt;&amp;'a T</code>>.  In particular, if <code>'a</code> is for example <code>'static</code>, then <code>T</code> implements <code>MyTrait&lt;&amp;'static T&gt;</code>. So I could write something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn foo(x: &amp;'static i32) -&gt; &amp;'static i32{\n     x\n}\n\nfn main() {\n    let sp: &amp;'static i32 = {\n        &lt;i32 as MyTrait&lt;&amp;'static i32&gt;&gt;::f(foo, 42)\n    };\n    *sp = 0; //crash!\n}\n</code></pre>\n\n<p>(I'm not sure, but I think you do not even need the <code>' static</code> here to make it crash. I cannot test it, because it does not compile!).</p>\n\n<p>This case is forbidden by the type system because the trait requires:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>F: Fn(TIn) -&gt; TOut;\n</code></pre>\n\n<p>but when <code>TIn</code> is a <code>&amp;T</code>, it is actually:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>F: for &lt;'r&gt; Fn(&amp;'r TIn) -&gt; TOut;\n</code></pre>\n\n<p>that is strictly more generic than the trait.</p>\n\n<p>The only way I see you can write this safely is with something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T: 'static&gt; MyTrait&lt;&amp;'static T&gt; for T {\n    fn f&lt;TOut, F&gt;(f: F, x: T) -&gt; TOut\n    where\n        F: Fn(&amp;'static T) -&gt; TOut,\n    {\n        f(...)\n    }\n}\n</code></pre>\n\n<p>But this is probably not what you want, because you cannot use <code>x</code> as argument.\nNote that you even need to make <code>T: 'static</code>, to make it totally safe.</p>\n"}, {"tags": [], "owner": {"reputation": 26, "user_id": 11072290, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e9db74f97688f2e08345ac73412ef17?s=128&d=identicon&r=PG&f=1", "display_name": "HesLg", "link": "https://stackoverflow.com/users/11072290/heslg"}, "is_accepted": true, "score": 1, "last_activity_date": 1561604333, "last_edit_date": 1561604333, "creation_date": 1561603552, "answer_id": 56783218, "question_id": 56759389, "link": "https://stackoverflow.com/questions/56759389/lifetimes-in-generic-trait-implementation/56783218#56783218", "title": "Lifetimes in generic trait implementation", "body": "<p>The type signature</p>\n\n<pre><code>impl&lt;T&gt; MyTrait&lt;&amp;T&gt; for T {\n    fn f&lt;TOut, F&gt;(f: F, x: T) -&gt; TOut\n    where\n        F: Fn(&amp;T) -&gt; TOut,\n    {\n    }\n}\n</code></pre>\n\n<p>desugars to</p>\n\n<pre><code>impl&lt;'a, T: 'a&gt; MyTrait&lt;&amp;'a T&gt; for T {\n    fn f&lt;TOut, F&gt;(f: F, x: T) -&gt; TOut\n    where\n        F: for&lt;'r&gt; Fn(&amp;'r T) -&gt; TOut,\n    {\n    }\n}\n</code></pre>\n\n<p>which is more general than the trait's type signature. Using</p>\n\n<pre><code>impl&lt;'a, T: 'a&gt; MyTrait&lt;&amp;'a T&gt; for T {\n    fn f&lt;TOut, F&gt;(f: F, x: T) -&gt; TOut\n    where\n        F: Fn(&amp;'a T) -&gt; TOut,\n    {\n    }\n}\n</code></pre>\n\n<p>would allow this to compile but restrict the implementation to either non-termination or unsafe code.</p>\n\n<pre><code>impl&lt;'a, T: 'a&gt; MyTrait&lt;&amp;'a T&gt; for T {\n    fn f&lt;TOut, F&gt;(f: F, x: T) -&gt; TOut\n    where\n        F: Fn(&amp;'a T) -&gt; TOut,\n    {\n        //panic!(); or\n        f(unsafe { &amp;*(&amp;x as *const T) })\n    }\n}\n</code></pre>\n\n<p>The unsafe version can easily cause a use after free, e.g.</p>\n\n<pre><code>println!(\"{:?}\", String::f(|x: &amp;String| x, \"aa\".to_string()));\n</code></pre>\n\n<p>You can instead move the bounds on <code>F</code> up (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;code=trait%20MyTrait%3CTIn%2C%20F%2C%20TOut%3E%0Awhere%0A%20%20%20%20F%3A%20Fn(TIn)%20-%3E%20TOut%2C%0A%7B%0A%20%20%20%20fn%20f(f%3A%20F%2C%20x%3A%20Self)%20-%3E%20TOut%3B%0A%7D%0A%0Aimpl%3CT%2C%20F%2C%20TOut%3E%20MyTrait%3CT%2C%20F%2C%20TOut%3E%20for%20T%0Awhere%0A%20%20%20%20F%3A%20Fn(T)%20-%3E%20TOut%2C%0A%7B%0A%20%20%20%20fn%20f(f%3A%20F%2C%20x%3A%20T)%20-%3E%20TOut%20%7B%0A%20%20%20%20%20%20%20%20f(x)%0A%20%20%20%20%7D%0A%7D%0A%0Aimpl%3CT%2C%20F%2C%20TOut%3E%20MyTrait%3CT%2C%20F%2C%20TOut%3E%20for%20%26T%0Awhere%0A%20%20%20%20T%3A%20Clone%2C%0A%20%20%20%20F%3A%20Fn(T)%20-%3E%20TOut%2C%0A%7B%0A%20%20%20%20fn%20f(f%3A%20F%2C%20x%3A%20%26T)%20-%3E%20TOut%20%7B%0A%20%20%20%20%20%20%20%20f(x.clone())%0A%20%20%20%20%7D%0A%7D%0A%0Aimpl%3CT%2C%20F%2C%20TOut%3E%20MyTrait%3C%26T%2C%20F%2C%20TOut%3E%20for%20T%0Awhere%0A%20%20%20%20F%3A%20Fn(%26T)%20-%3E%20TOut%2C%0A%7B%0A%20%20%20%20fn%20f(f%3A%20F%2C%20x%3A%20T)%20-%3E%20TOut%20%7B%0A%20%20%20%20%20%20%20%20f(%26x)%0A%20%20%20%20%7D%0A%7D%0A%0Afn%20main()%7B%0A%20%20%20%20%3CString%20as%20MyTrait%3CString%2C_%2C_%3E%3E%3A%3Af(%7Cs%7Cs.len()%2C%20String%3A%3Anew())%3B%0A%20%20%20%20%3C%26String%20as%20MyTrait%3CString%2C_%2C_%3E%3E%3A%3Af(%7Cs%7Cs.len()%2C%20%26String%3A%3Anew())%3B%0A%20%20%20%20%3CString%20as%20MyTrait%3C%26String%2C_%2C_%3E%3E%3A%3Af(len%2C%20String%3A%3Anew())%3B%0A%7D%0A%0Afn%20len(s%3A%26String)-%3Eusize%7B%0A%20%20%20%20s.len()%0A%7D%0A\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<pre><code>trait MyTrait&lt;TIn, F, TOut&gt;\nwhere\n    F: Fn(TIn) -&gt; TOut,\n{\n    fn f(f: F, x: Self) -&gt; TOut;\n}\n\nimpl&lt;T, F, TOut&gt; MyTrait&lt;T, F, TOut&gt; for T\nwhere\n    F: Fn(T) -&gt; TOut,\n{\n    fn f(f: F, x: T) -&gt; TOut {\n        f(x)\n    }\n}\n\nimpl&lt;T, F, TOut&gt; MyTrait&lt;T, F, TOut&gt; for &amp;T\nwhere\n    T: Clone,\n    F: Fn(T) -&gt; TOut,\n{\n    fn f(f: F, x: &amp;T) -&gt; TOut {\n        f(x.clone())\n    }\n}\n\nimpl&lt;T, F, TOut&gt; MyTrait&lt;&amp;T, F, TOut&gt; for T\nwhere\n    F: Fn(&amp;T) -&gt; TOut,\n{\n    fn f(f: F, x: T) -&gt; TOut {\n        f(&amp;x)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 0, "accepted_answer_id": 56783218, "answer_count": 2, "score": 2, "last_activity_date": 1561604333, "creation_date": 1561484445, "last_edit_date": 1561486736, "question_id": 56759389, "link": "https://stackoverflow.com/questions/56759389/lifetimes-in-generic-trait-implementation", "title": "Lifetimes in generic trait implementation", "body": "<p>I want to make a trait similar to the below structure (my particular use case is a bit more complex but this captures the issue and error I'm getting). The issue I have is which lifetimes in the last impl. I think I need to squeeze them into the trait definition but I'm not sure how. How can I sort out the lifetimes so this compiles?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ebfc4cbfb313bbf27b781c71625370da\" rel=\"nofollow noreferrer\">Rust playground link to code</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait MyTrait&lt;TIn&gt; {\n    fn f&lt;TOut, F&gt;(f: F, x: Self) -&gt; TOut\n    where\n        F: Fn(TIn) -&gt; TOut;\n}\n\nimpl&lt;T&gt; MyTrait&lt;T&gt; for T {\n    fn f&lt;TOut, F&gt;(f: F, x: T) -&gt; TOut\n    where\n        F: Fn(T) -&gt; TOut,\n    {\n        f(x)\n    }\n}\n\nimpl&lt;T&gt; MyTrait&lt;T&gt; for &amp;T\nwhere\n    T: Clone,\n{\n    fn f&lt;TOut, F&gt;(f: F, x: &amp;T) -&gt; TOut\n    where\n        F: Fn(T) -&gt; TOut,\n    {\n        f(x.clone())\n    }\n}\n\n// This impl fails to compile:\nimpl&lt;T&gt; MyTrait&lt;&amp;T&gt; for T {\n    fn f&lt;TOut, F&gt;(f: F, x: T) -&gt; TOut\n    where\n        F: Fn(&amp;T) -&gt; TOut,\n    {\n        f(&amp;x)\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 2, "creation_date": 1561482637, "post_id": 56758886, "comment_id": 100075472, "body": "Please seek to make a proper <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. Parts of the code are missing (what is <code>Sprite</code>, which methods are involved, etc.), which makes us unable to reproduce the issue. Moreover, the given snippets have formatting problems and contain definitions which are not relevant (e.g. <code>_clean</code>). If you can build something that shows the exact same problem in the <a href=\"//play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a>, the better. The <a href=\"https://stackoverflow.com/tags/rust/info\">Rust tag info</a> provides additional tips."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561487176, "post_id": 56758886, "comment_id": 100077490, "body": "Welcome to Stack Overflow! It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/45517170/155423\">How can I iterate a vector once and insert/remove/modify multiple elements along the way?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/56758886/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561487052, "post_id": 56759079, "comment_id": 100077427, "body": "Why the non-idiomatic <code>: &amp;RefCell&lt;Sprite&gt;</code>?"}, {"owner": {"reputation": 136, "user_id": 4273450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f0e541a230b2f34004b12d773a3dc72?s=128&d=identicon&r=PG", "display_name": "myrrlyn", "link": "https://stackoverflow.com/users/4273450/myrrlyn"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561495924, "post_id": 56759079, "comment_id": 100081025, "body": "Solely to be clear about what the <code>retain</code> closure receives"}, {"owner": {"reputation": 13, "user_id": 11698922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cad4b57fd1f2bfa4eaa68a017aaeda72?s=128&d=identicon&r=PG&f=1", "display_name": "helix_tp", "link": "https://stackoverflow.com/users/11698922/helix-tp"}, "edited": false, "score": 1, "creation_date": 1561524331, "post_id": 56759079, "comment_id": 100086893, "body": "i have the some probleme with  <code>s.borrow().x &lt;= self.map</code> if self.map is remplaced by value, no problem"}], "tags": [], "owner": {"reputation": 136, "user_id": 4273450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f0e541a230b2f34004b12d773a3dc72?s=128&d=identicon&r=PG", "display_name": "myrrlyn", "link": "https://stackoverflow.com/users/4273450/myrrlyn"}, "is_accepted": true, "score": 1, "last_activity_date": 1561495944, "last_edit_date": 1561495944, "creation_date": 1561483079, "answer_id": 56759079, "question_id": 56758886, "link": "https://stackoverflow.com/questions/56758886/remove-vec-product-second-mutable-borrow-occurs-here/56759079#56759079", "title": "Remove Vec product second mutable borrow occurs here", "body": "<p>The line <code>for sprite in &amp;mut self.sprites</code> creates a mutable borrow of the <code>self.sprites</code> collection that spans the entire loop body. This means that you cannot modify the collection itself inside the loop body, because doing so will cause the loop to become invalid.</p>\n\n<p>When you attempt to call <code>self.sprites.remove(pos)</code>, this call <em>would</em> cause all sprites after <code>pos</code> to move forward by one in memory. This is forbidden because you currently have a reference to the sprite that is about to be removed, and also because the sprite at <code>pos + 1</code> would be skipped (the <code>remove</code> call moves it forward by one, but the iterator is going to move to the slot after it).</p>\n\n<p>Rust provides a way to perform what your loop body is trying to do: the <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.retain\" rel=\"nofollow noreferrer\"><code>Vec::retain</code></a> method.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>self.sprites.retain(|s| { // s is &amp;RefCell&lt;Sprite&gt;\n    s.borrow_mut().x += 1.0;\n    sprite.borrow_mut().x &lt;= (self.map.nbr_column as u32 * self.map.tile_wight) as f32\n});\n</code></pre>\n\n<p>This goes through each sprite in the list, updating it, and then returning a condition which, when <code>true</code>, tells the <code>Vec</code> to keep the sprite, and when <code>false</code>, tells the <code>Vec</code> to remove it.</p>\n"}, {"tags": [], "owner": {"reputation": 13, "user_id": 11698922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cad4b57fd1f2bfa4eaa68a017aaeda72?s=128&d=identicon&r=PG&f=1", "display_name": "helix_tp", "link": "https://stackoverflow.com/users/11698922/helix-tp"}, "is_accepted": false, "score": 0, "last_activity_date": 1561524946, "creation_date": 1561524946, "answer_id": 56765432, "question_id": 56758886, "link": "https://stackoverflow.com/questions/56758886/remove-vec-product-second-mutable-borrow-occurs-here/56765432#56765432", "title": "Remove Vec product second mutable borrow occurs here", "body": "<p>Thank for you help, this code works</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>...\nlet map_width = (self.map.nbr_column as u32 * self.map.tile_wight) as f32;\nself.sprites.retain(|s| {\n    // s is &amp;RefCell&lt;Sprite&gt;\n    s.borrow_mut().x += 1.0;\n    s.borrow().x &lt;= map_width\n});\n...\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 11698922, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cad4b57fd1f2bfa4eaa68a017aaeda72?s=128&d=identicon&r=PG&f=1", "display_name": "helix_tp", "link": "https://stackoverflow.com/users/11698922/helix-tp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 56759079, "answer_count": 2, "score": -2, "last_activity_date": 1561524946, "creation_date": 1561482263, "last_edit_date": 1561524259, "question_id": 56758886, "link": "https://stackoverflow.com/questions/56758886/remove-vec-product-second-mutable-borrow-occurs-here", "title": "Remove Vec product second mutable borrow occurs here", "body": "<p>I have a list (<code>sprites: Vec&lt;RefCell&lt;Sprite&gt;&gt;</code>) in a structure</p>\n\n<p>I have to add objects and remove them, no problem to add, but impossible to remove</p>\n\n<p>add objects</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn _clean() {}\n    fn create_sprite(&amp;mut self, x: f32, y: f32) {\n        let src_rect = Rect::new(0, 0, 9, 9);\n        let mut sprite = Sprite::new(0, x, y, src_rect);\n\n        self.sprites.push(RefCell::new(sprite));\n        println!(\"{}\", self.sprites.len());\n    }\n</code></pre>\n\n<p>Delete objects</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut pos: usize = 0;\n        for sprite in &amp;mut self.sprites {\n            sprite.borrow_mut().x += 1.0;\n            // collision sprite shoot\n            if sprite.borrow_mut().x &gt; (self.map.nbr_column as u32 * self.map.tile_wight) as f32 {\n                println!(\"shoot out {}\", pos);\n                self.sprites.remove(pos);\n                //self.remove_sprite(pos);\n            }\n            pos += 1;\n        }\n</code></pre>\n\n<p>ditto if i do a <code>pop</code> instead of <code>remove</code></p>\n\n<hr>\n\n<p>I cleaned the code to produce an executable minumun code</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::cell::RefCell;\n\npub struct Sprite {\n    pub index: usize,\n    pub x: f32,\n    pub y: f32,\n    pub vx: f32,\n    pub vy: f32,\n}\n\nimpl Sprite {\n    pub fn new(index: usize, x: f32, y: f32) -&gt; Sprite {\n        let mut sprite: Sprite = Sprite {\n            index: index,\n            x: x,\n            y: y,\n            vx: 0.0,\n            vy: 0.0,\n        };\n        sprite\n    }\n}\n\npub struct Game {\n    sprites: Vec&lt;RefCell&lt;Sprite&gt;&gt;,\n    map: f32,\n}\n\nimpl Game {\n    pub fn new() -&gt; Game {\n        Game {\n            sprites: vec![],\n            map: 30.0,\n        }\n    }\n\n    pub fn update(&amp;mut self) {\n        let mut pos: usize = 0;\n        self.sprites.retain(|s| {\n            // s is &amp;RefCell&lt;Sprite&gt;\n            s.borrow_mut().x += 1.0;\n            s.borrow().x &lt;= self.map\n        });\n        println!(\"{}\", self.sprites.len());\n    }\n\n    fn create_sprite(&amp;mut self, x: f32, y: f32) {\n        let mut sprite = Sprite::new(0, x, y);\n\n        self.sprites.push(RefCell::new(sprite));\n        println!(\"{}\", self.sprites.len());\n    }\n\n    pub fn handle_event(&amp;mut self) {\n        self.create_sprite(10.0, 10.0);\n        self.create_sprite(20.0, 10.0);\n        self.create_sprite(30.0, 10.0);\n        self.create_sprite(40.0, 10.0);\n        self.create_sprite(50.0, 10.0);\n        self.create_sprite(60.0, 10.0);\n    }\n}\n\nfn main() {\n    let mut the_game = Game::new();\n\n    the_game.handle_event();\n    the_game.update();\n}\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "edited": false, "score": 0, "creation_date": 1561478173, "post_id": 56757844, "comment_id": 100073379, "body": "Ah, so the power of setting up causal-chains is up to the coder, and not necessarily the Reactor then?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "edited": false, "score": 1, "creation_date": 1561478458, "post_id": 56757844, "comment_id": 100073499, "body": "@ThomasBraun if I understand your terminology, then yes. I have a hard time imagining it any other way, to be honest. How would the executor know that future A needs to have child future B called but not child C, etc? Remember that the docs link to the corresponding source code, so you can see how e.g. <a href=\"https://docs.rs/futures/0.1.27/futures/future/struct.Select.html\" rel=\"nofollow noreferrer\"><code>Select</code></a> is <a href=\"https://docs.rs/futures/0.1.27/src/futures/future/select.rs.html#45-70\" rel=\"nofollow noreferrer\">implemented</a>."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1561477927, "creation_date": 1561477927, "answer_id": 56757844, "question_id": 56757601, "link": "https://stackoverflow.com/questions/56757601/does-the-tokio-reactor-poll-all-possible-poll-functions-between-each-combinato/56757844#56757844", "title": "Does the Tokio reactor poll all possible poll() functions between each combinator?", "body": "<p>As far as the asynchronous executor knows, there <em>aren't</em> intermediate steps. Each combinator <em>consumes</em> the previous future, producing a brand new future. At the end, a single future is handed to the executor and it calls <code>poll</code> on that future as required.</p>\n\n<p>It is up to each parent future to decide if and when any child futures are polled, but this can only happen when the parent future is polled.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/31374051/155423\">Why does Iterator::take_while take ownership of the iterator?</a></li>\n</ul>\n"}], "owner": {"reputation": 375, "user_id": 11134001, "user_type": "registered", "profile_image": "https://graph.facebook.com/2130930103663266/picture?type=large", "display_name": "Thomas Braun", "link": "https://stackoverflow.com/users/11134001/thomas-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 56757844, "answer_count": 1, "score": 2, "last_activity_date": 1561477927, "creation_date": 1561477067, "last_edit_date": 1561477279, "question_id": 56757601, "link": "https://stackoverflow.com/questions/56757601/does-the-tokio-reactor-poll-all-possible-poll-functions-between-each-combinato", "title": "Does the Tokio reactor poll all possible poll() functions between each combinator?", "body": "<p>A call to <code>poll</code> can never block, otherwise the entire thread the async core executes on will be blocked, stopping all possible causality until the blocking function returns.</p>\n\n<p>I spawn a future onto the reactor, and there are a series of combinators like <code>my_future.and_then(\u2026).map(\u2026).then(\u2026)</code>.</p>\n\n<p>The reactor polls the future, and then before it executes the next <code>and_then</code> combinator, does the reactor iterate through all other futures, checking to see if they are ready, or does the reactor follow through with all the combinatorial steps of <code>my_future.and_then(\u2026).map(\u2026).then(\u2026)</code>?</p>\n\n<p>I am asking this question because it is important to know how to design my program given the causality of the async core.</p>\n"}, {"tags": ["rust", "traefik"], "owner": {"reputation": 31, "user_id": 11698497, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5f7c114ccf1b966776b3ab7cc2ca4bf7?s=128&d=identicon&r=PG&f=1", "display_name": "sergenn", "link": "https://stackoverflow.com/users/11698497/sergenn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1593113427, "creation_date": 1561476187, "last_edit_date": 1593113427, "question_id": 56757363, "link": "https://stackoverflow.com/questions/56757363/recent-http-errors-not-displaying-in-traefik-dashboard", "title": "&quot;Recent HTTP errors&quot; not displaying in Traefik dashboard", "body": "<p>Recent HTTP Errors are not displayed on our Traefik dashboard.</p>\n<p>I have included HTTP statistics as according to <a href=\"https://docs.traefik.io/configuration/api/#metrics\" rel=\"nofollow noreferrer\">the documentation</a>.</p>\n<pre class=\"lang-none prettyprint-override\"><code>[https]\n  [http.statistics]\n  recentErrors = 10\n</code></pre>\n<p>This is our Traefik configuration:</p>\n<pre class=\"lang-none prettyprint-override\"><code>debug = false\n\nlogLevel = &quot;DEBUG&quot;\ndefaultEntryPoints = [&quot;https&quot;,&quot;http&quot;]\n\n[entryPoints]\n  [entryPoints.http]\n  address = &quot;:80&quot;\n    [entryPoints.http.redirect]\n    entryPoint = &quot;https&quot;\n  [entryPoints.https]\n  address = &quot;:443&quot;\n  [entryPoints.https.tls]\n  [entryPoints.traefik]\n  address = &quot;:8080&quot;\n    [entryPoints.traefik.auth]\n       [entryPoints.traefik.auth.basic]\n       users = []\n\n[retry]\n\n[https]\n  [http.statistics]\n  recentErrors = 10\n\n[docker]\nendpoint = &quot;unix:///var/run/docker.sock&quot;\ndomain = &quot;enginex.nl&quot;\nwatch = true\nexposedByDefault = false\n\n[acme]\nemail = &quot;developer@enginex.nl&quot;\nstorage = &quot;acme.json&quot;\nentryPoint = &quot;https&quot;\nonHostRule = true\n  [acme.httpChallenge]\n  entryPoint = &quot;http&quot;\n\n\n[traefikLog]\n  filePath = &quot;traefik.log&quot;\n  format   = &quot;json&quot;\n\n[accessLog]\n  filePath = &quot;access.log&quot;\n  format = &quot;json&quot;\n\n[api]\nentryPoint = &quot;traefik&quot;\ndashboard = true\ndebug = true\n  [api.statistics]\n  recentErrors = 10\n</code></pre>\n<p>I expect the dashboard to display the recent HTTP errors.</p>\n"}, {"tags": ["rust", "iterator"], "answers": [{"tags": [], "owner": {"reputation": 136, "user_id": 4273450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f0e541a230b2f34004b12d773a3dc72?s=128&d=identicon&r=PG", "display_name": "myrrlyn", "link": "https://stackoverflow.com/users/4273450/myrrlyn"}, "is_accepted": false, "score": 2, "last_activity_date": 1561476319, "last_edit_date": 1561476319, "creation_date": 1561476213, "answer_id": 56757375, "question_id": 56756986, "link": "https://stackoverflow.com/questions/56756986/why-is-it-impossible-to-dereference-a-boxed-iterator-trait-object/56757375#56757375", "title": "Why is it impossible to dereference a boxed iterator trait object?", "body": "<p>It is impossible to move any trait object (the <code>dyn Iterator</code> part of your type) out from behind a pointer (<code>&amp;dyn Iterator</code>, <code>Box&lt;dyn Iterator&gt;</code>). This is because trait objects are unsized \u2013 the compiler does not have information about the concrete size of the referent object, and so will not allow moving it into the stack where its size must be known at compile time. This is what your error message (\"the trait <code>std::marker::Sized</code> is not implemented for <code>dyn std::iter::Iterator&lt;Item = T&gt;</code>\") means.</p>\n\n<p>Rust does not support runtime-variable stack allocations at this time, so moving unsized values like trait objects into the stack is not allowed.</p>\n\n<p>If you really need to unbox the iterator, you can make a generic function </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn deref_boxed&lt;I: Iterator&lt;Item = T&gt;, T: Display&gt;(iter: Box&lt;I&gt;) {\n    let mut i = *iter;\n    for item in i {\n        println!(\"{}\", item);\n    }\n}\n</code></pre>\n\n<p>but you should be able to iterate through the argument without unboxing it:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn iter_boxed&lt;'a, T: Display&gt;(iter: Box&lt;dyn Iterator&lt;Item = T&gt; + 'a&gt;) {\n    for item in iter {\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 514, "favorite_count": 0, "closed_date": 1561476237, "answer_count": 1, "score": 0, "last_activity_date": 1561476382, "creation_date": 1561474953, "last_edit_date": 1561476382, "question_id": 56756986, "link": "https://stackoverflow.com/questions/56756986/why-is-it-impossible-to-dereference-a-boxed-iterator-trait-object", "closed_reason": "Duplicate", "title": "Why is it impossible to dereference a boxed iterator trait object?", "body": "<p>I have three following examples:</p>\n\n<pre><code>fn iterate_with_iterator&lt;T: std::fmt::Display, I: Iterator&lt;Item = T&gt;&gt;(iter: I) {\n    for x in iter {\n         println!(\"{}\", x);\n    }\n}\n\nfn iterate_with_boxed_iterator&lt;'a, T: std::fmt::Display&gt;(iter: Box&lt;dyn Iterator&lt;Item = T&gt; + 'a&gt;) {\n    for x in iter {\n         println!(\"{}\", x);\n    }\n}\n\nfn iterate_with_deref_boxed_iterator&lt;'a, T: std::fmt::Display&gt;(iter: Box&lt;dyn Iterator&lt;Item = T&gt; + 'a&gt;) {\n    let diter = *iter;\n    for x in diter {\n         println!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b72dc11d0be75bcf694054b819f3e828\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>When compiling the <code>iterate_with_deref_boxed_iterator</code> the following error appears:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `dyn std::iter::Iterator&lt;Item = T&gt;` cannot be known at compilation time\n  --&gt; src/main.rs:14:9\n   |\n14 |     let diter = *iter;\n   |         ^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn std::iter::Iterator&lt;Item = T&gt;`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: all local variables must have a statically known size\n   = help: unsized locals are gated as an unstable feature\n\nerror[E0277]: the size for values of type `dyn std::iter::Iterator&lt;Item = T&gt;` cannot be known at compilation time\n  --&gt; src/main.rs:15:14\n   |\n15 |     for x in diter {\n   |              ^^^^^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `dyn std::iter::Iterator&lt;Item = T&gt;`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required by `std::iter::IntoIterator::into_iter`\n</code></pre>\n\n<p>Why does dereferencing break compilation?</p>\n"}, {"tags": ["rust", "rust-cargo"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561476133, "post_id": 56757246, "comment_id": 100072249, "body": "What if I build the new crate with the nightly, can I take the resultant .rlib and link it to my main project?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561476197, "post_id": 56757246, "comment_id": 100072289, "body": "@WiredWolf if your main project isn&#39;t using the same version of the compiler, then no."}, {"owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561476996, "post_id": 56757246, "comment_id": 100072785, "body": "You mean, if I get say a prebuilt, proprietary rust library from someone it had to be compiled with the same version of the tool chain I&#39;m using in order for me to use it?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561477857, "post_id": 56757246, "comment_id": 100073217, "body": "Yes. This is not as weird as it seems. <a href=\"https://en.wikipedia.org/wiki/Microsoft_Visual_C%2B%2B#Compatibility\" rel=\"nofollow noreferrer\">Visual Studio C++ used to do the same</a> (and in fact Microsoft still has made no promises about ABI stability that I know about, they just happen to not have changed their ABI since VSC++ 2015). Maybe one day Rust will have a stable ABI and solve these problems but for now, the compiler is allowed to change anything between versions."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1561478547, "post_id": 56757246, "comment_id": 100073534, "body": "See also <a href=\"https://stackoverflow.com/q/27999559/155423\">Can libraries be distributed as a binary, so the end user cannot see the source code?</a>; <a href=\"https://stackoverflow.com/q/50731453/155423\">How to statically link to an existing rlib?</a>"}, {"owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561479356, "post_id": 56757246, "comment_id": 100073923, "body": "So just to be clear (before starting working on it) my only route is to build a .dll (on Windows) of this new crate, and add some C wrapper that exposes whatever functionality I need from it, then use it in Rust with &#39;extern &quot;C&quot;&#39; ?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561480190, "post_id": 56757246, "comment_id": 100074315, "body": "But <i>why</i> do you need a nightly-only crate in an otherwise non-nightly project? There aren&#39;t that many things that require nightly nowadays except for some sugar whose benefit you&#39;d definitely lose if you make a C wrapper."}, {"owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561480724, "post_id": 56757246, "comment_id": 100074588, "body": "I need this <a href=\"https://crates.io/crates/parquet\" rel=\"nofollow noreferrer\">crates.io/crates/parquet</a> any suggestions on how to integrate it into my project (assuming I don&#39;t want to transition to building my whole project with nightly)"}, {"owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561484325, "post_id": 56757246, "comment_id": 100076178, "body": "@mcarton so given my use-case (previous comment) what are my options?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561486407, "post_id": 56757246, "comment_id": 100077171, "body": "They only use specialization, have you looked into the code to see if the specialization is indeed necessary? (At least one use is not: it specializes a <code>Debug</code> implementation to be nicer in some cases.) It probably will be easier to remove the use of specialization or to feature-gate it."}, {"owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561488464, "post_id": 56757246, "comment_id": 100078062, "body": "I see them using a bunch of features, everything under #![feature requires nightly doesn&#39;t it? <code>#![feature(     repr_simd,     const_fn,     platform_intrinsics,     stdsimd,     aarch64_target_feature,     arm_target_feature,     link_llvm_intrinsics,     core_intrinsics,     stmt_expr_attributes,     align_offset,     mmx_target_feature,     crate_visibility_modifier,     custom_inner_attributes )]</code>"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561488739, "post_id": 56757246, "comment_id": 100078175, "body": "Where did you find that? <a href=\"https://github.com/apache/arrow/blob/master/rust/datafusion/src/lib.rs\" rel=\"nofollow noreferrer\">github.com/apache/arrow/blob/master/rust/datafusion/src/lib.&zwnj;&#8203;rs</a> <a href=\"https://github.com/apache/arrow/blob/master/rust/parquet/src/lib.rs#L18\" rel=\"nofollow noreferrer\">github.com/apache/arrow/blob/master/rust/parquet/src/lib.rs#&zwnj;&#8203;L18</a> <a href=\"https://github.com/apache/arrow/blob/master/rust/arrow/src/lib.rs#L24\" rel=\"nofollow noreferrer\">github.com/apache/arrow/blob/master/rust/arrow/src/lib.rs#L2&zwnj;&#8203;4</a>"}, {"owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "edited": false, "score": 0, "creation_date": 1561489541, "post_id": 56757246, "comment_id": 100078498, "body": "It&#39;s from an (indirect) dependency of Parquet: packed_simd-0.3.3"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561493704, "post_id": 56757246, "comment_id": 100080180, "body": "They have a bunch of <a href=\"https://github.com/apache/arrow/blob/c48bc1a6b1c9e11d76d1dd4d3cdf23544b716237/rust/arrow/src/buffer.rs#L221-L241\" rel=\"nofollow noreferrer\"><code>&#47;* SIMD implementation if available *&#47; #[cfg(any(target_arch = &quot;x86&quot;, target_arch = &quot;x86_64&quot;))]</code> in their code</a>. Wouldn&#39;t be too hard to feature-gate all of these given that they already support non-SIMD alternatives."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 2, "last_activity_date": 1561478214, "last_edit_date": 1561478214, "creation_date": 1561475795, "answer_id": 56757246, "question_id": 56756880, "link": "https://stackoverflow.com/questions/56756880/how-to-build-a-dependency-with-a-different-version-of-the-rust-compiler/56757246#56757246", "title": "How to build a dependency with a different version of the Rust compiler?", "body": "<p>You cannot. Rust does not have a stable ABI and it is not possible to mix crates built with different versions of the compiler within the same project. <a href=\"https://github.com/rust-lang/rfcs/issues/600#issuecomment-499561636\" rel=\"nofollow noreferrer\">As of 2019, there is no plan to stabilize the ABI.</a></p>\n\n<p>You must compile the entire project using a nightly compiler which you can do using <a href=\"https://rustup.rs/\" rel=\"nofollow noreferrer\">rustup</a>.</p>\n"}], "owner": {"reputation": 23, "user_id": 9291645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c47f99b88697c84f77e1486290ec80b9?s=128&d=identicon&r=PG&f=1", "display_name": "WiredWolf", "link": "https://stackoverflow.com/users/9291645/wiredwolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1561478214, "creation_date": 1561474623, "last_edit_date": 1561476456, "question_id": 56756880, "link": "https://stackoverflow.com/questions/56756880/how-to-build-a-dependency-with-a-different-version-of-the-rust-compiler", "title": "How to build a dependency with a different version of the Rust compiler?", "body": "<p>I've got a Rust project I build with the 1.33 tool chain. I need to add a dependency on a crate that can only be built with Rust nightly, how can I specify in the dependencies it should be built with nightly?</p>\n"}, {"tags": ["types", "architecture", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1561487486, "post_id": 56756713, "comment_id": 100077626, "body": "Why not just take in <code>Vec&lt;Bid&lt;T&gt;&gt;</code>?"}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561490576, "post_id": 56756713, "comment_id": 100078940, "body": "@Shepmaster I thought of that about 2 hours ago, and it seems to have solved most of the problems. I was going to finish writing the program before writing up an answer, just to be sure."}], "answers": [{"tags": [], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "is_accepted": false, "score": 0, "last_activity_date": 1561624318, "creation_date": 1561624318, "answer_id": 56787036, "question_id": 56756713, "link": "https://stackoverflow.com/questions/56756713/how-can-i-represent-this-data/56787036#56787036", "title": "How can I represent this data?", "body": "<p>All of these problems can be solved simply by taking ownership of the vector; your prototype should look like this:</p>\n\n<pre><code>pub fn who_rents_the_flooble&lt;T&gt;(\n    mut bids: Vec&lt;Bid&lt;T&gt;&gt;\n) -&gt; Vec&lt;(T, NanoSecond, Token)&gt;\n</code></pre>\n\n<p>Passing by value, not by reference, solves the problem.</p>\n"}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1561624318, "creation_date": 1561474078, "last_edit_date": 1561480508, "question_id": 56756713, "link": "https://stackoverflow.com/questions/56756713/how-can-i-represent-this-data", "title": "How can I represent this data?", "body": "<p>My <a href=\"https://stackoverflow.com/q/56754101/5223757\">previous question</a> on this topic has been correctly identified as an instance of the <a href=\"https://meta.stackexchange.com/a/233676/308065\">XY problem.</a></p>\n\n<p>I'm trying to create a resource management crate to decide who gets to rent the flooble. The public interface (currently) looks sort of like this:</p>\n\n<pre><code>pub struct Bid&lt;T&gt; {\n    max_bid: TokenPerNanoSecond,\n    budget: Token,\n    data: T\n}\n\n/// Returns a vector of tuples of (T, time of rent end, tokens spent)\npub fn who_rents_the_flooble&lt;'a, T&gt;(\n    mut bids: Vec&lt;&amp;'a mut Bid&lt;T&gt;&gt;\n) -&gt; Vec&lt;(T, NanoSecond, Token)&gt; {\n    let mut output = vec![];\n    let mut now = NanoSecond::from(0);\n    // while bids.len() &gt; 0 {\n        // run a mini auction to work out who wins\n        // increment now by the duration\n        // append winner's data, now and amount spent to output\n        // subtract amount spent from winner's budget\n        // remove bids with no budget left\n    // }\n    output\n}\n</code></pre>\n\n<p><code>Token</code>, <code>NanoSecond</code> and <code>TokenPerNanoSecond</code> are newtypes of <code>u64</code> with their arithmetic relationships fully defined; they're mostly present just because I'm bad at algebra, and don't want subtle bugs popping up because of my basic algebra mistakes and conflation of semantically different data.</p>\n\n<p><code>T</code> is a purely opaque thing. It's the <code>void *</code> of C callbacks, acting as a way for the caller to identify the relationship between what went in and what's come out.</p>\n\n<p>However, <code>Vec&lt;&amp;'a mut Bid&lt;T&gt;&gt;</code> doesn't really do what I need it to do. In order to implement the \"mini auction\", I need to re-order a <code>Vec&lt;&amp;'a Bid&lt;T&gt;&gt;</code> copy of <code>bids</code>, which requires taking ownership of the references and will leave me a little bit stuck when I next need to mutate the <code>Bid</code>s.</p>\n\n<p>What should my architecture look like?</p>\n\n<hr>\n\n<p>If this isn't enough information, note that I'm trying to re-implement <a href=\"https://codereview.stackexchange.com/q/212170/86025\">this bad code</a> in Rust.</p>\n"}, {"tags": ["rust", "yaml", "serde"], "comments": [{"owner": {"reputation": 527, "user_id": 4912976, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/20f1f3818f5ffe2e879ca32d0e05dc4f?s=128&d=identicon&r=PG&f=1", "display_name": "freefall", "link": "https://stackoverflow.com/users/4912976/freefall"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561476375, "post_id": 56755277, "comment_id": 100072410, "body": "Ok, my bad. I havent&#39; asked any questions for a while and also it&#39;s my first question regarding Rust. Anyway I will keep that in mind."}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1561471747, "creation_date": 1561471747, "answer_id": 56755991, "question_id": 56755277, "link": "https://stackoverflow.com/questions/56755277/how-to-get-a-nested-property-from-serde-yamlvalue/56755991#56755991", "title": "How to get a nested property from serde_yaml::Value?", "body": "<p>Use chained indexing syntax:</p>\n\n<pre><code>use serde_yaml::Value; // 0.8.9\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let input = r#\"\n    version: '3'\n    indexed:\n      file1: \"abc\"\n      file2: \"def\"\n      file3: 33\n    \"#;\n\n    let d: Value = serde_yaml::from_str(input)?;\n\n    let f1 = &amp;d[\"indexed\"][\"file1\"];\n    println!(\"{:?}\", f1);\n\n    Ok(())\n}\n</code></pre>\n\n<p>Or better, derive <code>Deserialize</code> for a type and let it do the hard work:</p>\n\n<pre><code>use serde::Deserialize; // 1.0.93\nuse serde_yaml; // 0.8.9\nuse std::collections::BTreeMap;\n\n#[derive(Debug, Deserialize)]\nstruct File {\n    version: String,\n    indexed: BTreeMap&lt;String, String&gt;,\n}\n\nfn main() -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let input = r#\"\n    version: '3'\n    indexed:\n      file1: \"abc\"\n      file2: \"def\"\n      file3: 33\n    \"#;\n\n    let file: File = serde_yaml::from_str(input)?;\n    let f1 = &amp;file.indexed[\"file1\"];\n\n    println!(\"{:?}\", f1);\n\n    Ok(())\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/53243795/155423\">How do you read a YAML file in Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 527, "user_id": 4912976, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/20f1f3818f5ffe2e879ca32d0e05dc4f?s=128&d=identicon&r=PG&f=1", "display_name": "freefall", "link": "https://stackoverflow.com/users/4912976/freefall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 422, "favorite_count": 0, "accepted_answer_id": 56755991, "answer_count": 1, "score": 1, "last_activity_date": 1561475799, "creation_date": 1561469504, "last_edit_date": 1561475799, "question_id": 56755277, "link": "https://stackoverflow.com/questions/56755277/how-to-get-a-nested-property-from-serde-yamlvalue", "title": "How to get a nested property from serde_yaml::Value?", "body": "<p>I have the following YAML file</p>\n\n<pre><code>version: '3'\nindexed:\n  file1: \"abc\"\n  file2: \"def\"\n  file3: 33\n</code></pre>\n\n<p>I read it with this code:</p>\n\n<pre><code>pub fn read_conf() -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt;{\n    let f = File::open(\".\\\\src\\\\conf.yaml\")?;\n    let d: Mapping = from_reader(f)?;\n    let value = d.get(&amp;Value::String(\"version\".into())).unwrap();\n    println!(\"{:?}\", value.as_str().unwrap());\n\n    let value = d.get(&amp;Value::String(\"indexed.file1\".into())).unwrap();\n    println!(\"{:?}\", value);\n    Ok(())\n}\n</code></pre>\n\n<p>which yields</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>\"3\"\nthread 'main' panicked at 'called `Option::unwrap()` on a `None` value', src\\libcore\\option.rs:345:21\n</code></pre>\n\n<p>How do I instantiate <code>Value</code> to get the needed value?</p>\n"}, {"tags": ["casting", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561466333, "post_id": 56754101, "comment_id": 100066031, "body": "You can&#39;t copy nor clone mutable references, so you can&#39;t copy or clone a vector of mutable references."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561466768, "post_id": 56754101, "comment_id": 100066333, "body": "@mcarton But can you convert a mutable reference to immutable references, if the immutable reference is never used during the lifetime of the mutable references?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1561466923, "post_id": 56754101, "comment_id": 100066438, "body": "Yes but that moves the mutable reference, so you wouldn&#39;t be able to keep the original vector."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1561467219, "post_id": 56754101, "comment_id": 100066604, "body": "Why do (you think) you need this? Vectors of references are fishy enough as they are, but trying to have simultaneously several vectors of references to the same elements with different mutability seems weird."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561467379, "post_id": 56754101, "comment_id": 100066716, "body": "@mcarton In a loop, I&#39;m running a function to check which resource has the most time left (the function), then subtracting the time required for a particular task from that resource (among other things). I only need this copy to pass into the function, since the function mutates the vector it&#39;s given."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 1, "creation_date": 1561468128, "post_id": 56754101, "comment_id": 100067249, "body": "This looks like an XY problem to me. I&#39;d recommend asking a seperate question with a more representative example of what you&#39;re trying to achieve - my hunch is that there&#39;s likely a more &#39;rust-y&#39; way to approach it."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1561474146, "post_id": 56754101, "comment_id": 100071085, "body": "@JoeClay <a href=\"https://stackoverflow.com/q/56756713/5223757\">I&#39;ve posted the &quot;X&quot; here</a>, though the title&#39;s rubbish and I&#39;m not sure of the tags to use."}], "answers": [{"comments": [{"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561466921, "post_id": 56754449, "comment_id": 100066436, "body": "Is there a way to promise the compiler that I won&#39;t use the mutable references during the lifetime of the immutable references?"}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561467960, "post_id": 56754449, "comment_id": 100067132, "body": "You can&#39;t have a mutable reference to something at the same time as an immutable reference. There are wrapper types that can shift enforcement of this to runtime (<code>RefCell</code>, <code>Mutex</code>, etc.), but they&#39;re something of a last resort."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1606942799, "post_id": 56754449, "comment_id": 115119876, "body": "<i>you can&#39;t really get around this</i> \u2014 <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=daa16f05da13036c8a383d99522205ac\" rel=\"nofollow noreferrer\">why not</a>?"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": false, "score": 5, "last_activity_date": 1606941309, "last_edit_date": 1606941309, "creation_date": 1561466860, "answer_id": 56754449, "question_id": 56754101, "link": "https://stackoverflow.com/questions/56754101/how-do-you-convert-vecmut-t-to-vect/56754449#56754449", "title": "How do you convert Vec&lt;&amp;mut T&gt; to Vec&lt;&amp;T&gt;?", "body": "<p>You can dereference and reborrow the mutable references, then add them to a new <code>Vec</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut st = String::new();\n\n    let mut_vec = vec![&amp;mut st];\n    let immut_vec = mut_vec.into_iter().map(|x| &amp;*x).collect();\n\n    cool_func(immut_vec);\n}\n\nfn cool_func(_: Vec&lt;&amp;String&gt;) {}\n</code></pre>\n<p>Note however, that this consumes the original <code>Vec</code> - you can't really get around this, as if the original <code>Vec</code> still existed, you'd have both mutable and immutable references to the same piece of data, which the compiler will not allow.</p>\n"}, {"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1606942690, "last_edit_date": 1606942690, "creation_date": 1606941563, "answer_id": 65115787, "question_id": 56754101, "link": "https://stackoverflow.com/questions/56754101/how-do-you-convert-vecmut-t-to-vect/65115787#65115787", "title": "How do you convert Vec&lt;&amp;mut T&gt; to Vec&lt;&amp;T&gt;?", "body": "<p>If you <strong>need</strong> to actually <em>convert</em>, see <a href=\"https://stackoverflow.com/a/56754449/155423\">Joe Clay's answer</a>. However, you might not need to convert in the first place!</p>\n<p>Instead of changing the argument, change the function so that it accepts both mutable and immutable references. Here we use <a href=\"https://doc.rust-lang.org/std/borrow/trait.Borrow.html\" rel=\"nofollow noreferrer\"><code>Borrow</code></a> to abstract over both:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>use std::borrow::Borrow;\n\nfn main() {\n    let mut st = String::new();\n\n    let mut_vec = vec![&amp;mut st];\n    cool_func(mut_vec);\n\n    let immut_vec = vec![&amp;st];\n    cool_func(immut_vec);\n}\n\nfn cool_func&lt;S&gt;(_: Vec&lt;S&gt;)\nwhere\n    S: Borrow&lt;String&gt;,\n{\n}\n</code></pre>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/55948343/155423\">How to pass Iterator&lt;String&gt; as Iterator&lt;&amp;str&gt;?</a></li>\n<li><a href=\"https://stackoverflow.com/q/40006219/155423\">Why is it discouraged to accept a reference to a String (&amp;String), Vec (&amp;Vec), or Box (&amp;Box) as a function argument?</a></li>\n</ul>\n"}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 520, "favorite_count": 0, "accepted_answer_id": 65115787, "answer_count": 2, "score": 3, "last_activity_date": 1606942690, "creation_date": 1561465789, "last_edit_date": 1606941273, "question_id": 56754101, "link": "https://stackoverflow.com/questions/56754101/how-do-you-convert-vecmut-t-to-vect", "title": "How do you convert Vec&lt;&amp;mut T&gt; to Vec&lt;&amp;T&gt;?", "body": "<p>I've got a vector of mutable references:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct T;\nlet mut mut_vec: Vec&lt;&amp;mut T&gt; = vec![];\n</code></pre>\n<p>How can I pass (a copy of) it into a function that takes a vector of immutable references?</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn cool_func(mut immut_vec: Vec&lt;&amp;T&gt;) {}\n</code></pre>\n"}, {"tags": ["ssl", "rust", "rust-cargo"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561466762, "post_id": 56753597, "comment_id": 100066328, "body": "I see a valid certificate on my side. Are you behind a proxy or corporate network that might change that? What does your browser tell you when you visit <a href=\"https://crates.io/api/v1/crates/nom/5.0.0/download\" rel=\"nofollow noreferrer\">crates.io/api/v1/crates/nom/5.0.0/download</a>?"}, {"owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561472616, "post_id": 56753597, "comment_id": 100070186, "body": "@mcarton I use my phone as a Wifi hot spot and connect my computer. Visiting the link you provided downloads nom-5.0.0.crate file. I am not behind a proxy."}], "owner": {"reputation": 10770, "user_id": 852063, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/80fd1d68d0d2ae503cf5870e29fecae5?s=128&d=identicon&r=PG&f=1", "display_name": "Amani", "link": "https://stackoverflow.com/users/852063/amani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 290, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1562158058, "creation_date": 1561464110, "last_edit_date": 1562158058, "question_id": 56753597, "link": "https://stackoverflow.com/questions/56753597/cargo-cannot-download-dependencies", "title": "Cargo cannot download dependencies", "body": "<p>I'm trying to build local Rust projects with dependencies from various crates using Rust 1.35.0 on Windows 10 x64. Every time I try to run <code>cargo build</code> or <code>cargo run</code> the following error message appears.</p>\n\n<p><code>error: failed to download from `https://crates.io/api/v1/crates/nom/5.0.0/download`Caused by: [35] SSL connect error (schannel: next InitializeSecurityContext failed: Unknown error (0x80092013) - The revocation function was unable to check revocation because the revocation server was offline.)</code></p>\n\n<p>I've tried this with several other crates apart from nom and got exactly the same error message with exception of crate name and version. Reading around pointed me to disabling my firewall, this does not work. </p>\n\n<p>How can it be solved.</p>\n"}, {"tags": ["performance", "rust"], "comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 2, "creation_date": 1561460992, "post_id": 56751875, "comment_id": 100062920, "body": "Are you testing with the compiler optimizations ? both source produces identical assembly <a href=\"https://godbolt.org/z/sE58FH\" rel=\"nofollow noreferrer\">godbolt.org/z/sE58FH</a>"}], "answers": [{"tags": [], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "is_accepted": true, "score": 1, "last_activity_date": 1561471294, "last_edit_date": 1561471294, "creation_date": 1561460950, "answer_id": 56752737, "question_id": 56751875, "link": "https://stackoverflow.com/questions/56751875/why-does-removing-an-unused-if-clause-reduce-execution-time-from-12ms-to-4ms/56752737#56752737", "title": "Why does removing an unused `if` clause reduce execution time from 12ms to 4ms?", "body": "<p>The compilation profile matters in such cases. In <code>Debug</code> mode, the compiler does not work hard to optimize such kind of code. </p>\n\n<p>If you compile your application in <code>Release</code> mode, these kind of things are optimized. </p>\n\n<p>You can also specify your <strong><em>optimization level</em></strong> in a parameterized way in your config. </p>\n\n<p><a href=\"https://doc.rust-lang.org/book/ch14-01-release-profiles.html\" rel=\"nofollow noreferrer\">Reference</a> </p>\n\n<hr>\n\n<p>I have reproduced your <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">MCVE</a> in playground and you can see that it is pretty much giving the same time result in release mode since it is optimizing these kinds of branches in the code.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=feaac2c8a31b014357bc40a1d701e49e\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 465, "user_id": 876147, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/4QjCN.jpg?s=128&g=1", "display_name": "bayinamy", "link": "https://stackoverflow.com/users/876147/bayinamy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 56752737, "answer_count": 1, "score": -1, "last_activity_date": 1561471294, "creation_date": 1561458238, "last_edit_date": 1561471238, "question_id": 56751875, "link": "https://stackoverflow.com/questions/56751875/why-does-removing-an-unused-if-clause-reduce-execution-time-from-12ms-to-4ms", "title": "Why does removing an unused `if` clause reduce execution time from 12ms to 4ms?", "body": "<p>I'm using Rust to solve LeetCode <a href=\"https://leetcode.com/problems/set-mismatch/\" rel=\"nofollow noreferrer\">problem 645 \"Set Mismatch\"</a>.</p>\n\n<p>The solution is to iterate over the array and find the duplicate, then add an error to the duplicate to find the missing value.</p>\n\n<p>Here's my code the first submission:</p>\n\n<pre><code>impl Solution {\n    pub fn find_error_nums(nums: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n        let nums = &amp;mut { nums };\n        nums.sort();\n        let mut dup = 0;\n        for &amp;num in nums.iter() {\n            if dup == num {\n                break;\n            }\n            dup = num;\n        }\n        let sum: i32 = nums.iter().sum();\n        let correct_sum = ((1 + nums.len()) * nums.len() / 2) as i32;\n        if sum &lt; correct_sum {\n            vec![dup, dup + correct_sum - sum]\n        } else {\n            vec![dup, dup - (sum - correct_sum)]\n        }\n    }\n}\n</code></pre>\n\n<p>It cost 12ms. Then I noticed the <code>if</code> in the end was unnecessary, so I submitted a second time:</p>\n\n<pre><code>impl Solution {\n    pub fn find_error_nums(nums: Vec&lt;i32&gt;) -&gt; Vec&lt;i32&gt; {\n        let nums = &amp;mut { nums };\n        nums.sort();\n        let mut dup = 0;\n        for &amp;num in nums.iter() {\n            if dup == num {\n                break;\n            }\n            dup = num;\n        }\n        let sum: i32 = nums.iter().sum();\n        let correct_sum = ((1 + nums.len()) * nums.len() / 2) as i32;\n\n        // the \"if\" changed to:\n        let error = correct_sum - sum;\n        vec![dup, dup + error]\n    }\n}\n</code></pre>\n\n<p>I did not expect to see any runtime difference, but, to my surprise, the second submission cost only 4ms! </p>\n\n<p>Why does the trivial programming logic change make the execution time reduce 67%?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 14722, "user_id": 401137, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/j25bf.png?s=128&g=1", "display_name": "Some Guy", "link": "https://stackoverflow.com/users/401137/some-guy"}, "edited": false, "score": 0, "creation_date": 1561456380, "post_id": 56750602, "comment_id": 100060280, "body": "Could you share a repo with a reproducable example, and the actual full error message?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1561458266, "post_id": 56750602, "comment_id": 100061335, "body": "Related: <a href=\"https://stackoverflow.com/questions/29184358/how-do-i-require-a-generic-type-implement-an-operation-like-add-sub-mul-or-di\" title=\"how do i require a generic type implement an operation like add sub mul or di\">stackoverflow.com/questions/29184358/&hellip;</a>, <a href=\"https://stackoverflow.com/questions/37296351/trait-for-numeric-functionality-in-rust\" title=\"trait for numeric functionality in rust\">stackoverflow.com/questions/37296351/&hellip;</a>,"}, {"owner": {"reputation": 14722, "user_id": 401137, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/j25bf.png?s=128&g=1", "display_name": "Some Guy", "link": "https://stackoverflow.com/users/401137/some-guy"}, "edited": false, "score": 0, "creation_date": 1561460152, "post_id": 56750602, "comment_id": 100062437, "body": "If I just had to guess based on the error, maybe you just need <code>spline.sample(*x)</code>, but I don&#39;t see why from just the code you&#39;ve posted. Something we can compile ourselves would help :)"}, {"owner": {"reputation": 81, "user_id": 5437597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a23d6337f05cbb288e42b8fb0d3caef?s=128&d=identicon&r=PG&f=1", "display_name": "hombit", "link": "https://stackoverflow.com/users/5437597/hombit"}, "edited": false, "score": 0, "creation_date": 1561464962, "post_id": 56750602, "comment_id": 100065127, "body": "Updated with full example and error"}], "answers": [{"tags": [], "owner": {"reputation": 738, "user_id": 1879547, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/d08c8785b44c2e795ebed85a2afc7cc4?s=128&d=identicon&r=PG", "display_name": "0x2207", "link": "https://stackoverflow.com/users/1879547/0x2207"}, "is_accepted": true, "score": 1, "last_activity_date": 1561467555, "creation_date": 1561467555, "answer_id": 56754677, "question_id": 56750602, "link": "https://stackoverflow.com/questions/56750602/reference-traits-no-implementation-for-t-t/56754677#56754677", "title": "Reference traits: no implementation for `&amp;T * &amp;T`", "body": "<p>Maybe you could just consider using <code>Key::new(*x, *y, Interpolation::Linear)</code> and <code>spline.sample(*x)</code>?</p>\n"}], "owner": {"reputation": 81, "user_id": 5437597, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2a23d6337f05cbb288e42b8fb0d3caef?s=128&d=identicon&r=PG&f=1", "display_name": "hombit", "link": "https://stackoverflow.com/users/5437597/hombit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 56754677, "answer_count": 1, "score": 0, "last_activity_date": 1561467555, "creation_date": 1561454133, "last_edit_date": 1561464932, "question_id": 56750602, "link": "https://stackoverflow.com/questions/56750602/reference-traits-no-implementation-for-t-t", "title": "Reference traits: no implementation for `&amp;T * &amp;T`", "body": "<p>I try to write generic method and specify some type <code>T: num_traits::float::Float</code> from <a href=\"https://crates.io/crates/num-traits\" rel=\"nofollow noreferrer\">num-traits crate</a>. How should I ask <code>&amp;T</code> to implement basic numeric methods such as multiplication?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use splines::{Interpolation, Key, Spline, interpolate};\nuse num_traits::{float::Float, identities};\nuse conv::prelude::*;\n\n\nstruct Interpolator&lt;T&gt;\nwhere T: Float + interpolate::One + interpolate::Trigo {\n    target_x: Vec&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Interpolator&lt;T&gt;\nwhere T: Float + interpolate::One + interpolate::Trigo {\n    fn interpolate&lt;U&gt;(&amp;self, x: &amp;[T], y: &amp;[U]) -&gt; Vec&lt;U&gt;\n    where U: Float + identities::Zero {\n        assert_eq!(x.len(), y.len());\n        let key_iter = x.iter().zip(y).map(|(x, y)| Key::new(x, y, Interpolation::Linear));\n        let spline = Spline::from_iter(key_iter);\n        let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n        result\n    }\n}\n\n\nfn main() {\n}\n</code></pre>\n\n<p><code>Cargo.toml</code></p>\n\n<pre><code>[package]\nname = \"name\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nconv = \"0.3.2\"\nsplines = \"1.0.0-rc.3\"\nnum-traits = \"0.2\"\n</code></pre>\n\n<p>Compilation errors:</p>\n\n<pre><code>error[E0277]: the trait bound `&amp;T: splines::interpolate::One` is not satisfied\n  --&gt; src/main.rs:18:66\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                  ^^^^^^ the trait `splines::interpolate::One` is not implemented for `&amp;T`\n\nerror[E0277]: the trait bound `&amp;T: splines::interpolate::Trigo` is not satisfied\n  --&gt; src/main.rs:18:66\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                  ^^^^^^ the trait `splines::interpolate::Trigo` is not implemented for `&amp;T`\n\nerror[E0277]: cannot multiply `&amp;T` to `&amp;T`\n  --&gt; src/main.rs:18:66\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                  ^^^^^^ no implementation for `&amp;T * &amp;T`\n   |\n   = help: the trait `std::ops::Mul` is not implemented for `&amp;T`\n   = help: consider adding a `where &amp;T: std::ops::Mul` bound\n\nerror[E0277]: cannot divide `&amp;T` by `&amp;T`\n  --&gt; src/main.rs:18:66\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                  ^^^^^^ no implementation for `&amp;T / &amp;T`\n   |\n   = help: the trait `std::ops::Div` is not implemented for `&amp;T`\n   = help: consider adding a `where &amp;T: std::ops::Div` bound\n\nerror[E0277]: the trait bound `&amp;U: splines::interpolate::Interpolate&lt;&amp;T&gt;` is not satisfied\n  --&gt; src/main.rs:18:66\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                  ^^^^^^ the trait `splines::interpolate::Interpolate&lt;&amp;T&gt;` is not implemented for `&amp;U`\n\nerror[E0277]: cannot add `&amp;T` to `&amp;T`\n  --&gt; src/main.rs:18:66\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                  ^^^^^^ no implementation for `&amp;T + &amp;T`\n   |\n   = help: the trait `std::ops::Add` is not implemented for `&amp;T`\n   = help: consider adding a `where &amp;T: std::ops::Add` bound\n   = note: required because of the requirements on the impl of `splines::interpolate::Additive` for `&amp;T`\n\nerror[E0277]: cannot subtract `&amp;T` from `&amp;T`\n  --&gt; src/main.rs:18:66\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                  ^^^^^^ no implementation for `&amp;T - &amp;T`\n   |\n   = help: the trait `std::ops::Sub` is not implemented for `&amp;T`\n   = help: consider adding a `where &amp;T: std::ops::Sub` bound\n   = note: required because of the requirements on the impl of `splines::interpolate::Additive` for `&amp;T`\n\nerror[E0277]: the trait bound `&amp;U: num_traits::identities::Zero` is not satisfied\n  --&gt; src/main.rs:18:86\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                                      ^^^^^^^^^^^^^^^^ the trait `num_traits::identities::Zero` is not implemented for `&amp;U`\n   |\n   = note: required by `num_traits::identities::zero`\n\nerror[E0277]: a collection of type `std::vec::Vec&lt;U&gt;` cannot be built from an iterator over elements of type `&amp;U`\n  --&gt; src/main.rs:18:107\n   |\n18 |         let result: Vec&lt;U&gt; = self.target_x.iter().map(|x| spline.sample(x).unwrap_or(identities::zero())).collect();\n   |                                                                                                           ^^^^^^^ a collection of type `std::vec::Vec&lt;U&gt;` cannot be built from `std::iter::Iterator&lt;Item=&amp;U&gt;`\n   |\n   = help: the trait `std::iter::FromIterator&lt;&amp;U&gt;` is not implemented for `std::vec::Vec&lt;U&gt;`\n\nerror: aborting due to 9 previous errors\n\nFor more information about this error, try `rustc --explain E0277`.\nerror: Could not compile `trait_generic`.\n</code></pre>\n"}, {"tags": ["postgresql", "rust"], "comments": [{"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1561485291, "post_id": 56747634, "comment_id": 100076631, "body": "This question is rather broad and somewhat unclear. You do not specify what exactly you want to do on the database side, nor what you want to do on the application side. Please break this down into steps, and ask more specific questions, or go to a different platform for a more open-ended discussion (e.g. Reddit). My impression is that you first need to clarify what exactly you want the database to do. There are no &quot;table modification events&quot; per se in Postgres. You can write a trigger that notifies a channel, but in any case you should write the SQL first before thinking about Rust."}], "answers": [{"tags": [], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "is_accepted": false, "score": 0, "last_activity_date": 1561541282, "creation_date": 1561541282, "answer_id": 56769472, "question_id": 56747634, "link": "https://stackoverflow.com/questions/56747634/how-do-i-use-the-postgres-crate-to-receive-table-modification-events-from-postgr/56769472#56769472", "title": "How do I use the postgres crate to receive table modification events from PostgreSQL?", "body": "<p>Listening for events on specific channel for PostgreSQL goes as below :-</p>\n\n<pre><code>// Establish connection with database.\nlet url = \"postgresql://root:root1234@127.0.01/test\";\nlet conn = Connection::connect(url, TlsMode::None).unwrap();\n\n// Listen for events on channel 'myevent'.\nconn.execute(\"LISTEN myevent\", &amp;[]).expect(\"Could not send LISTEN\");\nlet notifications = conn.notifications();\nlet mut it = notifications.blocking_iter();\n\nprintln!(\"Waiting for notifications...\");\nloop {\n    let a = it.next();\n    match a {\n        Ok(Some(b)) =&gt; {\n            println!(\"{:?}\", b);\n        },\n        Err(e) =&gt; println!(\"Got error {:?}\", e),\n        _ =&gt; panic!(\"Unexpected operation!!!\")\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 156, "favorite_count": 2, "answer_count": 1, "score": 0, "last_activity_date": 1561552708, "creation_date": 1561442039, "last_edit_date": 1561552708, "question_id": 56747634, "link": "https://stackoverflow.com/questions/56747634/how-do-i-use-the-postgres-crate-to-receive-table-modification-events-from-postgr", "title": "How do I use the postgres crate to receive table modification events from PostgreSQL?", "body": "<p>I have a Rust process dealing with a PostgreSQL database. This process communicates with a server process to pass on the details using MPSC channels. I am stuck on how to listen for and process events for table modification.</p>\n\n<p>I tried using tokio-postgres but it seems there is <a href=\"https://users.rust-lang.org/t/tokio-postgres-0-3-0-as-dependency-introduces-error-failed-to-resolve-use-of-undeclared-type-or-module-connecterror/29584/2\" rel=\"nofollow noreferrer\">an issue</a> with it on Windows.</p>\n"}, {"tags": ["error-handling", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561473666, "post_id": 56747417, "comment_id": 100070811, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/33687447/155423\">How to get a reference to a concrete type from a trait object?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/56747417/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1561470931, "last_edit_date": 1561470931, "creation_date": 1561441636, "answer_id": 56747569, "question_id": 56747417, "link": "https://stackoverflow.com/questions/56747417/how-to-handle-different-error-types-after-boxing-them-with-boxerrorerror/56747569#56747569", "title": "How to handle different error types after boxing them with Box&lt;error::Error&gt;?", "body": "<p>You lose the concrete type information by using a trait. Some error crate could help you, but this implies casting a trait to a concrete type and so could fail at runtime.</p>\n\n<p>I advise you to create a type <code>MyError</code> and list all potential errors that your function could produce. You can then match the real error nicely and fast. For example, use <a href=\"https://docs.rs/snafu/0.4.1/snafu/\" rel=\"nofollow noreferrer\"><code>SNAFU</code></a></p>\n"}], "owner": {"reputation": 20521, "user_id": 1135424, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/rvwBS.jpg?s=128&g=1", "display_name": "nbari", "link": "https://stackoverflow.com/users/1135424/nbari"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "closed_date": 1561490972, "answer_count": 1, "score": 0, "last_activity_date": 1561510872, "creation_date": 1561440908, "last_edit_date": 1561471026, "question_id": 56747417, "link": "https://stackoverflow.com/questions/56747417/how-to-handle-different-error-types-after-boxing-them-with-boxerrorerror", "closed_reason": "Duplicate", "title": "How to handle different error types after boxing them with Box&lt;error::Error&gt;?", "body": "<p>In my try to better handle errors and prevent repeating tio much code, I am implementing the <a href=\"https://doc.rust-lang.org/stable/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html#the--operator-for-easier-error-handling\" rel=\"nofollow noreferrer\"><code>?</code></a>, operator returning <code>Result&lt;bool, Box&lt;error::Error&gt;&gt;</code> so that I could just <code>match</code> the error once instead of multiple times.</p>\n\n<p>I changed the following code using multiple <code>match</code>es:</p>\n\n<pre><code>fn example(pool: mysql::Pool) {\n    let now = match SystemTime::now().duration_since(SystemTime::UNIX_EPOCH) {\n        Ok(n) =&gt; n.as_secs(),\n        Err(_) =&gt; panic!(\"SystemTime before UNIX EPOCH!\"),\n    };\n\n    // create table\n    match pool.prep_exec(\"CREATE TABLE IF NOT EXISTS dbpulse_rw (id INT NOT NULL, t INT(11) NOT NULL, PRIMARY KEY(id))\", ()) {\n        Ok(_) =&gt; (),\n        Err(e) =&gt; {\n            eprintln!(\"{}\", e);\n            return;\n        }\n    }\n\n    // write into table\n    let mut stmt = match pool\n        .prepare(\"INSERT INTO dbpulse_rw (id, t) VALUES (1, ?) ON DUPLICATE KEY UPDATE t=?\")\n    {\n        Ok(stmt) =&gt; stmt,\n        Err(e) =&gt; {\n            eprintln!(\"{}\", e);\n            return;\n        }\n    };\n\n    match stmt.execute((now, now)) {\n        Ok(_) =&gt; (),\n        Err(mysql::Error::IoError(e)) =&gt; {\n            eprintln!(\"IoError: {}\", e);\n            // send alert\n            return;\n        }\n        Err(e) =&gt; {\n            eprintln!(\"{}\", e);\n            return;\n        }\n    }\n\n    let items = match pool.prep_exec(\"SELECT t FROM dbpulse_rw WHERE id=1\", ()) {\n        Ok(n) =&gt; n,\n        Err(mysql::Error::IoError(e)) =&gt; {\n            eprintln!(\"IoError: {}\", e);\n            //send_alert\n            return;\n        }\n        Err(e) =&gt; {\n            eprintln!(\"{}\", e);\n            return;\n        }\n    };\n    for row in items {\n        let pool = pool.clone();\n        let rs = mysql::from_row::&lt;u64&gt;(row.unwrap());\n        if now != rs {\n            // send alert\n        }\n        assert_eq!(now, rs);\n    }\n}\n</code></pre>\n\n<p>To use the <code>?</code> operator:</p>\n\n<pre><code>fn example(pool: mysql::Pool) -&gt; Result&lt;bool, Box&lt;error::Error&gt;&gt; {\n    let n = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH)?;\n    let now = n.as_secs();\n\n    // create table\n    pool.prep_exec(\"CREATE TABLE IF NOT EXISTS dbpulse_rw (id INT NOT NULL, t INT(11) NOT NULL, PRIMARY KEY(id))\", ())?;\n\n    // write into table\n    let mut stmt = pool\n        .prepare(\"INSERT INTO dbpulse_rw (id, t) VALUES (1, ?) ON DUPLICATE KEY UPDATE t=?\")?;\n    stmt.execute((now, now))?;\n\n    pool.prep_exec(\"SELECT t FROM dbpulse_rw WHERE id=1\", ())\n        .map(|items| {\n            for row in items {\n                match row {\n                    Ok(row) =&gt; {\n                        let rs = mysql::from_row::&lt;u64&gt;(row);\n                        if now != rs {\n                            // send alert\n                        }\n                    }\n                    Err(e) =&gt; println!(\"{}\", e),\n                }\n            }\n        })?;\n\n    Ok(true)\n}\n</code></pre>\n\n<p>What I would like to do now is to <code>match</code> based on the error, either a timeout or a query error, or other error type. I am creating the MySQL pool like this:</p>\n\n<pre><code>let mut opts = mysql::OptsBuilder::from_opts(dsn);\nopts.stmt_cache_size(0);\nopts.read_timeout(Some(Duration::new(3, 0)));\nopts.write_timeout(Some(Duration::new(3, 0)));\nlet pool = mysql::Pool::new_manual(1, 5, opts).expect(\"Could not connect to MySQL\");\n</code></pre>\n\n<p>If a query takes more than 3 seconds it will return a <code>mysql::Error::IoError</code> the one I would like to distinguish between other possible errors, so far I have tried:</p>\n\n<pre><code>fun run_example() {\n    match example() {\n       Ok(_) =&gt; (),\n       Err(mysql::Error::IoError(e)) =&gt; {\n          eprintln!(\"IoError: {}\", e);\n          // send alert\n          return;\n       }\n       Err(e) =&gt; {\n         eprintln!(\"{}\", e);\n         return;\n       }\n    }\n}\n</code></pre>\n\n<p>But I am getting a mismatched types error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected struct `std::boxed::Box`, found enum `mysql::error::Error`\n</code></pre>\n\n<p>Any tips or better ideas about how to implement this?</p>\n"}, {"tags": ["parsing", "rust", "pest"], "comments": [{"owner": {"reputation": 26552, "user_id": 448932, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QgLLl.png?s=128&g=1", "display_name": "500 - Internal Server Error", "link": "https://stackoverflow.com/users/448932/500-internal-server-error"}, "edited": false, "score": 0, "creation_date": 1561449596, "post_id": 56747126, "comment_id": 100056658, "body": "I have no direct experience with this particular grammar definition language, but usually, if the parser can match the input to an alternative - <code>inner_exp</code> in this case - it will not go on to try any of the others, even if the parse fails after the current production."}], "answers": [{"comments": [{"owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "edited": false, "score": 0, "creation_date": 1561522245, "post_id": 56758870, "comment_id": 100086387, "body": "First of all, thank you for this answer. You&#39;ve adroitly pointed out several of the issues I overlooked in my grammar. However, your answer does have an issue. To exemplify, <code>ln(4+4)+4*1</code> will fail the grammar you have suggested because <code>unaryop ~ &quot;(&quot; ~ exp ~ &quot;)&quot;</code> does not fit into <code>inner_exp</code>. Using your suggestions, I have fixed my grammer. How does <a href=\"https://pest-parser.github.io/?bin=14pli9#editor\" rel=\"nofollow noreferrer\">this</a> look?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "edited": false, "score": 0, "creation_date": 1561552185, "post_id": 56758870, "comment_id": 100101140, "body": "@Woody1193 Sorry, see my edit. Your grammar leads to a weird precedence. For example <code>-3+4</code> would be parsed as <code>-(3+4)</code> rather than <code>(-3)+4</code>."}, {"owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "edited": false, "score": 0, "creation_date": 1561602664, "post_id": 56758870, "comment_id": 100120812, "body": "Yeah, I noticed that too. That was also a mistake on my part"}, {"owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "edited": false, "score": 0, "creation_date": 1561607786, "post_id": 56758870, "comment_id": 100121733, "body": "I also noticed that the parser has trouble parsing <code>(2+3)+4</code> or things like that so I made an additional update: <a href=\"https://pest-parser.github.io/?bin=718j3#editor\" rel=\"nofollow noreferrer\">here</a>."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 2, "last_activity_date": 1573737601, "last_edit_date": 1573737601, "creation_date": 1561482173, "answer_id": 56758870, "question_id": 56747126, "link": "https://stackoverflow.com/questions/56747126/pest-doesnt-parse-a-recursive-grammar-as-i-would-expect/56758870#56758870", "title": "Pest doesn&#39;t parse a recursive grammar as I would expect", "body": "<p>The choice operator in PEGs is ordered and works as follows: Given <code>e = {alt1 | alt2}</code>:</p>\n\n<ul>\n<li>If <code>alt1</code> can be matched successfully, <code>alt1</code> is applied and <code>alt2</code> is never tried.</li>\n<li>Otherwise <code>alt2</code> is matched</li>\n<li>If <code>alt2</code> can't match either, <code>e</code> fails to match</li>\n</ul>\n\n<p>Now <code>e = {e1 ~ e2}</code> works as follows:</p>\n\n<ul>\n<li>If <code>e1</code> can be matched and <code>e2</code> can be matched after it, both are matched sequentially.</li>\n<li>Otherwise <code>e</code> fails to match.</li>\n</ul>\n\n<p>So if you have something like <code>e = {(e1 | e2) ~ e3}</code>, the following will happen:</p>\n\n<ul>\n<li>If <code>e1</code> can be matched:\n\n<ul>\n<li>If <code>e3</code> can be matched after <code>e1</code>, both are matched sequentially</li>\n<li>Otherwise, <code>e</code> fails to match</li>\n</ul></li>\n<li>If <code>e1</code> fails to match, but <code>e2</code> can be matched:\n\n<ul>\n<li>If <code>e3</code> can be matched after <code>e2</code>, both are matched sequentially</li>\n<li>Otherwise, <code>e</code> fails to match</li>\n</ul></li>\n</ul>\n\n<p>Notably if <code>e1</code> succeeds and <code>e3</code> fails, it does not go back and try to match <code>e2</code> instead. So if both <code>e1</code> and <code>e2</code> can produce a match, but only <code>e2</code> allows <code>e3</code> to be matched afterwards, <code>(e1 | e2) ~ e3</code> will fail whereas <code>(e1 ~ e3) | (e2 ~ e3)</code> would succeed.</p>\n\n<p>So in your grammar you have <code>(inner_exp | ...) ~ EOI</code>. Now for your input <code>inner_exp</code> produces a match, so per the above rules the other alternatives are never tried and it tries to match <code>EOI</code> next. <code>EOI</code> doesn't match, so the whole rule fails and you get the syntax error you get.</p>\n\n<p>This explains the syntax error, but it's not the only problem your grammar has:</p>\n\n<p>Your <code>exp</code> rule is recursive, but it's anchored via <code>SOI</code> and <code>EOI</code>, so it can never match anything other than the entire input. This means that the recursive calls will necessarily always fail. To fix this you should remove <code>SOI</code> and <code>EOI</code> from the definition of <code>exp</code> and instead have a main rule like <code>start = {SOI ~ exp ~ EOI}</code>.</p>\n\n<p>Once you've done this, you'll get an error that your <code>exp</code> rule is now left-recursive, which pest does not support. To fix that, you can replace the left recursion with repetition like this (replacing both the <code>inner_exp</code> and <code>exp ~ (...) ~ inner_exp</code> alternatives) where <code>operand</code> is a rule that matches the constructs other than infix operations:</p>\n\n<pre><code>operand ~ (( \"+\"|\"-\"|\"*\"|\"/\"|\"^\") ~ operand)*\n</code></pre>\n\n<p>Incidentally this will also fix your current issue because you now no longer have an <code>inner_exp</code> alternative that's tried before the alternative for infix expressions.</p>\n\n<p>Your last issue is that you're not taking operator precedence into account at all. You can fix that by introducing additional \"levels\" of expressions in addition to <code>inner_exp</code> and <code>exp</code>, so that only operators that have the same precedence are defined in the same rule and then each rule invokes the rule containing the next higher precedence to parse the operands. That would look like this:</p>\n\n<pre><code>exp = { summand ~ ((\"+\" | \"-\") ~ summand)* }\nsummand = { factor ~ ((\"*\" | \"/\" | \"%\") ~ factor)* }\nfactor = { unary ~ (\"^\" ~ unary)* }\nunary = { \"-\" ~ unary | unaryop ~ \"(\" ~ exp ~ \")\" | primary }\nprimary = { \"(\" ~ exp ~ \")\" | real | integer | \"pi\" | id }\n</code></pre>\n"}], "owner": {"reputation": 3389, "user_id": 3121975, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/27507c7b9958f8863c6640543baec276?s=128&d=identicon&r=PG&f=1", "display_name": "Woody1193", "link": "https://stackoverflow.com/users/3121975/woody1193"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 0, "accepted_answer_id": 56758870, "answer_count": 1, "score": 1, "last_activity_date": 1616119750, "creation_date": 1561439043, "last_edit_date": 1616119750, "question_id": 56747126, "link": "https://stackoverflow.com/questions/56747126/pest-doesnt-parse-a-recursive-grammar-as-i-would-expect", "title": "Pest doesn&#39;t parse a recursive grammar as I would expect", "body": "<p>I'm using the <a href=\"https://pest.rs/\" rel=\"nofollow noreferrer\">pest</a> crate to implement a recursive grammar in Rust:</p>\n\n<pre><code>id = _{ ASCII_ALPHA_LOWER ~ (ASCII_ALPHANUMERIC|\"_\")* }\ninteger = _{ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)|\"0\" }\nreal = _{ ((integer ~ \".\" ~ ASCII_DIGIT*) | (integer? ~ \".\" ~ ASCII_DIGIT+)) ~ ((\"e\"|\"E\") ~ (\"-\"|\"+\")? ~ ASCII_DIGIT+)? }\n\nunaryop = _{ \"sin\"|\"cos\"|\"tan\"|\"exp\"|\"ln\"|\"sqrt\" }\n\ninner_exp = _{ real|integer|\"pi\"|id }\n\nexp = { SOI ~ ( inner_exp | (exp ~ ( \"+\"|\"-\"|\"*\"|\"/\"|\"^\" ) ~ inner_exp) | (\"-\" ~ exp) | (\"(\" ~ exp ~ \")\") | (unaryop ~ \"(\" ~ exp ~ \")\") ) ~ EOI }\n</code></pre>\n\n<p>However, I'm finding that pest isn't parsing the grammar as I would expect. For instance, <code>2+3</code> gives me an error of:</p>\n\n<pre><code> --&gt; 1:2\n  |\n1 | 2+3\n  |  ^---\n  |\n  = expected EOI\n</code></pre>\n\n<p>It appears that the <code>inner_exp</code> choice is being parsed and then, when the <code>+</code> symbol is encountered, the parser doesn't know what to do. I'm pretty sure there's a problem with how I've written the <code>exp ~ ( \"+\"|\"-\"|\"*\"|\"/\"|\"^\" ) ~ inner_exp</code> choice but I'm not sure what exactly is causing the problem. If I replace that choice with <code>exp ~ ( \"+\"|\"-\"|\"*\"|\"/\"|\"^\" ) ~ exp</code> I get an error stating that the expression is left-recursive. How do I fix this grammar?</p>\n"}, {"tags": ["rust", "substrate"], "comments": [{"owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "edited": false, "score": 0, "creation_date": 1561437667, "post_id": 56746727, "comment_id": 100052054, "body": "I see that <code>type Hash: Parameter + Member + MaybeSerializeDebug + MaybeDisplay + SimpleBitOps + Default + Copy + CheckEqual + Hash + AsRef&lt;[u8]&gt; + AsMut&lt;[u8]&gt;</code> at <a href=\"https://crates.parity.io/srml_system/trait.Trait.html#associatedtype.Hash\" rel=\"nofollow noreferrer\">here</a>. There is a MaybeDisplay, which is a Display type. But when trying to use <code>to_string()</code>, and put <code>use std::string::{ ToString };</code> at the beginning, compiler gives <code>error[E0433]: failed to resolve: use of undeclared type or module `std</code>."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561441108, "post_id": 56746727, "comment_id": 100052994, "body": "&quot;help: consider adding a <code>where &amp;&lt;T as srml_system::Trait&gt;::Hash: core::cmp::PartialEq&lt;&lt;T as srml_system::Trait&gt;::Hash&gt;</code> bound&quot;"}, {"owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561446430, "post_id": 56746727, "comment_id": 100055130, "body": "@Stargateur updated to show the full &amp; relevant code."}, {"owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "edited": false, "score": 1, "creation_date": 1561456556, "post_id": 56746727, "comment_id": 100060366, "body": "There is a <a href=\"https://crates.parity.io/sr_primitives/traits/trait.CheckEqual.html\" rel=\"nofollow noreferrer\"><code>CheckEqual</code> trait</a>, have you tried using it?"}, {"owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "reply_to_user": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "edited": false, "score": 0, "creation_date": 1561460491, "post_id": 56746727, "comment_id": 100062646, "body": "@ShawnTabrizi I would expect <code>fn check_equal(&amp;self, other: &amp;Self)</code> returns a Bool, but it instead returns nothing. Is there an example how to use that function?"}, {"owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "edited": false, "score": 0, "creation_date": 1561468858, "post_id": 56746727, "comment_id": 100067722, "body": "It seems you are right. In this situation, you can define your own function to compare two Hashes, just copy the <code>check_equal</code> function and return the bool you want. In general, it seems that Hashes are not really meant to be used this way, nor would I suggest doing transactions the way you have done above. If you follow the tutorial, we use a little extra storage to keep track of the index of each kitty, and use that as the method to remove it from the list, hence removing iteration."}], "owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1561446398, "creation_date": 1561435855, "last_edit_date": 1561446398, "question_id": 56746727, "link": "https://stackoverflow.com/questions/56746727/srml-systemtraithash-equality-comparison", "title": "srml_system::Trait::Hash equality comparison", "body": "<p>How can I perform an equality comparison on substrate Hash trait?</p>\n\n<p>Say I have the following code, with <code>owned_vec</code> contains a vector of <code>Hash</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use support::{decl_module, decl_storage, decl_event, dispatch::Result,\n  StorageValue, StorageMap, ensure, traits::Currency };\nuse system::ensure_signed;\n\n// this is needed when you want to use Vec and Box\nuse rstd::prelude::*;\nuse runtime_primitives::traits::{ As, Hash };\nuse parity_codec::{ Encode, Decode };\n\n// Our own Cat struct\n#[derive(Encode, Decode, Default, Clone, PartialEq, Debug)]\npub struct Kitty&lt;Hash, Balance&gt; {\n  id: Hash,\n  name: Option&lt;Vec&lt;u8&gt;&gt;,\n  base_price: Balance, // when 0, it is not for sale\n}\n\n// This module's storage items.\ndecl_storage! {\n  trait Store for Module&lt;T: Trait&gt; as CatAuction {\n    Kitties get(kitties): map T::Hash =&gt; Kitty&lt;T::Hash, T::Balance&gt;;\n    KittyOwner get(owner_of): map T::Hash =&gt; Option&lt;T::AccountId&gt;;\n    OwnedKitties get(kitties_owned): map T::AccountId =&gt; Vec&lt;T::Hash&gt; = Vec::new();\n  }\n}\n\ndecl_module! {\n  pub struct Module&lt;T: Trait&gt; for enum Call where origin: T::Origin {\n    fn deposit_event&lt;T&gt;() = default;\n\n    pub fn transaction(origin, kitty_id: T::Hash) -&gt; Result {\n      let sender = ensure_signed(origin)?;\n      let kitty_owner = Self::owner_of(kitty_id).ok_or(\"Kitty has no owner.\")?;\n      let mut kitty = Self::kitties(kitty_id);\n\n      &lt;OwnedKitties&lt;T&gt;&gt;::mutate(kitty_owner, |owned_vec| {\n        let kitty_index = 0;\n\n        for (i, el) in owned_vec.iter().enumerate() {\n          // This is where the compilation error occurs!\n          if el != kitty.id { continue }\n          kitty_index = i;\n        }\n        owned_vec.remove(kitty_index);\n      });\n\n    }    \n  }\n}\n</code></pre>\n\n<p>It gives me compiler error that:  </p>\n\n<pre><code>no implementation for `&amp;&lt;T as srml_system::Trait&gt;::Hash == &lt;T as srml_system::Trait&gt;::Hash\n\nhelp: the trait `core::cmp::PartialEq&lt;&lt;T as srml_system::Trait&gt;::Hash&gt;` is not implemented for `&amp;&lt;T as srml_system::Trait&gt;::Hash`\nhelp: consider adding a `where &amp;&lt;T as srml_system::Trait&gt;::Hash: core::cmp::PartialEq&lt;&lt;T as srml_system::Trait&gt;::Hash&gt;` bound\n</code></pre>\n\n<p>Thank you!</p>\n\n<p>p.s: Aware the tutorial says that looping through a vector is not encouraged in runtime module implementation.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561422204, "post_id": 56745298, "comment_id": 100049444, "body": "No. Your <code>perform</code> method is allowed to empty out the <code>foos</code> vector, leading to memory unsafety. The compiler cannot allow this. Make finer-grained functions or types to be explicit that <code>perform</code> cannot possibly alter <code>foos</code>."}, {"owner": {"reputation": 188, "user_id": 6023997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/353561608c50f83ef06eefaec71cfb0d?s=128&d=identicon&r=PG&f=1", "display_name": "Rio6", "link": "https://stackoverflow.com/users/6023997/rio6"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561422807, "post_id": 56745298, "comment_id": 100049520, "body": "Shouldn&#39;t it not be allowed to do that since it takes bar as immutable reference?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561470653, "post_id": 56745298, "comment_id": 100068919, "body": "Sorry, I got it mixed up. It&#39;s disallowed because given <code>&amp;Bar</code>, you could get a second reference to <code>self</code>. For example, <code>self.foos[0].perform(self)</code> / <code>fn perform(&amp;mut self, bar: &amp;Bar) { bar.foos[0] }</code>. This would allow a mutable and immutable reference to alias."}], "owner": {"reputation": 188, "user_id": 6023997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/353561608c50f83ef06eefaec71cfb0d?s=128&d=identicon&r=PG&f=1", "display_name": "Rio6", "link": "https://stackoverflow.com/users/6023997/rio6"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "closed_date": 1561422092, "answer_count": 0, "score": 2, "last_activity_date": 1593042435, "creation_date": 1561421382, "last_edit_date": 1593042435, "question_id": 56745298, "link": "https://stackoverflow.com/questions/56745298/passing-self-reference-while-iterating-through-a-member", "closed_reason": "Duplicate", "title": "Passing `self` reference while iterating through a member", "body": "<p>I know in Rust, there can't be multiple reference to one object if one of them is mutable. So when I want to pass <code>self</code> as a reference inside a  loop that is borrowing a member already, it wouldn't compile.</p>\n<p>I have a trait function that takes a reference to <code>bar</code>:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait Foo {\n    fn perform(&amp;mut self, bar: &amp;Bar);\n}\n</code></pre>\n<p>In <code>Bar</code>, I have a vector of <code>Foo</code>s:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>struct Bar {\n    foos: Vec&lt;Box&lt;dyn Foo&gt;&gt;,\n}\n</code></pre>\n<p>The following code would not compile because it's borrowing <code>self</code> twice</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl Bar {\n    fn do_it(&amp;mut self) {\n        for foo in &amp;mut self.foos {\n            foo.perform(self);\n        }\n    }\n}\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*self` as immutable because it is also borrowed as mutable\n  --&gt; src/lib.rs:12:25\n   |\n11 |         for foo in &amp;mut self.foos {\n   |                    --------------\n   |                    |\n   |                    mutable borrow occurs here\n   |                    mutable borrow later used here\n12 |             foo.perform(self);\n   |                         ^^^^ immutable borrow occurs here\n</code></pre>\n<p>Is there nice way to do it so <code>Foo::perform()</code> can use the references of both <code>self</code> and <code>bar</code> without the compiler complaining?</p>\n<h2>Edit</h2>\n<p>A couple ways i thought of to get around this:</p>\n<ol>\n<li>Use pointer</li>\n</ol>\n<pre class=\"lang-rust prettyprint-override\"><code>fn do_it(&amp;mut self) {\n    let ptr = self as *const Bar;\n    for foo in &amp;mut self.foos {\n        foo.perform(ptr);\n    }\n}\n</code></pre>\n<ol start=\"2\">\n<li>Take away from the vector then put it back after</li>\n</ol>\n<pre class=\"lang-rust prettyprint-override\"><code>fn do_it(&amp;mut self) {\n    let len = self.foos.len();\n    for i in 0..len {\n         let foo = self.foos.swap_remove(i);\n         foo.perform(self);\n         self.foos.push(foo);\n         self.foos.swap(i, len-1);\n    }\n}\n</code></pre>\n<p>Both ways are not rusty, though. I'm still looking for a way to make <code>perform()</code> get the fields from Bar without taking its reference.</p>\n"}, {"tags": ["vector", "data-structures", "types", "rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1561414589, "post_id": 56744488, "comment_id": 100047936, "body": "Do you care about the order of the elements? If you don&#39;t, <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.swap_remove\" rel=\"nofollow noreferrer\"><code>swap_remove</code></a> might be more efficient. For a solution similar to yours if you don&#39;t want to clone your vector to wrap everything in <code>Option</code>, you could also have another vector that keeps track of whether values are still live or not."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561415014, "post_id": 56744488, "comment_id": 100048031, "body": "&quot;I&#39;m implementing a function where I&#39;ll be eliminating successive values from a large list, and passing a copy of this list as a vector into another function each iteration&quot; and you doesn&#39;t show an exemple because you like be unclear ? good answer need good question"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1561451098, "post_id": 56744488, "comment_id": 100057401, "body": "Do you really need to copy the vector before passing it to the other function? In your example code, you could improve performance quite a bit by replacing <code>Vector::from (v).iter().sum()</code> with <code>v.iter().sum()</code>."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1561458782, "post_id": 56744488, "comment_id": 100061616, "body": "@Jmb The real functions I&#39;m passing it to will mutate the vector."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561460691, "post_id": 56744488, "comment_id": 100062735, "body": "@mcarton I do care about the order, but post that as an answer anyway; it might help others."}], "answers": [{"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1561418922, "post_id": 56744797, "comment_id": 100048889, "body": "This is a question about performance on big arrays and you <code>collect</code> and <code>clone</code> everything? And how is your 2nd example different from OP&#39;s <code>retain</code> example, except for dramatically worst performance?"}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561458913, "post_id": 56744797, "comment_id": 100061680, "body": "@mcarton I don&#39;t think the performance is that drastic; if <code>v</code> is a <code>Vec</code>tor, <code>Vector::from(v)</code> should be identical to <code>v.clone()</code>."}, {"owner": {"reputation": 136, "user_id": 4273450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f0e541a230b2f34004b12d773a3dc72?s=128&d=identicon&r=PG", "display_name": "myrrlyn", "link": "https://stackoverflow.com/users/4273450/myrrlyn"}, "edited": false, "score": 0, "creation_date": 1561474084, "post_id": 56744797, "comment_id": 100071042, "body": "calling <code>filter</code> <i>before</i> <code>collect</code> means the second vector will not have to rearrange its contents as items are removed. if the vector is of <code>Copy</code> items, the allocation is trivial, but the <code>retain</code> call is <code>O(n*n)</code>; if the vector is of non-<code>Copy</code> items, then no items are cloned and then destroyed."}], "tags": [], "owner": {"reputation": 136, "user_id": 4273450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4f0e541a230b2f34004b12d773a3dc72?s=128&d=identicon&r=PG", "display_name": "myrrlyn", "link": "https://stackoverflow.com/users/4273450/myrrlyn"}, "is_accepted": false, "score": 1, "last_activity_date": 1561417361, "last_edit_date": 1561417361, "creation_date": 1561416097, "answer_id": 56744797, "question_id": 56744488, "link": "https://stackoverflow.com/questions/56744488/how-should-i-store-a-list-of-items-from-which-i-will-be-removing-but-never-addi/56744797#56744797", "title": "How should I store a list of items from which I will be removing, but never adding?", "body": "<p>You can restructure your creation of the copied list to do the removal <em>before</em> the copy:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for i in 0..10 {\n    let dup = your_list.iter().filter(|n| n &gt; i).collect::&lt;Vec&lt;_&gt;&gt;();\n    use_it(dup);\n}\n</code></pre>\n\n<p>If it is important to your use case that you are left with a filtered <code>Vec</code>, and cannot change the collection type, then this is probably the most useful means. If the filters are cumulative, you can overwrite the original <code>Vec</code> with the filtered <code>Vec</code> each iteration to reduce the workload for each future iteration.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let mut list = your_list;\nfor i in 0..10 {\n    list = list.iter().filter(|n| n &gt; i).collect();\n    use_it(list.clone());\n}\n</code></pre>\n\n<hr>\n\n<p>The question you asked is <em>directly</em> answered by reshaping how you filter and duplicate the vector, but if you are able to change your types, then the answers below may be more worthwhile.</p>\n\n<p>If your <code>use_it</code> function does not <em>require</em> a <code>Vec</code> or slice, then you may be better served by restructuring the consumer to take an iterator of numbers, and passing in <code>your_list.iter().filter(...)</code>. This will result in no copying or rearranging in memory, and the consumer function will just skip the invalid values.</p>\n\n<p>If you care more about counting how many times numbers appear in a collection, and do not specifically need a sequential list in memory, you can rearrange your list into a <code>HashMap</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::collections::HashMap;\nlet mut dict: HashMap&lt;i32, usize&gt; = HashMap::new();\nfor num in your_list {\n    *dict.entry(num).or_insert(0) += 1;\n}\n</code></pre>\n\n<p>and then you can filter numbers out of the map with constant-time access rather than linear-time in the size of the collection.</p>\n"}, {"comments": [{"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561556616, "post_id": 56774303, "comment_id": 100104010, "body": "Unfortunately, as in the example, I&#39;m not removing them in any such sort of order."}, {"owner": {"reputation": 80, "user_id": 5632036, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zk0On.png?s=128&g=1", "display_name": "Gpsy", "link": "https://stackoverflow.com/users/5632036/gpsy"}, "reply_to_user": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561556750, "post_id": 56774303, "comment_id": 100104098, "body": "@wizzwizz4 sorry, I guess I misunderstood what you meant by &#39;successive&#39;"}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 2, "creation_date": 1561556803, "post_id": 56774303, "comment_id": 100104126, "body": "Whilst technically correct (when the succession is temporal), that was poor wording on my part. I&#39;ll change it."}, {"owner": {"reputation": 80, "user_id": 5632036, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zk0On.png?s=128&g=1", "display_name": "Gpsy", "link": "https://stackoverflow.com/users/5632036/gpsy"}, "reply_to_user": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561556960, "post_id": 56774303, "comment_id": 100104239, "body": "@wizzwizz4 you might also want to include an example of the vector after a few removals and show the contents after each removal so that it is easier to tell exactly what you are trying to do"}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561558745, "post_id": 56774303, "comment_id": 100105440, "body": "The <code>v.retain</code> line is fairly clear about that part."}, {"owner": {"reputation": 80, "user_id": 5632036, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zk0On.png?s=128&g=1", "display_name": "Gpsy", "link": "https://stackoverflow.com/users/5632036/gpsy"}, "reply_to_user": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561561157, "post_id": 56774303, "comment_id": 100107028, "body": "@wizzwizz4 Heres an example of what I mean - If youre adding a number to a list your output after each iteration would be [1]   [1, 2]   [1, 2, 3]   [1, 2, 3, 4]  ...  etc"}], "tags": [], "owner": {"reputation": 80, "user_id": 5632036, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/zk0On.png?s=128&g=1", "display_name": "Gpsy", "link": "https://stackoverflow.com/users/5632036/gpsy"}, "is_accepted": false, "score": 0, "last_activity_date": 1561556687, "last_edit_date": 1561556687, "creation_date": 1561556566, "answer_id": 56774303, "question_id": 56744488, "link": "https://stackoverflow.com/questions/56744488/how-should-i-store-a-list-of-items-from-which-i-will-be-removing-but-never-addi/56774303#56774303", "title": "How should I store a list of items from which I will be removing, but never adding?", "body": "<p>If you're removing the elements in order you should consider a <a href=\"https://docs.rs/queues/1.0.0/queues/\" rel=\"nofollow noreferrer\">queue</a>. Using <code>remove()</code> takes O(1) time to remove an element, because it is essentially a <code>dequeue</code> or a <code>pop</code>.  </p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1561617617, "creation_date": 1561617617, "answer_id": 56785297, "question_id": 56744488, "link": "https://stackoverflow.com/questions/56744488/how-should-i-store-a-list-of-items-from-which-i-will-be-removing-but-never-addi/56785297#56785297", "title": "How should I store a list of items from which I will be removing, but never adding?", "body": "<p>Since this is a question about performance, then you will need to benchmark everything so that you can test your assumptions. That being said and unless there's something smart to do inside the function you call (maybe only copying lazily the items you want to mutate), then I think your <code>retain</code>+<code>clone</code> approach is close to the fastest you can do. Using <code>Option</code>s is almost certainly a bad idea: it adds checks everywhere and it kills cache locality.</p>\n\n<p>The only thing that may improve performance is to do the copy and filtering in a single pass:</p>\n\n<pre><code>let mut v = vec![5, 4, 4, 2, 6, 5, 1, 8, 2, 1, 6, 5, 4, 2, 0, 1];\nlet mut work = v.clone();\nfor i in 0..10 {\n    println!(\"{}\", work.iter().sum::&lt;i32&gt;());\n    work.clear();\n    v.retain(|&amp;x| if (x &gt; i) { work.push (x); true } else { false });\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ffaeda3d3fec41e0adb7ac529ad2eba8\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>Note that this will probably not make any difference if your data fits in the cache. In any case, benchmark, <em>benchmark</em>, <strong>benchmark</strong>! Lots of assumptions get proven wrong in the face of compiler optimizations and modern CPU architecture.</p>\n"}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "answer_count": 3, "score": 2, "last_activity_date": 1561617617, "creation_date": 1561413863, "last_edit_date": 1561556850, "question_id": 56744488, "link": "https://stackoverflow.com/questions/56744488/how-should-i-store-a-list-of-items-from-which-i-will-be-removing-but-never-addi", "title": "How should I store a list of items from which I will be removing, but never adding?", "body": "<p>I'm implementing a function where I'll be repeatedly eliminating values from a large list, and passing a copy of this list as a vector into another function each iteration:</p>\n\n<pre><code>let mut v = vec![5, 4, 4, 2, 6, 5, 1, 8, 2, 1, 6, 5, 4, 2, 0, 1];\nfor i in 0..10 {\n    println!(\"{}\", Vector::from(v).iter().sum());\n    v.retain(|x| x &gt; i);\n}\n</code></pre>\n\n<p>If <code>v</code> is very large, this will be slow. Is there a better way? I tried:</p>\n\n<pre><code>let mut v = vec![5, 4, 4, 2, 6, 5, 1, 8, 2, 1, 6, 5, 4, 2, 0, 1];\nlet mut v = v.into_iter().map(|x| Some(x)).collect();\n</code></pre>\n\n<p>(and then replace the \"deleted\" values with <code>None</code>) but this just seemed unwieldy to convert to and from an ordinary <code>Vec</code>.</p>\n\n<p>How should I be storing this list of values?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 229185, "user_id": 251311, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/b6b0ca5d4ef200ec8e3cd1fa2aefd836?s=128&d=identicon&r=PG", "display_name": "zerkms", "link": "https://stackoverflow.com/users/251311/zerkms"}, "edited": false, "score": 0, "creation_date": 1561413344, "post_id": 56744383, "comment_id": 100047630, "body": "You list its contents."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1561417520, "post_id": 56744383, "comment_id": 100048625, "body": "Your concept is vulnerable to <a href=\"https://en.wikipedia.org/wiki/Time-of-check_to_time-of-use\" rel=\"nofollow noreferrer\">TOCTOU</a>"}], "answers": [{"comments": [{"owner": {"reputation": 791, "user_id": 4747937, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/d9d99088c98489a7e0f718631b9e82fc?s=128&d=identicon&r=PG&f=1", "display_name": "kevlarr", "link": "https://stackoverflow.com/users/4747937/kevlarr"}, "edited": false, "score": 4, "creation_date": 1583202560, "post_id": 56744617, "comment_id": 107028039, "body": "SO doesn&#39;t allow &lt;6 char edits - I think it should be <code>read_dir()?.next().is_none()</code> yeah?"}], "tags": [], "owner": {"reputation": 275, "user_id": 11694170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GHN4u.jpg?s=128&g=1", "display_name": "miquels", "link": "https://stackoverflow.com/users/11694170/miquels"}, "is_accepted": true, "score": 11, "last_activity_date": 1598392531, "last_edit_date": 1598392531, "creation_date": 1561414744, "answer_id": 56744617, "question_id": 56744383, "link": "https://stackoverflow.com/questions/56744383/how-would-i-check-if-a-directory-is-empty-in-rust/56744617#56744617", "title": "How would I check if a directory is empty in Rust?", "body": "<p>You can use <code>.read_dir()</code> to get an iterator over the entries of the directory. <code>.</code> and <code>..</code> are skipped, so if the first <code>next()</code> call on the iterator returns <code>None</code> you know that the directory is empty.</p>\n<pre><code>let is_empty = dir_path_buf.read_dir()?.next().is_none();\n</code></pre>\n<p>If you are on Unix (POSIX, really) a different way to do this is to create a new temporary directory and try to rename it to the directory of the <code>PathBuf</code>. The <code>rename()</code> call, different from the <code>mv</code> utility, will rename a directory if the target is non-existent <em>or an empty directory</em>.</p>\n"}, {"tags": [], "owner": {"reputation": 7746, "user_id": 1091436, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/3nutk.jpg?s=128&g=1", "display_name": "VasiliNovikov", "link": "https://stackoverflow.com/users/1091436/vasilinovikov"}, "is_accepted": false, "score": 2, "last_activity_date": 1565971896, "last_edit_date": 1565971896, "creation_date": 1565811670, "answer_id": 57501031, "question_id": 56744383, "link": "https://stackoverflow.com/questions/56744383/how-would-i-check-if-a-directory-is-empty-in-rust/57501031#57501031", "title": "How would I check if a directory is empty in Rust?", "body": "<p>One-liner to check if directory is readable and is empty:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>PathBuf::from(\"t\").read_dir().map(|mut i| i.next().is_none()).unwrap_or(false);\n</code></pre>\n"}], "owner": {"reputation": 348, "user_id": 3427178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/552d37be724363f9e94fec8890740697?s=128&d=identicon&r=PG", "display_name": "jkmartindale", "link": "https://stackoverflow.com/users/3427178/jkmartindale"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1022, "favorite_count": 0, "accepted_answer_id": 56744617, "answer_count": 2, "score": 6, "last_activity_date": 1598392531, "creation_date": 1561413148, "last_edit_date": 1561417591, "question_id": 56744383, "link": "https://stackoverflow.com/questions/56744383/how-would-i-check-if-a-directory-is-empty-in-rust", "title": "How would I check if a directory is empty in Rust?", "body": "<p>I'm working on a CLI tool that avoids clobbering an existing directory with existing files but doesn't care if the directory doesn't exist or is empty.</p>\n\n<p>I know I can use <code>.exists()</code> to see if the <code>PathBuf</code> points to an existing file/directory and <code>.is_dir()</code> to see if it is a directory, but how would I check to see if the directory is empty?</p>\n"}, {"tags": ["rust", "closures", "move", "mutable", "borrowing"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561411836, "post_id": 56743984, "comment_id": 100047221, "body": "did you read the compiler message ?"}, {"owner": {"reputation": 1138, "user_id": 561327, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bcee6691999f40d243e9e2da6807fc81?s=128&d=identicon&r=PG", "display_name": "Luke B.", "link": "https://stackoverflow.com/users/561327/luke-b"}, "edited": false, "score": 0, "creation_date": 1561412172, "post_id": 56743984, "comment_id": 100047302, "body": "While the message says to make g mutable and that indeed allow the code to compile, why can an immutable g be used inside f but not outside?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561412272, "post_id": 56743984, "comment_id": 100047332, "body": "because <code>FnOnce</code> have interior mutability."}, {"owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "edited": false, "score": 0, "creation_date": 1561412388, "post_id": 56743984, "comment_id": 100047364, "body": "All seems to be related to the <code>self</code> variable in the trait declaration (doubt 3): <code>FnOnce</code> has <code>self</code> but <code>FnMut</code> has <code>&amp;mut self</code>."}, {"owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561412452, "post_id": 56743984, "comment_id": 100047382, "body": "@Stargateur please add more details on your answer"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561412793, "post_id": 56743984, "comment_id": 100047472, "body": "see <a href=\"https://doc.rust-lang.org/book/ch13-01-closures.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/book/ch13-01-closures.html</a>"}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1561413005, "post_id": 56743984, "comment_id": 100047536, "body": "@Stargateur &quot;<code>FnOnce</code> has interior mutability&quot; \u2013 no, that&#39;s not true. Calling an <code>FnOnce</code> <i>consumes</i> the closure, but that has nothing to do with interior mutability."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 0, "creation_date": 1561413065, "post_id": 56743984, "comment_id": 100047550, "body": "@SvenMarnach that my way of seeing it."}, {"owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 3, "creation_date": 1561413512, "post_id": 56743984, "comment_id": 100047684, "body": "@Stargateur &quot;interior mutability&quot; is jargon. It has a specific, defined meaning. Of course you are free to use the term to mean something else, but I don&#39;t consider this helpful for people learning Rust."}], "answers": [{"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1561414260, "creation_date": 1561414260, "answer_id": 56744552, "question_id": 56743984, "link": "https://stackoverflow.com/questions/56743984/ownership-closures-fnonce-much-confusion/56744552#56744552", "title": "Ownership, closures, FnOnce: much confusion", "body": "<p>You are dealing with two different kinds of closures here \u2013 <code>FnOnce</code> and <code>FnMut</code>. Both types of closures have different calling conventions.</p>\n\n<p>If you define your closure as</p>\n\n<pre><code>let mut x = 32;\nlet g  = move || {\n    x = 33;\n    x\n};\n</code></pre>\n\n<p>the compiler will infer the type of the closure as <code>FnMut</code>. While the closure returns the owned variable <code>x</code>, it can still be called multiple times, since <code>x</code> is <code>Copy</code>, so the compiler choses <code>FnMut</code> as the most general applicable type.</p>\n\n<p>When calling an <code>FnMut</code> closure, the closure itself is passed by mutable reference. This explains your first question \u2013 calling <code>g</code> directly does not work unless you make it mutable, since otherwise you can't take a mutable reference to it. I also implicitly answered your third question here \u2013 <code>self</code> in the call methods of the <code>Fn</code> traits refers to the closure itself, which can be thought of as a struct containing all captured variables.</p>\n\n<p>When calling <code>f(g)</code>, you pass the <code>FnMut</code> closure <code>g</code> as a <code>FnOnce</code> closure to <code>f()</code>. This is allowed since all <code>FnOnce</code> is a supertrait of <code>FnMut</code>, so every closure implementing <code>FnMut</code> also implements <code>FnOnce</code>. Now that the closure has been converted to <code>FnOnce</code>, it is also called according to the <code>FnOnce</code> calling convention:</p>\n\n<pre><code>pub trait FnOnce&lt;Args&gt; {\n    type Output;\n    extern \"rust-call\" fn call_once(self, args: Args) -&gt; Self::Output;\n}\n</code></pre>\n\n<p>The closure is passed in by <em>value</em> in this case, so the call <em>consumes</em> the closure. You can give away ownership of any value you own \u2013 it does not need to be mutable for this to work.</p>\n\n<p>The reason why you can call <code>g</code> multiple times when calling it through <code>f()</code> is that <code>g</code> is <code>Copy</code>. It only captures a single integer, so it can be copied as many times as you want. Each call to <code>f()</code> creates a new copy of <code>g</code>, which is consumed when it is called inside of <code>f()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": true, "score": 3, "last_activity_date": 1561414637, "creation_date": 1561414637, "answer_id": 56744604, "question_id": 56743984, "link": "https://stackoverflow.com/questions/56743984/ownership-closures-fnonce-much-confusion/56744604#56744604", "title": "Ownership, closures, FnOnce: much confusion", "body": "<p>Some basics about the <code>Fn*</code> trait family is needed to understand how closures actually work. You have the following traits:</p>\n\n<ul>\n<li><a href=\"https://doc.rust-lang.org/std/ops/trait.FnOnce.html\" rel=\"nofollow noreferrer\"><code>FnOnce</code></a>, which, as the name implies, can only be run once. If we look at the docs page we'll see that the trait definition is almost the same as what you specified in your question. What is most important though, is the following: The \"call\" function takes <code>self</code>, meaning that it consumes the object which implements <code>FnOnce</code>, so like any trait function which takes a <code>self</code> as a parameter, it takes ownership of the object. </li>\n<li><a href=\"https://doc.rust-lang.org/std/ops/trait.FnMut.html\" rel=\"nofollow noreferrer\"><code>FnMut</code></a>, which allows for mutation of the captured variables, or in other words, it takes <code>&amp;mut self</code>. What this means, is that when you make a <code>move || {}</code> closure, it will move any variables you reference which are outside the scope of the closure into the closure's object. The closure's object has a type which is unnameable, meaning that it is unique to each closure. This does force the user to take some kind of mutable version of the closure, so <code>&amp;mut impl FnMut() -&gt; ()</code> or <code>mut x: impl FnMut() -&gt; ()</code></li>\n<li><a href=\"https://doc.rust-lang.org/std/ops/trait.Fn.html\" rel=\"nofollow noreferrer\"><code>Fn</code></a>, which is generally considered the most flexible. This allows the user to take an immutable version of the object implementing the trait. The function signature for this trait's \"call\" function is the simplest to understand of the three, as it only takes a reference to the closure, meaning that you don't need to worry about ownership while passing it around or calling it. </li>\n</ul>\n\n<p>To address your individual doubts:</p>\n\n<ul>\n<li>Doubt 1: As seen above, when you <code>move</code> something into a closure, the variable is now owned by the closure. Essentially, what the compiler generates is like the following pseudocode:</li>\n</ul>\n\n<pre><code>struct g_Impl {\n    x: usize\n}\nimpl FnOnce() -&gt; usize for g_Impl {\n    fn call_once(mut self) -&gt; usize {\n\n    }\n}\nimpl FnMut() -&gt; usize for g_Impl {\n    fn call_mut(&amp;mut self) -&gt; usize {\n        //Here starts your actual code:\n        self.x = 33;\n        self.x\n    }\n}\n//No impl Fn() -&gt; usize.\n</code></pre>\n\n<p>And by default it calls the <code>FnMut() -&gt; usize</code> implementation.   </p>\n\n<ul>\n<li>Doubt 2: What is happening here is that <a href=\"https://github.com/rust-lang/rust/issues/44490\" rel=\"nofollow noreferrer\">closures are <code>Copy</code></a> as long as each of their captured variables are <code>Copy</code>, meaning that the closure that is generated will be copied into <code>f</code>, so that <code>f</code> ends up taking a <code>Copy</code> of it. When you change the definition for <code>f</code> to take an <code>FnMut</code> instead, you get the error because you are facing a similar situation to doubt 1: You are trying to call a function which receives <code>&amp;mut self</code> while you've declared the parameter to be <code>c: T</code> instead of either <code>mut c: T</code> or <code>c: &amp;mut T</code>, either of which qualify for <code>&amp;mut self</code> in the eyes of <code>FnMut</code>. </li>\n<li>Finally, doubt 3, the <code>self</code> parameter is the closure itself, which has captured or <em>moved</em> some variables into itself, so it now owns them. </li>\n</ul>\n"}], "owner": {"reputation": 892, "user_id": 3331931, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/667d26246734ae54783faeebf84ced20?s=128&d=identicon&r=PG", "display_name": "fcracker79", "link": "https://stackoverflow.com/users/3331931/fcracker79"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 469, "favorite_count": 0, "accepted_answer_id": 56744604, "answer_count": 2, "score": 3, "last_activity_date": 1561414637, "creation_date": 1561410607, "question_id": 56743984, "link": "https://stackoverflow.com/questions/56743984/ownership-closures-fnonce-much-confusion", "title": "Ownership, closures, FnOnce: much confusion", "body": "<p>I have the following snippet of code:</p>\n\n<pre><code>fn f&lt;T: FnOnce() -&gt; u32&gt;(c: T) {\n    println!(\"Hello {}\", c());\n}\n\nfn main() {\n    let mut x = 32;\n    let g  = move || {\n        x = 33;\n        x\n    };\n\n    g(); // Error: cannot borrow as mutable. Doubt 1\n    f(g); // Instead, this would work. Doubt 2\n    println!(\"{}\", x); // 32\n}\n</code></pre>\n\n<p><strong>Doubt 1</strong></p>\n\n<p>I can not run my closure even once.</p>\n\n<p><strong>Doubt 2</strong></p>\n\n<p>... but I can invoke that closure as many times as I want, provided that I call it through <code>f</code>. Funnily, if I declare it <code>FnMut</code>, I get the same error as in doubt 1.</p>\n\n<p><strong>Doubt 3</strong></p>\n\n<p>What does <code>self</code> refer to in <code>Fn</code>, <code>FnMut</code> and <code>FnOnce</code> traits definition? Is that the closure itself? Or the <em>environment</em>?\nE.g. from the documentation:</p>\n\n<pre><code>pub trait FnMut&lt;Args&gt;: FnOnce&lt;Args&gt; {\n    extern \"rust-call\" fn call_mut(&amp;mut self, args: Args) -&gt; Self::Output;\n}\n</code></pre>\n"}, {"tags": ["rust", "compiler-warnings", "static-analysis"], "comments": [{"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561395622, "post_id": 56741004, "comment_id": 100040930, "body": "And no, I can&#39;t just rely on the type system keeping track of this; in the real example, this is testing the validity of items that can expire with time (and certain mutations) that should be handled by the database. Assume that the premise of the question is valid, unless I&#39;m missing something <i>really</i> obvious."}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 2, "creation_date": 1561396443, "post_id": 56741145, "comment_id": 100041268, "body": "This answer works, but I don&#39;t really like it because it semantically misuses the <code>deprecated</code> attribute. It may be the only currently available method, however."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561396539, "post_id": 56741145, "comment_id": 100041307, "body": "@Shepmaster I agree. I&#39;ll wait a little before accepting it\u2026 but this does seem to accomplish what I want, and the semantic error is minor."}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561396744, "post_id": 56741145, "comment_id": 100041374, "body": "@Justin Should the deprecated attribute go above or below the doc comment?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 1, "creation_date": 1561396854, "post_id": 56741145, "comment_id": 100041429, "body": "@wizzwizz4 it doesn&#39;t matter the order; it&#39;s a matter of style (doc comments become <code>#[doc]</code> attributes). I&#39;d put it after."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1561399433, "post_id": 56741145, "comment_id": 100042533, "body": "@Shepmaster <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ec44574f19d6039421c7460c1c4add40\" rel=\"nofollow noreferrer\">may I abuse another attribute</a>? :D"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1561510771, "post_id": 56741145, "comment_id": 100084386, "body": "@mcarton I rather like it actually."}], "tags": [], "owner": {"reputation": 21009, "user_id": 1896169, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/jap8U.png?s=128&g=1", "display_name": "Justin", "link": "https://stackoverflow.com/users/1896169/justin"}, "is_accepted": false, "score": 4, "last_activity_date": 1561396576, "last_edit_date": 1561396576, "creation_date": 1561396311, "answer_id": 56741145, "question_id": 56741004, "link": "https://stackoverflow.com/questions/56741004/how-can-i-display-a-compiler-warning-upon-function-invocation/56741145#56741145", "title": "How can I display a compiler warning upon function invocation?", "body": "<p>You can mark the function as <a href=\"https://stackoverflow.com/q/30757914/1896169\">deprecated</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// Consider summarizing this and linking to the docs, rather than putting the\n// entire message here.\n#[deprecated(note=\n    \"**Using this function is a mistake.**\nThis function is slow,\nsince checking widgets is an extremely expensive operation.\nYou should be keeping track of what's what, and ideally will\nnever need to use this function.\n\nIf you _do_ need to use this function, please consider a refactor.\")]\npub fn test_widget(foo: String) -&gt; bool {\n    /// Check whether foo is a metasyntactic variable.\n    false\n}\n</code></pre>\n\n<p>If the user uses the function, they get a warning:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: use of deprecated item 'test_widget': **Using this function is a mistake.**\nThis function is slow,\nsince checking widgets is an extremely expensive operation.\nYou should be keeping track of what's what, and ideally will\nnever need to use this function.\n\nIf you _do_ need to use this function, please consider a refactor.\n</code></pre>\n\n<p>But they can turn it off with <code>#[allow(deprecated)]</code>:</p>\n\n<pre><code>#[allow(deprecated)]\ntest_widget(\"Hello, World!\".to_string()); // no warning\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=405cbccf3b5bdeb873dafc3f582d4e56\" rel=\"nofollow noreferrer\">Playground link.</a></p>\n"}, {"comments": [{"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561668394, "post_id": 56798246, "comment_id": 100151109, "body": "This is a funny solution, but it prevents people from using the function normally (as opposed to just complaining at them)."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1561669585, "post_id": 56798246, "comment_id": 100151510, "body": "Reminds me of aptitude&#39;s prompt that asks the user to type &quot;Yes, I am aware this is a very bad idea&quot; (capitalization and all) when one tries to uninstall packages that will break the system."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1561670684, "post_id": 56798246, "comment_id": 100151855, "body": "@trentcl You&#39;re right! Autocompletion makes this too easy to bypass! <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bb66ecd1fe3142a9e23404bd5f0015d4\" rel=\"nofollow noreferrer\">We need to use capitalization to make it an actual challenge to get right!</a>"}, {"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561670973, "post_id": 56798246, "comment_id": 100151940, "body": "A lot of people have upvoted this answer very quickly. Could somebody explain why this is a good answer? I don&#39;t understand."}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561671626, "post_id": 56798246, "comment_id": 100152142, "body": "To be honest, I&#39;m not exactly sure, but I wouldn&#39;t be too surprised to see a pattern like this in the wild, although with a less ridiculous name."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1561694576, "post_id": 56798246, "comment_id": 100156037, "body": "I find this a perfectly reasonable solution to the problem posed. If the solution is a bit silly, maybe it&#39;s because the problem is a bit silly. If the problem is reasonable, both this and the other answer are reasonable solutions. You might not want to use it in your particular case but that doesn&#39;t make it not a good answer."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 5, "last_activity_date": 1561668277, "creation_date": 1561668277, "answer_id": 56798246, "question_id": 56741004, "link": "https://stackoverflow.com/questions/56741004/how-can-i-display-a-compiler-warning-upon-function-invocation/56798246#56798246", "title": "How can I display a compiler warning upon function invocation?", "body": "<p>The <code>must_use</code> seems to be fitting here and allows to specify a custom message:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[must_use = \"Calling this function is a bad idea\"]\npub struct BadIdeaFunction(bool);\n\nimpl BadIdeaFunction {\n    pub fn i_acknowledge_calling_this_function_is_a_bad_idea(self) -&gt; bool {\n        self.0\n    }\n}\n\n/// Check whether foo is a metasyntactic variable.\n///\n/// **Using this function is a mistake.** This function is slow,\n/// since checking widgets is an extremely expensive operation.\n/// You should be keeping track of what's what, and ideally will\n/// never need to use this function.\n///\n/// If you _do_ need to use this function, please consider a refactor.\npub fn test_widget() -&gt; BadIdeaFunction {\n    BadIdeaFunction(false)\n}\n\nfn main() {\n    test_widget(); // gives a warning, but the next one doesn't\n\n    test_widget().i_acknowledge_calling_this_function_is_a_bad_idea();\n}\n</code></pre>\n\n<p>This creates a warning with the custom message:</p>\n\n<pre><code>warning: unused `BadIdeaFunction` that must be used\n  --&gt; src/main.rs:23:5\n   |\n23 |     test_widget();\n   |     ^^^^^^^^^^^^^^\n   |\n   = note: #[warn(unused_must_use)] on by default\n   = note: Calling this function is a bad idea\n</code></pre>\n"}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1561668277, "creation_date": 1561395517, "last_edit_date": 1561396398, "question_id": 56741004, "link": "https://stackoverflow.com/questions/56741004/how-can-i-display-a-compiler-warning-upon-function-invocation", "title": "How can I display a compiler warning upon function invocation?", "body": "<p>I've got a function I want to export in my module so people can use it. However, in \u224895% of cases, using it is a bad idea.</p>\n\n<pre><code>/// Check whether foo is a metasyntactic variable.\n/// \n/// **Using this function is a mistake.** This function is slow,\n/// since checking widgets is an extremely expensive operation.\n/// You should be keeping track of what's what, and ideally will\n/// never need to use this function.\n/// \n/// If you _do_ need to use this function, please consider a refactor.\npub fn test_widget(foo: String) -&gt; bool {\n    false\n}\n</code></pre>\n\n<p>It's mostly around for documentation and testing purposes. However, since there's the \u22485% of cases where such a thing may be genuinely useful, I want to keep it around.</p>\n\n<p>I <em>don't</em> want people accidentally using it, so I want to make invocation of the function cause a compiler warning (unless they explicitly override it with <a href=\"https://doc.rust-lang.org/reference/attributes/diagnostics.html#lint-check-attributes\" rel=\"nofollow noreferrer\"><code>allow</code></a> or something). How can I do this?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 35, "user_id": 8689024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fda710dd91f9a7af2ccee001533bed95?s=128&d=identicon&r=PG&f=1", "display_name": "Nevsden", "link": "https://stackoverflow.com/users/8689024/nevsden"}, "edited": false, "score": 0, "creation_date": 1561452047, "post_id": 56745760, "comment_id": 100057896, "body": "It works and is definitely much nicer to use than to loop over each cell. Still, interally <code>copy_from</code> also loops over the cells of the input. So I assume it to be not much faster than my version. Link to source code: <a href=\"https://docs.rs/nalgebra/0.18.0/src/nalgebra/base/matrix.rs.html#728-747\" rel=\"nofollow noreferrer\">docs.rs/nalgebra/0.18.0/src/nalgebra/base/&hellip;</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561487355, "post_id": 56745760, "comment_id": 100077574, "body": "<i>doing the checks only once before the loop instead</i> \u2014 this is a &quot;typical&quot; hint to the compiler that frequently helps multiple bounds checks to be elided, so it&#39;s quite possible."}], "tags": [], "owner": {"reputation": 306, "user_id": 2117330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dff90ae6e9eb6735844f2b78dc664647?s=128&d=identicon&r=PG", "display_name": "stephaneyfx", "link": "https://stackoverflow.com/users/2117330/stephaneyfx"}, "is_accepted": true, "score": 1, "last_activity_date": 1561487233, "last_edit_date": 1561487233, "creation_date": 1561426736, "answer_id": 56745760, "question_id": 56739169, "link": "https://stackoverflow.com/questions/56739169/is-there-a-way-to-write-to-a-whole-row-column-of-a-nalgebra-matrix/56745760#56745760", "title": "Is there a way to write to a whole row / column of a nalgebra Matrix?", "body": "<p>You can do it this way with <code>nalgebra</code> 0.18.0:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use nalgebra::DMatrix;\n\nfn main() {\n    let mut m = DMatrix::from_vec(2, 3, (0 .. 6).map(|n| n as f64).collect());\n    dbg!(&amp;m);\n    for mut col in m.column_iter_mut() {\n        let normalized = col.normalize();\n        col.copy_from(&amp;normalized);\n    }\n    dbg!(&amp;m);\n}\n</code></pre>\n\n<p>I haven't measured the performance of this code compared to yours.</p>\n\n<p>Note that <code>copy_from</code> goes over the items without checking bounds at each step, doing the checks only once before the loop instead. I haven't checked if the optimizer can perform an equivalent transformation in your code. This simple benchmark gives an edge to the solution in this answer on my machine (not sure how representative it is; usual benchmark disclaimer applies):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use criterion::{black_box, criterion_group, criterion_main, Benchmark, Criterion};\nuse nalgebra::DMatrix;\n\nfn normalize_lib(m: &amp;mut DMatrix&lt;f64&gt;) {\n    for mut col in m.column_iter_mut() {\n        let normalized = col.normalize();\n        col.copy_from(&amp;normalized);\n    }\n}\n\nfn normalize_hand_rolled(a: &amp;mut DMatrix&lt;f64&gt;) {\n    let nrows = a.shape().0;\n    let ncols = a.shape().1;\n    for col in 0..ncols {\n        let norm_of_col = a.column(col).normalize();\n        for row in 0..nrows {\n            *a.index_mut((row, col)) = norm_of_col[row];\n        }\n    }\n}\n\nfn benchmark(c: &amp;mut Criterion) {\n    let mut m0 = DMatrix::new_random(100, 100);\n    let mut m1 = m0.clone();\n    let bench = Benchmark::new(\"lib\", move |b| b.iter(|| normalize_lib(black_box(&amp;mut m0))))\n        .with_function(\"hand_rolled\", move |b| {\n            b.iter(|| normalize_hand_rolled(black_box(&amp;mut m1)))\n        });\n    c.bench(\"normalize\", bench);\n}\n\ncriterion_group!(benches, benchmark);\ncriterion_main!(benches);\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>normalize/lib           time:   [26.102 us 26.245 us 26.443 us]\nnormalize/hand_rolled   time:   [37.013 us 37.057 us 37.106 us]\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 8689024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fda710dd91f9a7af2ccee001533bed95?s=128&d=identicon&r=PG&f=1", "display_name": "Nevsden", "link": "https://stackoverflow.com/users/8689024/nevsden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 305, "favorite_count": 0, "accepted_answer_id": 56745760, "answer_count": 1, "score": 1, "last_activity_date": 1561487233, "creation_date": 1561387935, "last_edit_date": 1561388525, "question_id": 56739169, "link": "https://stackoverflow.com/questions/56739169/is-there-a-way-to-write-to-a-whole-row-column-of-a-nalgebra-matrix", "title": "Is there a way to write to a whole row / column of a nalgebra Matrix?", "body": "<p>I am using the <code>DMatrix</code> struct to allocate dynamically sized matrices, where I repeatedly overwrite each column by the normalized column vector, using the L2-norm.  </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// a is some DMatrix of arbitrary size\nlet col_0 = a.column(0);\nlet norm_of_col_0 = col_0.normalize();\n</code></pre>\n\n<p>Instead of looping over each cell within the current column:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let row = a.shape().0;\nlet col = a.shape().1;\nfor col in 0..ncols {\n    let norm_of_col = a.column(col).normalize();\n    for row in 0..nrows {\n        *a.index_mut((row, col)) = norm_of_col()[row];\n    }\n}\n</code></pre>\n\n<p>I would like to directly overwrite the column by its normalized version. The code should semantically look something like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>*a.index_mut((_, col)) = norm_of_col();\n</code></pre>\n\n<p>where <code>(_, col)</code> means, that I select column <code>col</code> and <code>_</code> means the whole row.</p>\n\n<p>More generally speaking, is there a way to overwrite a row or column by a new row or column of the same size and data type?\nMethods as <code>insert_columns</code> only add columns to an existing matrix. </p>\n\n<p>If so, it is computationally faster to do so, or should I just write a helper method which loops over each cell to update the matrix?</p>\n"}, {"tags": ["generics", "struct", "rust", "i2c"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1561341384, "post_id": 56728897, "comment_id": 100017713, "body": "would be easy to help you with a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}], "answers": [{"comments": [{"owner": {"reputation": 722, "user_id": 4552814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53f0574e5f84b4661c4db333043831c0?s=128&d=identicon&r=PG", "display_name": "AkashBhave", "link": "https://stackoverflow.com/users/4552814/akashbhave"}, "edited": false, "score": 0, "creation_date": 1561384762, "post_id": 56729050, "comment_id": 100035058, "body": "Thank you! In the future, how would I know that <code>init()</code> returns a <code>IMU&lt;LinuxI2CDevice&gt;</code>? This return type wasn&#39;t indicated anywhere."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "reply_to_user": {"reputation": 722, "user_id": 4552814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53f0574e5f84b4661c4db333043831c0?s=128&d=identicon&r=PG", "display_name": "AkashBhave", "link": "https://stackoverflow.com/users/4552814/akashbhave"}, "edited": false, "score": 1, "creation_date": 1561399054, "post_id": 56729050, "comment_id": 100042392, "body": "@AkashBhave I&#39;ve added an (edit) to my answer with the compiler output you should have gotten as part of the error, it hints at that. In general, to see the inferred type for a value like <code>IMU { device: imu_dev }</code> you could assign it to a temporary variable and check its type in your IDE, or make the compiler report the expression&#39;s type by assigning it to a variable of an incompatible type like <code>()</code>: <code>let foo: () = IMU { device: imu_dev };</code>."}, {"owner": {"reputation": 722, "user_id": 4552814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53f0574e5f84b4661c4db333043831c0?s=128&d=identicon&r=PG", "display_name": "AkashBhave", "link": "https://stackoverflow.com/users/4552814/akashbhave"}, "edited": false, "score": 0, "creation_date": 1561401533, "post_id": 56729050, "comment_id": 100043391, "body": "Thanks, your response has been very helpful. I should have probably been more general with my question, but I&#39;m still very new to Rust and didn&#39;t know how to generalize it."}, {"owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "reply_to_user": {"reputation": 722, "user_id": 4552814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53f0574e5f84b4661c4db333043831c0?s=128&d=identicon&r=PG", "display_name": "AkashBhave", "link": "https://stackoverflow.com/users/4552814/akashbhave"}, "edited": false, "score": 1, "creation_date": 1561416083, "post_id": 56729050, "comment_id": 100048301, "body": "No problem, glad to help!"}], "tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": true, "score": 2, "last_activity_date": 1561398704, "last_edit_date": 1561398704, "creation_date": 1561341411, "answer_id": 56729050, "question_id": 56728897, "link": "https://stackoverflow.com/questions/56728897/struct-that-has-a-value-of-a-struct-with-a-generic-type/56729050#56729050", "title": "Struct that has a value of a struct with a generic type", "body": "<p>This <code>init()</code> function is supposed to create an <code>IMU&lt;D&gt;</code> instance for any <code>D</code>  specified by the caller (provided <code>D</code> satisfies the <code>I2CDevice + Sized</code> bounds):</p>\n\n<pre><code>impl&lt;D: I2CDevice + Sized&gt; IMU&lt;D&gt; {\n    pub fn init(imu_addr: u16) -&gt; Self {\n</code></pre>\n\n<p>...but it always tries to return an <code>IMU&lt;LinuxI2CDevice&gt;</code>.</p>\n\n<p>(edit) In my testing, the <code>error[E0308]: mismatched types</code> is explained in a note that follows it, which should look like this:</p>\n\n<pre><code>note: expected type `......::BNO055&lt;D&gt;`\n         found type `......::BNO055&lt;LinuxI2CDevice&gt;`\n</code></pre>\n\n<p>(/edit)</p>\n\n<p>To fix this, you could make <code>init()</code> non-generic, e.g. by changing the impl to <code>impl IMU&lt;LinuxI2CDevice&gt;</code>.</p>\n\n<p>P.S. You call <code>BNO055</code> a \"type\" and are trying to use it as a type... I'm not sure about terminology, but note that after you define a struct as being generic over some type parameter <code>D</code>, the struct name alone doesn't represent a concrete type, but rather a family of related - but incompatible - types. You have to provide some type in place of <code>D</code>: either another type parameter <code>BNO055&lt;T&gt;</code> or a specific type <code>BNO055&lt;LinuxI2CDevice&gt;</code> - to get a type.</p>\n\n<p>Keep in mind the alternatives to using generics: making the <code>I2CDevice</code> a enum or keeping it a trait, but using it as a <a href=\"https://doc.rust-lang.org/book/ch17-02-trait-objects.html\" rel=\"nofollow noreferrer\">trait object</a>, e.g. <code>pub i2cdev: Box&lt;dyn I2CDevice&gt;</code>.</p>\n"}], "owner": {"reputation": 722, "user_id": 4552814, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/53f0574e5f84b4661c4db333043831c0?s=128&d=identicon&r=PG", "display_name": "AkashBhave", "link": "https://stackoverflow.com/users/4552814/akashbhave"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "closed_date": 1561398957, "accepted_answer_id": 56729050, "answer_count": 1, "score": -1, "last_activity_date": 1561398704, "creation_date": 1561339784, "question_id": 56728897, "link": "https://stackoverflow.com/questions/56728897/struct-that-has-a-value-of-a-struct-with-a-generic-type", "closed_reason": "Duplicate", "title": "Struct that has a value of a struct with a generic type", "body": "<p>Suppose I have a <code>struct</code> that uses a generic type (BNO055 is a sensor):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct BNO055&lt;T: I2CDevice + Sized&gt; {\n    pub i2cdev: T,\n    pub mode: BNO055OperationMode,\n}\n</code></pre>\n\n<p>I also have another <code>struct</code> that has the BNO055 as a field:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct IMU {\n    device: bno055::BNO055\n}\n</code></pre>\n\n<p>Attempting to compile this code results in an error, with the compiler saying:</p>\n\n<pre><code>error[E0107]: wrong number of type arguments: expected 1, found 0\n   --&gt; src/modules/sensors/imu.rs:553:13\n    |\n553 |     device: bno055::BNO055\n    |             ^^^^^^^^^^^^^^ expected 1 type argument\n</code></pre>\n\n<p>If I add a generic type to the <code>struct</code>, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct IMU&lt;D: I2CDevice + Sized&gt;{\n    device: bno055::BNO055&lt;D&gt;\n}\n</code></pre>\n\n<p>And then <code>impl</code> a function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;D: I2CDevice + Sized&gt; IMU&lt;D&gt; {\n    pub fn init(imu_addr: u16) -&gt; Self {\n        let mut i2c_dev = LinuxI2CDevice::new(\"/dev/i2c-1\", imu_addr).unwrap();\n        let mut imu_dev = bno055::BNO055::new(i2c_dev).unwrap();\n\n        IMU {\n            device: imu_dev\n        }\n    }\n}\n</code></pre>\n\n<p>I get this error:</p>\n\n<pre><code>error[E0308]: mismatched types\n   --&gt; src/modules/sensors/imu.rs:567:21\n    |\n567 |             device: imu_dev\n    |                     ^^^^^^^ expected type parameter, found struct `modules::sensors::imu::bno055::i2cdev::linux::LinuxI2CDevice`\n    |\n</code></pre>\n\n<p><code>imu_dev</code> is of the type <code>BNO055</code>, so I assume that it should properly fit the generic's constraints. How do I resolve this error?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561347730, "post_id": 56728860, "comment_id": 100018550, "body": "@Stargateur I tried to create it on play.rust-lang.org, but chashmap is not available from there. I&#39;ll create a new repository."}, {"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561348131, "post_id": 56728860, "comment_id": 100018622, "body": "@Stargateur I added it."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561349005, "post_id": 56728860, "comment_id": 100018770, "body": "you obviously can&#39;t return the data without keep the rearguard alive"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1561349970, "post_id": 56728860, "comment_id": 100018926, "body": "maybe <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1b719a81aa334921c144617a10b51f80\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>, but it&#39;s unclear what you want."}], "answers": [{"comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1561388645, "post_id": 56728986, "comment_id": 100037467, "body": "There&#39;s one problem here: you leak even if the <code>insert</code> fails. Do you really want to leak every time this function is called?"}, {"owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "reply_to_user": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1561429159, "post_id": 56728986, "comment_id": 100050463, "body": "@MatthieuM. I don&#39;t care leaking on each compilation, but leaking on insertion failure seems problematic."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1561445065, "post_id": 56728986, "comment_id": 100054485, "body": "Unfortunately, <code>CHashMap</code> does not seem to have a method to insert only if things do not exist; any <code>insert</code> replaces the previous value :/"}], "tags": [], "owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "is_accepted": true, "score": 0, "last_activity_date": 1561340760, "creation_date": 1561340760, "answer_id": 56728986, "question_id": 56728860, "link": "https://stackoverflow.com/questions/56728860/how-can-i-implement-static-cache-in-rust/56728986#56728986", "title": "How can I implement static cache in rust?", "body": "<p>I somehow solved it with leaking.</p>\n\n<pre><code>fn merge(ls: &amp;[Lib]) -&gt; &amp;'static Merged {\n    lazy_static! {\n        static ref CACHE: CHashMap&lt;Vec&lt;Lib&gt;, &amp;'static Merged&gt; = Default::default();\n    }\n\n    // ...\n\n    CACHE.insert(libs, Box::leak(merged));\n\n    return &amp;*CACHE.get(ls).unwrap();\n}\n\n</code></pre>\n"}], "owner": {"reputation": 321, "user_id": 6193633, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/f642d3c45da4db031e2d41798d1801a5?s=128&d=identicon&r=PG&f=1", "display_name": "kdy", "link": "https://stackoverflow.com/users/6193633/kdy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 272, "favorite_count": 0, "accepted_answer_id": 56728986, "answer_count": 1, "score": 1, "last_activity_date": 1561348310, "creation_date": 1561339299, "last_edit_date": 1561348310, "question_id": 56728860, "link": "https://stackoverflow.com/questions/56728860/how-can-i-implement-static-cache-in-rust", "title": "How can I implement static cache in rust?", "body": "<p>I want to implement a static cache in rust.</p>\n\n<p>I tried <a href=\"https://docs.rs/chashmap/2.2.2/chashmap/\" rel=\"nofollow noreferrer\">chashmap</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate chashmap;\nextern crate lazy_static;\nuse chashmap::{CHashMap, ReadGuard};\nuse lazy_static::lazy_static;\nuse std::collections::HashMap;\n\nstruct Data {}\n\n#[derive(Default)]\nstruct Merged {\n    types: HashMap&lt;String, Data&gt;,\n}\n\nfn merge(ls: &amp;[String]) -&gt; ReadGuard&lt;'static, Vec&lt;String&gt;, Merged&gt; {\n    lazy_static! {\n        static ref CACHE: CHashMap&lt;Vec&lt;String&gt;, Merged&gt; = Default::default();\n    }\n\n    let libs = ls.to_vec();\n\n    let merged = Merged::default();\n\n    CACHE.insert(libs, merged);\n\n    return CACHE.get(ls).unwrap();\n}\n\nfn get&lt;'a&gt;(ls: &amp;[String], name: &amp;str) -&gt; Option&lt;&amp;'a Data&gt; {\n    let lib = merge(ls);\n\n    if let Some(ty) = lib.types.get(name) {\n        return Some(&amp;*ty);\n    }\n\n    None\n}\n\nfn main() {}\n</code></pre>\n\n<pre><code>[package]\nname = \"stackoverflow-56728860\"\nversion = \"0.1.0\"\nauthors = [\"\uac15\ub3d9\uc724 &lt;kdy1@outlook.kr&gt;\"]\nedition = \"2018\"\n\n[dependencies]\nlazy_static = \"1\"\nchashmap = \"2\"\n</code></pre>\n\n<p><a href=\"https://github.com/kdy1/stackoverflow-56728860\" rel=\"nofollow noreferrer\">github repo</a></p>\n\n<p>But I want to return static reference to data from the function. The returned data solely depends on <code>ls</code>. That is, if input (<code>ls</code>) is same, the result would be same.</p>\n\n<p>Also, leaking data is ok if read lock is released.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561342482, "post_id": 56728840, "comment_id": 100017886, "body": "You can&#39;t MyFn is just an alias. Do something like <a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=06b9086f9dff4485180f349f3aee1e09\" rel=\"nofollow noreferrer\">play.integer32.com/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "edited": false, "score": 0, "creation_date": 1561382705, "post_id": 56732636, "comment_id": 100033832, "body": "While this technically works, it makes calling the closure pretty awkward: <code>MyFn.0(...)</code>; this is a bummer."}, {"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "reply_to_user": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "edited": false, "score": 0, "creation_date": 1561388539, "post_id": 56732636, "comment_id": 100037406, "body": "@maxcountryman: It is possible to <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=6f7c164064905c2bd6533c1de66fdee3\" rel=\"nofollow noreferrer\">implement <code>Deref</code></a> to make this a bit cleaner, but <a href=\"https://stackoverflow.com/questions/45086595/is-it-considered-a-bad-practice-to-implement-deref-for-newtypes\">it&#39;s considered a bit of a bad practice</a>. Fingers crossed a nicer syntax for delegation gets added some day!"}], "tags": [], "owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "is_accepted": false, "score": 3, "last_activity_date": 1561364943, "creation_date": 1561364943, "answer_id": 56732636, "question_id": 56728840, "link": "https://stackoverflow.com/questions/56728840/how-can-i-implement-traits-for-type-aliases/56732636#56732636", "title": "How can I implement traits for type aliases?", "body": "<p>Creating a type alias does not create an entirely new type, it just allows you to refer to the existing type via a different name. Therefore, trying to implement <code>Debug</code> for <code>MyFn</code> is exactly the same as trying to implement it for <code>Box&lt;Fn(usize) -&gt; bool&gt;</code> - which is not allowed, since your crate doesn't own the type or the trait. Rust's 'orphan rules' require your crate to have defined one or both for the implementation to be valid.</p>\n\n<p>A common pattern to get around this is to create a 'newtype' struct, which wraps the type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyFn(Box&lt;Fn(usize) -&gt; bool&gt;);\n</code></pre>\n\n<p>You <em>can</em> implement <code>Debug</code> for this struct, as the struct comes from your crate.</p>\n"}], "owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 403, "favorite_count": 0, "closed_date": 1561386073, "answer_count": 1, "score": 0, "last_activity_date": 1561364943, "creation_date": 1561338967, "question_id": 56728840, "link": "https://stackoverflow.com/questions/56728840/how-can-i-implement-traits-for-type-aliases", "closed_reason": "Duplicate", "title": "How can I implement traits for type aliases?", "body": "<p>I have some code like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>type MyFn = Box&lt;Fn(usize) -&gt; bool&gt;;\n\nfn main() {\n    let my_fn: MyFn = Box::new(|x: usize| x &gt; 10);\n    dbg!(my_fn);\n}\n</code></pre>\n\n<p>This doesn't compile because <code>MyFn</code> doesn't implement <code>std::fmt::Debug</code>. That's reasonable, so what if I try to implement it for <code>MyFn</code>?</p>\n\n<p>It fails saying:</p>\n\n<p>conflicting implementations of trait <code>std::fmt::Debug</code> for type <code>std::boxed::Box&lt;(dyn std::ops::Fn(usize) -&gt; bool + 'static)&gt;</code></p>\n\n<p>As well as:</p>\n\n<p>only traits defined in the current crate can be implemented for arbitrary types</p>\n\n<p>How can I implement <code>Debug</code> and other traits for <code>MyFn</code>?</p>\n"}, {"tags": ["rust", "structopt"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1561361390, "post_id": 56728778, "comment_id": 100022666, "body": "Flags are normally passed in arbitrary order, how do you propose do that?"}], "answers": [{"comments": [{"owner": {"reputation": 1260, "user_id": 3893901, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/1936c40432997826b9c180e11d010106?s=128&d=identicon&r=PG&f=1", "display_name": "jonathanGB", "link": "https://stackoverflow.com/users/3893901/jonathangb"}, "edited": false, "score": 0, "creation_date": 1561393926, "post_id": 56732224, "comment_id": 100040174, "body": "That&#39;s a totally valid way, but I was wondering if it was possible to do that inside of the <code>Config</code> struct in one go."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "reply_to_user": {"reputation": 1260, "user_id": 3893901, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/1936c40432997826b9c180e11d010106?s=128&d=identicon&r=PG&f=1", "display_name": "jonathanGB", "link": "https://stackoverflow.com/users/3893901/jonathangb"}, "edited": false, "score": 1, "creation_date": 1561395941, "post_id": 56732224, "comment_id": 100041080, "body": "@jonathanGB: I very much doubt so given the amount of complexity this would introduce (a dependency graphs between fields) for such a minor gain."}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 0, "last_activity_date": 1561363261, "creation_date": 1561363261, "answer_id": 56732224, "question_id": 56728778, "link": "https://stackoverflow.com/questions/56728778/define-a-custom-parser-using-structopt-that-changes-based-on-another-flag/56732224#56732224", "title": "Define a custom parser using structopt that changes based on another flag", "body": "<p>On the command line, flags can normally be passed in any order. This makes it difficult to introduce this kind of dependency in the <em>parser</em>.</p>\n\n<p>My recommendation, therefore, will be to introduce a 2-steps processing:</p>\n\n<ol>\n<li>Gather the flags, with some pre-processing.</li>\n<li>Handle interactions.</li>\n</ol>\n\n<p>In your case:</p>\n\n<pre><code>#[derive(StructOpt, Debug)]\npub struct Config {\n    /// Query to search for.\n    #[structopt(string)]\n    query: String,\n\n    /// Specify whether or not the query is case sensitive.\n    #[structopt(long)]\n    case_sensitive: bool,\n}\n</code></pre>\n\n<p>And then later:</p>\n\n<pre><code>fn build_regex(config: &amp;Config) -&gt; Result&lt;Regex, Error&gt; {\n    RegexBuilder::new(&amp;config.query)\n        .case_insensitive(!config.case_sensitive)\n        .build()\n}\n</code></pre>\n"}], "owner": {"reputation": 1260, "user_id": 3893901, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/1936c40432997826b9c180e11d010106?s=128&d=identicon&r=PG&f=1", "display_name": "jonathanGB", "link": "https://stackoverflow.com/users/3893901/jonathangb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 639, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1561363261, "creation_date": 1561338209, "question_id": 56728778, "link": "https://stackoverflow.com/questions/56728778/define-a-custom-parser-using-structopt-that-changes-based-on-another-flag", "title": "Define a custom parser using structopt that changes based on another flag", "body": "<p>I use <em>structopt</em> to parse the command-line arguments to my rust application. The flags in question are the following: <code>query</code> (positional), and <code>case_sensitive</code> (optional).</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(StructOpt, Debug)]\npub struct Config {\n    /// Query to search for.\n    #[structopt(parse(try_from_str = \"parse_regex\"))]\n    query: Regex,\n\n    /// Specify whether or not the query is case sensitive.\n    #[structopt(long)]\n    case_sensitive: bool,\n}\n</code></pre>\n\n<p>What I ultimately want to do is to write <code>parse_regex</code>, which builds a regex from the query string argument.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn parse_regex(src: &amp;str) -&gt; Result&lt;Regex, Error&gt; {\n    let case_sensitive = true; // !!! problem here: how to grab the value of the `case_sensitive` flag?\n    RegexBuilder::new(src).case_insensitive(!case_sensitive).build()\n}\n</code></pre>\n\n<p>What I'm wondering is whether or not it is possible for a custom parsing function to grab the value of another flag (in this case <code>case_sensitive</code>), in order to dynamically parse its own flag.</p>\n"}, {"tags": ["syntax", "rust", "type-bounds"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1561324989, "creation_date": 1561324989, "answer_id": 56727827, "question_id": 56727675, "link": "https://stackoverflow.com/questions/56727675/how-to-write-fuctions-that-takes-intoiter-more-generally/56727827#56727827", "title": "How to write fuctions that takes IntoIter more generally", "body": "<blockquote>\n  <p>I kind of cheat with <code>V: ?Sized</code></p>\n</blockquote>\n\n<p>It isn't cheating. All generic arguments are assumed to be <code>Sized</code> by default. This default is there because it's the most common case - without it, nearly every type parameter would have to be annotated with <code>: Sized</code>.</p>\n\n<p>In your case, <code>V</code> is only ever accessed by reference, so it doesn't need to be <code>Sized</code>. Relaxing the <code>Sized</code> constraint makes your function as general as possible, allowing it to be used with the most possible types.</p>\n\n<p>The type <code>str</code> is unsized, so this is not just about generalisation, you actually need to relax the default <code>Sized</code> constraint to be able to use your function with <code>str</code>.</p>\n"}], "owner": {"reputation": 4989, "user_id": 1685095, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/5f06068bb9b4c00f12582ccc0ba64c4a?s=128&d=identicon&r=PG", "display_name": "user1685095", "link": "https://stackoverflow.com/users/1685095/user1685095"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "accepted_answer_id": 56727827, "answer_count": 1, "score": 0, "last_activity_date": 1561355430, "creation_date": 1561323312, "last_edit_date": 1561355430, "question_id": 56727675, "link": "https://stackoverflow.com/questions/56727675/how-to-write-fuctions-that-takes-intoiter-more-generally", "title": "How to write fuctions that takes IntoIter more generally", "body": "<p>I was reading an answer to stackoverflow question and tried to modify the function <code>history</code> to take <code>IntoIter</code> where item can be anything that can be transformed into reference and has some traits <code>Debug</code> in this case.</p>\n\n<p>If I will remove <code>V: ?Sized</code> from the function definition rust compiler would complain that it doesn't know the size of <code>str</code> at compile time.</p>\n\n<pre><code>use std::fmt::Debug;\n\npub fn history&lt;I: IntoIterator, V: ?Sized&gt;(i: I) where I::Item: AsRef&lt;V&gt;, V: Debug {\n    for s in i {\n        println!(\"{:?}\", s.as_ref());\n    }\n}\n\nfn main() {\n    history::&lt;_, str&gt;(&amp;[\"st\", \"t\", \"u\"]);\n}\n</code></pre>\n\n<p>I don't understand why compiler shows error in the first place and not sure why the program is working properly if I kind of cheat with <code>V: ?Sized</code>.</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 4, "creation_date": 1561325288, "post_id": 56727627, "comment_id": 100015499, "body": "What are you trying to serialise <b>to</b>? Yes, you don&#39;t need to depend on <code>serde_json</code>, but you need to serialise to something. Otherwise, what does &quot;serialise&quot; mean to you?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 3, "creation_date": 1561326046, "post_id": 56727627, "comment_id": 100015635, "body": "&quot;The documentation is not clear on how to use serde for basic (binary or default) serialization&quot; That would be because there isn&#39;t such a thing as a standard binary serialization format everyone agrees with. There are literally dozens of those. You have to pick one, that&#39;s not serde&#39;s job."}, {"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 1, "creation_date": 1561332843, "post_id": 56727627, "comment_id": 100016605, "body": "@PeterHall good question, whatever compact binary is available to use it for storage (or transfer) will be enough. But my point is that Serde docs says that there is everything <code>out of the box</code> , so what is packaged and what can I use from this &quot;box&quot; to quickly serialize into some <code>blob</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 28156, "user_id": 1026, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/ea331e778d54effc15b5fbc694bc8232?s=128&d=identicon&r=PG", "display_name": "Nickolay", "link": "https://stackoverflow.com/users/1026/nickolay"}, "is_accepted": true, "score": 4, "last_activity_date": 1561340395, "creation_date": 1561340395, "answer_id": 56728954, "question_id": 56727627, "link": "https://stackoverflow.com/questions/56727627/cant-make-basic-example-of-serde-serialize-work/56728954#56728954", "title": "Can&#39;t make basic example of Serde Serialize work", "body": "<p>As noted in the comments, there's no \"default\" format provided.</p>\n\n<p>You have to pick the binary format you want and include it as an additional dependency, just as you would with <code>serde_json</code>.</p>\n\n<p>There's a list of formats at <a href=\"https://serde.rs/#data-formats\" rel=\"nofollow noreferrer\">https://serde.rs/#data-formats</a>. Of those <code>serde_json</code> is the only package hosted under <a href=\"https://github.com/serde-rs\" rel=\"nofollow noreferrer\">https://github.com/serde-rs</a>, all the binary formats are \"third-party\". Cross-referencing it with <a href=\"https://crates.io/keywords/serde\" rel=\"nofollow noreferrer\">the list of crates tagged \"serde\" sorted by recent downloads</a>, the <a href=\"https://github.com/pyfisch/cbor\" rel=\"nofollow noreferrer\">CBOR</a> crate seems popular.</p>\n"}], "owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 917, "favorite_count": 0, "accepted_answer_id": 56728954, "answer_count": 1, "score": 3, "last_activity_date": 1561340395, "creation_date": 1561322937, "last_edit_date": 1561325767, "question_id": 56727627, "link": "https://stackoverflow.com/questions/56727627/cant-make-basic-example-of-serde-serialize-work", "title": "Can&#39;t make basic example of Serde Serialize work", "body": "<p>Serde documentation says:</p>\n\n<blockquote>\n  <p>All of these can be serialized using Serde out of the box.</p>\n  \n  <p>serde_json is just for the example, not required in general.</p>\n</blockquote>\n\n<p>This is exactly what I need, a basic serialization of a struct into some basic binary format. I don't need JSON format, I want to keep it simple to be able to store struct in a file or send it to the network. The documentation is not clear on how to use serde for basic (binary or default) serialization, it only shows example with a  JSON but this is not what I am looking for. I also don't want to implement my own <code>serialize</code> method, I want to use the default methods that Serde provides.</p>\n\n<p>This is my example, so how do I make it work?</p>\n\n<pre><code>use serde::{Serialize, Deserialize,Serializer};\n\n#[derive(Serialize, Deserialize, Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let point = Point { x: 1, y: 2 };\n\n    //let serialized = serde::serialize(&amp;point).unwrap(); // &lt;-- doesnt work!\n    //let serialized = Serializer::serialize(&amp;point); // &lt;-- doesnt work!\n    //let serialized = point.serialize(Serializer); // &lt;-- doesn't work!\n    println!(\"data = {:?}\", serialized);\n}\n</code></pre>\n\n<p>Playground: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b57a77399280f19664bb004201319b32\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b57a77399280f19664bb004201319b32</a></p>\n\n<p>This is my dependency line:</p>\n\n<pre><code>[dependencies]\nserde = { version = \"1.0\", features = [\"derive\"] }\n</code></pre>\n"}, {"tags": ["performance", "rust", "unwrap"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1561313364, "post_id": 56726571, "comment_id": 100013007, "body": "It\u2019s a call, so the arguments are always evaluated. The documentation for <code>unwrap_or_else</code> also says as much."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1561313692, "post_id": 56726571, "comment_id": 100013082, "body": "Why do you use <code>||</code> instead of <code>|</code> for Boolean conditionals? They would both work, but <code>||</code> has a distinct advantage."}, {"owner": {"reputation": 3037, "user_id": 1113913, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Kw2Ev.jpg?s=128&g=1", "display_name": "Jason", "link": "https://stackoverflow.com/users/1113913/jason"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1579914873, "post_id": 56726571, "comment_id": 105937763, "body": "@SilvioMayolo that&#39;s the closure referred to as <code>FnOnce</code>, not a boolean? <a href=\"https://doc.rust-lang.org/std/option/enum.Option.html#method.unwrap_or_else\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/option/&hellip;</a>"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 3037, "user_id": 1113913, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Kw2Ev.jpg?s=128&g=1", "display_name": "Jason", "link": "https://stackoverflow.com/users/1113913/jason"}, "edited": false, "score": 1, "creation_date": 1579971585, "post_id": 56726571, "comment_id": 105947893, "body": "@Jason Sorry if my comment&#39;s not clear. I wasn&#39;t implying that the <code>||</code> in the code above is a Boolean or. I was meaning to draw analogy between <code>|, ||</code> and the relationship between <code>unwrap_or</code> and <code>unwrap_or_else</code>. i.e. the latter of both pairs short-circuits."}, {"owner": {"reputation": 3037, "user_id": 1113913, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Kw2Ev.jpg?s=128&g=1", "display_name": "Jason", "link": "https://stackoverflow.com/users/1113913/jason"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1579973188, "post_id": 56726571, "comment_id": 105948344, "body": "@SilvioMayolo thank you! That&#39;s very kind of you to explain. I am trying to grok the language as a beginner and your comment left me confused at first, not knowing you referred to bitwise <code>|</code> and logical <code>||</code>. If I understood you correctly, it&#39;s the same as short-circuiting with <code>&amp;&amp;</code> and <code>&amp;</code>. I feel a bit silly now :-)"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "reply_to_user": {"reputation": 3037, "user_id": 1113913, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/Kw2Ev.jpg?s=128&g=1", "display_name": "Jason", "link": "https://stackoverflow.com/users/1113913/jason"}, "edited": false, "score": 1, "creation_date": 1579980823, "post_id": 56726571, "comment_id": 105950416, "body": "@Jason Exactly! Sounds like you&#39;ve got it right."}], "answers": [{"tags": [], "owner": {"reputation": 26917, "user_id": 1892179, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/umfON.jpg?s=128&g=1", "display_name": "Theodoros Chatzigiannakis", "link": "https://stackoverflow.com/users/1892179/theodoros-chatzigiannakis"}, "is_accepted": true, "score": 13, "last_activity_date": 1561313574, "creation_date": 1561313574, "answer_id": 56726618, "question_id": 56726571, "link": "https://stackoverflow.com/questions/56726571/why-choosing-unwrap-or-else-over-unwrap-or/56726618#56726618", "title": "Why choosing `unwrap_or_else` over `unwrap_or`?", "body": "<p>Both are evaluated during the program's execution and can be arbitrary values. The difference is that:</p>\n\n<ul>\n<li>With <code>unwrap_or</code> the fallback value is evaluated just before <code>unwrap_or</code> is called, and therefore is evaluated whether it's needed or not (because Rust is an eager language).</li>\n<li>With <code>unwrap_or_else</code> the fallback value is evaluated only when <code>unwrap_or_else</code> triggers it (by invoking the function you pass), and therefore is evaluated only if it's needed.</li>\n</ul>\n"}], "owner": {"reputation": 571, "user_id": 6780089, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcb6413d5c1778241f37cc86901c957a?s=128&d=identicon&r=PG&f=1", "display_name": "YLyu", "link": "https://stackoverflow.com/users/6780089/ylyu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3907, "favorite_count": 1, "closed_date": 1561321227, "accepted_answer_id": 56726618, "answer_count": 1, "score": 7, "last_activity_date": 1561313574, "creation_date": 1561313266, "question_id": 56726571, "link": "https://stackoverflow.com/questions/56726571/why-choosing-unwrap-or-else-over-unwrap-or", "closed_reason": "Duplicate", "title": "Why choosing `unwrap_or_else` over `unwrap_or`?", "body": "<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let _one = None.unwrap_or(\"one\".to_string());\n    let _two = None.unwrap_or_else(|| \"two\".to_string());\n}\n</code></pre>\n\n<p>Any particular reason why people should prefer <code>unwrap_or_else</code> over <code>unwrap_or</code>?</p>\n\n<p>I have seen comments that <code>unwrap_or</code> is eager (<a href=\"https://github.com/rust-lang/rust/pull/55014\" rel=\"noreferrer\">this</a> as an example). Does that mean the values in <code>unwrap_or</code> are always evaluated before program execution? And the <code>FnOnce</code> values in <code>unwrap_or_else</code> is called only when the program execute up to that line?</p>\n"}, {"tags": ["rust", "iterator", "closures", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561304104, "post_id": 56725310, "comment_id": 100010732, "body": "&quot;It should accept parameter and return an iterator&quot; -- in which case, why does it have to be a closure?"}, {"owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561304256, "post_id": 56725310, "comment_id": 100010772, "body": "Good question, probably this is my strong C++ background where we have lambda expressions that may be stored as functions or passed to other functions."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561304371, "post_id": 56725310, "comment_id": 100010807, "body": "@Alex we have that in Rust as well :) That&#39;s not the question.  If you are not enclosing anything from the surrounding world, it doesn&#39;t make sense to opt-in for a bigger thing (closures are &quot;fat&quot; functions), when you can have the nice and slim function pointer."}, {"owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561304700, "post_id": 56725310, "comment_id": 100010895, "body": "Ok, do we have anonymous functions? It would be great to skip giving a name for a single time used function."}, {"owner": {"reputation": 306, "user_id": 2117330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dff90ae6e9eb6735844f2b78dc664647?s=128&d=identicon&r=PG", "display_name": "stephaneyfx", "link": "https://stackoverflow.com/users/2117330/stephaneyfx"}, "edited": false, "score": 0, "creation_date": 1561304831, "post_id": 56725310, "comment_id": 100010930, "body": "Note that closures that don&#39;t capture anything, as it is the case here, are not any fatter than a function pointer and actually coerce to <code>fn</code>."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1561304900, "post_id": 56725310, "comment_id": 100010958, "body": "If it is a function pointer that would mean your function is not changing depending on your context (which would otherwise be the case with a closure).  Therefore, it doesn&#39;t make any sense to create them on the fly, you would create and name the ones that you need, and store one of them in your <code>struct</code> based on some criteria."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 306, "user_id": 2117330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dff90ae6e9eb6735844f2b78dc664647?s=128&d=identicon&r=PG", "display_name": "stephaneyfx", "link": "https://stackoverflow.com/users/2117330/stephaneyfx"}, "edited": false, "score": 0, "creation_date": 1561305028, "post_id": 56725310, "comment_id": 100010990, "body": "@stephaneyfx in practice, that is indeed true, however you still can&#39;t pass a closure to a function accepting function pointer only and not <code>Fn</code> traits."}, {"owner": {"reputation": 306, "user_id": 2117330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dff90ae6e9eb6735844f2b78dc664647?s=128&d=identicon&r=PG", "display_name": "stephaneyfx", "link": "https://stackoverflow.com/users/2117330/stephaneyfx"}, "edited": false, "score": 2, "creation_date": 1561305306, "post_id": 56725310, "comment_id": 100011066, "body": "@PeterVaro A closure implicitly coerces to a <code>fn</code> pointer if it does not capture anything. This compiles: <code>fn foo(_: fn(i32) -&gt; i32) {} fn main() { foo(|x| x + 2); }</code> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3d295c46b7737055f2648b6950e2a061\" rel=\"nofollow noreferrer\">Playground</a>"}, {"owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561305341, "post_id": 56725310, "comment_id": 100011076, "body": "@PeterVaro That makes sense in a case where the <code>struct</code> is generic and closure is essentially adapter. As a reference, you may just look at the <code>&lt;algorithm&gt;</code> library in <code>C++</code>. All the algorithms become useful the mostly with lambda expressions, because they provide flexibility."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 306, "user_id": 2117330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dff90ae6e9eb6735844f2b78dc664647?s=128&d=identicon&r=PG", "display_name": "stephaneyfx", "link": "https://stackoverflow.com/users/2117330/stephaneyfx"}, "edited": false, "score": 0, "creation_date": 1561305618, "post_id": 56725310, "comment_id": 100011158, "body": "@stephaneyfx nice one, I did not know about that!"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 1, "creation_date": 1561305708, "post_id": 56725310, "comment_id": 100011178, "body": "@Alex if you have further requirements, then I suggest to edit your question and the provided example to mention those needs."}, {"owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561305856, "post_id": 56725310, "comment_id": 100011225, "body": "Well, I just though I provided minimal working example, but it looks like every new layer requires different solution. I&#39;ll update the question."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 1, "creation_date": 1561306028, "post_id": 56725310, "comment_id": 100011279, "body": "@Alex that&#39;s exactly the case! It is very hard to come up with a minimal working solution that has all the constraints your actual implementation has.  (And IMO that&#39;s especially true when it comes to Rust.)"}, {"owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561356117, "post_id": 56725310, "comment_id": 100020437, "body": "Just because the change will be too huge, I&#39;ll do it as another one question."}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561384746, "post_id": 56725310, "comment_id": 100035052, "body": "@Alex I see no reason to completely rewrite this question if the current one does not reflect your actual problem.  But it is your call.  If you decide you will open a new one, I would at least put a comment about this into this thread as a future reference for people if I were you."}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": false, "score": 1, "last_activity_date": 1561303638, "creation_date": 1561303638, "answer_id": 56725310, "question_id": 56724730, "link": "https://stackoverflow.com/questions/56724730/create-closure-returning-iterator-on-string/56725310#56725310", "title": "Create closure returning iterator on string", "body": "<p>I'm not entirely sure what you try to achieve there, but basically just looking at your provided example, you don't need a closure, but a function:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::str::Chars;\n\nfn main() {\n    fn iter_wrap(s: &amp;str) -&gt; Chars {\n        s.chars()\n    }\n\n    let test = \"test\".to_string();\n\n    for c in iter_wrap(&amp;test) {\n        println!(\"{}\", c);\n    }\n}\n</code></pre>\n\n<p>Or you could have a closure, that is <em>enclosing</em> the outside world, in this case, your string:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let test = \"test\".to_string();\n    let iter_wrap = || test.chars();\n\n    for c in iter_wrap() {\n        println!(\"{}\", c);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 306, "user_id": 2117330, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dff90ae6e9eb6735844f2b78dc664647?s=128&d=identicon&r=PG", "display_name": "stephaneyfx", "link": "https://stackoverflow.com/users/2117330/stephaneyfx"}, "is_accepted": true, "score": 2, "last_activity_date": 1561303915, "creation_date": 1561303915, "answer_id": 56725345, "question_id": 56724730, "link": "https://stackoverflow.com/questions/56724730/create-closure-returning-iterator-on-string/56725345#56725345", "title": "Create closure returning iterator on string", "body": "<p>Closures with borrows in parameter or return types have some known bugs as shown in this issue report and the others it links to: <a href=\"https://github.com/rust-lang/rust/issues/58052\" rel=\"nofollow noreferrer\">https://github.com/rust-lang/rust/issues/58052</a></p>\n\n<p>There are a few ways to work around the issue.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f2bb18dc5fecb5f54299705525556bae\" rel=\"nofollow noreferrer\">Using fully qualified syntax</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let iter_wrap = |x| Box::new(str::chars(x));\n    let test = String::from(\"test\");\n\n    for x in iter_wrap(&amp;test) {\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=62a5360e95c753bfd2a9899a257c494a\" rel=\"nofollow noreferrer\">Using a type annotation in the closure body</a></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let iter_wrap = |x| {let x: &amp;String = x; Box::new(x.chars()) };\n    let test = String::from(\"test\");\n\n    for x in iter_wrap(&amp;test) {\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 275, "user_id": 11694170, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/GHN4u.jpg?s=128&g=1", "display_name": "miquels", "link": "https://stackoverflow.com/users/11694170/miquels"}, "is_accepted": false, "score": 0, "last_activity_date": 1561407424, "creation_date": 1561407424, "answer_id": 56743422, "question_id": 56724730, "link": "https://stackoverflow.com/questions/56724730/create-closure-returning-iterator-on-string/56743422#56743422", "title": "Create closure returning iterator on string", "body": "<p>You need to define and use a lifetime that is shorter than the lifetime of the function itself. I tried this and it worked:</p>\n\n<pre><code>fn foo&lt;'a, 'b: 'a&gt;() {\n    let test = String::from(\"test\");\n    let iw = |x: &amp;'b String| {\n        x.chars()\n    };\n\n    for x in iw(&amp;test) {\n        println!(\"{}\", x);\n    }\n}\n\nfn main() {\n    foo()\n}\n</code></pre>\n\n<p>Just using lifetime <code>'a</code> is not sufficient, you need a lifetime that is <em>shorter</em> than that, so <code>'b: 'a</code>. </p>\n\n<p>Now what I cannot explain is that, with both 'a and 'b defined, using <code>&amp;'a String</code> in the closure definition works as well ...</p>\n"}], "owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 56725345, "answer_count": 3, "score": 0, "last_activity_date": 1561407424, "creation_date": 1561299301, "last_edit_date": 1561386466, "question_id": 56724730, "link": "https://stackoverflow.com/questions/56724730/create-closure-returning-iterator-on-string", "title": "Create closure returning iterator on string", "body": "<p>I want to write a closure that takes an object and returns an iterator from it. The idea is to store the closure in a structure and apply as needed:</p>\n\n<pre><code>fn main() {\n    let iter_wrap = |x: &amp;String| Box::new(x.chars());\n    let test = String::from(\"test\");\n\n    for x in iter_wrap(&amp;test) {\n        println!(\"{}\", x);\n    }\n}\n</code></pre>\n\n<p>This causes the error:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime for lifetime parameter in function call due to conflicting requirements\n --&gt; src/main.rs:2:45\n  |\n2 |     let iter_wrap = |x: &amp;String| Box::new(x.chars());\n  |                                             ^^^^^\n  |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the body at 2:21...\n --&gt; src/main.rs:2:21\n  |\n2 |     let iter_wrap = |x: &amp;String| Box::new(x.chars());\n  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: ...so that reference does not outlive borrowed content\n --&gt; src/main.rs:2:43\n  |\n2 |     let iter_wrap = |x: &amp;String| Box::new(x.chars());\n  |                                           ^\nnote: but, the lifetime must be valid for the call at 5:14...\n --&gt; src/main.rs:5:14\n  |\n5 |     for x in iter_wrap(&amp;test) {\n  |              ^^^^^^^^^^^^^^^^\nnote: ...so that argument is valid for the call\n --&gt; src/main.rs:5:14\n  |\n5 |     for x in iter_wrap(&amp;test) {\n  |              ^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I tried to change <code>String</code> to <code>Vec</code> and remove boxing, but the result is the same.</p>\n\n<p>How can I make it compile?</p>\n"}, {"tags": ["rust", "hashmap"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1561295424, "post_id": 56724014, "comment_id": 100008460, "body": "If you want to collect, why don&#39;t you use <a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.collect\" rel=\"nofollow noreferrer\"><code>collect</code></a>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1561295530, "post_id": 56724014, "comment_id": 100008483, "body": "<i>&quot;Is this a good way to do it?&quot;</i> \u2014 One of the things about Rust (and C/C++) is that you need to think about ownership of your data. Data is moved by default, which changes the owner. If you don&#39;t want the owner to change then you can pass a reference, or you can clone the original data. Which way is &quot;good&quot; depends on your use case: If the hashmap is the owner of the data, the perhaps use references everywhere else (ie <code>Vec&lt;&amp;Score&gt;</code>). But cloning is usually the right thing to do, when the types in question are small."}], "answers": [{"tags": [], "owner": {"reputation": 3472, "user_id": 4072509, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/16VK8.jpg?s=128&g=1", "display_name": "apetranzilla", "link": "https://stackoverflow.com/users/4072509/apetranzilla"}, "is_accepted": true, "score": 21, "last_activity_date": 1561295576, "creation_date": 1561295576, "answer_id": 56724224, "question_id": 56724014, "link": "https://stackoverflow.com/questions/56724014/how-do-i-collect-the-values-of-a-hashmap-into-a-vector/56724224#56724224", "title": "How do I collect the values of a HashMap into a vector?", "body": "<p>The method <code>Iterator.collect</code> is designed for this specific task. You're right in that you need <code>.cloned()</code> if you want a vector of actual values instead of references (unless the stored type implements <code>Copy</code>, like primitives), so the code looks like this:</p>\n\n<pre><code>all_scores = score_table.values().cloned().collect();\n</code></pre>\n\n<p>Internally, <code>collect()</code> just uses <code>FromIterator</code>, but it also infers the type of the output. Sometimes there isn't enough information to infer the type, so you may need to explicitly specify the type you want, like so:</p>\n\n<pre><code>all_scores = score_table.values().cloned().collect::&lt;Vec&lt;Score&gt;&gt;();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 745, "user_id": 1403530, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bM6iA.png?s=128&g=1", "display_name": "Daniel", "link": "https://stackoverflow.com/users/1403530/daniel"}, "is_accepted": false, "score": 7, "last_activity_date": 1599148801, "creation_date": 1599148801, "answer_id": 63727456, "question_id": 56724014, "link": "https://stackoverflow.com/questions/56724014/how-do-i-collect-the-values-of-a-hashmap-into-a-vector/63727456#63727456", "title": "How do I collect the values of a HashMap into a vector?", "body": "<p>If you don't need <code>score_table</code> anymore, you can transfer the ownership of <code>Score</code> values to <code>all_scores</code> by:</p>\n<pre><code>let all_scores: Vec&lt;Score&gt; = score_table.into_iter()\n                                        .map(|(_id, score)| score)\n                                        .collect();\n</code></pre>\n<p>This approach will be faster and consume less memory than the clone approach by @apetranzilla. It also supports any struct, not only structs that implement <code>Clone</code>.</p>\n"}], "owner": {"reputation": 896, "user_id": 6314254, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-syObEwk9Mds/AAAAAAAAAAI/AAAAAAAAARU/Qz5nNseD1Pc/photo.jpg?sz=128", "display_name": "Hugo Trentesaux", "link": "https://stackoverflow.com/users/6314254/hugo-trentesaux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6775, "favorite_count": 0, "accepted_answer_id": 56724224, "answer_count": 2, "score": 14, "last_activity_date": 1599148801, "creation_date": 1561293918, "last_edit_date": 1585339472, "question_id": 56724014, "link": "https://stackoverflow.com/questions/56724014/how-do-i-collect-the-values-of-a-hashmap-into-a-vector", "title": "How do I collect the values of a HashMap into a vector?", "body": "<p>I can not find a way to collect the values of a <code>HashMap</code> into a <code>Vec</code> in the documentation. I have <code>score_table: HashMap&lt;Id, Score&gt;</code> and I want to get all the <code>Score</code>s into <code>all_scores: Vec&lt;Score&gt;</code>.</p>\n\n<p>I was tempted to use the <code>values</code> method (<code>all_scores = score_table.values()</code>), but it does not work since values is not a <code>Vec</code>.</p>\n\n<p>I know that <code>Values</code> implements the <code>ExactSizeIterator</code> trait, but I do not know how to collect all values of an iterator into a vector without manually writing a for loop and pushing the values in the vector one after one.</p>\n\n<p>I also tried to <code>use std::iter::FromIterator;</code> but ended with something like:</p>\n\n<pre><code>all_scores = Vec::from_iter(score_table.values());\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>expected type `std::vec::Vec&lt;Score&gt;`\n   found type `std::vec::Vec&lt;&amp;Score&gt;`\n</code></pre>\n\n<p>Thanks to <a href=\"https://stackoverflow.com/questions/52093493/hash-map-macro-refuses-to-type-check-failing-with-a-misleading-and-seemingly-b\">Hash map macro refuses to type-check, failing with a misleading (and seemingly buggy) error message?</a>, I changed it to:</p>\n\n<pre><code>all_scores = Vec::from_iter(score_table.values().cloned());\n</code></pre>\n\n<p>and it does not produce errors to <code>cargo check</code>.</p>\n\n<p>Is this a good way to do it? </p>\n"}, {"tags": ["string", "pointers", "rust", "unsafe", "raw-pointer"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1561295209, "post_id": 56723229, "comment_id": 100008415, "body": "Why do you need the segments to be owned? Is it for mutability or just to avoid the lifetimes being bound to the scope of the original <code>String</code>?"}, {"owner": {"reputation": 63, "user_id": 5284327, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Mjj1E6d0ugo/AAAAAAAAAAI/AAAAAAAAAT8/qy7ICV8USqI/photo.jpg?sz=128", "display_name": "Dan", "link": "https://stackoverflow.com/users/5284327/dan"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1561296309, "post_id": 56723229, "comment_id": 100008641, "body": "Mostly because of lifetimes because the original String should be dropped after splitting"}], "answers": [{"comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1561291913, "post_id": 56723438, "comment_id": 100007711, "body": "<a href=\"https://doc.rust-lang.org/src/alloc/vec.rs.html#1233-1249\" rel=\"nofollow noreferrer\">Here&#39;s the source for the curious</a> (<code>String::split_off</code> calls <code>Vec::split_off</code>)."}, {"owner": {"reputation": 63, "user_id": 5284327, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Mjj1E6d0ugo/AAAAAAAAAAI/AAAAAAAAAT8/qy7ICV8USqI/photo.jpg?sz=128", "display_name": "Dan", "link": "https://stackoverflow.com/users/5284327/dan"}, "edited": false, "score": 0, "creation_date": 1561292096, "post_id": 56723438, "comment_id": 100007757, "body": "Yeah just looked at the source as well. Is there any way to tell Rust that the offset pointer is a new pointer it can free? Also std::ptr::copy sounds promising, but doesn&#39;t work either"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 3, "last_activity_date": 1561297803, "last_edit_date": 1561297803, "creation_date": 1561289528, "answer_id": 56723438, "question_id": 56723229, "link": "https://stackoverflow.com/questions/56723229/rust-creating-string-with-pointer-offset/56723438#56723438", "title": "Rust creating String with pointer offset", "body": "<p>The reason for the errors is the way that the allocator works. It is <em>Undefined Behaviour</em> to ask the allocator to free a pointer that it didn't give you in the first place. In this case, the allocator allocated 7 bytes for <code>s</code> and returned a pointer to the first one. However, when <code>txt</code> is dropped, it tells the allocator to deallocate a pointer to byte 4, which it has never seen before. This is why there is no issue when you <code>add(0)</code> instead of <code>add(4)</code>.  </p>\n\n<p>Using <code>unsafe</code> correctly is <em>hard</em>, and you should avoid it where possible.</p>\n\n<hr>\n\n<p>Part of the purpose of the <code>&amp;str</code> type is to allow portions of an owned <code>string</code> to be shared, so I would strongly encourage you to use those if you can.</p>\n\n<p>If the reason you can't just use <code>&amp;str</code> on its own is because you aren't able to track the lifetimes back to the original <code>String</code>, then there are still some solutions, with different trade-offs:</p>\n\n<ol>\n<li><p>Leak the memory, so it's effectively static:</p>\n\n<pre><code>let mut s = String::from(\"Foo Bar\");\nlet s = Box::leak(s.into_boxed_str());\n\nlet txt: &amp;'static str = &amp;s[4..];\nlet s: &amp;'static str = &amp;s[..4];\n</code></pre>\n\n<p>Obviously, you can only do this a few times in your application, or else you are going to use up too much memory that you can't get back.</p></li>\n<li><p>Use reference-counting to make sure that the original <code>String</code> stays around long enough for all of the slices to remain valid. Here is a sketch solution:</p>\n\n<pre><code>use std::{fmt, ops::Deref, rc::Rc};\n\nstruct RcStr {\n    rc: Rc&lt;String&gt;,\n    start: usize,\n    len: usize,\n}\n\nimpl RcStr {\n    fn from_rc_string(rc: Rc&lt;String&gt;, start: usize, len: usize) -&gt; Self {\n        RcStr { rc, start, len }\n    }\n\n    fn as_str(&amp;self) -&gt; &amp;str {\n        &amp;self.rc[self.start..self.start + self.len]\n    }\n}\n\nimpl Deref for RcStr {\n    type Target = str;\n    fn deref(&amp;self) -&gt; &amp;str {\n        self.as_str()\n    }\n}\n\nimpl fmt::Display for RcStr {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        fmt::Display::fmt(self.as_str(), f)\n    }\n}\n\nimpl fmt::Debug for RcStr {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        fmt::Debug::fmt(self.as_str(), f)\n    }\n}\n</code></pre>\n\n<pre><code>fn main() {\n    let s = Rc::new(String::from(\"Foo Bar\"));\n\n    let txt = RcStr::from_rc_string(Rc::clone(&amp;s), 4, 3);\n    let s = RcStr::from_rc_string(Rc::clone(&amp;s), 0, 4);\n\n    println!(\"{:?}\", txt); // \"Bar\"\n    println!(\"{:?}\", s);  // \"Foo \"\n}\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 63, "user_id": 5284327, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Mjj1E6d0ugo/AAAAAAAAAAI/AAAAAAAAAT8/qy7ICV8USqI/photo.jpg?sz=128", "display_name": "Dan", "link": "https://stackoverflow.com/users/5284327/dan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 337, "favorite_count": 0, "accepted_answer_id": 56723438, "answer_count": 1, "score": 2, "last_activity_date": 1564960502, "creation_date": 1561287835, "last_edit_date": 1564960502, "question_id": 56723229, "link": "https://stackoverflow.com/questions/56723229/rust-creating-string-with-pointer-offset", "title": "Rust creating String with pointer offset", "body": "<p>So let's say I have a <code>String</code>, <code>\"Foo Bar\"</code> and I want to create a substring of <code>\"Bar\"</code> without allocating new memory.</p>\n\n<p>So I moved the raw pointer of the original string to the start of the substring (in this case offsetting it by 4) and use the String::from_raw_parts() function to create the String.</p>\n\n<p>So far I have the following code, which as far as I understand should do this just fine. I just don't understand why this does not work.</p>\n\n<pre><code>use std::mem;\n\nfn main() {\n    let s = String::from(\"Foo Bar\");\n\n    let ptr = s.as_ptr();\n\n    mem::forget(s);\n\n    unsafe {\n        // no error when using ptr.add(0)\n        let txt = String::from_raw_parts(ptr.add(4) as *mut _, 3, 3);\n\n        println!(\"{:?}\", txt); // This even prints \"Bar\" but crashes afterwards\n\n        println!(\"prints because 'txt' is still in scope\");\n    }\n\n    println!(\"won't print because 'txt' was dropped\",)\n}\n</code></pre>\n\n<p>I get the following error on Windows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: process didn't exit successfully: `target\\debug\\main.exe` (exit code: 0xc0000374, STATUS_HEAP_CORRUPTION)\n</code></pre>\n\n<p>And these on Linux (cargo run; cargo run --release):</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>munmap_chunk(): invalid pointer\n\nfree(): invalid pointer\n</code></pre>\n\n<p>I think it has something to do with the destructor of String, because as long as <code>txt</code> is in scope the program runs just fine.</p>\n\n<p>Another thing to notice is that when I use <code>ptr.add(0)</code> instead of <code>ptr.add(4)</code> it runs without an error.</p>\n\n<p>Creating a slice didn't give me any problems on the other Hand. Dropping that worked just fine.</p>\n\n<pre><code>let t = slice::from_raw_parts(ptr.add(4), 3);\n</code></pre>\n\n<p>In the end I want to split an owned String in place into multiple owned <code>String</code>s without allocating new memory.</p>\n\n<p>Any help is appreciated.</p>\n"}, {"tags": ["lambda", "rust", "iterator", "trait-objects"], "answers": [{"comments": [{"owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 0, "creation_date": 1561287671, "post_id": 56723132, "comment_id": 100006831, "body": "By the way, Is there a way to avoid &quot;PhantomData&quot; struct members, or it is OK and I don&#39;t need to worry on them?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "edited": false, "score": 1, "creation_date": 1561288037, "post_id": 56723132, "comment_id": 100006892, "body": "@Alex you probably need the PhantomData, unfortunately, although you can make it more concise by combining them into one: <code>PhantomData&lt;(T, V)&gt;</code>. When you have more code, that actually uses those types, you <i>may</i> find that they are constrained enough and the <code>PhantomData</code> is no longer necessary."}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1561287104, "creation_date": 1561287104, "answer_id": 56723132, "question_id": 56723019, "link": "https://stackoverflow.com/questions/56723019/store-lambda-returning-iterator-in-the-struct/56723132#56723132", "title": "Store lambda returning iterator in the struct", "body": "<p>A trait object, like <code>dyn Iterator&lt;Item = T&gt;</code>, doesn't have a size known at compile-time. One consequence of this is that a \"raw\" trait object cannot be returned by a function - the compiler needs to know in advance how much space to reserve on the stack when the function is called.</p>\n\n<p>In order to have a known size, wrap the trait object in a reference or smart pointer. For example, a <code>Box</code>:</p>\n\n<pre><code>impl&lt;F, V, T&gt; Foo&lt;F, V, T&gt;\nwhere\n    F: Fn(V) -&gt; Box&lt;dyn Iterator&lt;Item = T&gt;&gt;,\n{\n\n}\n</code></pre>\n"}], "owner": {"reputation": 8871, "user_id": 1132871, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/IO6V2.jpg?s=128&g=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/1132871/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 56723132, "answer_count": 1, "score": 0, "last_activity_date": 1564960606, "creation_date": 1561286024, "last_edit_date": 1564960606, "question_id": 56723019, "link": "https://stackoverflow.com/questions/56723019/store-lambda-returning-iterator-in-the-struct", "title": "Store lambda returning iterator in the struct", "body": "<p>I want to store the lambda that will return iterator in the struct.\nThe lambda is needed because not all the containers implement <code>iter()</code> function (e.g. <code>String::chars()</code>), so I need a generic way to get iterator from container.</p>\n\n<pre><code>use std::marker::PhantomData;\n\nstruct Foo&lt;F, V, T&gt; {\n  foo: F,\n  ph: PhantomData&lt;V&gt;,\n  ph2: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;F, V, T&gt; Foo&lt;F, V, T&gt; where\n  F: Fn(V) -&gt; dyn Iterator&lt;Item = T&gt; {\n}\n</code></pre>\n\n<p>Unfortunately, I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `(dyn std::iter::Iterator&lt;Item=T&gt; + 'static)` cannot be known at compilation time\n  --&gt; main.rs:9:1\n   |\n9  | / impl&lt;F, V, T&gt; Foo&lt;F, V, T&gt; where\n10 | |   F: Fn(V) -&gt; dyn Iterator&lt;Item = T&gt;\n11 | | {\n12 | |\n13 | | }\n   | |_^ doesn't have a size known at compile-time\n   |\n   = help: the trait `std::marker::Sized` is not implemented for `(dyn std::iter::Iterator&lt;Item=T&gt; + 'static)`\n   = note: to learn more, visit &lt;https://doc.rust-lang.org/book/second-edition/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n   = note: required by `std::ops::FnOnce`\n</code></pre>\n\n<p>I hope I understand its meaning, but I have no idea how to fix it.</p>\n"}, {"tags": ["rust", "iterator", "ownership", "bignum"], "answers": [{"comments": [{"owner": {"reputation": 1029, "user_id": 668074, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f82d3dd033cd691ad5340b9620bdcf38?s=128&d=identicon&r=PG", "display_name": "user668074", "link": "https://stackoverflow.com/users/668074/user668074"}, "edited": false, "score": 0, "creation_date": 1561284923, "post_id": 56722524, "comment_id": 100006255, "body": "Interesting, how is the Step trait unstable?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 1029, "user_id": 668074, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f82d3dd033cd691ad5340b9620bdcf38?s=128&d=identicon&r=PG", "display_name": "user668074", "link": "https://stackoverflow.com/users/668074/user668074"}, "edited": false, "score": 1, "creation_date": 1561288301, "post_id": 56722524, "comment_id": 100006935, "body": "@user668074 &quot;Unstable&quot; doesn&#39;t mean it has bugs or doesn&#39;t work properly, it just means the design might still change, and so it is only available in a nightly Rust build, which doesn&#39;t carry the burden of backwards compatibility. The Rust team doesn&#39;t rush into stabilising new APIs because it&#39;s hard to change them later if they weren&#39;t designed right the first time around."}, {"owner": {"reputation": 1029, "user_id": 668074, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f82d3dd033cd691ad5340b9620bdcf38?s=128&d=identicon&r=PG", "display_name": "user668074", "link": "https://stackoverflow.com/users/668074/user668074"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1561290993, "post_id": 56722524, "comment_id": 100007509, "body": "@PeterHall, Ah, I see. Good to know. Hopefully it is implemented properly soon."}], "tags": [], "owner": {"reputation": 1862, "user_id": 4658000, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/0Sw3Y.jpg?s=128&g=1", "display_name": "Le\u015bny Rumcajs", "link": "https://stackoverflow.com/users/4658000/le%c5%9bny-rumcajs"}, "is_accepted": true, "score": 4, "last_activity_date": 1561281258, "creation_date": 1561281258, "answer_id": 56722524, "question_id": 56722409, "link": "https://stackoverflow.com/questions/56722409/how-can-i-make-a-range-of-values-using-bigint-or-biguint-in-rust/56722524#56722524", "title": "How can I make a range of values using BigInt or BigUint in Rust?", "body": "<p>It seems this is not yet supported in the <code>num</code> crate, because of <a href=\"https://github.com/rust-lang/rust/issues/42168\" rel=\"nofollow noreferrer\">unstability of <code>Step</code> trait </a>.</p>\n\n<p>What you can do is to use <a href=\"https://docs.rs/num-iter/0.1.39/num_iter/\" rel=\"nofollow noreferrer\"><code>num-iter</code></a> crate with its range functions.</p>\n\n<pre><code>use num::BigUint;\n\nfn main() {\n    for i in num_iter::range_inclusive(BigUint::from(0u64), BigUint::from(2u64)) {\n        println!(\"{}\", i);\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1029, "user_id": 668074, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f82d3dd033cd691ad5340b9620bdcf38?s=128&d=identicon&r=PG", "display_name": "user668074", "link": "https://stackoverflow.com/users/668074/user668074"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 318, "favorite_count": 0, "accepted_answer_id": 56722524, "answer_count": 1, "score": 2, "last_activity_date": 1561281926, "creation_date": 1561280223, "last_edit_date": 1561281926, "question_id": 56722409, "link": "https://stackoverflow.com/questions/56722409/how-can-i-make-a-range-of-values-using-bigint-or-biguint-in-rust", "title": "How can I make a range of values using BigInt or BigUint in Rust?", "body": "<p>I would like to loop through a range of values that have a <code>BigUint</code> type (from the <code>num</code> crate).</p>\n\n<p>How can I do this?</p>\n\n<p>I tried</p>\n\n<pre><code>for i in 0..a {...}\n</code></pre>\n\n<p>where <code>a</code> is a (borrowed) <code>BigUint</code> type. I got a error about mismatched integer types so I tried this instead:</p>\n\n<pre><code>for i in Zero::zero()..a {...}\n</code></pre>\n\n<p>But I get different errors depending on if <code>a</code> is borrowed or not.\nIf <code>a</code> is borrowed then I get this in the errors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>|    for i in Zero::zero()..(a) {\n|             ^^^^^^^^^^ the trait `num::Zero` is not implemented for `&amp;num::BigUint`\n</code></pre>\n\n<p>If a is not borrowed, then this is the error:</p>\n\n<pre><code>|    for i in Zero::zero()..(a) {\n|             ^^^^^^^^^^^^^^^^^ the trait `std::iter::Step` is not implemented for `num::BigUint`\n</code></pre>\n"}, {"tags": ["rust", "idioms"], "answers": [{"comments": [{"owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "edited": false, "score": 1, "creation_date": 1561252953, "post_id": 56720281, "comment_id": 100001736, "body": "Wow! I can&#39;t believe I hadn&#39;t come across that until now.  Still trying to figure out how to use it while making the compiler happy, but in theory it seems like exactly what I was looking for."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 5, "last_activity_date": 1561251766, "creation_date": 1561251766, "answer_id": 56720281, "question_id": 56720236, "link": "https://stackoverflow.com/questions/56720236/deep-rust-matching-is-there-a-better-way/56720281#56720281", "title": "Deep Rust matching: is there a better way?", "body": "<p>You're looking for the <a href=\"https://m4rw3r.github.io/rust-questionmark-operator\" rel=\"noreferrer\"><code>?</code> operator</a>, designed for this exact task.</p>\n\n<pre><code>foo()?\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>match foo() {\n    Ok(t)  =&gt; t\n    Err(e) =&gt; return Err(e.into()),\n}\n</code></pre>\n\n<p>So you can just throw <code>?</code> at the end of anything that returns a <code>Try</code> implementation. You'll have to make your function return <code>Result&lt;(), E&gt;</code>, but that's just as well because then your function will report its errors rather than failing silently.</p>\n"}], "owner": {"reputation": 727, "user_id": 11392896, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/240a1abd4a401577fa990ad0b7aecb51?s=128&d=identicon&r=PG&f=1", "display_name": "brundolf", "link": "https://stackoverflow.com/users/11392896/brundolf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 716, "favorite_count": 0, "accepted_answer_id": 56720281, "answer_count": 1, "score": 2, "last_activity_date": 1593113239, "creation_date": 1561251147, "last_edit_date": 1593113239, "question_id": 56720236, "link": "https://stackoverflow.com/questions/56720236/deep-rust-matching-is-there-a-better-way", "title": "Deep Rust matching: is there a better way?", "body": "<p>I just found myself writing this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>fn init_timestamps(dir: &amp;PathBuf, file_timestamps: &amp;'static HashMap&lt;PathBuf,Duration&gt;) {\n\n    match fs::read_dir(dir) {\n        Ok(iter) =&gt; iter.for_each(|result| match result {\n            Ok(entry)  =&gt; {\n                if entry.file_type().map(|t| t.is_dir()).unwrap_or(false) {\n                    init_timestamps(&amp;entry.path(), file_timestamps);\n                } else {\n                    match entry.metadata() {\n                        Ok(md) =&gt; match md.modified() {\n                            Ok(modified) =&gt; {\n                                locked_timestamps.insert(entry.path(), modified.duration_since(SystemTime::UNIX_EPOCH).unwrap());\n                            },\n                            Err(_) =&gt; ()\n                        },\n                        Err(_) =&gt; ()\n                    };\n                }\n            },\n            Err(_) =&gt; ()\n        }),\n        Err(_) =&gt; ()\n    };\n}\n</code></pre>\n<p>And I have to ask: is there a better pattern I'm missing? I tried using <code>.map()</code> at each level, which looked slightly better but gave me compiler warnings about unused Results. What I'm wanting to do, in this general case, is &quot;if this chain of Results (or Options) exists all the way down, do X. otherwise, do nothing.&quot; I've also run into similar situations where I want to coerce &quot;failed&quot; points in the chain to <code>false</code> (there's a boolean check at the fullest depth).</p>\n<p>This actually could be seen as Rust's version of the null-check problem addressed with the null-coalescing operator in other languages <a href=\"https://kotlinlang.org/docs/reference/null-safety.html#safe-calls\" rel=\"nofollow noreferrer\">such as Kotlin</a>.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 1, "creation_date": 1561250676, "post_id": 56719994, "comment_id": 100001490, "body": "See also <a href=\"https://doc.rust-lang.org/edition-guide/rust-2018/trait-system/impl-trait-for-returning-complex-types-with-ease.html\" rel=\"nofollow noreferrer\">this article</a> for what <code>impl trait</code> really means."}, {"owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "reply_to_user": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 0, "creation_date": 1561252016, "post_id": 56719994, "comment_id": 100001641, "body": "@SilvioMayolo that article was very helpful, thank you for linking it!"}], "owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1561251993, "answer_count": 0, "score": 0, "last_activity_date": 1561247562, "creation_date": 1561247562, "question_id": 56719994, "link": "https://stackoverflow.com/questions/56719994/how-can-i-return-any-type-that-implements-a-given-trait", "closed_reason": "Duplicate", "title": "How can I return any type that implements a given trait?", "body": "<p>We have the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>enum Widgets {\n    A,\n    B,\n}\n\ntrait Widget {}\n\nstruct A {}\n\nimpl A {\n    fn new() -&gt; Self {\n        A {}\n    }\n}\n\nimpl Widget for A {}\n\nstruct B {}\n\nimpl B {\n    fn new() -&gt; Self {\n        B {}\n    }\n}\n\nimpl Widget for B {}\n\nstruct Foo {\n    widgets: Vec&lt;Widgets&gt;,\n}\n\nimpl Foo {\n    fn create_widget(self) -&gt; impl Widget {\n        match self.widgets[0] {\n            Widgets::A =&gt; A::new(),\n            Widgets::B =&gt; B::new(),\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=76616ee972244f924923a8f74c3a0ef8\" rel=\"nofollow noreferrer\">Playground link.</a></p>\n\n<p>This code fails to compile because the match arms have incompatible types. However they both implement the trait <code>Widget</code> and our function seems to be saying we'll return something that implements <code>Widget</code>.</p>\n\n<p>How can we return any type that implements <code>Widget</code> from the match logic?</p>\n"}, {"tags": ["rust", "async-await", "stream"], "answers": [{"tags": [], "owner": {"reputation": 61, "user_id": 1889958, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb8ce3427c09a0f52844783db9a8783e?s=128&d=identicon&r=PG", "display_name": "gorbot", "link": "https://stackoverflow.com/users/1889958/gorbot"}, "is_accepted": false, "score": 0, "last_activity_date": 1561272348, "last_edit_date": 1592644375, "creation_date": 1561272348, "answer_id": 56721662, "question_id": 56719990, "link": "https://stackoverflow.com/questions/56719990/creating-a-stream-of-values-while-calling-async-fns/56721662#56721662", "title": "Creating a stream of values while calling async fns?", "body": "<p>Answer copy/pasted from the <a href=\"https://www.reddit.com/r/rust/comments/c3wkx6/async_stream_of_values_using_async_fns_to_produce/\" rel=\"nofollow noreferrer\">reddit post</a> by user <a href=\"https://www.reddit.com/user/Matthias247\" rel=\"nofollow noreferrer\">Matthias247</a>:</p>\n<blockquote>\n<p>It's unfortunately not possible at the moment - Streams have to be implemented by hand and can not utilize async fn. Whether it's possible to change this in the future is unclear.</p>\n<p>You can work around it by defining a different Stream trait which makes use of Futures like:</p>\n<pre><code>trait Stream&lt;T&gt; { \n   type NextFuture: Future&lt;Output=T&gt;;\n\n   fn next(&amp;mut self) -&gt; Self::NextFuture; \n}\n</code></pre>\n<p><a href=\"https://gist.github.com/Matthias247/5e5e7430149bbb04eebf18cf31747fe0\" rel=\"nofollow noreferrer\">This article</a> and <a href=\"https://github.com/rust-lang-nursery/futures-rs/issues/1365\" rel=\"nofollow noreferrer\">this futures-rs issue</a> have more information around it.</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 100, "user_id": 6688179, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Zw8be.jpg?s=128&g=1", "display_name": "Artem Vorotnikov", "link": "https://stackoverflow.com/users/6688179/artem-vorotnikov"}, "is_accepted": false, "score": 0, "last_activity_date": 1561320919, "creation_date": 1561320919, "answer_id": 56727422, "question_id": 56719990, "link": "https://stackoverflow.com/questions/56719990/creating-a-stream-of-values-while-calling-async-fns/56727422#56727422", "title": "Creating a stream of values while calling async fns?", "body": "<p>You can do it with <a href=\"https://crates.io/crates/gen-stream\" rel=\"nofollow noreferrer\">gen-stream</a> crate:</p>\n\n<pre><code>#![feature(generators, generator_trait, gen_future)]\n\nuse {\n    futures::prelude::*,\n    gen_stream::{gen_await, GenTryStream},\n    pin_utils::unsafe_pinned,\n    std::{\n        io,\n        marker::PhantomData,\n        pin::Pin,\n        sync::{\n            atomic::{AtomicU64, Ordering},\n            Arc,\n        },\n        task::{Context, Poll},\n    },\n};\n\npub type Inner = Pin&lt;Box&lt;dyn Stream&lt;Item = Result&lt;Vec&lt;u8&gt;, io::Error&gt;&gt; + Send&gt;&gt;;\n\npub struct Receiver&lt;T&gt; {\n    inner: Inner,\n    pub num: Arc&lt;AtomicU64&gt;,\n    _marker: PhantomData&lt;T&gt;,\n}\n\nimpl&lt;T&gt; Receiver&lt;T&gt; {\n    unsafe_pinned!(inner: Inner);\n}\n\nimpl&lt;T&gt; From&lt;T&gt; for Receiver&lt;T&gt;\nwhere\n    T: AsyncRead + Unpin + Send + 'static,\n{\n    fn from(mut readme: T) -&gt; Self {\n        let num = Arc::new(AtomicU64::new(0));\n\n        Self {\n            inner: Box::pin(GenTryStream::from({\n                let num = num.clone();\n                static move || loop {\n                    let mut buf: [u8; 64] = [0; 64];\n                    match gen_await!(readme.read_exact(&amp;mut buf)) {\n                        Ok(()) =&gt; {\n                            num.fetch_add(1, Ordering::Relaxed);\n                            yield Poll::Ready(buf.to_vec())\n                        }\n                        Err(e) =&gt; return Err(e),\n                    }\n                }\n            })),\n            num,\n            _marker: PhantomData,\n        }\n    }\n}\n\nimpl&lt;T&gt; Stream for Receiver&lt;T&gt;\nwhere\n    T: AsyncRead + Unpin,\n{\n    type Item = Result&lt;Vec&lt;u8&gt;, io::Error&gt;;\n\n    fn poll_next(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Option&lt;Self::Item&gt;&gt; {\n        self.inner().poll_next(cx)\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 61, "user_id": 1889958, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fb8ce3427c09a0f52844783db9a8783e?s=128&d=identicon&r=PG", "display_name": "gorbot", "link": "https://stackoverflow.com/users/1889958/gorbot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 717, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1572902909, "creation_date": 1561247498, "last_edit_date": 1572902909, "question_id": 56719990, "link": "https://stackoverflow.com/questions/56719990/creating-a-stream-of-values-while-calling-async-fns", "title": "Creating a stream of values while calling async fns?", "body": "<p>I can't figure out how to provide a <a href=\"https://rust-lang-nursery.github.io/futures-api-docs/0.3.0-alpha.14/futures/stream/index.html\" rel=\"nofollow noreferrer\"><code>Stream</code></a> where I <code>await</code> async functions to get the data needed for the values of the stream.</p>\n\n<p>I've tried to implement the the <a href=\"https://rust-lang-nursery.github.io/futures-api-docs/0.3.0-alpha.14/futures/stream/trait.Stream.html#tymethod.poll_next\" rel=\"nofollow noreferrer\"><code>Stream</code></a> trait directly, but I run into issues because I'd like to use async things like <code>await</code>ing, the compiler does not want me to call async functions.</p>\n\n<p>I assume that I'm missing some background on what the goal of <code>Stream</code> is and I'm just attacking this incorrectly and perhaps I shouldn't be looking at <code>Stream</code> at all, but I don't know where else to turn. I've seen the other <a href=\"https://rust-lang-nursery.github.io/futures-api-docs/0.3.0-alpha.14/futures/stream/index.html#functions\" rel=\"nofollow noreferrer\">functions in the <code>stream</code> module</a> that could be useful, but I'm unsure how I could store any state and use these functions.</p>\n\n<p>As a slightly simplified version of my actual goal, I want to provide a stream of 64-byte <code>Vec</code>s from an <code>AsyncRead</code> object (i.e. TCP stream), but also store a little state inside whatever logic ends up producing values for the stream, in this example, a counter.</p>\n\n<pre><code>pub struct Receiver&lt;T&gt;\nwhere\n    T: AsyncRead + Unpin,\n{\n    readme: T,\n    num: u64,\n}\n\n// ..code for a simple `new() -&gt; Self` function..\n\nimpl&lt;T&gt; Stream for Receiver&lt;T&gt;\nwhere\n    T: AsyncRead + Unpin,\n{\n    type Item = Result&lt;Vec&lt;u8&gt;, io::Error&gt;;\n\n    fn poll_next(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Option&lt;Self::Item&gt;&gt; {\n        let mut buf: [u8; 64] = [0; 64];\n        match self.readme.read_exact(&amp;mut buf).await {\n            Ok(()) =&gt; {\n                self.num += 1;\n                Poll::Ready(Some(Ok(buf.to_vec())))\n            }\n            Err(e) =&gt; Poll::Ready(Some(Err(e))),\n        }\n    }\n}\n</code></pre>\n\n<p>This fails to build, saying </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0728]: `await` is only allowed inside `async` functions and blocks\n</code></pre>\n\n<p>I'm using <code>rustc 1.36.0-nightly (d35181ad8 2019-05-20)</code> and my <code>Cargo.toml</code> looks like this:</p>\n\n<pre><code>[dependencies]\nfutures-preview = { version = \"0.3.0-alpha.16\", features = [\"compat\", \"io-compat\"] }\npin-utils = \"0.1.0-alpha.4\"\n</code></pre>\n"}, {"tags": ["asynchronous", "rust", "runtime", "future"], "answers": [{"tags": [], "owner": {"reputation": 37889, "user_id": 73772, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b4a74d63b7e37a68f94a3425ae7e1900?s=128&d=identicon&r=PG&f=1", "display_name": "Emil H", "link": "https://stackoverflow.com/users/73772/emil-h"}, "is_accepted": false, "score": 0, "last_activity_date": 1561242329, "creation_date": 1561242329, "answer_id": 56719610, "question_id": 56718747, "link": "https://stackoverflow.com/questions/56718747/how-to-wait-all-spawned-async-tasks/56719610#56719610", "title": "How to wait all spawned async tasks", "body": "<p>I'd strive to avoid using <code>tokio::spawn()</code> here, and try to wrap it all into a single future (in general, I think you only do tokio::spawn when you don't care about the result or execution, which we do here). That should make it easy to wait for completion. I haven't tested this, but something along these lines might do the trick:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>    let task = tokio::fs::read_dir(path)\n        .flatten_stream()\n        .for_each(move |entry| {\n            let path = entry.path();\n            if path.is_dir() {\n                let task = visit_async(entry.path());\n                future::Either::A(task)\n            } else {\n                println!(\"File: {:?}\", path);\n                future::Either::B(future::ok(()))\n            }\n        })\n        .map_err(Error::from)\n        .and_then(|_| {\n            // Do some work once all tasks complete\n        });\n    Box::new(task)\n</code></pre>\n\n<p>This will cause the asynchronous tasks to execute in sequence. You could use <code>and_then</code> instead of <code>for_each</code> to execute them in parallel and then <code>into_future().and_then(|_| { ... })</code> to tuck on some action to execute afterwards.</p>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1358, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1561242329, "creation_date": 1561233690, "last_edit_date": 1561234099, "question_id": 56718747, "link": "https://stackoverflow.com/questions/56718747/how-to-wait-all-spawned-async-tasks", "title": "How to wait all spawned async tasks", "body": "<p>I have an async method that uses <code>tokio::fs</code> to explore a directory:</p>\n\n<pre><code>use failure::Error;\nuse futures::Future;\nuse std::path::PathBuf;\nuse tokio::prelude::*;\n\nfn visit_async(path: PathBuf) -&gt; Box&lt;Future&lt;Item = (), Error = Error&gt; + Send&gt; {\n    let task = tokio::fs::read_dir(path)\n        .flatten_stream()\n        .for_each(move |entry| {\n            let path = entry.path();\n            if path.is_dir() {\n                let task = visit_async(entry.path());\n                tokio::spawn(task.map_err(drop));\n            } else {\n                println!(\"File: {:?}\", path);\n            }\n            future::ok(())\n        })\n        .map_err(Error::from);\n    Box::new(task)\n}\n</code></pre>\n\n<p>I need to execute another future after all the the future returned by this method ends as well as all the tasks spawned by it. Is there a better way that just starting another runtime?</p>\n\n<pre><code>let t = visit_async(PathBuf::from(\".\")).map_err(drop);\ntokio::run(t);\n\ntokio::run(future::ok(()));\n</code></pre>\n"}, {"tags": ["string", "rust", "slice"], "answers": [{"comments": [{"owner": {"reputation": 388, "user_id": 9170571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9681b567ae09cf43a1e33b0c36478748?s=128&d=identicon&r=PG&f=1", "display_name": "Jan15", "link": "https://stackoverflow.com/users/9170571/jan15"}, "edited": false, "score": 0, "creation_date": 1561234836, "post_id": 56718783, "comment_id": 99999161, "body": "I am just trying to learn here: Is there an inherent quality to str, which make it impossible to be a <code>&amp;[u8]</code> or <code>&amp;[char]</code>?"}, {"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "reply_to_user": {"reputation": 388, "user_id": 9170571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9681b567ae09cf43a1e33b0c36478748?s=128&d=identicon&r=PG&f=1", "display_name": "Jan15", "link": "https://stackoverflow.com/users/9170571/jan15"}, "edited": false, "score": 0, "creation_date": 1561236583, "post_id": 56718783, "comment_id": 99999514, "body": "@Jan15: yes. A <code>&amp;str</code> is always UTF-8 valid, while a <code>&amp;[u8]</code> can contain anything. <code>u8</code> is also not a really useful type to use with strings most of the time (neither is <code>char</code>, which is why <code>&amp;str</code> is also different from <code>&amp;[char]</code>)."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 3, "last_activity_date": 1561236736, "last_edit_date": 1561236736, "creation_date": 1561233981, "answer_id": 56718783, "question_id": 56718730, "link": "https://stackoverflow.com/questions/56718730/if-str-is-a-string-slice-why-dont-stdslice-blanket-implementations-work-on/56718783#56718783", "title": "If str is a &quot;string slice&quot;, why don&#39;t std::slice blanket implementations work on str?", "body": "<p>The documentation of <code>str</code> starts with</p>\n\n<blockquote>\n  <p>The <code>str</code> type, also called a 'string slice',</p>\n</blockquote>\n\n<p>The quotes are important here. A <code>str</code> is a 'string slice', which is not the same as a simple 'slice'. They share the name because they are very similar, but are not related to each other otherwise.</p>\n\n<p>You can however get a regular slice out of a 'str' using <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.as_bytes\" rel=\"nofollow noreferrer\"><code>as_bytes</code></a>. There is also a <a href=\"https://doc.rust-lang.org/std/primitive.str.html#method.as_bytes_mut\" rel=\"nofollow noreferrer\">mutable version</a>, which is unsafe because you could use it to break an important invariant of <code>&amp;str</code> over <code>&amp;[u8]</code>: UTF-8 validity.</p>\n"}], "owner": {"reputation": 388, "user_id": 9170571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9681b567ae09cf43a1e33b0c36478748?s=128&d=identicon&r=PG&f=1", "display_name": "Jan15", "link": "https://stackoverflow.com/users/9170571/jan15"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1561236736, "creation_date": 1561233574, "last_edit_date": 1561234596, "question_id": 56718730, "link": "https://stackoverflow.com/questions/56718730/if-str-is-a-string-slice-why-dont-stdslice-blanket-implementations-work-on", "title": "If str is a &quot;string slice&quot;, why don&#39;t std::slice blanket implementations work on str?", "body": "<p>In the <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html\" rel=\"nofollow noreferrer\">Rust book</a> and <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"nofollow noreferrer\">docs</a>, <code>str</code> is being referred to as a slice (in the book they say a slice into a <code>String</code>).\nSo, I would expect <code>str</code> to behave the same as any other slice: I should be able to for example use blanket implementations from <code>std::slice</code>.\nHowever, this does not seem to be the case:</p>\n\n<p>While this works as expected (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d3070df700ea28ec55fdd6480b4f734a\" rel=\"nofollow noreferrer\">playground</a>):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let vec = vec![1, 2, 3, 4];\n    let int_slice = &amp;vec[..];\n    for chunk in int_slice.chunks(2) {\n        println!(\"{:?}\", chunk);\n    }\n}\n</code></pre>\n\n<p>This fails to compile: (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b85848a3b08b665c1e637aab9977a179\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let s = \"Hello world\";\n    for chunk in s.chunks(3) {\n        println!(\"{}\", chunk);\n    }\n}\n</code></pre>\n\n<p>With the following error message:</p>\n\n<pre><code>error[E0599]: no method named `chunks` found for type `&amp;str` in the current scope\n --&gt; src/main.rs:3:20\n  |\n3 |     for chunk in s.chunks(3) {\n  |                    ^^^^^^\n</code></pre>\n\n<p>Does this mean <code>str</code> is not a regular slice?</p>\n\n<p>If it's not: What is the characteristic of <code>str</code>, which make it impossible to be a slice?</p>\n\n<p>On a side-note: If the above is an \"int slice\", shouldn't <code>str</code> be described as a \"char slice\"?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1561234335, "last_edit_date": 1561234335, "creation_date": 1561232273, "answer_id": 56718564, "question_id": 56718406, "link": "https://stackoverflow.com/questions/56718406/why-does-rust-assignment-of-const-from-trait-to-trait-not-work/56718564#56718564", "title": "Why does Rust assignment of const from trait to trait not work?", "body": "<p>Traits are supposed to be implemented by a concrete type, and are not supposed to define a constant on their own that can't be changed in implementors. What you specified is a default value, rather than a value all implementors must adhere to. You wouldn't need a trait if all types must have the same <code>X</code> value.</p>\n\n<p>Therefore <code>A::X</code> is not a well defined value.</p>\n\n<p>Here is an example showing why:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait A {\n    const X: i32 = 1;\n}\n\nstruct S;\n\nimpl A for S {}\n\nstruct R;\n\nimpl A for R {\n    const X: i32 = 42;\n}\n\nfn main() {\n    println!(\"S: {}\", S::X);\n    println!(\"R: {}\", R::X);\n    println!(\"S: {}\", &lt;S as A&gt;::X); // A::X alone is ambiguous\n    println!(\"R: {}\", &lt;R as A&gt;::X);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=211413bc8317973b6fae598903183d39\" rel=\"nofollow noreferrer\">(link to playground)</a></p>\n\n<p>What you are doing is similar to trying to call a default function on a trait, here the error E0283:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait A {\n    fn get_x() -&gt; i32 {\n        1\n    }\n}\n\nstruct S;\n\nimpl A for S {}\n\nstruct R;\n\nimpl A for R {\n    fn get_x() -&gt; i32 {\n        42\n    }\n}\n\nfn main() {\n    // A::get_x() is ambiguous but there are not:\n    println!(\"S: {}\", S::get_x());\n    println!(\"R: {}\", R::get_x());\n    println!(\"S: {}\", &lt;S as A&gt;::get_x());\n    println!(\"R: {}\", &lt;R as A&gt;::get_x());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5223e535208dd3c02b138da0da41b1f7\" rel=\"nofollow noreferrer\">(link to playground)</a></p>\n"}, {"comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1561232618, "post_id": 56718579, "comment_id": 99998694, "body": "&quot;I have no compiler at hand&quot; \u2192 <a href=\"https://play.rust-lang.org/\" rel=\"nofollow noreferrer\">Sure you do!</a>"}], "tags": [], "owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "is_accepted": false, "score": 3, "last_activity_date": 1561232371, "creation_date": 1561232371, "answer_id": 56718579, "question_id": 56718406, "link": "https://stackoverflow.com/questions/56718406/why-does-rust-assignment-of-const-from-trait-to-trait-not-work/56718579#56718579", "title": "Why does Rust assignment of const from trait to trait not work?", "body": "<p>The problem is that any <code>struct</code> that implements <code>A</code> could define its own value for <code>X</code>. Thus, simply stating <code>A::X</code> in the context of <code>trait B</code> does not offer enough information for the compiler as to which <code>impl</code> of <code>A</code> should be chosen.</p>\n\n<p>If you want that something that <code>impl</code>ements <code>B</code> also <code>impl</code>ements <code>A</code>, you can try the following (I have no compiler at hand, but the idea should be clear):</p>\n\n<pre><code>trait B : A {\n    const Y: i32 = &lt;Self as A&gt;::X;\n}\n</code></pre>\n"}], "owner": {"reputation": 547, "user_id": 2011659, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/8563cfe6fbe311b834c416e07369bf25?s=128&d=identicon&r=PG", "display_name": "user2011659", "link": "https://stackoverflow.com/users/2011659/user2011659"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 284, "favorite_count": 0, "accepted_answer_id": 56718564, "answer_count": 2, "score": 1, "last_activity_date": 1593111778, "creation_date": 1561230957, "last_edit_date": 1593111778, "question_id": 56718406, "link": "https://stackoverflow.com/questions/56718406/why-does-rust-assignment-of-const-from-trait-to-trait-not-work", "title": "Why does Rust assignment of const from trait to trait not work?", "body": "<p>I'm trying to assign an associated const defined in one trait to another trait which doesn't work as expected. Here's a minimal example with 3 traits and one struct:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait A {\n    const X: i32 = 1;\n}\n\nstruct S;\n\nimpl A for S {}\n\ntrait B {\n    const Y: i32 = A::X;\n}\n\ntrait C {\n    const Y: i32 = S::X;\n}\n\nfn main() {}\n</code></pre>\n<p>The corresponding compiler error is:</p>\n<pre class=\"lang-none prettyprint-override\"><code>error[E0283]: type annotations required: cannot resolve `_: A`\n  --&gt; src/main.rs:10:20\n   |\n10 |     const Y: i32 = A::X;\n   |                    ^^^^\n   |\nnote: required by `A::X`\n  --&gt; src/main.rs:2:5\n   |\n2  |     const X: i32 = 1;\n   |     ^^^^^^^^^^^^^^^^^\n</code></pre>\n<p>The explanation for <code>E0283</code> tells me what the code reveals: I can assign from a concrete type but not the trait itself. But where the <code>E0283</code> example uses an undefined function I have an already defined value. Why is that so and how can this be bypassed?</p>\n"}, {"tags": ["rust", "macros"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 1, "creation_date": 1561232561, "post_id": 56718336, "comment_id": 99998683, "body": "Is adding an attribute to the function an option? (eg. <code>#[with_name] fn foo() {}</code>)"}, {"owner": {"reputation": 30359, "user_id": 255688, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/74b63650ed07d745fd9accf52e4d286b?s=128&d=identicon&r=PG", "display_name": "phimuemue", "link": "https://stackoverflow.com/users/255688/phimuemue"}, "edited": false, "score": 1, "creation_date": 1561233602, "post_id": 56718336, "comment_id": 99998913, "body": "Maybe this helps: <a href=\"https://stackoverflow.com/questions/38088067/equivalent-of-func-or-function-in-rust\" title=\"equivalent of func or function in rust\">stackoverflow.com/questions/38088067/&hellip;</a>"}, {"owner": {"reputation": 2118, "user_id": 6360083, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b1f8b36d7776a9f46b9206cdfa036c38?s=128&d=identicon&r=PG&f=1", "display_name": "Techradar", "link": "https://stackoverflow.com/users/6360083/techradar"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561271667, "post_id": 56718336, "comment_id": 100003809, "body": "@mcarton It is I guess... but I don&#39;t understand how to access that in an example, where the macro would be called inside a function. Could you show an example? What I understand from the link provided by phimuemue, the macro needs to be tagged according to different attributes."}], "answers": [{"tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": true, "score": 2, "last_activity_date": 1561289484, "creation_date": 1561289484, "answer_id": 56723429, "question_id": 56718336, "link": "https://stackoverflow.com/questions/56718336/rust-function-name-caller-or-any-other-context-inside-macro/56723429#56723429", "title": "Rust function name (caller) or any other context inside macro", "body": "<p>This can be done using a procedural macro:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate proc_macro;\nuse proc_macro::TokenStream;\n\n#[proc_macro_attribute]\npub fn with_name(_: TokenStream, item: TokenStream) -&gt; TokenStream {\n    let mut input = syn::parse_macro_input!(item as syn::ItemFn);\n\n    let fn_name = input.ident.to_string();\n    let const_decl = quote::quote! {\n        const THIS_FN: &amp;str = #fn_name;\n    };\n\n    input.block.stmts.insert(0, syn::parse(const_decl.into()).unwrap());\n\n    let output = quote::quote! {\n        #input\n    };\n\n    output.into()\n}\n</code></pre>\n\n<p>Cargo.toml:</p>\n\n<pre><code>[package]\nname = \"with_name\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[lib]\nproc-macro = true\n\n[dependencies]\nquote = \"0.6.12\"\nsyn = { version = \"0.15.37\", features = [\"full\"] }\n</code></pre>\n\n<p>Which can be used as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[with_name::with_name]\nfn foo() {\n    println!(\"Name: {}\", THIS_FN);\n}\n\nfn main() {\n    foo();\n}\n</code></pre>\n\n<p>Also note that if you only care about the module, <a href=\"https://doc.rust-lang.org/std/macro.module_path.html\" rel=\"nofollow noreferrer\">there is a built-in macro for that</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod test {\n    pub fn foo() {\n        println!(\"Module: {}\", module_path!());\n    }\n}\n\nfn main() {\n    test::foo();\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=04287290dc846985ad0c4556b062b02c\" rel=\"nofollow noreferrer\">(link to playground)</a></p>\n"}], "owner": {"reputation": 2118, "user_id": 6360083, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b1f8b36d7776a9f46b9206cdfa036c38?s=128&d=identicon&r=PG&f=1", "display_name": "Techradar", "link": "https://stackoverflow.com/users/6360083/techradar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1012, "favorite_count": 0, "accepted_answer_id": 56723429, "answer_count": 1, "score": 0, "last_activity_date": 1561289484, "creation_date": 1561230409, "last_edit_date": 1561231025, "question_id": 56718336, "link": "https://stackoverflow.com/questions/56718336/rust-function-name-caller-or-any-other-context-inside-macro", "title": "Rust function name (caller) or any other context inside macro", "body": "<p>Is there a way in Rust to get the \"calling\" function name or any other contextual information inside a macro?</p>\n\n<p>Example:</p>\n\n<pre><code>#[macro_export]\nmacro_rules! somemacro {\n    ( $x:expr ) =&gt; {\n        {\n          // access function name (etc..) that called this macro\n        }\n    };\n}\n</code></pre>\n"}, {"tags": ["rust", "smart-pointers", "dereference", "reference-counting"], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 11685699, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63758019bd343ba6d35322d37850c6aa?s=128&d=identicon&r=PG&f=1", "display_name": "baroco34", "link": "https://stackoverflow.com/users/11685699/baroco34"}, "edited": false, "score": 0, "creation_date": 1561223238, "post_id": 56717378, "comment_id": 99996708, "body": "Ohh I see, didn&#39;t know about Rust&#39;s auto-dereferencing. Thank you for the linked post!"}], "tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1561222844, "last_edit_date": 1561222844, "creation_date": 1561222350, "answer_id": 56717378, "question_id": 56717320, "link": "https://stackoverflow.com/questions/56717320/calling-map-on-an-optionrcstruct-works-differently-than-calling-it-on-a-opti/56717378#56717378", "title": "Calling map on an Option&lt;Rc&lt;Struct&gt;&gt; works differently than calling it on a Option&lt;Rc&lt;i32&gt;&gt;", "body": "<p>The type of the <code>i</code> in both closures is actually <code>Rc&lt;Something&gt;</code> and <code>Rc&lt;i32&gt;</code> respectively. <code>Rc</code> can be dereferenced to access its inner data, but there are places in Rust where dereferencing happens automatically, for convenience.</p>\n\n<p>In the struct case, when you write <code>i.value</code>, it will automatically dereference <code>i</code> to access the field. It then returns a copy of the <code>i32</code>, because <code>i32</code> is a <code>Copy</code> type. So the type of the expression <code>i.value</code> is <code>i32</code>. It's as if you wrote <code>(*i).value</code>, but Rust did the dereferencing for you.</p>\n\n<p>In the <code>i32</code> case, you are just returning the <code>i</code>, which still has type <code>Rc&lt;i32&gt;</code>. You can fix it by explicitly dereferencing:</p>\n\n<pre><code>wrapped_integer.map(|i| { *i });\n</code></pre>\n\n<hr>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/28519997/what-are-rusts-exact-auto-dereferencing-rules\">What are Rust's exact auto-dereferencing rules?</a></li>\n</ul>\n"}], "owner": {"reputation": 23, "user_id": 11685699, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63758019bd343ba6d35322d37850c6aa?s=128&d=identicon&r=PG&f=1", "display_name": "baroco34", "link": "https://stackoverflow.com/users/11685699/baroco34"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "accepted_answer_id": 56717378, "answer_count": 1, "score": 2, "last_activity_date": 1561222844, "creation_date": 1561221862, "last_edit_date": 1561222524, "question_id": 56717320, "link": "https://stackoverflow.com/questions/56717320/calling-map-on-an-optionrcstruct-works-differently-than-calling-it-on-a-opti", "title": "Calling map on an Option&lt;Rc&lt;Struct&gt;&gt; works differently than calling it on a Option&lt;Rc&lt;i32&gt;&gt;", "body": "<p>I'm new to Rust and I'm trying to figure out why <code>Rc</code> is behaving differently when being passed to a closure. My full code is the following:</p>\n\n<pre><code>use std::rc::Rc;\n\nstruct Something {\n    value: i32\n}\n\nfn main() {\n    let wrapped_struct = Some(Rc::new(Something { value: 1 }));\n    let wrapped_integer = Some(Rc::new(1));\n    // Case 1: This works\n    let works: Option&lt;i32&gt; = wrapped_struct.map(|i| { i.value });\n    // Case 2: This fails\n    let fails: Option&lt;i32&gt; = wrapped_integer.map(|i| { i });\n}\n</code></pre>\n\n<p>The error message is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   |\n13 |     let fails: Option&lt;i32&gt; = wrapped_integer.map(|i| { i });\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected i32, found struct `std::rc::Rc`\n   |\n   = note: expected type `std::option::Option&lt;i32&gt;`\n              found type `std::option::Option&lt;std::rc::Rc&lt;{integer}&gt;&gt;`\n</code></pre>\n\n<p>What I don't understand is why in the first closure (Case 1) I can use <code>i</code> as a <code>Something</code> (I'd expect <code>Rc&lt;Something&gt;</code>) but in the second one (Case 2) I can't use <code>i</code> as an <code>i32</code> (I actually get an <code>Rc&lt;i32&gt;</code>).</p>\n\n<p>I appreciate any pointers to the relevant documentation. Thanks a lot!</p>\n"}, {"tags": ["asynchronous", "rust", "filesystems", "rust-tokio"], "answers": [{"comments": [{"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1561226460, "post_id": 56717559, "comment_id": 99997382, "body": "Thanks for your answer, could you elaborate when you say cannot <i>currently</i> be recursive? Is there any plan to change this?"}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1561226794, "post_id": 56717559, "comment_id": 99997437, "body": "Also, is there a way to propagate the errors instead of dropping them?"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1561279209, "post_id": 56717559, "comment_id": 100005153, "body": "Currently, functions returning <code>impl Trait</code> must still return a concrete type, it is just that this type isn&#39;t named explicitly. See for example this <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=aba1f67fa2cd362328dda5b17b956279\" rel=\"nofollow noreferrer\">playground</a>. A recursive function is just a particular more complicated case. I think there has been some discussion about  extending this feature to more use cases, but nothing is implemented AFAIK."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1561279340, "post_id": 56717559, "comment_id": 100005180, "body": "About propagating errors, since the function is executed asynchronously, there is nowhere to propagate the errors. However, I think you can easily create a <code>mpsc::Channel</code>, post any errors there and collect them all in the main thread."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": false, "score": 3, "last_activity_date": 1573585647, "last_edit_date": 1573585647, "creation_date": 1561223871, "answer_id": 56717559, "question_id": 56717139, "link": "https://stackoverflow.com/questions/56717139/how-to-asynchronously-explore-a-directory-and-its-sub-directories/56717559#56717559", "title": "How to asynchronously explore a directory and its sub-directories?", "body": "<p>Your code has two errors:</p>\n\n<p>First, a function returning <code>impl Trait</code> cannot currently be recursive, because the actual type returned would depend on itself.</p>\n\n<p>To make your example work, you need to return a sized type. The simple candidate is a trait object, that is, a <code>Box&lt;dyn Future&lt;...&gt;&gt;</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn visit(path: PathBuf) -&gt; Box&lt;dyn Future&lt;Item = (), Error = Error&gt;&gt; {\n    // ...\n            let task = visit(entry.path());\n            tokio::spawn(task.map_err(drop));\n    // ...\n\n    Box::new(task)\n}\n</code></pre>\n\n<p>There is still your second error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: `dyn futures::future::Future&lt;Item = (), Error = failure::error::Error&gt;` cannot be sent between threads safely\n   --&gt; src/lib.rs:14:30\n    |\n14  |                 tokio::spawn(task.map_err(drop));\n    |                              ^^^^^^^^^^^^^^^^^^ `dyn futures::future::Future&lt;Item = (), Error = failure::error::Error&gt;` cannot be sent between threads safely\n    | \n   ::: /root/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.1.22/src/executor/mod.rs:131:52\n    |\n131 | where F: Future&lt;Item = (), Error = ()&gt; + 'static + Send\n    |                                                    ---- required by this bound in `tokio::executor::spawn`\n    |\n    = help: the trait `std::marker::Send` is not implemented for `dyn futures::future::Future&lt;Item = (), Error = failure::error::Error&gt;`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `std::ptr::Unique&lt;dyn futures::future::Future&lt;Item = (), Error = failure::error::Error&gt;&gt;`\n    = note: required because it appears within the type `std::boxed::Box&lt;dyn futures::future::Future&lt;Item = (), Error = failure::error::Error&gt;&gt;`\n    = note: required because it appears within the type `futures::future::map_err::MapErr&lt;std::boxed::Box&lt;dyn futures::future::Future&lt;Item = (), Error = failure::error::Error&gt;&gt;, fn(failure::error::Error) {std::mem::drop::&lt;failure::error::Error&gt;}&gt;`\n</code></pre>\n\n<p>This means that your trait object is not <code>Send</code> so it cannot be scheduled for execution in another thread using <code>tokio::spawn()</code>. Fortunately, this is easy to fix: just add <code>+ Send</code> to your trait object:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn visit(path: PathBuf) -&gt; Box&lt;dyn Future&lt;Item = (), Error = Error&gt; + Send&gt; {\n    //...\n}\n</code></pre>\n\n<p>See the full code in the <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fac65d403469e7cd6e4cb744f7dcf86f\" rel=\"nofollow noreferrer\">Playground</a>.</p>\n"}, {"comments": [{"owner": {"reputation": 351, "user_id": 6926991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6fba29a1efee35984a7395938b3cf88?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Bammer", "link": "https://stackoverflow.com/users/6926991/martin-bammer"}, "edited": false, "score": 0, "creation_date": 1573630878, "post_id": 58825638, "comment_id": 103939961, "body": "When I try to build this example I get the following error: error[E0432]: unresolved import <code>tokio_fs</code> What is missing in Cargo.toml?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 351, "user_id": 6926991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6fba29a1efee35984a7395938b3cf88?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Bammer", "link": "https://stackoverflow.com/users/6926991/martin-bammer"}, "edited": false, "score": 0, "creation_date": 1573648101, "post_id": 58825638, "comment_id": 103948626, "body": "@MartinBammer the dependencies and their versions are listed on the first 3 lines of the example code: tokio and tokio_fs."}, {"owner": {"reputation": 351, "user_id": 6926991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e6fba29a1efee35984a7395938b3cf88?s=128&d=identicon&r=PG&f=1", "display_name": "Martin Bammer", "link": "https://stackoverflow.com/users/6926991/martin-bammer"}, "edited": false, "score": 0, "creation_date": 1573738312, "post_id": 58825638, "comment_id": 103987230, "body": "Ah I&#39;ve found the problem. I had added &quot;tokio_fs&quot; to Cargo.toml instead of &quot;tokio-fs&quot;."}, {"owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "edited": false, "score": 0, "creation_date": 1576326112, "post_id": 58825638, "comment_id": 104868190, "body": "@Shepmaster thanks, it would be great if you could also provide an updated async await solution"}, {"owner": {"reputation": 12767, "user_id": 66450, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4f0e357e06e607e4d7b13f6abe276378?s=128&d=identicon&r=PG", "display_name": "Casey Rodarmor", "link": "https://stackoverflow.com/users/66450/casey-rodarmor"}, "edited": false, "score": 0, "creation_date": 1577655495, "post_id": 58825638, "comment_id": 105218038, "body": "@Shepmaster I&#39;m having trouble grokking this answer. I think I understand how it works, but I&#39;m wondering why <code>fn one_level()</code> is written to return <code>impl Future&lt;Output=io::Result&lt;Vec&lt;DirEntry&gt;&gt;&gt;</code>. Why not return something that is <code>impl Stream&lt;Item=io::Result&lt;DirEntry&gt;&gt;</code> instead? I.e. wouldn&#39;t it be preferable to return a stream that returns dir entries one by one, instead of a vec once all of them have been read? (I don&#39;t know how to write such a thing, so maybe it would just be unnecessarily complex.)"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 12767, "user_id": 66450, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4f0e357e06e607e4d7b13f6abe276378?s=128&d=identicon&r=PG", "display_name": "Casey Rodarmor", "link": "https://stackoverflow.com/users/66450/casey-rodarmor"}, "edited": false, "score": 1, "creation_date": 1579028172, "post_id": 58825638, "comment_id": 105628731, "body": "@CaseyRodarmor that would be ideal, but it kind of requires making things recursive in an awkward way. See the various answers in <a href=\"https://stackoverflow.com/q/59697795/155423\">How can I create a stream where the items are based on items that the stream previously returned?</a>. If you wanted to go down that path, I&#39;d recommend the <code>Rc</code>-based solution today."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1576375462, "last_edit_date": 1576375462, "creation_date": 1573587891, "answer_id": 58825638, "question_id": 56717139, "link": "https://stackoverflow.com/questions/56717139/how-to-asynchronously-explore-a-directory-and-its-sub-directories/58825638#58825638", "title": "How to asynchronously explore a directory and its sub-directories?", "body": "<p>I would make several modifications to <a href=\"https://stackoverflow.com/a/56717559/155423\">rodrigo's existing answer</a>:</p>\n\n<ol>\n<li>Return a <code>Stream</code> from the function, allowing the caller to do what they need with a given file entry.</li>\n<li>Return an <code>impl Stream</code> instead of a <code>Box&lt;dyn Stream&gt;</code>. This leaves room for more flexibility in implementation. For example, a custom type could be created that uses an internal stack instead of the less-efficient recursive types.</li>\n<li>Return <code>io::Error</code> from the function to allow the user to deal with any errors.</li>\n<li>Accept a <code>impl Into&lt;PathBuf&gt;</code> to allow a nicer API.</li>\n<li>Create an inner hidden implementation function that uses concrete types in its API.</li>\n</ol>\n\n<h1>Futures 0.3 / Tokio 0.2</h1>\n\n<p>In this version, I avoided the deeply recursive calls, keeping a local stack of paths to visit (<code>to_visit</code>).</p>\n\n<pre><code>use futures::{stream, Stream, StreamExt}; // 0.3.1\nuse std::{io, path::PathBuf};\nuse tokio::fs::{self, DirEntry}; // 0.2.4\n\nfn visit(path: impl Into&lt;PathBuf&gt;) -&gt; impl Stream&lt;Item = io::Result&lt;DirEntry&gt;&gt; + Send + 'static {\n    async fn one_level(path: PathBuf, to_visit: &amp;mut Vec&lt;PathBuf&gt;) -&gt; io::Result&lt;Vec&lt;DirEntry&gt;&gt; {\n        let mut dir = fs::read_dir(path).await?;\n        let mut files = Vec::new();\n\n        while let Some(child) = dir.next_entry().await? {\n            if child.metadata().await?.is_dir() {\n                to_visit.push(child.path());\n            } else {\n                files.push(child)\n            }\n        }\n\n        Ok(files)\n    }\n\n    stream::unfold(vec![path.into()], |mut to_visit| {\n        async {\n            let path = to_visit.pop()?;\n            let file_stream = match one_level(path, &amp;mut to_visit).await {\n                Ok(files) =&gt; stream::iter(files).map(Ok).left_stream(),\n                Err(e) =&gt; stream::once(async { Err(e) }).right_stream(),\n            };\n\n            Some((file_stream, to_visit))\n        }\n    })\n    .flatten()\n}\n\n#[tokio::main]\nasync fn main() {\n    let root_path = std::env::args().nth(1).expect(\"One argument required\");\n    let paths = visit(root_path);\n\n    paths\n        .for_each(|entry| {\n            async {\n                match entry {\n                    Ok(entry) =&gt; println!(\"visiting {:?}\", entry),\n                    Err(e) =&gt; eprintln!(\"encountered an error: {}\", e),\n                }\n            }\n        })\n        .await;\n}\n</code></pre>\n\n<h1>Futures 0.1 / Tokio 0.1</h1>\n\n<pre><code>use std::path::PathBuf;\nuse tokio::{fs, prelude::*}; // 0.1.22\nuse tokio_fs::DirEntry; // 1.0.6\n\nfn visit(\n    path: impl Into&lt;PathBuf&gt;,\n) -&gt; impl Stream&lt;Item = DirEntry, Error = std::io::Error&gt; + Send + 'static {\n    fn visit_inner(\n        path: PathBuf,\n    ) -&gt; Box&lt;dyn Stream&lt;Item = DirEntry, Error = std::io::Error&gt; + Send + 'static&gt; {\n        Box::new({\n            fs::read_dir(path)\n                .flatten_stream()\n                .map(|entry| {\n                    let path = entry.path();\n                    if path.is_dir() {\n                        // Optionally include `entry` if you want to\n                        // include directories in the resulting\n                        // stream.\n                        visit_inner(path)\n                    } else {\n                        Box::new(stream::once(Ok(entry)))\n                    }\n                })\n                .flatten()\n        })\n    }\n\n    visit_inner(path.into())\n}\n\nfn main() {\n    tokio::run({\n        let root_path = std::env::args().nth(1).expect(\"One argument required\");\n        let paths = visit(root_path);\n\n        paths\n            .then(|entry| {\n                match entry {\n                    Ok(entry) =&gt; println!(\"visiting {:?}\", entry),\n                    Err(e) =&gt; eprintln!(\"encountered an error: {}\", e),\n                };\n\n                Ok(())\n            })\n            .for_each(|_| Ok(()))\n    });\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a></li>\n</ul>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1091, "favorite_count": 1, "accepted_answer_id": 58825638, "answer_count": 2, "score": 3, "last_activity_date": 1576375462, "creation_date": 1561220484, "last_edit_date": 1573588407, "question_id": 56717139, "link": "https://stackoverflow.com/questions/56717139/how-to-asynchronously-explore-a-directory-and-its-sub-directories", "title": "How to asynchronously explore a directory and its sub-directories?", "body": "<p>I need to explore a directory and all its sub-directories. I can explore the directory easily with recursion in a synchronous way:</p>\n\n<pre><code>use failure::Error;\nuse std::fs;\nuse std::path::Path;\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    visit(Path::new(\".\"))\n}\n\nfn visit(path: &amp;Path) -&gt; Result&lt;(), Error&gt; {\n    for e in fs::read_dir(path)? {\n        let e = e?;\n        let path = e.path();\n        if path.is_dir() {\n            visit(&amp;path)?;\n        } else if path.is_file() {\n            println!(\"File: {:?}\", path);\n        }\n    }\n    Ok(())\n}\n</code></pre>\n\n<p>When I try to do the same in an asynchronous manner using <code>tokio_fs</code>:</p>\n\n<pre><code>use failure::Error; // 0.1.6\nuse futures::Future; // 0.1.29\nuse std::path::PathBuf;\nuse tokio::{fs, prelude::*}; // 0.1.22\n\nfn visit(path: PathBuf) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n    let task = fs::read_dir(path)\n        .flatten_stream()\n        .for_each(|entry| {\n            println!(\"{:?}\", entry.path());\n            let path = entry.path();\n            if path.is_dir() {\n                let task = visit(entry.path());\n                tokio::spawn(task.map_err(drop));\n            }\n            future::ok(())\n        })\n        .map_err(Error::from);\n\n    task\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fac65d403469e7cd6e4cb744f7dcf86f\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<p>I get the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0391]: cycle detected when processing `visit::{{opaque}}#0`\n --&gt; src/lib.rs:6:28\n  |\n6 | fn visit(path: PathBuf) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nnote: ...which requires processing `visit`...\n --&gt; src/lib.rs:6:1\n  |\n6 | fn visit(path: PathBuf) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  = note: ...which requires evaluating trait selection obligation `futures::future::map_err::MapErr&lt;impl futures::future::Future, fn(failure::error::Error) {std::mem::drop::&lt;failure::error::Error&gt;}&gt;: std::marker::Send`...\n  = note: ...which again requires processing `visit::{{opaque}}#0`, completing the cycle\nnote: cycle used when checking item types in top-level module\n --&gt; src/lib.rs:1:1\n  |\n1 | / use failure::Error; // 0.1.6\n2 | | use futures::Future; // 0.1.29\n3 | | use std::path::PathBuf;\n4 | | use tokio::{fs, prelude::*}; // 0.1.22\n... |\n20| |     task\n21| | }\n  | |_^\n\nerror[E0391]: cycle detected when processing `visit::{{opaque}}#0`\n --&gt; src/lib.rs:6:28\n  |\n6 | fn visit(path: PathBuf) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nnote: ...which requires processing `visit`...\n --&gt; src/lib.rs:6:1\n  |\n6 | fn visit(path: PathBuf) -&gt; impl Future&lt;Item = (), Error = Error&gt; {\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  = note: ...which again requires processing `visit::{{opaque}}#0`, completing the cycle\nnote: cycle used when checking item types in top-level module\n --&gt; src/lib.rs:1:1\n  |\n1 | / use failure::Error; // 0.1.6\n2 | | use futures::Future; // 0.1.29\n3 | | use std::path::PathBuf;\n4 | | use tokio::{fs, prelude::*}; // 0.1.22\n... |\n20| |     task\n21| | }\n  | |_^\n</code></pre>\n\n<p>What is the correct way of exploring a directory and its sub-directories asynchronously while propagating all the errors?</p>\n"}, {"tags": ["rust", "lifetime"], "answers": [{"comments": [{"owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "edited": false, "score": 0, "creation_date": 1561217336, "post_id": 56716671, "comment_id": 99995256, "body": "Thank you! This is exactly what I was missing in my understanding."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 1, "last_activity_date": 1561216756, "creation_date": 1561216756, "answer_id": 56716671, "question_id": 56716557, "link": "https://stackoverflow.com/questions/56716557/how-do-i-make-these-lifetimes-match/56716671#56716671", "title": "How do I make these lifetimes match?", "body": "<p>The answer is in the question, actually. You need to make the lifetimes match. So your (non-trait) <code>bar</code> needs to have the signature</p>\n\n<pre><code>fn bar&lt;'a&gt;(stack: &amp;mut Stack&lt;'a&gt;, x: &amp;'a X)\n</code></pre>\n\n<p>Now, your trait is too general. It's making a promise that it can't keep. It says \"if something implements <code>Foo</code>, then you can call <code>bar</code> on it with <em>any</em> reference to <code>X</code>\". But that's not what you want. You need to restrict that to a <em>specific</em> lifetime of <code>x</code>. So let's parameterize that.</p>\n\n<pre><code>trait Foo&lt;'a&gt; {\n    fn bar(&amp;mut self, x: &amp;'a X);\n}\n</code></pre>\n\n<p>Then we change the <code>impl</code>.</p>\n\n<pre><code>impl &lt;'a&gt;Foo&lt;'a&gt; for Quux&lt;'a&gt; {\n    fn bar(&amp;mut self, x: &amp;'a X) {\n        bar(&amp;mut self.stack, x)\n    }\n}\n</code></pre>\n\n<p>Because now we're making the right guarantee. <code>Quux&lt;'a&gt;</code> doesn't implement <code>Foo</code>. It specifically implements <code>Foo&lt;'a&gt;</code> for the particular lifetime <code>'a</code>.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=76616ee972244f924923a8f74c3a0ef8\" rel=\"nofollow noreferrer\">Playground link</a></p>\n\n<p>Complete code:</p>\n\n<pre><code>struct X {\n    y: String,\n}\n\ntrait Foo&lt;'a&gt; {\n    fn bar(&amp;mut self, x: &amp;'a X);\n}\n\ntype Stack&lt;'a&gt; = Vec&lt;&amp;'a X&gt;;\n\nstruct Quux&lt;'a&gt; {\n    stack: Stack&lt;'a&gt;,\n}\n\nfn bar&lt;'a&gt;(stack: &amp;mut Stack&lt;'a&gt;, x: &amp;'a X) {\n    stack.push(x);\n}\n\nimpl &lt;'a&gt;Foo&lt;'a&gt; for Quux&lt;'a&gt; {\n    fn bar(&amp;mut self, x: &amp;'a X) {\n        bar(&amp;mut self.stack, x)\n    }\n}\n\nfn main(){}\n</code></pre>\n"}], "owner": {"reputation": 2199, "user_id": 1542038, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/sq0X6.png?s=128&g=1", "display_name": "maxcountryman", "link": "https://stackoverflow.com/users/1542038/maxcountryman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 30, "favorite_count": 0, "accepted_answer_id": 56716671, "answer_count": 1, "score": 0, "last_activity_date": 1561216756, "creation_date": 1561215828, "question_id": 56716557, "link": "https://stackoverflow.com/questions/56716557/how-do-i-make-these-lifetimes-match", "title": "How do I make these lifetimes match?", "body": "<p>Say we have some code like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct X {\n    y: String,\n}\n\ntrait Foo {\n    fn bar(&amp;mut self, x: &amp;X);\n}\n\ntype Stack&lt;'a&gt; = Vec&lt;&amp;'a X&gt;;\n\nstruct Quux&lt;'a&gt; {\n    stack: Stack&lt;'a&gt;,\n}\n\nfn bar(stack: &amp;mut Stack, x: &amp;X) {\n    stack.push(x);\n}\n\nimpl &lt;'a&gt;Foo for Quux&lt;'a&gt; {\n    fn bar(&amp;mut self, x: &amp;X) {\n        bar(&amp;mut self.stack, x)\n    }\n}\n</code></pre>\n\n<p>The goal is to share the function <code>bar</code> between structs that implement <code>Foo</code>. It turns out that <code>bar</code> does some stuff with <code>self.stack</code> and so we can't easily implement a common definition on <code>Foo</code>.</p>\n\n<p>This code won't compile, complaining the lifetimes of <code>Stack</code> and <code>&amp;X</code> differ. <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2015&amp;gist=0b0533e315d6f6eb790ba103c0780db6\" rel=\"nofollow noreferrer\">Playground link</a>.</p>\n\n<p>How can we make these lifetimes match?</p>\n"}, {"tags": ["rust", "annotations", "traits", "generic-programming"], "answers": [{"tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 3, "last_activity_date": 1561204619, "last_edit_date": 1561204619, "creation_date": 1561203846, "answer_id": 56715187, "question_id": 56715110, "link": "https://stackoverflow.com/questions/56715110/how-do-i-tell-rust-that-something-implements-a-trait/56715187#56715187", "title": "How do I tell Rust that something implements a trait?", "body": "<p>Traits are unsized so you cannot return a value of trait type. Instead you must return a value of a type that implements that trait:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn one_to_ten&lt;T: Add&gt;() -&gt; impl std::iter::Iterator&lt;Item = T&gt; {\n    (1..5).chain(5..=10)\n}\n</code></pre>\n\n<p>Unfortunately that brings another issue, that the <code>(1..5)</code> code builds a range of integers, not of <code>T</code>. You can fix that with a custom trait, as the <code>std::iter::Step</code> is still unstable.</p>\n\n<p>Something like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3bc27fd8dad89341cdc3560bc80bc67e\" rel=\"nofollow noreferrer\">this (playground)</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait MyRange: Sized {\n    type Iter: std::iter::Iterator&lt;Item = Self&gt;;\n    fn new(a: i32, b: i32) -&gt; Self::Iter;\n    fn new_incl(a: i32, b: i32) -&gt; Self::Iter {\n        Self::new(a, b + 1)\n    }\n}\n\nimpl MyRange for i8 {\n    type Iter = std::ops::Range&lt;Self&gt;;\n    fn new(a: i32, b: i32) -&gt; Self::Iter {\n        (a as i8 .. b as i8) //check overflow?\n    }\n}\n\npub fn one_to_ten&lt;T: Add + MyRange&gt;() -&gt; impl std::iter::Iterator&lt;Item = T&gt; {\n    T::new(1, 5).chain(T::new_incl(5, 10))\n}\n</code></pre>\n\n<p>And then implement the <code>MyRange</code> trait for every integer type you need.</p>\n"}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 1, "closed_date": 1561206325, "accepted_answer_id": 56715187, "answer_count": 1, "score": 0, "last_activity_date": 1561204619, "creation_date": 1561203114, "question_id": 56715110, "link": "https://stackoverflow.com/questions/56715110/how-do-i-tell-rust-that-something-implements-a-trait", "closed_reason": "Duplicate", "title": "How do I tell Rust that something implements a trait?", "body": "<p>I'm trying to write a generic function that returns an iterator.</p>\n\n<pre><code>fn one_to_ten&lt;T: Add&gt;() -&gt; std::iter::Iterator&lt;Item = T&gt; {\n    (1..5).chain(5..=10)\n}\n</code></pre>\n\n<p>It's generic because it needs to work for <code>u8</code> through <code>u128</code>, and preferably also <code>i8</code> through <code>i128</code>, for the following code:</p>\n\n<pre><code>let mut sum: u64 = 0;\nfor x in one_to_ten() {\n    sum += x;\n}\n</code></pre>\n\n<p>Unfortunately, Rust complains:</p>\n\n<blockquote>\n  <p>= help: the trait <code>std::marker::Sized</code> is not implemented for <code>(dyn std::iter::Iterator&lt;Item = T&gt; + 'static)</code><br>\n  error[E0277]: the size for values of type <code>dyn std::iter::Iterator&lt;Item = _&gt;</code> cannot be known at compilation time</p>\n</blockquote>\n\n<p>and</p>\n\n<blockquote>\n  <p>error[E0308]: mismatched types<br>\n  expected trait std::iter::Iterator, found struct <code>std::iter::Chain</code></p>\n</blockquote>\n\n<p>I'm out of my depth here. Rust seems to think I'm trying to implement a dynamically dispatched function, when I'm trying to implement a generic one instead. (And, for some reason, my chained iterator isn't accepted as an iterator \u2013 my guess is that I'm specifying a type instead of a trait, but <code>std::iter::Iterator</code> is a trait, not a type.)</p>\n\n<p>What should my code look like?</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 1, "creation_date": 1561206624, "post_id": 56714991, "comment_id": 99993023, "body": "I don&#39;t think you can do that. What if a type implements both <code>Borrow&lt;S&gt;</code> and <code>Borrow&lt;D&gt;</code>? Your two blanket implementations will be in conflict!"}, {"owner": {"reputation": 1901, "user_id": 225630, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/edb8bd2d383e517e23e87ad10da214f3?s=128&d=identicon&r=PG", "display_name": "davyzhang", "link": "https://stackoverflow.com/users/225630/davyzhang"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1561266185, "post_id": 56714991, "comment_id": 100003103, "body": "Thanks. I think I need to use another solution mentioned in the original thread."}], "owner": {"reputation": 1901, "user_id": 225630, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/edb8bd2d383e517e23e87ad10da214f3?s=128&d=identicon&r=PG", "display_name": "davyzhang", "link": "https://stackoverflow.com/users/225630/davyzhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 81, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1561225139, "creation_date": 1561202044, "last_edit_date": 1561225139, "question_id": 56714991, "link": "https://stackoverflow.com/questions/56714991/implement-one-trait-for-multiple-borrowt-types-causes-conflicting-implementati", "title": "implement one trait for multiple Borrow&lt;T&gt; types causes conflicting implementations", "body": "<pre><code>use std::borrow::Borrow;\n\ntrait Foo {\n    fn bar();\n}\n\nstruct S {}\n\nimpl &lt;B: Borrow&lt;S&gt;&gt; Foo for B {\n    fn bar(){\n        print!(\"bar\");\n    }\n}\n\nstruct D {}\n\nimpl &lt;B: Borrow&lt;D&gt;&gt; Foo for B {\n    fn bar(){\n        print!(\"bar\")\n    }\n}\n\nfn main() {}\n</code></pre>\n\n<p>Code above causes an compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   Compiling playground v0.0.1 (/playground)\nerror[E0119]: conflicting implementations of trait `Foo`:\n  --&gt; src/main.rs:17:5\n   |\n9  |     impl &lt;B: Borrow&lt;S&gt;&gt; Foo for B {\n   |     ----------------------------- first implementation here\n...\n17 |     impl &lt;B: Borrow&lt;D&gt;&gt; Foo for B {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation\n</code></pre>\n\n<p>I asked a question here <a href=\"https://stackoverflow.com/questions/56555910/do-i-have-to-implement-a-trait-twice-when-implementing-it-for-both-reference-and\">Do I have to implement a trait twice when implementing it for both reference and non-reference types?</a></p>\n\n<p>The accepted answer works well when there's only one struct that implements this trait.</p>\n\n<p>How can I do if I want to implement trait <code>Foo</code> for both <code>Borrow&lt;S&gt;</code> and <code>Borrow&lt;D&gt;</code>?</p>\n"}, {"tags": ["module", "rust"], "comments": [{"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "edited": false, "score": 0, "creation_date": 1561200273, "post_id": 56714619, "comment_id": 99991744, "body": "&quot;let&#39;s keep it short&quot; -- you should always try to provide <a href=\"https://stackoverflow.com/help/reprex\">ReprEx</a>"}], "answers": [{"comments": [{"owner": {"reputation": 323, "user_id": 5217010, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/zbVfO.png?s=128&g=1", "display_name": "Xobtah", "link": "https://stackoverflow.com/users/5217010/xobtah"}, "edited": false, "score": 3, "creation_date": 1561203166, "post_id": 56714738, "comment_id": 99992292, "body": "Ok this took me a while to understand that the &quot;mod&quot; call in the beginning of main.rs file kind of &quot;registered&quot; the use of the module for the rest of the files. Thank you very much, this is very clear!"}], "tags": [], "owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "is_accepted": true, "score": 5, "last_activity_date": 1561200746, "last_edit_date": 1561200746, "creation_date": 1561199756, "answer_id": 56714738, "question_id": 56714619, "link": "https://stackoverflow.com/questions/56714619/including-a-file-from-another-that-is-not-main-rs-nor-lib-rs/56714738#56714738", "title": "Including a file from another that is not main.rs nor lib.rs", "body": "<p>Your files could look like as follows:</p>\n\n<p>case.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Clone, Copy, Debug)]\nstruct Player;\n\n#[derive(Clone, Copy, Debug)]\npub enum Case {\n    Empty,\n    Full(Player)\n}\n</code></pre>\n\n<p>board.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::case::Case;\n\n#[derive(Debug)]\npub struct Board {\n    board: [ Case; 9 ]\n}\n\nimpl Board {\n    pub fn new() -&gt; Self {\n        Self { board: [Case::Empty; 9] }\n    }\n}\n</code></pre>\n\n<p>main.rs:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod case;\nmod board;\n\nuse crate::board::Board;\n\nfn main() {\n    println!(\"{:?}\", Board::new());\n}\n</code></pre>\n\n<p>Basically you create a <code>crate</code> (a binary one, because of your <code>main.rs</code>) and that <code>crate</code> can have modules.  A module can be a file, or it can be a folder as well (if it happens to have a <code>mod.rs</code>).  (And for the sake of completeness, it could also be an <em>inline</em> module without direct relation to the file system.)</p>\n\n<p>Your <code>mod</code> statements (the ones which are indicating files and folders, not the ones which you use to create inline modules) should either be placed at the top level of your <code>crate</code> (e.g. in your <code>main.rs</code> or <code>lib.rs</code>) or at the module levels (in your <code>mod.rs</code> files) depending on the desired structure.</p>\n\n<p>For further info on this, please read the The Rust Programming Language book's relevant chapter: <a href=\"https://doc.rust-lang.org/book/ch07-01-packages-and-crates.html\" rel=\"noreferrer\">Packages and Crates</a>.</p>\n"}], "owner": {"reputation": 323, "user_id": 5217010, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/zbVfO.png?s=128&g=1", "display_name": "Xobtah", "link": "https://stackoverflow.com/users/5217010/xobtah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 483, "favorite_count": 0, "accepted_answer_id": 56714738, "answer_count": 1, "score": 6, "last_activity_date": 1561200746, "creation_date": 1561198877, "question_id": 56714619, "link": "https://stackoverflow.com/questions/56714619/including-a-file-from-another-that-is-not-main-rs-nor-lib-rs", "title": "Including a file from another that is not main.rs nor lib.rs", "body": "<p>(I'm a Rust beginner) I have three files : main.rs, board.rs and case.rs.\nI want to include case.rs into board.rs, and board.rs into main.rs, so the board uses the case, and we can access the board in main.</p>\n\n<p>I've successfully added the board into main, but the way I did doesn't seem to work for the second part.</p>\n\n<p>I've tried to encapsulate every file's content into \"mod {}\" but it doesn't change the problem.\nAlso I tried every combinations of \"mod\" and \"use\".</p>\n\n<p>Every file is in the folder src/, and I'd like them not to move from there if possible.</p>\n\n<p>main.rs</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod board;\n\nfn main() {\n    let mut b: Board = Board::new();\n}\n</code></pre>\n\n<p>board.rs</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>mod case;\n\npub struct Board {\n    board: [ Case; 9 ]\n}\n\n// There is also the impl part of course, let's keep it short\n</code></pre>\n\n<p>case.rs</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum Case { Empty, Full(Player) }\n</code></pre>\n\n<p>Using VSCode with the Rust plugin, the \"case\" word on the first line of the board.rs file is underlined red, and it says :</p>\n\n<p>\"src/case.rs\nfile not found for module <code>case</code>\nhelp: name the file either board\\case.rs or board\\case\\mod.rs inside the directory \"src\"\"</p>\n\n<p>Why doesn't it search in the current directory?</p>\n"}, {"tags": ["rust", "language-lawyer", "rust-macros"], "comments": [{"owner": {"reputation": 2362, "user_id": 4478158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b115c0cdf3db0b31377dc2638ebb785a?s=128&d=identicon&r=PG&f=1", "display_name": "Cato Minor", "link": "https://stackoverflow.com/users/4478158/cato-minor"}, "edited": false, "score": 0, "creation_date": 1561192486, "post_id": 56713877, "comment_id": 99990193, "body": "It might help to show some more of your code."}, {"owner": {"reputation": 857, "user_id": 11684473, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f75d9637ee85de92c304840bea0b9b4a?s=128&d=identicon&r=PG&f=1", "display_name": "majkrzak", "link": "https://stackoverflow.com/users/11684473/majkrzak"}, "reply_to_user": {"reputation": 2362, "user_id": 4478158, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/b115c0cdf3db0b31377dc2638ebb785a?s=128&d=identicon&r=PG&f=1", "display_name": "Cato Minor", "link": "https://stackoverflow.com/users/4478158/cato-minor"}, "edited": false, "score": 3, "creation_date": 1561193186, "post_id": 56713877, "comment_id": 99990330, "body": "@CatoMinor how it might help?"}], "answers": [{"comments": [{"owner": {"reputation": 53952, "user_id": 2408867, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/994y9.jpg?s=128&g=1", "display_name": "Lukas Kalbertodt", "link": "https://stackoverflow.com/users/2408867/lukas-kalbertodt"}, "edited": false, "score": 0, "creation_date": 1561195658, "post_id": 56714256, "comment_id": 99990824, "body": "The book mentions: &quot;At the moment, procedural macros need to be in their own crate. <i>Eventually, this restriction may be lifted</i>, but for now, it&#39;s required.&quot; I think, in the future, the compiler might automatically separate the proc-macro code (from the other library code) and compile it in that special way. Hopefully that will be implemented soon. Nice answer!"}, {"owner": {"reputation": 857, "user_id": 11684473, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f75d9637ee85de92c304840bea0b9b4a?s=128&d=identicon&r=PG&f=1", "display_name": "majkrzak", "link": "https://stackoverflow.com/users/11684473/majkrzak"}, "edited": false, "score": 0, "creation_date": 1561199995, "post_id": 56714256, "comment_id": 99991700, "body": "That is why i though. Abut splitng macros in multiple fileds it might be usefulll if you dont like over 9000 lines long files in your project. But it seems to be a genereal rust issue that you preffer to put everything in a siungle fille"}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 857, "user_id": 11684473, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f75d9637ee85de92c304840bea0b9b4a?s=128&d=identicon&r=PG&f=1", "display_name": "majkrzak", "link": "https://stackoverflow.com/users/11684473/majkrzak"}, "edited": false, "score": 3, "creation_date": 1561200749, "post_id": 56714256, "comment_id": 99991839, "body": "@majkrzak: About the 9000-line file, that is not actually necessary. You can write any number of private modules, submodules (in separated files) and private functions in your proc-macro crate. You are just prevented from making them public."}], "tags": [], "owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "is_accepted": true, "score": 22, "last_activity_date": 1561195478, "creation_date": 1561195478, "answer_id": 56714256, "question_id": 56713877, "link": "https://stackoverflow.com/questions/56713877/why-do-proc-macros-have-to-be-defined-in-proc-macro-crate/56714256#56714256", "title": "Why do proc-macros have to be defined in proc-macro crate?", "body": "<p>Procedural macros are fundamentally different from normal dependencies in your code. A normal library is just linked into your code, but a procedural macro is actually a compiler <em>plugin</em>.</p>\n\n<p>Consider the case of cross-compiling: you are working on a Linux machine, but building a WASM project.</p>\n\n<ul>\n<li>A normal crate will be cross-compiled, generate WASM code and linked with the rest of the crates.</li>\n<li>A proc-macro crate must be compiled natively, in this case to Linux code, linked with the current compiler runtime (stable, beta, nightly) and be loaded by the compiler itself when compiling the crates where it is actually used. It will <em>not</em> be linked to the rest of the crates (different architecture!).</li>\n</ul>\n\n<p>And since the compilation flow is different, the crate type must also be different, that is why the <code>proc_macro=true</code> is needed.</p>\n\n<p>About this restriction:</p>\n\n<blockquote>\n  <p><code>proc-macro</code> crate types cannot export any items other than functions tagged with <code>#[proc_macro_derive]</code></p>\n</blockquote>\n\n<p>Well, since the proc-macro crate is loaded by the compiler, not linked to the rest of your crates, any non-proc-macro code you export from this crate would be useless.</p>\n\n<p>Note that the error message is inexact, as you can also export functions tagget with <code>#[proc_macro]</code>.</p>\n\n<p>And about this other restriction:</p>\n\n<blockquote>\n  <p>functions tagged with <code>#[proc_macro_derive]</code> must currently reside in the root of the crate</p>\n</blockquote>\n\n<p>Adding <code>proc_macro</code> or <code>proc_macro_derive</code> items in nested modules is not currently supported, and does not seem to be particularly useful, IMHO.</p>\n"}], "owner": {"reputation": 857, "user_id": 11684473, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f75d9637ee85de92c304840bea0b9b4a?s=128&d=identicon&r=PG&f=1", "display_name": "majkrzak", "link": "https://stackoverflow.com/users/11684473/majkrzak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3380, "favorite_count": 0, "accepted_answer_id": 56714256, "answer_count": 1, "score": 16, "last_activity_date": 1611246819, "creation_date": 1561192121, "last_edit_date": 1611246819, "question_id": 56713877, "link": "https://stackoverflow.com/questions/56713877/why-do-proc-macros-have-to-be-defined-in-proc-macro-crate", "title": "Why do proc-macros have to be defined in proc-macro crate?", "body": "<p>I was trying to create a derive macro for my trait, to simplify some stuff.</p>\n<p>I've encountered some problems:</p>\n<blockquote>\n<p>the <code>#[proc_macro_derive]</code> attribute is only usable with crates of the <code>proc-macro</code> crate type</p>\n</blockquote>\n<p>and, after the small fix <code>proc-macro=true</code>:</p>\n<blockquote>\n<p><code>proc-macro</code> crate types cannot export any items other than functions tagged with <code>#[proc_macro_derive]</code> currently\nfunctions tagged with <code>#[proc_macro_derive]</code> must currently reside in the root of the crate`</p>\n</blockquote>\n<p>What is the reason for this behavior?</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 95, "user_id": 3026559, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/6jr0c.jpg?s=128&g=1", "display_name": "yatsky", "link": "https://stackoverflow.com/users/3026559/yatsky"}, "edited": false, "score": 0, "creation_date": 1561174842, "post_id": 56712215, "comment_id": 99987568, "body": "Thanks Optimistic Peach. I think I understand what you&#39;re saying. So can I understand it this way: &amp;s[0..5] first gets s[0..5] as a <code>str</code>, in this case the &#39;world&#39; string, and then use &amp; to get the pointer/reference to it?"}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 95, "user_id": 3026559, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/6jr0c.jpg?s=128&g=1", "display_name": "yatsky", "link": "https://stackoverflow.com/users/3026559/yatsky"}, "edited": false, "score": 0, "creation_date": 1561235984, "post_id": 56712215, "comment_id": 99999407, "body": "I don&#39;t quite get what you&#39;re trying to say, the <code>String</code> and the <code>&amp;str</code> both refer to the same data, it just happens to be that the <code>&amp;str</code> points to the data directly, instead of going through the <code>String</code>, while the <code>String</code> actually owns the internal <code>str</code>."}, {"owner": {"reputation": 95, "user_id": 3026559, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/6jr0c.jpg?s=128&g=1", "display_name": "yatsky", "link": "https://stackoverflow.com/users/3026559/yatsky"}, "edited": false, "score": 0, "creation_date": 1561332596, "post_id": 56712215, "comment_id": 100016579, "body": "I do understand that <code>String</code> and <code>&amp;str</code> both refer to the same data. I guess what&#39;s hard for me to understand was the part when you said &quot;it just <b>happens</b> to be that the <code>&amp;str</code> points to the data directly&quot; because in the first diagram it shows that <code>&amp;String</code> points to the <code>String</code> but in the second example, <code>s</code> is still <code>String</code>, the only thing that was different was that the example used <code>&amp;s[0..5]</code> and my understanding was that you are treating <code>&amp;s[0..5]</code> as <code>&amp;str</code>, which led to my understanding that <code>s[0..5]</code> returns a <code>str</code> and then we use <code>&amp;</code> to refer to it. Thanks :p"}, {"owner": {"reputation": 95, "user_id": 3026559, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/6jr0c.jpg?s=128&g=1", "display_name": "yatsky", "link": "https://stackoverflow.com/users/3026559/yatsky"}, "edited": false, "score": 0, "creation_date": 1561335124, "post_id": 56712215, "comment_id": 100016904, "body": "Okay I think I&#39;m wrong. I was thinking that there is operation precedence in <code>&amp;s[0..5]</code> but apparently it&#39;s not the case. When <code>s</code> is <code>String</code>, I can&#39;t do <code>s[0..5]</code>. So <code>&amp;s[0..5]</code> must be happen at once and return a <code>&amp;str</code>, and just like you said, it just happens that the <code>&amp;str</code> points to the data directly (probably a design choice)."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 95, "user_id": 3026559, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/6jr0c.jpg?s=128&g=1", "display_name": "yatsky", "link": "https://stackoverflow.com/users/3026559/yatsky"}, "edited": false, "score": 0, "creation_date": 1561390106, "post_id": 56712215, "comment_id": 100038287, "body": "Yes, <code>s[..]</code> amounts to an <code>str</code>, because an <code>str</code> is the actual data, there is no separation between the <code>str</code> and the raw continuous bytes that make up the data, but it must be kept behind a pointer because it doesn&#39;t have a known size and therefore cannot live on the stack, <code>String</code> is a &quot;smart&quot; pointer over <code>str</code> which can reallocate and change size"}], "tags": [], "owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "is_accepted": false, "score": 0, "last_activity_date": 1561171663, "creation_date": 1561171663, "answer_id": 56712215, "question_id": 56712045, "link": "https://stackoverflow.com/questions/56712045/explanation-on-references-and-borrowing-from-the-rust-book/56712215#56712215", "title": "Explanation on References and Borrowing from The Rust book", "body": "<p>Well, what does a <code>&amp;[mut] String</code> guarantee in a safe context?  </p>\n\n<ul>\n<li>That there is a <code>String</code> behind the pointer, which therefore supports your first diagram. </li>\n</ul>\n\n<p>Then, what does a <code>&amp;[mut] str</code> guarantee in a safe context?  </p>\n\n<ul>\n<li>The same idea as a <code>String</code>, that there is a <a href=\"https://doc.rust-lang.org/std/primitive.str.html\" rel=\"nofollow noreferrer\"><code>str</code></a> behind the pointer. But what does that mean? What really is an <code>str</code>?</li>\n</ul>\n\n<p>According to the docs page:  </p>\n\n<blockquote>\n  <p>A &amp;str is made up of two components: a pointer to some bytes, and a length. </p>\n</blockquote>\n\n<p>Meaning, that the <code>&amp;str</code> really is a pointer to some valid utf-8 and a length, so really, a <code>str</code> is the data itself, and <em>not</em> the <code>String</code>. The <code>String</code> can be regarded as a manipulable <code>str</code>. So the <code>&amp;my_string[..]</code> is really a pointer/reference to the data under the <code>String</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561212268, "post_id": 56713780, "comment_id": 99994151, "body": "&quot;Most of the time a string slice is more useful, because you can refer to substrings, which makes it more flexible.&quot; ??? string can do that too, that actually how you create a str from a string."}], "tags": [], "owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "is_accepted": false, "score": 0, "last_activity_date": 1561191581, "last_edit_date": 1561191581, "creation_date": 1561191162, "answer_id": 56713780, "question_id": 56712045, "link": "https://stackoverflow.com/questions/56712045/explanation-on-references-and-borrowing-from-the-rust-book/56713780#56713780", "title": "Explanation on References and Borrowing from The Rust book", "body": "<p>A reference to a string and a string slice are different things, so it is normal that they are represented differently.</p>\n\n<p>Most of the time a string slice is more useful, because you can refer to substrings, which makes it more flexible. Generally a function parameter for reading some string data should be a string slice and not a reference to a string.</p>\n\n<p>Also, <a href=\"https://doc.rust-lang.org/std/string/struct.String.html#deref\" rel=\"nofollow noreferrer\">you can use an actual parameter of type <code>&amp;String</code> for a string slice</a>:</p>\n\n<blockquote>\n  <p>Strings implement Deref, and so inherit all of str's\n  methods. In addition, this means that you can pass a String to a\n  function which takes a &amp;str by using an ampersand (&amp;)</p>\n</blockquote>\n\n<p>One useful thing you can't do with a slice is increasing the size of a string, in that case you need a mutable reference to the string. An example is the <a href=\"https://doc.rust-lang.org/std/io/struct.Stdin.html#method.read_line\" rel=\"nofollow noreferrer\"><code>read_line</code></a> function, which appends string data to <code>buf</code>:</p>\n\n<blockquote>\n  <p><code>pub fn read_line(&amp;self, buf: &amp;mut String) -&gt; Result&lt;usize&gt;</code></p>\n</blockquote>\n"}], "owner": {"reputation": 95, "user_id": 3026559, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/6jr0c.jpg?s=128&g=1", "display_name": "yatsky", "link": "https://stackoverflow.com/users/3026559/yatsky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 102, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1561191581, "creation_date": 1561168683, "question_id": 56712045, "link": "https://stackoverflow.com/questions/56712045/explanation-on-references-and-borrowing-from-the-rust-book", "title": "Explanation on References and Borrowing from The Rust book", "body": "<p>I'm reading the Rust book and References and Borrowing in Chapter 4 seems to be inconsistent to me.\nIn <a href=\"https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\" rel=\"nofollow noreferrer\">Reference and Borrowing</a>, figure 4-5 below shows that <code>s</code> points to <code>s1</code> instead of the actual data on the heap.</p>\n\n<pre><code>fn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&amp;s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &amp;String) -&gt; usize {\n    s.len()\n}\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/uFoOw.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/uFoOw.png\" alt=\"Figure 4-5: A diagram of &amp;String s pointing at String s1\"></a></p>\n\n<p>But in <a href=\"https://doc.rust-lang.org/book/ch04-03-slices.html#string-slices\" rel=\"nofollow noreferrer\">String Slices</a>, the diagram clearly shows that <code>world</code> references the actual data, though only part of it. It also says that the following code \"is similar to taking a reference to the whole String but with the extra [0..5] bit. Rather than a reference to the entire String, it\u2019s a reference to a portion of the String.\"</p>\n\n<pre><code>fn main() {\n    let s = String::from(\"hello world\");\n\n    let hello = &amp;s[0..5];\n    let world = &amp;s[6..11];\n}\n</code></pre>\n\n<p>And here is the diagram (figure4-6) that explains the above code:\n<a href=\"https://i.stack.imgur.com/i1mvh.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/i1mvh.png\" alt=\"String slice referring to part of a String\"></a></p>\n\n<p>Now I guess my question is why isn't <code>world</code> referring to <code>s</code> in the String Slices case? I understand that <code>world</code> can't just point to <code>s</code> because then it would not be able to get the last 5 letters. But these two diagrams seem completely different to me, yet they are all \"references\". Can someone please provide a logical way to understand it?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["testing", "time", "rust", "automated-tests"], "comments": [{"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1561158378, "post_id": 56711076, "comment_id": 99985628, "body": "Why not use <a href=\"https://doc.rust-lang.org/std/env/fn.set_var.html\" rel=\"nofollow noreferrer\"><code>std::env::set_var</code></a> to set the variable at the start of each test? Or maybe even a lazy static?"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561158594, "post_id": 56711076, "comment_id": 99985669, "body": "I don&#39;t understand your problem"}, {"owner": {"reputation": 9958, "user_id": 2188562, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/DMWEc.png?s=128&g=1", "display_name": "Peter Varo", "link": "https://stackoverflow.com/users/2188562/peter-varo"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 1, "creation_date": 1561186970, "post_id": 56711076, "comment_id": 99989140, "body": "@OptimisticPeach I don&#39;t think that would work because the tests run in parallel by default (unless you force them not to) in which case they would override the same environment variable non-deterministically."}, {"owner": {"reputation": 63, "user_id": 8702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb0863ad52c09937a1c8cb6c3c2351e5?s=128&d=identicon&r=PG", "display_name": "Bruce", "link": "https://stackoverflow.com/users/8702/bruce"}, "reply_to_user": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "edited": false, "score": 0, "creation_date": 1561416781, "post_id": 56711076, "comment_id": 100048468, "body": "@OptimisticPeach that approach works so long as nothing else reads a local time before you set <code>TZ</code>. I had assumed (wrongly) that the creation of the <code>Local</code> time zone in chrono would cause that to be read before I could change it. I have actually tested now and it works, though it may be fragile if the order of operations change."}], "answers": [{"comments": [{"owner": {"reputation": 63, "user_id": 8702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb0863ad52c09937a1c8cb6c3c2351e5?s=128&d=identicon&r=PG", "display_name": "Bruce", "link": "https://stackoverflow.com/users/8702/bruce"}, "edited": false, "score": 0, "creation_date": 1561417266, "post_id": 56716246, "comment_id": 100048580, "body": "Indeed, chrono doesn&#39;t directly access the tz, it does it through the old time crate, which probably still relies on libc functions to do the dirty work a little more portably. AFAIK however, libc only loads the time zone once on first use, so it is not likely possible to change it within a single test."}], "tags": [], "owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "is_accepted": false, "score": 2, "last_activity_date": 1561213391, "creation_date": 1561213391, "answer_id": 56716246, "question_id": 56711076, "link": "https://stackoverflow.com/questions/56711076/how-to-run-rust-tests-with-an-explicit-time-zone-using-chrono/56716246#56716246", "title": "How to run Rust tests with an explicit time zone using chrono?", "body": "<p>If all tests should run in the <strong>same</strong> timezone, you can use <a href=\"https://doc.rust-lang.org/std/sync/struct.Once.html\" rel=\"nofollow noreferrer\"><code>std::sync::Once</code></a> to initialize the <code>TZ</code>-environment variable as pointed out in the comments. Technically, since there is no race condition, all tests could initialize the env to that timezone.</p>\n\n<p>If tests need to set their own time-zone - valid only for that one test - it's probably safest to still modify the timezone for the entire process (including <code>chrono</code>, yet somewhere down in <code>libc</code> dragons may access the tz as well). As you pointed out yourself, multiple tests need to synchronize over their shared environment. You can do that with a <code>lazy_static</code>:</p>\n\n<pre><code>#[macro_use]\nextern crate lazy_static;\n\nlazy_static! {\n    static ref TZ_LOCK: std::sync::Mutex&lt;()&gt; = std::sync::Mutex::new(());\n}\n\nfn with_tz&lt;R, F: FnOnce() -&gt; Result&lt;(), R&gt;&gt;(tz: &amp;str, f: F) -&gt; Result&lt;(), R&gt; {\n    let tz_lock = TZ_LOCK.lock();\n    std::env::set_var(\"TZ\", tz);\n    f()\n}\n\n#[test]\nfn foobar() -&gt; Result&lt;(), ()&gt; {\n    with_tz(\"CET\", || {\n        Ok(())\n    })\n}\n</code></pre>\n\n<p>You can get more fancy with this by using a more complex <code>TZ_LOCK</code> where all threads which currently want to run under the same timezone get to run simultaneously.</p>\n"}], "owner": {"reputation": 63, "user_id": 8702, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb0863ad52c09937a1c8cb6c3c2351e5?s=128&d=identicon&r=PG", "display_name": "Bruce", "link": "https://stackoverflow.com/users/8702/bruce"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 242, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1596050712, "creation_date": 1561156008, "last_edit_date": 1596050612, "question_id": 56711076, "link": "https://stackoverflow.com/questions/56711076/how-to-run-rust-tests-with-an-explicit-time-zone-using-chrono", "title": "How to run Rust tests with an explicit time zone using chrono?", "body": "<p>I am building some tests that do timestamp conversions in Rust using the chrono crate. I need to make sure they take into account the local time zone but the tests will be run in multiple time zones and so will fail for most testers. How can I force Rust or chrono within the code to use a specific time zone when running tests?</p>\n<p>I know about setting <code>env TZ=CST</code> or similar. Since I cannot control that part of the execution environment for all those running <code>cargo test</code>, I don't think this works for us.</p>\n"}, {"tags": ["rust", "game-development"], "comments": [{"owner": {"reputation": 1163, "user_id": 661509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253665016d569de90f26c0cbe89268f7?s=128&d=identicon&r=PG", "display_name": "fintelia", "link": "https://stackoverflow.com/users/661509/fintelia"}, "edited": false, "score": 0, "creation_date": 1561225649, "post_id": 56710423, "comment_id": 99997219, "body": "If I had to guess, the point you pass gets used as the coordinate system for drawing the other objects (basically the x,y of the point is added to the x,y values of everything else). Have you experimented at all?"}, {"owner": {"reputation": 369, "user_id": 5915221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f347d249d3ab49b1fb82c5479f89f52f?s=128&d=identicon&r=PG&f=1", "display_name": "ducaale", "link": "https://stackoverflow.com/users/5915221/ducaale"}, "reply_to_user": {"reputation": 1163, "user_id": 661509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253665016d569de90f26c0cbe89268f7?s=128&d=identicon&r=PG", "display_name": "fintelia", "link": "https://stackoverflow.com/users/661509/fintelia"}, "edited": false, "score": 0, "creation_date": 1561273617, "post_id": 56710423, "comment_id": 100004127, "body": "Yes i just did and it seems mesh xy coordinates is useful for things like rectangle centering"}, {"owner": {"reputation": 1163, "user_id": 661509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253665016d569de90f26c0cbe89268f7?s=128&d=identicon&r=PG", "display_name": "fintelia", "link": "https://stackoverflow.com/users/661509/fintelia"}, "edited": false, "score": 0, "creation_date": 1561311437, "post_id": 56710423, "comment_id": 100012570, "body": "If you&#39;ve found the answer to your question, you can actually post it in the answer field below so other people can benefit"}, {"owner": {"reputation": 369, "user_id": 5915221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f347d249d3ab49b1fb82c5479f89f52f?s=128&d=identicon&r=PG&f=1", "display_name": "ducaale", "link": "https://stackoverflow.com/users/5915221/ducaale"}, "reply_to_user": {"reputation": 1163, "user_id": 661509, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253665016d569de90f26c0cbe89268f7?s=128&d=identicon&r=PG", "display_name": "fintelia", "link": "https://stackoverflow.com/users/661509/fintelia"}, "edited": false, "score": 0, "creation_date": 1563804256, "post_id": 56710423, "comment_id": 100810773, "body": "<a href=\"https://github.com/ggez/ggez/issues/659#issuecomment-513786990\" rel=\"nofollow noreferrer\">github.com/ggez/ggez/issues/659#issuecomment-513786990</a>"}], "answers": [{"tags": [], "owner": {"reputation": 369, "user_id": 5915221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f347d249d3ab49b1fb82c5479f89f52f?s=128&d=identicon&r=PG&f=1", "display_name": "ducaale", "link": "https://stackoverflow.com/users/5915221/ducaale"}, "is_accepted": true, "score": 0, "last_activity_date": 1563910819, "last_edit_date": 1563910819, "creation_date": 1563910102, "answer_id": 57170966, "question_id": 56710423, "link": "https://stackoverflow.com/questions/56710423/how-do-mesh-coordinates-and-draw-coordinates-relate-to-each-other-in-ggez-librar/57170966#57170966", "title": "How do mesh coordinates and draw coordinates relate to each other in ggez library?", "body": "<p>From <a href=\"https://github.com/ggez/ggez/issues/659#issuecomment-513786990\" rel=\"nofollow noreferrer\">the author of the ggez library</a>:</p>\n\n<blockquote>\n  <p>The difference is whether it's in the mesh's coordinate space or in the screen's coordinate space. Sorry for the tautological answer, let me see if I can do better...</p>\n  \n  <p>When you create the Mesh, imagine that you're drawing the points on a piece of transparent graph paper. That's the mesh coordinate system. Then when you call <code>graphics::draw()</code> you put that over another piece of graph paper, and the coordinates you pass to <code>draw()</code> is how much you offset the two by. But it's not just an offset, <code>draw()</code> takes options that can rotate, scale etc. the mesh's coordinate system. If you just create your mesh so that it's centered at <code>50,50</code> and then rotate it, it will by default rotate around its <code>0,0</code> point and not the center of the mesh. If you create your mesh so it's centered at its <code>0,0</code> coordinate, by default rotating it or scaling it will start from its own center. The <code>DrawParam::offset()</code> parameter can control where the \"center\" point is, but it's still kind of a pain.</p>\n  \n  <p>So you can achieve exactly the same thing with both methods, but I'd say that <code>draw()</code> is better for position manipulation.</p>\n</blockquote>\n"}], "owner": {"reputation": 369, "user_id": 5915221, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f347d249d3ab49b1fb82c5479f89f52f?s=128&d=identicon&r=PG&f=1", "display_name": "ducaale", "link": "https://stackoverflow.com/users/5915221/ducaale"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 0, "accepted_answer_id": 57170966, "answer_count": 1, "score": 1, "last_activity_date": 1563910819, "creation_date": 1561150866, "last_edit_date": 1563910798, "question_id": 56710423, "link": "https://stackoverflow.com/questions/56710423/how-do-mesh-coordinates-and-draw-coordinates-relate-to-each-other-in-ggez-librar", "title": "How do mesh coordinates and draw coordinates relate to each other in ggez library?", "body": "<p>When creating a line, a list of points is passed, but <code>graphics::draw</code> expects X/Y coordinates:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let (origin, dest) = (Point::new(0.0, 0.0), Point::new(0.0, 0.0));\nlet line = graphics::Mesh::new_line(ctx, &amp;[origin, dest], 2.0, graphics::WHITE)?;\ngraphics::draw(ctx, &amp;line, (Point2::new(0.0, 0.0),))?;\n</code></pre>\n\n<p>For rectangles, <code>x</code>, <code>y</code>, <code>width</code> and <code>height</code> are passed when creating a rectangle but <code>graphics::draw</code> expects X/Y coordinates:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let rectangle = graphics::Mesh::new_rectangle(\n    ctx,\n    graphics::DrawMode::fill(),\n    [0.0, 0.0, 30.0, 30.0].into(),\n    graphics::WHITE,\n)?;\ngraphics::draw(ctx, &amp;rectangle, (Point::new(0.0, 0.0),))?;\n</code></pre>\n\n<p>Why are both coordinates needed?</p>\n"}, {"tags": ["rust", "reference-counting"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 4, "last_activity_date": 1561155096, "last_edit_date": 1561155096, "creation_date": 1561147968, "answer_id": 56709872, "question_id": 56709610, "link": "https://stackoverflow.com/questions/56709610/do-i-need-to-use-some-kind-of-interior-mutability-to-create-a-cycle-between-two/56709872#56709872", "title": "Do I need to use some kind of interior mutability to create a cycle between two Arcs?", "body": "<blockquote>\n  <p>do I need to use a <code>Mutex</code> or <code>RwLock</code></p>\n</blockquote>\n\n<p>Yes. </p>\n\n<p>There's no practical way to have the type be temporarily mutable while you construct it and then \"jettisoning\" the ability to be mutated for some period of time (until destruction when it needs to become mutable again)</p>\n\n<blockquote>\n  <p>Will there be a negative performance impact</p>\n</blockquote>\n\n<p>Yes. </p>\n\n<p>Will the impact be meaningful or important? That depends on a whole host of factors that are not answerable outside of the scope of your entire program and a specific set of usages.</p>\n\n<p>The impact will probably be higher if you use a <code>Mutex</code> instead of a <code>RwLock</code> as a <code>Mutex</code> only allows one thread access at a time. A <code>RwLock</code> will allow multiple concurrent threads.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/52131870/155423\">Is there an alternative or way to have Rc&lt;RefCell&lt;X&gt;&gt; that restricts mutability of X?</a></li>\n</ul>\n\n<hr>\n\n<p>Everything here is also true for single-threaded contexts, replacing <code>Arc</code> with <code>Rc</code> and <code>RwLock</code> with <code>RefCell</code>.</p>\n"}], "owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 1, "accepted_answer_id": 56709872, "answer_count": 1, "score": 1, "last_activity_date": 1561155096, "creation_date": 1561146512, "last_edit_date": 1561147659, "question_id": 56709610, "link": "https://stackoverflow.com/questions/56709610/do-i-need-to-use-some-kind-of-interior-mutability-to-create-a-cycle-between-two", "title": "Do I need to use some kind of interior mutability to create a cycle between two Arcs?", "body": "<p>I have a tree and I want each node of the tree to have a pointer to its parent.</p>\n\n<pre><code>struct DataDeclaration {\n    parent: Option&lt;Arc&lt;DataDeclaration&gt;&gt;,\n    children: Option&lt;Vec&lt;Weak&lt;DataDeclaration&gt;&gt;&gt;,\n    properties: HashMap&lt;Identifier, DataDeclarationProperty&gt;,\n}\n</code></pre>\n\n<p>This creates a cycle, so I use <code>Weak</code> to make sure the memory doesn\u2019t live indefinitely. This tree will be immutable for the entire length of my application except, of course, when the tree is constructed.</p>\n\n<p>In order to create this tree, do I need to use a <code>Mutex</code> or <code>RwLock</code> from the standard library or <a href=\"https://crates.io/crates/parking_lot\" rel=\"nofollow noreferrer\"><code>parking_lot</code></a>? Will there be a negative performance impact if I only use the lock for reads?</p>\n"}, {"tags": ["rust", "serde", "serde-json"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "edited": false, "score": 1, "creation_date": 1561148904, "post_id": 56707982, "comment_id": 99983334, "body": "@SvenMarnach wow, usually I don&#39;t miss key things like that. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1561149161, "post_id": 56707982, "comment_id": 99983406, "body": "The <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9f59c0bcd780fff3b5b4fa161eb348f0\" rel=\"nofollow noreferrer\">duplicate applied to your question</a>."}], "owner": {"reputation": 21, "user_id": 11682446, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e187931789a4788f20bfcd6d27cbfa17?s=128&d=identicon&r=PG&f=1", "display_name": "ced73", "link": "https://stackoverflow.com/users/11682446/ced73"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "closed_date": 1561149136, "answer_count": 0, "score": 2, "last_activity_date": 1561148929, "creation_date": 1561137841, "last_edit_date": 1561148929, "question_id": 56707982, "link": "https://stackoverflow.com/questions/56707982/how-do-i-deserialize-a-struct-through-its-own-new-constructor", "closed_reason": "Duplicate", "title": "How do I deserialize a struct through its own `new` constructor?", "body": "<p>I wish to deserialize the below struct, but using the <code>new</code> constructor to validate the deserialized fields:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Deserialize)]\npub struct Timestamp {\n    values: Vec&lt;u32&gt;,\n}\n\nimpl Timestamp {\n    pub fn new(values: Vec&lt;u32&gt;) -&gt; Timestamp {\n        // some quality check\n        Timestamp { values: values }\n    }\n}\n</code></pre>\n\n<p>Is there an easy way to do that? I looked into writing a custom <code>Deserializer</code>, but I hoped that there would be an easier and less verbose way to do that.</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561128196, "post_id": 56705334, "comment_id": 99974648, "body": "<a href=\"https://stackoverflow.com/q/30330519/155423\">Compile-time generic type size check</a>; <a href=\"https://stackoverflow.com/q/51131229/155423\">How to use associated constants to define the length of an array?</a>; <a href=\"https://stackoverflow.com/q/49468122/155423\">What expressions are allowed as the array length N in &#91;_; N&#93;?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 4182, "user_id": 2992101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7363e9ce46406af3326492e2f6cf40ca?s=128&d=identicon&r=PG", "display_name": "michalsrb", "link": "https://stackoverflow.com/users/2992101/michalsrb"}, "is_accepted": true, "score": 7, "last_activity_date": 1561128125, "last_edit_date": 1561128125, "creation_date": 1561127872, "answer_id": 56705543, "question_id": 56705334, "link": "https://stackoverflow.com/questions/56705334/the-size-for-values-of-type-t-cannot-be-known-at-compilation-time-when-using-m/56705543#56705543", "title": "The size for values of type `T` cannot be known at compilation time when using mem::size_of::&lt;T&gt; as an array length", "body": "<p>It seems to be bug #43408: <a href=\"https://github.com/rust-lang/rust/issues/43408\" rel=\"noreferrer\">Array lengths don't support generic parameters</a>.</p>\n"}], "owner": {"reputation": 655, "user_id": 7484210, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ghd9L.jpg?s=128&g=1", "display_name": "0x400921FB54442D18", "link": "https://stackoverflow.com/users/7484210/0x400921fb54442d18"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 954, "favorite_count": 0, "accepted_answer_id": 56705543, "answer_count": 1, "score": 6, "last_activity_date": 1561128125, "creation_date": 1561127163, "last_edit_date": 1561127719, "question_id": 56705334, "link": "https://stackoverflow.com/questions/56705334/the-size-for-values-of-type-t-cannot-be-known-at-compilation-time-when-using-m", "title": "The size for values of type `T` cannot be known at compilation time when using mem::size_of::&lt;T&gt; as an array length", "body": "<p>Consider the following function:</p>\n\n<pre><code>fn make_array&lt;T&gt;()\nwhere\n    T: Sized,\n{\n    let bytes = [0u8; std::mem::size_of::&lt;T&gt;()];\n}\n</code></pre>\n\n<p>For whatever reason it fails to compile </p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the size for values of type `T` cannot be known at compilation time\n --&gt; src/lib.rs:5:23\n  |\n5 |     let bytes = [0u8; std::mem::size_of::&lt;T&gt;()];\n  |                       ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n  |\n  = help: the trait `std::marker::Sized` is not implemented for `T`\n  = note: to learn more, visit &lt;https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait&gt;\n  = help: consider adding a `where T: std::marker::Sized` bound\n  = note: required by `std::mem::size_of`\n</code></pre>\n\n<p>This is despite the fact that there is a <code>Sized</code> trait bound for the generic parameter <code>T</code>. It doesn't make any sense to me.</p>\n\n<p>Why is this happening and how do I work around it?</p>\n"}, {"tags": ["rust", "operators", "traits", "assignment-operator"], "answers": [{"comments": [{"owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561125973, "post_id": 56704601, "comment_id": 99973365, "body": "So\u2026 In Rust, a <code>mut</code>able <code>u64</code> actually changes when you do <code>+=</code> on it? A mutable binding is a binding to a box that changes when you change its value, instead of the binding changing?"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "reply_to_user": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "edited": false, "score": 0, "creation_date": 1561126448, "post_id": 56704601, "comment_id": 99973682, "body": "Speaking of boxes here is a bit misguided. <code>std::box::Box</code> exists, but it&#39;s unrelated and not applicable here. But yes, as <code>add_assign</code> receives <code>self</code> by mutable reference, the implementation is indeed expected to modify the referenced value in some way, and the binding does not change. See also: <a href=\"https://stackoverflow.com/q/28587698/1233251\">stackoverflow.com/q/28587698/1233251</a>"}], "tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 3, "last_activity_date": 1561124383, "creation_date": 1561124383, "answer_id": 56704601, "question_id": 56703141, "link": "https://stackoverflow.com/questions/56703141/should-i-implement-addassign-on-a-newtype/56704601#56704601", "title": "Should I implement AddAssign on a newtype?", "body": "<p>Implementing <a href=\"https://doc.rust-lang.org/std/ops/trait.AddAssign.html\" rel=\"nofollow noreferrer\"><code>AddAssign</code></a> is indeed required for the <code>+=</code> operator to work.</p>\n\n<p>The decision of whether to implement this trait will depend greatly on the actual type and kind of semantics that you are aiming for. This applies to any type of your own making, including newtypes. The most important prior is <em>predictability</em>: an implementation should behave as expected from the same mathematical operation. In this case, considering that the addition through <code>Add</code> is already well defined for that type, <em>and</em> nothing stops you from implementing the equivalent operation in-place, then adding an <code>impl</code> of <code>AddAssign</code> like so is the most predictable thing to do.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl AddAssign for NanoSecond {\n    fn add_assign(&amp;mut self, other: Self) {\n        self.0 += other.0\n    }\n}\n</code></pre>\n\n<p>One may also choose to provide additional implementations for reference types as the second operand (e.g. <code>Add&lt;&amp;'a Self&gt;</code> and <code>AddAssign&lt;&amp;'a Self&gt;</code>).</p>\n\n<p>Note that Clippy has lints which check whether the implementation of the arithmetic operation is sound (<a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_arithmetic_impl\" rel=\"nofollow noreferrer\"><code>suspicious_arithmetic_impl</code></a> and <a href=\"https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_op_assign_impl\" rel=\"nofollow noreferrer\"><code>suspicious_op_assign_impl</code></a>). As part of being predictable, the trait should behave pretty much like the respective mathematical operation, regardless of whether <code>+</code> or <code>+=</code> was used. To the best of my knowledge though, there is currently no lint or API guideline suggesting to implement <code>-Assign</code> traits alongside the respective operation.</p>\n"}], "owner": {"reputation": 5189, "user_id": 5223757, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/FdOvO.png?s=128&g=1", "display_name": "wizzwizz4", "link": "https://stackoverflow.com/users/5223757/wizzwizz4"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 56704601, "answer_count": 1, "score": 1, "last_activity_date": 1561124383, "creation_date": 1561118752, "last_edit_date": 1561122074, "question_id": 56703141, "link": "https://stackoverflow.com/questions/56703141/should-i-implement-addassign-on-a-newtype", "title": "Should I implement AddAssign on a newtype?", "body": "<p>I've got a newtype:</p>\n\n<pre><code>struct NanoSecond(u64);\n</code></pre>\n\n<p>I want to implement addition for this. (I'm actually using <code>derive_more</code>, but here's an MCVE.)</p>\n\n<pre><code>impl Add for NanoSecond {\n    fn add(self, other: Self) -&gt; Self {\n        self.0 + other.0\n    }\n}\n</code></pre>\n\n<p>But should I implement <code>AddAssign</code>? Is it required for this to work?</p>\n\n<pre><code>let mut x: NanoSecond = 0.to();\nlet y: NanoSecond = 5.to();\nx += y;\n</code></pre>\n\n<p>Will implementing it cause unexpected effects?</p>\n"}, {"tags": ["rust", "rust-macros"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1561125152, "post_id": 56701611, "comment_id": 99972907, "body": "I&#39;m not sure I understand; it looks like you&#39;re generating code to check (at runtime) that some (compile-time) expression matches a certain pattern. Can you provide an example of what code you want the <code>match_pattern!</code> macro to expand to, in the recursive case?"}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1561126977, "post_id": 56701611, "comment_id": 99973980, "body": "@trentcl Oh. I had that code in the playground but looks like it was lost during cleanup. I&#39;ll add it later when  I&#39;m back at a PC. Basically It should expand to a nest of <code>if let</code>s."}, {"owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1561150759, "post_id": 56701611, "comment_id": 99983963, "body": "@trentcl I have added the expected expansion. Hopefully it provides clarity although it&#39;s a bit verbose..."}], "answers": [{"tags": [], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "is_accepted": true, "score": 2, "last_activity_date": 1561405686, "creation_date": 1561405686, "answer_id": 56743050, "question_id": 56701611, "link": "https://stackoverflow.com/questions/56701611/how-to-expand-subpatterns-in-recursive-macro-rules/56743050#56743050", "title": "How to expand subpatterns in recursive macro_rules?", "body": "<p>Indeed, it seems the problem is that the macro matches a comma separated list of patterns. Thus, in the input <code>[Str(\"define\"), [Str(name), _, _], body]</code> the macro interprets the inner <code>[...]</code> as a slice pattern that cannot match an expression of type <code>TaggedValue</code>.</p>\n\n<p>The solution is to expand the input as token trees. However, this requires a small trick because a single token tree cannot represent every pattern. In particular, a pattern of the form <code>Variant(value)</code> consists of two token trees: <code>Variant</code> and <code>(value)</code>. These two token can be combined back into a pattern before invoking a terminal (non-recursing) rule of the macro.</p>\n\n<p>For example, the rule to match such a pattern in a single-element template starts like this:</p>\n\n<pre><code>($exp:expr, $action:block, [$single_variant:tt $single_value:tt]) =&gt;\n</code></pre>\n\n<p>These tokens are passed together to another invocation of the macro with</p>\n\n<pre><code>match_template!(&amp;seq[0], $action, $single_variant $single_value)\n</code></pre>\n\n<p>where they are matched as a single pattern by the terminal rule</p>\n\n<pre><code>($exp:expr, $action:block, $atom:pat) =&gt;\n</code></pre>\n\n<p>The final macro definition contains two additional rules to account for <code>Variant(value)</code> patterns:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>macro_rules! match_template {\n    ($exp:expr, $action:block, [$single:tt]) =&gt; {\n        if let Seq(seq) = $exp {\n            match_template!(&amp;seq[0], $action, $single)\n        } else {\n            panic!(\"mismatch\")\n        }\n    };\n\n    ($exp:expr, $action:block, [$single_variant:tt $single_value:tt]) =&gt; {\n        if let Seq(seq) = $exp {\n            match_template!(&amp;seq[0], $action, $single_variant $single_value)\n        } else {\n            panic!(\"mismatch\")\n        }\n    };\n\n    ($exp:expr, $action:block, [$first:tt, $($rest:tt)*]) =&gt; {\n        if let Seq(seq) = $exp {\n            match_template!(&amp;seq[0], {\n                match_template!(Seq(seq[1..].into()), $action, [$($rest)*])\n            }, $first)\n        } else {\n            panic!(\"mismatch\")\n        }\n    };\n\n    ($exp:expr, $action:block, [$first_variant:tt $first_value:tt, $($rest:tt)*]) =&gt; {\n        if let Seq(seq) = $exp {\n            match_template!(&amp;seq[0], {\n                match_template!(Seq(seq[1..].into()), $action, [$($rest)*])\n            }, $first_variant $first_value)\n        } else {\n            panic!(\"mismatch\")\n        }\n    };\n\n    ($exp:expr, $action:block, $atom:pat) =&gt; {\n        if let $atom = $exp $action else {panic!(\"mismatch\")}\n    };\n}\n</code></pre>\n\n<p>Here is a link to the complete example: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bc9d7a143982a6247634feba7ac0a949\" rel=\"nofollow noreferrer\">playground</a>.</p>\n"}], "owner": {"reputation": 19105, "user_id": 3005167, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/t0bMQ.png?s=128&g=1", "display_name": "kazemakase", "link": "https://stackoverflow.com/users/3005167/kazemakase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1056, "favorite_count": 0, "accepted_answer_id": 56743050, "answer_count": 1, "score": 3, "last_activity_date": 1561406270, "creation_date": 1561112834, "last_edit_date": 1561406270, "question_id": 56701611, "link": "https://stackoverflow.com/questions/56701611/how-to-expand-subpatterns-in-recursive-macro-rules", "title": "How to expand subpatterns in recursive macro_rules?", "body": "<p>I am writing a macro to conveniently match nested structure in an <code>enum</code> typed variable to a compile-time template. The idea is to leverage Rust's pattern matching to enforce specific values in certain locations of the structure, or bind variables to other interesting locations. The basic idea works in my implementation but it fails for nested patterns. I believe the problem is that once a part of the macro input has been parsed as <code>$&lt;name&gt;:pat</code> it cannot later be parsed as a <code>$&lt;name&gt;:tt</code>.</p>\n\n<p>To avoid ambiguous use of the term <em>pattern</em> I'll use the following notation in accordance with the Rust documentation:</p>\n\n<ul>\n<li>A <em>pattern</em> is what appears in <code>match</code> arms, in <code>if let</code> statements, and is matched in macros by the fragment specifier <code>$&lt;name&gt;:pat</code>.</li>\n<li>A <em>matcher</em> is the left-hand side of a syntax rule in a macro.</li>\n<li>A <em>template</em> is the part of the input to my macro that determines how the macro will expand.</li>\n</ul>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fbec4449e34d50fb102d028c06d0c6ce\" rel=\"nofollow noreferrer\">Playground MCVE</a></p>\n\n<p>This is a simplified version of the <code>enum</code> type I am using:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[derive(Debug, Clone)]\nenum TaggedValue {\n    Str(&amp;'static str),\n    Seq(Vec&lt;TaggedValue&gt;),\n}\n</code></pre>\n\n<p>For example, the following expression</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use TaggedValue::*;\nlet expression = Seq(vec![\n    Str(\"define\"),\n    Seq(vec![Str(\"mul\"), Str(\"x\"), Str(\"y\")]),\n    Seq(vec![Str(\"*\"), Str(\"x\"), Str(\"y\")]),\n]);\n</code></pre>\n\n<p>could be matched by this macro invocation:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match_template!(\n    &amp;expression,                               // dynamic input structure\n    { println!(\"fn {}: {:?}\", name, body) },   // action to take after successful match\n    [Str(\"define\"), [Str(name), _, _], body]   // template to match against\n);\n</code></pre>\n\n<p>Here, on a successful match the identifiers <code>name</code> and <code>body</code> are bound to the corresponding subelements in <code>expression</code> and made available as variables in the block passed as second argument to the macro.</p>\n\n<p>This is my effort to write said macro:</p>\n\n<pre><code>macro_rules! match_template {\n    // match sequence template with one element\n    ($exp:expr, $action:block, [$single:pat]) =&gt; {\n        if let Seq(seq) = $exp {\n            match_template!(&amp;seq[0], $action, $single)\n        } else {\n            panic!(\"mismatch\")\n        }\n    };\n\n    // match sequence template with more than one element\n    ($exp:expr, $action:block, [$first:pat, $($rest:tt)*]) =&gt; {\n        if let Seq(seq) = $exp {\n            // match first pattern in sequence against first element of $expr\n            match_template!(&amp;seq[0], {\n                // then match remaining patterns against remaining elements of $expr\n                match_template!(Seq(seq[1..].into()), $action, [$($rest)*])\n            }, $first)\n        } else {\n            panic!(\"mismatch\")\n        }\n    };\n\n    // match a non sequence template and perform $action on success\n    ($exp:expr, $action:block, $atom:pat) =&gt; {\n        if let $atom = $exp $action else {panic!(\"mismatch\")}\n    };\n}\n</code></pre>\n\n<p>It works as expected for non-nested templates, and for nested templates I can manually nest macro invocations. However, directly specifying a nested template in a single macro invocation fails with a compilation error.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>match_template!(\n    &amp;expression,\n    {\n        match_template!(\n            signature,\n            { println!(\"fn {}: {:?}\", name, body) },\n            [Str(name), _, _]\n        )\n    },\n    [Str(\"define\"), signature, body]\n);\n// prints:\n//   fn mul: Seq([Str(\"*\"), Str(\"x\"), Str(\"y\")])\n\nmatch_template!(\n    &amp;expression,\n    { println!(\"fn {}: {:?}\", name, body) },\n    [Str(\"define\"), [Str(name), _, _], body]\n);\n// error[E0529]: expected an array or slice, found `TaggedValue`\n//   --&gt; src/main.rs:66:25\n//    |\n// 66 |         [Str(\"define\"), [Str(name), _, _], body]\n//    |                         ^^^^^^^^^^^^^^^^^ pattern cannot match with input type `TaggedValue`\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=fbec4449e34d50fb102d028c06d0c6ce\" rel=\"nofollow noreferrer\">Playground MCVE</a></p>\n\n<p>I suspect the error is saying that <code>[Str(name), _, _]</code> is matched as a single slice pattern which is accepted by the third macro rule where it causes the type mismatch. However, I want it to be a token tree so that the second rule can decompose it into a succession of patterns.</p>\n\n<p>I tried to change the second rule to <code>($exp:expr, $action:block, [$first:tt, $($rest:tt)*]) =&gt;</code> but this only causes the error to occur at the outer level.</p>\n\n<p>What modifications to the macro are required so that it can recursively expand such templates?</p>\n\n<p>(I don't think token munching as in <a href=\"https://stackoverflow.com/q/47467568/3005167\">Recursive macro to parse match arms in Rust</a> works here because I explicitly want to bind identifiers in patterns.)</p>\n\n<p>This is what I expect the macro invocation to expand to (Ignoring the mismatch branches for brevity. Additionally, I simulated macro hygiene by postfixing the <code>seq</code> variable):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// macro invocation\nmatch_template!(\n    &amp;expression,\n    { println!(\"fn {}: {:?}\", name, body) },\n    [Str(\"define\"), [Str(name), _, _], body]\n);\n\n// expansion\nif let Seq(seq_1) = &amp;expression {\n    if let Str(\"define\") = &amp;seq_1[0] {\n        if let Seq(seq_1a) = Seq(seq_1[1..].into()) {\n            if let Seq(seq_2) = &amp;seq_1a[0] {\n                if let Str(name) = &amp;seq_2[0] {\n                    if let Seq(seq_2a) = Seq(seq_2[1..].into()) {\n                        if let _ = &amp;seq_2a[0] {\n                            if let Seq(seq_2b) = Seq(seq_2a[1..].into()) {\n                                if let _ = &amp;seq_2b[0] {\n                                    if let Seq(seq_1b) = Seq(seq_1a[1..].into()) {\n                                        if let body = &amp;seq_1b[0] {\n                                            { println!(\"fn {}: {:?}\", name, body) }\n                                        }\n                                    }\n                                }\n                            }\n                        } \n                    } \n                } \n            } \n        } \n    } \n} \n</code></pre>\n\n<p>The full expansion is a bit verbose but this slightly shortened version captures the essence of what should happen:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>if let Seq(seq) = &amp;expression {\n    if let Str(\"define\") = &amp;seq[0] {\n        if let Seq(signature) = &amp;seq[1] {\n            if let Str(name) = &amp;signature[0] {\n                if let body = &amp;seq[2] {\n                    println!(\"fn {}: {:?}\", name, body)\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>Finally, here is <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bacda91402cdcc65428f9379319dd9dc\" rel=\"nofollow noreferrer\">another playground link</a> that shows the individual steps of recursive expansion. It's very dense.</p>\n"}, {"tags": ["rust", "borrow-checker"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1561110907, "post_id": 56700889, "comment_id": 99965806, "body": "<a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.rotate_right\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/vec/struct.Vec.html#method.rotate_righ&zwnj;&#8203;t</a>"}, {"owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "edited": false, "score": 0, "creation_date": 1561110960, "post_id": 56700889, "comment_id": 99965836, "body": "Very relevant: <a href=\"https://stackoverflow.com/q/36244762/1233251\">stackoverflow.com/q/36244762/1233251</a> Also, that algorithm would not work as intended even without the intervention of the borrow checker."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 2, "creation_date": 1561130043, "post_id": 56700889, "comment_id": 99975601, "body": "what is the behavior you expect when <code>k</code> is not the middle ?"}, {"owner": {"reputation": 21, "user_id": 5685797, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2c0c73acaa241098192f85eddfb46cc?s=128&d=identicon&r=PG&f=1", "display_name": "Zij.Fang", "link": "https://stackoverflow.com/users/5685797/zij-fang"}, "edited": false, "score": 0, "creation_date": 1561169753, "post_id": 56700889, "comment_id": 99987178, "body": "Thanks all, i am new in Rust and can&#39;t understand well in ownership, you guys help me a lot!"}], "answers": [{"tags": [], "owner": {"reputation": 20746, "user_id": 1233251, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/cI9GF.png?s=128&g=1", "display_name": "E_net4 says don&#39;t copy that", "link": "https://stackoverflow.com/users/1233251/e-net4-says-dont-copy-that"}, "is_accepted": true, "score": 2, "last_activity_date": 1561139583, "last_edit_date": 1561139583, "creation_date": 1561125151, "answer_id": 56704802, "question_id": 56700889, "link": "https://stackoverflow.com/questions/56700889/how-do-i-switch-two-sections-of-a-vector-without-conflicting-borrows/56704802#56704802", "title": "How do I switch two sections of a vector without conflicting borrows?", "body": "<p>Use either <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.rotate_left\" rel=\"nofollow noreferrer\"><code>rotate_left</code></a> or <a href=\"https://doc.rust-lang.org/std/vec/struct.Vec.html#method.rotate_right\" rel=\"nofollow noreferrer\"><code>rotate_right</code></a>, where <code>mid</code> is the middle of the vector. This will effectively perform the intended switch.</p>\n\n<pre><code>let x = vec![1, 2, 3, 4, 5, 6];\nlet mid = x.len() / 2;\n</code></pre>\n\n<p>With <code>rotate_left</code>:</p>\n\n<pre><code>x.rotate_left(mid);\nassert_eq!(&amp;x, &amp;[4, 5, 6, 1, 2, 3]);\n</code></pre>\n\n<p>With <code>rotate_right</code>:</p>\n\n<pre><code>x.rotate_right(mid);\nassert_eq!(&amp;x, &amp;[4, 5, 6, 1, 2, 3]);\n</code></pre>\n\n<p>The same methods are available for plain mutable slices. In the event that the two partitions to swap have the same size but are not contiguous, one can create two iterators of mutable elements and swap them, either using <a href=\"https://doc.rust-lang.org/stable/std/primitive.slice.html#method.swap_with_slice\" rel=\"nofollow noreferrer\"><code>swap_with_slice</code></a>...</p>\n\n<pre><code>let (left, right) = x.split_at_mut(mid);\nleft.swap_with_slice(right);\n</code></pre>\n\n<p>... or by swapping each element one by one.</p>\n\n<pre><code>let (left, right) = x.split_at_mut(mid);\nfor (l, r) in Iterator::zip(left.iter_mut(), right.iter_mut()) {\n    std::mem::swap(l, r);\n}\nassert_eq!(&amp;x, &amp;[4, 5, 6, 1, 2, 3]);\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/36244762/1233251\">How to operate on 2 mutable slices of a Rust array?</a></li>\n</ul>\n"}], "owner": {"reputation": 21, "user_id": 5685797, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f2c0c73acaa241098192f85eddfb46cc?s=128&d=identicon&r=PG&f=1", "display_name": "Zij.Fang", "link": "https://stackoverflow.com/users/5685797/zij-fang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 56704802, "answer_count": 1, "score": -1, "last_activity_date": 1561139583, "creation_date": 1561110326, "last_edit_date": 1561125145, "question_id": 56700889, "link": "https://stackoverflow.com/questions/56700889/how-do-i-switch-two-sections-of-a-vector-without-conflicting-borrows", "title": "How do I switch two sections of a vector without conflicting borrows?", "body": "<p>I'm going to switch elements in a Vec, but my solution has ownership problem, Is my code totally wrong?</p>\n\n<p>Given <code>[1, 2, 3, 4, 5, 6]</code>, the expected output is <code>[4, 5, 6, 1, 2, 3]</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn switch(nums: &amp;mut Vec&lt;i32&gt;, k: i32) {\n\n    let t = k as usize;\n    let v1 = &amp;nums[..t];\n    nums.drain(t..);\n    nums.extend_from_slice(v1);\n\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0502]: cannot borrow `*nums` as mutable because it is also borrowed as immutable\n --&gt; src/main.rs:7:5\n  |\n6 |     let v1 = &amp;nums[..t];\n  |               ---- immutable borrow occurs here\n7 |     nums.extend_from_slice(v1);\n  |     ^^^^^-----------------^^^^\n  |     |    |\n  |     |    immutable borrow later used by call\n  |     mutable borrow occurs here\n</code></pre>\n"}, {"tags": ["rust", "blockchain", "substrate"], "answers": [{"comments": [{"owner": {"reputation": 101, "user_id": 7418107, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lAH5k.png?s=128&g=1", "display_name": "Bedeho Mender", "link": "https://stackoverflow.com/users/7418107/bedeho-mender"}, "edited": false, "score": 0, "creation_date": 1561112355, "post_id": 56700070, "comment_id": 99966554, "body": "Great answer!  By ensure, I mean that it is not possible for a developer to accidentally construct the runtime while having a different order. The main thing we are now considering is to instead use a safer wrapper macro <code>construct_migrating_runtime(&lt;migration module&gt;, &lt;normal input&gt;</code>) which makes sure to add the module first no matter what."}, {"owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "reply_to_user": {"reputation": 101, "user_id": 7418107, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lAH5k.png?s=128&g=1", "display_name": "Bedeho Mender", "link": "https://stackoverflow.com/users/7418107/bedeho-mender"}, "edited": false, "score": 0, "creation_date": 1561112605, "post_id": 56700070, "comment_id": 99966673, "body": "Yes, you would need to bake in your own custom logic, and I guess there would be a million ways to do it. One such example is only have one <code>on_initialize</code> hook from the first module, and then it calls the next one by a specific function name, and so on."}, {"owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "reply_to_user": {"reputation": 101, "user_id": 7418107, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lAH5k.png?s=128&g=1", "display_name": "Bedeho Mender", "link": "https://stackoverflow.com/users/7418107/bedeho-mender"}, "edited": false, "score": 0, "creation_date": 1561131285, "post_id": 56700070, "comment_id": 99976274, "body": "Documentation would also help here, it seems pretty necessary in general for creating modules which will be used by others."}], "tags": [], "owner": {"reputation": 9375, "user_id": 1396977, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/PylBh.jpg?s=128&g=1", "display_name": "Shawn Tabrizi", "link": "https://stackoverflow.com/users/1396977/shawn-tabrizi"}, "is_accepted": false, "score": 8, "last_activity_date": 1561107425, "creation_date": 1561107425, "answer_id": 56700070, "question_id": 56699795, "link": "https://stackoverflow.com/questions/56699795/what-order-is-on-initialize-invoked-across-different-modules-in-a-substrate-ru/56700070#56700070", "title": "What order is `on_initialize` invoked across different modules in a Substrate runtime?", "body": "<p>The <code>on_initialize</code> function for each Substrate runtime module is called via the <a href=\"https://substrate.dev/rustdocs/v1.0/srml_executive/index.html\" rel=\"noreferrer\">Executive module</a>, which handles all of the top-level stuff; essentially just executing blocks/extrinsics.</p>\n\n<p>Every time a block is executed (<code>execute_block</code>), first <code>initialize_block</code> is called which ultimately calls the <code>on_initalize</code> block for the <code>AllModules</code> type:</p>\n\n<p><strong><a href=\"https://github.com/paritytech/substrate/blob/53083f16c5e816cf184efd915d045056a035123d/srml/executive/src/lib.rs#L172\" rel=\"noreferrer\">srml/executive/src/lib.rs</a></strong></p>\n\n<pre><code>&lt;AllModules as OnInitialize&lt;System::BlockNumber&gt;&gt;::on_initialize(*block_number);\n</code></pre>\n\n<p>The <code>AllModules</code> type is a tuple of the different module identifiers in your runtime. It generated by the <a href=\"https://github.com/paritytech/substrate/blob/8085a61fe5e655d420a93966d0728ea6dbf21fa6/srml/support/src/runtime.rs#L521\" rel=\"noreferrer\"><code>construct_runtime!</code> macro</a> and lists the modules in the order you defined them in the macro.. For example, for the given <code>construct_runtime!</code> definition:</p>\n\n<pre><code>construct_runtime!(\n    pub enum Runtime with Log(InternalLog: DigestItem&lt;Hash, AuthorityId, AuthoritySignature&gt;) where\n        Block = Block,\n        NodeBlock = opaque::Block,\n        UncheckedExtrinsic = UncheckedExtrinsic\n    {\n        System: system::{default, Log(ChangesTrieRoot)},\n        Timestamp: timestamp::{Module, Call, Storage, Config&lt;T&gt;, Inherent},\n        Consensus: consensus::{Module, Call, Storage, Config&lt;T&gt;, Log(AuthoritiesChange), Inherent},\n        Aura: aura::{Module},\n        Indices: indices,\n        Balances: balances,\n        Sudo: sudo,\n        // Used for the module template in `./template.rs`\n        TemplateModule: template::{Module, Call, Storage, Event&lt;T&gt;},\n        TemplateModule1: template1::{Module, Call, Storage, Event&lt;T&gt;},\n        TemplateModule2: template2::{Module, Call, Storage, Event&lt;T&gt;},\n    }\n);\n</code></pre>\n\n<p>You will get the following <code>AllModules</code> type:</p>\n\n<pre><code>type AllModules = (Timestamp, Consensus, Aura, Indices, Balances, Sudo, TemplateModule, TemplateModule1, TemplateModule2);\n</code></pre>\n\n<p>Thus, the <code>on_initialize</code> function is called in order which you define the modules in your runtime. There is nothing you need to do to \"ensure this will be respected\", since code flow is serial and deterministic here.</p>\n"}], "owner": {"reputation": 101, "user_id": 7418107, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lAH5k.png?s=128&g=1", "display_name": "Bedeho Mender", "link": "https://stackoverflow.com/users/7418107/bedeho-mender"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 187, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1561107425, "creation_date": 1561106410, "last_edit_date": 1561106581, "question_id": 56699795, "link": "https://stackoverflow.com/questions/56699795/what-order-is-on-initialize-invoked-across-different-modules-in-a-substrate-ru", "title": "What order is `on_initialize` invoked across different modules in a Substrate runtime?", "body": "<p>I need to be sure that the <code>on_initialize</code> handler for a specific module runs before the same handler before all other modules in my runtime.</p>\n\n<p>a) How do ensure this?</p>\n\n<p>b) Is there some compile or runtime check I can enforce to absolutely guarantee that this will be respected?</p>\n"}, {"tags": ["rust", "flatbuffers"], "comments": [{"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 0, "creation_date": 1561099062, "post_id": 56697716, "comment_id": 99960389, "body": "Have you tried using <code>&#39;static</code> as a lifetime? Then you wouldn&#39;t need to parameterize whatever embeds it."}, {"owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "edited": false, "score": 0, "creation_date": 1561099709, "post_id": 56697716, "comment_id": 99960664, "body": "See <a href=\"https://doc.rust-lang.org/std/marker/struct.PhantomData.html#unused-lifetime-parameters\" rel=\"nofollow noreferrer\">this on unused lifetime parameters</a>. It still does not explain what in the <code>FlatFileBuilder</code> struct requires the lifetime though..."}], "answers": [{"tags": [], "owner": {"reputation": 11, "user_id": 14375524, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d89680dca2d8c1aa51ae38ec9f064a18?s=128&d=identicon&r=PG&f=1", "display_name": "kdlee", "link": "https://stackoverflow.com/users/14375524/kdlee"}, "is_accepted": false, "score": 1, "last_activity_date": 1602106202, "creation_date": 1602106202, "answer_id": 64252583, "question_id": 56697716, "link": "https://stackoverflow.com/questions/56697716/why-does-flatbufferbuilder-have-a-lifetime/64252583#64252583", "title": "Why does FlatBufferBuilder have a lifetime?", "body": "<p>New to Rust myself so was trying &amp; struggling to deal with this too.\nFrom looking at flatbuffers's builder.rs code, seems to be due to the fact that methods like below return references to data inside the builder, which needs to know the builder's lifetime to be valid.</p>\n<pre><code>pub fn create_string&lt;'a: 'b, 'b&gt;(&amp;'a mut self, s: &amp;'b str) -&gt; WIPOffset&lt;&amp;'fbb str&gt;\n</code></pre>\n<p>Using 'static like Matthieu mentioned above appears to enable me to not add more explicit lifetimes to structs that have a member FlatBufferBuilder. But still struggling to understand why putting 'static on a struct that isn't static is working ...</p>\n"}], "owner": {"reputation": 2738, "user_id": 968269, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/4ef897ad21a082b707ed8a85a2ae7b08?s=128&d=identicon&r=PG", "display_name": "cberner", "link": "https://stackoverflow.com/users/968269/cberner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1602106202, "creation_date": 1561097153, "last_edit_date": 1561128558, "question_id": 56697716, "link": "https://stackoverflow.com/questions/56697716/why-does-flatbufferbuilder-have-a-lifetime", "title": "Why does FlatBufferBuilder have a lifetime?", "body": "<p>Why does <a href=\"https://github.com/google/flatbuffers/blob/7836e65dd4310fc7a4c1f60d7adf3f5e2d736aa1/rust/flatbuffers/src/builder.rs#L56\" rel=\"nofollow noreferrer\"><code>FlatBufferBuilder</code></a> from the Rust flatbuffer library have a lifetime associated with it?</p>\n\n<p>The lifetime makes it difficult to use in structs, as I then need to add a lifetime to them. I see that the lifetime is used for a few methods, but it seems like those could use the lifetime of <code>self</code> instead.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 134258, "user_id": 785065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qAbxM.jpg?s=128&g=1", "display_name": "loganfsmyth", "link": "https://stackoverflow.com/users/785065/loganfsmyth"}, "edited": false, "score": 1, "creation_date": 1561096284, "post_id": 56697029, "comment_id": 99959397, "body": "If all the items in the tuple are the same type, have you considered using an array or Vec instead?"}, {"owner": {"reputation": 1925, "user_id": 2865757, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4dcfe7782349d59e50b1fa196f9c6669?s=128&d=identicon&r=PG&f=1", "display_name": "Zefick", "link": "https://stackoverflow.com/users/2865757/zefick"}, "edited": false, "score": 0, "creation_date": 1561105879, "post_id": 56697029, "comment_id": 99963318, "body": "Seems it&#39;s not possible for now. See how <code>Tuple</code> itself implements different traits: <a href=\"https://doc.rust-lang.org/1.5.0/std/primitive.tuple.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/1.5.0/std/primitive.tuple.html</a>"}], "answers": [{"tags": [], "owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "is_accepted": false, "score": 2, "last_activity_date": 1561130174, "last_edit_date": 1561130174, "creation_date": 1561094098, "answer_id": 56697218, "question_id": 56697029, "link": "https://stackoverflow.com/questions/56697029/is-there-a-way-to-impl-trait-for-a-tuple-that-may-have-any-number-elements/56697218#56697218", "title": "Is there a way to impl trait for a tuple that may have any number elements?", "body": "<p>No. (unless you are ready to use macros - see other answers)</p>\n\n<p>Tuples in Rust have a fixed length <a href=\"https://doc.rust-lang.org/stable/book/ch03-02-data-types.html#compound-types\" rel=\"nofollow noreferrer\">just like arrays</a>. I do not believe you can express the concept of \"tuples of any length\". </p>\n\n<p>In other words a tuple of 2 elements is a different compound type than a tuple of 3 elements. If you insist on using tuples you have to go for the solution you outlined above.</p>\n\n<p>Use a collection? (such as aliasing an existing one and implementing the trait on it)?</p>\n"}, {"comments": [{"owner": {"reputation": 4690, "user_id": 2019549, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/900a3735d55a0473c975ba9266bf0c68?s=128&d=identicon&r=PG", "display_name": "cambunctious", "link": "https://stackoverflow.com/users/2019549/cambunctious"}, "edited": false, "score": 0, "creation_date": 1588718169, "post_id": 56700760, "comment_id": 109006219, "body": "No, use arrays."}], "tags": [], "owner": {"reputation": 14722, "user_id": 401137, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/j25bf.png?s=128&g=1", "display_name": "Some Guy", "link": "https://stackoverflow.com/users/401137/some-guy"}, "is_accepted": false, "score": 2, "last_activity_date": 1561110484, "last_edit_date": 1561110484, "creation_date": 1561109899, "answer_id": 56700760, "question_id": 56697029, "link": "https://stackoverflow.com/questions/56697029/is-there-a-way-to-impl-trait-for-a-tuple-that-may-have-any-number-elements/56700760#56700760", "title": "Is there a way to impl trait for a tuple that may have any number elements?", "body": "<p><strong>Note:</strong> I'm not sure whether you <em>should</em> do this, but here's a way to anyway. (Feels hacky to me, and that may be because I don't know how to make a better macro.)</p>\n\n<h1>Homogeneous tuples <code>(T, T)</code></h1>\n\n<p>The way you've described it:</p>\n\n<p><code>impl&lt;T&gt; Foo for (T, T) where T: Foo</code></p>\n\n<p>Here, the entire tuple <em>must</em> be homogeneous (i.e. <code>(MyType, MyType2).do_something()</code> will <em>not</em> work because of monomorphization).\n<strong>This raises a flag because tuples are for heterogeneous data.</strong></p>\n\n<p>If implementing the trait only one homogeneous tuples is still what you want, we can implement a macro the way <a href=\"https://doc.rust-lang.org/1.35.0/std/primitive.tuple.html#implementations\" rel=\"nofollow noreferrer\">the standard library does to implement traits for varied length tuples</a>, with some modifications. (Click <code>src</code> on the right of an <code>impl</code> to see it's source.)</p>\n\n<pre><code>macro_rules! replace_expr {\n    ($_t:tt $sub:ty) =&gt; {$sub};\n}\n\nmacro_rules! tuple_impls {\n    ( $( $name:ident )+ ) =&gt; {\n        impl&lt;T: Foo&gt; Foo for ($(replace_expr!(($name) T),)+)\n        {\n            fn do_something(self) -&gt; Self {\n                let ($($name,)+) = self;\n                ($($name.do_something(),)+)\n            }\n        }\n    };\n}\n\ntuple_impls! { A }\ntuple_impls! { A B }\ntuple_impls! { A B C }\ntuple_impls! { A B C D }\ntuple_impls! { A B C D E }\ntuple_impls! { A B C D E F }\ntuple_impls! { A B C D E F G }\ntuple_impls! { A B C D E F G H }\ntuple_impls! { A B C D E F G H I }\ntuple_impls! { A B C D E F G H I J }\ntuple_impls! { A B C D E F G H I J K }\ntuple_impls! { A B C D E F G H I J K L }\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=9ccf55a0f3b85452ae35b872da84dac9\" rel=\"nofollow noreferrer\">Playground</a></p>\n\n<h2>Heterogeneous tuples <code>(T1, T2)</code></h2>\n\n<p>If you're okay with <code>(MyType, MyType2).do_something()</code> working (where both implement the <code>Foo</code> trait), you can try this simpler macro:</p>\n\n<pre><code>macro_rules! tuple_impls {\n    ( $( $name:ident )+ ) =&gt; {\n        impl&lt;$($name: Foo),+&gt; Foo for ($($name,)+)\n        {\n            fn do_something(self) -&gt; Self {\n                let ($($name,)+) = self;\n                ($($name.do_something(),)+)\n            }\n        }\n    };\n}\n\ntuple_impls! { A }\ntuple_impls! { A B }\ntuple_impls! { A B C }\ntuple_impls! { A B C D }\ntuple_impls! { A B C D E }\ntuple_impls! { A B C D E F }\ntuple_impls! { A B C D E F G }\ntuple_impls! { A B C D E F G H }\ntuple_impls! { A B C D E F G H I }\ntuple_impls! { A B C D E F G H I J }\ntuple_impls! { A B C D E F G H I J K }\ntuple_impls! { A B C D E F G H I J K L }\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=c50e3a702034b4360d9f3ad9dd2d86d2\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}], "owner": {"reputation": 21, "user_id": 7012241, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4fef8abe5754d8c9023904af02af5aa0?s=128&d=identicon&r=PG&f=1", "display_name": "Yechao", "link": "https://stackoverflow.com/users/7012241/yechao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1409, "favorite_count": 0, "closed_date": 1561128734, "answer_count": 2, "score": 2, "last_activity_date": 1593112322, "creation_date": 1561092660, "last_edit_date": 1593112322, "question_id": 56697029, "link": "https://stackoverflow.com/questions/56697029/is-there-a-way-to-impl-trait-for-a-tuple-that-may-have-any-number-elements", "closed_reason": "Duplicate", "title": "Is there a way to impl trait for a tuple that may have any number elements?", "body": "<p>I have a trait like this:</p>\n<pre class=\"lang-rust prettyprint-override\"><code>trait Foo {\n    fn do_something(self) -&gt; Self;\n}\n</code></pre>\n<p>And I want implement this trait for a tuple that may have any number of elements that implement this trait.</p>\n<pre class=\"lang-rust prettyprint-override\"><code>impl&lt;T&gt; Foo for (T, T) where T: Foo {\n    fn do_something(self) -&gt; Self {\n        let (t0, t1) = self;\n        (t0.do_something(), t1.do_something())\n    }\n}\n\nimpl&lt;T&gt; Foo for (T, T, T) where T: Foo {\n    fn do_something(self) -&gt; Self {\n        let (t0, t1, t2) = self;\n        (t0.do_something(), t1.do_something(), t2.do_something())\n    }\n}\n\n// and so on...\n</code></pre>\n"}, {"tags": ["tcp", "rust"], "answers": [{"comments": [{"owner": {"reputation": 993, "user_id": 3767693, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/38GTM.gif?s=128&g=1", "display_name": "WJM", "link": "https://stackoverflow.com/users/3767693/wjm"}, "edited": false, "score": 1, "creation_date": 1561064778, "post_id": 56693740, "comment_id": 99952954, "body": "Thank you, spot on"}], "tags": [], "owner": {"reputation": 138, "user_id": 10453819, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/50f2dec01ab3125d1d7a551fad5dff80?s=128&d=identicon&r=PG&f=1", "display_name": "effect", "link": "https://stackoverflow.com/users/10453819/effect"}, "is_accepted": true, "score": 3, "last_activity_date": 1561064052, "creation_date": 1561064052, "answer_id": 56693740, "question_id": 56692961, "link": "https://stackoverflow.com/questions/56692961/graceful-exit-tcplistener-incoming/56693740#56693740", "title": "Graceful exit TcpListener.incoming()", "body": "<p>You'll want to put the TcpListener into non-blocking mode using the set_nonblocking() method, like so:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::io;\nuse std::net::TcpListener;\n\nlet listener = TcpListener::bind(\"127.0.0.1:7878\").unwrap();\nlistener.set_nonblocking(true).expect(\"Cannot set non-blocking\");\n\nfor stream in listener.incoming() {\n    match stream {\n        Ok(s) =&gt; {\n            // do something with the TcpStream\n            handle_connection(s);\n        }\n        Err(ref e) if e.kind() == io::ErrorKind::WouldBlock =&gt; {\n            // Decide if we should exit\n            break;\n            // Decide if we should try to accept a connection again\n            continue;\n        }\n        Err(e) =&gt; panic!(\"encountered IO error: {}\", e),\n    }\n}\n</code></pre>\n\n<p>Instead of waiting for a connection, the incoming() call will immediately return a Result&lt;> type. If Result is Ok(), then a connection was made and you can process it. If the Result is Err(WouldBlock), this isn't actually an error, there just wasn't a connection pending at the exact moment incoming() checked the socket.</p>\n\n<p>Note that in the WouldBlock case, you may want to put a sleep() or something before continuing, otherwise your program will rapidly poll the incoming() function checking for a connection, resulting in high CPU usage.</p>\n\n<p>Code example adapted from <a href=\"https://doc.rust-lang.org/std/net/struct.TcpListener.html#method.set_nonblocking\" rel=\"nofollow noreferrer\">here</a></p>\n"}, {"tags": [], "owner": {"reputation": 796, "user_id": 959847, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/40d3fdc131dbfeae3a893a354bcbcf67?s=128&d=identicon&r=PG", "display_name": "euclio", "link": "https://stackoverflow.com/users/959847/euclio"}, "is_accepted": false, "score": 2, "last_activity_date": 1577230925, "creation_date": 1577230925, "answer_id": 59474177, "question_id": 56692961, "link": "https://stackoverflow.com/questions/56692961/graceful-exit-tcplistener-incoming/59474177#59474177", "title": "Graceful exit TcpListener.incoming()", "body": "<p>The standard library doesn't provide an API for this, but you can use platform-specific APIs to shutdown reads on the socket which will cause the <code>incoming</code> iterator to return an error. You can then break out of handling connections when the error is received. For example, on a Unix system:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::net::TcpListener;\nuse std::os::unix::io::AsRawFd;\nuse std::thread;\n\nlet listener = TcpListener::bind(\"localhost:0\")?;\n\nlet fd = listener.as_raw_fd();\n\nlet handle = thread::spawn(move || {\n  for connection in listener.incoming() {\n    match connection {\n      Ok(connection) =&gt; /* handle connection */\n      Err(_) =&gt; break,\n  }\n});\n\nlibc::shutdown(fd, libc::SHUT_RD);\n\nhandle.join();\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 614, "user_id": 461462, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65544ca63ee2315c6fd902c71e357190?s=128&d=identicon&r=PG", "display_name": "Proton", "link": "https://stackoverflow.com/users/461462/proton"}, "is_accepted": false, "score": 2, "last_activity_date": 1582356723, "creation_date": 1582356723, "answer_id": 60350026, "question_id": 56692961, "link": "https://stackoverflow.com/questions/56692961/graceful-exit-tcplistener-incoming/60350026#60350026", "title": "Graceful exit TcpListener.incoming()", "body": "<p>You can <code>poll</code> your socket with an <code>eventfd</code>, which used for signaling.\nI wrote a helper for this.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let shutdown = EventFd::new();\nlet listener = TcpListener::bind(\"0.0.0.0:12345\")?;\nlet incoming = CancellableIncoming::new(&amp;listener, &amp;shutdown);\n\nfor stream in incoming {\n    // Your logic\n}\n\n// While in other thread\nshutdown.add(1);  // Light the shutdown signal, now your incoming loop exits gracefully.\n</code></pre>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use nix;\nuse nix::poll::{poll, PollFd, PollFlags};\nuse nix::sys::eventfd::{eventfd, EfdFlags};\nuse nix::unistd::{close, write};\nuse std;\nuse std::net::{TcpListener, TcpStream};\nuse std::os::unix::io::{AsRawFd, RawFd};\n\npub struct EventFd {\n    fd: RawFd,\n}\n\nimpl EventFd {\n    pub fn new() -&gt; Self {\n        EventFd {\n            fd: eventfd(0, EfdFlags::empty()).unwrap(),\n        }\n    }\n\n    pub fn add(&amp;self, v: i64) -&gt; nix::Result&lt;usize&gt; {\n        let b = v.to_le_bytes();\n        write(self.fd, &amp;b)\n    }\n}\n\nimpl AsRawFd for EventFd {\n    fn as_raw_fd(&amp;self) -&gt; RawFd {\n        self.fd\n    }\n}\n\nimpl Drop for EventFd {\n    fn drop(&amp;mut self) {\n        let _ = close(self.fd);\n    }\n}\n\n// -----\n//\npub struct CancellableIncoming&lt;'a&gt; {\n    listener: &amp;'a TcpListener,\n    eventfd: &amp;'a EventFd,\n}\n\nimpl&lt;'a&gt; CancellableIncoming&lt;'a&gt; {\n    pub fn new(listener: &amp;'a TcpListener, eventfd: &amp;'a EventFd) -&gt; Self {\n        Self { listener, eventfd }\n    }\n}\n\nimpl&lt;'a&gt; Iterator for CancellableIncoming&lt;'a&gt; {\n    type Item = std::io::Result&lt;TcpStream&gt;;\n    fn next(&amp;mut self) -&gt; Option&lt;std::io::Result&lt;TcpStream&gt;&gt; {\n        use nix::errno::Errno;\n\n        let fd = self.listener.as_raw_fd();\n        let evfd = self.eventfd.as_raw_fd();\n        let mut poll_fds = vec![\n            PollFd::new(fd, PollFlags::POLLIN),\n            PollFd::new(evfd, PollFlags::POLLIN),\n        ];\n\n        loop {\n            match poll(&amp;mut poll_fds, -1) {\n                Ok(_) =&gt; break,\n                Err(nix::Error::Sys(Errno::EINTR)) =&gt; continue,\n                _ =&gt; panic!(\"Error polling\"),\n            }\n        }\n\n        if poll_fds[0].revents().unwrap() == PollFlags::POLLIN {\n            Some(self.listener.accept().map(|p| p.0))\n        } else if poll_fds[1].revents().unwrap() == PollFlags::POLLIN {\n            None\n        } else {\n            panic!(\"Can't be!\");\n        }\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 993, "user_id": 3767693, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/38GTM.gif?s=128&g=1", "display_name": "WJM", "link": "https://stackoverflow.com/users/3767693/wjm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1113, "favorite_count": 0, "accepted_answer_id": 56693740, "answer_count": 3, "score": 4, "last_activity_date": 1582356723, "creation_date": 1561060118, "last_edit_date": 1561062450, "question_id": 56692961, "link": "https://stackoverflow.com/questions/56692961/graceful-exit-tcplistener-incoming", "title": "Graceful exit TcpListener.incoming()", "body": "<p>From the rust std net library:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let listener = TcpListener::bind((\"127.0.0.1\", port)).unwrap();\n\ninfo!(\"Opened socket on localhost port {}\", port);\n\n// accept connections and process them serially\nfor stream in listener.incoming() {\n    break;\n}\n\ninfo!(\"closed socket\");\n</code></pre>\n\n<p>How does one make the listener stop listening? It says in the API that when the listener is dropped, it stops. But how do we drop it if <code>incoming()</code> is a blocking call? Preferably without external crates like tokio/mio.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 2, "creation_date": 1561058893, "post_id": 56692468, "comment_id": 99950638, "body": "Do you not have a <code>src&#47;lib.rs</code>?"}, {"owner": {"reputation": 376, "user_id": 1866193, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/S7PpQ.png?s=128&g=1", "display_name": "APW", "link": "https://stackoverflow.com/users/1866193/apw"}, "reply_to_user": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "edited": false, "score": 0, "creation_date": 1561119492, "post_id": 56692468, "comment_id": 99969832, "body": "Yes, I do have a <b>lib.rs</b>. I have added it to the description. just an oversight when I posted."}], "answers": [{"tags": [], "owner": {"reputation": 22172, "user_id": 1263942, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/b272a5e1d5d3589192d942552e51e2a8?s=128&d=identicon&r=PG", "display_name": "Bruno Grieder", "link": "https://stackoverflow.com/users/1263942/bruno-grieder"}, "is_accepted": true, "score": 2, "last_activity_date": 1618077733, "last_edit_date": 1618077733, "creation_date": 1561093081, "answer_id": 56697083, "question_id": 56692468, "link": "https://stackoverflow.com/questions/56692468/how-to-layout-my-rust-modules-in-src-for-access-across-my-application/56697083#56697083", "title": "how to layout my Rust modules in src for access across my application", "body": "<p>In <code>commons &gt; service </code></p>\n<pre><code>use crate::animals::domestic::dog;\n</code></pre>\n<p>The <code>crate</code> keyword tells the compiler to start from the root of the package; i.e. what follows is an absolute path.</p>\n<p>Alternatively, you can go with relative paths and use the <code>super</code> keyword to go one level up.</p>\n<p>See <a href=\"https://doc.rust-lang.org/stable/book/ch07-03-paths-for-referring-to-an-item-in-the-module-tree.html\" rel=\"nofollow noreferrer\">this Rust book entry</a> for details</p>\n"}], "owner": {"reputation": 376, "user_id": 1866193, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/S7PpQ.png?s=128&g=1", "display_name": "APW", "link": "https://stackoverflow.com/users/1866193/apw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 1, "accepted_answer_id": 56697083, "answer_count": 1, "score": 0, "last_activity_date": 1618077733, "creation_date": 1561057805, "last_edit_date": 1561119433, "question_id": 56692468, "link": "https://stackoverflow.com/questions/56692468/how-to-layout-my-rust-modules-in-src-for-access-across-my-application", "title": "how to layout my Rust modules in src for access across my application", "body": "<p>I have created a package structure but the compiler says it can't find my module. I am new to rust, with a background in Java &amp; C#</p>\n\n<p>I have tried using self and super prefixes but can't get the code to compile</p>\n\n<p>I have the following structure:</p>\n\n<pre><code>src\n|_lib.rs\n|_common\n| |_mod.rs\n| |_service.rs\n|\n|_animals\n  |_mod.rs\n  |_domestic\n  | |_mod.rs\n  | |_dog.rs\n  |_wild\n  |_mod.rs\n</code></pre>\n\n<p>here are the simplified files:</p>\n\n<p>dog.rs</p>\n\n<pre><code>pub struct Dog {\n  ...\n}\n\nimpl Dog {\n    ...\n}\n</code></pre>\n\n<p>domestic > mod.rs</p>\n\n<pre><code>pub mod dog;\n</code></pre>\n\n<p>animals > mod.rs</p>\n\n<pre><code>pub mod domestic;\npub mod wild;\n</code></pre>\n\n<p>src > lib.rs</p>\n\n<pre><code>pub mod common;\npub mod animals;\n</code></pre>\n\n<p>common > service</p>\n\n<pre><code>use animals::domestic::dog;\n</code></pre>\n\n<p>From what I have read (and possibly misunderstood) in the Rust book, this should work.</p>\n\n<p>But the compiler throws the following error:</p>\n\n<pre><code>could not find `animals` in `{{root}}`\n</code></pre>\n\n<p>Have I set this out in a 'Rust' way? and what do I need to change to get it to compile.</p>\n\n<p>Thank you</p>\n"}, {"tags": ["multithreading", "generics", "rust"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 2, "creation_date": 1561060642, "post_id": 56692197, "comment_id": 99951349, "body": "This recommendation <i>is</i> necessary. Consider that all immutable references are <code>Copy</code>, regardless of their lifetime."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1561061249, "post_id": 56692197, "comment_id": 99951593, "body": "@Michail What reference? It is an integer and I would like to make a copy of it for every thread."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1561061294, "post_id": 56692197, "comment_id": 99951613, "body": "True, but a reference type might one day implement <code>PrimInt</code>, and the compiler guards agains that."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1561061403, "post_id": 56692197, "comment_id": 99951662, "body": "@Michail That makes no sense. It is the purpose of Copy to indicate the value can be copied."}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1561061722, "post_id": 56692197, "comment_id": 99951782, "body": "I&#39;m really bad at explaining things, so here&#39;s a question with an informative explanation: <a href=\"https://stackoverflow.com/questions/49972233/why-do-i-need-to-provide-lifetimes-for-a-structs-generic-parameters-which-are-n/49972692#49972692\">here</a> for a similar situation."}, {"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1561067186, "post_id": 56692197, "comment_id": 99953750, "body": "It would seem absurd if it is not possible to copy a generic integer to multiple threads ..."}, {"owner": {"reputation": 1101, "user_id": 8715470, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Dlyj0.jpg?s=128&g=1", "display_name": "Zarenor", "link": "https://stackoverflow.com/users/8715470/zarenor"}, "edited": false, "score": 0, "creation_date": 1561068635, "post_id": 56692197, "comment_id": 99954168, "body": "I think you have two easy ways to do this. Since <code>a</code> is copy, you could re-assign it to a new <code>let</code> binding, which (as you point out) would copy it. Otherwise, since <code>Copy</code> requires <code>Clone</code>, you could explicitly <code>a.clone()</code>, which will also create a copy."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1561099861, "post_id": 56692197, "comment_id": 99960751, "body": "Note that this is expressed in the constraint <code>F: Send + &#39;static</code> on <code>std::thread::spawn</code>: <a href=\"https://doc.rust-lang.org/std/thread/fn.spawn.html\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/thread/fn.spawn.html</a>"}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1561100047, "post_id": 56692197, "comment_id": 99960833, "body": "Also, <code>PrimInt</code> is a trait in the <code>num</code>crate and not in the standard library, so the compiler can&#39;t assume anything special about it."}, {"owner": {"reputation": 51497, "user_id": 49246, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/c421b43470bb8d3c099c5a847e588549?s=128&d=identicon&r=PG", "display_name": "starblue", "link": "https://stackoverflow.com/users/49246/starblue"}, "edited": false, "score": 0, "creation_date": 1561100567, "post_id": 56692197, "comment_id": 99961029, "body": "<code>num::PrimInt</code> could (should?) add <code>&#39;static</code> as a supertrait, then this would work."}], "answers": [{"tags": [], "owner": {"reputation": 890, "user_id": 11389321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9048fa908f45d0795f0a5c47eaa8a637?s=128&d=identicon&r=PG&f=1", "display_name": "ecstaticm0rse", "link": "https://stackoverflow.com/users/11389321/ecstaticm0rse"}, "is_accepted": false, "score": 1, "last_activity_date": 1561090316, "last_edit_date": 1561090316, "creation_date": 1561078614, "answer_id": 56695598, "question_id": 56692197, "link": "https://stackoverflow.com/questions/56692197/how-to-pass-a-primint-to-multiple-threads/56695598#56695598", "title": "How to pass a PrimInt to multiple threads?", "body": "<p><code>Copy</code> and <code>'static</code> are different constraints, and <em>both</em> are necessary for a value to be moved across threads. While you may only intend to pass integers (which satisfy both <code>Copy</code> and <code>'static</code>) to your generic function, the compiler cannot know for sure. It must be able to prove that the function body is valid for <strong>all</strong> possible type parameters. An example of a type which is <code>Copy</code> but not <code>'static</code> is a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=70bdf975682ab592ad024661eba958ff\" rel=\"nofollow noreferrer\">reference to a local variable</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn assert_is_copy&lt;T: Copy&gt;(_: T) {}\nfn assert_is_static&lt;T: 'static&gt;(_: T) {}\n\nfn main() {\n    let x: usize = 5;\n\n    assert_is_copy(x);\n    assert_is_static(x);\n    assert_is_copy(&amp;x);\n    //assert_is_static(&amp;x); // FAILS TO COMPILE\n}\n</code></pre>\n\n<p>I think you'll agree that you don't want to be passing references to <em>your</em> stack variables to different threads (although it can be safe in <a href=\"https://docs.rs/crossbeam/0.7.1/crossbeam/thread/struct.Scope.html\" rel=\"nofollow noreferrer\">some limited cases</a>). If you did, you could detach that thread, pop the stack frame with the local variable on it, and cause undefined behavior!</p>\n\n<p><a href=\"https://stackoverflow.com/questions/40053550/the-compiler-suggests-i-add-a-static-lifetime-because-the-parameter-type-may-no#answer-40053649\">This answer</a> gives a simple, (mostly) correct explanation of what it means to say <code>T: 'static</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "edited": false, "score": 0, "creation_date": 1561122645, "post_id": 56698119, "comment_id": 99971477, "body": "As I said in my original question, the integer may be computed and is not a literal. <code>&#39;static</code> does not work for my use case."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1561099119, "creation_date": 1561099119, "answer_id": 56698119, "question_id": 56692197, "link": "https://stackoverflow.com/questions/56692197/how-to-pass-a-primint-to-multiple-threads/56698119#56698119", "title": "How to pass a PrimInt to multiple threads?", "body": "<p>Others have explained <em>why</em> your code doesn't work, but if you're still wondering <em>how</em> to make it work, simply add <code>+ 'static</code> to your constraints:</p>\n\n<pre><code>fn g&lt;A&gt;(a: A)\nwhere\n    A: num::PrimInt + Copy + std::fmt::Debug + Send + 'static,\n{\n    let hs = (0..3).map(|_| {\n        std::thread::spawn(move || {\n            println!(\"{:?}\", a);\n        })\n    });\n\n    for h in hs {\n        h.join().unwrap();\n    }\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 890, "user_id": 11389321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9048fa908f45d0795f0a5c47eaa8a637?s=128&d=identicon&r=PG&f=1", "display_name": "ecstaticm0rse", "link": "https://stackoverflow.com/users/11389321/ecstaticm0rse"}, "edited": false, "score": 0, "creation_date": 1561224104, "post_id": 56704181, "comment_id": 99996891, "body": "This is wrong. All primitive integer types (e.g. <code>u32</code>, <code>isize</code>) are <code>&#39;static</code>. It does not matter whether they come from a literal or are computed at runtime."}, {"owner": {"reputation": 890, "user_id": 11389321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9048fa908f45d0795f0a5c47eaa8a637?s=128&d=identicon&r=PG&f=1", "display_name": "ecstaticm0rse", "link": "https://stackoverflow.com/users/11389321/ecstaticm0rse"}, "edited": false, "score": 0, "creation_date": 1561224606, "post_id": 56704181, "comment_id": 99996992, "body": "All you needed to do to see this was to follow the compiler&#39;s recommendation (add a <code>&#39;static</code> bound to <code>A</code>), then pass any integer value to <code>g</code>."}], "tags": [], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "is_accepted": false, "score": -1, "last_activity_date": 1561122764, "creation_date": 1561122764, "answer_id": 56704181, "question_id": 56692197, "link": "https://stackoverflow.com/questions/56692197/how-to-pass-a-primint-to-multiple-threads/56704181#56704181", "title": "How to pass a PrimInt to multiple threads?", "body": "<p>The direct answer to my question based on the other answers is the following:</p>\n\n<p><strong>In Rust, it is not possible to pass a computed, non-literal <code>PrimInt</code> to more than one thread.</strong></p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1561122764, "creation_date": 1561056657, "question_id": 56692197, "link": "https://stackoverflow.com/questions/56692197/how-to-pass-a-primint-to-multiple-threads", "title": "How to pass a PrimInt to multiple threads?", "body": "<p>I would like to write a function that accepts an integer, and spawns threads that use this integer. The integer could be computed. It doesn't need to be a literal. If I use a concrete type such as <code>usize</code>, it would work but when I try to generalize it, it <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=3a68effae1553bf3bfc0dc5ae0030a90\" rel=\"nofollow noreferrer\">fails to compile</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn g&lt;A&gt;(a: A)\nwhere\n    A: num::PrimInt + Copy + std::fmt::Debug + Send,\n{\n    let hs = (0..3).map(|_| {\n        std::thread::spawn(move || {\n            println!(\"{:?}\", a);\n        })\n    });\n\n    for h in hs {\n        h.join().unwrap();\n    }\n}\n</code></pre>\n\n<p>The error is:</p>\n\n<pre><code>1 | fn g&lt;A&gt;(a: A)\n  |      - help: consider adding an explicit lifetime bound `A: 'static`...\n...\n6 |         std::thread::spawn(move || {\n  |         ^^^^^^^^^^^^^^^^^^\n  |\nnote: ...so that the type `[closure@src/main.rs:6:28: 8:10 a:A]` will meet its required lifetime bounds\n --&gt; src/main.rs:6:9\n  |\n6 |         std::thread::spawn(move || {\n  |         ^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Since I have the <code>Copy</code> trait, it should be able to copy this value for each thread and hence the lifetime bound recommendation is not necessary. How do I resolve this?</p>\n"}, {"tags": ["rust", "variadic-functions"], "answers": [{"comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561080211, "post_id": 56694969, "comment_id": 99956447, "body": "maybe, <a href=\"https://doc.rust-lang.org/nightly/std/ffi/struct.VaList.html#method.as_va_list\" rel=\"nofollow noreferrer\">doc.rust-lang.org/nightly/std/ffi/&hellip;</a>, but this is very unconventional to create a va_list at the hand in C (in fact I don&#39;t think it&#39;s possible)."}, {"owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561093975, "post_id": 56694969, "comment_id": 99958818, "body": "@Stargateur I hadn&#39;t noticed that - but since JNI provides an interface that takes a simple array, I would still use that in preference, rather than use an experimental nightly feature."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": true, "score": 1, "last_activity_date": 1561079281, "last_edit_date": 1561079281, "creation_date": 1561072551, "answer_id": 56694969, "question_id": 56691433, "link": "https://stackoverflow.com/questions/56691433/how-can-i-call-a-variadic-c-function-with-a-list-of-arguments-pulled-from-a-rust/56694969#56694969", "title": "How can I call a variadic C function with a list of arguments pulled from a rust Vec?", "body": "<p>You can call variadic C functions from rust in the normal way, however calling them with an argument list that is only known at runtime is another matter. From what I understand, it is not even really possible in C (at least not in a standards compliant manner).</p>\n\n<p>Luckily, though, it looks as though you don't need to do that. The JNI provides an alternative method, <code>CallStaticVoidMethodA</code>, which is defined as:</p>\n\n<pre><code>NativeType CallStaticVoidMethodA(JNIEnv *env, jclass clazz, jmethodID methodID, jvalue *args);\n</code></pre>\n\n<p>where <code>args</code> points to an array containing the arguments, in the form of <code>jvalue</code>. </p>\n\n<p>You are receiving a <code>Vec&lt;jobject&gt;</code>; a <code>jvalue</code> is a union of various kinds of value, so you will need to convert your <code>Vec&lt;jobject&gt;</code> into an array of <code>jvalue</code>s. Alternatively it would be more flexible if your function could accept <code>Vec&lt;jvalue&gt;</code> as you would be able to call methods that accept various argument types - in that case you could just pass <code>args.as_ptr()</code> like so:</p>\n\n<pre><code>pub fn call_static_void_method(&amp;mut self, cls: jclass, method: jmethod, args: &amp; Vec&lt;jvalue&gt;)\n{\n    let csvm;\n    unsafe {\n        csvm = (**self.env_ptr).CallStaticVoidMethodA.expect(\"no implementation of CallStaticVoidMethodA\");\n    }\n    unsafe {\n        return csvm(self.env_ptr, cls, method, args.as_ptr());\n    }\n}\n</code></pre>\n\n<p>There are variations on this theme for all of the JNI functions for calling methods.</p>\n\n<p>See also: <a href=\"https://docs.oracle.com/en/java/javase/12/docs/specs/jni/functions.html#callstatictypemethod-routines-callstatictypemethoda-routines-callstatictypemethodv-routines\" rel=\"nofollow noreferrer\">JNI Documentation</a></p>\n"}], "owner": {"reputation": 1907, "user_id": 995935, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/uO0in.gif?s=128&g=1", "display_name": "Mutant Bob", "link": "https://stackoverflow.com/users/995935/mutant-bob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 251, "favorite_count": 0, "closed_date": 1561128344, "accepted_answer_id": 56694969, "answer_count": 1, "score": 0, "last_activity_date": 1561079281, "creation_date": 1561053086, "question_id": 56691433, "link": "https://stackoverflow.com/questions/56691433/how-can-i-call-a-variadic-c-function-with-a-list-of-arguments-pulled-from-a-rust", "closed_reason": "Duplicate", "title": "How can I call a variadic C function with a list of arguments pulled from a rust Vec?", "body": "<p>I am trying to call the JNI function <code>CallStaticVoidMethod</code> from rust.  The jni-sys wrapper declares it as </p>\n\n<pre><code>pub CallStaticVoidMethod:\n    Option&lt;unsafe extern \"C\" fn(env: *mut JNIEnv, cls: jclass, methodID: jmethodID, ...)&gt;,\n</code></pre>\n\n<p>I would like to wrap this call in something safer, so I have created this method on my wrapper object:</p>\n\n<pre><code>pub fn call_static_void_method(&amp;mut self, cls: jclass, method: jmethod, args: &amp; Vec&lt;jobject&gt;)\n{\n    let csvm;\n    unsafe {\n        csvm = (**self.env_ptr).CallStaticVoidMethod.expect(\"no implementation of CallStaticVoidMethod\");\n    }\n    unsafe {\n        return csvm(self.env_ptr, cls, method, /*what here?*/);\n    }\n}\n</code></pre>\n\n<p>How can I convert <code>args:Vec&lt;jobject&gt;</code> so that I can provide the final arguments to the <code>CallStaticVoidMethod</code> JNI function?</p>\n"}, {"tags": ["rust", "iterator", "lifetime", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 1913, "user_id": 2899885, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/ZJfu0.png?s=128&g=1", "display_name": "Cybran", "link": "https://stackoverflow.com/users/2899885/cybran"}, "edited": false, "score": 0, "creation_date": 1561226032, "post_id": 56706395, "comment_id": 99997306, "body": "Using <code>collect()</code> is actually perfectly reasonable and exactly what I need here."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1561131788, "last_edit_date": 1561131788, "creation_date": 1561130974, "answer_id": 56706395, "question_id": 56691225, "link": "https://stackoverflow.com/questions/56691225/how-can-i-extend-the-lifetime-of-a-temporary-variable-inside-of-an-iterator-adap/56706395#56706395", "title": "How can I extend the lifetime of a temporary variable inside of an iterator adaptor in Rust?", "body": "<blockquote>\n  <p>extend the lifetime of this object</p>\n</blockquote>\n\n<p>You cannot do this, period. It's simply not how things work.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28820781/155423\">Extend lifetime of variable</a></li>\n<li><a href=\"https://stackoverflow.com/q/35666024/155423\">Extending borrowed lifetime for String slice</a></li>\n<li><a href=\"https://stackoverflow.com/q/32682876/155423\">Is there any way to return a reference to a variable created in a function?</a></li>\n</ul>\n\n<p>Here's a simpler reproduction:</p>\n\n<pre><code>use std::iter;\n\nfn example(outer: impl Iterator&lt;Item = Inner&gt;) {\n    outer.flat_map(|i| i.iter().map(|v| v.clone()));\n}\n\nstruct Inner;\n\nimpl Inner {\n    fn iter(&amp;self) -&gt; impl Iterator&lt;Item = &amp;()&gt; + '_ {\n        iter::empty()\n    }\n}\n</code></pre>\n\n<p>Since you have the restriction of being unable to change <code>Inner</code>, the easiest solution is to be more eager and proactively <code>collect</code>:</p>\n\n<pre><code>fn example(outer: impl Iterator&lt;Item = Inner&gt;) {\n    outer.flat_map(|i| i.iter().map(|v| v.clone()).collect::&lt;Vec&lt;_&gt;&gt;());\n}\n</code></pre>\n\n<p>The only possibility I know of to avoid that would be to use a crate like <a href=\"https://crates.io/crates/rental\" rel=\"nofollow noreferrer\">rental</a> or <a href=\"https://crates.io/crates/owning_ref\" rel=\"nofollow noreferrer\">owning_ref</a>.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47193584/155423\">Is there an owned version of String::chars?</a></li>\n<li><a href=\"https://stackoverflow.com/q/43952104/155423\">How can I store a Chars iterator in the same struct as the String it is iterating on?</a></li>\n</ul>\n\n<p>If you had the possibility of changing <code>Inner</code>, you should make a consuming iterator variant. Then the value does not need to live beyond the closure because the iterator has taken ownership.</p>\n\n<pre><code>use std::iter;\n\nfn example(outer: impl Iterator&lt;Item = Inner&gt;) {\n    outer.flat_map(|i| i.into_iter().map(|v| v));\n}\n\nstruct Inner;\n\nimpl Inner {\n    fn into_iter(self) -&gt; impl Iterator&lt;Item = ()&gt; {\n        iter::empty()\n    }\n}\n</code></pre>\n"}], "owner": {"reputation": 1913, "user_id": 2899885, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/ZJfu0.png?s=128&g=1", "display_name": "Cybran", "link": "https://stackoverflow.com/users/2899885/cybran"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 378, "favorite_count": 0, "accepted_answer_id": 56706395, "answer_count": 1, "score": 0, "last_activity_date": 1561131788, "creation_date": 1561052091, "last_edit_date": 1561131009, "question_id": 56691225, "link": "https://stackoverflow.com/questions/56691225/how-can-i-extend-the-lifetime-of-a-temporary-variable-inside-of-an-iterator-adap", "title": "How can I extend the lifetime of a temporary variable inside of an iterator adaptor in Rust?", "body": "<p>I have a method <code>make_iter()</code> which creates an Iterator with multiple adapters in Rust, which can be simplified as the following MCVE:</p>\n\n<pre><code>fn make_iter(first: &amp;First) -&gt; Box&lt;dyn Iterator&lt;Item = String&gt; + '_&gt; {\n    Box::new(first.make_objects().flat_map(|second| {\n        second\n            .iter()\n            .filter(|third| third.as_str() != \"t2\")\n            .flat_map(|third| vec![format!(\"{}.A\", third), format!(\"{}.B\", third)].into_iter())\n            .chain(\n                vec![\n                    format!(\"{}.A\", second.name()),\n                    format!(\"{}.B\", second.name()),\n                ]\n                .into_iter(),\n            )\n    }))\n}\n\npub fn main() {\n    let first = First {};\n    for i in make_iter(&amp;first) {\n        println!(\"{}\", i);\n    }\n}\n\nstruct First {}\n\nimpl First {\n    fn make_objects(&amp;self) -&gt; Box&lt;dyn Iterator&lt;Item = Second&gt; + '_&gt; {\n        Box::new(\n            vec![\n                Second::new(\"s1\".to_string()),\n                Second::new(\"s2\".to_string()),\n                Second::new(\"s3\".to_string()),\n            ]\n            .into_iter(),\n        )\n    }\n}\n\nstruct Second {\n    name: String,\n    objects: Vec&lt;String&gt;,\n}\n\nimpl Second {\n    fn new(name: String) -&gt; Second {\n        Second {\n            name,\n            objects: vec![\"t1\".to_string(), \"t2\".to_string(), \"t3\".to_string()],\n        }\n    }\n\n    fn name(&amp;self) -&gt; &amp;str {\n        &amp;self.name\n    }\n\n    fn iter(&amp;self) -&gt; Box&lt;dyn Iterator&lt;Item = &amp;String&gt; + '_&gt; {\n        Box::new(self.objects.iter())\n    }\n}\n</code></pre>\n\n<p>Trying to compile this example yields a lifetime error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0597]: `second` does not live long enough\n  --&gt; src/main.rs:3:9\n   |\n3  |         second\n   |         ^^^^^^ borrowed value does not live long enough\n...\n14 |     }))\n   |     - `second` dropped here while still borrowed\n</code></pre>\n\n<p>This is understandable, as the <code>second</code> object is a temporary, and the iterator returned from the same closure attempts to borrow it, failing as <code>second</code> is dropped at the closure's end.\nMy objective would be to extend the lifetime of this object until the Iterator referencing it is dropped, but I don't know how.</p>\n\n<p>Note that the structure implementations cannot be changed. Rust version is 1.34.2, edition 2018</p>\n"}, {"tags": ["rust", "dangling-pointer"], "answers": [{"tags": [], "owner": {"reputation": 311, "user_id": 2188242, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/25573db97e1da0343f8f3c6de03e6434?s=128&d=identicon&r=PG&f=1", "display_name": "sprajagopal", "link": "https://stackoverflow.com/users/2188242/sprajagopal"}, "is_accepted": false, "score": 0, "last_activity_date": 1561051556, "creation_date": 1561051556, "answer_id": 56691109, "question_id": 56690874, "link": "https://stackoverflow.com/questions/56690874/how-is-returning-a-variable-let-inside-a-function-allowed-in-rust/56691109#56691109", "title": "How is returning a variable &quot;let&quot; inside a function allowed in rust?", "body": "<p>I found the answer in <a href=\"https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html#return-values-and-scope\" rel=\"nofollow noreferrer\">this section</a>.</p>\n\n<pre><code>fn main() {\nlet s1 = gives_ownership();         // gives_ownership moves its return\n                                    // value into s1\n\nlet s2 = String::from(\"hello\");     // s2 comes into scope\n\nlet s3 = takes_and_gives_back(s2);  // s2 is moved into\n                                    // takes_and_gives_back, which also\n                                    // moves its return value into s3\n} \n\n// Here, s3 goes out of scope and is dropped. s2 goes out of scope but was\n// moved, so nothing happens. s1 goes out of scope and is dropped.\n\nfn gives_ownership() -&gt; String {             // gives_ownership will move its\n                                             // return value into the function\n                                             // that calls it\n\n    let some_string = String::from(\"hello\"); // some_string comes into scope\n\n    some_string                              // some_string is returned and\n                                             // moves out to the calling\n                                             // function\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 138, "user_id": 10453819, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/50f2dec01ab3125d1d7a551fad5dff80?s=128&d=identicon&r=PG&f=1", "display_name": "effect", "link": "https://stackoverflow.com/users/10453819/effect"}, "is_accepted": false, "score": 1, "last_activity_date": 1561075774, "creation_date": 1561075774, "answer_id": 56695328, "question_id": 56690874, "link": "https://stackoverflow.com/questions/56690874/how-is-returning-a-variable-let-inside-a-function-allowed-in-rust/56695328#56695328", "title": "How is returning a variable &quot;let&quot; inside a function allowed in rust?", "body": "<p>It sounds like you are thinking that <code>j</code> is allocated on the stack frame of <code>test_json_lifetime()</code> (that memory gets deallocated at the end of the function when the stack unwinds), and we return a reference to <code>j</code> (which would result in a dangling pointer).</p>\n\n<p>In this case, you are correct that <code>j</code> gets allocated on the stack, however when we return <code>Ok(j)</code> we do not return a reference to <code>j</code>, rather we copy <code>j</code> to the space for the <code>Result&lt;(Value)&gt;</code> that was allocated on <code>main()</code>'s stack frame before the function call to <code>test_json_lifetime()</code>.</p>\n"}], "owner": {"reputation": 311, "user_id": 2188242, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/25573db97e1da0343f8f3c6de03e6434?s=128&d=identicon&r=PG&f=1", "display_name": "sprajagopal", "link": "https://stackoverflow.com/users/2188242/sprajagopal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1561075774, "creation_date": 1561050671, "last_edit_date": 1561051910, "question_id": 56690874, "link": "https://stackoverflow.com/questions/56690874/how-is-returning-a-variable-let-inside-a-function-allowed-in-rust", "title": "How is returning a variable &quot;let&quot; inside a function allowed in rust?", "body": "<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b96201c4081121965ad3dc85ecc22476\" rel=\"nofollow noreferrer\">This example</a> compiles and returns the \"expected\" output. But is this not a dangling pointer scenario? If so, how come the rust compiler allows this?</p>\n\n<pre><code>use serde_json::{Value, json};\nuse std::io::Result;\n\nfn main(){\n    println!(\"{:#?}\", test_json_lifetime());\n}\n\nfn test_json_lifetime() -&gt; Result&lt;(Value)&gt; {                            \n    let j = json!({ \"name\" : \"test\" }); \n    Ok(j)\n}\n</code></pre>\n"}, {"tags": ["rust", "macros", "arguments", "parameter-passing", "rust-decl-macros"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 1, "last_activity_date": 1561048893, "last_edit_date": 1561048893, "creation_date": 1561048405, "answer_id": 56690395, "question_id": 56690039, "link": "https://stackoverflow.com/questions/56690039/why-do-i-get-unexpected-token-when-trying-to-call-an-inner-macro-with-the-argu/56690395#56690395", "title": "Why do I get &quot;unexpected token&quot; when trying to call an inner macro with the argument of an outer macro?", "body": "<p>After the call to <code>higher!</code>, <code>x(7)</code> has been parsed as a complete <em>expression</em> held by the macro variable <code>$xstuff</code>:</p>\n\n<pre><code>    ($xstuff:expr, $a:expr) =&gt; { /* ... */ }\n//           ^~~~\n</code></pre>\n\n<p>However, neither of the macro rules for <code>lower!</code> accept an arbitrary expression as the first argument, they only accept the token <code>x</code>:</p>\n\n<pre><code>    (x, $a:expr) =&gt; { /* ... */ }\n//   ^\n    (x($b:expr), $a:expr) =&gt; { /* ... */ }\n//   ^\n</code></pre>\n\n<p>The easiest fix is to place the same restrictions about the <code>x</code> in the higher macro:</p>\n\n<pre><code>macro_rules! higher {\n    (x($xstuff:expr), $a:expr) =&gt; {\n        lower!(x($xstuff), $a)\n    };\n}\n</code></pre>\n\n<p>An alternate solution (that changes the calling syntax) is to not immediately parse <code>x(7)</code> as an expression, but instead a collection of token trees. You need to add additional grouping at the call site so that the parser knows when to stop though:</p>\n\n<pre><code>macro_rules! higher {\n    (($($xstuff:tt)*), $a:expr) =&gt; {\n        lower!($($xstuff)*, $a)\n    };\n}\n\nfn main() {\n    higher!((x(7)), '9');\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"http://danielkeep.github.io/tlborm/book/\" rel=\"nofollow noreferrer\">The Little Book of Rust Macros</a>\n\n<ul>\n<li><a href=\"http://danielkeep.github.io/tlborm/book/mbe-min-captures-and-expansion-redux.html\" rel=\"nofollow noreferrer\">Captures and Expansion Redux</a></li>\n</ul></li>\n</ul>\n"}], "owner": {"reputation": 2509, "user_id": 3719101, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/Z4L8i.jpg?s=128&g=1", "display_name": "iago-lito &#39;considering leaving", "link": "https://stackoverflow.com/users/3719101/iago-lito-considering-leaving"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 607, "favorite_count": 0, "accepted_answer_id": 56690395, "answer_count": 1, "score": 0, "last_activity_date": 1561048893, "creation_date": 1561047067, "last_edit_date": 1561047993, "question_id": 56690039, "link": "https://stackoverflow.com/questions/56690039/why-do-i-get-unexpected-token-when-trying-to-call-an-inner-macro-with-the-argu", "title": "Why do I get &quot;unexpected token&quot; when trying to call an inner macro with the argument of an outer macro?", "body": "<p>I don't understand this failure while trying to pass the expression received by the <code>higher!</code> macro to the <code>lower!</code> macro:</p>\n\n<pre><code>// A low-level macro using only Rust primitives.\nmacro_rules! lower {\n    (x, $a:expr) =&gt; {\n        println!(\"x is {}\", $a);\n    };\n    (x($b:expr), $a:expr) =&gt; {\n        println!(\"x({}) is rather {}\", $b, $a);\n    };\n}\n\n// A higher-level macro using my own previous macro.\nmacro_rules! higher {\n    ($xstuff:expr, $a:expr) =&gt; {\n        // Here, I expect transferring the expression $xstuff to lower!.. but it fails.\n        lower!($xstuff, $a)\n    };\n}\n\nfn main() {\n    lower!(x, '5'); // x is 5\n    lower!(x(8), '6'); // x(8) is rather 6\n\n    higher!(x(7), '9'); \n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error: no rules expected the token `x(7)`\n  --&gt; src/main.rs:15:16\n   |\n2  | macro_rules! lower {\n   | ------------------ when calling this macro\n...\n15 |         lower!($xstuff, $a)\n   |                ^^^^^^^ no rules expected this token in macro call\n...\n23 |     higher!(x(7), '9'); \n   |     ------------------- in this macro invocation\n</code></pre>\n\n<p>I would expect this last token to be expected by the rule in <code>lower!</code>, but the compiler tells me it is unexpected. What am I missing here?  How can I transfer the expression received by <code>higher!</code> as <code>$xstuff</code> to <code>lower!</code>?</p>\n"}, {"tags": ["rust", "postgis", "serde", "rust-diesel"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1561047637, "post_id": 56690007, "comment_id": 99945779, "body": "Welcome to Stack Overflow! Thank you for (a) looking for existing solutions and showing what you tried (b) providing a complete example that produces your error/ That&#39;s wonderful, especially for your first SO question! Next time, please also try to <i>minimize</i> your problem. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1561047760, "creation_date": 1561047760, "answer_id": 56690238, "question_id": 56690007, "link": "https://stackoverflow.com/questions/56690007/the-trait-serdedeserialize-is-not-implemented-for-diesel-geographytyp/56690238#56690238", "title": "the trait `serde::Deserialize&lt;&#39;_&gt;` is not implemented for `diesel_geography::types::GeogPoint`", "body": "<p>Serde is an <a href=\"https://github.com/Boscop/diesel-geography/blob/b853f2c4b9a413d9f9e1140baaa56d238a451d53/Cargo.toml#L16\" rel=\"nofollow noreferrer\">optional dependency of diesel-geography</a>. You need to enable the feature: </p>\n\n<pre><code>[dependencies]\ndiesel-geography = { version = \"0.2.0\", features = [\"serde\"] }\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 11676992, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-f3eWOA2Nz5g/AAAAAAAAAAI/AAAAAAAAAMk/rdHWTX9WNtk/photo.jpg?sz=128", "display_name": "Juant", "link": "https://stackoverflow.com/users/11676992/juant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1448, "favorite_count": 0, "accepted_answer_id": 56690238, "answer_count": 1, "score": 3, "last_activity_date": 1561047760, "creation_date": 1561046964, "last_edit_date": 1561047539, "question_id": 56690007, "link": "https://stackoverflow.com/questions/56690007/the-trait-serdedeserialize-is-not-implemented-for-diesel-geographytyp", "title": "the trait `serde::Deserialize&lt;&#39;_&gt;` is not implemented for `diesel_geography::types::GeogPoint`", "body": "<p>I'm trying to use Diesel and diesel_geography to read from a PostGIS database using Rust.</p>\n\n<p>Here's the error I'm getting:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0277]: the trait bound `diesel_geography::types::GeogPoint: serde::Serialize` is not satisfied\n  --&gt; src/models.rs:11:5\n   |\n11 |     pub coordinates: GeogPoint,\n   |     ^^^ the trait `serde::Serialize` is not implemented for `diesel_geography::types::GeogPoint`\n   |\n   = note: required by `serde::ser::SerializeStruct::serialize_field`\n\nerror[E0277]: the trait bound `diesel_geography::types::GeogPoint: serde::Deserialize&lt;'_&gt;` is not satisfied\n  --&gt; src/models.rs:11:5\n   |\n11 |     pub coordinates: GeogPoint,\n   |     ^^^ the trait `serde::Deserialize&lt;'_&gt;` is not implemented for `diesel_geography::types::GeogPoint`\n   |\n   = note: required by `serde::de::SeqAccess::next_element`\n\nerror[E0277]: the trait bound `diesel_geography::types::GeogPoint: serde::Deserialize&lt;'_&gt;` is not satisfied\n  --&gt; src/models.rs:11:5\n   |\n11 |     pub coordinates: GeogPoint,\n   |     ^^^ the trait `serde::Deserialize&lt;'_&gt;` is not implemented for `diesel_geography::types::GeogPoint`\n   |\n   = note: required by `serde::de::MapAccess::next_value`\n</code></pre>\n\n<p>Looking around, I found that a similar error happens when there are several versions of <code>serde</code> used as dependency, this can be checked using <code>cargo tree -d</code>. I've tried and <code>serde</code> does not appear as a duplicate dependency.</p>\n\n<p>This is my code so far:</p>\n\n<p>Cargo.toml</p>\n\n<pre><code>[package]\nname = \"123\"\nversion = \"0.1.0\"\nauthors = [\"ASD\"]\nedition = \"2018\"\n\n[dependencies]\ndiesel = { version = \"1.4.2\", features = [\"postgres\"] }\nserde = { version = \"1.0\", features = [\"derive\"] } \nserde_json=\"1.0\"\n\ndotenv = \"0.14.1\"\n\ndiesel-geography = \"0.2.0\"\n</code></pre>\n\n<p>schema.rs</p>\n\n<pre><code>table! {\n    use diesel::sql_types::*;\n    use diesel_geography::sql_types::*;\n\n    users (email) {\n        email -&gt; Varchar,\n        password -&gt; Varchar,\n        coordinates -&gt; Geography\n    }\n}\n</code></pre>\n\n<p>models.rs</p>\n\n<pre><code>use diesel_geography::types::*;\nuse crate::schema::users;\nuse serde::{Serialize, Deserialize};\n\n#[derive(Debug, Serialize, Deserialize, Queryable, Insertable)]\n#[table_name = \"users\"]\npub struct User {\n    pub email: String,\n    pub password: String,\n    pub coordinates: GeogPoint\n}\n</code></pre>\n\n<p>main.rs</p>\n\n<pre><code>extern crate serde;\nextern crate dotenv;\n#[macro_use] extern crate diesel;\n//#[macro_use] extern crate serde_derive;\n\nmod models;\nmod schema;\nuse diesel::PgConnection;\nuse dotenv::dotenv;\nuse std::env;\n\nuse diesel::prelude::*;\n\nfn main() {\n    dotenv().ok();\n\n    let database_url = env::var(\"DATABASE_URL\")\n        .expect(\"DATABASE_URL must be set\");\n\n    let connection = PgConnection::establish(&amp;database_url)\n        .expect(&amp;format!(\"Error connecting to {}\", database_url));\n\n    use crate::schema::users::dsl::*;\n    use crate::models::User;\n\n    let results = users\n        .limit(5)\n        .load::&lt;User&gt;(&amp;connection)\n        .expect(\"Error loading users\");\n\n    println!(\"Displaying {} users\", results.len());\n\n    for user in results {\n        println!(\"{}\", user.email);\n        println!(\"----------\\n\");\n        println!(\"{}\", user.password);\n    }\n}\n</code></pre>\n"}, {"tags": ["json", "rust", "handlebars.js", "rust-diesel", "rust-rocket"], "comments": [{"owner": {"reputation": 3244, "user_id": 687438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cabf9d1f557d1ebb90dbe683981aca6?s=128&d=identicon&r=PG", "display_name": "Martin Gallagher", "link": "https://stackoverflow.com/users/687438/martin-gallagher"}, "edited": false, "score": 0, "creation_date": 1561041641, "post_id": 56688367, "comment_id": 99942347, "body": "This is probably not the solution; but I came across a similar issue recently on a project where I was using <code>serde_derive</code> crate instead of <code>serde::{Deserialize, Serialize}</code>"}, {"owner": {"reputation": 1, "user_id": 11676555, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e87d70111e7e0bfb6599483545449da6?s=128&d=identicon&r=PG&f=1", "display_name": "Red-Ex", "link": "https://stackoverflow.com/users/11676555/red-ex"}, "reply_to_user": {"reputation": 3244, "user_id": 687438, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cabf9d1f557d1ebb90dbe683981aca6?s=128&d=identicon&r=PG", "display_name": "Martin Gallagher", "link": "https://stackoverflow.com/users/687438/martin-gallagher"}, "edited": false, "score": 0, "creation_date": 1561105002, "post_id": 56688367, "comment_id": 99962941, "body": "Hello u32i64, I&#39;m using #[macro_use] extern crate serde_derive already in the main.rs file."}], "owner": {"reputation": 1, "user_id": 11676555, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e87d70111e7e0bfb6599483545449da6?s=128&d=identicon&r=PG&f=1", "display_name": "Red-Ex", "link": "https://stackoverflow.com/users/11676555/red-ex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 69, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1561042284, "creation_date": 1561041440, "last_edit_date": 1561042284, "question_id": 56688367, "link": "https://stackoverflow.com/questions/56688367/how-to-serialize-context-for-templaterender", "title": "How to Serialize context for Template::render", "body": "<p>I'm trying to use Handlebars with Rocket and Diesel. Unfortunately I didn't get this combination to work.</p>\n\n<p>First I build a simple rest-API using <a href=\"https://dzone.com/articles/creating-a-rest-api-in-rust-using-rocket-and-diese\" rel=\"nofollow noreferrer\">this tutorial</a>. Then I tried to test a handlebars-template without using the database-connection. This part works great.</p>\n\n<p>Next I tried the same template with use of the database-connection. If I use the same methods as in the API for the context-part oft the Template, I get compiler messages which I don't understand. In case that the REST API uses JSON from serde, I expected that the output should be <code>Serialize</code>.</p>\n\n<p>The faulty function:</p>\n\n<pre><code>#[get(\"/&lt;id&gt;\")]\npub fn index(id: i32, connection: DbConn) -&gt; Template\n{\n    let context = people::repository::index(id, &amp;connection).map(|person| Json(person)).map_err(|error| error_status(error));\n    Template::render(\"index\", &amp;context)\n};\n</code></pre>\n\n<p>The struct:</p>\n\n<pre><code>#[derive(Queryable, AsChangeset, Serialize, Deserialize)]\n#[table_name = \"people\"]\npub struct Person {\n    pub id: i32,\n    pub first_name: String,\n    pub last_name: String,\n    pub age: i32,\n    pub profession: String,\n    pub salary: i32,\n};\n</code></pre>\n\n<p>The database query:</p>\n\n<pre><code>pub fn index(id: i32, connection: &amp;PgConnection ) -&gt; QueryResult&lt;Person&gt; {\n    people::table.find(id).get_result::&lt;Person&gt;(connection)\n}\n</code></pre>\n\n<p>I expect a successful compilation. The error messages are as follows:</p>\n\n<pre><code>[E0277] the trait bound `rocket_contrib::json::Json&lt;people::Person&gt;: people::_IMPL_DESERIALIZE_FOR_Person::_serde::Serialize` is not satisfied. \n[Note] the trait `people::_IMPL_DESERIALIZE_FOR_Person::_serde::Serialize` is not implemented for `rocket_contrib::json::Json&lt;people::Person&gt;`\n[E0277] the trait bound `rocket::http::Status: people::_IMPL_DESERIALIZE_FOR_Person::_serde::Serialize` is not satisfied. \n[Note] the trait `people::_IMPL_DESERIALIZE_FOR_Person::_serde::Serialize` is not implemented for `rocket::http::Status`\n</code></pre>\n"}, {"tags": ["javascript", "rust", "webassembly"], "comments": [{"owner": {"reputation": 2273, "user_id": 6714194, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PBwT1.jpg?s=128&g=1", "display_name": "u32i64", "link": "https://stackoverflow.com/users/6714194/u32i64"}, "edited": false, "score": 0, "creation_date": 1561042056, "post_id": 56685410, "comment_id": 99942570, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/51047146/how-to-read-a-file-with-javascript-to-webassembly-using-rust\">How to read a file with JavaScript to WebAssembly using Rust?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "is_accepted": false, "score": 2, "last_activity_date": 1568824077, "creation_date": 1568824077, "answer_id": 57997158, "question_id": 56685410, "link": "https://stackoverflow.com/questions/56685410/pass-file-from-javascript-to-u8-in-rust-webassembly/57997158#57997158", "title": "Pass file from Javascript to u8 in Rust WebAssembly", "body": "<p>If you expose a function with an arg <code>data: &amp;[u8]</code></p>\n\n<pre><code>#[wasm_bindgen]\n#[allow(non_snake_case)]\n#[no_mangle]\npub fn processFile(fileData: &amp;[u8])\n</code></pre>\n\n<p>You can pass a byte array to it from JavaScript</p>\n\n<pre><code>let fileData = new Uint8Array(23);\n// populate data ...\nmod.processFile(fileData)\n</code></pre>\n\n<p>Perhaps just with the version I'm using</p>\n\n<pre><code>\u03bb wasm-pack -V\nwasm-pack 0.8.1\n</code></pre>\n\n<p>Array length might be an issue, (my code has fixed length data) I would pass the len in the function and validate it because I'm not sure how rustc could validate that otherwise.</p>\n"}], "owner": {"reputation": 39, "user_id": 9908167, "user_type": "registered", "profile_image": "https://graph.facebook.com/10156055970353961/picture?type=large", "display_name": "Ian Knowles", "link": "https://stackoverflow.com/users/9908167/ian-knowles"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 587, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1568824077, "creation_date": 1561031648, "question_id": 56685410, "link": "https://stackoverflow.com/questions/56685410/pass-file-from-javascript-to-u8-in-rust-webassembly", "title": "Pass file from Javascript to u8 in Rust WebAssembly", "body": "<p>I want to pass through a file from JavaScript and get access to it as a u8 array in Rust WebAssembly. I have done this in Emscripten c++ buffer by allocating memory and passing pointer but I can't fathom it in RUST and wasm-bindgen.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 3, "creation_date": 1561031298, "post_id": 56685275, "comment_id": 99936054, "body": "Something like <a href=\"https://doc.rust-lang.org/std/io/trait.Read.html\" rel=\"nofollow noreferrer\">the Read trait</a>?"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 0, "creation_date": 1561032790, "post_id": 56685275, "comment_id": 99936895, "body": "Both the <code>read_line</code> method you are calling on the result of <code>stdin.lock()</code> and the <code>lines()</code> method you are calling on the <code>BufReader::new(f)</code> are from the same <a href=\"https://doc.rust-lang.org/std/io/trait.BufRead.html\" rel=\"nofollow noreferrer\"><code>BufRead</code></a>. So you are already using the trait you are looking for!"}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "reply_to_user": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1561032825, "post_id": 56685275, "comment_id": 99936912, "body": "@PeterHall, no, not <code>Read</code>, but <code>BufRead</code>, because lines are wanted."}], "answers": [{"tags": [], "owner": {"reputation": 152, "user_id": 8656476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/945b1c30e3fef71ac52c1748e94a8555?s=128&d=identicon&r=PG", "display_name": "Quirinux", "link": "https://stackoverflow.com/users/8656476/quirinux"}, "is_accepted": false, "score": 2, "last_activity_date": 1561033868, "creation_date": 1561033868, "answer_id": 56686064, "question_id": 56685275, "link": "https://stackoverflow.com/questions/56685275/is-there-a-trait-to-read-from-stdin-or-from-file-in-rust/56686064#56686064", "title": "is there a trait to read from stdin or from file in rust?", "body": "<p>thanks @PeterHall, that Read trait thing lighted bulb on, I didn't realized that I could pass stdin to BufReader, so that does the trick:</p>\n\n<pre><code> let stdin = io::stdin();\n for line in BufReader::new(stdin).lines() {\n...\n</code></pre>\n\n<p>the same way that one does:</p>\n\n<pre><code>let f = File::open(file)?;\nfor line in BufReader::new(f).lines() {\n</code></pre>\n\n<p>This is what a I was looking for.</p>\n\n<p>Thanks a mil</p>\n"}], "owner": {"reputation": 152, "user_id": 8656476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/945b1c30e3fef71ac52c1748e94a8555?s=128&d=identicon&r=PG", "display_name": "Quirinux", "link": "https://stackoverflow.com/users/8656476/quirinux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 417, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1561033868, "creation_date": 1561031132, "question_id": 56685275, "link": "https://stackoverflow.com/questions/56685275/is-there-a-trait-to-read-from-stdin-or-from-file-in-rust", "title": "is there a trait to read from stdin or from file in rust?", "body": "<p>As a newbie on rust i wonder to know if there is way to use a single function/macro/anything-else to read a line from a passed file or from stdin, passing as argument a kind of buffer reader maybe?</p>\n\n<p>I haven't found anything that help yet, the following code works fine, once I was able to wrap some validations on a macro I know that code can be improved. I'm open for suggestion about how to improve that macro indeed</p>\n\n<pre><code>...\n\nmacro_rules! validate {\n    ($line:expr, $blank:expr, $squeeze:expr, $line_count:expr, $show_number:expr) =&gt; {\n        if $line.len() &lt;= 0 {\n            $blank +=1;\n        } else{\n            $blank = 0;\n        }\n        if $squeeze &amp; ($blank &gt; 1) {\n            continue;\n        }\n        if $show_number {\n            $line_count += 1;\n        }\n\n    }\n} \n\n\n...\n\nfor file in opt.files {\n        blank_line_count = 0;\n        line_count = 0;\n        if file.to_str() != Some(\"-\") {\n            let f = File::open(file)?;\n            for line in BufReader::new(f).lines() {\n                let l = line.unwrap();\n                validate!(l, blank_line_count, opt.squeeze_blank, line_count, opt.number); // will continue the loop if not valid\n                println!(\"{}\", format_line(l, opt.show_ends, opt.show_tabs, opt.show_nonprinting, line_count)); // will be skipped if not valid\n            }\n        } else {\n            let stdin = io::stdin();\n            let mut bytes_read: usize;\n            loop {\n                let mut line = String::new();\n                bytes_read = stdin.lock().read_line(&amp;mut line).expect(\"Could not read line\");\n                if bytes_read == 0 { break; }\n                line.pop();\n                validate!(line, blank_line_count, opt.squeeze_blank, line_count, opt.number);// will continue the loop if not valid\n                println!(\"{}\", format_line(line, opt.show_ends, opt.show_tabs, opt.show_nonprinting, line_count)); // will be skipped if not valid\n            }\n        }\n    }\n....\n</code></pre>\n\n<p>As shown File and stdin have different treatments, but they both basically do the same thing, run through a loop looking for a valid entry</p>\n"}, {"tags": ["json", "http", "rust"], "answers": [{"tags": [], "owner": {"reputation": 2244, "user_id": 1825860, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b9e1d70a0cbe81683a016e700d3239bf?s=128&d=identicon&r=PG", "display_name": "AlphaModder", "link": "https://stackoverflow.com/users/1825860/alphamodder"}, "is_accepted": false, "score": 1, "last_activity_date": 1561028959, "creation_date": 1561028959, "answer_id": 56684697, "question_id": 56684397, "link": "https://stackoverflow.com/questions/56684397/parsing-json-response-from-request-get-call-asynchronously/56684697#56684697", "title": "Parsing JSON response from request GET call asynchronously", "body": "<p>In order to use <code>Response::json</code>, you must implement <code>serde::Deserialize</code> for <code>Pokemon</code>. You can do this by adding the following to your Cargo.toml, under <code>[dependencies]</code>.</p>\n\n<pre><code>serde = { version = \"1.0\", features = [\"derive\"] }\n</code></pre>\n\n<p>Then, add <code>use serde::Deserialize;</code> at the top of your file, and change the declaration of <code>Pokemon</code> to:</p>\n\n<pre><code>#[derive(Deserialize)]\nstruct Pokemon {\n    id: i32,\n    name: String,\n    height: i32,\n    weight: i32,\n}\n</code></pre>\n"}], "owner": {"reputation": 10424, "user_id": 4047092, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/n5HM6.jpg?s=128&g=1", "display_name": "ravi", "link": "https://stackoverflow.com/users/4047092/ravi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1561028973, "creation_date": 1561027791, "last_edit_date": 1561028973, "question_id": 56684397, "link": "https://stackoverflow.com/questions/56684397/parsing-json-response-from-request-get-call-asynchronously", "title": "Parsing JSON response from request GET call asynchronously", "body": "<p>I am making a GET call to some API which in turn would return me <code>list</code> of JSON objects. However, I couldn't parse this into list of custom data structure. </p>\n\n<p>Closest I could come to</p>\n\n<pre><code>struct Pokemon {\n    id: i32,\n    name: String,\n    height: i32,\n    weight: i32,\n}\n\nlet mut response = client.get(\"http://pokeapi.co/api/v2/pokemon/111\")\n    .send()\n    .expect(\"Failed to send request\");\nif let Ok(pokemon) = response.json::&lt;Pokemon&gt;() {\n    println!(\"{:#?}\", pokemon);\n}\n</code></pre>\n\n<p>Could anyone please provide me suitable example for same. Also, is this the standard way of doing it. I mean what difference would it make to use something like </p>\n\n<pre><code>let url = url.parse().expect(\"API URL parsing bug\");\nlet request = Request::new(reqwest::Method::GET, url);\n\nself.inner\n    .execute(request)\n    .map_err(Error::Request)\n    .and_then(move |response: Response| {\n        ...\n    })\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 1, "creation_date": 1561023358, "post_id": 56682933, "comment_id": 99931831, "body": "As the doc says, &quot;If src implements Copy, it can be more performant to use copy_from_slice.&quot; <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.clone_from_slice\" rel=\"nofollow noreferrer\">doc.rust-lang.org/std/&hellip;</a>"}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561023828, "post_id": 56682933, "comment_id": 99932085, "body": "I don&#39;t think the solution is to improve the copy, you should avoid the copy. Use directly the buffer instead of having a temporary slice payload"}, {"owner": {"reputation": 1293, "user_id": 2249995, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f53e653eca1eeefa2389227c066135c?s=128&d=identicon&r=PG", "display_name": "timlyo", "link": "https://stackoverflow.com/users/2249995/timlyo"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561024441, "post_id": 56682933, "comment_id": 99932426, "body": "@Stargateur I&#39;ve added the example"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1561028400, "post_id": 56682933, "comment_id": 99934643, "body": "@Stargateur If you&#39;re going to modify some other slice there&#39;s no way around cloning or copying. If you&#39;re creating a new slice altogether you&#39;ll also have to clone or copy. If you want to avoid all sorts of clones and copies you&#39;ll have to use another data structure, which&#39;ll be more complicated and probably perform worse than just modifying a couple of bytes in a slice."}, {"owner": {"reputation": 1293, "user_id": 2249995, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f53e653eca1eeefa2389227c066135c?s=128&d=identicon&r=PG", "display_name": "timlyo", "link": "https://stackoverflow.com/users/2249995/timlyo"}, "edited": false, "score": 0, "creation_date": 1561029491, "post_id": 56682933, "comment_id": 99935169, "body": "I&#39;ve managed to get a version working by using <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.swap_with_slice\" rel=\"nofollow noreferrer\">swap_with_slice</a> although this doesn&#39;t seem to run much better in my benchmark. It seems to use copy_nonoverlapping under the hood."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1561029568, "post_id": 56682933, "comment_id": 99935204, "body": "What you will do with another language is probably copy the whole payload as a whole (3 short integers, it&#39;s nothing). That&#39;s what <code>copy_fom_slice</code> does. The only way to get faster would be to directly write the ints at the right place from the start, I guess."}, {"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1561029995, "post_id": 56682933, "comment_id": 99935409, "body": "@Cubic <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=af5a4bb88af1acf0a06e86d032611bb3\" rel=\"nofollow noreferrer\">play.rust-lang.org/&hellip;</a> ? I didn&#39;t understand your note"}, {"owner": {"reputation": 1293, "user_id": 2249995, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f53e653eca1eeefa2389227c066135c?s=128&d=identicon&r=PG", "display_name": "timlyo", "link": "https://stackoverflow.com/users/2249995/timlyo"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1561030005, "post_id": 56682933, "comment_id": 99935414, "body": "@DenysS&#233;guret The amount that I&#39;m copying in the real world code is variable and could be hundreds of bytes."}, {"owner": {"reputation": 65310, "user_id": 201725, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/616f7a1cbb20fe949d883393657c039a?s=128&d=identicon&r=PG", "display_name": "Jan Hudec", "link": "https://stackoverflow.com/users/201725/jan-hudec"}, "edited": false, "score": 2, "creation_date": 1561032091, "post_id": 56682933, "comment_id": 99936481, "body": "You only show how you do the clone, and the only other option semantically equivalent to that is copy. If you want to avoid copying, you need to show how you want to <i>use</i> the packet, because then there are options to come up with a way to share or transfer ownership of the data. It will probably use some variant of the <code>split</code>*<code>_mut</code> slice method, and some kind of smart pointer. But without larger context we don&#39;t know which is appropriate."}], "owner": {"reputation": 1293, "user_id": 2249995, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7f53e653eca1eeefa2389227c066135c?s=128&d=identicon&r=PG", "display_name": "timlyo", "link": "https://stackoverflow.com/users/2249995/timlyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1561031166, "creation_date": 1561022877, "last_edit_date": 1561029706, "question_id": 56682933, "link": "https://stackoverflow.com/questions/56682933/how-can-i-move-bytes-from-a-slice-into-the-middle-of-an-array-without-cloning", "title": "How can I move bytes from a slice into the middle of an array without cloning", "body": "<p>I'm trying to overwrite the payload of a packet. I currently have the following code, it works but benchmarking via perf has shown that cloning the payload of every packet has a significant overhead. What's the best way of doing this without cloning? I'm not afraid of unsafe if it's more efficient.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Packet {\n    buffer: [u8; 1613],\n}\n\nimpl Packet {\n    fn new() -&gt; Self {\n        Self {\n            buffer: [0; 1613],\n        }\n    }\n\n    fn clone_into_buffer(&amp;mut self, src: &amp;[u8; 1613]) {\n        self.buffer.clone_from_slice(src);\n    }\n}\n\nfn main() {\n    let mut packet = Packet::new();\n\n    packet.clone_into_buffer(&amp;[1; 1613]);\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=de733ae8ac02fc2a35cfb373e962117e\" rel=\"nofollow noreferrer\">playground link</a></p>\n"}, {"tags": ["concurrency", "rust", "mutex"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1561036381, "post_id": 56681822, "comment_id": 99939079, "body": "I suspect you do something inherently unsafe even in your first non deadlocking code. It&#39;s hard to tell without the real code but are you sure you shouldn&#39;t just have one lock for both the test and the operations you do when the condition is true ?"}], "answers": [{"comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1561025115, "post_id": 56682731, "comment_id": 99932824, "body": "The way the spec was written before, with explicit mention of if/let, was much clearer.  Now this feels a little ambiguous..."}, {"owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "edited": false, "score": 1, "creation_date": 1561034604, "post_id": 56682731, "comment_id": 99937974, "body": "I just got bitten by this behavior with a RefCell. <code>if let Some(_) = cell.borrow().compute_stuff() { cell.borrow_mut().boom(); }</code>: no borrow, so I thought it would be fine, but the guard spanning the entire <code>if</code> forced me to compute first and then match :)"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 8, "last_activity_date": 1561037127, "last_edit_date": 1561037127, "creation_date": 1561022165, "answer_id": 56682731, "question_id": 56681822, "link": "https://stackoverflow.com/questions/56681822/why-does-if-let-block-the-execution-with-usage-of-mutex/56682731#56682731", "title": "Why does &#39;if let&#39; block the execution with usage of Mutex?", "body": "<p><a href=\"https://doc.rust-lang.org/std/sync/struct.Mutex.html#method.lock\" rel=\"nofollow noreferrer\">The lock is released when the <code>LockResult</code> goes out of scope</a>.</p>\n\n<p>Now we have to go deeper in <a href=\"https://doc.rust-lang.org/reference/expressions.html#temporary-lifetimes\" rel=\"nofollow noreferrer\">scope rules regarding this temporary value</a>.</p>\n\n<p>The scope of a temporary value is the enclosing statement.</p>\n\n<p>In the first snippet, it means the lock goes out of scope before entering the if/let construct. There's no deadlock.</p>\n\n<p>But the scope of the temporary value in the <code>if let</code> condition is the whole if/let construct:</p>\n\n<blockquote>\n  <p>the lifetime of temporary values is typically</p>\n  \n  <ul>\n  <li>the innermost enclosing statement; the tail expression of a block is\n  considered part of the statement that encloses the block, or</li>\n  <li>the\n  condition expression or the loop conditional expression <strong>if the\n  temporary is created in the condition expression of an if</strong> or in the\n  loop conditional expression of a while expression.</li>\n  </ul>\n  \n  <p>When a temporary value expression is being created that is assigned into a let declaration, however, the temporary is created with the lifetime of the enclosing block instead, as using the enclosing let declaration would be a guaranteed error (since a pointer to the temporary would be stored into a variable, but the temporary would be freed before the variable could be used)</p>\n</blockquote>\n\n<p>In the second snippet, the lock's scope thus covers the whole if/let construct. </p>\n\n<p>This explains why the first lock is still active when you try to lock again in the loop.</p>\n"}], "owner": {"reputation": 4195, "user_id": 6882497, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/yMbwv.jpg?s=128&g=1", "display_name": "Akiner Alkan", "link": "https://stackoverflow.com/users/6882497/akiner-alkan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 606, "favorite_count": 0, "accepted_answer_id": 56682731, "answer_count": 1, "score": 8, "last_activity_date": 1561037127, "creation_date": 1561018706, "last_edit_date": 1561022465, "question_id": 56681822, "link": "https://stackoverflow.com/questions/56681822/why-does-if-let-block-the-execution-with-usage-of-mutex", "title": "Why does &#39;if let&#39; block the execution with usage of Mutex?", "body": "<p>I have bumped into this deadlock scenario while working with <code>Mutex</code></p>\n\n<p>The struct that contains a field of <code>Mutex</code> type is as follows:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct MyStruct {\n    inner_map: Arc&lt;Mutex&lt;HashMap&lt;i32, Vec&lt;i32&gt;&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>I have accessed this inner map via lock on Mutex:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl MyStruct {\n    fn test_lock(&amp;self, key: &amp;i32) {\n        let my_option = self.inner_map.lock().unwrap().remove(key);\n        if let Some(my_vec) = my_option {\n            for _inner_val in my_vec {\n                self.inner_map.lock().unwrap();\n                println!(\"Passed test_lock1\");\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>This is working fine without a deadlock since I removed the value from <code>HashMap</code> and get the ownership out of the <code>HashMap</code></p>\n\n<hr>\n\n<p>Very similar function to test_lock with only difference instead of declaring removed value to <code>my_option</code> variable used it on the fly <code>if let</code> call and <strong><em>it is causing deadlock in this case</em></strong>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>impl MyStruct{\n    // Why this function goes to deadlock since remove gets the ownership of the data?\n    fn test_lock2(&amp;self, key: &amp;i32) {\n        if let Some(my_vec) = self.inner_map.lock().unwrap().remove(key) {\n            for _inner_val in my_vec {\n                self.inner_map.lock().unwrap();\n                println!(\"Passed test_lock2\");\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>What is the main reason why declaring a variable changes that kind of behavior?</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ebd680598b4d7d542fd880b98514fca8\" rel=\"noreferrer\">Playground</a></p>\n"}, {"tags": ["module", "rust"], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 11674138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4970049f579ce4fbe911b1f8fafe5f86?s=128&d=identicon&r=PG&f=1", "display_name": "Nilanjan Goswami", "link": "https://stackoverflow.com/users/11674138/nilanjan-goswami"}, "edited": false, "score": 1, "creation_date": 1561356170, "post_id": 56680458, "comment_id": 100020451, "body": "Thanks for your help. I was still not able to refer to the objects. Then I tried this: &quot;use project_name::parser::Whatever;&quot; This worked."}], "tags": [], "owner": {"reputation": 13536, "user_id": 227, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/10bfbb2c24e45e5bc9b7f4665703f7bd?s=128&d=identicon&r=PG", "display_name": "Ishmaeel", "link": "https://stackoverflow.com/users/227/ishmaeel"}, "is_accepted": false, "score": 2, "last_activity_date": 1561013285, "creation_date": 1561013285, "answer_id": 56680458, "question_id": 56680200, "link": "https://stackoverflow.com/questions/56680200/how-to-access-modules-from-parent-or-sibling-folder-modules/56680458#56680458", "title": "How to access modules from parent or sibling folder modules?", "body": "<p>Your first option is absolute paths:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::parser::Whatever;\nuse crate::solver::Another;\n</code></pre>\n\n<p><code>crate</code> here is a keyword representing the crate root.</p>\n\n<p>You can also use relative paths for advanced scenarios. Both solutions are discussed very nicely in the relevant <a href=\"https://doc.rust-lang.org/book/ch07-04-bringing-paths-into-scope-with-the-use-keyword.html\" rel=\"nofollow noreferrer\">Rust Documentation</a></p>\n\n<p>Also, don't forget that you need to make the modules public. They will be private by default and not accessible from parents or siblings.</p>\n"}, {"tags": [], "owner": {"reputation": 2273, "user_id": 6714194, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PBwT1.jpg?s=128&g=1", "display_name": "u32i64", "link": "https://stackoverflow.com/users/6714194/u32i64"}, "is_accepted": false, "score": 1, "last_activity_date": 1561017893, "creation_date": 1561017893, "answer_id": 56681626, "question_id": 56680200, "link": "https://stackoverflow.com/questions/56680200/how-to-access-modules-from-parent-or-sibling-folder-modules/56681626#56681626", "title": "How to access modules from parent or sibling folder modules?", "body": "<p>To access <code>parser/parser.rs</code> and <code>another.rs</code> from anywhere in your crate, you can use absolute paths (here I am also using <a href=\"https://doc.rust-lang.org/book/ch07-04-bringing-paths-into-scope-with-the-use-keyword.html#using-nested-paths-to-clean-up-large-use-lists\" rel=\"nofollow noreferrer\">nested paths</a>, which is not required but makes the structure of modules more clear):</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::{\n    parser::parser,\n    another,\n};\n</code></pre>\n\n<p>You can also use relative paths with <code>super</code>, which refers to the parent module. More information is avaiable in <a href=\"https://stackoverflow.com/a/56680458/6714194\">@Ishmaeel's answer</a>.</p>\n\n<hr>\n\n<p>Regarding your code structure, it seems a little strange why you have <code>mod.rs</code> (not wrong, but just strange, especially <code>0</code>; you can totally leave <code>1</code> and <code>2</code> if you like it, but <code>0</code> might confuse you):</p>\n\n<pre><code>app/src\n    main.rs\n    another.rs\n    mod.rs        // 0\n    parser/\n        parser.rs\n        mod.rs    // 1\n    solver/\n        solve.rs\n        mod.rs    // 2\n</code></pre>\n\n<ul>\n<li><p><strong>Regarding <code>1</code> and <code>2</code>:</strong></p>\n\n<p><code>mod.rs</code> was used in the 2015 edition for being able to create nested modules, but is no longer needed <a href=\"https://doc.rust-lang.org/stable/edition-guide/rust-2018/module-system/path-clarity.html\" rel=\"nofollow noreferrer\">in the 2018 edition</a> (assuming that you are using the currently newest and default for cargo 2018 edition, see <a href=\"https://doc.rust-lang.org/stable/edition-guide/editions/index.html\" rel=\"nofollow noreferrer\">What are editions?</a>):</p>\n\n<blockquote>\n  <p>A <code>foo.rs</code> and <code>foo/</code> subdirectory may coexist; <code>mod.rs</code> is no longer needed when placing submodules in a subdirectory.</p>\n</blockquote></li>\n<li><p><strong>Regarding <code>0</code>:</strong></p>\n\n<p>The module you are defining via this is actually named <code>mod</code> (not <code>src</code> as you may have expected, though I'm not sure at all what you expected here), I'm unsure if you meant to do that. However if you did, there is still a way to access it via <a href=\"https://doc.rust-lang.org/stable/edition-guide/rust-2018/module-system/raw-identifiers.html\" rel=\"nofollow noreferrer\"><code>r#</code> - raw identifiers</a>, available since Rust 1.30:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::r#mod;\n</code></pre>\n\n<p>If you don't want to write <code>r#mod</code> all over the place, you can use <code>as</code> like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use crate::r#mod as new_name;\n</code></pre>\n\n<p>Then you can refer to the module via <code>new_name</code>.</p></li>\n</ul>\n"}], "owner": {"reputation": 21, "user_id": 11674138, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4970049f579ce4fbe911b1f8fafe5f86?s=128&d=identicon&r=PG&f=1", "display_name": "Nilanjan Goswami", "link": "https://stackoverflow.com/users/11674138/nilanjan-goswami"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 377, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1561018260, "creation_date": 1561012163, "last_edit_date": 1561018260, "question_id": 56680200, "link": "https://stackoverflow.com/questions/56680200/how-to-access-modules-from-parent-or-sibling-folder-modules", "title": "How to access modules from parent or sibling folder modules?", "body": "<p>I am trying to access modules from the <code>parser.rs</code> and <code>another.rs</code> in the <code>solve.rs</code>. How to include those modules and use the \"<code>use</code> statements\"? If that is not possible what should be the code structure?</p>\n\n<p>Here is the application folder tree:</p>\n\n<pre><code>app/src\n--- main.rs\n--- another.rs\n--- mod.rs\n--- parser/\n-------- parser.rs\n-------- mod.rs\n--- solver/\n-------- solve.rs\n-------- mod.rs\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17491, "user_id": 901827, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/86a6acccf7e8dbe398ebda4f8524ed50?s=128&d=identicon&r=PG", "display_name": "LinearZoetrope", "link": "https://stackoverflow.com/users/901827/linearzoetrope"}, "edited": false, "score": 0, "creation_date": 1561014166, "post_id": 56679615, "comment_id": 99927231, "body": "I can&#39;t really think of a way to do this without either reflection or a global registry of types. The latter isn&#39;t impossible, but would require significantly more infrastructure. Not answering because I&#39;m not 100% sure it&#39;s impossible, but I <i>strongly</i> suspect it is."}], "owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 87, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1561009341, "creation_date": 1561009341, "question_id": 56679615, "link": "https://stackoverflow.com/questions/56679615/dynamically-determine-enum-type-in-rust", "title": "Dynamically determine enum type in Rust", "body": "<p>I am reading the docs on <a href=\"https://docs.rs/strum/0.15.0/strum/\" rel=\"nofollow noreferrer\">strum crate</a>. It is mostly about getting the enum VARIANTs out from a string. Is it possible to get the enum type from a string. Specifically, is the following possible?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>extern crate strum;\nextern crate strum_macros;\nuse strum_macros::{Display, EnumIter}; \n\n#[derive(??, EnumIter, Debug)]\nenum TypeA { Variant1, Variant2 }\n\nfn main() {\n  for variant in magic_fn(\"TypeA\")::iter() {\n    println!(\"{:?}\", variant);\n  }\n}\n</code></pre>\n"}, {"tags": ["rust", "borrowing", "copy-on-write", "run-time-polymorphism"], "answers": [{"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 2, "last_activity_date": 1561030307, "creation_date": 1561030307, "answer_id": 56685049, "question_id": 56678540, "link": "https://stackoverflow.com/questions/56678540/a-hashmap-supporting-string-and-str/56685049#56685049", "title": "A Hashmap supporting String and &amp;str", "body": "<p>The built-in way to abstract over whether data is borrowed or owned is <a href=\"https://doc.rust-lang.org/std/borrow/enum.Cow.html\" rel=\"nofollow noreferrer\"><code>Cow</code></a>.</p>\n\n<pre><code>use std::borrow::Cow;\nuse std::collections::HashMap;\n\nfn mapping() -&gt; HashMap&lt;Cow&lt;'static, str&gt;, Cow&lt;'static, str&gt;&gt; {\n    let mut map = HashMap::new();\n    map.insert(\"first_name\".into(), \"MyFirstName\".into());\n    map.insert(\"last_name\".to_string().into(), \"MyLastName\".to_string().into());\n    map\n}\n</code></pre>\n\n<p>Both <code>&amp;str</code> and <code>String</code> can be converted to a <code>Cow&lt;str&gt;</code> using <code>.into()</code>.</p>\n"}], "owner": {"reputation": 842, "user_id": 523060, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/d75657f4b4c80a3eaf3db8c3c77104d8?s=128&d=identicon&r=PG", "display_name": "Jimmy Chu", "link": "https://stackoverflow.com/users/523060/jimmy-chu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 419, "favorite_count": 0, "accepted_answer_id": 56685049, "answer_count": 1, "score": 1, "last_activity_date": 1564960768, "creation_date": 1561001039, "last_edit_date": 1564960768, "question_id": 56678540, "link": "https://stackoverflow.com/questions/56678540/a-hashmap-supporting-string-and-str", "title": "A Hashmap supporting String and &amp;str", "body": "<p>How do I define a HashMap supporting both <code>String</code> and <code>&amp;str</code> in its key and content? I tried the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn mapping&lt;T: Into&lt;String&gt;&gt;() -&gt; HashMap&lt;T, T&gt; {\n  let mut map: HashMap&lt;T, T&gt; = HashMap::new();\n  map.insert(\"first_name\", \"MyFirstName\");\n  map.insert(\"last_name\".to_string(), \"MyLastName\".to_string());\n  map\n}\n\nfn main() {\n  let mut mapping = mapping();\n}\n</code></pre>\n\n<p>But it doesn't compile, saying:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0599]: no method named `insert` found for type `std::collections::HashMap&lt;T, T&gt;` in the current scope\nerror[E0277]: the trait bound `T: std::cmp::Eq` is not satisfied\nerror[E0277]: the trait bound `T: std::hash::Hash` is not satisfied\n</code></pre>\n"}, {"tags": ["types", "rust"], "answers": [{"comments": [{"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561018627, "post_id": 56680619, "comment_id": 99929396, "body": "<i>compiler needs to know the type of xs[j] in order to know what to do with the .0</i> - <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=be16af91a3a5e2ecff0fb69fa8f36246\" rel=\"nofollow noreferrer\">this</a> shouldn&#39;t compile either then ?"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561026097, "post_id": 56680619, "comment_id": 99933416, "body": "@&#214;merErden in your example, the compiler sees that <code>y</code> is never used, so I assume it doesn&#39;t try to fully typecheck the rhs expression. In the OP&#39;s case, <code>xs[j].0</code> is used as the return value from the closure. I assume the compiler cannot optimize as easily across function (or closure) boundaries, which is why it doesn&#39;t see that said return value is never used and can be ignored."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561028562, "post_id": 56680619, "comment_id": 99934721, "body": "Nope still works with <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=5f5f277e41ecfd82873c431a336f4a06\" rel=\"nofollow noreferrer\">printing y</a>. From my point, compiler is not able to find the type of <code>index(_)</code>&#39;s input from a type of <code>index(_)</code>&#39;s output. This is normal because <b>output</b> can be anything according to implementation of <code>SliceIndex</code> to the <b>input</b> but it also looks like it is not inferring  the input type from this line <code>f(0usize)</code> , maybe the question should be why it is not inferring from  <code>f(0usize)</code>?"}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561028655, "post_id": 56680619, "comment_id": 99934772, "body": "If it is about line order it explains why <code>f(0usize).0</code> works because input type is already known. But i don&#39;t know how type checker algorithm works."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "edited": false, "score": 0, "creation_date": 1561033106, "post_id": 56680619, "comment_id": 99937075, "body": "Good point. I don&#39;t know how it works in detail either, but this isn&#39;t the first time that I&#39;ve seen it work better when type information flows forward rather than backward."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 0, "last_activity_date": 1561013994, "creation_date": 1561013994, "answer_id": 56680619, "question_id": 56677371, "link": "https://stackoverflow.com/questions/56677371/why-does-this-closure-argument-need-an-explicit-type/56680619#56680619", "title": "Why does this closure argument need an explicit type?", "body": "<p>As explained in the <a href=\"https://stackoverflow.com/questions/56611350/why-does-indexing-an-explicitly-typed-vector-fail-with-a-type-inference-error\">duplicate</a> suggested by @Stargateur, Rust needs to know the type of the index so that it can determine the type of the result. In your first example, this is not an issue because you don't use <code>xs[j]</code> nor the result of the closure, so the compiler feels free to leave them as \"some as yet undefined type\" and optimizes them away without ever needing to know the type.</p>\n\n<p>In your second example however, you try to access <code>xs[j].0</code>, for which the compiler needs to know the type of <code>xs[j]</code> in order to know what to do with the <code>.0</code>.</p>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 915, "favorite_count": 0, "closed_date": 1561034355, "answer_count": 1, "score": 2, "last_activity_date": 1561013994, "creation_date": 1560988977, "last_edit_date": 1560994040, "question_id": 56677371, "link": "https://stackoverflow.com/questions/56677371/why-does-this-closure-argument-need-an-explicit-type", "closed_reason": "Duplicate", "title": "Why does this closure argument need an explicit type?", "body": "<p>Consider the following working <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=85fa3c7dfb1f7cea5b40df9888e95d32\" rel=\"nofollow noreferrer\">code</a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f() {\n    let xs = vec![(0, 0)];\n    let f = |j| xs[j];\n    let y = f(0usize);\n}\n</code></pre>\n\n<p>The following <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a2059bc39f19ead1e093597858bc7476\" rel=\"nofollow noreferrer\">variation</a> does not compile:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f() {\n    let xs = vec![(0, 0)];\n    let f = |j| xs[j].0;\n    let y = f(0usize);\n}\n</code></pre>\n\n<p>It fails as follows:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n --&gt; src/lib.rs:3:17\n  |\n3 |     let f = |j| xs[j].0;\n  |                 ^^^^^ cannot infer type\n  |\n  = note: type must be known at this point\n</code></pre>\n\n<p>To fix it, one must annotate <code>j</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn f() {\n    let xs = vec![(0, 0)];\n    let f = |j: usize| xs[j].0;\n    let y = f(0usize);\n}\n</code></pre>\n\n<p>The <a href=\"https://doc.rust-lang.org/book/ch13-01-closures.html#closure-type-inference-and-annotation\" rel=\"nofollow noreferrer\">Rust book</a> says:</p>\n\n<blockquote>\n  <p>Closures don\u2019t require you to annotate the types of the parameters or\n  the return value like fn functions do.</p>\n</blockquote>\n\n<p>Why must <code>j</code> be explicitly typed?</p>\n"}]