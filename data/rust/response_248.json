[{"tags": ["multithreading", "rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570662854, "post_id": 58313384, "comment_id": 102987646, "body": "It&#39;s hard to answer multiple questions made in one post. Please separate them into multiple questions so that we can help you better and so that your questions will help others in the future that have one of the same questions as you!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570662886, "post_id": 58313384, "comment_id": 102987653, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/33911792/155423\">How do I share access to an AtomicBool between threads?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58313384/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570664018, "post_id": 58313384, "comment_id": 102987855, "body": "See also <a href=\"https://stackoverflow.com/q/41331577/155423\">Joining a thread in a method that takes <code>&amp;mut self</code> (like drop) results in \u201ccannot move out of borrowed content\u201d</a>"}, {"owner": {"reputation": 431, "user_id": 3287359, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JNYJw.png?s=128&g=1", "display_name": "TechnoSam", "link": "https://stackoverflow.com/users/3287359/technosam"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570676426, "post_id": 58313384, "comment_id": 102990190, "body": "@Shepmaster Thank you for those links, they have resolved my issues! I did search a lot before posting, but I didn&#39;t know enough about what should be done to resolve my issue to figure out what to search, especially for the second issue. Thank you very much for your reply. I have no real preference between deleting the question or marking as duplicate, since it is a duplicate of two questions wrapped into one over-arching question."}], "owner": {"reputation": 431, "user_id": 3287359, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/JNYJw.png?s=128&g=1", "display_name": "TechnoSam", "link": "https://stackoverflow.com/users/3287359/technosam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 104, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1570662396, "creation_date": 1570662396, "question_id": 58313384, "link": "https://stackoverflow.com/questions/58313384/how-to-create-a-thread-manager", "title": "How to create a thread manager?", "body": "<p>I have a data stream that I want to process in the background, but I want to create a struct or some functions to manage this stream.</p>\n\n<p>In C++ land, I would create a class that abstracts all of this away. It would have a <code>start</code> method which would initialize the data stream and start a thread for processing. It would have a <code>stop</code> method that stops the processing and joins the thread.</p>\n\n<p>However, this isn't really Rusty, and it doesn't even work in Rust.</p>\n\n<p>Example (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=88c6f0cf2b5ea4748c95a897bcbed7de\" rel=\"nofollow noreferrer\">Playground</a>)</p>\n\n<pre><code>use std::thread;\nuse std::time::Duration;\n\nstruct Handler {\n    worker_handle: Option&lt;thread::JoinHandle&lt;()&gt;&gt;,\n    stop_flag: bool, // Should be atomic, but lazy for example\n}\n\nimpl Handler {\n\n    pub fn new() -&gt; Handler {\n        let worker_handle = None;\n        let stop_flag = true;\n\n        return Handler { worker_handle, stop_flag };\n    }\n\n    pub fn start(&amp;mut self) {\n        self.stop_flag = false;\n        self.worker_handle = Some(std::thread::spawn(move || {\n            println!(\"Spawned\");\n            self.worker_fn();\n        }));\n    }\n\n    pub fn stop(&amp;mut self) {\n        let handle = match self.worker_handle {\n            None =&gt; return,\n            Some(x) =&gt; x,\n        };\n        self.stop_flag = true;\n        handle.join();\n    }\n\n    fn worker_fn(&amp;mut self) {\n        while !self.stop_flag {\n            println!(\"Working!\");\n        }\n    }\n}\n\nfn main() {\n    let mut handler = Handler::new();\n    handler.start();\n    thread::sleep(Duration::from_millis(10000));\n    handler.stop();\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>error[E0495]: cannot infer an appropriate lifetime due to conflicting requirements\n  --&gt; src/main.rs:20:54\n   |\n20 |           self.worker_handle = Some(std::thread::spawn(move || {\n   |  ______________________________________________________^\n21 | |             println!(\"Spawned\");\n22 | |             self.worker_fn();\n23 | |         }));\n   | |_________^\n   |\nnote: first, the lifetime cannot outlive the anonymous lifetime #1 defined on the method body at 18:5...\n  --&gt; src/main.rs:18:5\n   |\n18 | /     pub fn start(&amp;mut self) {\n19 | |         self.stop_flag = false;\n20 | |         self.worker_handle = Some(std::thread::spawn(move || {\n21 | |             println!(\"Spawned\");\n22 | |             self.worker_fn();\n23 | |         }));\n24 | |     }\n   | |_____^\n   = note: ...so that the types are compatible:\n           expected &amp;mut Handler\n              found &amp;mut Handler\n   = note: but, the lifetime must be valid for the static lifetime...\nnote: ...so that the type `[closure@src/main.rs:20:54: 23:10 self:&amp;mut Handler]` will meet its required lifetime bounds\n  --&gt; src/main.rs:20:35\n   |\n20 |         self.worker_handle = Some(std::thread::spawn(move || {\n   |                                   ^^^^^^^^^^^^^^^^^^\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>Even if I cheat and remove the call the <code>worker_fn</code>, I still can't really work with <code>JoinHandle</code>s like I might expect from C++ land.</p>\n\n<pre><code>error[E0507]: cannot move out of `self.worker_handle.0` which is behind a mutable reference\n  --&gt; src/main.rs:27:28\n   |\n27 |         let handle = match self.worker_handle {\n   |                            ^^^^^^^^^^^^^^^^^^ help: consider borrowing here: `&amp;self.worker_handle`\n28 |             None =&gt; return,\n29 |             Some(x) =&gt; x,\n   |                  -\n   |                  |\n   |                  data moved here\n   |                  move occurs because `x` has type `std::thread::JoinHandle&lt;()&gt;`, which does not implement the `Copy` trait\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>So it's clear that I'm going outside of the usual Rust model and probably shouldn't be using this strategy.</p>\n\n<p>But I still want to build <em>some</em> kind of interface that lets me simply spin up the data stream without worrying about managing threads, and I'm not really sure the best way to do this.</p>\n\n<p>So it seems I have two core problems.</p>\n\n<p>1) How can I create a function to be run in a thread which accepts data from an outside source, and can be signaled to quit safely? If I had an atomic bool for killing it, how would I share that between the threads?</p>\n\n<p>2) How do I handle joining the thread when I'm done? The <code>stop</code> method needs to clean up the thread, but I don't know how to track a reference to it.</p>\n"}, {"tags": ["visual-studio-code", "rust", "windows-subsystem-for-linux", "rls"], "comments": [{"owner": {"reputation": 477, "user_id": 7422721, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-KD2jIvbb3Wg/AAAAAAAAAAI/AAAAAAAAEng/x6D0iaJwpuY/photo.jpg?sz=128", "display_name": "Majus Misiak", "link": "https://stackoverflow.com/users/7422721/majus-misiak"}, "edited": false, "score": 0, "creation_date": 1570991497, "post_id": 58312319, "comment_id": 103083568, "body": "I had the same problem with <code>Remote SSH</code> and Linux VM wunning on Windows (Virtual Box). What helped was manually installing Rust Language Server <code>rustup component add rls rust-analysis rust-src</code> and rebooting the VM. Not sure about the root cause though."}], "answers": [{"tags": [], "owner": {"reputation": 370, "user_id": 4842378, "user_type": "registered", "profile_image": "https://graph.facebook.com/956662497699762/picture?type=large", "display_name": "Scott", "link": "https://stackoverflow.com/users/4842378/scott"}, "is_accepted": false, "score": 0, "last_activity_date": 1582125296, "creation_date": 1582125296, "answer_id": 60303460, "question_id": 58312319, "link": "https://stackoverflow.com/questions/58312319/couldnt-start-client-rust-language-server/60303460#60303460", "title": "Couldn&#39;t start client Rust Language Server", "body": "<p>I had this problem as well with WSL and Visual Studio Code.  The problem seems to stem from the fact that the Rust Language Server needs to find <code>rustup</code> in your path.  We both probably followed the same path of using a package manager to install <code>cargo</code>, and therefore, the rust compiler tools.  This does not include <code>rustup</code> which you can actually use to keep the rust toolchain up-to-date.  <code>rustup</code> also appears to be the preferred method of installing the rust toolchain on your system.</p>\n\n<p>After installing <code>rustup</code> with the default setup, you should see a <code>.rustup</code> directory in your home directory.  This is where the toolchain lives.  The install text all stated that it would add the toolchain to your environment path after logging out and back in, but I didn't have luck with this.  I'm currently using <code>fish</code> instead of <code>bash</code> and had to update the configuration to include the toolchain at startup.  Once I did that, I was able to have VSCode properly install and run the RLS.</p>\n"}, {"comments": [{"owner": {"reputation": 4229, "user_id": 9363973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Cbbp7.png?s=128&g=1", "display_name": "MindSwipe", "link": "https://stackoverflow.com/users/9363973/mindswipe"}, "edited": false, "score": 0, "creation_date": 1596447075, "post_id": 63226863, "comment_id": 111803982, "body": "You shouldn&#39;t need to reboot, as you can simply <a href=\"https://ss64.com/bash/source.html\" rel=\"nofollow noreferrer\"><code>source</code></a> the <code>.profile</code>/ <code>.bashrc</code> files"}], "tags": [], "owner": {"reputation": 7574, "user_id": 2010699, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pM0Aq.jpg?s=128&g=1", "display_name": "Giuseppe Galano", "link": "https://stackoverflow.com/users/2010699/giuseppe-galano"}, "is_accepted": false, "score": 0, "last_activity_date": 1596446802, "creation_date": 1596446802, "answer_id": 63226863, "question_id": 58312319, "link": "https://stackoverflow.com/questions/58312319/couldnt-start-client-rust-language-server/63226863#63226863", "title": "Couldn&#39;t start client Rust Language Server", "body": "<p>This worked for me for in a remote SSH environment with Ubuntu 20.04</p>\n<ol>\n<li>Edit .profile and .bashrc files in the user home directory</li>\n</ol>\n<p>In .profile, comment the following line:</p>\n<pre><code>export PATH=&quot;$HOME/.cargo/bin:$PATH&quot;\n</code></pre>\n<p>In both, add the following line:</p>\n<pre><code>[[ &quot;:$PATH:&quot; != *&quot;:$HOME/.cargo/bin:&quot;* ]] &amp;&amp; PATH=&quot;$HOME/.cargo/bin:${PATH}&quot;\n</code></pre>\n<ol start=\"2\">\n<li>Reboot.</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 2317, "user_id": 990159, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/7395687fa4f3903d6734daab8c1d1c57?s=128&d=identicon&r=PG&f=1", "display_name": "justin", "link": "https://stackoverflow.com/users/990159/justin"}, "is_accepted": false, "score": 0, "last_activity_date": 1611612732, "last_edit_date": 1611612732, "creation_date": 1611612386, "answer_id": 65893076, "question_id": 58312319, "link": "https://stackoverflow.com/questions/58312319/couldnt-start-client-rust-language-server/65893076#65893076", "title": "Couldn&#39;t start client Rust Language Server", "body": "<p>Even though if I run:</p>\n<pre><code>which rustup\n/Users/justincalleja/.cargo/bin/rustup\n</code></pre>\n<p>A simple entry of <code>rustup</code> in the VSCode settings for:</p>\n<blockquote>\n<p>&quot;Rust-client: Rustup Path Path to rustup executable. Ignored if rustup\nis disabled.&quot;</p>\n</blockquote>\n<p>wasn't enough and I had to put the absolute path to the rustup binary as shown above. After doing so, I reloaded the window and was then asked to download missing components (or dependencies - the prompt is gone now I forgot). After doing this, the VSCode plugin seems to be working fine. I can format the code at least.</p>\n<p>So it looks like it's some mismatch with VSCode's PATH and the PATH on my system. I'm not sure what it is but if you just want to get the extension to work, try using the absolute path to <code>rustup</code> in your Settings.</p>\n<p>(<strong>Note</strong>: <code>source &quot;$HOME/.cargo/env&quot;</code> is added automatically to your startup files like .bashrc. First thing I tried was adding it to the startup file of zsh; the shell I'm using and to which it wasn't added. But that doesn't work either. I'm using <code>rustc 1.49.0 (e1884a8e3 2020-12-29)</code> ).</p>\n"}, {"comments": [{"owner": {"reputation": 1131, "user_id": 444620, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/596b6b0c3c142c3cd7666ef9f4e60af9?s=128&d=identicon&r=PG", "display_name": "Paulus", "link": "https://stackoverflow.com/users/444620/paulus"}, "edited": false, "score": 0, "creation_date": 1614097242, "post_id": 66001600, "comment_id": 117277976, "body": "Hi Daniel, in my vscode (launched from wsl2), I only see User and Workspace tabs, not the Remote [WSL: Ubuntu-20.04] tab. Any idea why?"}, {"owner": {"reputation": 16091, "user_id": 2166409, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/153959f48258a9ccbe7ccee6131da4be?s=128&d=identicon&r=PG", "display_name": "Daniel Kmak", "link": "https://stackoverflow.com/users/2166409/daniel-kmak"}, "reply_to_user": {"reputation": 1131, "user_id": 444620, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/596b6b0c3c142c3cd7666ef9f4e60af9?s=128&d=identicon&r=PG", "display_name": "Paulus", "link": "https://stackoverflow.com/users/444620/paulus"}, "edited": false, "score": 0, "creation_date": 1615829700, "post_id": 66001600, "comment_id": 117807679, "body": "@Paulus Have you figured it out? I have no idea."}], "tags": [], "owner": {"reputation": 16091, "user_id": 2166409, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/153959f48258a9ccbe7ccee6131da4be?s=128&d=identicon&r=PG", "display_name": "Daniel Kmak", "link": "https://stackoverflow.com/users/2166409/daniel-kmak"}, "is_accepted": false, "score": 5, "last_activity_date": 1612779336, "last_edit_date": 1612779336, "creation_date": 1612222111, "answer_id": 66001600, "question_id": 58312319, "link": "https://stackoverflow.com/questions/58312319/couldnt-start-client-rust-language-server/66001600#66001600", "title": "Couldn&#39;t start client Rust Language Server", "body": "<p>Set <code>rust-client.rustupPath</code> in VSCode settings:</p>\n<pre><code>{\n    &quot;rust-client.rustupPath&quot;: &quot;~/.cargo/bin/rustup&quot;\n}\n</code></pre>\n<p>If you're using WSL on Windows then make sure you edit Rust extension <strong>WSL settings</strong>, not user/local settings.</p>\n<p>Tutorial:\n<a href=\"https://i.stack.imgur.com/3zTRr.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/3zTRr.png\" alt=\"\" /></a>\n<a href=\"https://i.stack.imgur.com/7MO6P.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/7MO6P.png\" alt=\"\" /></a></p>\n"}], "owner": {"reputation": 773, "user_id": 9408711, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a288a953384d55fc2242d676c4fb7c4f?s=128&d=identicon&r=PG&f=1", "display_name": "aitvann", "link": "https://stackoverflow.com/users/9408711/aitvann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2798, "favorite_count": 0, "answer_count": 4, "score": 8, "last_activity_date": 1612779336, "creation_date": 1570655223, "last_edit_date": 1592644375, "question_id": 58312319, "link": "https://stackoverflow.com/questions/58312319/couldnt-start-client-rust-language-server", "title": "Couldn&#39;t start client Rust Language Server", "body": "<p>I'm trying to figure out how to use rustc &amp; cargo from my WSL. I use VS Code and Rust (rls) plugin and can compile my code but there is a problem with RLS:</p>\n<blockquote>\n<p>Couldn't start client Rust Language Server</p>\n<p>Rustup not available. Install from <a href=\"https://www.rustup.rs/\" rel=\"noreferrer\">https://www.rustup.rs/</a></p>\n</blockquote>\n<p>How i can solve this problem?</p>\n"}, {"tags": ["types", "rust"], "comments": [{"owner": {"reputation": 707, "user_id": 3956549, "user_type": "registered", "profile_image": "https://graph.facebook.com/1316610025/picture?type=large", "display_name": "Carl Kevinson", "link": "https://stackoverflow.com/users/3956549/carl-kevinson"}, "edited": false, "score": 0, "creation_date": 1570655228, "post_id": 58311879, "comment_id": 102985683, "body": "Can you give an example of when this would be useful?"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1570655615, "post_id": 58311879, "comment_id": 102985825, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/30339831/155423\">What are some use cases for tuple structs?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58311879/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1570655686, "post_id": 58311879, "comment_id": 102985850, "body": "You may also want to set aside some time to re-read <i>The Rust Programming Language</i>, specifically <a href=\"https://doc.rust-lang.org/book/ch19-04-advanced-types.html#using-the-newtype-pattern-for-type-safety-and-abstraction\" rel=\"nofollow noreferrer\">Using the Newtype Pattern for Type Safety and Abstraction</a>."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1570655943, "post_id": 58311879, "comment_id": 102985932, "body": "See also <a href=\"https://stackoverflow.com/q/56500357/155423\">How do I reuse code for similar yet distinct types in Rust?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 194, "user_id": 10061864, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3e85c2644da1eb3183ec669998cd00ea?s=128&d=identicon&r=PG&f=1", "display_name": "szignal", "link": "https://stackoverflow.com/users/10061864/szignal"}, "is_accepted": false, "score": 0, "last_activity_date": 1571455688, "last_edit_date": 1571455688, "creation_date": 1571291165, "answer_id": 58425675, "question_id": 58311879, "link": "https://stackoverflow.com/questions/58311879/create-a-type-that-is-basically-string-but-incompatible-with-string/58425675#58425675", "title": "Create a type that is basically String, but incompatible with String?", "body": "<h2>Tuple struct</h2>\n\n<p>Someone already graciously answered with this newtype pattern. I provide boilerplate for a simple api and automatic deconstruction. Run the code on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=044807f1e6aa53130cd735bedaeaedcd\" rel=\"nofollow noreferrer\">play.rust...</a></p>\n\n<pre><code>struct SpecificStringType1(&amp;'static str);\nstruct SpecificStringType2(&amp;'static str);\n\nfn do_something(x: SpecificStringType1, y: SpecificStringType2) {\n    let val_1: String = x.to_string(); // No expensive cloning.\n    let val_2: &amp;str = y.as_str(); // No runtime penalty.\n\n    println!(\"{}\", val_1);\n    println!(\"{}\", val_2);\n}\n\nfn main() {\n     let val_1 = SpecificStringType1(\"hello\");\n     let val_2 = SpecificStringType2(\"hello2\");\n\n     do_something(val_1, val_2);\n     //do_something(val_1, val_1);\n}\n\nimpl SpecificStringType1 {\n    fn to_string(&amp;self) -&gt; String {\n        let SpecificStringType1(value) = self;\n        value.to_string()\n    }\n\n    fn as_str(&amp;self) -&gt; &amp;str {\n        let SpecificStringType1(value) = self;\n        &amp;value\n    }\n}\n\nimpl SpecificStringType2 {\n    fn to_string(&amp;self) -&gt; String {\n        let SpecificStringType2(value) = self;\n        value.to_string()\n    }\n\n    fn as_str(&amp;self) -&gt; &amp;str {\n        let SpecificStringType2(value) = self;\n        &amp;value\n    }\n}\n</code></pre>\n\n<h2>FromStr trait</h2>\n\n<p>Run the code on <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=47b1ae96ed332ed119f654d1d5d54e14\" rel=\"nofollow noreferrer\">play.rust...</a></p>\n\n<pre><code>use std::str::FromStr;\nuse std::fmt;\n\nfn do_something(x: SpecificStringType1, y: SpecificStringType2) {\n    let x_string = x.to_string();\n    let y_string = y.to_string();\n\n    println!(\"{}\", x_string);\n    println!(\"{}\", y_string);\n}\n\n\nfn main() {\n    let val_1: SpecificStringType1 = \"hello\".parse().unwrap();\n    let val_2: SpecificStringType2 = \"hello_2\".parse().unwrap();\n    let val_3: SpecificStringType2 = \"hello_2\".parse().unwrap();\n    let val_4: SpecificStringType2 = \"hello\".parse().unwrap();\n\n    do_something(val_1, val_2);\n    //do_something(val_3, val_4);\n\n    assert_eq!(val_3.to_string(), \"hello_2\".to_string());\n    assert_eq!(&amp;val_4.to_string(), \"hello\");\n    //assert_eq!(\n    //    \"hello\",\n    //    \"hello\".parse::&lt;SpecificStringType1&gt;().unwrap()\n    //)\n}\n\n#[derive(Debug, PartialEq)]\nstruct SpecificStringType1 {\n    value: String\n}\n\n#[derive(Debug, PartialEq)]\nstruct SpecificStringType2 {\n    value: String\n}\n\nimpl FromStr for SpecificStringType1 {\n    type Err = ();\n\n    fn from_str(s: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n        Ok(SpecificStringType1 {\n            value: s.to_string()\n        })\n    }\n}\n\nimpl FromStr for SpecificStringType2 {\n    type Err = ();\n\n    fn from_str(s: &amp;str) -&gt; Result&lt;Self, Self::Err&gt; {\n        Ok(SpecificStringType2 {\n            value: s.to_string()\n        })\n    }\n}\n\nimpl fmt::Display for SpecificStringType1 {\n    fn fmt(&amp;self, fmt: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        let str = self.value.as_ref();\n        fmt.write_str(str)\n    }\n}\n\nimpl fmt::Display for SpecificStringType2 {\n    fn fmt(&amp;self, fmt: &amp;mut fmt::Formatter) -&gt; fmt::Result {\n        let str = self.value.as_ref();\n        fmt.write_str(str)\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4687, "user_id": 3819850, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rwYcz.png?s=128&g=1", "display_name": "CinchBlue", "link": "https://stackoverflow.com/users/3819850/cinchblue"}, "is_accepted": false, "score": 1, "last_activity_date": 1571296177, "creation_date": 1571296177, "answer_id": 58426794, "question_id": 58311879, "link": "https://stackoverflow.com/questions/58311879/create-a-type-that-is-basically-string-but-incompatible-with-string/58426794#58426794", "title": "Create a type that is basically String, but incompatible with String?", "body": "<p>You could just wrap <code>String</code> with a tuple struct, creating a new distinct type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// This is a custom type which just wraps String,\n// however you can choose what it derives again.\n#[derive(Clone, Debug)]\nstruct MyString(String);\n\n// Since they are distinct types, type check will prevent using\n// String as MyString and vice versa.\nfn f1(s: &amp;String, t: &amp;String) -&gt; bool {\n    return true;    \n}\n\nfn f2(s: &amp;String, t: &amp;MyString) -&gt; bool {\n    return false;\n}\n\nfn main() {\n    let s: String = \"hello\".to_string();\n    let ms = MyString(\"goodbye\".to_string());\n    let MyString(ms_inner) = ms.clone();\n\n    println!(\"{:?}\", &amp;s);\n    println!(\"{:?}\", &amp;ms);\n\n    // Here is proof that it works.\n    println!(\"{}\", f1(&amp;s, &amp;ms_inner));\n    println!(\"{}\", f2(&amp;s, &amp;ms));\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a32994fab2cabb6495807726f246da1e\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a32994fab2cabb6495807726f246da1e</a></p>\n"}], "owner": {"reputation": 8608, "user_id": 1091116, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/15098b2b940cacd8b4d07026e01e3102?s=128&d=identicon&r=PG", "display_name": "d33tah", "link": "https://stackoverflow.com/users/1091116/d33tah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1571455688, "creation_date": 1570653185, "last_edit_date": 1570655578, "question_id": 58311879, "link": "https://stackoverflow.com/questions/58311879/create-a-type-that-is-basically-string-but-incompatible-with-string", "title": "Create a type that is basically String, but incompatible with String?", "body": "<p>I noticed that in my projects, I use a lot of <code>String</code> types where I don't really mean <code>String</code>s, but specific types of values contained within a <code>String</code>, that can't be told apart e.g. by using regular expressions, but should be differentiated from a code perspective. Is there a way to make compiler help me? For example, consider this function:</p>\n\n<pre><code>fn do_something(val1: String, val2: String) {}\n\nfn main() {\n    let val1: String = \"hello\";\n    let val2: String = \"hello2\";\n    do_something(val1, val2);\n}\n</code></pre>\n\n<p>Is there a way to create <code>SpecificStringType1</code> and <code>SpecificStringType2</code> so the first <code>do_something</code> call compiles, but the second doesn't?</p>\n\n<pre><code>fn do_something(val1: SpecificStringType1, val2: SpecificStringType2) {}\n\nfn main() {\n    let val1: SpecificStringType1 = \"hello\";\n    let val2: SpecificStringType2 = \"hello2\";\n    let val3: SpecificStringType2 = \"hello2\";\n    let val4: SpecificStringType2 = \"hello2\";\n    do_something(val1, val2);\n    do_something(val3, val4);\n}\n</code></pre>\n"}, {"tags": ["rust", "ffi"], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 5011992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a835b657c2be4bfcf000fd464634e471?s=128&d=identicon&r=PG&f=1", "display_name": "MrTheFoolish", "link": "https://stackoverflow.com/users/5011992/mrthefoolish"}, "edited": false, "score": 0, "creation_date": 1570659140, "post_id": 58311827, "comment_id": 102986842, "body": "Thanks! I knew I was doing something silly, though when I wrote the original code some months ago I couldn&#39;t find a good solution.  For <code>std::mem::forget(many_s);</code>, what is the guarantee that this doesn&#39;t leak? The only struct member I&#39;d expect to be allocated in heap for Vec would be the dynamic array, but perhaps in the future there is another Vec member on the heap. Do I just trust that the stdlib maintainers will keep Vec this way? This is more an academic question than a practical one - your solution works just fine for my needs."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 45, "user_id": 5011992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a835b657c2be4bfcf000fd464634e471?s=128&d=identicon&r=PG&f=1", "display_name": "MrTheFoolish", "link": "https://stackoverflow.com/users/5011992/mrthefoolish"}, "edited": false, "score": 0, "creation_date": 1570659277, "post_id": 58311827, "comment_id": 102986878, "body": "@MrTheFoolish I&#39;ve had the time in the plame to prepare a lot of stuff for you. most of it will answer your questions and probably start a few more :-) I might also turn all this info into articles somewhere, there&#39;s so little info on ffi"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1570656193, "last_edit_date": 1570656193, "creation_date": 1570653001, "answer_id": 58311827, "question_id": 58311426, "link": "https://stackoverflow.com/questions/58311426/how-do-i-use-cbindgen-to-return-and-free-a-boxvec/58311827#58311827", "title": "How do I use cbindgen to return and free a Box&lt;Vec&lt;_&gt;&gt;?", "body": "<p>Your question is a bit unclear, but I think that if I understood you right, you're confusing two things and being led down a dark alley as a result.</p>\n\n<p>In C, a dynamically-sized array, as you probably know, is identified by two things:</p>\n\n<ol>\n<li>Its starting position, as a pointer</li>\n<li>Its length</li>\n</ol>\n\n<p>Rust follows the same convention - a <code>Vec&lt;_&gt;</code>, below the hood, shares the same structure (well, almost. It has a capacity as well, but that's beside the point).</p>\n\n<p>Passing the boxed vector <strong>on top</strong> of a pointer is not only overkill, but extremely unwise. FFI bindings may be smart, but they're not smart enough to deal with a boxed complex type most of the time.</p>\n\n<p>To solve this, we're going to simplify your bindings. I've added a single element in <code>struct S</code> to show you how it works. I've also cleaned up your FFI boundary:</p>\n\n<pre><code>#[repr(C)]\n#[no_mangle]\npub struct S {\n    foo: u8\n}\n\n#[repr(C)]\npub struct s_arr {\n    arr: *mut S,\n    n: usize,\n    cap: usize\n}\n\n// Retrieve the vector back\npub unsafe extern \"C\" fn recombine_s_arr(ptr: *mut S, n: usize, cap: usize) -&gt; Vec&lt;S&gt; {\n    Vec::from_raw_parts(ptr, n, cap)\n}\n\n#[no_mangle]\npub unsafe extern \"C\" fn gen_s_arr() -&gt; s_arr {\n    let mut many_s: Vec&lt;S&gt; = Vec::new();\n\n    let output = s_arr {\n        arr: many_s.as_mut_ptr(),\n        n: many_s.len(),\n        cap: many_s.capacity()\n    };\n    std::mem::forget(many_s);\n    output\n}\n</code></pre>\n\n<p>With this, cbindgen returns the expected header definitions:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct {\n  uint8_t foo;\n} so58311426S;\n\ntypedef struct {\n  so58311426S *arr;\n  uintptr_t n;\n  uintptr_t cap;\n} so58311426s_arr;\n\nso58311426s_arr gen_s_arr(void);\n</code></pre>\n\n<p>This allows us to call <code>gen_s_arr()</code> from either C or Rust and retrieve a struct that is usable across both parts of the FFI boundary (<code>so58311426s_arr</code>). This struct contains all we need to be able to modify our array of <code>S</code> (well, <code>so58311426S</code> according to cbindgen).</p>\n\n<p>When passing through FFI, you need to make sure of a few simple things:</p>\n\n<ul>\n<li>You cannot pass raw boxes or non-primitive types; you will almost universally need to convert down to a set of pointers or change your definitions to accomodate (as I have done here)</li>\n<li>You most <em>definitely</em> do not pass raw vectors. At most, you pass a slice, as that is a primitive type (see the point above).</li>\n<li>You make sure to <code>std::mem::forget()</code> whatever you do not want to deallocate, and make sure to remember to deallocate it or reform it somewhere else.</li>\n</ul>\n\n<p>I will edit this question in an hour; I have a plane to get on to. Let me know if any of this needs clarifications and I'll get to it once I'm in the right country :-)</p>\n"}], "owner": {"reputation": 45, "user_id": 5011992, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a835b657c2be4bfcf000fd464634e471?s=128&d=identicon&r=PG&f=1", "display_name": "MrTheFoolish", "link": "https://stackoverflow.com/users/5011992/mrthefoolish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 355, "favorite_count": 1, "accepted_answer_id": 58311827, "answer_count": 1, "score": 3, "last_activity_date": 1570656193, "creation_date": 1570651055, "last_edit_date": 1570651284, "question_id": 58311426, "link": "https://stackoverflow.com/questions/58311426/how-do-i-use-cbindgen-to-return-and-free-a-boxvec", "title": "How do I use cbindgen to return and free a Box&lt;Vec&lt;_&gt;&gt;?", "body": "<p>I have a struct returned to C code from Rust. I have no idea if it's a good way to do things, but it does work for rebuilding the struct and freeing memory without leaks.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C)]\npub struct s {\n    // ...\n}\n\n#[repr(C)]\n#[allow(clippy::box_vec)]\npub struct s_arr {\n    arr: *const s,\n    n: i8,\n    vec: Box&lt;Vec&lt;s&gt;&gt;,\n}\n\n/// Frees memory that was returned to C code\npub unsafe extern \"C\" fn free_s_arr(a: *mut s_arr) {\n    Box::from_raw(s_arr);\n}\n\n/// Generates an array for the C code\npub unsafe extern \"C\" fn gen_s_arr() -&gt; *mut s_arr {\n    let many_s: Vec&lt;s&gt; = Vec::new();\n    // ... logic here\n\n    Box::into_raw(Box::new(s_arr {\n        arr: many_s.as_mut_ptr(),\n        n: many_s.len() as i8,\n        vec: many_s,\n    }))\n}\n</code></pre>\n\n<p>The C header is currently written by hand, but I wanted to try out cbindgen. The manual C definition for <code>s_arr</code> is:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>struct s_arr {\n    struct s *arr;\n    int8_t n;\n    void *_;\n};\n</code></pre>\n\n<p>cbindgen generates the following for <code>s_arr</code>:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>typedef struct Box_Vec_s Box_Vec_s;\n\ntypedef struct s_arr {\n        const s *arr;\n        int8_t n;\n        Box_Vec_s vec;\n} s_arr;\n</code></pre>\n\n<p>This doesn't work since <code>struct Box_Vec_s</code> is not defined. Ideally I would just want to override the cbindgen type generated for <code>vec</code> to make it <code>void *</code> since it requires no code changes and thus no additional testing, but I am open to other suggestions.</p>\n\n<p>I have looked through the cbindgen documentation, though not the examples, and couldn't find anything.</p>\n"}, {"tags": ["rust", "floating-point", "precision"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570645994, "post_id": 58309968, "comment_id": 102982006, "body": "Your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/50767912/155423\">How do I use floating point number literals when using generic types?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58309968/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570647366, "post_id": 58309968, "comment_id": 102982558, "body": "@Shepmaster Unless I&#39;m missing something, I think the num crate doesn&#39;t deal with issues caused by double rounding.  I updated the questions with some code that demonstrates this."}], "owner": {"reputation": 5358, "user_id": 1932452, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/7dfca62a1e4eb69f39ce00152862c70e?s=128&d=identicon&r=PG", "display_name": "wyer33", "link": "https://stackoverflow.com/users/1932452/wyer33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 124, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1570647716, "creation_date": 1570644731, "last_edit_date": 1570647716, "question_id": 58309968, "link": "https://stackoverflow.com/questions/58309968/how-to-preserve-the-accuracy-of-a-floating-point-literal-in-rust-when-using-gene", "title": "How to preserve the accuracy of a floating point literal in Rust when using generics?", "body": "<p>What's a reasonable strategy for preserving the accuracy of a floating point literal in Rust when using generics?  As an example, consider the following code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// External functions\nuse std::fmt::LowerExp;\n\n// Some random struct parameterized on a float type\nstruct Foo&lt;Float&gt; {\n    x: Float,\n    y: Float,\n}\n\n// Some random, generic function\nfn bar&lt;Float&gt;(x: Float)\nwhere\n    Float: LowerExp + From&lt;f32&gt;,\n{\n    let foo = Foo::&lt;Float&gt; { x, y: 0.45.into() };\n    println!(\"x = {:.16e} y = {:.16e}\", foo.x, foo.y);\n}\n\nfn main() {\n    bar::&lt;f32&gt;(0.45);\n    bar::&lt;f64&gt;(0.45);\n}\n</code></pre>\n\n<p>Here, we get the output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>x = 4.4999998807907104e-1 y = 4.4999998807907104e-1\nx = 4.5000000000000001e-1 y = 4.4999998807907104e-1\n</code></pre>\n\n<p>This makes sense.  The first <code>0.45</code> was parsed knowing whether or not we were an <code>f32</code> or an <code>f64</code>.  However, the second was parsed as an <code>f32</code> in both cases because of the trait <code>From&lt;f32&gt;</code>.  Now, I'd like the output to be</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>x = 4.4999998807907104e-1 y = 4.4999998807907104e-1\nx = 4.5000000000000001e-1 y = 4.5000000000000001e-1\n</code></pre>\n\n<p>where <code>y</code> is parsed and set using the precision of the generic <code>Float</code>.  One attempt to do that is by adding an additional trait of <code>From&lt;f64&gt;</code>.  However, this is not satisfied by <code>f32</code>, so we get a compiler error.  If we remove that use case and run the code:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// External functions\nuse std::fmt::LowerExp;\n\n// Some random struct parameterized on a float type\nstruct Foo&lt;Float&gt; {\n    x: Float,\n    y: Float,\n}\n\n// Some random, generic function\nfn bar&lt;Float&gt;(x: Float)\nwhere\n    //Float: LowerExp + From&lt;f32&gt;,\n    Float: LowerExp + From&lt;f32&gt; + From&lt;f64&gt;,\n{\n    let foo = Foo::&lt;Float&gt; { x, y: 0.45.into() };\n    println!(\"x = {:.16e} y = {:.16e}\", foo.x, foo.y);\n}\n\nfn main() {\n    //bar::&lt;f32&gt; (0.45);\n    bar::&lt;f64&gt;(0.45);\n}\n</code></pre>\n\n<p>we get what we want:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>x = 4.5000000000000001e-1 y = 4.5000000000000001e-1\n</code></pre>\n\n<p>at the expense of no longer working for <code>f32</code>.  Alternatively, it's been suggested that we can use the <code>num</code> crate.  Unfortunately, unless I'm missing something, this appears to run into an issue with <a href=\"https://www.exploringbinary.com/double-rounding-errors-in-floating-point-conversions/\" rel=\"nofollow noreferrer\">double rounding</a>.  The program:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>// External functions\nuse num::FromPrimitive;\nuse std::fmt::LowerExp;\n\n// Some random struct parameterized on a float type\nstruct Foo&lt;Float&gt; {\n    x: Float,\n    y: Float,\n}\n\n// Some random, generic function\nfn bar&lt;Float&gt;(x: Float)\nwhere\n    Float: LowerExp + FromPrimitive,\n{\n    let foo = Foo::&lt;Float&gt; {\n        x,\n        y: &lt;Float as FromPrimitive&gt;::from_f64(\n            0.5000000894069671353303618843710864894092082977294921875,\n        )\n        .unwrap(),\n    };\n    println!(\"x = {:.16e} y = {:.16e}\", foo.x, foo.y);\n}\n\nfn main() {\n    bar::&lt;f32&gt;(0.5000000894069671353303618843710864894092082977294921875f32);\n    bar::&lt;f64&gt;(0.5000000894069671353303618843710864894092082977294921875f64);\n}\n</code></pre>\n\n<p>Produces</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>x = 5.0000005960464478e-1 y = 5.0000011920928955e-1\nx = 5.0000008940696716e-1 y = 5.0000008940696716e-1\n</code></pre>\n\n<p>This is problematic because <code>x</code> and <code>y</code> differ in the <code>f32</code> case.</p>\n\n<p>Anyway, is there a reasonable strategy for insuring the floating point literal is converted the same in both cases?</p>\n"}, {"tags": ["rust", "serde"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570648295, "post_id": 58309196, "comment_id": 102982951, "body": "Why are you using <code>serialize_field</code> instead of <code>serialize_map</code>?"}, {"owner": {"reputation": 1908, "user_id": 196463, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d86508251e48b986057d34bf9ae3b6b3?s=128&d=identicon&r=PG", "display_name": "Korny", "link": "https://stackoverflow.com/users/196463/korny"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570653730, "post_id": 58309196, "comment_id": 102985094, "body": "I&#39;m serializing a struct, <code>GitInfo</code>, with a field which is a <code>HashMap</code>.  So I&#39;m using <code>serialize_struct</code> which returns a <code>SerializeStruct</code> which has no <code>serialize_map</code> method.  If there is some way to call <code>serialize_map</code> to make a new serialized version of the map, and then insert the results as a parameter to <code>serialize_field</code>, that&#39;d be awesome - but I haven&#39;t found a way to do that yet."}], "owner": {"reputation": 1908, "user_id": 196463, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d86508251e48b986057d34bf9ae3b6b3?s=128&d=identicon&r=PG", "display_name": "Korny", "link": "https://stackoverflow.com/users/196463/korny"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 566, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1570647970, "creation_date": 1570641456, "last_edit_date": 1570647970, "question_id": 58309196, "link": "https://stackoverflow.com/questions/58309196/how-do-i-use-serde-to-serialize-a-hashmap-with-non-serializable-keys", "title": "How do I use serde to serialize a HashMap with non-serializable keys?", "body": "<p>I have a <code>HashMap</code> as a value in a struct that I'm manually serializing:</p>\n\n<pre><code>pub struct GitInfo {\n    pub branches: HashMap&lt;Oid, Branch&gt;,\n}\n</code></pre>\n\n<p><code>Branch</code> is something I've defined, but <a href=\"https://docs.rs/git2/0.6.4/git2/struct.Oid.html\" rel=\"nofollow noreferrer\"><code>Oid</code></a> is an external type I don't own, with a <code>to_string()</code> method I'd be happy to use...</p>\n\n<p>I've read <a href=\"https://stackoverflow.com/questions/51276896/how-do-i-use-serde-to-serialize-a-hashmap-with-structs-as-keys-to-json\">How do I use Serde to serialize a HashMap with structs as keys to JSON?</a> but it refers to keys the author defined - I can't implement <code>Serialize</code> for <code>Oid</code> as it's not in my crate.  And I can't implement <code>Serialize</code> for <code>HashMap&lt;Oid, Branch&gt;</code> for similar reasons.</p>\n\n<p>Is there some way around this?  I could build a wrapper struct around <code>HashMap&lt;Oid, Branch&gt;</code> but that seems like overkill.</p>\n\n<p>It was suggested that I look at <a href=\"https://stackoverflow.com/questions/39383809/how-to-transform-fields-during-serialization-using-serde\">How to transform fields during serialization using Serde?</a> or <a href=\"https://stackoverflow.com/questions/58103801/how-can-i-implement-serialize-using-an-existing-display-trait-implementation\">How can I implement Serialize using an existing Display trait implementation?</a> - both seem to boil down to using <code>serialize_with</code> - which I could possibly do, but I'd have to use the <code>derive(Serialize)</code> macro, when I was planning to serialize <code>GitInfo</code> manually (see below).  Or I could use a wrapper object.</p>\n\n<p>If those are the only options, I could live with it, but it seems a bit surprising that there isn't a simpler way - is there some way to call a function like the <code>serialize_with</code> macro uses, but from within my <code>GitInfo</code> serialization?</p>\n\n<p>Something like:</p>\n\n<pre><code>impl Serialize for GitInfo {\n    fn serialize&lt;S&gt;(&amp;self, serializer: S) -&gt; Result&lt;S::Ok, S::Error&gt;\n    where\n        S: Serializer,\n    {\n        let mut state = serializer.serialize_struct(\"GitInfo\", 2)?;\n        state.serialize_field(\"other bits\", &amp;self.other_bits)?;\n        state.serialize_field(\"branches\", /* something */)?;\n        state.end()\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570635897, "post_id": 58307723, "comment_id": 102977307, "body": "Can you explain / expand what you don&#39;t understand about the error message? It says you need one specific type and you are providing a different type. The error message seems understandable to me."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570636232, "post_id": 58307723, "comment_id": 102977493, "body": "See also <a href=\"https://stackoverflow.com/q/55694827/155423\">Expected XYZ found ()</a>; <a href=\"https://stackoverflow.com/q/53818465/155423\">The example from the \u201cchaining computations\u201d section of the Tokio docs does not compile: \u201cexpected struct <code>std::io::Error</code>, found ()\u201d</a>."}], "answers": [{"tags": [], "owner": {"reputation": 543, "user_id": 1039984, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/933bc6d13c42486433166bdee49b6e70?s=128&d=identicon&r=PG", "display_name": "Victor Ermolaev", "link": "https://stackoverflow.com/users/1039984/victor-ermolaev"}, "is_accepted": true, "score": 0, "last_activity_date": 1570636573, "creation_date": 1570636573, "answer_id": 58307998, "question_id": 58307723, "link": "https://stackoverflow.com/questions/58307723/p2p-communications-in-rust/58307998#58307998", "title": "P2P communications in Rust", "body": "<p>thanks for the hints,</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let future = server.join(client);\n</code></pre>\n\n<p>has to be corrected to </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let future = server.join(client).map(|_| ())\n</code></pre>\n"}], "owner": {"reputation": 543, "user_id": 1039984, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/933bc6d13c42486433166bdee49b6e70?s=128&d=identicon&r=PG", "display_name": "Victor Ermolaev", "link": "https://stackoverflow.com/users/1039984/victor-ermolaev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "accepted_answer_id": 58307998, "answer_count": 1, "score": -1, "last_activity_date": 1570636573, "creation_date": 1570635640, "last_edit_date": 1570636181, "question_id": 58307723, "link": "https://stackoverflow.com/questions/58307723/p2p-communications-in-rust", "title": "P2P communications in Rust", "body": "<p>I am trying to write a P2P node. A node contains a list of peers, opens a listening port to let other nodes establish a communication channel and, at the same time, actively tries to establish the connection with some other chosen nodes. This choice is as such that there is a single connection between each pair of nodes (not implemented in the following snippet).</p>\n\n<p>I am trying to achieve this with Tokio using <code>futures</code> combinators.</p>\n\n<p><code>main.rs</code></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use failure::Error;\n\npub mod networking {\n    use failure::Error;\n\n    use std::net::SocketAddr;\n    use tokio::net::{TcpListener, TcpStream};\n    use tokio::prelude::*;\n\n    use crate::Config;\n    use futures::Future;\n\n    pub fn start(cfg: &amp;Config) -&gt; Result&lt;(), Error&gt; {\n        let myself = cfg.myself.parse::&lt;SocketAddr&gt;()?;\n        let others = cfg\n            .others\n            .iter()\n            .filter_map(|s| s.parse().ok())\n            .collect::&lt;Vec&lt;SocketAddr&gt;&gt;();\n\n        let server = TcpListener::bind(&amp;myself)?\n            .incoming()\n            .for_each(|socket| {\n                println!(\"Got a socket: {:?}\", socket);\n                future::ok(())\n            })\n            .map_err(|e| eprintln!(\"Error connecting: {:?}\", e));\n\n        let client = TcpStream::connect(&amp;others[0])\n            .map(|socket| {\n                println!(\"Got a socket: {:?}\", socket);\n            })\n            .map_err(|e| eprintln!(\"Error connecting: {:?}\", e));\n\n        let future = server.join(client);\n\n        tokio::run(future);\n\n        Ok(())\n    }\n}\n\nstruct Config {\n    myself: String,\n    others: Vec&lt;String&gt;,\n}\n\nfn main() -&gt; Result&lt;(), Error&gt; {\n    let config = Config {\n        myself: \"127.0.0.1:2501\".to_string(),\n        others: vec![\"127.0.0.1:2502\".to_string(), \"127.0.0.1:2503\".to_string()],\n    };\n    networking::start(&amp;config)\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=926a069ebe833c496e7e0d8e7b1c8bfb\" rel=\"nofollow noreferrer\">playground</a>)</p>\n\n<p>This does not work:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;futures::future::join::Join&lt;futures::future::map_err::MapErr&lt;futures::stream::for_each::ForEach&lt;tokio_tcp::incoming::Incoming, [closure@src/main.rs:23:23: 26:14], futures::future::result_::FutureResult&lt;(), std::io::Error&gt;&gt;, [closure@src/main.rs:27:22: 27:64]&gt;, futures::future::map_err::MapErr&lt;futures::future::map::Map&lt;tokio_tcp::stream::ConnectFuture, [closure@src/main.rs:30:18: 32:14]&gt;, [closure@src/main.rs:33:22: 33:64]&gt;&gt; as futures::future::Future&gt;::Item == ()`\n  --&gt; src/main.rs:37:9\n   |\n37 |         tokio::run(future);\n   |         ^^^^^^^^^^ expected tuple, found ()\n   |\n   = note: expected type `((), ())`\n              found type `()`\n   = note: required by `tokio::runtime::threadpool::run`\n</code></pre>\n\n<p>I understand what the compiler says, but I have no clue what exactly I have to correct.\nWhat should I correct to get the types right?</p>\n"}, {"tags": ["rust"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 3, "last_activity_date": 1570635310, "last_edit_date": 1570635310, "creation_date": 1570634343, "answer_id": 58307344, "question_id": 58307250, "link": "https://stackoverflow.com/questions/58307250/how-to-create-a-trait-that-specifies-the-associated-type-of-a-supertrait/58307344#58307344", "title": "How to create a trait that specifies the associated type of a supertrait?", "body": "<p>You need to place the restriction of the associated type on the supertrait:</p>\n\n<pre><code>trait LightMap: Index&lt;Coord, Output = LightValue&gt; + IndexMut&lt;Coord&gt; {}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/47018493/155423\">Traits with stricter associated type bounds than supertrait</a></li>\n<li><a href=\"https://stackoverflow.com/q/35799682/155423\">How do I bound a trait with a supertrait that uses the trait&#39;s associated type as a parameter?</a></li>\n<li><a href=\"https://stackoverflow.com/q/33520049/155423\">Constraints on associated trait types</a></li>\n<li><a href=\"https://stackoverflow.com/q/29345708/155423\">Matching a generic parameter to an associated type in an impl</a></li>\n<li><a href=\"https://stackoverflow.com/q/26070559/155423\">Is there any way to create a type alias for multiple traits?</a></li>\n<li><a href=\"https://stackoverflow.com/q/50650070/155423\">What does &quot;dyn&quot; mean in a type?</a></li>\n<li><a href=\"https://stackoverflow.com/q/34438755/155423\">Why would I implement methods on a trait instead of as part of the trait?</a></li>\n</ul>\n"}], "owner": {"reputation": 187, "user_id": 11852538, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/633771f3bee22ba05ecfceabdb4322f8?s=128&d=identicon&r=PG&f=1", "display_name": "jm4ier", "link": "https://stackoverflow.com/users/11852538/jm4ier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 1, "accepted_answer_id": 58307344, "answer_count": 1, "score": 4, "last_activity_date": 1570635310, "creation_date": 1570633958, "last_edit_date": 1570634127, "question_id": 58307250, "link": "https://stackoverflow.com/questions/58307250/how-to-create-a-trait-that-specifies-the-associated-type-of-a-supertrait", "title": "How to create a trait that specifies the associated type of a supertrait?", "body": "<p>I want to create an abstract trait that specifies an indexing type and a value type where any struct that implements the trait has to implement <code>Index&lt;IndexType&gt;</code> and <code>IndexMut&lt;IndexType&gt;</code> and defines the <code>Output</code> type which stays the same in every struct that implements the trait.</p>\n\n<p>I tried creating a trait, but it seems I can't specify the output type:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use std::ops::{Index, IndexMut};\n\nstruct Coord;\nstruct LightValue;\n\ntrait LightMap: Index&lt;Coord&gt; + IndexMut&lt;Coord&gt; {}\n\nimpl LightMap {\n    type Output = LightValue;\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>warning: trait objects without an explicit `dyn` are deprecated\n --&gt; src/lib.rs:8:6\n  |\n8 | impl LightMap {\n  |      ^^^^^^^^ help: use `dyn`: `dyn LightMap`\n  |\n  = note: `#[warn(bare_trait_objects)]` on by default\n\nerror[E0191]: the value of the associated type `Output` (from the trait `std::ops::Index`) must be specified\n --&gt; src/lib.rs:8:6\n  |\n8 | impl LightMap {\n  |      ^^^^^^^^ associated type `Output` must be specified\n\nerror[E0202]: associated types are not yet supported in inherent impls (see #8995)\n --&gt; src/lib.rs:9:5\n  |\n9 |     type Output = LightValue;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>If I don't specify the output type then <code>associated type Output must be specified</code> happens wherever I try to use the trait.</p>\n"}, {"tags": ["parsing", "rust", "pest"], "answers": [{"tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 3, "last_activity_date": 1570616681, "last_edit_date": 1570616681, "creation_date": 1570605116, "answer_id": 58298841, "question_id": 58298200, "link": "https://stackoverflow.com/questions/58298200/peg-parser-in-pest-to-match-regex-within-triple-quotes-tried-at-https-pest-rs/58298841#58298841", "title": "PEG parser in pest to match regex within triple quotes, tried at https://pest.rs/", "body": "<p>Your definition is very close to be correct with one caveat: the Pest negative predicate doesn't consume any input when succeeded. So the parser may become stuck and can't make progress if you only tell it not to match something.</p>\n\n<p>It also needs to know what to match. In this case, that would be anything. The Pest has a built-in rule <code>ANY</code> for that exact purpose:</p>\n\n<pre><code>tq = { \"\\\"\\\"\\\"\" }\n\nre = { (!tq ~ ANY)* }\n\nregex = { tq ~ re ~ tq }\n</code></pre>\n\n<p>If you want to dive in more deeply, there's <a href=\"https://pest.rs/book/grammars/grammars.html\" rel=\"nofollow noreferrer\">pest book</a>.</p>\n"}], "owner": {"reputation": 153, "user_id": 1664659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2e5ce42343188b363f611b10829127cf?s=128&d=identicon&r=PG", "display_name": "manu", "link": "https://stackoverflow.com/users/1664659/manu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 58298841, "answer_count": 1, "score": 1, "last_activity_date": 1616119707, "creation_date": 1570602492, "last_edit_date": 1616119707, "question_id": 58298200, "link": "https://stackoverflow.com/questions/58298200/peg-parser-in-pest-to-match-regex-within-triple-quotes-tried-at-https-pest-rs", "title": "PEG parser in pest to match regex within triple quotes, tried at https://pest.rs/", "body": "<p>I am writing a PEG file to be used in <a href=\"https://github.com/pest-parser/pest\" rel=\"nofollow noreferrer\">pest</a> for our dsl. There is need where i need to parse a key value where value is a regex within triple quote. I am unable to write a pest rule for it.</p>\n\n<p>The value is  <code>\"\"\"Some regex here\"\"\"</code></p>\n\n<p>Rule I defined is:</p>\n\n<pre><code>TQ = {\"\\\"\\\"\\\"\"}\n</code></pre>\n\n<p>and I need</p>\n\n<pre><code>regex = {TQ ~ Anything but not TQ ~ TQ}\n</code></pre>\n\n<p>I tried with </p>\n\n<pre><code>regex = {TQ ~(!TQ)* ~ TQ}\n</code></pre>\n\n<p>which doesn't work and not proper PEG</p>\n\n<pre><code>regex = {TQ ~ ANY* ~ TQ}\n</code></pre>\n\n<p>which greedily consumes all token even triple quotes at the end</p>\n\n<p>The rule should parse regex inside triple quotes like</p>\n\n<pre><code> \"\"\"^\\w+\\s+\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d\\s+\\d\\d\\:\\d\\d\\:\\d\\d\\s+AB_02V\\s+\\d+\\s+.*\"\"\"\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 8, "last_activity_date": 1570584658, "last_edit_date": 1570584658, "creation_date": 1570584355, "answer_id": 58295881, "question_id": 58295535, "link": "https://stackoverflow.com/questions/58295535/cannot-borrow-self-as-mutable-more-than-once-at-a-time-when-returning-a-resul/58295881#58295881", "title": "Cannot borrow `*self` as mutable more than once at a time when returning a Result containing a reference", "body": "<p>This is the same problem discussed in <a href=\"https://stackoverflow.com/q/38023871/155423\">Returning a reference from a HashMap or Vec causes a borrow to last beyond the scope it&#39;s in?</a>. Through <em>lifetime elision</em>, the lifetime of the <code>&amp;str</code> is tied to the lifetime of <code>&amp;self</code>. The compiler isn't aware that the borrow won't be used in the condition that an <code>Ok</code> is returned. It's overly conservative and disallows this code. This is a limitation of the current borrow checker implementation.</p>\n\n<p>If you did need the lifetime of the <code>Err</code> variant to be tied to the lifetime of the <code>Foo</code> instance, there's not much to be done in safe Rust. In your case, however, it seems unlikely that your <code>&amp;str</code> is intended to be tied to the lifetime of <code>self</code>, so you can use explicit lifetimes to avoid the problem. For example, a <code>&amp;'static str</code> is a common basic error type:</p>\n\n<pre><code>impl Foo {\n    fn mutable1(&amp;mut self) -&gt; Result&lt;(), &amp;'static str&gt; {\n        Ok(())\n    }\n\n    fn mutable2(&amp;mut self) -&gt; Result&lt;(), &amp;'static str&gt; {\n        self.mutable1()?;\n        self.mutable1()?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<blockquote>\n  <p>as it's the presence of the implicit return provided by <code>?</code></p>\n</blockquote>\n\n<p>Not really, as the same code with <em>explicit</em> returns has the same problem:</p>\n\n<pre><code>fn mutable2(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n    if let Err(e) = self.mutable1() {\n        return Err(e);\n    }\n    if let Err(e) = self.mutable1() {\n        return Err(e);\n    }\n    Ok(())\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/lib.rs:12:25\n   |\n8  |     fn mutable2(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n   |                 - let's call the lifetime of this reference `'1`\n9  |         if let Err(e) = self.mutable1() {\n   |                         ---- first mutable borrow occurs here\n10 |             return Err(e);\n   |                    ------ returning this value requires that `*self` is borrowed for `'1`\n11 |         }\n12 |         if let Err(e) = self.mutable1() {\n   |                         ^^^^ second mutable borrow occurs here\n\n</code></pre>\n"}], "owner": {"reputation": 2673, "user_id": 477168, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f9fe811b8339fd327447c08e837c8ef3?s=128&d=identicon&r=PG", "display_name": "cYrus", "link": "https://stackoverflow.com/users/477168/cyrus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1390, "favorite_count": 0, "accepted_answer_id": 58295881, "answer_count": 1, "score": 4, "last_activity_date": 1570584658, "creation_date": 1570580604, "last_edit_date": 1570584544, "question_id": 58295535, "link": "https://stackoverflow.com/questions/58295535/cannot-borrow-self-as-mutable-more-than-once-at-a-time-when-returning-a-resul", "title": "Cannot borrow `*self` as mutable more than once at a time when returning a Result containing a reference", "body": "<p>Why is the following invalid and what should I do instead to make it work?</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>struct Foo;\n\nimpl Foo {\n    fn mutable1(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n        Ok(())\n    }\n\n    fn mutable2(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n        self.mutable1()?;\n        self.mutable1()?;\n        Ok(())\n    }\n}\n</code></pre>\n\n<p>This code yields:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0499]: cannot borrow `*self` as mutable more than once at a time\n  --&gt; src/lib.rs:10:9\n   |\n8  |     fn mutable2(&amp;mut self) -&gt; Result&lt;(), &amp;str&gt; {\n   |                 - let's call the lifetime of this reference `'1`\n9  |         self.mutable1()?;\n   |         ----           - returning this value requires that `*self` is borrowed for `'1`\n   |         |\n   |         first mutable borrow occurs here\n10 |         self.mutable1()?;\n   |         ^^^^ second mutable borrow occurs here\n</code></pre>\n\n<p>There are many questions already with the same error but I cannot use them to address this one as it's the presence of the implicit return provided by <code>?</code> that causes the problem, without <code>?</code> the code compiles successfully, yet with warnings.</p>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=1152735b67a3309315ef9f39e60fd349\" rel=\"nofollow noreferrer\">Playground</a></p>\n"}, {"tags": ["rust", "libc"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 2, "creation_date": 1570579137, "post_id": 58295107, "comment_id": 102954341, "body": "Where did you get the <code>i32</code>? Could it have OS-specific flags in it, or just portable <code>open(3p)</code> ones, for example?"}, {"owner": {"reputation": 678, "user_id": 6094756, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-hQ5QCAvBEoE/AAAAAAAAAAI/AAAAAAAAABE/sAfws5YX9HQ/photo.jpg?sz=128", "display_name": "piegames", "link": "https://stackoverflow.com/users/6094756/piegames"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1570613127, "post_id": 58295107, "comment_id": 102964568, "body": "@Ry- I got it from some weird library wrapper."}], "answers": [{"comments": [{"owner": {"reputation": 678, "user_id": 6094756, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-hQ5QCAvBEoE/AAAAAAAAAAI/AAAAAAAAABE/sAfws5YX9HQ/photo.jpg?sz=128", "display_name": "piegames", "link": "https://stackoverflow.com/users/6094756/piegames"}, "edited": false, "score": 0, "creation_date": 1570619585, "post_id": 58298190, "comment_id": 102967978, "body": "When I do this, I get <code>Os { code: 22, kind: InvalidInput, message: &quot;Invalid argument&quot; }</code>. I know the flags are correct since when I call <code>libc::open</code> with the same arguments it works"}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 678, "user_id": 6094756, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-hQ5QCAvBEoE/AAAAAAAAAAI/AAAAAAAAABE/sAfws5YX9HQ/photo.jpg?sz=128", "display_name": "piegames", "link": "https://stackoverflow.com/users/6094756/piegames"}, "edited": false, "score": 0, "creation_date": 1570623832, "post_id": 58298190, "comment_id": 102970330, "body": "Sorry <code>mode</code> is for the access mode, the flags for <code>open(2)</code> are set with <code>custom_flags</code>. I&#39;ll update the answer."}, {"owner": {"reputation": 678, "user_id": 6094756, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-hQ5QCAvBEoE/AAAAAAAAAAI/AAAAAAAAABE/sAfws5YX9HQ/photo.jpg?sz=128", "display_name": "piegames", "link": "https://stackoverflow.com/users/6094756/piegames"}, "edited": false, "score": 0, "creation_date": 1570624355, "post_id": 58298190, "comment_id": 102970600, "body": "The flags I use is <code>526338</code>, if you want to test it yourself. I already tried <code>custom_flags</code>, but it didn&#39;t help. I also tried both (because the documentation says some things are masked and others aren&#39;t), but still the same error."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "reply_to_user": {"reputation": 678, "user_id": 6094756, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-hQ5QCAvBEoE/AAAAAAAAAAI/AAAAAAAAABE/sAfws5YX9HQ/photo.jpg?sz=128", "display_name": "piegames", "link": "https://stackoverflow.com/users/6094756/piegames"}, "edited": false, "score": 0, "creation_date": 1570626136, "post_id": 58298190, "comment_id": 102971648, "body": "You need to call either <code>read</code> or <code>write</code> to set the access mode (tested here: if I don&#39;t call either, I get the &quot;Invalid argument&quot; error even without <code>custom_flags</code>. If I call <code>.read (true)</code> then it works with <code>.custom_flags (526338)</code>)."}], "tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": true, "score": 3, "last_activity_date": 1570632973, "last_edit_date": 1570632973, "creation_date": 1570602429, "answer_id": 58298190, "question_id": 58295107, "link": "https://stackoverflow.com/questions/58295107/how-do-i-open-a-file-with-the-flags-provided-as-an-i32-matching-the-c-open-funct/58298190#58298190", "title": "How do I open a file with the flags provided as an i32 matching the C open function?", "body": "<p>Assuming that you are on a Unix-like system, you can use <a href=\"https://doc.rust-lang.org/stable/std/os/unix/fs/trait.OpenOptionsExt.html\" rel=\"nofollow noreferrer\"><code>OpenOptionsExt</code></a> to set your flags:</p>\n\n<pre><code>use std::fs::OpenOptions;\nuse std::os::unix::fs::OpenOptionsExt;\n\nlet file = OpenOptions::new()\n    .read(true)\n    .custom_flags(flags)\n    .open(&amp;path)?;\n</code></pre>\n\n<p>Note that you must set the access mode flags separately (e.g. by calling <code>read</code> or <code>write</code>), so if you need them you will have to handle them yourself. For example:</p>\n\n<pre><code>use std::os::unix::fs::OpenOptionsExt;\n\nuse libc::{O_RDONLY, O_RDWR, O_WRONLY};\n\nlet file = OpenOptions::new()\n    .custom_flags(flags)\n    .read((flags &amp; O_ACCMODE == O_RDONLY) || (flags &amp; O_ACCMODE == O_RDWR))\n    .write((flags &amp; O_ACCMODE == O_WRONLY) || (flags &amp; O_ACCMODE == O_RDWR))\n    .open(&amp;path)?;\n</code></pre>\n"}], "owner": {"reputation": 678, "user_id": 6094756, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh5.googleusercontent.com/-hQ5QCAvBEoE/AAAAAAAAAAI/AAAAAAAAABE/sAfws5YX9HQ/photo.jpg?sz=128", "display_name": "piegames", "link": "https://stackoverflow.com/users/6094756/piegames"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 58298190, "answer_count": 1, "score": 0, "last_activity_date": 1570632973, "creation_date": 1570576579, "last_edit_date": 1570626117, "question_id": 58295107, "link": "https://stackoverflow.com/questions/58295107/how-do-i-open-a-file-with-the-flags-provided-as-an-i32-matching-the-c-open-funct", "title": "How do I open a file with the flags provided as an i32 matching the C open function?", "body": "<p>I need to open a file and I have a <code>&amp;Path</code> and an <code>i32</code> for the flags. I can open files with <code>File::open(path)</code>, but this won't let me set the options. The documentation says I should use <code>OpenOptions</code>, but I do not see any way to get an <code>OpenOptions</code> from my <code>i32</code>. The content of my flags is defined as in <code>open(2)</code>.</p>\n\n<p>The flags I am using is <code>526338</code>, if you want to test it yourself.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1570565492, "post_id": 58293245, "comment_id": 102950882, "body": "<code>&quot;test {}&quot;</code> is a string literal. <code>CON</code> is not a literal, it&#39;s a constant that happens to be set to a literal. See also <a href=\"https://en.wikipedia.org/wiki/Literal_(computer_programming)\" rel=\"nofollow noreferrer\">Literal (computer programming)</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570575029, "post_id": 58293245, "comment_id": 102953600, "body": "And <a href=\"https://stackoverflow.com/questions/485119/what-does-the-word-literal-mean\">What does the word &quot;literal&quot; mean?</a>"}], "owner": {"reputation": 7558, "user_id": 448496, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/BZtrd.png?s=128&g=1", "display_name": "rubik", "link": "https://stackoverflow.com/users/448496/rubik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "closed_date": 1570565399, "answer_count": 0, "score": 0, "last_activity_date": 1570564586, "creation_date": 1570564586, "question_id": 58293245, "link": "https://stackoverflow.com/questions/58293245/formatting-a-const-string-in-rust", "closed_reason": "Duplicate", "title": "Formatting a const string in Rust", "body": "<p>I don't understand why Rust does not allow to format a const string. This program does not compile:</p>\n\n<pre><code>const CON: &amp;str = \"test {}\";\n\nfn main() {\n    println!(CON, 4);\n}\n</code></pre>\n\n<p>It generates the following error:</p>\n\n<pre><code>error: format argument must be a string literal\n --&gt; a.rs:4:14\n  |\n4 |     println!(CON, 4);\n  |              ^^^\nhelp: you might be missing a string literal to format with\n  |\n4 |     println!(\"{} {}\", CON, 4);\n  |              ^^^^^^^^\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>I read around that <code>println!</code> and <code>format!</code> only work when the first argument is a string literal. But a <code>const</code> string <em>is</em> a named string literal.</p>\n"}, {"tags": ["rust", "pattern-matching", "language-design"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1570562109, "post_id": 58292554, "comment_id": 102949570, "body": "Complement: <a href=\"https://stackoverflow.com/questions/27911656/rust-by-example-the-ref-pattern\">Rust by example: The ref pattern</a>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570563449, "post_id": 58292554, "comment_id": 102950101, "body": "I&#39;m not sure what you mean by &quot;avoidable&quot;. Is it necessary in <i>this</i> code? No. Is it necessary in <i>any</i> code? Kind of, yes, depending on how much you&#39;re willing to rewrite to avoid writing <code>ref</code>. Could the language have been designed without it? I suppose so, especially if something like default binding modes had been part of the original design, but that doesn&#39;t seem like a particularly interesting counterfactual to me... What&#39;s the point of this question?"}], "answers": [{"comments": [{"owner": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 0, "creation_date": 1570651712, "post_id": 58292917, "comment_id": 102984343, "body": "This seems to suggest that only one of <code>ref</code> or <code>move</code> would have been strictly necessary, possibly at the cost of having the wrong default in certain scenarios."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "reply_to_user": {"reputation": 738, "user_id": 4496839, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/050b67773c3fcf861e786289b932daeb?s=128&d=identicon&r=PG&f=1", "display_name": "Ryan1729", "link": "https://stackoverflow.com/users/4496839/ryan1729"}, "edited": false, "score": 0, "creation_date": 1570651895, "post_id": 58292917, "comment_id": 102984400, "body": "@Ryan1729 recall that <code>move</code> is not a valid keyword in pattern matching today. We are already in a state where only one (<code>ref</code>) is necessary and we have the wrong default in certain scenarios. The OPs implicit assertion is that there&#39;s a world where no keyword is needed and the language can just Do The Right Thing."}], "tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 10, "last_activity_date": 1570563130, "creation_date": 1570563130, "answer_id": 58292917, "question_id": 58292554, "link": "https://stackoverflow.com/questions/58292554/what-can-ref-do-that-references-couldnt/58292917#58292917", "title": "What can ref do that references couldn&#39;t?", "body": "<p>No, it is not avoidable with your proposed syntax. Your syntax does not allow for taking a reference when otherwise a move would be permissable. In this example, <code>inner</code> is a copy of the integer from <code>val</code> and changing it has no effect on <code>val</code>:</p>\n\n<pre><code>fn main() {\n    let mut val = Some(42);\n\n    if let &amp;mut Some(mut inner) = &amp;mut val {\n        inner += 1;\n    }\n\n    println!(\"{:?}\", val); // Some(42)\n}\n</code></pre>\n\n<p>The <code>ref</code> keyword is needed to force taking a reference:</p>\n\n<pre><code>fn main() {\n    let mut val = Some(42);\n\n    if let &amp;mut Some(ref mut inner) = &amp;mut val {\n        *inner += 1;\n    }\n\n    println!(\"{:?}\", val); // Some(43)\n}\n</code></pre>\n\n<p><em>Match ergonomics</em> allows writing this in a simpler manner:</p>\n\n<pre><code>fn main() {\n    let mut val = Some(42);\n\n    if let Some(inner) = &amp;mut val {\n        *inner += 1;\n    }\n\n    println!(\"{:?}\", val);\n}\n</code></pre>\n\n<p>However, if we started with only this syntax, then we'd probably have the opposite problem and keyword, one to force a move instead; perhaps <code>Some(move inner)</code>. In that alternate universe, there'd be a question asking if the <code>move</code> keyword was avoidable.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/55130932/155423\">How can the ref keyword be avoided when pattern matching in a function taking &amp;self or &amp;mut self?</a></li>\n<li><a href=\"https://stackoverflow.com/q/56511328/155423\">How does Rust pattern matching determine if the bound variable will be a reference or a value?</a></li>\n<li><a href=\"https://stackoverflow.com/q/58184472/155423\">Why is `ref` used instead of an asterisk in pattern matching?</a></li>\n<li><a href=\"https://stackoverflow.com/q/36590549/155423\">What is the syntax to match on a reference to an enum?</a></li>\n<li><a href=\"https://stackoverflow.com/q/27911656/155423\">Rust by example: The ref pattern</a></li>\n</ul>\n"}], "owner": {"reputation": 3201, "user_id": 5986907, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/0521ce05a7fcb2580e4f513990a5a8c8?s=128&d=identicon&r=PG&f=1", "display_name": "joel", "link": "https://stackoverflow.com/users/5986907/joel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1274, "favorite_count": 1, "accepted_answer_id": 58292917, "answer_count": 1, "score": 3, "last_activity_date": 1595783509, "creation_date": 1570561372, "last_edit_date": 1595783509, "question_id": 58292554, "link": "https://stackoverflow.com/questions/58292554/what-can-ref-do-that-references-couldnt", "title": "What can ref do that references couldn&#39;t?", "body": "<p>What can <code>ref</code> do that references couldn't? Could</p>\n<pre><code>match value.try_thing() {\n    &amp;Some(ref e) =&gt; do_stuff(e),\n    // ...\n}\n</code></pre>\n<p>not be equally expressed by</p>\n<pre><code>match value.try_thing() {\n    &amp;Some(e) =&gt; do_stuff(&amp;e),\n    // ...\n}\n</code></pre>\n"}, {"tags": ["rust", "closures"], "answers": [{"tags": [], "owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "is_accepted": true, "score": 2, "last_activity_date": 1570558615, "last_edit_date": 1570558615, "creation_date": 1570557859, "answer_id": 58291802, "question_id": 58291604, "link": "https://stackoverflow.com/questions/58291604/why-can-i-not-use-a-slice-pattern-to-filter-a-window-iterator/58291802#58291802", "title": "Why can I not use a slice pattern to filter a Window iterator?", "body": "<p>You, the programmer, know that each iterated value will have a length of 2, but <strong>how do you know that</strong>? You can only tell that from the prose documentation of the function:</p>\n\n<blockquote>\n  <p>Returns an iterator over all contiguous windows of length size. The windows overlap. If the slice is shorter than size, the iterator returns no values.</p>\n</blockquote>\n\n<p>Nowhere does the compiler know this information. The implementation of <code>Windows</code> only states that the iterated value will be a slice:</p>\n\n<pre><code>impl&lt;'a, T&gt; Iterator for Windows&lt;'a, T&gt; {\n    type Item = &amp;'a [T];\n}\n</code></pre>\n\n<p>I'd convert the slice into an array reference, discarding any slices that were the wrong length (which you know cannot happen):</p>\n\n<pre><code>use std::convert::TryFrom;\n\nfn step(g: u64) -&gt; Option&lt;(u64, u64)&gt; {\n    let prime_list: Vec&lt;u64&gt; = vec![2, 3, 5, 7]; // For example\n\n    if prime_list.len() &lt; 2 {\n        return None;\n    }\n\n    let res = prime_list\n        .windows(2)\n        .flat_map(&lt;&amp;[u64; 2]&gt;::try_from)\n        .find(|&amp;&amp;[a, b]| b - a == g)?;\n    //...\n    None\n}\n</code></pre>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/48129565/155423\">How to convert a slice into an array reference?</a></li>\n<li><a href=\"https://stackoverflow.com/q/35901547/155423\">How can I find a subsequence in a &amp;[u8] slice?</a></li>\n<li><a href=\"https://stackoverflow.com/q/41882151/155423\">How do I imply the type of the value when there are no type parameters or ascriptions?</a></li>\n</ul>\n\n<p>Alternatively, you could use an iterator of integers and chunk it up.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/42134874/155423\">Are there equivalents to slice::chunks/windows for iterators to loop over pairs, triplets etc?</a></li>\n</ul>\n\n<p>At some point in the future, <em>const generics</em> might be stabilized and allow baking the array length into the function call and the return type.</p>\n\n<p>See also:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/q/28136739/155423\">Is it possible to control the size of an array using the type parameter of a generic?</a></li>\n</ul>\n"}], "owner": {"reputation": 69, "user_id": 5195209, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c52f9f3fcc4c9c1738d9b61a35fe89cc?s=128&d=identicon&r=PG&f=1", "display_name": "Pux", "link": "https://stackoverflow.com/users/5195209/pux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 269, "favorite_count": 0, "accepted_answer_id": 58291802, "answer_count": 1, "score": 1, "last_activity_date": 1570558615, "creation_date": 1570556979, "last_edit_date": 1570557485, "question_id": 58291604, "link": "https://stackoverflow.com/questions/58291604/why-can-i-not-use-a-slice-pattern-to-filter-a-window-iterator", "title": "Why can I not use a slice pattern to filter a Window iterator?", "body": "<p>I have a vector of numbers and use the <code>windows(2)</code> method to create an iterator that gives me neighbouring pairs. For example, the vector <code>[1, 2, 3]</code> is transformed into <code>[1, 2], [2, 3]</code>. I want to use the <code>find</code> method to find a slice that fulfills a specific condition:</p>\n\n<pre><code>fn step(g: u64) -&gt; Option&lt;(u64, u64)&gt; {\n    let prime_list: Vec&lt;u64&gt; = vec![2, 3, 5, 7]; //For example\n    if prime_list.len() &lt; 2 {\n        return None;\n    }\n    let res = prime_list.windows(2).find(|&amp;&amp;[a, b]| b - a == g)?;\n    //...\n    None\n}\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0005]: refutable pattern in function argument: `&amp;&amp;[]` not covered\n --&gt; src/lib.rs:6:43\n  |\n6 |     let res = prime_list.windows(2).find(|&amp;&amp;[a, b]| b - a == g)?;\n  |                                           ^^^^^^^^ pattern `&amp;&amp;[]` not covered\n</code></pre>\n\n<p>I don't know what that error means: the list cannot have less than two elements, for example. Maybe the closure parameter is wrong? I tried to vary it but that didn't change anything. <code>a</code> and <code>b</code> are being properly detected as <code>u64</code> in my IDE too. What is going on here?</p>\n"}, {"tags": ["casting", "rust", "primitive-types"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570543364, "post_id": 58287878, "comment_id": 102940653, "body": "From the duplicate: <i>A type cast, such as that performed by <code>as</code>, requires converting from one type to another. You&#39;ve specified the second type [...], but there&#39;s still no way for the compiler to deduce what the first type should be.</i>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 3, "creation_date": 1570543394, "post_id": 58287878, "comment_id": 102940671, "body": "See also <a href=\"https://stackoverflow.com/q/41017140/155423\">Why can&#39;t Rust infer the resulting type of Iterator::sum?</a> for how to solve it."}, {"owner": {"reputation": 1123, "user_id": 5233175, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/F4N6y.jpg?s=128&g=1", "display_name": "Paul W&#252;rtz", "link": "https://stackoverflow.com/users/5233175/paul-w%c3%bcrtz"}, "reply_to_user": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570544839, "post_id": 58287878, "comment_id": 102941516, "body": "Thanks, so explicitly using the <code>sum</code> function of <code>u64</code> was necessary, like this <code>let sum_sqrt: u64 = (1u64..lim).sum::&lt;u64&gt;().pow(2);</code>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570544936, "post_id": 58287878, "comment_id": 102941579, "body": "Yes, but pedantically it&#39;s not &quot;the <code>sum</code> function of <code>u64</code>&quot;, it&#39;s providing a type parameter (<code>u64</code>) to the <code>sum</code> method of <code>Iterator</code>. Your entire function can just be <code>(1..lim).sum::&lt;u64&gt;().pow(2)</code>, no need for a variable, the variable type on <code>sum</code>, or the type on <code>1</code>."}], "owner": {"reputation": 1123, "user_id": 5233175, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/F4N6y.jpg?s=128&g=1", "display_name": "Paul W&#252;rtz", "link": "https://stackoverflow.com/users/5233175/paul-w%c3%bcrtz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 35, "favorite_count": 0, "closed_date": 1570543331, "answer_count": 0, "score": 2, "last_activity_date": 1570545040, "creation_date": 1570543078, "last_edit_date": 1570545040, "question_id": 58287878, "link": "https://stackoverflow.com/questions/58287878/cannot-infer-type-explicitly-given-by-as", "closed_reason": "Duplicate", "title": "Cannot infer type explicitly given by &#39;as&#39;", "body": "<p>I want to write a function which returns the square of a sum. My first shot looked like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn square_of_sum(lim: u64) -&gt; u64 {\n    let sum: u64 = (1..lim).sum().pow(2);\n    sum\n}\n</code></pre>\n\n<p>Which gave me an error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n --&gt; src/lib.rs:2:20\n  |\n2 |     let sum: u64 = (1..lim).sum().pow(2);\n  |                    ^^^^^^^^^^^^^^ cannot infer type for `S`\n  |\n  = note: type must be known at this point\n</code></pre>\n\n<p>So thinking rather C-ish, I explicitly cast the result of <code>sum</code> to <code>u64</code>, which still has an error</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0282]: type annotations needed\n --&gt; src/lib.rs:2:20\n  |\n2 |     let sum: u64 = ((1..lim).sum() as u64).pow(2);\n  |                    ^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for `S`\n  |\n  = note: type must be known at this point\n</code></pre>\n\n<p>Isn't the result of <code>sum</code> on a <code>Range&lt;u64&gt;</code> a <code>u64</code>? Why is the type still missing after the use of <code>as</code>? </p>\n"}, {"tags": ["rust", "constants"], "comments": [{"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570537720, "post_id": 58286148, "comment_id": 102937458, "body": "There is a crate that does exactly what you do, but I cannot find its name RN"}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570544152, "post_id": 58286148, "comment_id": 102941131, "body": "@FrenchBoiethios were you thinking of <a href=\"https://docs.rs/typenum/1.11.2/typenum/\" rel=\"nofollow noreferrer\">typenum</a>?"}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570544204, "post_id": 58286148, "comment_id": 102941164, "body": "Yes! Isn&#39;t that what you want?"}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570553131, "post_id": 58286148, "comment_id": 102945721, "body": "@FrenchBoiethios yeah probably, I just didn&#39;t know about it beforehand, so thanks :)"}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571217063, "post_id": 58286148, "comment_id": 103163068, "body": "@FrenchBoiethios typenum is amazing and super powerful, once you grok types and trait bounds properly. For any future reader, I recommend reading <a href=\"https://bluejekyll.github.io/blog/rust/2017/08/06/type-parameters.html\" rel=\"nofollow noreferrer\">this</a> which helped me hugely."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571217237, "post_id": 58286148, "comment_id": 103163165, "body": "Yes, that&#39;s a nice library. For any future reader, I hope that the const generics will be there, though ;)"}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1571218327, "post_id": 58286148, "comment_id": 103163798, "body": "@FrenchBoiethios I agree, though I think there are some things you can do with typenum that aren&#39;t possible with the const generics RFC."}], "answers": [{"comments": [{"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1570543596, "post_id": 58286954, "comment_id": 102940800, "body": "It&#39;s not obvious to me what the difference is, beyond having a superfluous intermediate type (and the compiler accepting it quietly!)."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1570544487, "post_id": 58286954, "comment_id": 102941304, "body": "@HenryGomersall the difference is you are using the generic type parameter without a extra template field and restricting the <code>val</code>&#39;s type exactly same with the <code>U32Const</code>&#39;s , from this point intermediate type may not seem superfluous, if you are willing to restrict it of course."}, {"owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1570553090, "post_id": 58286954, "comment_id": 102945704, "body": "Yeah, I can see the type is used, I&#39;m just not sure what extra info it provides to the compiler to keep <i>it</i> happy."}, {"owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "reply_to_user": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "edited": false, "score": 0, "creation_date": 1570559953, "post_id": 58286954, "comment_id": 102948680, "body": "@HenryGomersall please read <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/0738-variance.md#the-corner-case-unused-parameters-and-parameters-that-are-only-used-unsafely\" rel=\"nofollow noreferrer\">this section</a>."}], "tags": [], "owner": {"reputation": 5152, "user_id": 1601571, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/56403b8ee9f5066ce3f75b9783cc9b2b?s=128&d=identicon&r=PG", "display_name": "&#214;mer Erden", "link": "https://stackoverflow.com/users/1601571/%c3%96mer-erden"}, "is_accepted": true, "score": 4, "last_activity_date": 1570539950, "creation_date": 1570539950, "answer_id": 58286954, "question_id": 58286148, "link": "https://stackoverflow.com/questions/58286148/how-can-i-have-a-struct-which-is-only-used-for-its-internal-constant/58286954#58286954", "title": "How can I have a struct which is only used for its internal constant?", "body": "<p>Instead of giving a phantom variable into a struct, using associated types might do the trick, </p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait U32Const {\n    type U32;\n    const VAL: Self::U32;\n}\n\nstruct U32Const10;\n\nimpl U32Const for U32Const10 {\n    type U32 = u32;\n    const VAL: Self::U32 = 10;\n}\n\nstruct MyType&lt;X: U32Const&gt; {\n    val: X::U32,\n}\n\nimpl&lt;X: U32Const&lt;U32 = u32&gt;&gt; MyType&lt;X&gt; {\n    fn do_something(&amp;self) -&gt; X::U32 {\n        self.val * X::VAL\n    }\n}\n\nfn main() {\n    let a = MyType::&lt;U32Const10&gt; { val: 20 };\n    println!(\"{}\", a.do_something());\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=a53d3f0f9c8ee12f96618a8510ba4b4f\" rel=\"nofollow noreferrer\">Playground</a> (with multiple const implementations)</p>\n"}, {"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 1, "last_activity_date": 1570546132, "creation_date": 1570546132, "answer_id": 58288843, "question_id": 58286148, "link": "https://stackoverflow.com/questions/58286148/how-can-i-have-a-struct-which-is-only-used-for-its-internal-constant/58288843#58288843", "title": "How can I have a struct which is only used for its internal constant?", "body": "<p>You can get rid of the compiler warning by declaring <code>template</code> to have type <a href=\"https://doc.rust-lang.org/stable/std/marker/struct.PhantomData.html\" rel=\"nofollow noreferrer\"><code>PhantomData::&lt;X&gt;</code></a>:</p>\n\n<pre><code>use std::marker::PhantomData;\n\ntrait U32Const {\n    const VAL: u32;\n}\n\nstruct U32Const10;\nimpl U32Const for U32Const10 {\n    const VAL: u32 = 10;\n}\n\nstruct MyType&lt;X: U32Const&gt; {\n    val: u32,\n    template: PhantomData::&lt;X&gt;,\n}\n\nimpl&lt;X: U32Const&gt; MyType&lt;X&gt; {\n    fn do_something(&amp;self) -&gt; u32 {\n        self.val * X::VAL\n    }\n}\n\nfn main() {\n    let a = MyType::&lt;U32Const10&gt; {\n        val: 20,\n        template: PhantomData,\n    };\n    println!(\"{}\", a.do_something());\n}\n</code></pre>\n\n<p><a href=\"https://play.integer32.com/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e6d8a717b1798accd861abbeaa223a51\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>You still need to initialize it, but it doesn't use any memory and the compiler won't complain when you don't use it.</p>\n"}], "owner": {"reputation": 7630, "user_id": 709852, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/bf402f309d40d607a369395e32a984fc?s=128&d=identicon&r=PG", "display_name": "Henry Gomersall", "link": "https://stackoverflow.com/users/709852/henry-gomersall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "accepted_answer_id": 58286954, "answer_count": 2, "score": 2, "last_activity_date": 1570629846, "creation_date": 1570536798, "last_edit_date": 1570539942, "question_id": 58286148, "link": "https://stackoverflow.com/questions/58286148/how-can-i-have-a-struct-which-is-only-used-for-its-internal-constant", "title": "How can I have a struct which is only used for its internal constant?", "body": "<p>I need to encapsulate constants in the Rust type system. Ideally, <a href=\"https://github.com/rust-lang/rust/issues/44580\" rel=\"nofollow noreferrer\">RFC2000</a> would be ready, but in its absence, and since I only need a restricted set of constants, I can implement something close to what I need:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait U32Const {\n    const VAL: u32;\n}\n\nstruct U32Const10;\nimpl U32Const for U32Const10 {\n    const VAL: u32 = 10;\n}\n\nstruct MyType&lt;X: U32Const&gt; {\n    val: u32,\n    template: X,\n}\n\nimpl&lt;X: U32Const&gt; MyType&lt;X&gt; {\n    fn do_something(&amp;self) -&gt; u32 {\n        self.val * X::VAL\n    }\n}\n\nfn main() {\n    let a = MyType::&lt;U32Const10&gt; {\n        val: 20,\n        template: U32Const10 {},\n    };\n    println!(\"{}\", a.do_something());\n}\n</code></pre>\n\n<p>This prints out <code>200</code> as desired - that is, the constant value comes from the type that is passed in at instantiation inside <code>main</code>.</p>\n\n<p>Now, this is a bit warty as it requires an instance of <code>X</code> to be created in the struct, which I call <code>template</code>, which is then unused so I get a compiler warning.</p>\n\n<p>If one removes the <code>template</code> field, which is the ideal API, then the compiler complains about an unused parameter <code>X</code> on <code>struct MyType &lt; X: U32Const &gt;</code>. If I get rid of the <code>X</code> parameter on <code>struct MyType</code>, I then get an <code>unexpected type argument</code> on <code>MyType</code> in the the <code>impl</code> block.</p>\n\n<p>Is there some way I can do what I'm trying to do that keeps the compiler happy? Effectively I want a struct which is <em>only</em> used for its internal <code>const</code>.</p>\n"}, {"tags": ["rust", "floating-point", "sse", "simd", "floating-point-exceptions"], "answers": [{"comments": [{"owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 1, "creation_date": 1570518939, "post_id": 58281417, "comment_id": 102928902, "body": "I don&#39;t want to enable FP exceptions myself, but I want my code (Which is a library) to behave correctly if they&#39;re enabled by either compiler or user. If in general nobody unmasks FP exceptions, I can just use conditional compilation to let the user enable/disable them. Just wanted to be sure It is in general acceptable to have a code that does not handle them correctly by default."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 0, "creation_date": 1570522262, "post_id": 58281417, "comment_id": 102930339, "body": "@L117: yeah, very few people will have expectations of strict FP-exception behaviour for an implementation of any library function.  Nobody knows what you do internally.  Given the choice between perf and exception semantics, most people would prefer perf.  There&#39;s very little you can usefully do upon catching a SIGFPE, other than maybe log it, so I think it&#39;s very rare to care about it.  GCC&#39;s exception-semantics-preserving option has never worked, so that tells you something!  But you do want to be careful with partial vectors to avoid subnormals; added another section to my answer."}, {"owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 0, "creation_date": 1570532353, "post_id": 58281417, "comment_id": 102935028, "body": "I clearly understand the difference between geometric vector and SIMD vector. But what do you mean it&#39;s bad to use a SIMD vector to hold a single geometric vector? Is it about using 3 of 8 available &quot;cells&quot; of 256-bits wide register? It is sure not as effective as using 8 of 8, but it still much faster than using scalar operations."}, {"owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 1, "creation_date": 1570532670, "post_id": 58281417, "comment_id": 102935154, "body": "My code actually chops vectors of arbitrary size into chunks and then performs operations. E.g. If I have two vectors f32x37 each, they will be turned into five chunks: [f32x8, f32x8, f32x8, f32x8, f32x5] that fill SIMD registers entirely (Except the last one, f32x5. That&#39;s what my question is all about.)."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "reply_to_user": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 0, "creation_date": 1570547721, "post_id": 58281417, "comment_id": 102943128, "body": "@L117: Ah, yes using partial vectors as part of your cleanup for odd lengths is totally fine.  I left that section in for the benefit of future readers that find this question for the wrong reason and <i>are</i> making the mistake I was warning against.  Padding is great, but when it&#39;s not an option another cleanup trick is to do an unaligned final vector that ends at the end of your data. Works most easily for pure-vertical non-in-place stuff, e.g. copy-and-divide so you can safely reload and redo some elements in the overlap.  e.g. a <code>memcpy</code> can end with a maybe-overlapping unaligned load+store."}], "tags": [], "owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "is_accepted": true, "score": 5, "last_activity_date": 1570548376, "last_edit_date": 1570548376, "creation_date": 1570517492, "answer_id": 58281417, "question_id": 58281270, "link": "https://stackoverflow.com/questions/58281270/safe-simd-arithmetic-on-aligned-vectors-of-odd-size/58281417#58281417", "title": "&quot;Safe&quot; SIMD arithmetic on aligned vectors of odd size?", "body": "<p>Generally nobody unmasks FP exceptions, otherwise you'd need shuffles to e.g. duplicate one of the elements so the top element is doing the same division as one of the other elements.  Or has some other known safe thing.</p>\n\n<p>Maybe you can get away with only shuffling the divisor, if you can assume the dividend is non-NaN in that element.</p>\n\n<p>With AVX512 you could suppress exceptions for an element using zero-masking, but until then there's no such feature.  Also AVX512 lets you override the rounding mode + Suppress All Exceptions (SAE) without masking, so you could make nearest-even explicit to get SAE.  But that suppresses exceptions for <em>all</em> elements.</p>\n\n<hr>\n\n<p>Seriously, don't enable FP exceptions.  Compilers barely / don't know how to optimize in a way that's safe if the number of exceptions is a visible side-effect.  e.g. GCC's <code>-ftrapping-math</code> is on by default, but it's broken.</p>\n\n<p>I wouldn't assume LLVM is any better; the default strict FP probably still does optimizations that could give one SIGFPE where the source would have raised 2 or 4.  Maybe even optimizations that raise 0 where the source would raise 1, or vice versa, like GCC's broken and near-useless default.</p>\n\n<p>Enabling FP exceptions might be useful for debugging, though, if you expect to never have any of a certain kind of exception.  But you can probably deal with the occasional false positive from a SIMD instruction by ignoring ones with that source address.</p>\n\n<hr>\n\n<p><strong>If there's a tradeoff between performance and exception-correctness, most users of a library would rather that it maximized performance.</strong></p>\n\n<p>Even clearing and then checking the sticky FP masked-flags with <code>fenv</code> stuff is rarely done, and requires controlled circumstances to make use of.  I wouldn't have any expectations for a library function call, especially not one that used any SIMD.</p>\n\n<hr>\n\n<h3>Avoid <em>subnormals</em> in the garbage element</h3>\n\n<p>You can get slowdowns from subnormals (aka denormals), if MXCSR doesn't have FTZ and DAZ set. (i.e. the normal case, unless you compiled with (the Rust equivalent of) <code>-ffast-math</code>.)</p>\n\n<p><strong>Producing a NaN or +-Inf takes no extra time</strong> for typical x86 hardware with SSE / AVX instructions.  (Fun fact: NaN is slow, too, with legacy with x87 math even on modern HW).  So it's safe to <code>_mm_or_ps</code> with a <code>cmpps</code> result to create a NAN in some elements of a vector before a math operation, for example.  Or <code>_mm_and_ps</code> to create some zeros in the divisor before division.</p>\n\n<p><strong>But be careful about what garbage is in your padding because it could lead to spurious subnormals.</strong>  <code>0.0</code> and NaN (all ones) are generally always safe.</p>\n\n<hr>\n\n<h3>Usually avoid horizontal stuff with SIMD.  SIMD vec != geometry vec.</h3>\n\n<p><strong>Using only 3 out of 4 elements of a SIMD vector is usually a bad idea</strong> because it usually means you're using a single SIMD vector to hold a single geometry vector, instead of three vectors of 4 <code>x</code> coords, 4 <code>y</code> coords, and 4 <code>z</code> coords.</p>\n\n<p>Shuffles / horizontal stuff mostly costs extra instructions (except for broadcast loads of a scalar that was already in memory), but you often need a lot of shuffles if you're using SIMD this way.  There are cases where you can't vectorize over an array of things, but you can still get a speedup with SIMD.</p>\n\n<p><strong>If you're just using this partial-vector stuff for the leftover elements of an odd-sized operation then great</strong>, one partial vector is much better than 3 scalar iterations.  But most people asking about using only 3 of 4 vector elements are asking because they're using SIMD wrong, e.g. adding geometry-vector as a SIMD vector is still cheap, but dot-product needs shuffles.  See <a href=\"https://deplinenoise.wordpress.com/2015/03/06/slides-simd-at-insomniac-games-gdc-2015/\" rel=\"nofollow noreferrer\">https://deplinenoise.wordpress.com/2015/03/06/slides-simd-at-insomniac-games-gdc-2015/</a> for some nice stuff about how to use SIMD the right way (SoA vs. AoS and so on).  If you already know about that and are just using 3-element vectors for the odd corner case, not for most of the work, then that's fine.</p>\n\n<p>Padding to a multiple of the vector width is generally great for odd sizes, but another option for some algos is a final unaligned vector that ends at the end of your data.  A partially-overlapping store is fine, unless it's an in-place algorithm and you have to worry about not doing an element twice.  (Or about store-forwarding stalls even for idempotent operations like AND-masking or clamping).</p>\n\n<hr>\n\n<h3>Getting zeros for free</h3>\n\n<p>If you had just 2 <code>float</code> elements left over, a <code>movsd</code> load will load + zero-extend into an XMM register.  You might as well get the compiler to do that instead of a <code>movaps</code>.</p>\n\n<p>Otherwise, if shuffling together 3 scalars, <code>insertps</code> can zero elements.  Or you might have known zero high parts of xmm regs from <code>movss</code> loads from memory.  So using a <code>0.0</code> as part of a vector-from-scalar initializer (like C++ <code>_mm_set_ps()</code>) can be free for the compiler.</p>\n\n<p><strong>With AVX</strong>, you can consider using a masked load if you're worried about padding causing a subnormal.  <a href=\"https://www.felixcloutier.com/x86/vmaskmov\" rel=\"nofollow noreferrer\">https://www.felixcloutier.com/x86/vmaskmov</a>.  But that's somewhat slower than <code>vmovaps</code>.  And masked <em>stores</em> are much more expensive on AMD, even Ryzen.</p>\n"}, {"comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1570522792, "post_id": 58282314, "comment_id": 102930584, "body": "Padding with <code>0.0</code> can be done for free sometimes, e.g. if shuffling together scalars loaded from memory the upper elements of your XMM regs will be known to be zero.  <code>0.0&#47;0.0</code> has no performance penalty for <code>divps</code>, but does raise exceptions.  But since <code>sub</code> can create a <code>0.0</code> from <code>1.0</code> padding, <code>a &#47; (b-c)</code> will do that if they start with 1.0 padding."}, {"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1570522896, "post_id": 58282314, "comment_id": 102930639, "body": "Still, agreed on owning the padding.  But using only 3 out of 4 elements of a SIMD vector is usually a bad idea because it usually means you&#39;re using a single SIMD vector to hold a single geometry vector, instead of three vectors of 4 <code>x</code> coords, 4 <code>y</code> coords, and 4 <code>z</code> coords.  Shuffles / horizontal stuff sucks.  I mean sure there are cases where you can&#39;t vectorize over an array of things, but with careful use of SIMD you can still get a speedup."}, {"owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "edited": false, "score": 0, "creation_date": 1570531346, "post_id": 58282314, "comment_id": 102934584, "body": "This makes sense. But my code uses experimental, incomplete, nightly features (const_generics, specialization) a lot. Because of this it&#39;s not easy to own 4-th element. Well, actually it&#39;s even not always 4-th element, vector structure is defined as  <code>rust  pub struct Vector&lt;T, L, const SIZE: usize&gt; where     L: ReprWrapper&lt;Wrapped = [T; { SIZE }]&gt;, {     repr: L, } </code>"}], "tags": [], "owner": {"reputation": 249985, "user_id": 147192, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/E78Vj.png?s=128&g=1", "display_name": "Matthieu M.", "link": "https://stackoverflow.com/users/147192/matthieu-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1570521590, "creation_date": 1570521590, "answer_id": 58282314, "question_id": 58281270, "link": "https://stackoverflow.com/questions/58281270/safe-simd-arithmetic-on-aligned-vectors-of-odd-size/58282314#58282314", "title": "&quot;Safe&quot; SIMD arithmetic on aligned vectors of odd size?", "body": "<p>In Rust like in C, <code>sizeof</code> is always a multiple of <code>alignof</code>: a necessity since <code>sizeof</code> is used as the <em>stride</em> in arrays and array elements need to be aligned properly.</p>\n\n<p>As a result, even though you only use 12 bytes for your <code>struct</code>, its <code>sizeof</code> is 16 bytes anyway, with 4 bytes of \"padding\".</p>\n\n<p>I would therefore propose a very pragmatic fix: own to the padding. Instead of making the internals of the <code>struct</code> visible, give it a constructor and an accessor... and pad it to 16 bytes with the <code>1.0</code> value.</p>\n\n<pre><code>#[repr(C, align(16))]\npub struct Vector([f32; 4]);\n\nimpl Vector {\n    pub fn new(v: [f32; 3]) -&gt; Vector {\n        Vector([v[0], v[1], v[2], 1.0])\n    }\n\n    pub fn pad(&amp;mut self, pad: f32) { self.0[3] = pad; }\n\n    pub fn as_ptr(&amp;self) -&gt; *const f32 { self.0.as_ptr() }\n}\n</code></pre>\n\n<p>Then you can perform operations with confidence that no garbage byte is used.</p>\n"}], "owner": {"reputation": 416, "user_id": 10904994, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Xzqb0.png?s=128&g=1", "display_name": "L117", "link": "https://stackoverflow.com/users/10904994/l117"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 407, "favorite_count": 2, "accepted_answer_id": 58281417, "answer_count": 2, "score": 7, "last_activity_date": 1570675673, "creation_date": 1570516794, "last_edit_date": 1570675673, "question_id": 58281270, "link": "https://stackoverflow.com/questions/58281270/safe-simd-arithmetic-on-aligned-vectors-of-odd-size", "title": "&quot;Safe&quot; SIMD arithmetic on aligned vectors of odd size?", "body": "<p>Let's say I have some 16-bytes aligned structure, that just wraps 3xFloat32 array:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#[repr(C, align(16))]\npub struct Vector(pub [f32; 3]);\n</code></pre>\n\n<p>Now I want to divide two instances of it, like this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use core::arch::x86_64;\n\nlet a = Vector([1f32, 2f32, 3f32]);\nlet b = Vector([4f32, 5f32, 6f32]);\nlet mut q = Vector([0f32, 0f32, 0ff32]);\n\nunsafe {\n    let a1 = x86_64::_mm_load_ps(a.0.as_ptr());\n    let b1 = x86_64::_mm_load_ps(b.0.as_ptr());\n    let q1 = x86_64::_mm_div_ps(a1, b1);\n    x86_64::_mm_store_ps(q.0.as_mut_ptr(), q1);\n}\n</code></pre>\n\n<p>It does division, but there's a problem: 4-th element contains garbage, that, among other things, can be signalling NaN. And if certain exceptions flags are unmasked, SIGFPE will be triggered. I want to avoid this somehow, without silencing signal completely. I.e. I either want to silence it only on 4-th pair of elements, or put there some sane values. What are the best, fastest way to do this? Or maybe there's better approach in general?</p>\n"}, {"tags": ["generics", "rust"], "comments": [{"owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "edited": false, "score": 3, "creation_date": 1570493969, "post_id": 58278451, "comment_id": 102923383, "body": "take a look at the <a href=\"https://doc.rust-lang.org/rust-by-example/generics/bounds.html\" rel=\"nofollow noreferrer\">rust by example</a> you also should reread the chapiter 10 of the rust-lang book, the <code>+</code> operator is used to combie bounds from cargo doc: <code>When working with generics, the type parameters often must use traits as bounds to stipulate what functionality a type implements. For example, the following example uses the trait Display to print and so it requires T to be bound by Display; that is, T must implement Display.</code> in your case the <code>Box</code> contains a dynamic object that implement <code>Send</code> with <code>&#39;static</code> lifetime"}], "answers": [{"tags": [], "owner": {"reputation": 1091, "user_id": 3387602, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/c5ef481e47f40861b734abc7d7973777?s=128&d=identicon&r=PG&f=1", "display_name": "zer09", "link": "https://stackoverflow.com/users/3387602/zer09"}, "is_accepted": false, "score": 3, "last_activity_date": 1570495325, "creation_date": 1570495325, "answer_id": 58278793, "question_id": 58278451, "link": "https://stackoverflow.com/questions/58278451/what-is-the-plus-symbol-in-generics/58278793#58278793", "title": "What is the plus symbol (+) in generics?", "body": "<p>Thanks to @Asya Corbeau pointed me back to chapter 10, it is the <a href=\"https://doc.rust-lang.org/book/ch10-02-traits.html#specifying-multiple-trait-bounds-with-the--syntax\" rel=\"nofollow noreferrer\">Specifying Multiple Trait Bounds with the + Syntax</a></p>\n"}], "owner": {"reputation": 1091, "user_id": 3387602, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/c5ef481e47f40861b734abc7d7973777?s=128&d=identicon&r=PG&f=1", "display_name": "zer09", "link": "https://stackoverflow.com/users/3387602/zer09"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 363, "favorite_count": 0, "closed_date": 1570498868, "answer_count": 1, "score": 2, "last_activity_date": 1570498856, "creation_date": 1570492171, "last_edit_date": 1570498856, "question_id": 58278451, "link": "https://stackoverflow.com/questions/58278451/what-is-the-plus-symbol-in-generics", "closed_reason": "Duplicate", "title": "What is the plus symbol (+) in generics?", "body": "<p>I am on <a href=\"https://doc.rust-lang.org/book/ch19-00-advanced-features.html\" rel=\"nofollow noreferrer\">chapter 19 of <em>The Rust Programming Language</em></a> when I saw this code</p>\n\n<pre><code>Box&lt;dyn Fn() + Send + 'static&gt;\n</code></pre>\n\n<p>What does it do and why is there the plus sign (<code>+</code>) in there? I don't remember encountering this in a previous chapter.</p>\n\n<p>How is <code>Box::new(|| println!(\"hi\"))</code> a <code>Box&lt;dyn Fn() + Send + 'static&gt;</code>?</p>\n"}, {"tags": ["rust", "match"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570459138, "post_id": 58271698, "comment_id": 102910521, "body": "It&#39;s hard to answer your question because it doesn&#39;t include a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. There are imports that could be removed or replaced (e.g. maplit isn&#39;t needed). It would make it easier for us to help you if you try to reproduce your error on the <a href=\"https://play.rust-lang.org\" rel=\"nofollow noreferrer\">Rust Playground</a> if possible, otherwise in a brand new Cargo project, then <a href=\"https://stackoverflow.com/posts/58271698/edit\">edit</a> your question to include the additional info. There are <a href=\"//stackoverflow.com/tags/rust/info\">Rust-specific MRE tips</a> you can use to reduce your original code for posting here. Thanks!"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570459172, "post_id": 58271698, "comment_id": 102910536, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/47395171/155423\">How to update-or-insert on a Vec?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58271698/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 2, "creation_date": 1570459187, "post_id": 58271698, "comment_id": 102910547, "body": "<i>&quot;Line numbers are from my original file&quot;</i> \u2014  but also <code>match self.outgoing_edges[from_node]</code> (in the error) doesn&#39;t appear at all in the given code."}], "answers": [{"comments": [{"owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 0, "creation_date": 1570459803, "post_id": 58271848, "comment_id": 102910878, "body": "thanks! I tried the ref before, but only together with the ampersand that the compiler suggested, which didn&#39;t work. Too many orthogonal concepts and keywords to play with! Like I need an A* path finder  just to find the right syntax..."}, {"owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "reply_to_user": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "edited": false, "score": 1, "creation_date": 1570460788, "post_id": 58271848, "comment_id": 102911377, "body": "@PaulChernoch Rust reference is the ultimate guide for such syntax and semantics if you don&#39;t mind some BNFs. In this case, it is <a href=\"https://doc.rust-lang.org/reference/patterns.html#identifier-patterns\" rel=\"nofollow noreferrer\">identifier patterns</a>."}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 2, "last_activity_date": 1570460046, "last_edit_date": 1570460046, "creation_date": 1570459154, "answer_id": 58271848, "question_id": 58271698, "link": "https://stackoverflow.com/questions/58271698/how-can-i-match-and-modify-an-element-in-a-vecoptionhashset/58271848#58271848", "title": "How can I match and modify an element in a Vec&lt;Option&lt;HashSet&gt;&gt;?", "body": "<p>This is pretty straightforward, you want to bind by reference:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Add a directional edge that starts at `from_node` and points to `to_node`.\npub fn add_edge(&amp;mut self, from_node : usize, to_node : usize) {\n    match self.outgoing_edges[from_node] {\n        Some(ref mut set) =&gt; { set.insert(to_node); },\n        None =&gt; { self.outgoing_edges[from_node] = Some(hashset!{ to_node }); }\n    }\n    match self.incoming_edges[to_node] {\n        Some(ref mut set) =&gt; { set.insert(from_node); },\n        None =&gt; { self.incoming_edges[to_node] = Some(hashset!{ from_node }); }\n    }\n}\n</code></pre>\n\n<p>Or with pattern matching ergonomics feature called <a href=\"https://doc.rust-lang.org/reference/patterns.html#binding-modes\" rel=\"nofollow noreferrer\">binding mode</a>, you can also do the following:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// Add a directional edge that starts at `from_node` and points to `to_node`.\npub fn add_edge(&amp;mut self, from_node : usize, to_node : usize) {\n    match &amp;mut self.outgoing_edges[from_node] {\n        Some(set) =&gt; { set.insert(to_node); },\n        None =&gt; { self.outgoing_edges[from_node] = Some(hashset!{ to_node }); }\n    }\n    match &amp;mut self.incoming_edges[to_node] {\n        Some(set) =&gt; { set.insert(from_node); },\n        None =&gt; { self.incoming_edges[to_node] = Some(hashset!{ from_node }); }\n    }\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 478030, "user_id": 279627, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/2dceea858ad8f1577bec6ddaa0485d15?s=128&d=identicon&r=PG", "display_name": "Sven Marnach", "link": "https://stackoverflow.com/users/279627/sven-marnach"}, "is_accepted": false, "score": 3, "last_activity_date": 1570520230, "last_edit_date": 1570520230, "creation_date": 1570474640, "answer_id": 58275578, "question_id": 58271698, "link": "https://stackoverflow.com/questions/58271698/how-can-i-match-and-modify-an-element-in-a-vecoptionhashset/58275578#58275578", "title": "How can I match and modify an element in a Vec&lt;Option&lt;HashSet&gt;&gt;?", "body": "<p>Instead of using pattern matching, you can use the method <a href=\"https://doc.rust-lang.org/nightly/std/option/enum.Option.html#method.get_or_insert_with\" rel=\"nofollow noreferrer\"><code>Option::get_or_insert_with()</code></a> to create a new hash set if required, and return a reference to either the existing or the newly created hash set. The full code could look like this:</p>\n\n<pre><code>pub fn add_edge(&amp;mut self, from_node: usize, to_node: usize) {\n    self.outgoing_edges[from_node]\n        .get_or_insert_with(HashSet::new)\n        .insert(to_node);\n    self.incoming_edges[to_node]\n        .get_or_insert_with(HashSet::new)\n        .insert(from_node);\n}\n</code></pre>\n"}], "owner": {"reputation": 4459, "user_id": 127251, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/9b6273d6505f5cead55793f95dbe7873?s=128&d=identicon&r=PG", "display_name": "Paul Chernoch", "link": "https://stackoverflow.com/users/127251/paul-chernoch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 269, "favorite_count": 0, "accepted_answer_id": 58271848, "answer_count": 2, "score": 0, "last_activity_date": 1570520230, "creation_date": 1570458672, "last_edit_date": 1570459049, "question_id": 58271698, "link": "https://stackoverflow.com/questions/58271698/how-can-i-match-and-modify-an-element-in-a-vecoptionhashset", "title": "How can I match and modify an element in a Vec&lt;Option&lt;HashSet&gt;&gt;?", "body": "<p>I have a <code>Vec</code> of optional <code>HashSet</code>s. If the slot is <code>None</code>, I want to allocate a <code>HashSet</code> and store it in the <code>Vec</code>.\nIn both cases, I want to add to the <code>HashSet</code>.</p>\n\n<p>I understand what the compiler error is complaining about but not what syntax will make the problem go away. The compiler's suggested change also does not compile, as well as any other syntax I try. How do I match the <code>Vec</code> cell, check if it is <code>None</code>, allocate a <code>Some&lt;HashSet&gt;</code> if it is <code>None</code> or just access the <code>HashSet</code> if it does exist and in both cases add in a new integer to the set?</p>\n\n<p><strong>THE CODE:</strong></p>\n\n<pre><code>use std::collections::HashSet;\nuse std::collections::BTreeSet;\nuse std::iter::FromIterator;\nuse maplit;\n\npub struct Graph {\n    outgoing_edges : Vec&lt;Option&lt;HashSet&lt;usize&gt;&gt;&gt;,\n    incoming_edges : Vec&lt;Option&lt;HashSet&lt;usize&gt;&gt;&gt;\n}\n\nimpl Graph {\n    pub fn new(node_count : usize) -&gt; Self {\n        Graph {\n            outgoing_edges : vec!(None; node_count),\n            incoming_edges : vec!(None; node_count)\n        }\n    }\n\n    /// Add a directional edge that starts at `from_node` and points to `to_node`.\n    pub fn add_edge(&amp;mut self, from_node : usize, to_node : usize) {\n        match &amp;self.outgoing_edges[from_node] {\n            Some(mut set) =&gt; { set.insert(to_node); () },\n            None =&gt; { self.outgoing_edges[from_node] = Some(hashset!{ to_node }); () }\n        }\n        match &amp;self.incoming_edges[to_node] {\n            Some(mut set) =&gt; { set.insert(from_node); () },\n            None =&gt; { self.incoming_edges[to_node] = Some(hashset!{ from_node }); () }\n        }\n    }\n}\n</code></pre>\n\n<p><strong>THE ERROR:</strong></p>\n\n<p>(Line numbers are from my original file, not the short code snippet. The error message is from before I added the ampersand to borrow, as shown above, but that code change didn't work.)</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0507]: cannot move out of index of `std::vec::Vec&lt;std::option::Option&lt;std::collections::HashSet&lt;usize&gt;&gt;&gt;`\n  --&gt; src\\graph\\mod.rs:46:15\n   |\n46 |         match self.outgoing_edges[from_node] {\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider borrowing here: `&amp;self.outgoing_edges[from_node]`\n47 |             Some(mut set) =&gt; { set.insert(to_node); () },\n   |                  -------\n   |                  |\n   |                  data moved here\n   |                  move occurs because `set` has type `std::collections::HashSet&lt;usize&gt;`, which does not implement the `Copy` trait\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 2, "creation_date": 1570450546, "post_id": 58269143, "comment_id": 102905705, "body": "Was it really necessary to ask how to compare two integers ? And the &quot;length&quot; of a string is rarely an interesting information."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570451551, "post_id": 58269143, "comment_id": 102906252, "body": "Based on your self-answer, I&#39;m thinking this question is a duplicate of <a href=\"https://stackoverflow.com/questions/47852269/can-i-use-and-in-match\">Can I use &#39;&lt;&#39; and &#39;&gt;&#39; in match?</a> (read all the answers). However, I don&#39;t know how I could have figured that out from reading the question alone, so I&#39;m voting &quot;unclear&quot;."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1570452228, "post_id": 58269143, "comment_id": 102906595, "body": "If you&#39;re interested in the number of chars, for example, you could compare <code>a.chars().count()</code> to <code>b.chars().count()</code>, or, if you may have very different lengths, do <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=08a80cd13331d3060249659255d63b90\" rel=\"nofollow noreferrer\">this</a>"}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1570452665, "post_id": 58269143, "comment_id": 102906811, "body": "See also <a href=\"https://stackoverflow.com/q/46290655/155423\">Get the String length in characters in Rust</a>"}, {"owner": {"reputation": 33, "user_id": 12165834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d4325f4eefc75bf0f977784823e37cd?s=128&d=identicon&r=PG&f=1", "display_name": "mysterybear", "link": "https://stackoverflow.com/users/12165834/mysterybear"}, "reply_to_user": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1570452958, "post_id": 58269143, "comment_id": 102906986, "body": "@DenysS&#233;guret sorry, I&#39;m new and just following along with the book and didn&#39;t find a similar enough question. I&#39;d like to have been able to search stackoverflow and be able to find the answer to the simple question. I couldn&#39;t, that&#39;s why I submitted this question."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570465002, "post_id": 58269143, "comment_id": 102913596, "body": "The question asks how to compare two string lengths, then provides a piece of code that does exactly that. If you hadn&#39;t answered it yourself, how could a potential answerer have divined what answer it was you wanted? Can you edit the question to be more explicit about what&#39;s missing in the code? It&#39;s logical that &quot;accounting for the case where the strings are of equal length&quot; might be answered by &quot;use <code>&gt;=</code> instead of <code>&gt;</code>&quot; -- that&#39;s what I assumed you meant at first."}, {"owner": {"reputation": 33, "user_id": 12165834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d4325f4eefc75bf0f977784823e37cd?s=128&d=identicon&r=PG&f=1", "display_name": "mysterybear", "link": "https://stackoverflow.com/users/12165834/mysterybear"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570953976, "post_id": 58269143, "comment_id": 103075002, "body": "@trentcl I asked what the <i>idiomatic</i> way of doing this was. The implication was that I knew how to naively do this (well, I could read the code I found in the book), but I wanted to know how to do it in the kind of robust manner you might find in actual use in a library or something (hence doing-something-different when the strings are of equal length)."}], "answers": [{"comments": [{"owner": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 2, "creation_date": 1570450664, "post_id": 58269156, "comment_id": 102905771, "body": "Notice that since <code>.len()</code> is the length in bytes, <code>&quot;\u0192oo&quot;.len() == 4</code> while <code>&quot;foo&quot;.len() == 3</code>."}, {"owner": {"reputation": 33, "user_id": 12165834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d4325f4eefc75bf0f977784823e37cd?s=128&d=identicon&r=PG&f=1", "display_name": "mysterybear", "link": "https://stackoverflow.com/users/12165834/mysterybear"}, "reply_to_user": {"reputation": 7882, "user_id": 2722968, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d0a9ce812892f03b8342c5a60be24632?s=128&d=identicon&r=PG&f=1", "display_name": "user2722968", "link": "https://stackoverflow.com/users/2722968/user2722968"}, "edited": false, "score": 0, "creation_date": 1570453336, "post_id": 58269156, "comment_id": 102907194, "body": "@user2722968 what&#39;s a better alternative?"}, {"owner": {"reputation": 33, "user_id": 12165834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d4325f4eefc75bf0f977784823e37cd?s=128&d=identicon&r=PG&f=1", "display_name": "mysterybear", "link": "https://stackoverflow.com/users/12165834/mysterybear"}, "reply_to_user": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 0, "creation_date": 1570453405, "post_id": 58269156, "comment_id": 102907227, "body": "@Stargateur true, sorry, edited."}, {"owner": {"reputation": 33, "user_id": 12165834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d4325f4eefc75bf0f977784823e37cd?s=128&d=identicon&r=PG&f=1", "display_name": "mysterybear", "link": "https://stackoverflow.com/users/12165834/mysterybear"}, "edited": false, "score": 0, "creation_date": 1570457119, "post_id": 58269156, "comment_id": 102909412, "body": "Just changed to use <code>.chars().count()</code> now also"}, {"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 1, "creation_date": 1570465553, "post_id": 58269156, "comment_id": 102913861, "body": "Use <code>UnicodeSegmentation::graphemes()</code> instead of <code>chars()</code> from the <code>unicode-segmentation</code> crate, if you want to count graphemes (visually distinct characters) rather than Unicode scalar values. For instance, emojis often consist of multiple Unicode scalar values."}], "tags": [], "owner": {"reputation": 33, "user_id": 12165834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d4325f4eefc75bf0f977784823e37cd?s=128&d=identicon&r=PG&f=1", "display_name": "mysterybear", "link": "https://stackoverflow.com/users/12165834/mysterybear"}, "is_accepted": false, "score": 2, "last_activity_date": 1570457096, "last_edit_date": 1570457096, "creation_date": 1570449620, "answer_id": 58269156, "question_id": 58269143, "link": "https://stackoverflow.com/questions/58269143/compare-string-length-in-rust/58269156#58269156", "title": "Compare String Length in Rust", "body": "<pre class=\"lang-rust prettyprint-override\"><code>use std::cmp::Ordering;\n\nfn longest&lt;'a&gt;(a: &amp;'a str, b: &amp;'a str) -&gt; Option&lt;&amp;'a str&gt; {\n  match a.chars().count().cmp(&amp;b.chars().count()) {\n    Ordering::Equal =&gt; None,\n    Ordering::Greater =&gt; Some(a),\n    _ =&gt; Some(b),\n  }\n}\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 12165834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d4325f4eefc75bf0f977784823e37cd?s=128&d=identicon&r=PG&f=1", "display_name": "mysterybear", "link": "https://stackoverflow.com/users/12165834/mysterybear"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 718, "favorite_count": 1, "closed_date": 1570453439, "answer_count": 1, "score": -5, "last_activity_date": 1570457274, "creation_date": 1570449579, "last_edit_date": 1570457274, "question_id": 58269143, "link": "https://stackoverflow.com/questions/58269143/compare-string-length-in-rust", "closed_reason": "Needs details or clarity", "title": "Compare String Length in Rust", "body": "<p>What's the idiomatic way to compare string length in Rust, accounting for the case where the strings are of equal length?</p>\n\n<p>There is a snippet of code in the <a href=\"https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html\" rel=\"nofollow noreferrer\">lifetimes part of the Rust book</a> but it simply returns the latter string if the given strings are of equal length:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn longest&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {\n    if x.len() &gt; y.len() {\n        x\n    } else {\n        y\n    }\n}\n</code></pre>\n\n<p>It has been pointed out that <code>.len()</code> counts the bytes rather than Unicode characters. The desired answer should include a function which returns the longest string in the case that one of the strings is longer in terms of Unicode characters; or something else in the case that the strings are of equal length. </p>\n"}, {"tags": ["rust", "parameter-passing", "command-line-interface", "clap"], "comments": [{"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1570436704, "post_id": 58265733, "comment_id": 102899291, "body": "It doesn&#39;t look like clap directly supports having two arguments with the same short name. If you want to use clap you would probably have to accept that it&#39;s shown as one argument, something like <code>-r seconds or filename</code> (which would IMO be cleaner anyway)."}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 2, "creation_date": 1570443520, "post_id": 58265733, "comment_id": 102902377, "body": "That does not sound like coreutils date btw -- are you sure you are not looking at a bsd date tool man page?"}], "owner": {"reputation": 39, "user_id": 8315238, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f147e8a5e1db8a7888daef57df425305?s=128&d=identicon&r=PG&f=1", "display_name": "kegesch", "link": "https://stackoverflow.com/users/8315238/kegesch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 242, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1570442877, "creation_date": 1570436116, "last_edit_date": 1570442877, "question_id": 58265733, "link": "https://stackoverflow.com/questions/58265733/how-do-i-make-claps-arguments-value-names-optional", "title": "How do I make clap&#39;s argument&#39;s value_names optional?", "body": "<p>I am trying to make a <code>date</code> clone from coreutils. The <code>man</code> describes that the command <code>-r</code> can have different value \"types\":</p>\n\n<pre><code>-r seconds\n        Print the date and time represented by seconds, where seconds is the number of seconds since the Epoch\n        (00:00:00 UTC, January 1, 1970; see time(3)), and can be specified in decimal, octal, or hex.\n\n-r filename\n        Print the date and time of the last modification of filename.\n\n</code></pre>\n\n<p>so the the argument could be described as <code>[-r seconds | filename]</code>.\nHow can I achieve the same in clap?</p>\n\n<p>I already tried having mutliple arguments with the same option-name. Also there is the possibility to have multiple <code>value_names</code> in an argument. But i did not find anything about that you can make the names optional.</p>\n"}, {"tags": ["rust", "hyper"], "comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570452994, "post_id": 58264529, "comment_id": 102907002, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/52521201/155423\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58264529/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}], "answers": [{"comments": [{"owner": {"reputation": 395, "user_id": 8636906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e17c868e496ca3b1d3e2070c8771d2ce?s=128&d=identicon&r=PG&f=1", "display_name": "Silva", "link": "https://stackoverflow.com/users/8636906/silva"}, "edited": false, "score": 0, "creation_date": 1570442247, "post_id": 58264612, "comment_id": 102901792, "body": "Thank you, is there a way to return the results without using map but use other combinators ? or use the following in the : <a href=\"https://stackoverflow.com/questions/55237128/cant-read-a-simple-payload-making-http-request-via-hyperclientclient-the-t\">link</a>"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 395, "user_id": 8636906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e17c868e496ca3b1d3e2070c8771d2ce?s=128&d=identicon&r=PG&f=1", "display_name": "Silva", "link": "https://stackoverflow.com/users/8636906/silva"}, "edited": false, "score": 0, "creation_date": 1570442478, "post_id": 58264612, "comment_id": 102901916, "body": "@Silva you can use any combinator present on <code>FutureExt</code> after <code>concat2()</code>, as <code>concat2</code> implements <code>Future</code>. As such, if you need to do more complex things with it, there&#39;s a wide variety of them available. Most of the time, however, <code>map()</code> (for when you are not chaining into another future), <code>or_else()</code> (when you are attempting to recover from an error result) and <code>and_then()</code> (when you are chaining into another future) will be the most commonly used combinators."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 395, "user_id": 8636906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e17c868e496ca3b1d3e2070c8771d2ce?s=128&d=identicon&r=PG&f=1", "display_name": "Silva", "link": "https://stackoverflow.com/users/8636906/silva"}, "edited": false, "score": 0, "creation_date": 1570442509, "post_id": 58264612, "comment_id": 102901931, "body": "The key takeaway is, no matter what combinator chain you decide, you need to return. <code>hyper</code> will do the rest by actively polling for it the right way."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 1, "last_activity_date": 1570430826, "creation_date": 1570430826, "answer_id": 58264612, "question_id": 58264529, "link": "https://stackoverflow.com/questions/58264529/how-to-unblock-a-future-thread-and-return-results/58264612#58264612", "title": "How to unblock a future thread and return results", "body": "<p>As I'm sure you've discovered, calling <code>wait()</code> on futures <em>is an anti-pattern</em> and defeats the purpose of async IO overall (as you're blocking your thread - and thus the executor - doing so).</p>\n\n<p><code>hyper</code> routes accept a return that implements <a href=\"https://docs.rs/futures/0.2.0/futures/future/trait.IntoFuture.html\" rel=\"nofollow noreferrer\"><code>IntoFuture</code></a>, a type implemented for <code>Option&lt;T&gt;</code> and <code>Result&lt;T, E&gt;</code> in a blanket fashion. As such, what you actually wrote does not need to block at all - you just need to combine futures like so:</p>\n\n<pre><code>if Method::POST == req.method() {\n   req.into_body().concat2().map(|_body| {\n       Response::new(Body::from(\"OK: data submitted\"))\n   })\n}\n</code></pre>\n\n<p>You don't even <em>use</em> the <code>body</code> content in your code, but I'm assuming that's for MCVE purposes. Inside the <code>map()</code> combinator, that value currently surfaces as <code>_body</code> and allows you to do whatever you want with it.</p>\n\n<p>I'm guessing you found yourself in this corner due to the documentation - all the combinators are on the <a href=\"https://rust-lang-nursery.github.io/futures-api-docs/0.3.0-alpha.19/futures/future/trait.FutureExt.html\" rel=\"nofollow noreferrer\"><code>FutureExt</code></a> trait object; they're not defined on <code>Future</code> and <code>Stream</code> traits themselves. As a result, they will not immediately surface when looking at the 0.2/0.3 doc, and it might have seemed like your only available calls were <code>poll_next()</code> and <code>wait()</code> as a consequence.</p>\n"}], "owner": {"reputation": 395, "user_id": 8636906, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e17c868e496ca3b1d3e2070c8771d2ce?s=128&d=identicon&r=PG&f=1", "display_name": "Silva", "link": "https://stackoverflow.com/users/8636906/silva"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 1, "accepted_answer_id": 58264612, "answer_count": 1, "score": 0, "last_activity_date": 1570455801, "creation_date": 1570430369, "last_edit_date": 1570455801, "question_id": 58264529, "link": "https://stackoverflow.com/questions/58264529/how-to-unblock-a-future-thread-and-return-results", "title": "How to unblock a future thread and return results", "body": "<p>I decided to use the hyper create to build a server that reads the body data of a POST method. <a href=\"https://stackoverflow.com/questions/52521201/how-do-i-synchronously-return-a-value-calculated-in-an-asynchronous-future-in-st\">How do I synchronously return a value calculated in an asynchronous Future in stable Rust?</a> explains a part of what I am looking for, but I don't want to use <code>tokio::run</code> or <code>future::lazy</code> because according to my understanding hyper uses Tokio and futures and the hyper body returns a stream. What I am trying to accomplish is to find other ways of handling a stream and get more knowledge on hyper <code>Request</code> methods.</p>\n\n<p>In the first approach, I <code>concat2</code> then call <code>wait</code>. <code>wait</code> blocks the current thread so my code hangs. </p>\n\n<pre><code>if Method::POST == req.method() {\n    let body = req.into_body().concat2().wait();\n    // convert to json and do something with the data.\n    Ok(Response::new(Body::from(\"OK: data submitted\")))\n}\n</code></pre>\n\n<p>In the second approach, I tried using <code>poll</code> and <code>and_then</code> but I always get a <code>NotReady</code>. The result type is <code>futures::poll::Async&lt;hyper::Chunk&gt;</code>.</p>\n\n<pre><code>if Method::POST == req.method() {\n    let body = req.into_body().concat2().poll().and_then(|e| {\n        // do something\n        Ok(e)\n    });\n\n    match body {\n        Ok(e) =&gt; println!(\"{:#?}\", e),\n        Err(r) =&gt; println!(\"{:#?}\", r),\n    };\n    Ok(Response::new(Body::from(\"\")))\n}\n</code></pre>\n\n<ol>\n<li>How can I unblock the current thread and return the results?</li>\n<li>How can I poll and then return the results, ?</li>\n</ol>\n\n<p>If possible, please explain good practice on how to handle <code>futures::poll::Async</code> and <code>wait()</code>. At the moment, <code>async</code>/<code>await</code> is unstable in Rust so I can't use it.</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4061, "user_id": 3393058, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/TmKho.png?s=128&g=1", "display_name": "Aloso", "link": "https://stackoverflow.com/users/3393058/aloso"}, "edited": false, "score": 5, "creation_date": 1570425200, "post_id": 58263565, "comment_id": 102895559, "body": "Try adding the 2nd generic parameter to the function instead of the impl block: <code>pub fn convert&lt;NewMode: Mode&gt;(self, m: NewMode)...</code>"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570434896, "post_id": 58263565, "comment_id": 102898565, "body": "Two questions - why can you not define a trait implementation like <code>trait Convert&lt;D:Mode&gt; { fn convert(self) -&gt; D; }</code> and then implement stepper conversion implementations? And secondly, what is the point of your <code>Obj&lt;_&gt;</code> &quot;object-like struct&quot;? Could you not get away with an <code>impl Deref</code> and <code>impl DerefMut</code> on <code>Obj&lt;T&gt;</code>?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1570435793, "post_id": 58263565, "comment_id": 102898944, "body": "re: <code>Obj&lt;_&gt;</code> - are you coming from a purely functional language (i.e. Haskell/Scala or equivalent)? I think you may be trying to emulate a pattern from those languages in a way that will hurt you more than it benefits you in the long run"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570439153, "post_id": 58263565, "comment_id": 102900265, "body": "What is an &quot;object-like struct&quot;? Is there such a thing as a struct that is not object-like? Is this terminology used in some other language community that I am not aware of?"}, {"owner": {"reputation": 121, "user_id": 6694930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92981b28431459ce034bc983ba5dfd50?s=128&d=identicon&r=PG", "display_name": "mcd", "link": "https://stackoverflow.com/users/6694930/mcd"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570492358, "post_id": 58263565, "comment_id": 102923116, "body": "@S&#233;bastienRenauld yes, I used to program Haskell a lot and most of the time Rust works quite similar; as I said I am new to Rust and if the answer is &#39;do something completely different&#39; then that is totally fine."}, {"owner": {"reputation": 121, "user_id": 6694930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92981b28431459ce034bc983ba5dfd50?s=128&d=identicon&r=PG", "display_name": "mcd", "link": "https://stackoverflow.com/users/6694930/mcd"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570492703, "post_id": 58263565, "comment_id": 102923166, "body": "@trentcl What I was refered to is to use the struct similar as one would use classes in OOP, i.e. some data + some methods. Sorry if my lingo is off I am not a professional programmer."}], "answers": [{"tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": true, "score": 1, "last_activity_date": 1570548565, "creation_date": 1570548565, "answer_id": 58289539, "question_id": 58263565, "link": "https://stackoverflow.com/questions/58263565/generic-type-conversion-for-objects-with-traits-in-rust/58289539#58289539", "title": "Generic type conversion for objects with traits in Rust", "body": "<p>Try adding the 2nd generic parameter to the function instead of the impl block:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub fn convert&lt;NewMode: Mode&gt;(self, m: NewMode)...\n</code></pre>\n"}], "owner": {"reputation": 121, "user_id": 6694930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92981b28431459ce034bc983ba5dfd50?s=128&d=identicon&r=PG", "display_name": "mcd", "link": "https://stackoverflow.com/users/6694930/mcd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "accepted_answer_id": 58289539, "answer_count": 1, "score": 2, "last_activity_date": 1570548565, "creation_date": 1570422788, "last_edit_date": 1570429610, "question_id": 58263565, "link": "https://stackoverflow.com/questions/58263565/generic-type-conversion-for-objects-with-traits-in-rust", "title": "Generic type conversion for objects with traits in Rust", "body": "<p>I have a trait <code>Mode</code>, several structs <code>MyModeN</code> and an object-like struct <code>&lt;MyMode: Mode&gt; Obj&lt;MyMode&gt;</code>.</p>\n\n<p>I want to build a general conversion function that outputs the new object, with some reinitialization. Writing the function is not the issue, getting the type-signature and the impl block correctly is.</p>\n\n<p>I tried</p>\n\n<pre><code>impl &lt;MyMode: Mode, NewMode: Mode&gt; Obj&lt;MyMode&gt; {\n    pub fn convert(self, m: NewMode) -&gt; Obj&lt;NewMode&gt; { unimplemented!() }\n}\n</code></pre>\n\n<p>but this fails because <code>NewMode</code> is not specified in the object itself. Using <code>impl</code> instead of NewMode, i.e.</p>\n\n<pre><code>pub fn convert(self, m: impl Mode) -&gt; Obj&lt;impl Mode&gt;\n</code></pre>\n\n<p>also does not help since then I cannot use</p>\n\n<pre><code>impl Obj&lt;MyModeN&gt; { .. }\n</code></pre>\n\n<p>blocks.</p>\n\n<p>How can I achieve my desired behavior?</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 5, "creation_date": 1570417056, "post_id": 58262920, "comment_id": 102894183, "body": "Is there any reason why <code>..</code> <i>shouldn&#39;t</i> be supported as an argument? It would seem weird to me if you had a method like <code>drain</code> that accepts only non-full ranges."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1570426123, "post_id": 58262920, "comment_id": 102895741, "body": "draining a vector is an efficient way to consume it if you don&#39;t need it after but you need some parts of its elements."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570452462, "post_id": 58262920, "comment_id": 102906702, "body": "It looks like your question might be answered by the answers of <a href=\"https://stackoverflow.com/q/27882800/155423\">When should I use <code>drain</code> vs <code>into_iter</code>?</a>. If not, please <b><a href=\"https://stackoverflow.com/posts/58262920/edit\">edit</a></b> your question to explain the differences. Otherwise, we can mark this question as already answered."}, {"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 1, "creation_date": 1570456514, "post_id": 58262920, "comment_id": 102909039, "body": "From the duplicate: <i>After using drain, the Vec is empty but the storage previously allocated for its elements remains allocated. This means that you can insert new elements in the Vec without having to allocate storage for them until you reach the Vec&#39;s capacity.</i>"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570456723, "post_id": 58262920, "comment_id": 102909182, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/27882800/when-should-i-use-drain-vs-into-iter\">When should I use `drain` vs `into_iter`?</a>"}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "edited": false, "score": 0, "creation_date": 1570456801, "post_id": 58262920, "comment_id": 102909226, "body": "That&#39;s cool, but if you&#39;re telling me the only reason to drain an entire sequence is internally memory reuse, that&#39;s fine but I don&#39;t see where that answer says that."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570456933, "post_id": 58262920, "comment_id": 102909302, "body": "Not to strain the &quot;book&quot; metaphor too much: <code>into_iter</code> takes the book apart page by page, while <code>drain</code> scrapes the words off the pages so when it&#39;s done the book can be filled up later with something else."}, {"owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570457060, "post_id": 58262920, "comment_id": 102909382, "body": "@trentcl so if you&#39;re not reusing the memory, the answer is that there is no advantage and you shouldn&#39;t use <code>drain</code> (because it&#39;s all about memory reuse). I don&#39;t see that on the other question, and think it would be a valuable contribution."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570464124, "post_id": 58262920, "comment_id": 102913156, "body": "I don&#39;t agree. &quot;What are the appropriate uses for each iterator?&quot; encompasses your question and the answers are pretty much exhaustive. We don&#39;t need to clarify every &quot;What&#39;s the difference between X and Y?&quot; with a new question that asks &quot;Are these the <i>only</i> differences between X and Y?&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 269539, "user_id": 155423, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/419218774d04a581476ea1887a0921e0?s=128&d=identicon&r=PG", "display_name": "Shepmaster", "link": "https://stackoverflow.com/users/155423/shepmaster"}, "edited": false, "score": 0, "creation_date": 1570663549, "post_id": 58313451, "comment_id": 102987767, "body": "One could create a separate trait that only the desired concrete range types would implement, but that adds the problem of a new, different trait."}], "tags": [], "owner": {"reputation": 22505, "user_id": 1411457, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/XqssD.png?s=128&g=1", "display_name": "harmic", "link": "https://stackoverflow.com/users/1411457/harmic"}, "is_accepted": false, "score": 0, "last_activity_date": 1570663487, "last_edit_date": 1570663487, "creation_date": 1570663142, "answer_id": 58313451, "question_id": 58262920, "link": "https://stackoverflow.com/questions/58262920/is-the-only-reason-to-use-drain-to-preserve-the-memory-allocation-of-the-ori/58313451#58313451", "title": "Is the only reason to use drain(..) to preserve the memory allocation of the original structure?", "body": "<p>I think you are approaching this question from the wrong direction.</p>\n\n<p>Having made a decision that you would like to have a <code>drain</code> method that takes a <code>RangeBounds</code>, you then need to consider the pros and cons of disallowing an unbounded <code>RangeBounds</code>.</p>\n\n<p><strong>Pros</strong></p>\n\n<ul>\n<li>If you disallowed an unbounded range, there would be less confusion about whether to use <code>drain(..)</code> vs <code>into_iter()</code>, although noting that these two are not exactly identical.</li>\n</ul>\n\n<p><strong>Cons</strong></p>\n\n<ul>\n<li><p>You would actually have to go out of your way to disallow an unbounded range.</p></li>\n<li><p>Ideally, you would want the use of an unbounded range to cause a compilation error. I'm new to Rust so I am not certain of this, but as far as I know there is no way to express that <code>drain</code> should take a generic that implements trait <code>RangeBounds</code> as long as it is not a <code>RangeFull</code>.</p></li>\n<li><p>If it could not be checked at compile time, what behavior would you want at runtime? A panic would seem to be the only option.</p></li>\n<li><p>As observed in the comments and in the proposed duplicate, after completely draining it, the <code>Vec</code> will have a length of 0 but a capacity the same as it did before calling <code>drain</code>. By allowing an unbounded range with <code>drain</code> you are making it easier to avoid a repeated memory allocation in some use cases.</p></li>\n</ul>\n\n<p>To me at least, the cons outweigh the pros.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 433, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1570663487, "creation_date": 1570416307, "last_edit_date": 1570457501, "question_id": 58262920, "link": "https://stackoverflow.com/questions/58262920/is-the-only-reason-to-use-drain-to-preserve-the-memory-allocation-of-the-ori", "title": "Is the only reason to use drain(..) to preserve the memory allocation of the original structure?", "body": "<p>Rust has a feature to drain an entire sequence,</p>\n\n<blockquote>\n  <p>If you do need to drain the entire sequence, use the full range, <code>..</code>, as the argument. - Programming Rust</p>\n</blockquote>\n\n<p>Why would you ever need to drain the entire sequence? <a href=\"https://doc.rust-lang.org/std/vec/struct.Drain.html\" rel=\"nofollow noreferrer\">I can see this documented</a>, but I don't see any use cases for this,</p>\n\n<pre><code>let mut drain = vec.drain(..);\n</code></pre>\n\n<p>If draining does not take ownership but clears the original structure, what's the point of not taking ownership? I thought the point of a mutable reference was because the <em>\"book was borrowed\"</em> and that you could give it back. If the original structure is cleared why not <em>\"own\"</em> the book? Why would you want to only borrow something and destroy it? It makes sense to want to <a href=\"https://stackoverflow.com/a/58263002/124486\"><em>borrow</em> a subset of a vector, and clearing that subset</a> -- but I can't seem to wrap my head around wanting to <em>borrow</em> the entire thing clearing the original structure.</p>\n"}, {"tags": ["rust", "iterator"], "comments": [{"owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "edited": false, "score": 0, "creation_date": 1570417346, "post_id": 58262902, "comment_id": 102894235, "body": "There isn&#39;t a single <code>drain</code> method but rather a separate one for many kinds of collections e.g. <code>Vec&lt;T&gt;</code>, <code>HashMap&lt;K, V&gt;</code> and <code>String</code>. Does <i>Programming Rust</i> say which one it&#39;s talking about, or is it left ambiguous? <a href=\"https://doc.rust-lang.org/stable/std/collections/struct.HashSet.html#method.drain\" rel=\"nofollow noreferrer\"><code>HashSet::drain</code></a> does exactly what the text says."}], "answers": [{"tags": [], "owner": {"reputation": 3836, "user_id": 3003401, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f2de9e3bd27825488f4cf0a1dd86ac0?s=128&d=identicon&r=PG&f=1", "display_name": "Cerberus", "link": "https://stackoverflow.com/users/3003401/cerberus"}, "is_accepted": true, "score": 6, "last_activity_date": 1570453553, "last_edit_date": 1570453553, "creation_date": 1570417170, "answer_id": 58263002, "question_id": 58262902, "link": "https://stackoverflow.com/questions/58262902/rusts-drain-iterator-dropped-removes-any-remaining-elements/58263002#58263002", "title": "Rust&#39;s drain, iterator dropped ... &quot;removes any remaining elements&quot;", "body": "<p>This looks like a bit imprecise wording.</p>\n\n<p>The real meaning of these words is: if you drop the <code>drain</code> iterator without exhausting it, it will drop all the elements <em>used for its creation</em>. As you've asked it to use only the first three elements, it won't empty the entire vector, but rather the first part only; but it will do this even if unused:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let mut a = vec![1, 2, 3, 4, 5];\n    {\n        let _ = a.drain(0..3);\n    }\n\n    println!(\"Hello, world! {:?}\", a);\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>Hello, world! [4, 5]\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=e1a71d07dfd3527dc38f469900f3cc8f\" rel=\"nofollow noreferrer\">playground</a></p>\n\n<p>You could understand this in the following way: the \"collection\" mentioned here is not the initial collection the <code>drain</code> was called on, but rather is \"sub-collection\", specified by the passed range.</p>\n"}], "owner": {"reputation": 63855, "user_id": 124486, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/605442f85418d858e2ce1e1aea2092bb?s=128&d=identicon&r=PG", "display_name": "Evan Carroll", "link": "https://stackoverflow.com/users/124486/evan-carroll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 233, "favorite_count": 0, "accepted_answer_id": 58263002, "answer_count": 1, "score": 1, "last_activity_date": 1570460677, "creation_date": 1570416085, "last_edit_date": 1570460677, "question_id": 58262902, "link": "https://stackoverflow.com/questions/58262902/rusts-drain-iterator-dropped-removes-any-remaining-elements", "title": "Rust&#39;s drain, iterator dropped ... &quot;removes any remaining elements&quot;", "body": "<p>On page 327 of <a href=\"http://shop.oreilly.com/product/0636920040385.do\" rel=\"nofollow noreferrer\">Programming Rust</a> you can find the following statement</p>\n\n<blockquote>\n  <p>However, unlike the <code>into_iter()</code> method, which takes the collection by value and consumes it, <em><code>drain</code></em> merely borrows a mutable references to the collection, and when the iterator is dropped, it removes any <strong>remaining</strong> elements from the collection, and leaves it empty.</p>\n</blockquote>\n\n<p>I'm confused at what it means it says it removes any <em>remaining</em> elements from the collection? I can see with this code when the iterator is dropped the remaining elements from <code>a</code> are still there,</p>\n\n<pre><code>fn main() {\n    let mut a = vec![1, 2, 3, 4, 5];\n    {\n        let b: Vec&lt;i32&gt; = a.drain(0..3).collect();\n    }\n\n    println!(\"Hello, world! {:?}\", a);\n}\n</code></pre>\n\n<p>Perhaps I'm confused at merely the wording. Is there something more to this?</p>\n"}, {"tags": ["syntax", "rust"], "answers": [{"tags": [], "owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "is_accepted": false, "score": 2, "last_activity_date": 1570453181, "last_edit_date": 1570453181, "creation_date": 1570429383, "answer_id": 58264380, "question_id": 58262487, "link": "https://stackoverflow.com/questions/58262487/how-do-i-mix-boolean-comparisons-and-if-let-statements-in-a-clean-way/58264380#58264380", "title": "How do I mix boolean comparisons and &#39;if let&#39; statements in a clean way?", "body": "<p>You can do it in a single expression using <a href=\"https://doc.rust-lang.org/std/mem/fn.discriminant.html\" rel=\"nofollow noreferrer\"><code>std::mem::discriminant</code></a> like this:</p>\n\n<pre><code>fn is_mine(&amp;self, row: i32, col: i32) -&gt; bool {\n    use std::mem::discriminant;\n\n    self.bounds.is_in_bounds(row, col)\n        &amp;&amp; discriminant(&amp;self.field[row as usize][col as usize])\n            == discriminant(&amp;MineCell::Mine)\n}\n</code></pre>\n\n<p>Remember that in Rust, logical operators short-circuit, so the part after the <code>&amp;&amp;</code> will only be executed if the first part is true.</p>\n"}, {"tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": true, "score": 2, "last_activity_date": 1570453203, "last_edit_date": 1570453203, "creation_date": 1570432695, "answer_id": 58265024, "question_id": 58262487, "link": "https://stackoverflow.com/questions/58262487/how-do-i-mix-boolean-comparisons-and-if-let-statements-in-a-clean-way/58265024#58265024", "title": "How do I mix boolean comparisons and &#39;if let&#39; statements in a clean way?", "body": "<p>If your enum implements <code>PartialEq</code>, this should also work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn is_mine(&amp;self, row: i32, col: i32) -&gt; bool {\n    self.bounds.is_in_bounds(row, col)\n        &amp;&amp; self.field[row as usize][col as usize] == MineCell::Mine\n}\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 12174154, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mAwB-3aHEiTFATJXo1Q6_CZpLCdH6sxNyzsYSteUg=k-s128", "display_name": "Randal Robinson", "link": "https://stackoverflow.com/users/12174154/randal-robinson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "accepted_answer_id": 58265024, "answer_count": 2, "score": 1, "last_activity_date": 1570453203, "creation_date": 1570410935, "last_edit_date": 1570453126, "question_id": 58262487, "link": "https://stackoverflow.com/questions/58262487/how-do-i-mix-boolean-comparisons-and-if-let-statements-in-a-clean-way", "title": "How do I mix boolean comparisons and &#39;if let&#39; statements in a clean way?", "body": "<p>I am writing a function which depends on comparing booleans, and also checking an enum's type using the 'if let' syntax. Is there a cleaner way than what I have below? </p>\n\n<pre><code>fn is_mine(&amp;self, row: i32, col: i32) -&gt; bool {\n    if self.bounds.is_in_bounds(row, col) {\n        if let MineCell::Mine = self.field[row as usize][col as usize] {\n            return true;\n        }\n    }\n\n    false\n}\n</code></pre>\n\n<p>This works, but it feels dirty by returning true/false as the only statement inside of an 'if' block. In my case, the boolean comparison in the <code>.is_in_bounds()</code> member has to occur first, then the <code>if let</code> check on the enum's type is safe to do. </p>\n\n<p>This is technically correct, but I feel like there has to be a more idiomatic way to do this. I've seen posts here and elsewhere about how to properly stack <code>if let</code> statements, but nothing about mixing boolean comparisons and <code>if let</code> comparisons. </p>\n\n<p>Should I accept the correct but ugly form of the above code?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570398513, "post_id": 58260773, "comment_id": 102891457, "body": "This question was <a href=\"https://users.rust-lang.org/t/running-first-program-results-in-no-authorization-error/33343\" rel=\"nofollow noreferrer\">cross-posted to users.rust-lang.org</a>."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 5282265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a87f1ceaded32808b904473d66238e05?s=128&d=identicon&r=PG&f=1", "display_name": "Monika", "link": "https://stackoverflow.com/users/5282265/monika"}, "edited": false, "score": 0, "creation_date": 1570562736, "post_id": 58261516, "comment_id": 102949808, "body": "Thank you, that was it. My second internal hard drive, on which my Rust folder is located, was mounted <code>noexec</code> by Kubuntu. Yes, all binary executables were affected, my other coding is mostly in Java so I never noticed."}], "tags": [], "owner": {"reputation": 30613, "user_id": 8705432, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/14e0f95975d80525786e419222821ff4?s=128&d=identicon&r=PG&f=1", "display_name": "bk2204", "link": "https://stackoverflow.com/users/8705432/bk2204"}, "is_accepted": true, "score": 1, "last_activity_date": 1570398711, "creation_date": 1570398711, "answer_id": 58261516, "question_id": 58260773, "link": "https://stackoverflow.com/questions/58260773/hello-world-rust-program-compiles-but-execution-results-in-no-authorization-err/58261516#58261516", "title": "Hello World Rust program compiles, but execution results in No authorization error", "body": "<p>You haven't told us anything about what operating system you're on, but this error appears to be the errno value <code>EACCES</code>.  The reasons that <code>EACCES</code> can be given when running an <code>exec</code> function on Linux are the following:</p>\n\n<ul>\n<li>Search permission is denied on a component of the path.</li>\n<li>The file or script interpreter isn't a regular file.</li>\n<li>Execute permission is denied for the script or ELF interpreter.</li>\n<li>The fileystem is mounted <code>noexec</code>.</li>\n</ul>\n\n<p>In this case, the most likely problem is that you're working on a file system that is mounted <code>noexec</code>.  On some systems, <code>/tmp</code> is mounted <code>noexec</code>, and in some large installations (such as universities), <code>/home</code> is as well.  You should run <code>mount</code> (or your operating system's equivalent) to find out the mounted file systems and their mount options, and then pick a file system that isn't mounted <code>noexec</code>, assuming that's the case.</p>\n\n<p>The other problem could be that the directory doesn't have search permissions, in which case you should look up the directory hierarchy and make sure the execute bit is set for each of those directories for your user, or to switch to a directory which does have those perimssions.</p>\n\n<p>This isn't really a Rust issue; you'd likely have this with a C program as well.  The problem is almost certainly an issue with configuration or permissions on your system.</p>\n"}], "owner": {"reputation": 33, "user_id": 5282265, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a87f1ceaded32808b904473d66238e05?s=128&d=identicon&r=PG&f=1", "display_name": "Monika", "link": "https://stackoverflow.com/users/5282265/monika"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 58261516, "answer_count": 1, "score": 1, "last_activity_date": 1570398711, "creation_date": 1570391826, "question_id": 58260773, "link": "https://stackoverflow.com/questions/58260773/hello-world-rust-program-compiles-but-execution-results-in-no-authorization-err", "title": "Hello World Rust program compiles, but execution results in No authorization error", "body": "<p>I have just started with the Rust book. Compiling works fine, but running it results in the error \"No authorization\".</p>\n\n<p>I have the file</p>\n\n<pre><code>fn main() {\n  println!(\"Hello, world!\");\n}\n</code></pre>\n\n<p>and compiled it with </p>\n\n<pre><code>rustc main.rs\n</code></pre>\n\n<p>the binary file \"main\" has been created, there was no error output (or any output) from the compiler. but</p>\n\n<pre><code>./main\n</code></pre>\n\n<p>results in </p>\n\n<pre><code>bash: ./main: Keine Berechtigung (which means \"No authorization\")\n</code></pre>\n\n<p>As you can see I am the owner of the file and it is executable:</p>\n\n<pre><code>ls -l \n-rwxrwxr-x 1 monika monika 2491696 Okt  6 21:12 main\n-rw-r--r-- 1 monika monika      45 Okt  6 20:31 main.rs\n</code></pre>\n\n<p>I have tried: Uninstalling and reinstalling Rust, rebooting the computer.</p>\n\n<p>I have not used sudo at any point nor run any part (installation, file creation, compilation) as another user.</p>\n"}, {"tags": ["generics", "collections", "rust", "traits"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570392142, "post_id": 58260663, "comment_id": 102890241, "body": "<code>IntoIterator::into_iter</code> takes <code>self</code>; you can&#39;t call <code>.into_iter()</code> on a value of <code>&amp;C</code> (<code>cannot move out of `*nodes` which is behind a shared reference</code>). I think you probably need to rethink this a bit -- <code>IntoIterator</code> only lets you <i>consume</i> the collection, not iterate over it in-place."}, {"owner": {"reputation": 65, "user_id": 12173376, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TbLKenB0WaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfWHvl5EvX4JLdBRyrm70Ejnz2m4A/photo.jpg?sz=128", "display_name": "joergbrech", "link": "https://stackoverflow.com/users/12173376/joergbrech"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570393778, "post_id": 58260663, "comment_id": 102890546, "body": "Thanks @trentcl, I missed that! In the end I guess I don&#39;t really need the <code>IntoIterator</code> trait, as long as I can iterate over the <i>indices</i> of the collection somehow. I just don&#39;t know how I can achieve this generically."}], "answers": [{"comments": [{"owner": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 1, "creation_date": 1570535061, "post_id": 58281620, "comment_id": 102936235, "body": "You can replace your <code>Enumerate</code> struct with <code>std::iter::Zip</code>, and you get a fuller implementation of the same kind of iterator. Though no panic if the indices are longer than the values, that would work differently.  Now this answer maybe doesn&#39;t need to be a full solution, but another option is to leave the <code>Enumerate</code> thing as an associated type, so that collections can provide their own optimized version if possible. They can always fall back to <code>Zip</code>.  Example of that: <code>HashMap</code>&#39;s enumeration iterator is just its <code>.iter()</code>."}, {"owner": {"reputation": 65, "user_id": 12173376, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TbLKenB0WaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfWHvl5EvX4JLdBRyrm70Ejnz2m4A/photo.jpg?sz=128", "display_name": "joergbrech", "link": "https://stackoverflow.com/users/12173376/joergbrech"}, "reply_to_user": {"reputation": 9443, "user_id": 3616050, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/yQfMD.png?s=128&g=1", "display_name": "bluss", "link": "https://stackoverflow.com/users/3616050/bluss"}, "edited": false, "score": 0, "creation_date": 1570551720, "post_id": 58281620, "comment_id": 102945050, "body": "Awesome, thanks @bluss! <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0fb617f4d2f68fa387b9cb67eb2dc417\" rel=\"nofollow noreferrer\">Here</a> is the implementation using <code>std::iter::Zip</code> instead of <code>Enumerate</code>, its much more concise. I am not sure if I can replace the <code>Enumerate</code>/<code>Zip</code> output with another associated type, because I need to bind the <code>Iterator::Item</code> type of the <code>IndexIter</code> to the <code>Idx</code> type."}], "tags": [], "owner": {"reputation": 65, "user_id": 12173376, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TbLKenB0WaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfWHvl5EvX4JLdBRyrm70Ejnz2m4A/photo.jpg?sz=128", "display_name": "joergbrech", "link": "https://stackoverflow.com/users/12173376/joergbrech"}, "is_accepted": false, "score": 0, "last_activity_date": 1570540211, "last_edit_date": 1570540211, "creation_date": 1570518445, "answer_id": 58281620, "question_id": 58260663, "link": "https://stackoverflow.com/questions/58260663/how-can-i-iterate-over-the-indices-of-a-generic-collection-that-implements-index/58281620#58281620", "title": "How can I iterate over the indices of a generic collection that implements Index and IntoIterator?", "body": "<p>I found a way to do this:</p>\n\n<ul>\n<li>Minimal example in a <a href=\"https://github.com/joergbrech/graphtest/tree/MWE\" rel=\"nofollow noreferrer\">Github Repo</a></li>\n<li>Minimal example in a <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=033fab2186cf7ca204ad7fa8978489fe\" rel=\"nofollow noreferrer\">Rust Playground</a></li>\n</ul>\n\n<h1>Explanation</h1>\n\n<p>I realized that I wished <code>Index</code> provided an <code>enumerate</code> method to enumerate indices and the items behind the index of the collection. So with the help of the accepted answer <a href=\"https://stackoverflow.com/questions/30630810/using-generic-iterators-instead-of-specific-list-types\">Using generic iterators instead of specific list types</a> I implemented a supertrait of <code>Index</code> that provides this method.</p>\n\n<h2>Step 1: Define a new <code>Enumerate</code> struct and implement <code>Iterator</code> for it</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Enumerate&lt;IndexIter, ItemIter&gt; {\n    index: IndexIter,\n    item: ItemIter,\n}\n\n/// implements the [`Iterator`] trait for the new struct\nimpl&lt;IndexIter, ItemIter&gt; Iterator for Enumerate&lt;IndexIter, ItemIter&gt;\nwhere\n    IndexIter: Iterator,\n    ItemIter: Iterator,\n{\n    type Item = (IndexIter::Item, ItemIter::Item);\n\n    /// returns the next iterator\n    #[inline]\n    fn next(&amp;mut self) -&gt; Option&lt;(IndexIter::Item, ItemIter::Item)&gt; {\n        self.index.next().map(|idx| {\n            // CAUTION! We need to make sure that the index and item iterators are ordered consistently.\n            // We are really just incrementing two iterators simultaneously here...\n            (idx, self.item.next().unwrap())\n        })\n    }\n}\n</code></pre>\n\n<h2>Step 2: Define a supertrait for <code>Index</code> that adds the <code>enumerate</code> method</h2>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// trait for implementing over the indices of collections that implement [`std::ops::Index`].\n/// \n/// It adds the enumerate function that returns an `Enumerate&lt;IndexIter,ItemIter&gt;` as an iterator.\npub trait SuperIndex&lt;'a, Idx&gt;: std::ops::Index&lt;Idx&gt; {\n    type IndexIter: Iterator&lt;Item = Idx&gt;;\n    type ItemIter: Iterator;\n\n    /// enumerates over the indices and items of a collection\n    fn enumerate(&amp;'a self) -&gt; Enumerate&lt;Self::IndexIter, Self::ItemIter&gt;;\n}\n</code></pre>\n\n<h2>Step 3: Implement the supertrait for the collections I want to use</h2>\n\n<h3>Implementation for <code>Vec</code></h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// implement the [`SuperIndex`] trait for [`Vec&lt;T&gt;`]\nimpl&lt;'a, T: 'a&gt; SuperIndex&lt;'a, usize&gt; for Vec&lt;T&gt; {\n    type IndexIter = std::ops::Range&lt;usize&gt;;\n    type ItemIter = std::slice::Iter&lt;'a, T&gt;;\n\n    fn enumerate(&amp;'a self) -&gt; Enumerate&lt;Self::IndexIter, Self::ItemIter&gt; {\n        Enumerate {\n            index: 0..self.len(),\n            item: self.iter(),\n        }\n    }\n}\n</code></pre>\n\n<h3>Implementation for <code>HashMap</code></h3>\n\n<pre class=\"lang-rust prettyprint-override\"><code>/// implement the [`SuperIndex`] trait for [`HashMap&lt;K, V, S&gt;`]\nimpl&lt;'a, K: 'a, V: 'a, S&gt; SuperIndex&lt;'a, &amp;'a K&gt; for std::collections::HashMap&lt;K, V, S&gt;\nwhere\n    K: Eq + std::hash::Hash,\n    S: std::hash::BuildHasher,\n{\n    type IndexIter = std::collections::hash_map::Keys&lt;'a, K, V&gt;;\n    type ItemIter = std::collections::hash_map::Values&lt;'a, K, V&gt;;\n\n    fn enumerate(&amp;'a self) -&gt; Enumerate&lt;Self::IndexIter, Self::ItemIter&gt; {\n        Enumerate {\n            index: self.keys(),\n            item: self.values(),\n        }\n    }\n}\n</code></pre>\n\n<h1>Discussion</h1>\n\n<p>Now I can enumerate the index and value for any kind of collection that implements <code>SuperIndex</code> and <code>index</code> does not have to be a <code>usize</code>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>for (index, item) in c.enumerate() {\n    assert_eq!(&amp;c[index], item);\n}\n</code></pre>\n\n<p>This implementation does what I want and I can't think of any alternatives, but it has a few minor pitfalls:</p>\n\n<ul>\n<li><code>SuperIndex</code> indices cannot be quite as generic as the ones for <code>Index</code>, e.g. slices are not allowed.</li>\n<li>We need to explicitly implement <code>SuperIndex</code> for each collection.</li>\n<li>In each implementation, we must make sure that the two iterators are ordered consistently.</li>\n</ul>\n\n<p>If there is anything off in my implementation please let me know! It seems to work fine, but I only understand half of what I am doing.</p>\n"}], "owner": {"reputation": 65, "user_id": 12173376, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-TbLKenB0WaQ/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rfWHvl5EvX4JLdBRyrm70Ejnz2m4A/photo.jpg?sz=128", "display_name": "joergbrech", "link": "https://stackoverflow.com/users/12173376/joergbrech"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 320, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1570540211, "creation_date": 1570390900, "last_edit_date": 1570531542, "question_id": 58260663, "link": "https://stackoverflow.com/questions/58260663/how-can-i-iterate-over-the-indices-of-a-generic-collection-that-implements-index", "title": "How can I iterate over the indices of a generic collection that implements Index and IntoIterator?", "body": "<p>I want to implement a small directed graph trait for any generic collection <code>C</code> that implements <code>std::ops::Index</code> and <code>std::iter::IntoIterator</code>. I want the collection to represent the nodes of the graph. Each node is represented by its index into <code>C</code>, which could be a <code>usize</code> index into a <code>Vec</code> or a <code>String</code> key into a <code>HashMap</code>.\nI don't know if this is the best approach to a graph library, but I also want to learn about Rust, generic traits and the standard library of Rust.</p>\n\n<p>At some points of my implementation I need to iterate over all indices of a <code>C</code> instance. The only method I have found to do this is the <code>enumerate</code> function, but this implements only a <code>usize</code> counter for an iterator and not my generic type, so it would work for <code>Vec</code>, but not for <code>HashMap</code>. </p>\n\n<p>Here is what the implementation looks like using <code>enumerate</code>. The <code>nodes</code> and <code>children</code> function are required, <code>children</code> returns the adjacency information of the graph. To get all the predecessors using the <code>parents</code> function, I need to iterate over the indices of the generic container type.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub trait SimpleGraph {\n    /// type used as an index to refer to nodes.\n    type I: Eq + std::hash::Hash;\n\n    /// container type for the nodes\n    type C: std::ops::Index&lt;Self::I&gt; + std::iter::IntoIterator&lt;Item = Self::I&gt;;\n\n    /// returns a reference to the node container.\n    fn nodes(&amp;self) -&gt; &amp;Self::C;\n\n    /// gets the indices of the children of a node with index `index`.\n    fn children(&amp;self, index: Self::I) -&gt; Vec&lt;Self::I&gt;;\n\n    /// gets all ancestors of a node (not very efficient...)\n    fn parents(&amp;self, i: Self::I) -&gt; Vec&lt;Self::I&gt; {\n        let mut res = Vec::&lt;Self::I&gt;::new();\n        let nodes = self.nodes();\n        for (idx, _) in nodes.into_iter().enumerate() {\n            let children = self.children(idx);\n            for child_idx in children {\n                if child_idx == i {\n                    res.push(idx);\n                }\n            }\n        }\n        return res;\n    }\n}\n</code></pre>\n\n<p>This gives me the not very surprising compiler error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types\n  --&gt; src/lib.rs:19:42\n   |\n19 |             let children = self.children(idx);\n   |                                          ^^^ expected associated type, found usize\n   |\n   = note: expected type `&lt;Self as SimpleGraph&gt;::I`\n              found type `usize`\n</code></pre>\n\n<p>One <em>ugly</em> solution would be to add another required method <code>indices</code> that returns a list of indices and then iterate over this list, but this would not be very user friendly and seems like an unnecessary step for any of the <code>std::collections</code> that implement both <code>std::ops::Index</code> and <code>std::iter::IntoIterator</code>. I would rather overwrite the <code>enumerate</code> function in a generic way. </p>\n\n<p>How would I code this in a clean and generic way?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "edited": false, "score": 1, "creation_date": 1570385401, "post_id": 58259790, "comment_id": 102888688, "body": "Why does your <code>Vec</code> contain references to <code>Contained</code>? Simply <code>contained: Vec&lt;Contained&gt;</code> should suffice for most use cases."}, {"owner": {"reputation": 21663, "user_id": 9305398, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cqJvE.png?s=128&g=1", "display_name": "Acorn", "link": "https://stackoverflow.com/users/9305398/acorn"}, "edited": false, "score": 0, "creation_date": 1570388840, "post_id": 58259790, "comment_id": 102889536, "body": "Please explain your requirements. In other words, what are you trying to achieve? Where are your <code>Contained</code> objects? They have to live somewhere else that outlives the <code>Container</code>."}, {"owner": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "edited": false, "score": 0, "creation_date": 1570390130, "post_id": 58259790, "comment_id": 102889827, "body": "I specifically dont want Cobntained to outlive Container.  I wou8ld like objects with the same life time, and I need to reference with pointers &amp;Contained because otherwise I get size not know during complication errors."}], "answers": [{"comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1570400162, "post_id": 58260956, "comment_id": 102891739, "body": "<i>&quot;Contained appears to live the same lifetime as Container&quot;</i>  \u2014 When <code>Container</code> is dropped it will drop the <code>Box</code> which will, in turn, drop its contents."}], "tags": [], "owner": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "is_accepted": false, "score": 0, "last_activity_date": 1570393507, "creation_date": 1570393507, "answer_id": 58260956, "question_id": 58259790, "link": "https://stackoverflow.com/questions/58259790/how-can-i-specify-the-lifetimeof-a-fully-contained-struct-in-rust-with-no-cicula/58260956#58260956", "title": "how can I specify the lifetimeof a fully contained struct in rust with no cicular deps", "body": "<p>Answering my own question , it seem Box does what I want</p>\n\n<pre><code>struct Container {\n    contained: Box&lt;Option&lt;Contained&gt;&gt;\n}\n\nstruct Contained {\n    id: u64,\n}\n\nimpl Container {\n\n    pub fn new() -&gt; Container {\n        Container {\n            contained: Box::new(None),\n        }\n    }\n\n    pub fn new_contained(&amp;mut self, id: u64) {\n        let c= Contained {\n            id\n        };\n        self.contained = Box::new(Some(c));\n    }\n}\n</code></pre>\n\n<p>Contained appears to live the same lifetime as Container.</p>\n"}], "owner": {"reputation": 5684, "user_id": 870207, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/50fa4a2d71492f94030da21388aecd54?s=128&d=identicon&r=PG", "display_name": "teknopaul", "link": "https://stackoverflow.com/users/870207/teknopaul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 39, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1570393507, "creation_date": 1570383767, "question_id": 58259790, "link": "https://stackoverflow.com/questions/58259790/how-can-i-specify-the-lifetimeof-a-fully-contained-struct-in-rust-with-no-cicula", "title": "how can I specify the lifetimeof a fully contained struct in rust with no cicular deps", "body": "<p>I'm trying to create a struct that contains a list of other structs, (could be fixed size if that helped)</p>\n\n<pre><code>struct Container&lt;'m&gt; {\n    contained: Vec&lt;&amp;'m Contained&gt;,\n}\n\nstruct Contained {\n    id: u64,\n}\n\nimpl Container&lt;'_&gt; {\n\n    pub fn new&lt;'m&gt;() -&gt; Container&lt;'m&gt; {\n        Container {\n            contained: Vec::new()\n        }\n    }\n\n    pub fn new_contained&lt;'m&gt;(&amp;mut self, id: u64) {\n        let c = Contained {\n            id\n        };\n        self.contained.push(&amp;c);\n                            ^^ lifetime of Contained ends here\n    }\n}\n</code></pre>\n\n<p>I can see that life time of Contained ends but I cant see how to create a struct with a given lifetime.</p>\n\n<p>Do I have any alternatives I tried using a fixed size array instead of a Vec this way the Container owns the contents of the Array, but I cant create a zero sized array to start with.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1570355306, "post_id": 58255974, "comment_id": 102881209, "body": "Seems like a great place for <a href=\"https://doc.rust-lang.org/1.6.0/book/if-let.html\" rel=\"nofollow noreferrer\"><code>if let</code></a>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "reply_to_user": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "edited": false, "score": 0, "creation_date": 1570355369, "post_id": 58255974, "comment_id": 102881227, "body": "@YannVernier you&#39;re right (in fact the if let solution is quite longer and maybe not more readable but I know it&#39;s the solution that clippy favors anyway so let&#39;s go for it)"}, {"owner": {"reputation": 394, "user_id": 377970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sVZIv.jpg?s=128&g=1", "display_name": "Omid", "link": "https://stackoverflow.com/users/377970/omid"}, "edited": false, "score": 0, "creation_date": 1570356304, "post_id": 58255974, "comment_id": 102881433, "body": "That&#39;s exactly the way I get to:  let t = match result_option_t {     Ok(Some(t)) =&gt; t,     _ =&gt; return Err(MyError), };"}], "tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 4, "last_activity_date": 1570355892, "last_edit_date": 1570355892, "creation_date": 1570354576, "answer_id": 58255974, "question_id": 58255829, "link": "https://stackoverflow.com/questions/58255829/simplifying-error-handling-in-rust-in-case-of-resultoptiont/58255974#58255974", "title": "Simplifying error handling in Rust, in case of Result&lt;Option&lt;T&gt;&gt;", "body": "<p>A solution is to use pattern matching:</p>\n\n<pre><code>fn my_fun() -&gt; Result&lt;T, MyError&gt; {\n    if let Ok(Some(thing)) = other_fun() {\n         Ok(thing)\n    } else {\n         Err(MyError{})\n    }\n}\n</code></pre>\n\n<p>or </p>\n\n<pre><code>fn my_fun() -&gt; Result&lt;T, MyError&gt; {\n    match other_fun() {\n        Ok(Some(thing)) =&gt; Ok(thing),\n        _ =&gt; Err(MyError{}),\n    }\n}\n</code></pre>\n\n<p>If your error implements <code>From&lt;TheOtherError&gt;</code>, which is probably a good idea here, you can also do</p>\n\n<pre><code>fn my_fun() -&gt; Result&lt;T, MyError&gt; {\n    other_fun()?.ok_or(MyError{})\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 1, "last_activity_date": 1570560690, "creation_date": 1570560690, "answer_id": 58292412, "question_id": 58255829, "link": "https://stackoverflow.com/questions/58255829/simplifying-error-handling-in-rust-in-case-of-resultoptiont/58292412#58292412", "title": "Simplifying error handling in Rust, in case of Result&lt;Option&lt;T&gt;&gt;", "body": "<p>There are also other useful functions in Option and Result to help you do this.</p>\n\n<pre><code>fn other_function() -&gt; Result&lt;Option&lt;T&gt;, OtherErr&gt; {\n   ...\n}\n\nfn call_other() -&gt; Result&lt;T, MyError&gt; {\n    other_function()\n        // starting with a Result&lt;Option&lt;T&gt;, OtherErr&gt;\n        .map_err(|other_err|  make MyError from other_err)\n        // now it's a Result&lt;Option&lt;T&gt;, MyError&gt;\n        .and_then(|opt_t| opt_t.ok_or_else(|| make MyError for None))\n        // now it's a Result&lt;T, MyError&gt;\n}\n</code></pre>\n"}], "owner": {"reputation": 394, "user_id": 377970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sVZIv.jpg?s=128&g=1", "display_name": "Omid", "link": "https://stackoverflow.com/users/377970/omid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 2, "accepted_answer_id": 58255974, "answer_count": 2, "score": 0, "last_activity_date": 1570560690, "creation_date": 1570353279, "question_id": 58255829, "link": "https://stackoverflow.com/questions/58255829/simplifying-error-handling-in-rust-in-case-of-resultoptiont", "title": "Simplifying error handling in Rust, in case of Result&lt;Option&lt;T&gt;&gt;", "body": "<p>Just imagine I have a function with <code>Result&lt;Option&lt;T&gt;&gt;</code> result.</p>\n\n<p>If the <code>Result</code> is <code>Err</code> or <code>Option</code> is <code>None</code>, I want to return <code>MyError</code> error.</p>\n\n<p>What is your suggestion?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "edited": false, "score": 6, "creation_date": 1570338374, "post_id": 58254329, "comment_id": 102878478, "body": "To be clear &quot;for anyone writing a Rust program. 99% of the time you should just use a Vec (array stack), and 99% of the other 1% of the time you should be using a VecDeque (array deque).&quot; see <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">rust-unofficial.github.io/too-many-lists</a>. Rust is not at all a lang design for linked list."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 3, "creation_date": 1570345064, "post_id": 58254329, "comment_id": 102879348, "body": "Mandatory link: <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"nofollow noreferrer\">Learn Rust With Entirely Too Many Linked Lists</a>."}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 0, "creation_date": 1570349765, "post_id": 58254329, "comment_id": 102880146, "body": "There are many solutions, depending on the underlying problem, for example using Rc references, or indexes related to a managed buffer (see the id-arena crate for example)."}], "answers": [{"tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 5, "last_activity_date": 1570352470, "creation_date": 1570352470, "answer_id": 58255749, "question_id": 58254329, "link": "https://stackoverflow.com/questions/58254329/how-can-i-change-a-reference-to-an-owned-value-without-clone/58255749#58255749", "title": "How can I change a reference to an owned value without clone?", "body": "<p>I think the key issue with your mental model is that you're thinking of <code>Box&lt;T&gt;</code> as simply a pointer. Rust references (and most smart pointers like <code>Box&lt;T&gt;</code>) are not merely pointers, but <em>valid</em> pointers. That is, there are no null references and references must always point to valid data at all times.</p>\n\n<p>When we try to do <code>self.list = **bx;</code>, we're moving the data from <code>bx</code> to <code>self.list</code>. However, <code>bx</code> doesn't own its data. When the mutable borrow <code>bx</code> ends, the actual owner is going to be holding invalid data.</p>\n\n<p>So what do we do? The simplest way is what's sometimes called <a href=\"https://matklad.github.io/2019/07/25/unsafe-as-a-type-system.html\" rel=\"noreferrer\">Jones' Trick</a> where we switch out the data in <code>bx</code> for some dummy value. Now the actual owner of the data in <code>bx</code> won't be holding invalid data. So how do we do this? This is the purview of the function <code>std::mem::replace</code> which takes a mutable reference and a value and replaces the data behind the mutable reference with that value, returning what was behind the mutable reference before (including ownership!). That's exactly what we want to do here with <code>self.list = std::mem::replace(&amp;mut **bx, List::Nil)</code>. Again, <code>List::Nil</code> is just some dummy data; any <code>List</code> at all would work exactly the same.</p>\n\n<pre><code>enum List {\n    Cons(u32, Box&lt;List&gt;),\n    Nil,\n}\nstruct ListHolder {\n    list: List,\n}\n\nimpl Iterator for ListHolder {\n    type Item = u32;\n    fn next(&amp;mut self) -&gt; Option&lt;u32&gt; {\n        if let Cons(num, bx) = &amp;mut self.list {\n            let val = *num;\n            self.list = std::mem::replace(&amp;mut **bx, List::Nil); // This is the key line\n            Some(val)\n        } else {\n            None\n        }\n    }\n}\n\nuse List::*;\n\nfn main() {\n    let list_inst = ListHolder {\n        list: Cons(1, Box::new(Cons(2, Box::new(Cons(3, Box::new(Nil)))))),\n    };\n    for i in list_inst.into_iter() {\n        println!(\"{}\", i); // Prints 1, 2, 3 as expected\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=12c42b6230331a03686fbf401b0903eb\" rel=\"noreferrer\">(playground)</a></p>\n\n<p>To be slightly more idiomatic, instead of <code>&amp;mut **bx</code>, we could simply use <code>bx.as_mut()</code> to get a mutable reference from the box. Also, the <code>into_iter</code> call on <code>list_inst</code> is unnecessary since <code>ListHolder</code> already implements <code>Iterator</code> so it doesn't need to be turned into one. You may also be wondering about <code>num</code> and <code>val</code> and why we still have to make a temporary variable for that.</p>\n\n<p>The reason is that this value is still just a reference and we don't have owned access to the owner (<code>self.list</code>). That means we have to make a copy of it to return. <code>u32</code> implements <code>Copy</code> so this isn't really a problem, but if you tried to make the linked list generic in the type of its elements, it simply wouldn't work. <code>let val = *num;</code> is the same kind of \"moving out of borrowed content\" that we couldn't do before.</p>\n\n<p>The solution is to use <code>std::mem::replace</code> to get ownership not just of the data behind <code>bx</code>, but of the whole list. So if we use <code>std::mem::replace(&amp;mut self.list, List::Nil)</code> before destructuring, <code>self.list</code> will be replaced with a dummy value and we'll have ownership of the actual list, including both the value and the tail of the list. This also means that we can just have <code>self.list = *bx</code>, as I'm sure you originally wanted.</p>\n\n<pre><code>impl Iterator for ListHolder {\n    type Item = u32;\n    fn next(&amp;mut self) -&gt; Option&lt;u32&gt; {\n        if let Cons(num, bx) = std::mem::replace(&amp;mut self.list, List::Nil) {\n            self.list = *bx;\n            Some(num)\n        } else {\n            None\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=277bbeeffb60455ffd154113da435133\" rel=\"noreferrer\">(playground)</a></p>\n\n<p>The upshot is now you can <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=release&amp;edition=2018&amp;gist=49cb71268838212b88ca1b3e687b47a0\" rel=\"noreferrer\">make the list generic</a> with hardly any effort.</p>\n\n<p>If you want to learn more about how Rust's ownership model affects the implementation of linked lists, you can do no better than the excellent series <a href=\"https://rust-unofficial.github.io/too-many-lists/\" rel=\"noreferrer\"><em>Learn Rust With Entirely Too Many Linked Lists</em></a>. The series covers everything here in detail as well as many variations.</p>\n"}], "owner": {"reputation": 1528, "user_id": 4418836, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab020a2f9ef157eb9599ee0126cd2e0a?s=128&d=identicon&r=PG", "display_name": "Jordan", "link": "https://stackoverflow.com/users/4418836/jordan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2585, "favorite_count": 2, "accepted_answer_id": 58255749, "answer_count": 1, "score": 2, "last_activity_date": 1601478225, "creation_date": 1570337593, "last_edit_date": 1601478225, "question_id": 58254329, "link": "https://stackoverflow.com/questions/58254329/how-can-i-change-a-reference-to-an-owned-value-without-clone", "title": "How can I change a reference to an owned value without clone?", "body": "<p>I'm practicing Rust concepts that I've learned while reading The Book.  I've been able to iterate over my <code>List</code> enum by copying the <code>Box</code> and assigning the <code>list</code> to the copied box, but intuitively, I feel like there must be a way to just &quot;make it point to the next pointer in line&quot;.</p>\n<p>If I attempt to do this without <code>bx.clone()</code>, like so: <code>self.list = **bx</code>, I get  &quot;cannot move out of <code>**bx</code> which is behind a mutable reference.&quot;  Which means that I need it to be owned, but I can't get an owned <code>bx</code> because I need to move it as a reference when I dereference it in the <code>if let</code>.</p>\n<p>Is it possible or advisable to move the reference without copying it?</p>\n<pre><code>#[derive(Clone)]\nenum List {\n    Cons(u32, Box&lt;List&gt;),\n    Nil,\n}\nstruct ListHolder {\n    list: List,\n}\n\nimpl Iterator for ListHolder {\n    type Item = u32;\n    fn next(&amp;mut self) -&gt; Option&lt;u32&gt; {\n        if let Cons(num, bx) = &amp;mut self.list {\n            let val = *num;\n            self.list = *bx.clone(); // This is the key line\n            Some(val)\n        } else {\n            None\n        }\n    }\n}\n\nuse List::*;\n\nfn main() {\n    let list_inst = ListHolder {\n        list: Cons(1, Box::new(Cons(2, Box::new(Cons(3, Box::new(Nil)))))),\n    };\n    for i in list_inst.into_iter() {\n        println!(&quot;{}&quot;, i); // Prints 1, 2, 3 as expected\n    }\n}\n</code></pre>\n"}, {"tags": ["rust"], "owner": {"reputation": 169, "user_id": 5083635, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/y7eLk.jpg?s=128&g=1", "display_name": "Joseph", "link": "https://stackoverflow.com/users/5083635/joseph"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1570297384, "answer_count": 0, "score": 2, "last_activity_date": 1570295218, "creation_date": 1570294599, "last_edit_date": 1570295218, "question_id": 58250470, "link": "https://stackoverflow.com/questions/58250470/why-does-rust-appear-to-execute-statements-expressions-out-of-order-when-using", "closed_reason": "Duplicate", "title": "Why does Rust appear to execute statements/expressions out of order when using `print!`?", "body": "<p>This Rust program seems to be doing things out of order - not line-by-line. I'm sure there's an explanation, but I am having trouble finding the knowledge.</p>\n\n<p>Can you point me toward some documentation on what order Rust decides to run things, or explain why this little program runs in the order that it does?</p>\n\n<p>Thanks!</p>\n\n<pre><code>use std::{time, thread};\n\nfn main() {\n    let sleep_time: u64 = 4000;\n    let sleep_duration = time::Duration::from_millis(sleep_time);\n\n    println!(\"there is a delay after printing this line. makes sense.\");\n    thread::sleep(sleep_duration);\n\n    println!(\"there is a delay after printing this line. why?\");\n    // there is no sleep command here, so why is it acting like it's sleeping again?\n\n    print!(\"but there is no delay after printing this line...\");\n    thread::sleep(sleep_duration); // this sleep command is ignored?\n    println!(\"why?\");\n}\n</code></pre>\n"}, {"tags": ["rust", "flatbuffers"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570295324, "post_id": 58250403, "comment_id": 102871453, "body": "I voted to close your question as &quot;unclear&quot;, because frankly, there is literally too little to go by to make any suggestion; we don&#39;t even know what the buffer you started with is, so how could we help in debugging a mismatched length/out of bounds error? Consider refining your question and your code further."}, {"owner": {"reputation": 623, "user_id": 252226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0036be935a11cd1d7d807f489609b3a?s=128&d=identicon&r=PG&f=1", "display_name": "dbschwartz", "link": "https://stackoverflow.com/users/252226/dbschwartz"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570296489, "post_id": 58250403, "comment_id": 102871776, "body": "I will try and be more complete next time. I did find it, I had a <code>union</code> and I mistakenly had the wrong type in the <code>..._type</code> field."}], "answers": [{"tags": [], "owner": {"reputation": 623, "user_id": 252226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0036be935a11cd1d7d807f489609b3a?s=128&d=identicon&r=PG&f=1", "display_name": "dbschwartz", "link": "https://stackoverflow.com/users/252226/dbschwartz"}, "is_accepted": false, "score": 0, "last_activity_date": 1570297786, "creation_date": 1570297786, "answer_id": 58250877, "question_id": 58250403, "link": "https://stackoverflow.com/questions/58250403/rust-flatbuffers-index-out-of-range-error/58250877#58250877", "title": "Rust Flatbuffers Index out of range error", "body": "<p>I resolved this, see the comment above. It is important to be sure with a union field to put the proper type in the <code>..._type</code> field, as that cannot be type-checked.</p>\n"}], "owner": {"reputation": 623, "user_id": 252226, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c0036be935a11cd1d7d807f489609b3a?s=128&d=identicon&r=PG&f=1", "display_name": "dbschwartz", "link": "https://stackoverflow.com/users/252226/dbschwartz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 237, "favorite_count": 0, "closed_date": 1570300301, "answer_count": 1, "score": 1, "last_activity_date": 1570297786, "creation_date": 1570294142, "question_id": 58250403, "link": "https://stackoverflow.com/questions/58250403/rust-flatbuffers-index-out-of-range-error", "closed_reason": "Not suitable for this site", "title": "Rust Flatbuffers Index out of range error", "body": "<p>I have a schema like this:</p>\n\n<pre><code>table BinaryValue {\n    buf: [ubyte];\n}\n\ntable MyValue {\n    ...[some other fields]\n    my_binary_value: BinaryValue;\n}\n</code></pre>\n\n<p>When I try and access <code>my_binary_value</code> like this I get this message: </p>\n\n<p><code>'index 3136 out of range for slice of length 140'</code></p>\n\n<p>The code I use to access is:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>        let my_binary_value = match op.my_binary_value() {\n            Some(binary_value) =&gt; match binary_value.buf() {\n                Some(buf) =&gt; {\n                    println!(\n                        \"buf: {:?}\",\n                        buf\n                    );\n                    buf\n                }\n                None =&gt; {\n                    return Err(format_err!(\"The my_binary_value is required.\"));\n                }\n            },\n            None =&gt; {\n                return Err(format_err!(\n                    \"The binary_value is required\"\n                ));\n            }\n        };\n\n</code></pre>\n\n<p>It panics on this line:</p>\n\n<pre><code>let my_binary_value = match op.my_binary_value() {\n</code></pre>\n\n<p>I printed out the value of binary_value and it looks OK (truncated):</p>\n\n<pre><code>Some(BinaryValue { _tab: Table { buf: [20, 0, 0, 0, 48, 52, ...], loc: 60 } })\n</code></pre>\n\n<p>Here is the generated flatbuffer code:</p>\n\n<pre><code>#[inline]\n  pub fn buf(&amp;self) -&gt; Option&lt;&amp;'a [u8]&gt; {\n    self._tab.get::&lt;flatbuffers::ForwardsUOffset&lt;flatbuffers::Vector&lt;'a, u8&gt;&gt;&gt;(BinaryValue::VT_BUF, None).map(|v| v.safe_slice())\n  }\n</code></pre>\n\n<p>Any ideas what I am doing wrong?</p>\n"}, {"tags": ["asynchronous", "rust", "async-await", "rust-tokio"], "owner": {"reputation": 2880, "user_id": 1658328, "user_type": "registered", "accept_rate": 51, "profile_image": "https://www.gravatar.com/avatar/ad0dd54bf3ca15b434e10db088fb2bc6?s=128&d=identicon&r=PG", "display_name": "peku33", "link": "https://stackoverflow.com/users/1658328/peku33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 258, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1570286767, "creation_date": 1570286767, "question_id": 58249382, "link": "https://stackoverflow.com/questions/58249382/canceling-future-stream-task-future-collections-handling", "title": "Canceling future / stream / task, future collections handling", "body": "<p>I'm building a program in rust (nightly, async-await, futures-preview, tokio 0.2+) to record video from IP camera over RTSP.</p>\n\n<p>Recorder module spawns ffmpeg process that creates video chunks. It also catches and logs stderr/stdout of ffmpeg and logs it to screen. In case of errors (network etc) ffmpeg may die, so I want to restart it after 15 seconds infinitely.</p>\n\n<p>I would like to create dynamic Recorder<strong>s</strong> collection. I want to add / delete Recorders at runtime. At some point for each created Recorder I must obtain its future and pass it to <code>tokio::spawn</code>. From the black-box point of view I want the Recorders to provide two methods: <code>add(r: Recorder OR all recorder params) -&gt; RecorderHandle</code> and <code>remove(rh: RecorderHandle)</code>.</p>\n\n<ul>\n<li>Is there any recommended pattern for such scenario?</li>\n<li>How can I delete the recorder? How can I cancel future passed to <code>tokio::spawn</code>?</li>\n<li>Where would dropped future stop? On nearest <code>.await</code>?</li>\n<li>Is <code>run()</code> method ok? Are there any suggestions?</li>\n<li>Is <code>run_infinite()</code> method ok?</li>\n<li>Are there any recommendations for infinite streams?</li>\n</ul>\n\n<h2>Recorder code</h2>\n\n<pre><code>pub struct RtspRecorder {\n    rtsp_url: url::Url,\n    segment_time: std::time::Duration,\n    output_strftime: String,\n    output_directory: std::path::PathBuf\n}\n\nimpl RtspRecorder {\n    pub fn new( /* just all fields are passed to the struct */ ) -&gt; Self { /* (...) */}\n    fn ffmpeg_command_build(&amp;self) -&gt; tokio_net::process::Command { /* sets env and command line arguments */ }\n\n    pub async fn run(\n        &amp;self,\n    ) -&gt; Box&lt;dyn std::error::Error&gt; {\n        let mut command = self.ffmpeg_command_build();\n        let mut child = command.spawn().unwrap();\n\n        let stdout = tokio::codec::FramedRead::new(child.stdout().take().unwrap(), tokio::codec::LinesCodec::default())\n            .for_each(|message| { log::info!(\"ffmpeg stdout: {}\", message.unwrap()); return futures::future::ready(()); });\n\n        let stderr = tokio::codec::FramedRead::new(child.stderr().take().unwrap(), tokio::codec::LinesCodec::default())\n            .for_each(|message| { log::warn!(\"ffmpeg stderr: {}\", message.unwrap()); return futures::future::ready(()); });\n\n        let futures_results = futures::future::join3(child, stdout, stderr).await;\n\n        return match futures_results.0 {\n            Err(e) =&gt; e.into(),\n            Ok(exit_status) =&gt; format!(\"ffmpeg exited with status: {:?}\", exit_status).into()\n        }\n    }\n\n    pub async fn run_infinite(\n        &amp;self\n    ) {\n        loop {\n            let error = self.run().await;\n            log::warn!(\"error during run: {:?}, restarting...\", error);\n            tokio_timer::delay_for(std::time::Duration::from_secs(15)).await;\n        }\n    }\n}\n</code></pre>\n"}, {"tags": ["rust", "borrow-checker"], "answers": [{"comments": [{"owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570289991, "post_id": 58249572, "comment_id": 102870101, "body": "Thanks for your suggestions. I completely agree that HashSet is a better fit, and I should probably not be stubborn about trying to use a Vec. However to feel satisfied about an answer I&#39;d really appreciate more explaination of why specifically rust doesn&#39;t allow me to do what I&#39;m trying to do. As you&#39;ve highlighted, checking <code>contains</code> can add N to the complexity, and I want to understand how to avoid this sort of issue with the borrow checker in the future."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570290223, "post_id": 58249572, "comment_id": 102870156, "body": "@ChrisPearce <code>HashSet</code> contains a <code>HashMap</code> internally, and as a result, <code>get_or_insert()</code> operates on the keys for the retrieval, not on the entire collection. This is the key difference and what my (working) snippet illustrates - due to the way lifetimes work, you&#39;re forced to break your step in two, whether it is in a different struct or like I did, with a different path. First, you edit, then you return."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570290247, "post_id": 58249572, "comment_id": 102870161, "body": "It actually has very little to do with &quot;rust&quot; or &quot;the borrow checker&quot;. It&#39;s down to code structure and sanity"}, {"owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570291563, "post_id": 58249572, "comment_id": 102870468, "body": "I just looked into HashMap and I have a concern that using <code>get_or_insert</code> would not return a mutable reference that I could return from the function since you&#39;re not allowed to modify an entry inside a HashMap in a way that would invalidate the hash. Does that only leave me with the option of using a <code>Vec</code> separating the insertion from the return?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570291937, "post_id": 58249572, "comment_id": 102870559, "body": "@ChrisPearce At this point I really need to ask what you are attempting to do. You have an <b>owned</b> T, which you use as default; the entire thing sounds like you really should actually split this into two. I&#39;ll rewrite the snippet in the answer to take into account the mutability requirement (all that changes is references) and provide a better, way more idiomatic approach."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570292400, "post_id": 58249572, "comment_id": 102870658, "body": "Nevermind, there isn&#39;t a more idiomatic approach; you&#39;re going to split the insertion and the retrieval in every case. This is the best you&#39;ll get without refining your requirements (and choosing a better way to store stuff). I&#39;m still puzzled as to your use case for this, however; after all, you are instantiating an object <i>by default</i> every time you use that method. Surely that completely defeats the purpose of what you&#39;re trying to do there"}, {"owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "edited": false, "score": 0, "creation_date": 1570292774, "post_id": 58249572, "comment_id": 102870756, "body": "That&#39;s fair, I think that a lot of context has gone missing in my simplification of the code in an attempt to make it suitable as a public question. I&#39;d accept your answer if you add something about why doing it one step doesn&#39;t work and your example code with it separated. Thanks for the help"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 1, "last_activity_date": 1570293088, "last_edit_date": 1570293088, "creation_date": 1570288117, "answer_id": 58249572, "question_id": 58249193, "link": "https://stackoverflow.com/questions/58249193/how-to-find-or-insert-into-a-vec-in-rust/58249572#58249572", "title": "How to find or insert into a Vec in rust", "body": "<p><code>Vec</code> is an unordered, not very structured type. It has no way to look up the exact position of an item within it; the closest the default functions get to is <code>contains()</code>, which only tells you if the item is contained.</p>\n\n<p>Furthermore, due to the fact that a <code>Vec</code> is not a <code>Set</code>, the behavior of \"find the item or append and return \" is undefined - \"find the item\", if there is a duplicate, needs to be defined further.</p>\n\n<p>To solve this problem without changing to the correct type (<a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html\" rel=\"nofollow noreferrer\"><code>HashSet</code></a> is the type you really want for this. Note the existence of <a href=\"https://doc.rust-lang.org/std/collections/struct.HashSet.html#method.get_or_insert\" rel=\"nofollow noreferrer\"><code>get_or_insert()</code></a>, which is literally what you are after. It pays to use the proper structure for the job, rather than to try to make everything fit a <code>Vec</code>), we're going to have to build it ourselves. Keeping to your signature, it looks like this (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=45b3e2bb616b1f6cc3eb2f27ca7fbb12\" rel=\"nofollow noreferrer\"><strong>Playground</strong></a>):</p>\n\n<pre><code>trait VecSeekOrAppend&lt;T:PartialEq&gt;:Sized {\n    fn get_or_insert(&amp;mut self, item: T) -&gt; &amp;mut T;\n}\n\nimpl&lt;T&gt; VecSeekOrAppend&lt;T&gt; for Vec&lt;T&gt; \n    where T: PartialEq + Clone {\n\n    fn get_or_insert(&amp;mut self, item: T) -&gt; &amp;mut T {\n        if !self.contains(&amp;item) {\n            self.push(item.clone());\n        }\n        for i in self.iter_mut() {\n            if i == &amp;mut item {\n                return i;\n            }\n        }\n        unreachable!();\n    }\n}\n</code></pre>\n\n<p>The reason your initial version does not work is due to the returned lifetime requirement; all methods returning a reference from a <code>Vec</code> require a lifetime validity for the duration of use. By returning such a <code>&amp;mut</code> reference, if you attempt to do it in one go, the mutation of the <code>Vec&lt;_&gt;</code> will happen while there is already a mutable borrow of it.</p>\n\n<p>Splitting the cycle in two, and performing the insertion (without keeping a reference) to then find the eference, allows us to sidestep this problem. Another way to perform this is to store items by a serializable or hashable identifier (the exact way <code>HashMap</code> and <code>HashSet</code> work) in order to innately provide this layer of indirection.</p>\n\n<p>There is a rust feature in the works to ease some of this pain (<a href=\"https://github.com/rust-lang/rust/issues/43234\" rel=\"nofollow noreferrer\">non-lexical lifetimes</a>), but, as you can see from the github issue, it's not in the near future.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1570294851, "creation_date": 1570294851, "answer_id": 58250510, "question_id": 58249193, "link": "https://stackoverflow.com/questions/58249193/how-to-find-or-insert-into-a-vec-in-rust/58250510#58250510", "title": "How to find or insert into a Vec in rust", "body": "<p>The reason this doesn't work as written is because of a limitation in the current borrow checker. This is very similar to <a href=\"https://github.com/rust-lang/rfcs/blob/master/text/2094-nll.md#problem-case-3-conditional-control-flow-across-functions\" rel=\"nofollow noreferrer\">NLL case #3</a>, in which the compiler borrows somewhat overzealously for an entire <code>match</code> statement when the borrow is only used in one of the branches. With the experimental \"Polonius\" borrow checker (available on the nightly compiler with the <code>-Z polonius</code> flag), your code is accepted as-is.</p>\n\n<p>Working in the stable compiler, it's probably a good idea to redesign your data structures as <a href=\"https://stackoverflow.com/a/58249572/3650362\">S\u00e9bastien Renauld's answer</a> also suggests, but if you need to make this work with a <code>Vec</code>, you can work around it by iterating over indices instead of items:</p>\n\n<pre><code>fn mut_find_or_insert&lt;T: PartialEq&gt;(vec: &amp;mut Vec&lt;T&gt;, val: T) -&gt; &amp;mut T {\n    if let Some(i) = (0..vec.len()).find(|&amp;i| vec[i] == val) {\n        &amp;mut vec[i]\n    } else {\n        vec.push(val);\n        vec.last_mut().unwrap()\n    }\n}\n</code></pre>\n\n<p>This works because the result of calling <code>find</code> is not a reference, so the borrow of <code>vec</code> is not held during the <code>if let</code>.</p>\n\n<p>This is similar to the following questions, which manage to find the same limitation using early return from a loop:</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/50519147/double-mutable-borrow-error-in-a-loop-happens-even-with-nll-on/50570026#50570026\">Double mutable borrow error in a loop happens even with NLL on</a></li>\n<li><a href=\"https://stackoverflow.com/questions/50995241/variable-does-not-live-long-enough-when-returning-a-result-containing-a-refere/50996026#50996026\">&quot;Variable does not live long enough&quot; when returning a Result containing a reference but it does live long enough</a></li>\n</ul>\n"}], "owner": {"reputation": 561, "user_id": 6781431, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/474851c0a5ec3cf43cf852a2a6d8595a?s=128&d=identicon&r=PG&f=1", "display_name": "Chris Pearce", "link": "https://stackoverflow.com/users/6781431/chris-pearce"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 887, "favorite_count": 1, "closed_date": 1570459296, "accepted_answer_id": 58250510, "answer_count": 2, "score": 2, "last_activity_date": 1570294851, "creation_date": 1570285267, "question_id": 58249193, "link": "https://stackoverflow.com/questions/58249193/how-to-find-or-insert-into-a-vec-in-rust", "closed_reason": "Duplicate", "title": "How to find or insert into a Vec in rust", "body": "<p>I'm trying to write a function that finds returns a mutable reference to an existing element in a Vec, or inserts it if it doesn't exist and returns a mutable reference to the new element.</p>\n\n<p>I've tried a couple of times, but the borrow checker isn't convinced. I've simplified the code I was trying to write to the example below, which gives the same errors.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn mut_find_or_insert&lt;T: PartialEq&gt;(vec: &amp;mut Vec&lt;T&gt;, val: T) -&gt; &amp;mut T {\n    if let Some(u) = vec.iter_mut().find(|u| **u == val) {\n        u\n    } else {\n        vec.push(val);\n        vec.last_mut().unwrap()\n    }\n}\n</code></pre>\n\n<p>Playground link: <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cb12c38bcf3682b15a247d14aab48b6b\" rel=\"nofollow noreferrer\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=cb12c38bcf3682b15a247d14aab48b6b</a></p>\n\n<p>Rust gives me the following compiler error (full message through the playground link):</p>\n\n<pre><code>error[E0499]: cannot borrow `*vec` as mutable more than once at a time\n</code></pre>\n\n<p>This seems to be something that should be possible to implement in rust, however it's not clear to me how I reimplement this to avoid borrow checker errors.</p>\n"}, {"tags": ["rust"], "answers": [{"comments": [{"owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "edited": false, "score": 0, "creation_date": 1570287124, "post_id": 58248668, "comment_id": 102869447, "body": "Thanks for your explaination, it seems that I shouldn&#39;t use String as data structure to deal with the data."}], "tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 2, "last_activity_date": 1570282361, "last_edit_date": 1570282361, "creation_date": 1570281488, "answer_id": 58248668, "question_id": 58248556, "link": "https://stackoverflow.com/questions/58248556/efficient-remove-prefix-from-string-including-invalid-bytes/58248668#58248668", "title": "Efficient remove prefix from string including invalid bytes", "body": "<p>It's unsound to ever create a <code>String</code> that contains invalid (i.e., non-UTF8) bytes, so you can't use <code>String</code> methods to deal with them. If you have a slice of <code>u8</code>s, some section of which is valid UTF-8, the best way to deal with it is to only convert the portion that is valid:</p>\n\n<pre><code>let raw_input: &amp;'static [u8] = &amp;[128, 2, 49];\nlet len = 2;\nlet input = str::from_utf8(raw_input[len..]).unwrap().to_owned();\n</code></pre>\n\n<p>If <code>raw_input[len..]</code> does not start with a valid UTF-8 character encoding, <code>str::from_utf8()</code> will return an <code>Err</code> value (which <code>.unwrap()</code> will turn into a panic), so this is only appropriate when you know that the UTF-8 data starts at <code>len</code>. This is different from the behavior of <code>from_utf8_lossy</code>, which converts invalid UTF-8 sequences to \ufffd, but if the string is meant to be well-formed UTF-8 except for the leading \"garbage\", <code>from_utf8_lossy</code> is not called for.</p>\n\n<p>There is no need to use <code>unsafe</code> for this.</p>\n\n<p>Also see: <a href=\"https://stackoverflow.com/questions/19076719/how-do-i-convert-a-vector-of-bytes-u8-to-a-string\">How do I convert a Vector of bytes (u8) to a string</a></p>\n"}], "owner": {"reputation": 8658, "user_id": 6760995, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/90da0ebdca4b4b5e3f10c326b9b63ea0?s=128&d=identicon&r=PG&f=1", "display_name": "McGrady", "link": "https://stackoverflow.com/users/6760995/mcgrady"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 389, "favorite_count": 0, "accepted_answer_id": 58248668, "answer_count": 1, "score": 1, "last_activity_date": 1570442717, "creation_date": 1570280584, "last_edit_date": 1570442717, "question_id": 58248556, "link": "https://stackoverflow.com/questions/58248556/efficient-remove-prefix-from-string-including-invalid-bytes", "title": "Efficient remove prefix from string including invalid bytes", "body": "<p>Here is the situation, I want to remove some invalid bytes(varint length of the string) in the front of the string, At first, I tried to use <code>drain</code> method, but as the doc says:</p>\n\n<blockquote>\n  <p>Panics if the starting point or end point do not lie on a char\n  boundary, or if they're out of bounds.</p>\n</blockquote>\n\n<p>So I tried to use for loop to <code>remove</code> the prefix</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\n    let mut input = String::from_utf8_lossy(&amp;[128,2,49]).into_owned();\n    let len = 2;\n    for _ in 0..len {\n        input.remove(0);\n    }\n\n</code></pre>\n\n<p>Is there any way to be more efficient?</p>\n"}, {"tags": ["rust", "rust-macros"], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 3, "last_activity_date": 1570286681, "creation_date": 1570286681, "answer_id": 58249368, "question_id": 58246366, "link": "https://stackoverflow.com/questions/58246366/rust-macro-that-counts-and-generates-repetitive-struct-fields/58249368#58249368", "title": "Rust macro that counts and generates repetitive struct fields", "body": "<p>You need a procedural attribute macro and quite a bit of pipework. An example implementation is on <a href=\"https://github.com/srenauld/so_58246366_proc_macro\" rel=\"nofollow noreferrer\">Github</a>; bear in mind that it is pretty rough around the edges, but works pretty nicely to start with.</p>\n\n<p>The aim is to have the following:</p>\n\n<pre><code>#[derivefields(u32, \"field\", 3)]\nstruct MyStruct {\n     foo: u32\n}\n</code></pre>\n\n<p>transpile to:</p>\n\n<pre><code>struct MyStruct {\n   pub field_0: u32,\n   pub field_1: u32,\n   pub field_2: u32,\n   foo: u32\n}\n</code></pre>\n\n<p>To do this, first, we're going to establish a couple of things. We're going to need a <code>struct</code> to easily store and retrieve our arguments:</p>\n\n<pre><code>struct MacroInput {\n    pub field_type: syn::Type,\n    pub field_name: String,\n    pub field_count: u64\n}\n</code></pre>\n\n<p>The rest is pipework:</p>\n\n<pre><code>impl Parse for MacroInput {\n    fn parse(input: ParseStream) -&gt; syn::Result&lt;Self&gt; {\n        let field_type = input.parse::&lt;syn::Type&gt;()?;\n        let _comma = input.parse::&lt;syn::token::Comma&gt;()?;\n        let field_name = input.parse::&lt;syn::LitStr&gt;()?;\n        let _comma = input.parse::&lt;syn::token::Comma&gt;()?;\n        let count = input.parse::&lt;syn::LitInt&gt;()?;\n        Ok(MacroInput {\n            field_type: field_type,\n            field_name: field_name.value(),\n            field_count: count.base10_parse().unwrap()\n        })\n    }\n}\n</code></pre>\n\n<p>This defines <code>syn::Parse</code> on our <code>struct</code> and allows us to use <code>syn::parse_macro_input!()</code> to easily parse our arguments.    </p>\n\n<pre><code>#[proc_macro_attribute]\npub fn derivefields(attr: TokenStream, item: TokenStream) -&gt; TokenStream {\n    let input = syn::parse_macro_input!(attr as MacroInput);\n    let mut found_struct = false; // We actually need a struct\n    item.into_iter().map(|r| {\n        match &amp;r {\n            &amp;proc_macro::TokenTree::Ident(ref ident) if ident.to_string() == \"struct\" =&gt; { // react on keyword \"struct\" so we don't randomly modify non-structs\n                found_struct = true;\n                r\n            },\n            &amp;proc_macro::TokenTree::Group(ref group) if group.delimiter() == proc_macro::Delimiter::Brace &amp;&amp; found_struct == true =&gt; { // Opening brackets for the struct\n                let mut stream = proc_macro::TokenStream::new();\n                stream.extend((0..input.field_count).fold(vec![], |mut state:Vec&lt;proc_macro::TokenStream&gt;, i| {\n                    let field_name_str = format!(\"{}_{}\", input.field_name, i);\n                    let field_name = Ident::new(&amp;field_name_str, Span::call_site());\n                    let field_type = input.field_type.clone();\n                    state.push(quote!(pub #field_name: #field_type,\n                    ).into());\n                    state\n                }).into_iter());\n                stream.extend(group.stream());\n                proc_macro::TokenTree::Group(\n                    proc_macro::Group::new(\n                        proc_macro::Delimiter::Brace,\n                        stream\n                    )\n                )\n            }\n            _ =&gt; r\n        }\n    }).collect()\n}\n</code></pre>\n\n<p>The behavior of the modifier creates a new <code>TokenStream</code> and adds our fields <strong>first</strong>. This is <em>extremely important</em>; assume that the struct provided is <code>struct Foo { bar: u8 }</code>; appending <em>last</em> would cause a parse error due to a missing <code>,</code>. Prepending allows us to not have to care about this, since a trailing comma in a struct is not a parse error.</p>\n\n<p>Once we have this <code>TokenStream</code>, we successively <code>extend()</code> it with the generated tokens from <code>quote::quote!()</code>; this allows us to not have to build the token fragments ourselves. One gotcha is that the field name needs to be converted to an <code>Ident</code> (it gets quoted otherwise, which isn't something we want).</p>\n\n<p>We then return this modified <code>TokenStream</code> as a <code>TokenTree::Group</code> to signify that this is indeed a block delimited by brackets.</p>\n\n<p>In doing so, we also solved a few problems:</p>\n\n<ul>\n<li>Since structs without named members (<code>pub struct Foo(u32)</code> for example) never actually have an opening bracket, this macro is a no-op for this</li>\n<li>It will no-op any item that isn't a struct</li>\n<li>It will also no-op structs without a member</li>\n</ul>\n"}], "owner": {"reputation": 101, "user_id": 5965814, "user_type": "registered", "profile_image": "https://graph.facebook.com/689041897/picture?type=large", "display_name": "Rob S", "link": "https://stackoverflow.com/users/5965814/rob-s"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 731, "favorite_count": 2, "accepted_answer_id": 58249368, "answer_count": 1, "score": 1, "last_activity_date": 1570516688, "creation_date": 1570261364, "last_edit_date": 1570516688, "question_id": 58246366, "link": "https://stackoverflow.com/questions/58246366/rust-macro-that-counts-and-generates-repetitive-struct-fields", "title": "Rust macro that counts and generates repetitive struct fields", "body": "<p>I want to write a macro that generates varying structs from an integer argument. For example, <code>make_struct!(3)</code> might generate something like this:</p>\n\n<pre><code>pub struct MyStruct3 {\n    field_0: u32,\n    field_1: u32,\n    field_2: u32\n}\n</code></pre>\n\n<p>What's the best way to transform that \"3\" literal into a number that I can use to generate code? Should I be using <code>macro_rules!</code> or a <code>proc-macro</code>?</p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 1, "creation_date": 1570272406, "post_id": 58245215, "comment_id": 102866100, "body": "This is quite a bit broader than the stackoverflow rules allow; the choice of tools depends on how and where you decide to structure stuff, and as such, there isn&#39;t one &quot;generic&quot; response to this, sadly. In some cases, a futures-aware <code>RwLock</code> comes in handy, for example. Due to this vagueness, I&#39;ll have to vote to close this question."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570274201, "post_id": 58245215, "comment_id": 102866468, "body": "Lifetimes, broadly speaking, let you do stuff in Rust that you just <i>can&#39;t do</i> in C++, such as putting references in <code>struct</code>s. They don&#39;t usually inhibit translating a design concept-for-concept (although the lack of class-based inheritance may). For example, C++ doesn&#39;t have <code>&amp;mut</code> references, only shared references, so there&#39;s no reason you would <i>need</i> to capture a <code>&amp;mut</code> reference in a closure when translating a C++ design. Whether or not it&#39;s a good idea to translate a C++ design into Rust, well, it probably depends on the specifics."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570274652, "post_id": 58245215, "comment_id": 102866567, "body": "@trentcl Even if that is the case, the moment you&#39;ve got threads into the picture you&#39;re going to need data access constraints, the same way Rust does. The problem is the same in C, it&#39;s just that C allows you to shoot yourself in the foot faster and more often."}], "owner": {"reputation": 347, "user_id": 12167264, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/642adaee4e4afed5e9c20bb29327853f?s=128&d=identicon&r=PG&f=1", "display_name": "rusty", "link": "https://stackoverflow.com/users/12167264/rusty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 59, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1570247693, "creation_date": 1570247693, "question_id": 58245215, "link": "https://stackoverflow.com/questions/58245215/send-receive-paradigm-in-rust", "title": "Send/receive paradigm in Rust", "body": "<p>This is the scenario, with two layers(objects) in the picture:</p>\n\n<p>Layer 0 : network, Layer 1 : processor. The processor can send events to the external world via the network object. On the reverse side, the network object forwards the events received from the \nexternal world to the processor object.</p>\n\n<p>This is a basic flow in C/C++, have implemented this several times:</p>\n\n<ul>\n<li><p>Network object exposes a send API</p></li>\n<li><p>It also exposes an API to register a receive handler. The processor would use this to install it's processing method, etc.</p></li>\n</ul>\n\n<p>Along with an unregister interface to cleanly tear down things.</p>\n\n<p>But this looks pretty messy to do in Rust, because of the lifetime checks and other reasons. For example, creating a closure that captures &amp;mut self is not feasible. I have some round about ways in mind(like stuffing things in <code>Arc&lt;Mutex&lt;..&gt;&gt;</code>, using message queues between the objects, etc). What is the best/cleanest way of doing this in Rust?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["rust", "decode", "leveldb"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1570234910, "post_id": 58244285, "comment_id": 102860846, "body": "It looks to me like you&#39;re encoding a <code>String</code> and trying to decode an <code>Option&lt;String&gt;</code>. The type you&#39;re decoding has to match the original type. Or am I reading this wrong?"}], "answers": [{"tags": [], "owner": {"reputation": 1213, "user_id": 544707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LVoaL.jpg?s=128&g=1", "display_name": "Anler", "link": "https://stackoverflow.com/users/544707/anler"}, "is_accepted": true, "score": 1, "last_activity_date": 1570254857, "creation_date": 1570254857, "answer_id": 58245751, "question_id": 58244285, "link": "https://stackoverflow.com/questions/58244285/decode-data-stored-in-database/58245751#58245751", "title": "Decode data stored in database", "body": "<p>As <a href=\"https://stackoverflow.com/questions/58244285/decode-data-stored-in-database/58245751#comment102860846_58244285\">trentcl</a> pointed out in the comments, you are encoding a <code>String</code> but trying to decode it to <code>Option&lt;String&gt;</code>. Change:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let decoded: Option&lt;String&gt; = bincode::deserialize(&amp;inner[..]).unwrap(); // ERROR\n</code></pre>\n\n<p>by</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let decoded: String = bincode::deserialize(&amp;inner[..]).unwrap();\n</code></pre>\n\n<p>and you'll see the output:</p>\n\n<pre><code>the bytecode is Some([17, 0, 0, 0, 0, 0, 0, 0, 84, 104, 105, 115, 32, 105, 115, 32, 115, 111, 109, 101, 32, 100, 97, 116, 97])\n\"This is some data\"\n</code></pre>\n"}], "owner": {"reputation": 108, "user_id": 9409100, "user_type": "registered", "profile_image": "https://graph.facebook.com/10155474678018687/picture?type=large", "display_name": "Diego Sierra Fernandez", "link": "https://stackoverflow.com/users/9409100/diego-sierra-fernandez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 58245751, "answer_count": 1, "score": 0, "last_activity_date": 1570254857, "creation_date": 1570233341, "question_id": 58244285, "link": "https://stackoverflow.com/questions/58244285/decode-data-stored-in-database", "title": "Decode data stored in database", "body": "<p>I'm trying to encode data, then store it in leveldb next read it and decode the data but I get an error when I'm trying to decode and really dont know how to resolve this error <strong>InvalidTagEncoding(usize)</strong>: Returned if the deserializer attempts to deserialize the tag of an enum that is not in the expected ranges</p>\n\n<pre><code>[dependencies]\nserde = { version = \"1.0.101\", features = [\"derive\"] }\nbincode = \"1.2.0\"\nleveldb = \"0.8.4\"\n</code></pre>\n\n<p><strong>main.rs</strong></p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>\nextern crate bincode;\n\nuse leveldb::database::Database;\nuse leveldb::kv::KV;\nuse leveldb::options::{Options, ReadOptions, WriteOptions};\nuse std::path::Path;\n\nfn main() {\n    // Encode data\n    let encoded: Vec&lt;u8&gt; = bincode::serialize(&amp;String::from(\"This is some data\")).unwrap();\n\n    // Open database\n    let mut options = Options::new();\n    options.create_if_missing = true;\n    let path = Path::new(\"./db\");\n    let database = match Database::open(&amp;path, options) {\n        Ok(db) =&gt; db,\n        Err(e) =&gt; panic!(\"failed to open database: {:?}\", e),\n    };\n\n    // Write encoded data into database\n    let write_opts = WriteOptions::new();\n    match database.put(write_opts, 1, &amp;encoded) {\n        Ok(_) =&gt; (),\n        Err(e) =&gt; panic!(\"failed to write to database: {:?}\", e),\n    };\n\n    // Read encoded data from the database\n    let read_opts = ReadOptions::new();\n    let res = database.get(read_opts, 1);\n    match res {\n        Ok(data) =&gt; {\n            println!(\"the bytecode is {:?}\", data);\n            match data {\n                Some(inner) =&gt; {\n                    let decoded: Option&lt;String&gt; = bincode::deserialize(&amp;inner[..]).unwrap(); // ERROR\n                    println!(\"{:?}\", decoded);\n                },\n                None =&gt; println!(\"None 2\"),\n            }\n        }\n        Err(e) =&gt; panic!(\"failed reading data: {:?}\", e),\n    }\n}\n</code></pre>\n\n<p><strong>output</strong></p>\n\n<pre><code>the bytecode is Some([17, 0, 0, 0, 0, 0, 0, 0, 84, 104, 105, 115, 32, 105, 115, 32, 115, 111, 109, 101, 32, 100, 97, 116, 97])\nthread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: InvalidTagEncoding(17)', src/libcore/result.rs:999:5\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n</code></pre>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 2966, "user_id": 3022310, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/7f10ec2b45320ee843e539d705c31d08?s=128&d=identicon&r=PG", "display_name": "turbulencetoo", "link": "https://stackoverflow.com/users/3022310/turbulencetoo"}, "edited": false, "score": 0, "creation_date": 1570222924, "post_id": 58242918, "comment_id": 102858454, "body": "Could use <a href=\"https://docs.rs/nix/0.15.0/nix/unistd/fn.fork.html\" rel=\"nofollow noreferrer\">docs.rs/nix/0.15.0/nix/unistd/fn.fork.html</a> if you&#39;re on a compatible platform and know a bit about <code>fork</code>. I haven&#39;t been able to locate a higher-level interface a la Python&#39;s <code>multiprocessing.Process</code>."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570224979, "post_id": 58242918, "comment_id": 102858987, "body": "This begs a crucial question. As a function does not necessarily have a status return code the way a process does... Are you sure you need a process and not a thread?"}], "answers": [{"tags": [], "owner": {"reputation": 1213, "user_id": 544707, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LVoaL.jpg?s=128&g=1", "display_name": "Anler", "link": "https://stackoverflow.com/users/544707/anler"}, "is_accepted": false, "score": 0, "last_activity_date": 1570256051, "creation_date": 1570256051, "answer_id": 58245860, "question_id": 58242918, "link": "https://stackoverflow.com/questions/58242918/is-it-possible-to-run-a-function-as-a-process-in-rust/58245860#58245860", "title": "Is it possible to run a function as a process in rust?", "body": "<p>In short, you cannot, creating a new process needs much more information than just the code it will execute. See <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-createprocessw\" rel=\"nofollow noreferrer\">CreateProcess</a> Windows' system call. </p>\n\n<p>But, you can choose between these alternatives:</p>\n\n<ol>\n<li>Create a thread instead.</li>\n<li>Create a process where the executable is the same program that is running but passing a different argument that triggers the execution of the function you are interested in.</li>\n<li>Create a <a href=\"https://docs.microsoft.com/en-us/windows/win32/memory/creating-named-shared-memory\" rel=\"nofollow noreferrer\">Shared Memory Segment</a>.</li>\n<li>Create a third library containing your function and share it between your original program and the one you spawn.</li>\n</ol>\n"}], "owner": {"reputation": 1, "user_id": 12166417, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-SY5sYk2gfSI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcOdJM4AKdluhBm5Tj4QDHaLD8qGA/photo.jpg?sz=128", "display_name": "Neal ", "link": "https://stackoverflow.com/users/12166417/neal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 454, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1570256051, "creation_date": 1570221327, "last_edit_date": 1570223678, "question_id": 58242918, "link": "https://stackoverflow.com/questions/58242918/is-it-possible-to-run-a-function-as-a-process-in-rust", "title": "Is it possible to run a function as a process in rust?", "body": "<p>The rust <code>std::process::Command</code>; structure take in a <code>Command::new(program)</code>, where program is the path to the program to be executed as shown in the example below. </p>\n\n<pre><code>let output = if cfg!(target_os = \"windows\") {\n    Command::new(\"cmd\")\n            .args(&amp;[\"/C\", \"echo hello\"])\n            .output()\n            .expect(\"failed to execute process\")\n</code></pre>\n\n<p>Is it possible to create a new process on windows in rust to run a function?</p>\n"}, {"tags": ["rust", "ownership"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570233498, "post_id": 58242147, "comment_id": 102860627, "body": "Also <a href=\"https://stackoverflow.com/questions/49143770/efficiently-mutate-a-vector-while-also-iterating-over-the-same-vector\">Efficiently mutate a vector while also iterating over the same vector</a>, which also suggests using indices. You&#39;re using them already for <code>&amp;v[0..i]</code>; there&#39;s not really any reason to prefer <code>*val</code> over <code>v[i]</code>. I actually think using indices consistently is more readable than mixing indexing with iteration."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570454816, "post_id": 58242147, "comment_id": 102908038, "body": "@trentcl Thank you, this is a good duplicate - reflecting exactly my initial problem"}], "answers": [{"comments": [{"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1570222314, "post_id": 58242911, "comment_id": 102858296, "body": "Thank you, that is an interesting find for me and is providing kind of a solution to the artificial example, but I am not sure how it solves the general problem. Say we are working not with slices but with some <code>struct</code> where one method will take <code>&amp;mut self</code> and will try to execute another method taking non-mutable <code>&amp;self</code>"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1570222957, "post_id": 58242911, "comment_id": 102858465, "body": "@EugeneSh. That isn&#39;t a problem as you having <code>&amp;mut</code> on the struct also allows you to call methods and functions requiring immutable references to it (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=aae8b7a3ff23ec4361a0c90d7aafff0e\" rel=\"nofollow noreferrer\">example</a>). The issue only really happens when dealing with iterators, and there&#39;s always a way around it."}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 1, "creation_date": 1570222962, "post_id": 58242911, "comment_id": 102858468, "body": "@EugeneSh.I don&#39;t think there is a &quot;general problem&quot; but many different ones... they often look similar but in the end turn out to have different solutions. In the example of a &amp;mut method calling another: you can borrow your &quot;&amp;mut self&quot; onwards as &quot;&amp;self&quot; so there&#39;s no issue -- the problem only exists if you need both references at the same time."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "reply_to_user": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 0, "creation_date": 1570223297, "post_id": 58242911, "comment_id": 102858568, "body": "@JussiKukkonen May I show you the initial problem? It does look like I need both references in the same time.. It&#39;s <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b986871883167404bd2a1f719866724e\" rel=\"nofollow noreferrer\">here</a>. If you think the example in my question is not representative I might need to edit it."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 2, "creation_date": 1570224332, "post_id": 58242911, "comment_id": 102858861, "body": "@EugeneSh. This is a variation of Conway&#39;s game of life - are you sure you are supposed to modify the weights in-situ? As in, are you sure that a neighbor being updated should trigger an update on the <b>immediate</b> moment using a partially-updated grid? I don&#39;t think that&#39;s the case; I don&#39;t know a single cellular automaton that works like this."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570224500, "post_id": 58242911, "comment_id": 102858891, "body": "I <a href=\"http://www.roguebasin.com/index.php?title=Cellular_Automata_Method_for_Generating_Random_Cave-Like_Levels\" rel=\"nofollow noreferrer\">found your cellular automaton</a>. It is not how you think it is. The update function works on the <b>prior iteration</b>, and therefore is a two-step process when you compute the new state based on the old separately, and then swap them."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570226133, "post_id": 58242911, "comment_id": 102859255, "body": "@S&#233;bastienRenauld You have found the right one. As you can see the calculation is performed on the &quot;current&quot; value and is attempted to get assigned to &quot;next&quot;. Just to emphasize - it&#39;s not that I must make it work at all costs. I am just trying to learn and took this little project as something that can help practice many different concepts, so you might find some &quot;solutions&quot; suboptimal."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1570226366, "post_id": 58242911, "comment_id": 102859298, "body": "@EugeneSh. That is not what you are implementing. You&#39;re mixing the &quot;current&quot; and &quot;next&quot; steps because you&#39;re doing modifications in-place. I can&#39;t write an answer with this as that is not the answer to your question, so consider this case. A &quot;current&quot; cell has 4 neighbors. One of the other neighbors got turned in-situ into a wall. This &quot;current&quot; cell therefore would turn into 5 and into a wall in your code, whereas it doesn&#39;t and shouldn&#39;t."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570226416, "post_id": 58242911, "comment_id": 102859307, "body": "Almost every cellular automaton requires a two step process and 2*N memory allocations, where N is the size of your grid. One for the &quot;current&quot; state, one for the &quot;next&quot; step, and every iteration you trampoline between the two."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570226680, "post_id": 58242911, "comment_id": 102859379, "body": "@S&#233;bastienRenauld The calculation is performed before the swap occurs (that part is not even there yet). I&#39;ll see how I can come up with better <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, but probably later.."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1570226788, "post_id": 58242911, "comment_id": 102859403, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/200424/discussion-between-sebastien-renauld-and-eugene-sh\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 20827, "user_id": 2733851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MUOS4.png?s=128&g=1", "display_name": "mcarton", "link": "https://stackoverflow.com/users/2733851/mcarton"}, "is_accepted": false, "score": 1, "last_activity_date": 1570221302, "creation_date": 1570221302, "answer_id": 58242911, "question_id": 58242147, "link": "https://stackoverflow.com/questions/58242147/performing-operations-on-immutable-borrow-when-iterating-using-mutable-iterator/58242911#58242911", "title": "Performing operations on immutable borrow when iterating using mutable iterator", "body": "<p>You can do this using <a href=\"https://doc.rust-lang.org/std/primitive.slice.html#method.split_at_mut\" rel=\"nofollow noreferrer\"><code>split_at_mut</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn sum_previous(v: &amp;mut [i32]) {\n    for i in 1..v.len() {\n        let (head, tail) = v.split_at_mut(i);\n        tail[0] = sum_slice(head);\n    }\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=d312550ba5461cf83dc9763fcd0773c7\" rel=\"nofollow noreferrer\">Permalink to the playground</a>)</p>\n"}], "owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "closed_date": 1570310192, "answer_count": 1, "score": 0, "last_activity_date": 1570221302, "creation_date": 1570217022, "question_id": 58242147, "link": "https://stackoverflow.com/questions/58242147/performing-operations-on-immutable-borrow-when-iterating-using-mutable-iterator", "closed_reason": "Duplicate", "title": "Performing operations on immutable borrow when iterating using mutable iterator", "body": "<p>Here is a simple artificial example to illustrate the problem:</p>\n\n<pre><code>fn sum_slice(v: &amp;[i32]) -&gt; i32 {\n    v.iter().sum()\n}\n\nfn sum_previous(v: &amp;mut [i32]) {\n    for (i, val) in v.iter_mut().enumerate() {\n        *val = sum_slice(&amp;v[0..i]);\n    }\n}\n\nfn main() {\n    let mut v = vec![1,1,1,1,1,1,1];\n    sum_previous(&amp;mut v);\n    println!(\"{:?}\", v);\n}\n</code></pre>\n\n<p>Ideally the intention is that <code>sum_previous</code> will take the slice provided and replace each element with the sum of previous ones.</p>\n\n<p>But this is generating the error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>    error[E0502]: cannot borrow `*v` as immutable because it is also borrowed as \n    mutable\n\n    --&gt; src/main.rs:7:27\n      |\n    6 |     for (i, val) in v.iter_mut().enumerate() {\n      |                     ------------------------\n      |                     |\n      |                     mutable borrow occurs here\n      |                     mutable borrow later used here\n    7 |         *val = sum_slice(&amp;v[0..i]);\n      |                           ^ immutable borrow occurs here\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=06680974a7b52d45a4600ce74cd976ba\" rel=\"nofollow noreferrer\">Rust playground link</a></p>\n\n<p>I understand the problem that Rust is restricting us to have exactly one mutable reference and no immutable at the same time. I can also come with different solutions such as using another vector to store the results, but the question is not how to work around it but what is the acceptable pattern here?</p>\n\n<p>FWIW the original problem is implementation of a cellular automaton, where a grid to be processed and each cell to be updated based on its neighbours. In that case the grid is borrowed mutably, while the function to calculate the update is expecting an immutable reference.</p>\n"}, {"tags": ["rust", "nom"], "comments": [{"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570218692, "post_id": 58241828, "comment_id": 102857081, "body": "Is the <code>nom</code> requirement a fixed one? You could do this with a streaming iterator more efficiently, I reckon."}, {"owner": {"reputation": 33, "user_id": 6763054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8836d428f7455819bdd16b92a952cb05?s=128&d=identicon&r=PG&f=1", "display_name": "jimmy", "link": "https://stackoverflow.com/users/6763054/jimmy"}, "reply_to_user": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 0, "creation_date": 1570219186, "post_id": 58241828, "comment_id": 102857251, "body": "definitely not a requirement, just thought I would help achieve my objective faster"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "edited": false, "score": 2, "creation_date": 1570219304, "post_id": 58241828, "comment_id": 102857290, "body": "I&#39;ll give you both so you can decide, in that case :-)"}], "answers": [{"tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 7, "last_activity_date": 1570222527, "creation_date": 1570222527, "answer_id": 58243095, "question_id": 58241828, "link": "https://stackoverflow.com/questions/58241828/binary-file-parsing-with-nom-5-0/58243095#58243095", "title": "Binary file parsing with nom 5.0", "body": "<h1>The <code>nom</code> version</h1>\n\n<p>First off, apologies for this one, the playground only has nom 4.0 and as a result, the code is on <a href=\"https://github.com/srenauld/so_48241828_nom_binary\" rel=\"noreferrer\"><strong>this github repository</strong></a>.</p>\n\n<p>To parse something like this, we're going to need to combine two different parser:</p>\n\n<ul>\n<li><a href=\"https://docs.rs/nom/5.0.1/nom/bits/complete/fn.take_until.html\" rel=\"noreferrer\"><code>take_until</code></a>, to take bytes until either the preamble or EOF</li>\n<li><a href=\"https://docs.rs/nom/5.0.1/nom/bits/complete/fn.tag.html\" rel=\"noreferrer\"><code>tag</code></a>, to isolate the preamble</li>\n</ul>\n\n<p>And a combinator, <a href=\"https://docs.rs/nom/5.0.1/nom/sequence/fn.preceded.html\" rel=\"noreferrer\"><code>preceded</code></a>, so we can ditch the first element of a sequence of parsers.</p>\n\n<pre><code>// Our preamble\nconst MAGIC:&amp;[u8] = &amp;[0x65, 0x51, 0x48, 0x54, 0x52];\n// Our EOF byte sequence\nconst EOF:&amp;[u8] = &amp;[0xff];\n\n// Shorthand to catch EOF\nfn match_to_eof(data: &amp;[u8]) -&gt; nom::IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n    nom::bytes::complete::take_until(EOF)(data)\n}\n\n// Shorthand to catch the preamble\nfn take_until_preamble(data: &amp;[u8]) -&gt; nom::IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n    nom::bytes::complete::take_until(MAGIC)(data)\n}\npub fn extract_from_data(data: &amp;[u8]) -&gt; Option&lt;(&amp;[u8], &amp;[u8])&gt; {\n    let preamble_parser = nom::sequence::preceded(\n        // Ditch anything before the preamble\n        take_until_preamble,\n        nom::sequence::preceded(\n            // Ditch the preamble\n            nom::bytes::complete::tag(MAGIC),\n            // And take until the EOF (0xff)\n            match_to_eof\n        )\n    );\n    // And we swap the elements because it's confusing AF\n    // as a return function\n    preamble_parser(data).ok().map(|r| {\n        (r.1, r.0)\n    })\n}\n</code></pre>\n\n<p>The code should be annotated well enough to follow. This ditches any bytes until it finds the preamble bytes, then ditches those and keeps everything until it finds the EOF byte sequence (<code>[0xff]</code>).</p>\n\n<p>It then returns a <strong>reversed</strong> <code>nom</code> result, because it was an example. You can un-reverse it to combine it with other parsers if you like. The first element is the content of the sequence, the second is whatever was after the EOF. This means that you can iterate with this function (I did that in a test in the repo I put on github).</p>\n"}], "owner": {"reputation": 33, "user_id": 6763054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8836d428f7455819bdd16b92a952cb05?s=128&d=identicon&r=PG&f=1", "display_name": "jimmy", "link": "https://stackoverflow.com/users/6763054/jimmy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1170, "favorite_count": 0, "accepted_answer_id": 58243095, "answer_count": 1, "score": 2, "last_activity_date": 1570222527, "creation_date": 1570215229, "last_edit_date": 1592644375, "question_id": 58241828, "link": "https://stackoverflow.com/questions/58241828/binary-file-parsing-with-nom-5-0", "title": "Binary file parsing with nom 5.0", "body": "<h1>Problem</h1>\n<p>There is a file that has multiple headers inside it, but to me, it only matters one and the data after it. This header repeats itself multiple times through the file.</p>\n<p>Its magic number is: A3046 in ASCII, or <code>0x65 0x51 0x48 0x54 0x52</code> in HEX.\nAfter finding the first byte, the parser has to take all bytes until <code>0xff</code> and then repeat for the remainder headers until the EOF.</p>\n<h1>My solution</h1>\n<p>First I loaded the file:</p>\n<pre><code>let mut file = OpenOptions::new()\n        .read(true)\n        .open(&quot;../assets/sample&quot;)\n        .unwrap();\n\n    let mut full_file: Vec&lt;u8&gt; = Vec::new();\n    file.read_to_end(&amp;mut full_file);\n</code></pre>\n<p>I declare the magic numbers with: <code>pub static QT_MAGIC: &amp;[u8; 5] = b&quot;A3046&quot;;</code>\nAnd as a test, I wrote the following function just to try if it could find the first header.</p>\n<pre><code>fn parse_block(input: &amp;[u8]) -&gt; IResult&lt;&amp;[u8], &amp;[u8]&gt; {\n    tag(QT_MAGIC)(input)\n}\n</code></pre>\n<p>However when the test runs, Ok has <code>None</code> value. It definitely should have found something. What I am doing wrong?</p>\n<p>I found no examples of bytes parsing using nom5, and also being a rust newbie is not helping.\nHow can I parse all the blocks with these rules?</p>\n"}, {"tags": ["rust", "lifetime"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570210864, "post_id": 58240646, "comment_id": 102854299, "body": "Q2 seems to be its own answer: <code>x</code> is not a static global variable, so the code fails."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570211019, "post_id": 58240646, "comment_id": 102854355, "body": "This looks to me like a duplicate of <a href=\"https://stackoverflow.com/questions/42719580/why-doesnt-a-static-function-argument-make-something-live-for-the-entire-progr\">Why doesn&#39;t a &#39;static function argument make something live for the entire program?</a> Do the answers to that question also answer yours?"}], "answers": [{"comments": [{"owner": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "edited": false, "score": 0, "creation_date": 1570210456, "post_id": 58240779, "comment_id": 102854131, "body": "I agree that declaring x as a static or const will solve the problem, But if the lifetime of a variable is smaller than the reference variable mentioned in the function definition, then it should work. <code>x</code> lifetime will be shorter than <code>&#39;static</code> lifetime.  Is it necessary to have same lifetime for the reference and the referent?"}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "reply_to_user": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "edited": false, "score": 0, "creation_date": 1570211364, "post_id": 58240779, "comment_id": 102854487, "body": "@AdityaArora you got it the wrong way: input variable lifetime needs to be at least as long as specified in the function declaration."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570213277, "post_id": 58240779, "comment_id": 102855222, "body": "@trentcl the code example was added by PitaJ and was not the OP&#39;s. The edit should be flagged and rolled back."}, {"owner": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "reply_to_user": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "edited": false, "score": 0, "creation_date": 1570213432, "post_id": 58240779, "comment_id": 102855279, "body": "@JussiKukkonen Why it couldn&#39;t be less than specified in the function declaration? I agree greater will create problems."}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "edited": false, "score": 0, "creation_date": 1570214606, "post_id": 58240779, "comment_id": 102855672, "body": "@AdityaArora Added an answer of my own to try to clarify things a bit. Let me know if there&#39;s anything not clear; it is a long one, however."}, {"owner": {"reputation": 12075, "user_id": 2241569, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QMrPS.jpg?s=128&g=1", "display_name": "Jussi Kukkonen", "link": "https://stackoverflow.com/users/2241569/jussi-kukkonen"}, "reply_to_user": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "edited": false, "score": 0, "creation_date": 1570221581, "post_id": 58240779, "comment_id": 102858076, "body": "@AdityaArora &#39;static is a bit of a special case but think of a lifetime that is specified for both input and output of a function: in this case typically the output is a reference into the input variable: if your input variable was allowed to not exist throughout the given lifetime, the output variable might reference non-existing data even if it does not exceed the lifetime."}], "tags": [], "owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "is_accepted": false, "score": 1, "last_activity_date": 1570213483, "last_edit_date": 1570213483, "creation_date": 1570209666, "answer_id": 58240779, "question_id": 58240646, "link": "https://stackoverflow.com/questions/58240646/difference-between-p-a-i32-and-p-static-i32-lifetime-in-rust/58240779#58240779", "title": "Difference between &quot;p: &amp;&#39;a i32&quot; and &quot;p: &amp;&#39;static i32&quot; lifetime in Rust?", "body": "<p>A <code>'static</code> lifetime requirement on a reference requires this argument to be declared for the global lifetime of the program, but <code>x</code> cannot fulfill this condition as it is declared midway through execution.</p>\n\n<p>To be able to use this, declare x as <code>const</code> or <code>static</code> so its lifetime will be <code>'static</code> and the code will work fine.</p>\n"}, {"comments": [{"owner": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "edited": false, "score": 0, "creation_date": 1571311623, "post_id": 58241700, "comment_id": 103203589, "body": "Thanks, @S&#233;bastienRenauld for the well-structured answer with examples. On a side note, will replacing <code>&amp;&#39;a</code> with <code>&amp;&#39;static</code> in struct Foo of code block 1 work?"}, {"owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "reply_to_user": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "edited": false, "score": 0, "creation_date": 1571313295, "post_id": 58241700, "comment_id": 103204566, "body": "@AdityaArora It is possible (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=ab93d789553ace15cbf31bd847f29712\" rel=\"nofollow noreferrer\">link</a>) but it is <i>extremely</i> rare. Due to the requirement for the inner reference to be <code>&amp;&#39;static</code>, literally the only thing that will fit in there is <code>static</code> or <code>const</code> definitions. As <code>static</code> definitions do not allow initialization (without <code>lazy_static</code>) you&#39;re very limited in what you can do with that."}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": true, "score": 2, "last_activity_date": 1570214582, "creation_date": 1570214582, "answer_id": 58241700, "question_id": 58240646, "link": "https://stackoverflow.com/questions/58240646/difference-between-p-a-i32-and-p-static-i32-lifetime-in-rust/58241700#58241700", "title": "Difference between &quot;p: &amp;&#39;a i32&quot; and &quot;p: &amp;&#39;static i32&quot; lifetime in Rust?", "body": "<p>A <code>'static</code> lifetime is a special concept. It specifies that the variable referenced by this needs to exist for the <strong>entire</strong> lifetime of the program. Using this is a rare case, and requires even rarer precautions to fulfill.</p>\n\n<p>In practice, a <code>&amp;'static</code> reference may only happen in two cases:</p>\n\n<ul>\n<li>A <code>const</code> declaration</li>\n<li>A <code>static</code> declaration</li>\n</ul>\n\n<p>Both effectively accomplish the same thing, in different ways; the differences aren't important to this question, however. In both cases, the outcome is a variable that is available for the entire lifetime of the program and will not be relocated, thus guaranteeing <code>&amp;'static</code> if borrowed.</p>\n\n<p>Now that we've covered this, let's cover both of your questions.</p>\n\n<hr>\n\n<blockquote>\n  <p>Q1. What is meant by the smallest possible lifetime for &amp;x?</p>\n</blockquote>\n\n<p>When you define a function as <code>fn g&lt;'a&gt;(p: &amp;'a i32) { ... }</code>, you are requiring <code>p</code> to be valid for a lifetime <code>'a</code>; this lifetime is determined by the compiler so that <code>'a</code> is the <strong>smallest possible</strong>. If the reference is never used outside of the function scope, <code>'a</code> will be the lifetime of execution of that function, for example. If you use or reference this borrow outside of the function, the lifetime will (evidently) be larger.</p>\n\n<p>The definition of \"smallest possible\" is simple: the compiler will infer the lifetime based from the time you start that reference, to the last time you use that reference. Dependent borrows also count, and this typically comes back to bite people when dealing with collections.</p>\n\n<p>The reason it is the smallest possible is so that you don't run into crazy situations where you don't have a borrow but it is borrowed anyway; this typically happens when you try to provide your own, incorrect, lifetime hints. There are plenty of cases where it is usually best to let the compiler decide; the other case is <code>struct</code> implementations such as the following:</p>\n\n<pre><code>struct Foo&lt;'a&gt; {\n    item: &amp;'a u32\n}\nimpl&lt;'a&gt; Foo&lt;'a&gt; {\n    pub fn compare&lt;'b&gt;(&amp;self, other: &amp;'b u32) {\n        ...\n    }\n}\n</code></pre>\n\n<p>A common fault in situations like this is to describe <code>other</code> to the compiler as <code>'a</code>, <strong>not</strong> defining the second <code>'b</code> lifetime, and thus (accidentally) requiring <code>other</code> to be borrowed for the lifetime of the <code>struct</code> itself.</p>\n\n<hr>\n\n<blockquote>\n  <p>Q2. Why does this code fail? According to my understanding, &amp;'static is used for static global variables which live for the full program.</p>\n</blockquote>\n\n<pre><code>let x = 10;\n</code></pre>\n\n<p>This assignment does not have a <code>'static</code> lifetime. It has an anonymous lifetime defined as less than <code>'static</code>, because it is not <strong>strictly</strong> defined as global. The <em>only</em> way to get a <code>'static</code> borrow on anything is if that source element is defined as <code>const</code> or <code>static</code>.</p>\n\n<p>You can convince yourself of this with this snippet (<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=bc8e3ac3e112bfb187c0976090f05f73\" rel=\"nofollow noreferrer\"><strong>playground</strong></a>):</p>\n\n<pre><code>fn f(p: &amp;'static i32) {\n    println!(\"{}\", p)\n}\n\nconst FOO:i32 = 3;\nstatic BAR:i32 = 4;\n\nfn main() {\n    f(&amp;FOO); // Works\n    f(&amp;BAR); // Also works\n}\nf(&amp;x);\n</code></pre>\n"}], "owner": {"reputation": 177, "user_id": 7550476, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5p0Tq.png?s=128&g=1", "display_name": "Aditya Arora", "link": "https://stackoverflow.com/users/7550476/aditya-arora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 58241700, "answer_count": 2, "score": 2, "last_activity_date": 1570214582, "creation_date": 1570209102, "last_edit_date": 1570211716, "question_id": 58240646, "link": "https://stackoverflow.com/questions/58240646/difference-between-p-a-i32-and-p-static-i32-lifetime-in-rust", "title": "Difference between &quot;p: &amp;&#39;a i32&quot; and &quot;p: &amp;&#39;static i32&quot; lifetime in Rust?", "body": "<p>I started learning Rust a few days back.</p>\n\n<p>This is an extract from the famous book <em>Programming Rust</em> by Jim Blandy.</p>\n\n<p>For the code</p>\n\n<pre><code>fn g&lt;'a&gt;(p: &amp;'a i32) { ... }\n\nlet x = 10;\ng(&amp;x);\n</code></pre>\n\n<p>The book says</p>\n\n<blockquote>\n  <p>Rust Choose the smallest possible lifetime for &amp;x, that of the call to g. This meets all constraints: it doesn't outlive x, and encloses the entire call to g. So code must muster.</p>\n</blockquote>\n\n<p>Q1. What is meant by the smallest possible lifetime for <code>&amp;x</code>?</p>\n\n<p>For the code</p>\n\n<pre><code>fn f(p: &amp;'static i32) { ... }\n\nlet x = 10;\nf(&amp;x);\n</code></pre>\n\n<p>Q2. Why does this code fail? According to my understanding, <code>&amp;'static</code> is used for static global variables which live for the full program. <a href=\"https://www.reddit.com/r/rust/comments/8rhmj8/how_does_static_lifetime_work/\" rel=\"nofollow noreferrer\">link</a></p>\n"}, {"tags": ["tcp", "rust", "stream", "rust-tokio"], "answers": [{"tags": [], "owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "is_accepted": true, "score": 2, "last_activity_date": 1570209187, "creation_date": 1570209187, "answer_id": 58240671, "question_id": 58240488, "link": "https://stackoverflow.com/questions/58240488/how-to-rejoin-readhalf-and-writehalf-into-a-tcpstream/58240671#58240671", "title": "How to rejoin `ReadHalf` and `WriteHalf` into a `TcpStream`", "body": "<p>From <a href=\"https://docs.rs/tokio-io/0.2.0-alpha.6/tokio_io/split/index.html\" rel=\"nofollow noreferrer\">cargo doc</a></p>\n\n<pre><code>To restore this read/write object from its split::ReadHalf and split::WriteHalf use unsplit.\n</code></pre>\n"}], "owner": {"reputation": 9495, "user_id": 1395740, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/793c4377313587d742fad6f069d92d89?s=128&d=identicon&r=PG", "display_name": "Nick", "link": "https://stackoverflow.com/users/1395740/nick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 1, "accepted_answer_id": 58240671, "answer_count": 1, "score": 2, "last_activity_date": 1570209187, "creation_date": 1570208305, "question_id": 58240488, "link": "https://stackoverflow.com/questions/58240488/how-to-rejoin-readhalf-and-writehalf-into-a-tcpstream", "title": "How to rejoin `ReadHalf` and `WriteHalf` into a `TcpStream`", "body": "<p>Is there a way to rejoin a Tokio <code>ReadHalf</code> and <code>WriteHalf</code> into a <code>TcpStream</code> after a <a href=\"https://tokio-rs.github.io/tokio/doc/tokio/net/struct.TcpStream.html?search=#method.split\" rel=\"nofollow noreferrer\">split</a>?</p>\n\n<pre><code>let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;\nlet (reader, writer) = stream.split();\n\n// re-join pseudo-code\nlet stream: TcpStream = (reader, writer).join();\n</code></pre>\n"}, {"tags": ["database", "postgresql", "rust", "rust-diesel"], "answers": [{"tags": [], "owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "is_accepted": true, "score": 0, "last_activity_date": 1570206880, "creation_date": 1570206880, "answer_id": 58240204, "question_id": 58240020, "link": "https://stackoverflow.com/questions/58240020/check-if-a-certain-database-entry-already-exists-in-diesel-rust/58240204#58240204", "title": "Check if a certain database-entry already exists in DIesel/Rust", "body": "<p>In case were <code>UUID</code> is the primary key your bdd engine will return a <code>uniq constraint violation error</code> when an already existing UUID is inserted, you can get the same behavior on any row by adding a <code>uniq</code> constraint on it.\nYou shoulde take a look to the <a href=\"https://www.tutorialspoint.com/postgresql/postgresql_constraints.htm\" rel=\"nofollow noreferrer\">postgres doc</a></p>\n"}], "owner": {"reputation": 611, "user_id": 11378334, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-AXysP46Cwk8/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re2btjvnca9ztWrTvGV5IDe69sgKg/mo/photo.jpg?sz=128", "display_name": "Samuel Dressel", "link": "https://stackoverflow.com/users/11378334/samuel-dressel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 469, "favorite_count": 0, "accepted_answer_id": 58240204, "answer_count": 1, "score": 1, "last_activity_date": 1570206880, "creation_date": 1570205940, "question_id": 58240020, "link": "https://stackoverflow.com/questions/58240020/check-if-a-certain-database-entry-already-exists-in-diesel-rust", "title": "Check if a certain database-entry already exists in DIesel/Rust", "body": "<p>I'm currently developing a database in Rust using the Diesel-Framework.</p>\n\n<p>My task is to check if an entry in the table already exists by comparing the primary key.</p>\n\n<p>Im generating the primary key using the Uuid-Crate:</p>\n\n<pre><code>let extension = \".png\".to_string();\nlet primary_key = Uuid::parse_str(&amp;extension).unwrap();\n</code></pre>\n\n<p>If the primary key does not exist yet, I want to insert a new entry into the database.\nOn the other hand if there is already a primary key existing with the same Uuid, I dont want to insert into the database.</p>\n\n<p>Now Im looking for a proper way to manage this task - I thought about using the find-function but Im not sure how to do it yet.</p>\n"}, {"tags": ["rust", "traits"], "comments": [{"owner": {"reputation": 2452, "user_id": 5082427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b04ffa64c1eeae620048e1ed31dab54f?s=128&d=identicon&r=PG&f=1", "display_name": "Wazner", "link": "https://stackoverflow.com/users/5082427/wazner"}, "edited": false, "score": 0, "creation_date": 1570201467, "post_id": 58237711, "comment_id": 102850503, "body": "So if I understand correctly. You want to conditionally implement <code>Clone</code> based on whether the type implementing the trait <code>A</code> is <code>Sized</code>?"}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 2452, "user_id": 5082427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b04ffa64c1eeae620048e1ed31dab54f?s=128&d=identicon&r=PG&f=1", "display_name": "Wazner", "link": "https://stackoverflow.com/users/5082427/wazner"}, "edited": false, "score": 0, "creation_date": 1570203143, "post_id": 58237711, "comment_id": 102851282, "body": "@Wazner It sounds like he wants to make <code>A</code> a <i>supertrait</i> of <code>Clone</code> only when <code>Self: Sized</code>."}, {"owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "reply_to_user": {"reputation": 2452, "user_id": 5082427, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b04ffa64c1eeae620048e1ed31dab54f?s=128&d=identicon&r=PG&f=1", "display_name": "Wazner", "link": "https://stackoverflow.com/users/5082427/wazner"}, "edited": false, "score": 0, "creation_date": 1570203857, "post_id": 58237711, "comment_id": 102851591, "body": "@Wazner I want to make <code>Clone</code> supertrait of <code>A</code> if and only if <code>Self :Sized</code>"}], "answers": [{"tags": [], "owner": {"reputation": 221, "user_id": 7039144, "user_type": "registered", "profile_image": "https://graph.facebook.com/1824254821119702/picture?type=large", "display_name": "Asya Corbeau", "link": "https://stackoverflow.com/users/7039144/asya-corbeau"}, "is_accepted": false, "score": 0, "last_activity_date": 1570208975, "creation_date": 1570208975, "answer_id": 58240624, "question_id": 58237711, "link": "https://stackoverflow.com/questions/58237711/supertrait-only-when-self-sized/58240624#58240624", "title": "Supertrait only when Self : Sized", "body": "<p>You can do like that:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>trait A {\n    fn new() -&gt; Self where Self : Sized;\n    fn foo(&amp;self) -&gt; i32;\n}\n\n#[derive(Clone)]\nstruct B {\n   data : i32\n}\n\nimpl A for B {\n    fn new() -&gt; Self {\n        B {data : 42}\n    }\n    fn foo(&amp;self) -&gt; i32 {\n        self.data\n    }\n}\n\n\nfn make_clone&lt;T: Clone + A&gt;(toc: &amp;T) -&gt; T {\n    dbg!(toc.foo());\n    toc.clone()\n}\n\nfn main() {\n    let b = B{data: 0};\n    make_clone(&amp;b);\n}\n</code></pre>\n\n<p>so you can access <code>A</code> method and the<code>Clone</code> supertrait from <code>make_clone</code>, you can obviously do the same thing with a supertrait instead of a generic method</p>\n"}], "owner": {"reputation": 579, "user_id": 5878876, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e5dfcdce69507476298e16ce6b0e3ec?s=128&d=identicon&r=PG&f=1", "display_name": "Unlikus", "link": "https://stackoverflow.com/users/5878876/unlikus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 159, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1570208975, "creation_date": 1570196878, "last_edit_date": 1570199111, "question_id": 58237711, "link": "https://stackoverflow.com/questions/58237711/supertrait-only-when-self-sized", "title": "Supertrait only when Self : Sized", "body": "<p>Lets suppose I have a trait</p>\n\n<pre><code>trait A {\n    fn new() -&gt; Self where Self : Sized;\n    fn foo(&amp;self) -&gt; i32;\n}\nstruct B {\n   data : i32\n}\nimpl A for B {\n    fn new() -&gt; Self {\n        B {data : 42}\n    }\n    fn foo(&amp;self) -&gt; i32 {\n        self.data\n    }\n}\n</code></pre>\n\n<p>Now I can use <code>Box&lt;dyn A&gt;</code>, I just do not have the new() method available.\nAnd when I have a generic <code>T : A</code>, I can do <code>T::new()</code>. So I can use A as a trait object (without the functions which would prevent this) and I can use it in a templated code and use all functions on it.</p>\n\n<p>My question is, is it possible to get this behavior when having for example <code>Clone</code> as supertrait?\nIn the <code>dyn A</code> case <code>A</code> does not implement Clone. In the generic case is does.</p>\n"}, {"tags": ["rust", "floating-point"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 3, "creation_date": 1570196808, "post_id": 58237337, "comment_id": 102848148, "body": "The <code>PartialEq</code> implementation looks incorrect to me because it is not transitive."}, {"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1570198664, "post_id": 58237337, "comment_id": 102849055, "body": "@trentcl Yes. The only &quot;correct&quot; way is via rounding, not proximity. Also, this implementation will behave badly with large numbers."}, {"owner": {"reputation": 50347, "user_id": 1763356, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/zGWG9.png?s=128&g=1", "display_name": "Veedrac", "link": "https://stackoverflow.com/users/1763356/veedrac"}, "edited": false, "score": 2, "creation_date": 1570546332, "post_id": 58237337, "comment_id": 102942404, "body": "Probably the cleanest way to do this is to use <code>NotNan</code> from <code>ordered_float</code> or <code>N32</code> from <code>noisy_float</code>. Definitely <b>do not</b> use <code>(self.0 - other.0).abs() &lt; 1.17549435e-36f32</code>; this approach is wrong and can break <code>BTreeMap</code>. It&#39;s an approach that gets suggested a lot but has pretty much no merits."}, {"owner": {"reputation": 1197, "user_id": 759738, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5f75361c206345c3f01e207202ce7cda?s=128&d=identicon&r=PG", "display_name": "KilyenOrs", "link": "https://stackoverflow.com/users/759738/kilyenors"}, "edited": false, "score": 0, "creation_date": 1570546538, "post_id": 58237337, "comment_id": 102942524, "body": "Yes, now I get it that I should not use it. (I just do not want to edit away because that feels kind of cheating)"}], "answers": [{"comments": [{"owner": {"reputation": 1197, "user_id": 759738, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5f75361c206345c3f01e207202ce7cda?s=128&d=identicon&r=PG", "display_name": "KilyenOrs", "link": "https://stackoverflow.com/users/759738/kilyenors"}, "edited": false, "score": 0, "creation_date": 1570539922, "post_id": 58238731, "comment_id": 102938637, "body": "As I added to the question this solution is horrible from a performance point of view. In the case of a small number of elements, one can use a simple vector, otherwise binary search."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "reply_to_user": {"reputation": 1197, "user_id": 759738, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5f75361c206345c3f01e207202ce7cda?s=128&d=identicon&r=PG", "display_name": "KilyenOrs", "link": "https://stackoverflow.com/users/759738/kilyenors"}, "edited": false, "score": 0, "creation_date": 1570547076, "post_id": 58238731, "comment_id": 102942806, "body": "@KilyenOrs <code>let first_element = ww.range(FloatWrapper::new(1.5)..).next().map(|(_, v)| v)</code>"}], "tags": [], "owner": {"reputation": 17581, "user_id": 2167834, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9699e22406fb8e57a0c90f576c610b1c?s=128&d=identicon&r=PG", "display_name": "S&#233;bastien Renauld", "link": "https://stackoverflow.com/users/2167834/s%c3%a9bastien-renauld"}, "is_accepted": false, "score": 2, "last_activity_date": 1570202887, "last_edit_date": 1570202887, "creation_date": 1570200708, "answer_id": 58238731, "question_id": 58237337, "link": "https://stackoverflow.com/questions/58237337/can-i-perform-binary-tree-search-with-the-standard-library-without-wrapping-the/58238731#58238731", "title": "Can I perform binary tree search with the standard library without wrapping the float type and abusing the BTreeMap?", "body": "<p>Now that we've gone over and clarified the requirements a bit, there's a couple of bad news for you:</p>\n\n<ol>\n<li>You're not getting away from the requirement to have a wrapping type. As I'm sure you've discovered, this is because no floating-point type implements <code>Ord</code></li>\n<li>You're also not getting away from a combinator of some sort</li>\n</ol>\n\n<p>First, we're going to clear up your <code>impl</code>, as they both have shortfalls described in the comments. In the future, it may make sense to use the wrapper traits in <code>eq-float</code>, as they already implement all this. The implementations at fault are <code>PartialEq</code> and <code>Ord</code>, and they both break down on a few points. The new implementations:</p>\n\n<pre><code>impl Ord for FloatWrapper {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        self.0.partial_cmp(&amp;other.0).unwrap_or_else(|| {\n            if self.0.is_nan() &amp;&amp; !other.0.is_nan() {\n                Ordering::Less\n            } else if !self.0.is_nan() &amp;&amp; other.0.is_nan() {\n                Ordering::Greater\n            } else {\n                Ordering::Equal\n            }\n        })\n    }\n}\nimpl PartialEq for FloatWrapper {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        if self.0.is_nan() &amp;&amp; other.0.is_nan() {\n            true\n        } else {\n            self.0 == other.0\n        }\n    }\n}\n</code></pre>\n\n<p>Nothing surprising, we're just abusing the fact that <code>f32</code> implements <code>PartialOrd</code> for <code>Ord</code> and surfacing all other implementations on <code>FloatWrapper</code> itself.</p>\n\n<p>Now, for the combinator. Your current combinator will force a range of elements to be stored temporarily in memory, to then discard one. We can do better by abusing the fact that <code>iter()</code> is a <strong>sorted</strong> iterator. So, we can skip while we search, and then take the first:</p>\n\n<pre><code>        let mut first_element = ww.iter()\n            .skip_while(|(i, _)| *i &lt; &amp;FloatWrapper::new(1.5)) // Skipping all elements before it\n            .take(1) // Reducing the iterator to 1 element\n            .map(|(_, &amp;v)| v) // Getting its value, dereferenced\n            .next(); // Our result\n</code></pre>\n\n<p>This yields a 10% speedup in low-element-count situations over your first implementation.</p>\n"}, {"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 3, "last_activity_date": 1570548659, "creation_date": 1570548659, "answer_id": 58289562, "question_id": 58237337, "link": "https://stackoverflow.com/questions/58237337/can-i-perform-binary-tree-search-with-the-standard-library-without-wrapping-the/58289562#58289562", "title": "Can I perform binary tree search with the standard library without wrapping the float type and abusing the BTreeMap?", "body": "<p>You said you wanted a std-only solution, but this is a common enough problem, so here's a solution using the crate <code>ordered-float</code>:</p>\n\n<h3>Cargo.toml</h3>\n\n<pre><code>[dependencies]\nordered-float = \"1.0\"\n</code></pre>\n\n<h3>main.rs</h3>\n\n<pre><code>use ordered_float::OrderedFloat; // 1.0.2\nuse std::collections::BTreeMap;\n\nfn main() {\n    let mut ww = BTreeMap::new();\n    ww.insert(OrderedFloat(1.0), \"one\");\n    ww.insert(OrderedFloat(2.0), \"two\");\n    ww.insert(OrderedFloat(3.0), \"three\");\n    ww.insert(OrderedFloat(4.0), \"three\");\n    let rez = ww.range(OrderedFloat(1.5)..).next().map(|(_, &amp;v)| v);\n\n    println!(\"{:?}\", rez);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=0306784d56d234723bc31fea69403354\" rel=\"nofollow noreferrer\">prints</a></p>\n\n<pre><code>Some(\"two\")\n</code></pre>\n\n<p>Now, isn't that nice and clean? If you want a less verbose syntax, I suggest wrapping the <code>BTreeMap</code> itself, so you can give it appropriately named methods that make sense for your application.</p>\n\n<h2>NaN behavior</h2>\n\n<p>Be aware that <code>OrderedFloat</code> <a href=\"https://docs.rs/ordered-float/1.0.2/ordered_float/struct.OrderedFloat.html\" rel=\"nofollow noreferrer\">may not behave the way you expect in the presence of NaNs</a>:</p>\n\n<blockquote>\n  <p>NaN is sorted as <em>greater</em> than all other values and <em>equal</em> to itself, in contradiction with the IEEE standard.</p>\n</blockquote>\n"}], "owner": {"reputation": 1197, "user_id": 759738, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5f75361c206345c3f01e207202ce7cda?s=128&d=identicon&r=PG", "display_name": "KilyenOrs", "link": "https://stackoverflow.com/users/759738/kilyenors"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1506, "favorite_count": 1, "accepted_answer_id": 58289562, "answer_count": 2, "score": 3, "last_activity_date": 1570548659, "creation_date": 1570195437, "last_edit_date": 1570542741, "question_id": 58237337, "link": "https://stackoverflow.com/questions/58237337/can-i-perform-binary-tree-search-with-the-standard-library-without-wrapping-the", "title": "Can I perform binary tree search with the standard library without wrapping the float type and abusing the BTreeMap?", "body": "<p>I would like to find the first element which is greater than a limit from an <strong>ordered</strong> collection. While iteration over it is always an option, I need a faster one. Currently, I came up with a solution like <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=f4b3c3b00e6102aac5563a06a22b78cd\" rel=\"nofollow noreferrer\">this</a> but it feels a little hacky:</p>\n\n<pre><code>use std::cmp::Ordering;\nuse std::collections::BTreeMap;\nuse std::ops::Bound::{Included, Unbounded};\n\n#[derive(Debug)]\nstruct FloatWrapper(f32);\n\nimpl Eq for FloatWrapper {}\n\nimpl PartialEq for FloatWrapper {\n    fn eq(&amp;self, other: &amp;Self) -&gt; bool {\n        (self.0 - other.0).abs() &lt; 1.17549435e-36f32\n    }\n}\n\nimpl Ord for FloatWrapper {\n    fn cmp(&amp;self, other: &amp;Self) -&gt; Ordering {\n        if (self.0 - other.0).abs() &lt; 1.17549435e-36f32 {\n            Ordering::Equal\n        } else if self.0 - other.0 &gt; 0.0 {\n            Ordering::Greater\n        } else if self.0 - other.0 &lt; 0.0 {\n            Ordering::Less\n        } else {\n            Ordering::Equal\n        }\n    }\n}\n\nimpl PartialOrd for FloatWrapper {\n    fn partial_cmp(&amp;self, other: &amp;Self) -&gt; Option&lt;Ordering&gt; {\n        Some(self.cmp(other))\n    }\n}\n</code></pre>\n\n<ul>\n<li><p>The wrapper around the float is not nice even that I am sure that there will be no NaNs</p></li>\n<li><p>The <code>Range</code> is also unnecessary since I want a single element.</p></li>\n</ul>\n\n<p>Is there a better way of achieving a similar result using only Rust's standard library? I know that there are plenty of tree implementations but it feels like overkill. </p>\n\n<p>After the suggestions <a href=\"https://stackoverflow.com/a/58238731/155423\">in the answer</a> to use the iterator I did a little benchmark with the following code:</p>\n\n<pre><code>fn main() {\n    let measure = vec![\n        10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190,\n        200,\n    ];\n\n    let mut measured_binary = Vec::new();\n    let mut measured_iter = Vec::new();\n    let mut measured_vec = Vec::new();\n\n    for size in measure {\n        let mut ww = BTreeMap::new();\n        let mut what_found = Vec::new();\n        for _ in 0..size {\n            let now: f32 = thread_rng().gen_range(0.0, 1.0);\n            ww.insert(FloatWrapper(now), now);\n        }\n        let what_to_search: Vec&lt;FloatWrapper&gt; = (0..10000)\n            .map(|_| thread_rng().gen_range(0.0, 0.8))\n            .map(|x| FloatWrapper(x))\n            .collect();\n        let mut rez = 0;\n\n        for current in &amp;what_to_search {\n            let now = Instant::now();\n            let m = find_one(&amp;ww, current);\n            rez += now.elapsed().as_nanos();\n            what_found.push(m);\n        }\n\n        measured_binary.push(rez);\n        rez = 0;\n\n        for current in &amp;what_to_search {\n            let now = Instant::now();\n            let m = find_two(&amp;ww, current);\n            rez += now.elapsed().as_nanos();\n            what_found.push(m);\n        }\n        measured_iter.push(rez);\n\n        let ww_in_vec: Vec&lt;(FloatWrapper, f32)&gt; =\n            ww.iter().map(|(&amp;key, &amp;value)| (key, value)).collect();\n\n        rez = 0;\n\n        for current in &amp;what_to_search {\n            let now = Instant::now();\n            let m = find_three(&amp;ww_in_vec, current);\n            rez += now.elapsed().as_nanos();\n            what_found.push(m);\n        }\n\n        measured_vec.push(rez);\n\n        println!(\"{:?}\", what_found);\n    }\n    println!(\"binary :{:?}\", measured_binary);\n    println!(\"iter_map :{:?}\", measured_iter);\n    println!(\"iter_vec :{:?}\", measured_vec);\n}\n\nfn find_one(from_what: &amp;BTreeMap&lt;FloatWrapper, f32&gt;, what: &amp;FloatWrapper) -&gt; f32 {\n    let v: Vec&lt;f32&gt; = from_what\n        .range((Included(what), (Unbounded)))\n        .take(1)\n        .map(|(_, &amp;v)| v)\n        .collect();\n    *v.get(0).expect(\"we are in truble\")\n}\n\nfn find_two(from_what: &amp;BTreeMap&lt;FloatWrapper, f32&gt;, what: &amp;FloatWrapper) -&gt; f32 {\n    from_what\n        .iter()\n        .skip_while(|(i, _)| *i &lt; what) // Skipping all elements before it\n        .take(1) // Reducing the iterator to 1 element\n        .map(|(_, &amp;v)| v) // Getting its value, dereferenced\n        .next()\n        .expect(\"we are in truble\") // Our\n}\n\nfn find_three(from_what: &amp;Vec&lt;(FloatWrapper, f32)&gt;, what: &amp;FloatWrapper) -&gt; f32 {\n    *from_what\n        .iter()\n        .skip_while(|(i, _)| i &lt; what) // Skipping all elements before it\n        .take(1) // Reducing the iterator to 1 element\n        .map(|(_, v)| v) // Getting its value, dereferenced\n        .next()\n        .expect(\"we are in truble\") // Our\n}\n</code></pre>\n\n<p>The key takeaway for me is that it is worth to use the binary search after ~50 elements. In my case with 30000 elements means 200x speedup (at least based on this microbenchmark).</p>\n"}, {"tags": ["concurrency", "rust", "async-await"], "comments": [{"owner": {"reputation": 1979, "user_id": 1634531, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/02fc16c85eab4a8e38f1c5ac1ae92a17?s=128&d=identicon&r=PG", "display_name": "weltensturm", "link": "https://stackoverflow.com/users/1634531/weltensturm"}, "edited": false, "score": 1, "creation_date": 1570190551, "post_id": 58234162, "comment_id": 102844983, "body": "check out <a href=\"https://rust-lang.github.io/async-book/06_multiple_futures/03_select.html\" rel=\"nofollow noreferrer\">futures::select!</a>"}, {"owner": {"reputation": 14722, "user_id": 401137, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/j25bf.png?s=128&g=1", "display_name": "Some Guy", "link": "https://stackoverflow.com/users/401137/some-guy"}, "edited": false, "score": 1, "creation_date": 1570191648, "post_id": 58234162, "comment_id": 102845521, "body": "I think the problem with the <code>select</code> macro is that you need branches for every future that might complete. Maybe <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.19/futures/future/fn.select_ok.html\" rel=\"nofollow noreferrer\">futures::future::select_ok</a> is better?"}, {"owner": {"reputation": 2524, "user_id": 1000145, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ed1f474d23ef1e028ef377c4f638d409?s=128&d=identicon&r=PG", "display_name": "Tim Vis&#233;e", "link": "https://stackoverflow.com/users/1000145/tim-vis%c3%a9e"}, "edited": false, "score": 0, "creation_date": 1570232750, "post_id": 58234162, "comment_id": 102860515, "body": "Thanks! I thought <code>select</code> would need to cover and yield all branches first, but with <code>select_ok</code> apparently not, and it allows an early return, so that is perfect."}], "answers": [{"comments": [{"owner": {"reputation": 2524, "user_id": 1000145, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ed1f474d23ef1e028ef377c4f638d409?s=128&d=identicon&r=PG", "display_name": "Tim Vis&#233;e", "link": "https://stackoverflow.com/users/1000145/tim-vis%c3%a9e"}, "edited": false, "score": 2, "creation_date": 1570397479, "post_id": 58237332, "comment_id": 102891273, "body": "Thanks a lot for this! I&#39;d like to explicitly note that <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.19/futures/future/trait.FutureExt.html#method.boxed\" rel=\"nofollow noreferrer\"><code>boxed()</code></a> is used to <a href=\"https://doc.rust-lang.org/std/pin/index.html\" rel=\"nofollow noreferrer\"><code>Pin</code></a> the value, as required by <code>select_ok</code>."}], "tags": [], "owner": {"reputation": 7268, "user_id": 28645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5f51a8aed80f7259d7653ff6845257d5?s=128&d=identicon&r=PG", "display_name": "Marcus Griep", "link": "https://stackoverflow.com/users/28645/marcus-griep"}, "is_accepted": true, "score": 5, "last_activity_date": 1570195418, "creation_date": 1570195418, "answer_id": 58237332, "question_id": 58234162, "link": "https://stackoverflow.com/questions/58234162/rust-async-await-check-if-any-future-in-a-list-resolves-to-true-concurrently/58237332#58237332", "title": "Rust async-await: check if any future in a list resolves to true concurrently?", "body": "<p>I think that you should be able to use <code>select_ok</code>, as mentioned by Some Guy. An example, in which I've replaced the files with a bunch of <code>u32</code> for illustration:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::future::FutureExt;\n\nasync fn long_future(file: u32) -&gt; bool {\n    true\n}\n\nasync fn handle_file(file: u32) -&gt; Result&lt;(), ()&gt; {\n    let should_stop = long_future(file).await;\n    // Would be better if there were something more descriptive here\n    if should_stop {\n        Ok(())\n    } else {\n        Err(())\n    }\n}\n\nasync fn tims_answer(files: Vec&lt;u32&gt;) -&gt; bool {\n    let waits = files.into_iter().map(|f| handle_file(f).boxed());\n\n    let any_true = futures::future::select_ok(waits).await.is_ok();\n\n    any_true\n}\n</code></pre>\n"}], "owner": {"reputation": 2524, "user_id": 1000145, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/ed1f474d23ef1e028ef377c4f638d409?s=128&d=identicon&r=PG", "display_name": "Tim Vis&#233;e", "link": "https://stackoverflow.com/users/1000145/tim-vis%c3%a9e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 375, "favorite_count": 1, "accepted_answer_id": 58237332, "answer_count": 1, "score": 2, "last_activity_date": 1570198957, "creation_date": 1570183275, "last_edit_date": 1570189068, "question_id": 58234162, "link": "https://stackoverflow.com/questions/58234162/rust-async-await-check-if-any-future-in-a-list-resolves-to-true-concurrently", "title": "Rust async-await: check if any future in a list resolves to true concurrently?", "body": "<p>I'm trying to run a list of futures concurrently (instead of in sequence) in Rust async-await (being stabilized soon), until any of them resolves to <code>true</code>.</p>\n\n<p>Imagine having a <code>Vec&lt;File&gt;</code>, and a future to run for each file yielding a <code>bool</code> (may be unordered). Here would be a simple sequenced implementation.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>async fn my_function(files: Vec&lt;File&gt;) -&gt; bool {\n    // Run the future on each file, return early if we received true\n    for file in files {\n        if long_future(file).await {\n            return true;\n        }\n    }\n\n    false\n}\n\nasync fn long_future(file: File) -&gt; bool {\n    // Some long-running task here...\n}\n</code></pre>\n\n<p>This works, but I'd like to run a few of these futures concurrently to speed up the process. I came across <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.19/futures/stream/trait.StreamExt.html#method.buffer_unordered\" rel=\"nofollow noreferrer\"><code>buffer_unordered()</code></a> (on <code>Stream</code>), but couldn't figure out how to implement this.</p>\n\n<p>As I understand it, something like <a href=\"https://docs.rs/futures-preview/0.3.0-alpha.19/futures/?search=Join\" rel=\"nofollow noreferrer\"><code>join</code></a> can be used as well to run futures concurrently, given that you gave a multithreaded pool. But I don't see how that could efficiently be used here.</p>\n\n<p>I attempted something like this, but couldn't get it to work:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>let any_true = futures::stream::iter(files)\n    .buffer_unordered(4) // Run up to 4 concurrently\n    .map(|file| long_future(file).await)\n    .filter(|stop| stop) // Only propagate true values\n    .next() // Return early on first true\n    .is_some();\n</code></pre>\n\n<p>Along with that, I'm looking for something like <a href=\"https://doc.rust-lang.org/core/iter/trait.Iterator.html#method.any\" rel=\"nofollow noreferrer\"><code>any</code></a> as used in iterators, to replace the if-statement or the <code>filter().next().is_some()</code> combination.</p>\n\n<p>How would I go about this?</p>\n"}, {"tags": ["json", "rust", "serde"], "answers": [{"tags": [], "owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "is_accepted": true, "score": 3, "last_activity_date": 1570183560, "creation_date": 1570183560, "answer_id": 58234247, "question_id": 58233949, "link": "https://stackoverflow.com/questions/58233949/how-can-i-use-serde-json-on-a-json-object-with-variable-key-names/58234247#58234247", "title": "How can I use serde json on a json object with variable key names", "body": "<p>You can deserialize into a map whose keys will be strings (\"NAME_X\", etc.):</p>\n\n<pre><code>use std::collections::HashMap;\nuse serde::Deserialize;\nuse serde_json::Result;\n\n#[derive(Debug, Deserialize)]\nstruct InThing {\n    prop_one: String,\n    prop_two: String,\n    decimals: u16,\n    more_decimals: i32,\n}\n#[derive(Debug, Deserialize)]\nstruct OutThing {\n    error: Vec&lt;u8&gt;,\n    result: HashMap&lt;String, InThing&gt;,\n}\n\nfn main() {\n    let data = r#\"\n        {\n            \"error\": [],\n            \"result\": {\n                \"NAME_X\": {\n                    \"prop_one\": \"something\",\n                    \"prop_two\": \"something\",\n                    \"decimals\": 1,\n                    \"more_decimals\": 2\n                },\n                \"NAME_A\": {\n                    \"prop_one\": \"test\",\n                    \"prop_two\": \"sdfsdf\",\n                    \"decimals\": 2,\n                    \"more_decimals\": 5\n                },\n                \"ARBITRARY\": {\n                    \"prop_one\": \"something else\",\n                    \"prop_two\": \"blah\",\n                    \"decimals\": 3,\n                    \"more_decimals\": 6\n                }\n            }\n        }\n        \"#;\n    let thing: OutThing = serde_json::from_str(data).unwrap(); \n    dbg!(thing);\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=70211f67ae2faaaf3f3c45b765e7dbf3\" rel=\"nofollow noreferrer\">playground</a></p>\n"}], "owner": {"reputation": 101, "user_id": 12136701, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/131081f19af34584cda29e81ec2b3a8b?s=128&d=identicon&r=PG&f=1", "display_name": "james pearson", "link": "https://stackoverflow.com/users/12136701/james-pearson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 631, "favorite_count": 1, "accepted_answer_id": 58234247, "answer_count": 1, "score": 2, "last_activity_date": 1611155726, "creation_date": 1570182652, "last_edit_date": 1611155726, "question_id": 58233949, "link": "https://stackoverflow.com/questions/58233949/how-can-i-use-serde-json-on-a-json-object-with-variable-key-names", "title": "How can I use serde json on a json object with variable key names", "body": "<p>I am aware of the JSON value which can be used for unknown JSON.</p>\n\n<p>What I have is a mostly structured JSON object like this:</p>\n\n<pre><code>{\n    \"error\": [],\n    \"result\": {\n        \"NAME_X\": {\n            \"prop_one\": \"something\",\n            \"prop_two\": \"something\",\n            \"decimals\": 1,\n            \"more_decimals\": 2\n        },\n        \"NAME_A\": {\n            \"prop_one\": \"test\",\n            \"prop_two\": \"sdfsdf\",\n            \"decimals\": 2,\n            \"more_decimals\": 5\n        },\n        \"ARBITRARY\": {\n            \"prop_one\": \"something else\",\n            \"prop_two\": \"blah\",\n            \"decimals\": 3,\n            \"more_decimals\": 6\n        }\n}\n</code></pre>\n\n<p>So the inside object with fields prop_one, prop_two, decimals and more_decimals has a clear structure, but the outer name field/key (NAME_X, NAME_A, ARBITRARY) is unknown in advance.</p>\n\n<p>What is the most straight forward way to parse this so I can use strongly typed variables/deserialization on the inner structure? I also still need to capture those unknown name fields.</p>\n"}, {"tags": ["c", "rust", "ffi"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 2, "creation_date": 1570176720, "post_id": 58231215, "comment_id": 102838529, "body": "The <code>drop(&amp;mut self.v);</code> creates a reference to <code>v</code> and then drops the reference, doing nothing at all. Drops are called recursively automatically, you do not need to do write anything unless you need to do something special."}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 11363089, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-IAUmQgu4Kck/AAAAAAAAAAI/AAAAAAAAAKc/Vm7Zg5QCgQo/photo.jpg?sz=128", "display_name": "Vasily Olekhov", "link": "https://stackoverflow.com/users/11363089/vasily-olekhov"}, "edited": false, "score": 0, "creation_date": 1570181874, "post_id": 58231789, "comment_id": 102840787, "body": "The design of foreign library is beyond my control. Similar techniques are used in Windows Cryptography NextGeneration subsystem (CNG). Take a look at <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptcreatehash\" rel=\"nofollow noreferrer\">BCryptCreateHash</a> function for example. I need to obtain the object size beforehand by calling <a href=\"https://docs.microsoft.com/en-us/windows/win32/api/bcrypt/nf-bcrypt-bcryptgetproperty\" rel=\"nofollow noreferrer\">BCryptGetProperty</a> function and allocate proper space at my side."}, {"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 2, "creation_date": 1570183238, "post_id": 58231789, "comment_id": 102841529, "body": "I have used <code>Vec&lt;u8&gt;</code> (and <code>std::vector&lt;uint8_t&gt;</code> in C++) as a generic allocation function, and I see no problem with that, particularly while the <code>Alloc</code> trait is unstable."}], "tags": [], "owner": {"reputation": 16936, "user_id": 7076153, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/erPUC.png?s=128&g=1", "display_name": "Stargateur", "link": "https://stackoverflow.com/users/7076153/stargateur"}, "is_accepted": false, "score": 1, "last_activity_date": 1570174158, "creation_date": 1570174158, "answer_id": 58231789, "question_id": 58231215, "link": "https://stackoverflow.com/questions/58231215/what-is-proper-rust-way-to-allocate-opaque-buffer-for-external-c-library/58231789#58231789", "title": "What is proper Rust way to allocate opaque buffer for external C library?", "body": "<blockquote>\n  <p>Is it Ok to use <code>Vec(u8)</code> for this purpose?</p>\n</blockquote>\n\n<p>A vector is not mean to be use like that, even if your code should work this is not a good method.</p>\n\n<p>To do it properly you need an experimental feature (this one is quite stable), you need to use <a href=\"https://doc.rust-lang.org/std/alloc/struct.System.html\" rel=\"nofollow noreferrer\"><code>System</code></a> structure and <a href=\"https://doc.rust-lang.org/std/alloc/trait.Alloc.html\" rel=\"nofollow noreferrer\"><code>Alloc</code></a> trait. Unfortunately, your library doesn't give any alignment requirement for its handle so we must use <code>1</code>.</p>\n\n<p><code>pub type Handle = *mut u8;</code> is incorrect according to your <code>typedef void* handle;</code> (by the way hide pointer is bad). It should be <code>pub type Handle = *mut libc::c_void;</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>#![feature(allocator_api)]\nuse std::alloc::{Alloc, Layout, System};\n\nuse std::ptr::NonNull;\n\npub struct Island {\n    handle: NonNull&lt;u8&gt;,\n    layout: Layout,\n}\n\nimpl Island {\n    pub fn new() -&gt; Island {\n        let size = unsafe { lib_handle_size() };\n        let layout = Layout::from_size_align(size, 1).unwrap();\n        let handle = unsafe { System.alloc(layout).unwrap() };\n        unsafe {\n            // can have error I guess ?\n            lib_init(handle.as_ptr() as Handle);\n        }\n        Self { handle, layout }\n    }\n\n    pub fn store(&amp;mut self, v: i32) -&gt; Result&lt;(), ()&gt; {\n        unsafe {\n            lib_store(self.handle.as_ptr() as Handle, v);\n        }\n        Ok(())\n    }\n\n    pub fn restore(&amp;mut self, v: &amp;mut i32) -&gt; Result&lt;(), ()&gt; {\n        unsafe {\n            lib_restore(self.handle.as_ptr() as Handle, v);\n        }\n        Ok(())\n    }\n}\n\nimpl Drop for Island {\n    fn drop(&amp;mut self) {\n        unsafe { System.dealloc(self.handle, self.layout) }\n    }\n}\n\n/// unsafe part\nuse libc::size_t;\npub type Handle = *mut libc::c_void;\n#[link(name = \"cisland\")]\nextern \"C\" {\n    pub fn lib_handle_size() -&gt; size_t;\n    pub fn lib_init(h: Handle) -&gt; i32;\n    pub fn lib_store(h: Handle, value: i32) -&gt; i32;\n    pub fn lib_restore(h: Handle, pvalue: &amp;mut i32) -&gt; i32;\n}\n</code></pre>\n\n<hr>\n\n<p>I change a little bit your <code>store()</code> and <code>restore()</code> function to return an Result. I bet your C function do the same.</p>\n"}, {"tags": [], "owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "is_accepted": true, "score": 1, "last_activity_date": 1570183593, "last_edit_date": 1570183593, "creation_date": 1570182614, "answer_id": 58233935, "question_id": 58231215, "link": "https://stackoverflow.com/questions/58231215/what-is-proper-rust-way-to-allocate-opaque-buffer-for-external-c-library/58233935#58233935", "title": "What is proper Rust way to allocate opaque buffer for external C library?", "body": "<blockquote>\n  <p>Is it Ok to use Vec(u8) for this purpose?</p>\n</blockquote>\n\n<p>I think <code>Vec&lt;u8&gt;</code> is ok, but you should initialize it rather than using a zero-length vector, pointing at uninitialized memory. It would also be more robust to use <code>Box&lt;[u8]&gt;</code> because that will enforce that it can't be reallocated accidentally. </p>\n\n<blockquote>\n  <p>Is this Drop trait implemented properly?</p>\n</blockquote>\n\n<p>It should not be necessary to implement <code>Drop</code> at all. The fields of <code>Island</code> each will drop correctly anyway.</p>\n\n<p>Rather than store the handle, I would get it each time using a method. Then your struct is much simpler.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use libc::c_void;\n\npub struct Island {\n    buf: Box&lt;[u8]&gt;,\n}\n\nimpl Island {\n    pub fn new() -&gt; Island {\n        let len = unsafe { lib_handle_size() };\n        let v: Vec&lt;u8&gt; = vec![0; len];\n        Island { buf: v.into_boxed_slice() }\n    }\n\n    pub fn store(&amp;mut self, v: i32) {\n        unsafe { lib_store(self.handle_mut(), v); }\n    }\n\n    pub fn restore(&amp;mut self) -&gt; i32 {\n        let mut v = 0;\n        unsafe { lib_restore(self.handle_mut(), &amp;mut v); }\n        v\n    }\n\n    fn handle_mut(&amp;mut self) -&gt; *mut c_void {\n        self.buf.as_mut_ptr() as *mut c_void\n    }\n}\n</code></pre>\n\n<p>You don't need a <code>Drop</code> implementation because the <code>Box</code> will drop automatically when it goes out of scope (as would a <code>Vec</code>).</p>\n"}], "owner": {"reputation": 71, "user_id": 11363089, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-IAUmQgu4Kck/AAAAAAAAAAI/AAAAAAAAAKc/Vm7Zg5QCgQo/photo.jpg?sz=128", "display_name": "Vasily Olekhov", "link": "https://stackoverflow.com/users/11363089/vasily-olekhov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 593, "favorite_count": 0, "accepted_answer_id": 58233935, "answer_count": 2, "score": 3, "last_activity_date": 1570191677, "creation_date": 1570171590, "last_edit_date": 1570191677, "question_id": 58231215, "link": "https://stackoverflow.com/questions/58231215/what-is-proper-rust-way-to-allocate-opaque-buffer-for-external-c-library", "title": "What is proper Rust way to allocate opaque buffer for external C library?", "body": "<p>I have an external library (e.g. libcisland.so) with interface like this:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>size_t lib_handle_size();\ntypedef void* handle;\nint lib_init(handle h);\nint lib_store(handle h, int value);\nint lib_restore(handle h, int *pvalue);\n</code></pre>\n\n<p>The user of this library is expected to do following:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>// allocate some buffer in client address space\nhandle h = malloc(lib_handle_size());\n// pass this buffer to library for initialization\nif (lib_init(h)) { /* handle errors */ }\n// library initializes this handle by some opaque fashion\n// then user uses it\nlib_store(h,42);\nint r;\nlib_restore(h,&amp;r);\n// after all work is done, user frees this handle\nfree(h);\n</code></pre>\n\n<p>I can't figure out how to properly wrap this interface to Rust.\nThis is what I ended up:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub struct Island {\n    h: Handle,\n    v: Vec&lt;u8&gt;,\n}\n\nimpl Island {\n    pub fn new() -&gt; Island {\n        let len = unsafe { lib_handle_size() };\n        let mut v: Vec&lt;u8&gt; = Vec::with_capacity(len);\n        let h: Handle = v.as_mut_ptr();\n        Island { v:v, h:h, }\n    }\n\n    pub fn store(&amp;mut self, v: i32) {\n        unsafe { lib_store(self.h, v); }\n    }\n\n    pub fn restore(&amp;mut self) -&gt; i32 {\n        let mut v = 0;\n        unsafe { lib_restore(self.h, &amp;mut v); }\n        v\n    }\n}\n\nimpl Drop for Island {\n    fn drop(&amp;mut self) {\n        drop(&amp;mut self.v);\n    }\n}\n\n/// unsafe part\nuse libc::size_t;\npub type Handle = *mut u8;\n#[link(name=\"cisland\")]\nextern {\n    pub fn lib_handle_size() -&gt; size_t;\n    pub fn lib_init(h: Handle) -&gt; i32;\n    pub fn lib_store(h: Handle, value: i32) -&gt; i32;\n    pub fn lib_restore(h: Handle, pvalue: &amp;mut i32) -&gt; i32;\n}\n</code></pre>\n\n<p>Is it Ok to use <code>Vec(u8)</code> for this purpose? Is this <code>Drop</code> trait implemented properly?</p>\n"}, {"tags": ["rust"], "comments": [{"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 0, "creation_date": 1570145650, "post_id": 58227120, "comment_id": 102831016, "body": "when I place the content of the functions in the <code>main()</code> this error disappears, so probably it is some threading issue."}, {"owner": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1570170251, "post_id": 58227120, "comment_id": 102835889, "body": "If you don&#39;t want to use futures, why do you use <code>futures::sync::mpsc</code> instead of <a href=\"https://doc.rust-lang.org/stable/std/sync/mpsc/index.html\" rel=\"nofollow noreferrer\"><code>std::sync::mpsc</code></a>?"}, {"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "reply_to_user": {"reputation": 8877, "user_id": 5397009, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7405bb106a62e8a3ea2d6d787b7261ee?s=128&d=identicon&r=PG&f=1", "display_name": "Jmb", "link": "https://stackoverflow.com/users/5397009/jmb"}, "edited": false, "score": 0, "creation_date": 1570211009, "post_id": 58227120, "comment_id": 102854353, "body": "@Jmb it was the requirement of the User to use <code>futures::sync::mpsc</code>, since the project I am working with is more complex than this minimal example"}], "answers": [{"comments": [{"owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "edited": false, "score": 0, "creation_date": 1570210903, "post_id": 58231176, "comment_id": 102854313, "body": "thanks! this actually was the key to fixing my problem:  <code>task.wait_stream()</code> , because I tested it without <code>join()</code> and it works too. thanks a lot"}], "tags": [], "owner": {"reputation": 9280, "user_id": 794457, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2d564695b517c0a1080a887633a40b1e?s=128&d=identicon&r=PG", "display_name": "edwardw", "link": "https://stackoverflow.com/users/794457/edwardw"}, "is_accepted": true, "score": 2, "last_activity_date": 1570175853, "last_edit_date": 1570175853, "creation_date": 1570171384, "answer_id": 58231176, "question_id": 58227120, "link": "https://stackoverflow.com/questions/58227120/no-task-is-currently-running/58231176#58231176", "title": "no Task is currently running", "body": "<blockquote>\n  <p>but without using the Future object, is this possible?</p>\n</blockquote>\n\n<p>It is possible to use <code>UnboundedSender</code> and <code>UnboundedSender</code> with minimum interaction with futures crate, but you have to use futures with tasks. This is not entirely your fault though; the futures documentation and API design aren't very clear about this. In its <code>0.2</code> incarnation, there will be a <a href=\"https://github.com/rust-lang-nursery/futures-rfcs/blob/master/task-context.md\" rel=\"nofollow noreferrer\">task context</a> explicitly threaded through various API calls. For example, <a href=\"https://docs.rs/futures/0.1.29/futures/stream/trait.Stream.html#tymethod.poll\" rel=\"nofollow noreferrer\"><code>Stream::poll</code></a> in <code>0.1.x</code> is defined as:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn poll(&amp;mut self) -&gt; Poll&lt;Option&lt;Self::Item&gt;, Self::Error&gt;\n</code></pre>\n\n<p>In <code>0.2.x</code>, it is <a href=\"https://docs.rs/futures/0.2.1/futures/trait.Stream.html#tymethod.poll_next\" rel=\"nofollow noreferrer\"><code>Stream::poll_next</code></a>:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn poll_next(\n    &amp;mut self, \n    cx: &amp;mut Context\n) -&gt; Result&lt;Async&lt;Option&lt;Self::Item&gt;&gt;, Self::Error&gt;\n</code></pre>\n\n<p>So you won't be able to make the same mistake of polling outside of a task.</p>\n\n<p>Until then this works with <code>0.1.x</code> futures crate:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use futures::sync::mpsc::{UnboundedReceiver, UnboundedSender};\nuse std::thread::{self, JoinHandle};\n\nfn launch_sender_thread(tx: UnboundedSender&lt;()&gt;) -&gt; JoinHandle&lt;()&gt; {\n    thread::Builder::new()\n        .name(\"sender thread\".to_string())\n        .spawn(move || loop {\n            let _ = tx.unbounded_send(());\n        })\n        .unwrap()\n}\n\nfn launch_receiver_thread(rx: UnboundedReceiver&lt;()&gt;) -&gt; JoinHandle&lt;()&gt; {\n    thread::Builder::new()\n        .name(\"receiver thread\".to_string())\n        .spawn(move || {\n            let mut task = futures::executor::spawn(rx);\n            match task.wait_stream() {\n                Some(Ok(_)) =&gt; println!(\"thread2: received data\"),\n                Some(Err(e)) =&gt; println!(\"poll err {:?}\", e),\n                None =&gt; (),\n            }\n        })\n        .unwrap()\n}\n\nfn main() {\n    let (sender, receiver) = futures::sync::mpsc::unbounded::&lt;()&gt;();\n    let recv = launch_receiver_thread(receiver);\n    let send = launch_sender_thread(sender);\n\n    println!(\"Press Ctrl-C to abort\");\n    recv.join().unwrap();\n    send.join().unwrap();\n}\n</code></pre>\n\n<p>Notice, you can drive <code>tx</code> with task as well. It is just simpler to call <code>unbounded_send</code> here.</p>\n"}], "owner": {"reputation": 4733, "user_id": 922445, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a469120d35647d9aa50646cb4d778c71?s=128&d=identicon&r=PG&f=1", "display_name": "Nulik", "link": "https://stackoverflow.com/users/922445/nulik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "accepted_answer_id": 58231176, "answer_count": 1, "score": 1, "last_activity_date": 1570175853, "creation_date": 1570138103, "question_id": 58227120, "link": "https://stackoverflow.com/questions/58227120/no-task-is-currently-running", "title": "no Task is currently running", "body": "<p>I am getting an error: <code>no Task is currently running</code> when I attempt to use <code>UnboundedSender</code> and <code>UnboundedReceiver</code> without using <code>tokio::run()</code>.</p>\n\n<p>This is the error:</p>\n\n<pre><code>Press Ctrl-C to abort\nthread 'receiver thread' panicked at 'no Task is currently running', src/libcore/option.rs:1166:5\nstack backtrace:\n   0: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88\n   1: backtrace::backtrace::trace_unsynchronized\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66\n   2: std::sys_common::backtrace::_print\n             at src/libstd/sys_common/backtrace.rs:47\n   3: std::sys_common::backtrace::print\n             at src/libstd/sys_common/backtrace.rs:36\n   4: std::panicking::default_hook::{{closure}}\n             at src/libstd/panicking.rs:200\n   5: std::panicking::default_hook\n             at src/libstd/panicking.rs:214\n   6: std::panicking::rust_panic_with_hook\n             at src/libstd/panicking.rs:477\n   7: std::panicking::continue_panic_fmt\n             at src/libstd/panicking.rs:384\n   8: rust_begin_unwind\n             at src/libstd/panicking.rs:311\n   9: core::panicking::panic_fmt\n             at src/libcore/panicking.rs:85\n  10: core::option::expect_failed\n             at src/libcore/option.rs:1166\n  11: core::option::Option&lt;T&gt;::expect\n             at /rustc/dddb7fca09dc817ba275602b950bb81a9032fb6d/src/libcore/option.rs:345\n  12: futures::task_impl::with\n             at /home/nickhash/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs:46\n  13: futures::task_impl::current\n             at /home/nickhash/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/task_impl/mod.rs:118\n  14: futures::sync::mpsc::Receiver&lt;T&gt;::try_park\n             at /home/nickhash/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs:902\n  15: &lt;futures::sync::mpsc::Receiver&lt;T&gt; as futures::stream::Stream&gt;::poll\n             at /home/nickhash/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs:936\n  16: &lt;futures::sync::mpsc::UnboundedReceiver&lt;T&gt; as futures::stream::Stream&gt;::poll\n             at /home/nickhash/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-0.1.29/src/sync/mpsc/mod.rs:1004\n  17: fut2::launch_receiver_thread::{{closure}}\n             at src/main.rs:16\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\n^C\n</code></pre>\n\n<p>The code I am running is:</p>\n\n<pre><code>use std:: {thread,time::Duration};\nuse futures::stream::*;\nuse futures::prelude::*;\n\n\nfn launch_sender_thread(tx: futures::sync::mpsc::UnboundedSender&lt;()&gt;) {\n    let _ = thread::Builder::new().name(\"sender thread\".to_string()).spawn(move || {\n        loop {\n            tx.clone().send(());\n            thread::sleep(Duration::from_millis(3000));\n        }   \n    });\n}\nfn launch_receiver_thread(mut rx: futures::sync::mpsc::UnboundedReceiver&lt;()&gt;) {\n    let _ = thread::Builder::new().name(\"receiver thread\".to_string()).spawn(move || {\n        match rx.poll() {\n            Ok(Async::Ready(Some(_))) =&gt; {\n                println!(\"thread2: received data\");\n            },  \n            Ok(_) =&gt; (), \n            Err(err) =&gt; {\n                println!(\"poll err {:?}\",err);\n            },\n        } \n        thread::sleep(Duration::from_millis(1000));\n    });\n}\n\nfn main() {\n\n    let (sender, receiver) = futures::sync::mpsc::unbounded::&lt;()&gt;();\n    launch_receiver_thread(receiver);\n    launch_sender_thread(sender);\n    println!(\"Press Ctrl-C to abort\");\n    thread::sleep(Duration::from_millis(10000000));        \n}\n</code></pre>\n\n<p>So, basically I want to send and receive data from one thread to another , but without using the <code>Future</code> object, is this possible?\nIf it is not possible, then how do I fix this error with a minimal use of Futures crate ? The requirement is to use <code>futures::sync::mpsc::UnboundedSender</code> and <code>futures::sync::mpsc::UnboundedSender</code> for communication.</p>\n\n<p><strong>Cargo.toml:</strong></p>\n\n<pre><code>[package]\nname = \"fut2\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\nfutures = { version = \"0.1\" }\n</code></pre>\n"}, {"tags": ["rust", "rustup"], "comments": [{"owner": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1570135468, "post_id": 58226545, "comment_id": 102828311, "body": "AFAIK, there is no &quot;current&quot; toolchain unless you set environment variables. You&#39;re either running it like <code>cargo +nightly clippy</code> or you&#39;re using the default toolchain."}, {"owner": {"reputation": 2659, "user_id": 8050514, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/6CRdl.jpg?s=128&g=1", "display_name": "Optimistic Peach", "link": "https://stackoverflow.com/users/8050514/optimistic-peach"}, "reply_to_user": {"reputation": 6137, "user_id": 847382, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b73e2fff665c33621c8a4347cf8074be?s=128&d=identicon&r=PG", "display_name": "PitaJ", "link": "https://stackoverflow.com/users/847382/pitaj"}, "edited": false, "score": 0, "creation_date": 1570154544, "post_id": 58226545, "comment_id": 102832659, "body": "@PitaJ, running <code>rustup default</code> will tell you the default toolchain cargo will use by default unless specified otherwise in a <code>.toml</code> config file."}], "answers": [{"comments": [{"owner": {"reputation": 334, "user_id": 7438857, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/88ff6da63e6f47c7326bc9d4dc081f08?s=128&d=identicon&r=PG", "display_name": "James Ray", "link": "https://stackoverflow.com/users/7438857/james-ray"}, "edited": false, "score": 0, "creation_date": 1574999522, "post_id": 58228429, "comment_id": 104430155, "body": "What if I just want to use switch toolchains temporarily, e.g. also to use <code>cargo clippy</code>, when my default toolchain is nightly?"}, {"owner": {"reputation": 334, "user_id": 7438857, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/88ff6da63e6f47c7326bc9d4dc081f08?s=128&d=identicon&r=PG", "display_name": "James Ray", "link": "https://stackoverflow.com/users/7438857/james-ray"}, "edited": false, "score": 2, "creation_date": 1575000061, "post_id": 58228429, "comment_id": 104430239, "body": "I found the answer: <a href=\"https://github.com/rust-lang/rustup#toolchain-override-shorthand\" rel=\"nofollow noreferrer\">github.com/rust-lang/rustup#toolchain-override-shorthand</a>. In the above scenario, I can do <code>cargo +stable clippy</code>"}], "tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 29, "last_activity_date": 1614867678, "last_edit_date": 1614867678, "creation_date": 1570148979, "answer_id": 58228429, "question_id": 58226545, "link": "https://stackoverflow.com/questions/58226545/how-to-switch-between-rust-toolchains/58228429#58228429", "title": "How to switch between Rust toolchains?", "body": "<p>Use <code>rustup default &lt;toolchain&gt;</code> to change the default toolchain. You can use the full name (e.g. <code>rustup default stable-x86_64-unknown-linux-gnu</code>) or a short alias (e.g. <code>rustup default stable</code>).</p>\n<p>rustup also has methods to override the default in a more scoped manner. See <a href=\"https://rust-lang.github.io/rustup/overrides.html\" rel=\"noreferrer\">Overrides</a> in the rustup book.</p>\n"}, {"comments": [{"owner": {"reputation": 1178, "user_id": 13222231, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DUes1tKw9SU/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdygcOE5KDOWltaZop9_XhEyGebEw/photo.jpg?sz=128", "display_name": "Dylan Kerler", "link": "https://stackoverflow.com/users/13222231/dylan-kerler"}, "edited": false, "score": 1, "creation_date": 1606832370, "post_id": 64701936, "comment_id": 115077122, "body": "This seems like the more conventional/robust approach so upvoted."}], "tags": [], "owner": {"reputation": 5450, "user_id": 942317, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/SY5ID.jpg?s=128&g=1", "display_name": "STEEL", "link": "https://stackoverflow.com/users/942317/steel"}, "is_accepted": false, "score": 29, "last_activity_date": 1606833346, "last_edit_date": 1606833346, "creation_date": 1604595954, "answer_id": 64701936, "question_id": 58226545, "link": "https://stackoverflow.com/questions/58226545/how-to-switch-between-rust-toolchains/64701936#64701936", "title": "How to switch between Rust toolchains?", "body": "<p>The <code>rustup default stable</code> command works well, but the easiest way is to keep a <code>rust-toolchain</code> file inside your project root folder. This is similar to a <code>.nvm</code> file for a NodeJS project.</p>\n<p><strong>rust-toolchain</strong></p>\n<pre class=\"lang-none prettyprint-override\"><code>nightly\n</code></pre>\n<p>or</p>\n<pre class=\"lang-none prettyprint-override\"><code>stable\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/ILBZy.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/ILBZy.png\" alt=\"rust-toolchain\" /></a></p>\n"}, {"tags": [], "owner": {"reputation": 308, "user_id": 8500995, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63fd26c8a62ca90822fc7255f8150c18?s=128&d=identicon&r=PG&f=1", "display_name": "Rob123", "link": "https://stackoverflow.com/users/8500995/rob123"}, "is_accepted": false, "score": 10, "last_activity_date": 1610208855, "creation_date": 1610208855, "answer_id": 65644807, "question_id": 58226545, "link": "https://stackoverflow.com/questions/58226545/how-to-switch-between-rust-toolchains/65644807#65644807", "title": "How to switch between Rust toolchains?", "body": "<p>To toggle between nightly and stable configurations in your repo use:</p>\n<pre><code>rustup override set nightly\n</code></pre>\n<p>or:</p>\n<pre><code>rustup override set stable\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 194, "user_id": 5117267, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-DuPCalHKSxE/AAAAAAAAAAI/AAAAAAAAAF8/Rce625Gl_GA/photo.jpg?sz=128", "display_name": "Haris Muzaffar", "link": "https://stackoverflow.com/users/5117267/haris-muzaffar"}, "is_accepted": false, "score": 3, "last_activity_date": 1614455205, "creation_date": 1614455205, "answer_id": 66402865, "question_id": 58226545, "link": "https://stackoverflow.com/questions/58226545/how-to-switch-between-rust-toolchains/66402865#66402865", "title": "How to switch between Rust toolchains?", "body": "<p><code>rustup default stable</code> should work. This will set <code>stable</code> as the default toolchain globally.</p>\n<p>To set <code>stable</code> as the default toolchain for just one directory/ project, use <code>rustup override set stable</code> command instead. To unset it, use <code>rustup override unset</code>.</p>\n"}], "owner": {"reputation": 659, "user_id": 6845084, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/253b377ee6c971f363de927136d30117?s=128&d=identicon&r=PG", "display_name": "Palash Nigam", "link": "https://stackoverflow.com/users/6845084/palash-nigam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11045, "favorite_count": 2, "accepted_answer_id": 58228429, "answer_count": 4, "score": 25, "last_activity_date": 1614867678, "creation_date": 1570135003, "last_edit_date": 1592355633, "question_id": 58226545, "link": "https://stackoverflow.com/questions/58226545/how-to-switch-between-rust-toolchains", "title": "How to switch between Rust toolchains?", "body": "<p><code>rustup help toolchain</code> lists the following sub-commands</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>SUBCOMMANDS:\n    list         List installed toolchains\n    install      Install or update a given toolchain\n    uninstall    Uninstall a toolchain\n    link         Create a custom toolchain by symlinking to a directory\n    help         Prints this message or the help of the given subcommand(s)\n</code></pre>\n\n<p>I have the following toolchains installed</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>stable-x86_64-unknown-linux-gnu (default)\nnightly-2019-09-05-x86_64-unknown-linux-gnu\nnightly-x86_64-unknown-linux-gnu\nmaster\n</code></pre>\n\n<p>I was trying to solve an issue for rust-clippy so I had to install the master toolchain. Even though stable is set as my default toolchain, my current toolchain is master and I would like to switch back to stable. How do I do it without uninstalling the master toolchain?</p>\n\n<p>Is there no switch subcommand?</p>\n"}, {"tags": ["rust", "closures"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570128475, "post_id": 58224969, "comment_id": 102825497, "body": "<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=b2e89f005b77db0ee081ff3f1a98f099\" rel=\"nofollow noreferrer\">The clone is irrelevant to the error.</a> I&#39;m unclear on what you&#39;re trying to achieve, and why you have <code>F: Sized</code> in <code>WithCall</code> -- <code>Sized</code> is the default, you only need to name it to opt out. What are you trying to do?"}, {"owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570128714, "post_id": 58224969, "comment_id": 102825590, "body": "Ah, I appreciate the simplified example. So I really must be missing something simple between say <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=90d137a201e945a1267eb7750e8c1d93\" rel=\"nofollow noreferrer\">this example</a> using <code>Box</code> to get around the closure error and what I&#39;m doing..."}, {"owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570129116, "post_id": 58224969, "comment_id": 102825744, "body": "To clarify the intent here, mutable closures are created elsewhere in my application. Those then need to be shared with another thread which invokes them."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570129475, "post_id": 58224969, "comment_id": 102825873, "body": "The difference that first leaps out at me is that that example is using <code>Box&lt;dyn Fn()&gt;</code> (for which <code>Box&lt;Fn()&gt;</code> is a deprecated alias) inside the struct <code>B</code> while your <code>WithCall</code> is generic over <code>F</code>. Generics are resolved at compile time; <code>dyn</code> is resolved at runtime. If you want to use <code>first_fn</code> and <code>second_fn</code> interchangeably, you need <code>dyn</code>, which probably requires some extra work. If you just want to put them both in the struct, you can <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=562b55314a9fcb7e2da5fb4d6cf3cc0c\" rel=\"nofollow noreferrer\">give it an extra type parameter</a>."}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570129685, "post_id": 58224969, "comment_id": 102825967, "body": "Is <code>dyn</code>amic dispatch required for your problem, or does that answer the question?"}, {"owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "reply_to_user": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570130775, "post_id": 58224969, "comment_id": 102826403, "body": "Using extra type parameters works pretty well! I think that&#39;ll do it. Is that an anti-pattern?"}, {"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 1, "creation_date": 1570131056, "post_id": 58224969, "comment_id": 102826513, "body": "Not an antipattern. It might get a bit out of hand if you have 10 different closure types but 2 or 3 is normal. I&#39;ll write up an answer."}], "answers": [{"tags": [], "owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "is_accepted": true, "score": 1, "last_activity_date": 1570131616, "creation_date": 1570131616, "answer_id": 58225861, "question_id": 58224969, "link": "https://stackoverflow.com/questions/58224969/rust-cloned-closures-expected-closure-found-different-closure/58225861#58225861", "title": "Rust cloned closures expected closure, found different closure", "body": "<p>The error message in <a href=\"https://stackoverflow.com/questions/39083375/expected-closure-found-a-different-closure\">Expected closure, found a different closure</a> happens because <code>Vec&lt;T&gt;</code> can only hold closures of one concrete type <code>T</code>. In your case, it looks easier to add a second type parameter <code>U</code>, so that you can hold two different closures of different types:</p>\n\n<pre><code>struct HasWithCall&lt;T, U&gt;\nwhere\n    T: SafeFnMut,\n    U: SafeFnMut,\n{\n    pub first_fn: Option&lt;Box&lt;WithCall&lt;T&gt;&gt;&gt;,\n    pub second_fn: Option&lt;Box&lt;WithCall&lt;U&gt;&gt;&gt;,\n}\n</code></pre>\n\n<p>(<a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=4bd86e323a03aedcd85228569956a4f7\" rel=\"nofollow noreferrer\">full example</a>)</p>\n\n<p>As a side note, the extra <code>Box</code> seems unnecessary to me; it's probably sufficient to use <code>Option&lt;WithCall&lt;T&gt;&gt;</code> since there is a <code>Box</code> inside <code>WithCall</code>.</p>\n"}], "owner": {"reputation": 4330, "user_id": 3599414, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/ZFtWq.jpg?s=128&g=1", "display_name": "garrettmaring", "link": "https://stackoverflow.com/users/3599414/garrettmaring"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 155, "favorite_count": 0, "accepted_answer_id": 58225861, "answer_count": 1, "score": 0, "last_activity_date": 1570170400, "creation_date": 1570127343, "last_edit_date": 1570170400, "question_id": 58224969, "link": "https://stackoverflow.com/questions/58224969/rust-cloned-closures-expected-closure-found-different-closure", "title": "Rust cloned closures expected closure, found different closure", "body": "<p>I'm trying to pass multiple closures to a struct and store them as boxed trait objects. These closures are wrapped in a thread-safe (Send, Sync) and clone-able (Clone) struct.</p>\n\n<pre><code>use std::thread;\n\n// make trait alias\ntrait SafeFnMut: FnMut() + Send + Sync {}\nimpl&lt;F&gt; SafeFnMut for F where F: FnMut() + Send + Sync {}\n\n#[derive(Clone, Debug)]\nstruct WithCall&lt;F&gt; where F: Sized {\n    fp: Box&lt;F&gt;,\n}\n\nimpl&lt;F&gt; WithCall&lt;F&gt; where F: SafeFnMut {\n    // boxing the closure here\n    pub fn new(fp: F) -&gt; Self {\n        WithCall { fp: Box::new(fp) }\n    }\n\n    pub fn run(&amp;mut self) {\n        (self.fp)()\n    }\n}\n\nstruct HasWithCall&lt;T&gt; where T: SafeFnMut {\n    pub first_fn: Option&lt;Box&lt;WithCall&lt;T&gt;&gt;&gt;,\n    pub second_fn: Option&lt;Box&lt;WithCall&lt;T&gt;&gt;&gt;,\n}\n\nfn main() {\n    let mut first_fn = WithCall::new(|| {\n        println!(\"Called!\")\n    });\n\n    let mut second_fn = WithCall::new(|| {\n        println!(\"Called other!\")\n    });\n\n    let has_with_call = HasWithCall {\n        first_fn: Some(Box::new(first_fn.clone())),\n        second_fn: Some(Box::new(second_fn.clone()))\n    };\n\n    println!(\"{:?}\", first_fn.run());\n\n    let mut first_fn_a = first_fn.clone();\n    let mut first_fn_b = first_fn;\n\n    let a = thread::spawn(move || {\n        println!(\"In remote thread: {:?}\", first_fn_a.run());\n    });\n\n    let b = thread::spawn(move || {\n        println!(\"In remote thread: {:?}\", first_fn_b.run());\n    });\n\n    a.join().expect(\"Thread A panicked\");\n    b.join().expect(\"Thread B panicked\");\n}\n</code></pre>\n\n<p>This code gives me the following error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0308]: mismatched types   --&gt; src/main.rs:39:34\nsecond_fn: Some(Box::new(second_fn.clone()))                   \n                         ^^^^^^^^^^^^^^^^^ expected closure, found a different closure\n\nnote: expected type `WithCall&lt;[closure@src/main.rs:29:38: 31:6]&gt;`\n              found type `WithCall&lt;[closure@src/main.rs:33:39: 35:6]&gt;`\n\nnote: no two closures, even if identical, have the same type\n\nhelp: consider boxing your closure and/or using it as a trait object\n</code></pre>\n\n<p>I've referenced <a href=\"https://stackoverflow.com/questions/27883509/can-you-clone-a-closure\">this question</a> for the thread-safe closures and <a href=\"https://stackoverflow.com/questions/39083375/expected-closure-found-a-different-closure\">this question</a> for the closure type error.</p>\n\n<p>I see that there are other options like a reference to a trait object or a function pointer. However, I'd like to solve this using a boxed trait object as I've written above.</p>\n"}, {"tags": ["pagination", "rust", "range", "b-tree"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 0, "creation_date": 1570198715, "post_id": 58224806, "comment_id": 102849078, "body": "You can usually use the <code>..</code> family of operators to avoid writing <code>Excluded</code> and <code>Included</code>. I find this easier to read. For example, <code>(Excluded((1, 1)), Included((1, 4)))</code> could be replaced with <code>(1, 1)..=(1, 4)</code> which returns an object of type <code>RangeInclusive&lt;(i32, i32)&gt;</code>."}], "answers": [{"tags": [], "owner": {"reputation": 46065, "user_id": 234590, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/463c0219a51a5d1fd08e1fa280811b57?s=128&d=identicon&r=PG", "display_name": "Francis Gagn&#233;", "link": "https://stackoverflow.com/users/234590/francis-gagn%c3%a9"}, "is_accepted": true, "score": 2, "last_activity_date": 1570150159, "creation_date": 1570150159, "answer_id": 58228550, "question_id": 58224806, "link": "https://stackoverflow.com/questions/58224806/rust-btreemap-equalityinequality-range-query/58228550#58228550", "title": "Rust: BTreeMap equality+inequality range query", "body": "<p>If the first field of your tuple is an integer type, then you can use an exclusive bound on the next integer value, paired with an empty <code>CStr</code>. (I'm assuming that <code>&lt;&amp;CStr&gt;::default()</code> is the \"smallest\" value in <code>&amp;CStr</code>'s total order.)</p>\n\n<pre><code>let range = my_btree_map.range((Excluded((1, some_cstr)), Excluded((2, &lt;&amp;CStr&gt;::default()))));\n</code></pre>\n\n<p>If the first field is of a type for which it is difficult or impossible to obtain the \"next greater value\", then a combination of <code>range</code> and <code>take_while</code> will give the correct results, though with a little overhead.</p>\n\n<pre><code>let range = my_btree_map\n    .range((Excluded((1, some_cstr)), Unbounded))\n    .take_while(|&amp;((i, _), _)| *i == 1);\n</code></pre>\n"}], "owner": {"reputation": 1260, "user_id": 3893901, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/1936c40432997826b9c180e11d010106?s=128&d=identicon&r=PG&f=1", "display_name": "jonathanGB", "link": "https://stackoverflow.com/users/3893901/jonathangb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 58228550, "answer_count": 1, "score": 1, "last_activity_date": 1570150159, "creation_date": 1570126673, "question_id": 58224806, "link": "https://stackoverflow.com/questions/58224806/rust-btreemap-equalityinequality-range-query", "title": "Rust: BTreeMap equality+inequality range query", "body": "<p>I want to call <code>range</code> on a BTreeMap, where the keys are tuples like <code>(a,b)</code>. Say we have:</p>\n\n<ul>\n<li><code>(1, 2) =&gt; \"a\"</code></li>\n<li><code>(1, 3) =&gt; \"b\"</code></li>\n<li><code>(1, 4) =&gt; \"c\"</code></li>\n<li><code>(2, 1) =&gt; \"d\"</code></li>\n<li><code>(2, 2) =&gt; \"e\"</code></li>\n<li><code>(2, 3) =&gt; \"f\"</code></li>\n</ul>\n\n<p>The particularity is that I want all the entries that have a specific value for the first field, but a range on the second field, i.e. I want all entries where <code>a = 1 AND 1 &lt; b &lt;= 4</code>. The <code>RangeBounds</code> operator in that case is not too complicated, it would be <code>(Excluded((1, 1)), Included((1, 4)))</code>. If I have an unbounded range, say <code>a = 1 AND b &gt; 3</code>, we would have the following <code>RangeBounds</code>: <code>(Excluded((1, 3)), Included((1, i64::max_value())))</code>. </p>\n\n<p>The problem arises when the type inside of the tuple does not have a maximum value, for instance a string (<code>CStr</code> specifically). Is there a way to solve that problem? It would be useful to be able to use <code>Unbounded</code> inside of the tuple, but I don't think it's right. The less interesting solution would be to have multiple layers of datastructures (for instance a hashmap for the first field, where keys map to... a BTreeMap). Any thoughts? </p>\n"}, {"tags": ["rust", "rust-cargo"], "comments": [{"owner": {"reputation": 17608, "user_id": 3650362, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Fqdi1.jpg?s=128&g=1", "display_name": "trentcl", "link": "https://stackoverflow.com/users/3650362/trentcl"}, "edited": false, "score": 2, "creation_date": 1570116270, "post_id": 58221443, "comment_id": 102820090, "body": "It looks like you (or your IDE) incorrectly ran <code>rustc Cargo.toml</code> instead of <code>cargo run</code> or whatever. (<code>expected item, found ...</code> is a rustc error.)"}], "answers": [{"comments": [{"owner": {"reputation": 26154, "user_id": 5436257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/iGuaK.jpg?s=128&g=1", "display_name": "Joe Clay", "link": "https://stackoverflow.com/users/5436257/joe-clay"}, "edited": false, "score": 0, "creation_date": 1570118411, "post_id": 58221655, "comment_id": 102821197, "body": "A <code>[[bin]]</code> section isn&#39;t required if you have a <code>src&#47;main.rs</code> file - Cargo will pick that up automatically."}], "tags": [], "owner": {"reputation": 6272, "user_id": 127508, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/ptOi1.jpg?s=128&g=1", "display_name": "Istvan", "link": "https://stackoverflow.com/users/127508/istvan"}, "is_accepted": false, "score": 1, "last_activity_date": 1570114155, "creation_date": 1570114155, "answer_id": 58221655, "question_id": 58221443, "link": "https://stackoverflow.com/questions/58221443/rust-cargo-toml-error-expected-item-found-when-trying-to-include-nalgebr/58221655#58221655", "title": "Rust: Cargo.toml error: expected item, found `[`, when trying to include nalgebra", "body": "<p>I think there are multiple issues with your Cargo.toml</p>\n\n<p>This is not allowed:</p>\n\n<pre><code>name = \"my package\"\n</code></pre>\n\n<p>Suggestion: </p>\n\n<pre><code>name = \"my-package\"\n</code></pre>\n\n<p>There is also missing parts:</p>\n\n<pre><code>error during execution of `cargo metadata`: error: failed to parse manifest at `test/Cargo.toml`\n\nCaused by:\n  no targets specified in the manifest\n  either src/lib.rs, src/main.rs, a [lib] section, or [[bin]] section must be present\n</code></pre>\n\n<p>Could you post the entire file here?</p>\n\n<p>A minimum viable setup:</p>\n\n<pre><code>[package]\nname = \"my-package\"\nversion = \"0.1.0\"\nauthors = [\"me\"]\nedition = \"2018\"\n\n[[bin]]\nname = \"radkilla\"\npath = \"src/main.rs\"\ndoc = false\n\n[dependencies]\nnalgebra = \"0.18.1\"\n</code></pre>\n\n<p>src/main.rs</p>\n\n<pre><code>fn main() {}\n</code></pre>\n\n<p>Running fmt and build:</p>\n\n<pre><code>\u279c  test cargo fmt ; cargo build\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11s\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 667, "user_id": 8448348, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/855c234f7351c596287c174e0a08cc22?s=128&d=identicon&r=PG&f=1", "display_name": "HelloWorld", "link": "https://stackoverflow.com/users/8448348/helloworld"}, "is_accepted": true, "score": 0, "last_activity_date": 1570114541, "creation_date": 1570114541, "answer_id": 58221766, "question_id": 58221443, "link": "https://stackoverflow.com/questions/58221443/rust-cargo-toml-error-expected-item-found-when-trying-to-include-nalgebr/58221766#58221766", "title": "Rust: Cargo.toml error: expected item, found `[`, when trying to include nalgebra", "body": "<p>The error disappeared after closing the cargo.toml file which was opened on the visual studio.</p>\n"}], "owner": {"reputation": 667, "user_id": 8448348, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/855c234f7351c596287c174e0a08cc22?s=128&d=identicon&r=PG&f=1", "display_name": "HelloWorld", "link": "https://stackoverflow.com/users/8448348/helloworld"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 307, "favorite_count": 0, "accepted_answer_id": 58221766, "answer_count": 2, "score": 0, "last_activity_date": 1571837954, "creation_date": 1570113415, "last_edit_date": 1571837954, "question_id": 58221443, "link": "https://stackoverflow.com/questions/58221443/rust-cargo-toml-error-expected-item-found-when-trying-to-include-nalgebr", "title": "Rust: Cargo.toml error: expected item, found `[`, when trying to include nalgebra", "body": "<pre><code>[package]\nname = \"my package\"\nversion = \"0.1.0\"\nauthors = [\"me\"]\nedition = \"2018\"\n\n[dependencies]\nnalgebra = \"0.18.1\"\n</code></pre>\n\n<p>I tried to compile rust with above Cargo.toml but it gave me following error:</p>\n\n<pre><code>error: expected item, found `[`\n --&gt; Cargo.toml:1:1\n  |\n1 | [package]\n  | ^ expected item\n\nerror: aborting due to previous error\n</code></pre>\n\n<p>I can fix this if I remove <code>nalgebra = \"0.18.1\"</code>, but I can't use <code>nalgebra</code> package so it doesn't help me.</p>\n"}, {"tags": ["math", "rust"], "comments": [{"owner": {"reputation": 98400, "user_id": 3001761, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/feZwC.jpg?s=128&g=1", "display_name": "jonrsharpe", "link": "https://stackoverflow.com/users/3001761/jonrsharpe"}, "edited": false, "score": 0, "creation_date": 1570108841, "post_id": 58220039, "comment_id": 102815897, "body": "It&#39;s part of <a href=\"https://en.wikipedia.org/wiki/IEEE_754\" rel=\"nofollow noreferrer\">IEEE 754</a>, the <a href=\"https://doc.rust-lang.org/book/ch03-02-data-types.html#floating-point-types\" rel=\"nofollow noreferrer\">floating point</a> spec."}, {"owner": {"reputation": 15136, "user_id": 4044696, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/54xyv.jpg?s=128&g=1", "display_name": "Severin Pappadeux", "link": "https://stackoverflow.com/users/4044696/severin-pappadeux"}, "edited": false, "score": 0, "creation_date": 1570109018, "post_id": 58220039, "comment_id": 102816019, "body": "minus infinity!"}, {"owner": {"reputation": 138646, "user_id": 1081897, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b46b160c4e606ce0be84dae336ab25f0?s=128&d=identicon&r=PG&f=1", "display_name": "D Stanley", "link": "https://stackoverflow.com/users/1081897/d-stanley"}, "edited": false, "score": 3, "creation_date": 1570109161, "post_id": 58220039, "comment_id": 102816109, "body": "<code>0&#47;-10</code> would give you <code>0</code>, not <code>-inf</code>. Do you mean <code>-10&#47;0</code>?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 1, "creation_date": 1570109233, "post_id": 58220039, "comment_id": 102816169, "body": "&quot;I expected that -inf == -inf would return true but it didn&#39;t work.&quot; Can you be more specific? What specifically did you try and how did it not work? Negative infinity should indeed compare equal to itself and <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=36222fc5715b1d1688c1eaef3dfab913\" rel=\"nofollow noreferrer\">it does for me on the playground</a>"}, {"owner": {"reputation": 332774, "user_id": 263525, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/ec289925069b35f18f1230b90dc654e5?s=128&d=identicon&r=PG", "display_name": "Denys S&#233;guret", "link": "https://stackoverflow.com/users/263525/denys-s%c3%a9guret"}, "edited": false, "score": 1, "creation_date": 1570109530, "post_id": 58220039, "comment_id": 102816349, "body": "Please build a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. It&#39;s hard to understand what you tested and how you deduced that <code>-inf==-inf</code> is false."}], "answers": [{"comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 0, "creation_date": 1570112939, "post_id": 58221147, "comment_id": 102818309, "body": "@FrenchBoiethios Thanks, I&#39;ve added <code>NEG_INFINITY</code> to my answer."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 5, "last_activity_date": 1570112908, "last_edit_date": 1570112908, "creation_date": 1570112445, "answer_id": 58221147, "question_id": 58220039, "link": "https://stackoverflow.com/questions/58220039/ive-got-inf-when-calculating-on-rust-what-is-inf/58221147#58221147", "title": "I&#39;ve got `-inf` when calculating on rust: what is `-inf`?", "body": "<blockquote>\n  <p>what is <code>-inf</code>?</p>\n</blockquote>\n\n<p>It's negative infinity as defined in the IEEE floating point standard. It's the result of dividing negative floating point numbers by zero.</p>\n\n<blockquote>\n  <p>However, when I tried the following code, it didn't print true, instead it gave me an error.</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", (-10. / 0.) == -inf);\n}\n</code></pre>\n</blockquote>\n\n<p>Rust does not define a global variable or keyword named <code>inf</code>. So you can't use <code>inf</code> unless you first define (or import from somewhere) a variable with that name. <code>-inf</code> is just the string you get when converting negative infinity to a string. It's not a valid floating point literal by itself.</p>\n\n<blockquote>\n  <p>What value should I give instead of -inf to get true printed out?</p>\n</blockquote>\n\n<p>You could use the constants <code>INFINITY</code> or <code>NEG_INFINITY</code> from the given floating point type, such as <code>-10. / 0. == std::f64::NEG_INFINITY</code> or <code>-10. / 0. == -std::f64::INFINITY</code>. Or you could define <code>let inf = 1. / 0.;</code>, then <code>(-10. / 0.) == -inf</code> would be true. Or you could just directly write <code>-10. / 0. == -1. / 0.</code> or any other expression that results in negative infinity.</p>\n\n<blockquote>\n  <p>What type is <code>-inf</code>?</p>\n</blockquote>\n\n<p>The type of <code>-inf</code> is the same as that of the floating point numbers that you divided to get <code>-inf</code>. If you divide two <code>f32</code>s, you'll get an <code>f32</code>, and if you divide two <code>f64</code>s, you'll get an <code>f64</code>. If the type of the operands hasn't been decided yet, the type of the result will be <code>{float}</code> until a more concrete type has been decided.</p>\n\n<p>Note that this isn't any different than any other case of dividing two floating point numbers (or adding them, multiplying them etc.). In other words, <code>x / y</code> where <code>y</code> is 0. has the exact same type as <code>x / y</code> where <code>y</code> is any other floating point number.</p>\n"}, {"tags": [], "owner": {"reputation": 4491, "user_id": 1264974, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6558cf06df3ccf1c49329f38fd843b7d?s=128&d=identicon&r=PG", "display_name": "justinas", "link": "https://stackoverflow.com/users/1264974/justinas"}, "is_accepted": true, "score": 3, "last_activity_date": 1570112574, "creation_date": 1570112574, "answer_id": 58221180, "question_id": 58220039, "link": "https://stackoverflow.com/questions/58220039/ive-got-inf-when-calculating-on-rust-what-is-inf/58221180#58221180", "title": "I&#39;ve got `-inf` when calculating on rust: what is `-inf`?", "body": "<p>As stated by sepp2k, <code>-inf</code> is not valid Rust syntax. To check for infinite values, try <code>f64::is_finite()</code> or comparing to constants <code>std::f64::INFINITY</code> and <code>std::f64::NEG_INFINITY</code>.</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>fn main() {\n    let result: f64 = -10. / 0.;\n    println!(\"{}\", result.is_infinite()); // true\n    println!(\"{}\", result == std::f64::INFINITY); // false\n    println!(\"{}\", result == std::f64::NEG_INFINITY); // true\n}\n</code></pre>\n"}], "owner": {"reputation": 667, "user_id": 8448348, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/855c234f7351c596287c174e0a08cc22?s=128&d=identicon&r=PG&f=1", "display_name": "HelloWorld", "link": "https://stackoverflow.com/users/8448348/helloworld"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 506, "favorite_count": 0, "accepted_answer_id": 58221180, "answer_count": 2, "score": 2, "last_activity_date": 1570112908, "creation_date": 1570108723, "last_edit_date": 1570111527, "question_id": 58220039, "link": "https://stackoverflow.com/questions/58220039/ive-got-inf-when-calculating-on-rust-what-is-inf", "title": "I&#39;ve got `-inf` when calculating on rust: what is `-inf`?", "body": "<p>The following code produces the result <code>-inf</code>.</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", (-10. / 0.));\n}\n\n</code></pre>\n\n<p>However, when I tried the following code, it didn't print <code>true</code>, instead it gave me an error.</p>\n\n<pre><code>fn main() {\n    println!(\"{}\", (-10. / 0.) == -inf);\n}\n</code></pre>\n\n<p>What value should I give instead of <code>-inf</code> to get <code>true</code> printed out?</p>\n"}, {"tags": ["rust", "copy-on-write"], "comments": [{"owner": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "reply_to_user": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "edited": false, "score": 3, "creation_date": 1570092991, "post_id": 58212453, "comment_id": 102807450, "body": "@FrenchBoiethios: But you would need to add a <code>impl ToOwned for &amp;[u8]</code>. The <code>SmallVec</code> team would still suffer the orphan rule. And even if they weren&#39;t, there is already an implementation for this trait in <code>std</code>."}, {"owner": {"reputation": 25137, "user_id": 4498831, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/jDBV2.png?s=128&g=1", "display_name": "Boiethios", "link": "https://stackoverflow.com/users/4498831/boiethios"}, "reply_to_user": {"reputation": 79096, "user_id": 865874, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ACMnN.png?s=128&g=1", "display_name": "rodrigo", "link": "https://stackoverflow.com/users/865874/rodrigo"}, "edited": false, "score": 0, "creation_date": 1570093276, "post_id": 58212453, "comment_id": 102807615, "body": "@rodrigo Oh, you&#39;re right... What was I thinking..."}], "answers": [{"comments": [{"owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "edited": false, "score": 0, "creation_date": 1570523877, "post_id": 58282413, "comment_id": 102931082, "body": "Very nice answer. Thank you. I actually ran some benchmarks using the custom setup with SmallVec and it&#39;s actually slower (though lesser heap allocations) than the regular Vec case."}], "tags": [], "owner": {"reputation": 7716, "user_id": 4639273, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae38603d40c633012992337a32330fa0?s=128&d=identicon&r=PG", "display_name": "SCappella", "link": "https://stackoverflow.com/users/4639273/scappella"}, "is_accepted": true, "score": 1, "last_activity_date": 1570521997, "creation_date": 1570521997, "answer_id": 58282413, "question_id": 58212453, "link": "https://stackoverflow.com/questions/58212453/how-to-use-smallvec-with-cow/58282413#58282413", "title": "How to use SmallVec with Cow", "body": "<p>The fact of the matter is that <code>Cow&lt;'a, T&gt;</code> requires <code>T</code> to implement <code>ToOwned</code> and the owned version of the <code>Cow&lt;'a, T&gt;</code> is the associated type <code>Owned</code> of <code>ToOwned</code>. Moreover, <code>Owned</code>, has to implement <code>Borrow&lt;T&gt;</code>. As it stands, <code>Cow&lt;'a, [u8]&gt;</code> can <em>only</em> use <code>Vec&lt;u8&gt;</code> as its owned variant because <code>[T]</code> implements <code>ToOwned</code> with <code>Vec&lt;T&gt;</code> as the <code>Owned</code> associated type.</p>\n\n<p>I see two options for you. Either you can make your own implementation of <code>Cow</code> that uses different trait bounds (or as you suggested, simply specialize to your exact use-case), or you can use newtypes to wrap <code>[u8]</code> and <code>SmallVec&lt;A&gt;</code> and implement <code>ToOwned</code> on the wrapper for <code>[u8]</code> and <code>Borrow&lt;SliceWrapper&lt;u8&gt;&gt;</code> on the wrapper for <code>SmallVec&lt;A&gt;</code>. I'll concentrate on the latter since you seem to already have the former covered.</p>\n\n<p>A newtype is a wrapper that, in essence, declares a new type which is equivalent to the original type, but doesn't have any traits or methods. The usual way to do this is with a tuple struct.</p>\n\n<pre><code>use small_vec::{Array, SmallVec};\n\nstruct SmallVecWrap&lt;A: Array&gt;(SmallVec&lt;A&gt;);\n\nstruct SliceWrap&lt;T&gt;([T]);\n</code></pre>\n\n<p>Notice that <code>SliceWrap&lt;T&gt;</code> is an unsized type since <code>[T]</code> is, so we'll always use it behind a pointer. It's important that we do this, since when we implement <code>Borrow</code> on <code>SmallVecWrap&lt;A&gt;</code>, it'll be <code>Borrow&lt;SliceWrap&lt;T&gt;&gt;</code>, rather than <code>Borrow&lt;&amp;SliceWrap&lt;T&gt;&gt;</code>. That is, <code>Borrow</code> uses the unsized type as its type parameter (I suppose it <em>might</em> be possible to do without that, but you'd have an extra layer of indirection and you wouldn't be able to use mutating methods on the slice).</p>\n\n<p>The one major issue I ran into with this approach is that there doesn't seem to be a way to turn <code>&amp;[u8]</code> into <code>&amp;SliceWrap&lt;u8&gt;</code> without an unsafe block. This does make a certain amount of sense since without any extra information, the two types might be semantically different. For example, <code>NonZeroU8</code> is in a similar situation but it doesn't make sense to convert a <code>u8</code> into <code>NonZeroU8</code> without checking if it's zero. RFC #1909, unsized rvalues, may help with this, but I couldn't get it to work. I'll note that MIRI didn't find any problems when run on your testcase.</p>\n\n<p>The other problem with this approach is that you have to either always defer to the wrapped type (e.g. <code>v.0</code> in the example code) and then potentially rewrap the returned value or else reimplement all the traits and methods that you need. This same problem applies to the <code>SmallCow&lt;'a, A&gt;</code> approach, but you only need to implement <code>Cow&lt;'a, T&gt;</code>'s traits and methods, and there aren't as many of those.</p>\n\n<p>If you decide to always defer to the wrapped type's methods, you'll probably want to make the newtypes' fields public (e.g. <code>SliceWrap&lt;T&gt;(pub [T])</code>) so you can use them outside of this one module.</p>\n\n<p>The final issue with this approach is again with <code>ToOwned</code>. <code>ToOwned</code> requires a single type to convert into but <code>SmallVecWrap&lt;A&gt;</code> is not a single type, even if the type of the elements of <code>A</code> is fixed. For example, <code>&amp;[u8]</code> could validly be converted into <code>SmallVecWrap&lt;[u8, 1]&gt;</code>, <code>SmallVecWrap&lt;[u8, 2]&gt;</code>, etc. One possible workaround is to attach the type <code>A</code> to <code>SliceWrap&lt;T&gt;</code>:</p>\n\n<pre><code>struct SliceWrap&lt;T, A: Array&gt; {\n    array: std::marker::PhantomData&lt;A&gt;,\n    slice: [T],\n}\n</code></pre>\n\n<p>Then you could implement <code>ToOwned</code> for <code>SliceWrap&lt;T, A&gt;</code> with <code>Owned</code> as <code>SmallVecWrap&lt;A&gt;</code>.</p>\n\n<p>Anyway, here's the complete example.</p>\n\n<pre><code>use smallvec::{Array, SmallVec}; // 0.6.10\nuse std::borrow::{Borrow, Cow, ToOwned};\n\nstruct SmallVecWrap&lt;A: Array&gt;(SmallVec&lt;A&gt;);\n\n#[repr(transparent)]\nstruct SliceWrap&lt;T&gt;([T]);\n\nimpl&lt;T&gt; SliceWrap&lt;T&gt; {\n    // for convenience\n    fn from_slice(slice: &amp;[T]) -&gt; &amp;Self {\n        // As far as I can tell, there's no way to do this without unsafe.\n        // This should be safe since SliceWrap&lt;T&gt; is transparently a [T].\n        // All we're doing is changing a (fat) pointer to a [T]\n        // into a (fat) pointer to SliceWrap&lt;T&gt;.\n        // I won't claim expertise on this, though.\n        unsafe { &amp;*((slice as *const [T]) as *const SliceWrap&lt;T&gt;) }\n        //          ^                   ^\n        // These parentheses aren't needed, but it's clearer this way\n    }\n\n    // I guess we didn't need this\n    #[allow(dead_code)]\n    fn from_mut_slice(slice: &amp;mut [T]) -&gt; &amp;mut Self {\n        // Same caveats apply\n        unsafe { &amp;mut *((slice as *mut [T]) as *mut SliceWrap&lt;T&gt;) }\n    }\n}\n\nimpl&lt;A: Array&gt; Borrow&lt;SliceWrap&lt;A::Item&gt;&gt; for SmallVecWrap&lt;A&gt; {\n    fn borrow(&amp;self) -&gt; &amp;SliceWrap&lt;A::Item&gt; {\n        SliceWrap::from_slice(self.0.borrow())\n    }\n}\n\n// Note: We have to choose a particular array size\n// to use for the owned SmallVec&lt;A&gt;.\nconst OWNED_ARRAY_SIZE: usize = 4;\nimpl&lt;T: Clone&gt; ToOwned for SliceWrap&lt;T&gt; {\n    type Owned = SmallVecWrap&lt;[T; OWNED_ARRAY_SIZE]&gt;;\n\n    fn to_owned(&amp;self) -&gt; SmallVecWrap&lt;[T; OWNED_ARRAY_SIZE]&gt; {\n        SmallVecWrap(self.0.into())\n    }\n}\n\nfn main() {\n    let s = \"hello world\".to_owned();\n    let mut s = Cow::Borrowed(SliceWrap::from_slice(s.as_bytes()));\n    clear_subslice(&amp;mut s, 2, 6);\n}\n\nfn clear_subslice(text: &amp;mut Cow&lt;'_, SliceWrap&lt;u8&gt;&gt;, start: usize, end: usize) {\n    match text {\n        Cow::Borrowed(v) =&gt; {\n            if !v.0[start..end].iter().all(|&amp;c| c == b' ') {\n                let mut v = SmallVec::from_slice(&amp;v.0);\n                v[start..end].iter_mut().for_each(|c| *c = b' ');\n                *text = Cow::Owned(SmallVecWrap(v));\n            }\n        }\n        Cow::Owned(v) =&gt; {\n            v.0[start..end].iter_mut().for_each(|c| *c = b' ');\n        }\n    }\n}\n</code></pre>\n\n<p><a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=abe4a3450bbe2883e5032c966e5d7187\" rel=\"nofollow noreferrer\">(playground)</a></p>\n\n<hr>\n\n<p>A third option exists for you: don't use <code>SmallVec&lt;A&gt;</code> unless you've benchmarked and determined that these small allocations are significantly slowing down your program.</p>\n"}], "owner": {"reputation": 35470, "user_id": 6348498, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/0zu4m.jpg?s=128&g=1", "display_name": "Gurwinder Singh", "link": "https://stackoverflow.com/users/6348498/gurwinder-singh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 0, "accepted_answer_id": 58282413, "answer_count": 1, "score": 4, "last_activity_date": 1570521997, "creation_date": 1570077883, "last_edit_date": 1570090827, "question_id": 58212453, "link": "https://stackoverflow.com/questions/58212453/how-to-use-smallvec-with-cow", "title": "How to use SmallVec with Cow", "body": "<p>I want to use <code>SmallVec</code> with <code>Cow</code>. I tried this:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>use smallvec::SmallVec;\nuse std::borrow::Cow;\n\nfn main() {\n    let s = \"hello world\".to_owned();\n    let mut s = Cow::Borrowed(s.as_bytes());\n    clear_subslice(&amp;mut s, 2, 6);\n}\n\nfn clear_subslice(text: &amp;mut Cow&lt;'_, [u8]&gt;, start: usize, end: usize) {\n    match text {\n        Cow::Borrowed(v) =&gt; {\n            if !v[start..end].iter().all(|&amp;c| c == b' ') {\n                let mut v = SmallVec::from_slice(v);\n                v[start..end].iter_mut().for_each(|c| *c = b' ');\n                *text = Cow::Owned(v);\n            }\n        }\n        Cow::Owned(v) =&gt; {\n            v[start..end].iter_mut().for_each(|c| *c = b' ');\n        }\n    }\n}\n</code></pre>\n\n<pre class=\"lang-none prettyprint-override\"><code>error[E0271]: type mismatch resolving `&lt;[u8] as std::borrow::ToOwned&gt;::Owned == smallvec::SmallVec&lt;_&gt;`\n  --&gt; src/main.rs:16:25\n   |\n16 |                 *text = Cow::Owned(v);\n   |                         ^^^^^^^^^^^^^ expected struct `std::vec::Vec`, found struct `smallvec::SmallVec`\n   |\n   = note: expected type `std::vec::Vec&lt;u8&gt;`\n              found type `smallvec::SmallVec&lt;_&gt;`\n</code></pre>\n\n<p>It works only with types that have <code>ToOwned</code> implemented to a particular type. In this case, <code>&amp;[u8]</code> has <code>ToOwned</code> implemented with target <code>Vec</code>.</p>\n\n<p>I tried to implement <code>ToOwned</code> with target as <code>SmallVec</code> but without success.</p>\n\n<p>Is it possible to use <code>SmallVec</code> with <code>Cow</code>?</p>\n\n<p>One solution I know of is using a custom <code>Cow</code> enum:</p>\n\n<pre class=\"lang-rust prettyprint-override\"><code>pub enum SmallCow&lt;'a, A: Array&gt; {\n    Borrowed(&amp;'a [A::Item]),\n    Owned(SmallVec&lt;A&gt;),\n}\n</code></pre>\n\n<p>Is there any other way?</p>\n"}]